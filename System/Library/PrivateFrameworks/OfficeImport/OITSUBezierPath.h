//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <OfficeImport/NSCoding-Protocol.h>
#import <OfficeImport/NSCopying-Protocol.h>

__attribute__((visibility("hidden")))
@interface OITSUBezierPath : NSObject <NSCopying, NSCoding>
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x00000000002791fa
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x00000000002791ec
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x00000000002791df
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x00000000002791d2
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x00000000002791c5
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x00000000002791b8
+ (unsigned long long)defaultWindingRule;	// IMP=0x00000000002791ab
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x000000000027919e
+ (double)defaultFlatness;	// IMP=0x0000000000279190
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0000000000279182
+ (double)defaultMiterLimit;	// IMP=0x0000000000279174
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0000000000279166
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x00000000002790cb
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x00000000002790a1
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x0000000000278eee
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x0000000000278ec4
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x0000000000278cfd
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0000000000278cab
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000278c62
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000278c19
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0000000000278bac
+ (id)bezierPath;	// IMP=0x0000000000278b9a
+ (void)initialize;	// IMP=0x0000000000278b5a
+ (double)lineWidth;	// IMP=0x000000000027ebb4
+ (void)setLineWidth:(double)arg1;	// IMP=0x000000000027eba2
+ (unsigned long long)lineJoinStyle;	// IMP=0x000000000027eb90
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x000000000027eb7e
+ (unsigned long long)lineCapStyle;	// IMP=0x000000000027eb6c
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000027eb5a
+ (unsigned long long)windingRule;	// IMP=0x000000000027eb48
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x000000000027eb36
+ (double)flatness;	// IMP=0x000000000027eb24
+ (void)setFlatness:(double)arg1;	// IMP=0x000000000027eb12
+ (double)miterLimit;	// IMP=0x000000000027eb00
+ (void)setMiterLimit:(double)arg1;	// IMP=0x000000000027eaee
- (id)initWithCString:(const char *)arg1;	// IMP=0x000000000027e128
- (const char *)cString;	// IMP=0x000000000027de0c
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000027d5f9
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000027cf58
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x000000000027ced4
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x000000000027cb15
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000027cafe
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x000000000027c81e
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x000000000027c701
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x000000000027c52c
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x000000000027c481
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x000000000027c370
- (void)appendBezierPath:(id)arg1;	// IMP=0x000000000027c35c
- (void)appendBezierPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x000000000027c16c
- (void)_appendToPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x000000000027c013
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x000000000027bf3e
- (long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x000000000027be61
- (long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x000000000027bda2
- (long long)elementAtIndex:(long long)arg1;	// IMP=0x000000000027bd8e
- (long long)elementCount;	// IMP=0x000000000027bd84
- (double)lengthToElement:(long long)arg1;	// IMP=0x000000000027bcd4
- (double)lengthOfElement:(long long)arg1;	// IMP=0x000000000027bc9f
- (double)length;	// IMP=0x000000000027bc71
- (void)calculateLengths;	// IMP=0x000000000027bbca
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x000000000027bb2c
- (_Bool)isClockwise;	// IMP=0x000000000027b906
- (_Bool)isFlat;	// IMP=0x000000000027b8f5
- (struct CGRect)bounds;	// IMP=0x000000000027b86c
- (struct CGRect)controlPointBounds;	// IMP=0x000000000027b705
- (struct CGPoint)currentPoint;	// IMP=0x000000000027b6a5
- (_Bool)isEmpty;	// IMP=0x000000000027b697
- (_Bool)isCircular;	// IMP=0x000000000027b483
- (_Bool)isRectangular;	// IMP=0x000000000027b116
- (_Bool)isDiamond;	// IMP=0x000000000027aec9
- (_Bool)isTriangular;	// IMP=0x000000000027ad6e
- (struct CGPath *)CGPath;	// IMP=0x000000000027ad30
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x000000000027abe0
- (id)p_bezierPathByRemovingRedundantElementAndSubregionsSmallerThanThreshold:(double)arg1;	// IMP=0x000000000027a6bb
- (id)bezierPathByRemovingRedundantElements;	// IMP=0x000000000027a6a6
- (id)bezierPathByRemovingSmallSubpathsForInteriorWrapsForInset:(double)arg1;	// IMP=0x000000000027a690
- (id)bezierPathByReversingPath;	// IMP=0x000000000027a4bb
- (id)_copyFlattenedPath;	// IMP=0x000000000027a486
- (id)bezierPathByFlatteningPathWithFlatness:(double)arg1;	// IMP=0x000000000027a412
- (id)bezierPathByFlatteningPath;	// IMP=0x000000000027a3f8
- (void)flattenIntoPath:(id)arg1 flatness:(double)arg2;	// IMP=0x000000000027a2c2
- (void)flattenIntoPath:(id)arg1;	// IMP=0x000000000027a2a8
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x000000000027a0fc
- (void)addClip;	// IMP=0x0000000000279fd8
- (void)fill;	// IMP=0x0000000000279eb4
- (void)stroke;	// IMP=0x0000000000279d44
- (void)_doPath;	// IMP=0x0000000000279b98
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;	// IMP=0x0000000000279b34
- (_Bool)_isValid:(double)arg1;	// IMP=0x0000000000279b0e
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x0000000000279ab9
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000002799df
- (void)setFlatness:(double)arg1;	// IMP=0x00000000002799d4
- (double)flatness;	// IMP=0x00000000002799c9
- (void)setMiterLimit:(double)arg1;	// IMP=0x00000000002799be
- (double)miterLimit;	// IMP=0x00000000002799b3
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0000000000279997
- (unsigned long long)windingRule;	// IMP=0x0000000000279985
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0000000000279969
- (unsigned long long)lineJoinStyle;	// IMP=0x0000000000279957
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000027993d
- (unsigned long long)lineCapStyle;	// IMP=0x000000000027992b
- (void)setLineWidth:(double)arg1;	// IMP=0x0000000000279920
- (double)lineWidth;	// IMP=0x0000000000279915
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000279883
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000279839
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002797ef
- (void)removeAllPoints;	// IMP=0x000000000027978e
- (void)closePath;	// IMP=0x000000000027977c
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000002796e3
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000279675
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000279663
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000279611
- (void)copyPathAttributesTo:(id)arg1;	// IMP=0x000000000027951b
- (unsigned long long)hash;	// IMP=0x0000000000279509
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000027935b
- (void)dealloc;	// IMP=0x00000000002792cb
- (id)init;	// IMP=0x0000000000279208
- (void)_deviceClosePath;	// IMP=0x000000000027e9ae
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x000000000027e84d
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027e815
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027e788
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x000000000027e5f7
- (id)description;	// IMP=0x000000000027ebc6
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x000000000029486c
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x0000000000294367
- (void)attachBezierPath:(id)arg1;	// IMP=0x0000000000370be4

@end

