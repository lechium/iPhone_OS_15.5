//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface CMShapeUtils : NSObject
{
}

+ (int)radToFixedPointDeg:(double)arg1;	// IMP=0x000000000046c659
+ (double)fixedPointDegToRad:(int)arg1;	// IMP=0x000000000046c647
+ (float)fontSizeForText:(id)arg1 insideRectangle:(struct CGSize)arg2;	// IMP=0x00000000001ec072
+ (float)intersectionAngleNextToAngle:(float)arg1 isAfter:(_Bool)arg2 nodeSize:(struct CGSize)arg3;	// IMP=0x000000000022f3ac
+ (double)getFormulaResultFromCustomGeometry:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000164138
+ (double)mapFormulaOfType:(int)arg1 argValues:(double *)arg2 isEscher:(_Bool)arg3;	// IMP=0x00000000001645c5
+ (double)mapAdjustCoord:(struct OADAdjustCoord)arg1 geometry:(id)arg2;	// IMP=0x000000000015889a
+ (id)transformedBoundsWithBounds:(id)arg1 transform:(id)arg2;	// IMP=0x00000000002287e7
+ (id)relatvieBoundsWithAbsoluteInnerBounds:(id)arg1 parentBounds:(id)arg2;	// IMP=0x00000000001ea8f7
+ (id)internalBoundsWithBounds:(id)arg1 scaleBounds:(struct CGRect)arg2;	// IMP=0x00000000001ec104
+ (id)inscribedBoundsWithBounds:(id)arg1 logicalBounds:(struct CGRect)arg2;	// IMP=0x00000000001ea5ec
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)arg1 parentOrientedBounds:(id)arg2 parentLogicalBounds:(struct CGRect)arg3;	// IMP=0x000000000046c346
+ (id)transformFromBounds:(struct CGRect)arg1 toOrientedBounds:(id)arg2;	// IMP=0x000000000010c71b
+ (struct CGRect)transformRect:(struct CGRect)arg1 scale:(float)arg2 offsetX:(float)arg3 offsetY:(float)arg4;	// IMP=0x00000000002197d1
+ (float)scaleFactorFromLength:(float)arg1 toLength:(float)arg2;	// IMP=0x000000000010cb08
+ (void)setCoordSpaceForCustomeGeometry:(id)arg1 fromSize:(struct CGSize)arg2;	// IMP=0x00000000001de9d5
+ (_Bool)isShapeALine:(id)arg1;	// IMP=0x0000000000158fb9
+ (int)mapFormulaKeywordValue:(int)arg1 geometry:(id)arg2;	// IMP=0x000000000016444b
+ (float)normalizedAngle:(float)arg1;	// IMP=0x000000000022f75f
+ (int)radToMilliMinutes:(double)arg1;	// IMP=0x000000000046c6b1
+ (double)milliMinutesToRad:(int)arg1;	// IMP=0x00000000001dea33
+ (int)radToNativeAngle:(double)arg1 isEscher:(_Bool)arg2;	// IMP=0x000000000046c68d
+ (double)nativeAngleToRad:(int)arg1 isEscher:(_Bool)arg2;	// IMP=0x00000000001dea0f

@end

