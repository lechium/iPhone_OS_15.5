//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface NUVideoUtilities : NSObject
{
}

+ (struct CGAffineTransform)preferredTransformFromOrientation:(long long)arg1 size:(CDStruct_912cb5d2)arg2;	// IMP=0x000000000010740d
+ (id)urlOfAVAsset:(id)arg1;	// IMP=0x0000000000106f4c
+ (id)compositionFromVideoComposition:(id)arg1;	// IMP=0x0000000000106a6b
+ (id)pixelFormatStringForCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x00000000001069c5
+ (id)debugDescriptionOfAssetTrack:(id)arg1;	// IMP=0x00000000001068ce
+ (id)cleanApertureVideoSettingsFor:(CDStruct_996ac03c)arg1 scale:(CDStruct_912cb5d2)arg2 videoSize:(CDStruct_912cb5d2)arg3;	// IMP=0x00000000001066be
+ (_Bool)compositionInstructions:(id)arg1 areEqualToCompositionInstructions:(id)arg2;	// IMP=0x0000000000106515
+ (id)videoCompositionDescription:(id)arg1;	// IMP=0x000000000010603c
+ (id)videoDescription:(id)arg1;	// IMP=0x0000000000105d68
+ (id)repeatVideo:(id)arg1 count:(long long)arg2 error:(out id *)arg3;	// IMP=0x0000000000104cf7
+ (id)repeatAudio:(id)arg1 count:(long long)arg2 error:(out id *)arg3;	// IMP=0x0000000000103d57
+ (id)repeatVideoComposition:(id)arg1 count:(long long)arg2 error:(out id *)arg3;	// IMP=0x0000000000102d20
+ (CDStruct_e83c9415)conformRange:(CDStruct_e83c9415)arg1 inRange:(CDStruct_e83c9415)arg2;	// IMP=0x0000000000102b6d
+ (id)newPixelBufferOfSize:(CDStruct_912cb5d2)arg1 format:(unsigned int)arg2;	// IMP=0x00000000001029df
+ (CDStruct_996ac03c)cleanApertureOfTrack:(id)arg1 oriented:(_Bool)arg2;	// IMP=0x0000000000102825
+ (CDStruct_912cb5d2)encodedPixelSizeOfTrack:(id)arg1 oriented:(_Bool)arg2;	// IMP=0x000000000010267d
+ (CDStruct_912cb5d2)naturalSizeOfTrack:(id)arg1 oriented:(_Bool)arg2;	// IMP=0x00000000001024f4
+ (long long)videoOrientationForAsset:(id)arg1 videoComposition:(id)arg2;	// IMP=0x0000000000102396
+ (long long)videoOrientationForAssetPreferredTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000102350
+ (id)readTimedMetadataGroupAtTime:(CDStruct_1b6d18a9)arg1 fromTrack:(id)arg2 outputSettings:(id)arg3 videoComposition:(id)arg4 error:(out id *)arg5;	// IMP=0x0000000000101dba
+ (struct __CVBuffer *)readVideoFrameAtTime:(CDStruct_1b6d18a9)arg1 fromAsset:(id)arg2 outputSettings:(id)arg3 videoComposition:(id)arg4 auxiliaryImageType:(long long)arg5 error:(out id *)arg6;	// IMP=0x000000000010178b
+ (id)readerOutputForAsset:(id)arg1 outputSettings:(id)arg2 videoComposition:(id)arg3 auxiliaryImageType:(long long)arg4 error:(out id *)arg5;	// IMP=0x0000000000101202
+ (id)requiredVideoCompositionOutputTracksForAsset:(id)arg1;	// IMP=0x0000000000101151
+ (id)deepMutableCopyVideoComposition:(id)arg1;	// IMP=0x0000000000100c38
+ (_Bool)updateVideoMetadataAtURL:(id)arg1 withItems:(id)arg2 stillImageTime:(CDStruct_1b6d18a9)arg3 error:(out id *)arg4;	// IMP=0x000000000010013b
+ (_Bool)readFromReader:(id)arg1 andWriteToWriter:(id)arg2 stillImageTime:(CDStruct_1b6d18a9)arg3 createCustomMetadata:(_Bool)arg4 geometryTransform:(id)arg5 inputSize:(struct CGSize)arg6 outputSize:(struct CGSize)arg7 progress:(id)arg8 error:(out id *)arg9;	// IMP=0x00000000000fe967
+ (CDStruct_1b6d18a9)readStillImageTimeFromVideoAsset:(id)arg1;	// IMP=0x00000000000fe68f
+ (_Bool)isAssetUnsupportedCorruptPortraitVideo:(id)arg1;	// IMP=0x00000000000fe401
+ (_Bool)track:(id)arg1 hasSamplesForEachSampleInTrack:(id)arg2;	// IMP=0x00000000000fdb8e
+ (_Bool)isAssetUnsupportedLegacyPortraitVideo:(id)arg1;	// IMP=0x00000000000fd869
+ (id)metadataTrackWithPortraitVideoDataInAsset:(id)arg1;	// IMP=0x00000000000fd6f8
+ (_Bool)metadataTrackContainsPortraitVideoData:(id)arg1;	// IMP=0x00000000000fd6df
+ (id)metadataTrackWithStillImageDimensionsInLivePhotoAsset:(id)arg1;	// IMP=0x00000000000fd56e
+ (id)metadataTrackWithStillImageTransformInLivePhotoAsset:(id)arg1;	// IMP=0x00000000000fd3fd
+ (id)metadataTrackWithStillImageDisplayTimeMarkerInLivePhotoAsset:(id)arg1;	// IMP=0x00000000000fd28c
+ (_Bool)videoTrackContainsDolbyVisionMetadata:(id)arg1;	// IMP=0x00000000000fcfaa
+ (_Bool)isMetadataTrackWithLivePhotoInfo:(id)arg1;	// IMP=0x00000000000fcf8e
+ (_Bool)isMetadataTrackWithStillImageDimensionsInLivePhoto:(id)arg1;	// IMP=0x00000000000fcf75
+ (_Bool)isMetadataTrackWithStillImageTransformInLivePhoto:(id)arg1;	// IMP=0x00000000000fcf59
+ (_Bool)isMetadataTrackStillImageDisplayTimeMarkerInLivePhoto:(id)arg1;	// IMP=0x00000000000fcf3d
+ (_Bool)metadataTrack:(id)arg1 containsIdentifiers:(id)arg2;	// IMP=0x00000000000fcd6d
+ (_Bool)metadataTrack:(id)arg1 containsIdentifier:(id)arg2;	// IMP=0x00000000000fccc6
+ (void)readNextSampleBuffer:(id)arg1 output:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000000fc51c
+ (void)readNextPixelBuffer:(id)arg1 output:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000000fbb3a
+ (CDStruct_1b6d18a9)minimumFrameDurationForAssetTrack:(id)arg1;	// IMP=0x00000000000fba3f
+ (CDStruct_1b6d18a9)minimumFrameDurationForAsset:(id)arg1 videoComposition:(id)arg2;	// IMP=0x00000000000fb601
+ (CDStruct_1b6d18a9)minimumFrameDurationForAsset:(id)arg1;	// IMP=0x00000000000fb49c
+ (id)auxiliaryTrackInAsset:(id)arg1 ofType:(long long)arg2 error:(out id *)arg3;	// IMP=0x00000000000fb43f
+ (id)firstEnabledVideoTrackInAsset:(id)arg1 error:(out id *)arg2;	// IMP=0x00000000000faa3f
+ (id)bestOutputSettingsPresetForTargetVideoSize:(CDStruct_912cb5d2)arg1 codec:(unsigned int)arg2;	// IMP=0x00000000000fa8b3
+ (_Bool)isAVAssetDolbyProfile5:(id)arg1 error:(out id *)arg2;	// IMP=0x00000000000fa6f5
+ (_Bool)isAVAssetHDR:(id)arg1 error:(out id *)arg2;	// IMP=0x00000000000fa5e9
+ (id)defaultOutputColorSpaceForComposition:(id)arg1;	// IMP=0x00000000000fa5e1
+ (id)defaultExportCodecForComposition:(id)arg1;	// IMP=0x00000000000fa48e
+ (_Bool)deviceSupportsHighDynamicRangeVideo;	// IMP=0x00000000000fa475
+ (_Bool)deviceSupportsHardware10BitHEVCEncoding;	// IMP=0x00000000000fa455
+ (_Bool)deviceSupportsHardwareHEVCEncoding;	// IMP=0x00000000000fa43c
+ (id)rgbVideoSettingsForAVAssetReader;	// IMP=0x00000000000fa40c
+ (id)defaultVideoSettingsForAVAssetReaderWithHDR:(_Bool)arg1 forAuxiliaryImageType:(long long)arg2;	// IMP=0x00000000000fa3b2

@end

