//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NeutrinoCore/NSCopying-Protocol.h>

@class MISSING_TYPE;

@interface NUCropModel : NSObject <NSCopying>
{
    MISSING_TYPE *_imageCenter;	// 16 = 0x10
    struct CGRect _cropRect;	// 32 = 0x20
    double _pitchRadians;	// 64 = 0x40
    double _yawRadians;	// 72 = 0x48
    double _rollRadians;	// 80 = 0x50
    double _fovRadians;	// 88 = 0x58
    _Bool _isAutoCrop;	// 96 = 0x60
    unsigned long long _hitVertexID;	// 104 = 0x68
    CDStruct_d58201db _aspectRatio;	// 112 = 0x70
    struct CGRect _masterImageRect;	// 128 = 0x80
    struct CGRect _stitchedImageRect;	// 160 = 0xa0
}

+ (double)defaultFocalLength;	// IMP=0x00000000000cffc2
+ (CDStruct_912cb5d2)freeFormAspectRatio;	// IMP=0x00000000000cffb8
+ (CDStruct_14d5dc5e)_imageTransformFromPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3 imageRect:(struct CGRect)arg4;	// IMP=0x00000000000cf08b
@property(nonatomic) _Bool isAutoCrop; // @synthesize isAutoCrop=_isAutoCrop;
@property(readonly) unsigned long long hitVertexID; // @synthesize hitVertexID=_hitVertexID;
@property(nonatomic) CDStruct_912cb5d2 aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(readonly, nonatomic) struct CGRect stitchedImageRect; // @synthesize stitchedImageRect=_stitchedImageRect;
@property(readonly, nonatomic) double fovRadians; // @synthesize fovRadians=_fovRadians;
@property(readonly, nonatomic) struct CGRect masterImageRect; // @synthesize masterImageRect=_masterImageRect;
@property(readonly, nonatomic) double rollDegreeUI;
@property(readonly, nonatomic) double yawDegreeUI;
@property(readonly, nonatomic) double pitchDegreeUI;
@property(nonatomic) double rollRadians;
@property(nonatomic) double yawRadians;
@property(nonatomic) double pitchRadians;
- (CDStruct_912cb5d2)originalAspectRatio;	// IMP=0x00000000000ce71e
- (_Bool)aspectRatioIsFreeForm;	// IMP=0x00000000000ce705
- (_Bool)aspectRatioIsOriginal;	// IMP=0x00000000000ce6cb
- (CDStruct_912cb5d2)_currentAspectRatio:(struct CGRect)arg1;	// IMP=0x00000000000ce690
- (double)_currentAspectAsDouble:(struct CGRect)arg1;	// IMP=0x00000000000ce650
- (void)makeCurrentFreeFormAspectFixed;	// IMP=0x00000000000ce632
- (void)makeCurrentAspectRatioFreeForm;	// IMP=0x00000000000ce602
- (unsigned long long)setAspectRatio:(CDStruct_912cb5d2)arg1 constrainCropRect:(struct CGRect)arg2 withTargetArea:(double)arg3;	// IMP=0x00000000000ce42c
- (unsigned long long)setYawAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2 startRect:(struct CGRect)arg3 startAngle:(double)arg4;	// IMP=0x00000000000ce14d
- (unsigned long long)setPitchAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2 startRect:(struct CGRect)arg3 startAngle:(double)arg4;	// IMP=0x00000000000cde66
- (unsigned long long)setRollAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2 startRect:(struct CGRect)arg3 startAngle:(double)arg4;	// IMP=0x00000000000cdb4c
- (unsigned long long)setYawAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2;	// IMP=0x00000000000cdb1b
- (unsigned long long)setPitchAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2;	// IMP=0x00000000000cdaea
- (unsigned long long)setRollAngle:(double)arg1 constrainCropRectWithTargetArea:(double)arg2;	// IMP=0x00000000000cdab9
- (unsigned long long)constrainedMoveCropRectBy:(struct CGVector)arg1 strict:(_Bool)arg2 startRect:(struct CGRect)arg3;	// IMP=0x00000000000cd561
- (unsigned long long)constrainedMoveCropRectBy:(struct CGVector)arg1 strict:(_Bool)arg2;	// IMP=0x00000000000cd535
- (unsigned long long)constrainedMoveCropRectBy:(struct CGVector)arg1;	// IMP=0x00000000000cd51e
- (struct CGRect)getCropRectThatCompletelyContainsMasterImageForPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3;	// IMP=0x00000000000ccfb5
- (struct CGRect)getCropRect:(struct CGRect)arg1 newCropRect:(struct CGRect)arg2 pitch:(double)arg3 yaw:(double)arg4 roll:(double)arg5 constrainWithAnchorPoint:(struct CGPoint)arg6 strict:(_Bool)arg7 aspectRatioIsFreeForm:(_Bool)arg8 hitVertexId:(unsigned long long *)arg9;	// IMP=0x00000000000cb4fc
- (struct CGRect)_expandedCropRectForZoom:(struct CGRect)arg1 candidateRect:(struct CGRect)arg2;	// IMP=0x00000000000cb2bf
- (unsigned long long)setForZoomCropRect:(struct CGRect)arg1 newCropRect:(struct CGRect)arg2;	// IMP=0x00000000000caef1
- (unsigned long long)setCropRect:(struct CGRect)arg1 newCropRect:(struct CGRect)arg2 constrainWithAnchorPoint:(struct CGPoint)arg3 strict:(_Bool)arg4;	// IMP=0x00000000000cadfb
- (unsigned long long)setCropRect:(struct CGRect)arg1 newCropRect:(struct CGRect)arg2 constrainWithAnchorPoint:(struct CGPoint)arg3;	// IMP=0x00000000000cade4
- (unsigned long long)setCropRect:(struct CGRect)arg1 constrainWithAnchorPoint:(struct CGPoint)arg2;	// IMP=0x00000000000cadae
- (_Bool)imageContainsRect:(struct CGRect)arg1 withTol:(double)arg2;	// IMP=0x00000000000cad11
- (_Bool)canGrowCropRect:(struct CGRect)arg1 constrainWithAnchorPoint:(struct CGPoint)arg2 strict:(_Bool)arg3 withTol:(double)arg4;	// IMP=0x00000000000cac26
- (struct CGRect)_anchorAlignedRectFromCandidate:(struct CGRect)arg1 withAnchor:(struct CGPoint)arg2;	// IMP=0x00000000000cab23
- (void)_debugPrintHitMask:(unsigned long long)arg1;	// IMP=0x00000000000ca9e3
- (void)_debugPrintHitMask;	// IMP=0x00000000000ca9cd
- (unsigned long long)_hitMaskFromRect:(struct CGRect)arg1 withTol:(double)arg2;	// IMP=0x00000000000ca851
- (unsigned long long)_hitMaskFromRect:(struct CGRect)arg1;	// IMP=0x00000000000ca837
- (void)_setCropRectWithConstantSize:(struct CGRect)arg1;	// IMP=0x00000000000ca505
- (void)_setCropRect:(struct CGRect)arg1 anchor:(struct CGPoint)arg2;	// IMP=0x00000000000c9d15
- (void)_setCropRect:(struct CGRect)arg1;	// IMP=0x00000000000c9c98
@property struct CGRect cropRect;
- (struct CGRect)_integralCropRect:(struct CGRect)arg1 straightenAngle:(double)arg2 anchorPoint:(struct CGPoint)arg3;	// IMP=0x00000000000c9863
- (struct CGRect)integralCropRect:(struct CGRect)arg1;	// IMP=0x00000000000c980b
- (CDStruct_14d5dc5e)_getBoundingQuadFromPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3 withExpansionTol:(double)arg4 imageRect:(struct CGRect)arg5;	// IMP=0x00000000000c94fb
- (CDStruct_14d5dc5e)_getBoundingQuadFromPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3 withExpansionTol:(double)arg4;	// IMP=0x00000000000c9434
- (struct Quad2d)_getBoundingQuadFromPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3 imageRect:(struct CGRect)arg4;	// IMP=0x00000000000c93cc
- (struct Quad2d)_getBoundingQuadFromPitch:(double)arg1 yaw:(double)arg2 roll:(double)arg3;	// IMP=0x00000000000c9375
- (struct Quad2d)_getBoundingQuad;	// IMP=0x00000000000c9347
- (_Bool)_hasDefaultValues;	// IMP=0x00000000000c9232
- (void)_setToDefaultValues;	// IMP=0x00000000000c918a
- (struct CGRect)_defaultCropRect;	// IMP=0x00000000000c916c
- (MISSING_TYPE *)_defaultImageCenter;	// IMP=0x00000000000c9113
- (struct CGRect)_widestCropRect;	// IMP=0x00000000000c90ce
- (id)description;	// IMP=0x00000000000c8fe0
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000c8f39
- (_Bool)isEqualToCropModel:(id)arg1;	// IMP=0x00000000000c8c57
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000c8be0
- (unsigned long long)hash;	// IMP=0x00000000000c8bb1
@property(readonly, nonatomic) struct CGSize stitchedImageSize;
@property(readonly) _Bool cropNeedsOvercapture;
@property(readonly, nonatomic) _Bool hasOvercapture;
@property(readonly, nonatomic) struct CGSize masterImageSize;
@property(readonly) _Bool hasCrop;
- (void)reset;	// IMP=0x00000000000c8a4c
- (id)copyWithMasterImageSize:(struct CGSize)arg1 fovRadians:(double)arg2;	// IMP=0x00000000000c82ba
- (id)initWithMasterImageRect:(struct CGRect)arg1 stitchedImageRect:(struct CGRect)arg2;	// IMP=0x00000000000c787b
- (id)initWithMasterImageSize:(struct CGSize)arg1 stitchedImageSize:(struct CGSize)arg2;	// IMP=0x00000000000c772e
- (id)initWithMasterImageSize:(struct CGSize)arg1 fovRadians:(double)arg2;	// IMP=0x00000000000c706d
- (id)initWithMasterImageRect:(struct CGRect)arg1;	// IMP=0x00000000000c6963
- (id)initWithMasterImageSize:(struct CGSize)arg1;	// IMP=0x00000000000c6926
- (id)init;	// IMP=0x00000000000c6596

@end

