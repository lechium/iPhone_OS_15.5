//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSCache, NSMutableArray, NSMutableDictionary, NSString, _PASSqliteStatementCache;
@protocol _PASSqliteErrorHandlerProtocol;

@interface _PASSqliteDatabase : NSObject
{
    struct sqlite3 *_db;	// 8 = 0x8
    int _transactionDepth;	// 16 = 0x10
    _Bool _transactionRolledback;	// 20 = 0x14
    struct atomic_flag _isClosed;	// 21 = 0x15
    NSObject<_PASSqliteErrorHandlerProtocol> *_errorHandler;	// 24 = 0x18
    NSString *_filename;	// 32 = 0x20
    struct _opaque_pthread_mutex_t _lock;	// 40 = 0x28
    NSMutableArray *_statementsToFinalizeAsync;	// 104 = 0x68
    _Bool _currentExclusivity;	// 112 = 0x70
    NSMutableDictionary *_explainedQueryForPlan;	// 120 = 0x78
    NSCache *_explainedQueriesLogged;	// 128 = 0x80
    struct __sFILE {
        char *_field1;
        int _field2;
        int _field3;
        short _field4;
        short _field5;
        struct __sbuf _field6;
        int _field7;
        void *_field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        struct __sbuf _field13;
        struct __sFILEX *_field14;
        int _field15;
        unsigned char _field16[3];
        unsigned char _field17[1];
        struct __sbuf _field18;
        int _field19;
        long long _field20;
    } *_explainedQueriesLogFile;	// 136 = 0x88
    _PASSqliteStatementCache *_statementCache;	// 144 = 0x90
    _Bool _preparedForFirstQuery;	// 152 = 0x98
    _Bool _isInMemory;	// 153 = 0x99
    long long _contentProtectionType;	// 160 = 0xa0
}

+ (id)corruptionMarkerPathForPath:(id)arg1;	// IMP=0x0000000000054efe
+ (void)runDebugCommand:(const char *)arg1 onDbWithHandle:(id)arg2;	// IMP=0x0000000000054e64
+ (void)truncateDatabaseAtPath:(id)arg1;	// IMP=0x0000000000054ae6
+ (id)randomlyNamedInMemoryPathWithBaseName:(id)arg1;	// IMP=0x00000000000549f0
+ (id)inMemoryPath;	// IMP=0x00000000000549e3
+ (_Bool)isInMemoryPath:(id)arg1;	// IMP=0x0000000000054982
+ (id)protectedDatabaseWithFilename:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000054966
+ (id)protectedDatabaseWithFilename:(id)arg1 error:(id *)arg2 errorHandler:(id)arg3;	// IMP=0x000000000005494c
+ (id)sqliteDatabaseInMemoryWithError:(id *)arg1;	// IMP=0x0000000000054931
+ (id)sqliteDatabaseInMemoryWithError:(id *)arg1 errorHandler:(id)arg2;	// IMP=0x00000000000548c9
+ (id)sqliteDatabaseWithFilename:(id)arg1 contentProtection:(long long)arg2 error:(id *)arg3;	// IMP=0x00000000000548aa
+ (id)sqliteDatabaseWithFilename:(id)arg1 contentProtection:(long long)arg2 errorHandler:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000054826
+ (id)sqliteDatabaseWithFilename:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005480a
+ (id)sqliteDatabaseWithFilename:(id)arg1 error:(id *)arg2 errorHandler:(id)arg3;	// IMP=0x00000000000547e9
+ (id)sqliteDatabaseWithFilename:(id)arg1 flags:(int)arg2 error:(id *)arg3;	// IMP=0x00000000000547cd
+ (id)sqliteDatabaseWithFilename:(id)arg1 flags:(int)arg2 error:(id *)arg3 errorHandler:(id)arg4;	// IMP=0x0000000000054746
+ (id)recreateCorruptDatabase:(id)arg1 withContentProtection:(long long)arg2;	// IMP=0x0000000000054451
+ (id)initializeDatabase:(id)arg1 withProtection:(_Bool)arg2 newDatabaseCreated:(_Bool *)arg3;	// IMP=0x0000000000054432
+ (id)initializeDatabase:(id)arg1 withContentProtection:(long long)arg2 newDatabaseCreated:(_Bool *)arg3;	// IMP=0x0000000000054416
+ (id)initializeDatabase:(id)arg1 withContentProtection:(long long)arg2 newDatabaseCreated:(_Bool *)arg3 errorHandler:(id)arg4;	// IMP=0x0000000000053ead
+ (_Bool)contentProtectionTypeRequiresDeviceToHaveBeenUnlockedOnce:(long long)arg1;	// IMP=0x0000000000053ea1
+ (_Bool)contentProtectionTypeRequiresDeviceToBeUnlocked:(long long)arg1;	// IMP=0x0000000000053e8c
- (void).cxx_destruct;	// IMP=0x0000000000050379
@property(readonly, nonatomic) long long contentProtectionType; // @synthesize contentProtectionType=_contentProtectionType;
@property(readonly, nonatomic) _Bool isInMemory; // @synthesize isInMemory=_isInMemory;
@property(readonly, nonatomic) NSString *filename; // @synthesize filename=_filename;
- (void)disableQueryPlanLogging;	// IMP=0x000000000005030a
- (_Bool)enableQueryPlanLoggingWithPath:(id)arg1;	// IMP=0x00000000000501a2
- (id)languageForFTSTable:(id)arg1;	// IMP=0x0000000000050027
- (void)withDbLockExecuteBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000004feb4
- (unsigned long long)numberOfRowsInTable:(id)arg1;	// IMP=0x000000000004fd74
- (_Bool)hasIndexNamed:(id)arg1;	// IMP=0x000000000004fc55
- (_Bool)hasColumnOnTable:(id)arg1 named:(id)arg2;	// IMP=0x000000000004fb15
- (id)tablesWithColumnNamed:(id)arg1;	// IMP=0x000000000004f996
- (_Bool)hasTableNamed:(id)arg1;	// IMP=0x000000000004f877
- (_Bool)setUserVersion:(unsigned int)arg1;	// IMP=0x000000000004f709
- (unsigned int)userVersion;	// IMP=0x000000000004f5e2
- (_Bool)createSnapshot:(id)arg1;	// IMP=0x000000000004f289
- (id)description;	// IMP=0x000000000004f210
- (struct _PASDBTransactionCompletion_)_transactionWithExclusivity:(_Bool)arg1 transaction:(CDUnknownBlockType)arg2;	// IMP=0x000000000004f107
- (void)_txnEnd;	// IMP=0x000000000004f0e5
- (void)_txnRollback;	// IMP=0x000000000004f0c3
- (void)_txnBeginExclusive;	// IMP=0x000000000004f0a1
- (void)_txnBegin;	// IMP=0x000000000004f07f
- (struct _PASDBTransactionCompletion_)writeTransactionWithFailableBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000004f065
- (struct _PASDBTransactionCompletion_)readTransactionWithFailableBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000004f04e
- (_Bool)frailWriteTransaction:(CDUnknownBlockType)arg1;	// IMP=0x000000000004efb7
- (_Bool)frailReadTransaction:(CDUnknownBlockType)arg1;	// IMP=0x000000000004ef20
- (void)writeTransaction:(CDUnknownBlockType)arg1;	// IMP=0x000000000004ee90
- (void)readTransaction:(CDUnknownBlockType)arg1;	// IMP=0x000000000004ee00
- (void)clearCaches;	// IMP=0x000000000004edfa
- (id)selectColumns:(id)arg1 fromTable:(id)arg2 whereClause:(id)arg3 onPrep:(CDUnknownBlockType)arg4 onError:(CDUnknownBlockType)arg5;	// IMP=0x000000000004ebef
- (void)insertIntoTable:(id)arg1 dictionary:(id)arg2;	// IMP=0x000000000004ea38
- (void)insertOrReplaceIntoTable:(id)arg1 dictionary:(id)arg2 onError:(CDUnknownBlockType)arg3;	// IMP=0x000000000004e868
- (void)updateTable:(id)arg1 dictionary:(id)arg2 whereClause:(id)arg3 onError:(CDUnknownBlockType)arg4;	// IMP=0x000000000004e61d
- (_Bool)prepAndRunNonDataQueries:(id)arg1 onError:(CDUnknownBlockType)arg2;	// IMP=0x000000000004e496
- (void)_prepAndRunQuery:(id)arg1 columns:(id)arg2 dictionary:(id)arg3 onError:(CDUnknownBlockType)arg4;	// IMP=0x000000000004e3cb
- (_Bool)prepAndRunQuery:(id)arg1 onPrep:(CDUnknownBlockType)arg2 onRow:(CDUnknownBlockType)arg3 onError:(CDUnknownBlockType)arg4;	// IMP=0x000000000004e23d
- (_Bool)prepQuery:(id)arg1 onPrep:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;	// IMP=0x000000000004dfe8
- (_Bool)_isLikelySQLStatementContainedInString:(const char *)arg1;	// IMP=0x000000000004df86
- (void)_logQueryPlanForQuery:(id)arg1;	// IMP=0x000000000004def2
- (_Bool)runQuery:(id)arg1 onRow:(CDUnknownBlockType)arg2;	// IMP=0x000000000004dedd
- (_Bool)runQuery:(id)arg1 onRow:(CDUnknownBlockType)arg2 onError:(CDUnknownBlockType)arg3;	// IMP=0x000000000004dd93
@property(readonly, nonatomic) struct sqlite3 *handle;
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x000000000004d679
- (unsigned long long)_pagesToVacuum;	// IMP=0x000000000004d499
- (unsigned long long)valueForPragmaName:(id)arg1;	// IMP=0x000000000004d344
- (long long)lastInsertRowId;	// IMP=0x000000000004d2a1
- (void)simulateOnDiskDatabase;	// IMP=0x000000000004d294
- (void)_prepareForFirstQuery;	// IMP=0x000000000004d21a
- (void)closePermanently;	// IMP=0x000000000004d0bf
- (void)dealloc;	// IMP=0x000000000004d081
- (id)init;	// IMP=0x000000000004d07b
- (id)initWithFilename:(id)arg1 flags:(int)arg2 error:(id *)arg3;	// IMP=0x000000000004d000
- (id)initWithFilename:(id)arg1 flags:(int)arg2 error:(id *)arg3 errorHandler:(id)arg4;	// IMP=0x000000000004ca63
- (void)placeCorruptionMarker;	// IMP=0x00000000000251b0
- (_Bool)handleError:(long long)arg1 sqliteError:(int)arg2 forQuery:(id)arg3 onError:(CDUnknownBlockType)arg4;	// IMP=0x000000000002511d
- (id)dbErrorWithCode:(unsigned long long)arg1 sqliteReturnValue:(int)arg2 lastErrno:(int)arg3 query:(id)arg4;	// IMP=0x0000000000024d10
- (id)freeSpace;	// IMP=0x0000000000024afe

@end

