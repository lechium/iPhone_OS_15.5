//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class KGStoredGraph, NSMutableDictionary;

@interface MAGraph
{
    KGStoredGraph *_graph;	// 8 = 0x8
    NSMutableDictionary *_labelByDomain;	// 16 = 0x10
    NSMutableDictionary *_domainByLabel;	// 24 = 0x18
}

+ (_Bool)destroyPersistentStoreAtURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000011433d
+ (_Bool)migratePersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000114324
+ (_Bool)copyPersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x000000000011430b
+ (id)persistentStoreURLWithPath:(id)arg1 andName:(id)arg2;	// IMP=0x0000000000114220
+ (id)persistentStoreFileExtension;	// IMP=0x0000000000114207
- (void).cxx_destruct;	// IMP=0x00000000000cecd2
@property(readonly, nonatomic) KGStoredGraph *graph; // @synthesize graph=_graph;
- (void)waitUntilQuiescentUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cecb0
- (void)readUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cec9f
- (void)writeUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cec8e
- (_Bool)hasPendingWrite;	// IMP=0x00000000000cec86
- (_Bool)hasPendingRead;	// IMP=0x00000000000cec7e
- (id)nodeIdentifiersOfEdgeIdentifiers:(id)arg1 ofType:(unsigned long long)arg2;	// IMP=0x00000000000cec61
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 betweenNodesForIdentifiers:(id)arg2 andNodesForIdentifiers:(id)arg3 matchingFilter:(id)arg4;	// IMP=0x00000000000cea54
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 onNodesForIdentifiers:(id)arg2 matchingFilter:(id)arg3;	// IMP=0x00000000000ce98a
- (id)edgeIdentifiersOfType:(unsigned long long)arg1 sourceNodeIdentifier:(unsigned long long)arg2 targetNodeIdentifier:(unsigned long long)arg3;	// IMP=0x00000000000ce818
- (unsigned long long)memoryFootprint:(id)arg1;	// IMP=0x00000000000ce80d
- (id)sourcesByTargetWithEdgeIdentifiers:(id)arg1;	// IMP=0x00000000000ce7f0
- (id)targetsBySourceWithEdgeIdentifiers:(id)arg1;	// IMP=0x00000000000ce7d3
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce6f3
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce613
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce533
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofEdgesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce453
- (void)enumerateUnsignedIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce373
- (void)enumerateDoublePropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce293
- (void)enumerateStringPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce1b3
- (void)enumerateIntegerPropertyValuesForKey:(id)arg1 ofNodesWithIdentifiers:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ce0d3
- (id)abstractEdges;	// IMP=0x00000000000ce01a
- (id)allEdges;	// IMP=0x00000000000cdffd
- (void)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cdfdd
- (void)enumerateEdgesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cdfbd
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000cdf07
- (void)enumerateEdgesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cde8c
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000cde70
- (void)enumerateEdgesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cddd0
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cdd8c
- (unsigned long long)edgesCountForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cdd73
- (id)edgesDomains;	// IMP=0x00000000000cdb2d
- (id)edgesLabels;	// IMP=0x00000000000cda98
- (unsigned long long)edgesCountForLabel:(id)arg1;	// IMP=0x00000000000cda7d
- (unsigned long long)edgesCount;	// IMP=0x00000000000cda60
- (id)addUniqueEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd92b
- (id)_anyEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd67c
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cd5f4
- (id)_edgeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cd52d
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cd514
- (id)edgesForLabel:(id)arg1;	// IMP=0x00000000000cd4f9
- (unsigned long long)numberOfEdgesMatchingFilter:(id)arg1;	// IMP=0x00000000000cd4b5
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;	// IMP=0x00000000000cd424
- (id)edgeIdentifiersMatchingFilter:(id)arg1;	// IMP=0x00000000000cd3a9
- (id)edgesForIdentifiers:(id)arg1;	// IMP=0x00000000000cd34e
- (id)edgeForIdentifier:(unsigned long long)arg1;	// IMP=0x00000000000cd331
- (void)legacyRemoveEdges:(id)arg1;	// IMP=0x00000000000cd290
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000cd18b
- (id)_addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;	// IMP=0x00000000000ccf56
- (_Bool)edgesStoreWeakReferencesToNodes;	// IMP=0x00000000000ccf4e
- (id)orphanNodes;	// IMP=0x00000000000ccf1c
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeType:(unsigned long long)arg2 edgeFilter:(id)arg3;	// IMP=0x00000000000cce86
- (id)allNodes;	// IMP=0x00000000000cce69
- (void)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cce49
- (void)enumerateNodesInDomain:(unsigned short)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cce29
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000ccd73
- (void)enumerateNodesMatchingFilter:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cccf8
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000cccdc
- (void)enumerateNodesWithIdentifiers:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ccc3c
- (id)nodesDomains;	// IMP=0x00000000000cca9e
- (id)nodesLabels;	// IMP=0x00000000000cc905
- (unsigned long long)nodesCount;	// IMP=0x00000000000cc8e8
- (unsigned long long)nodesCountForDomain:(unsigned short)arg1;	// IMP=0x00000000000cc8cb
- (id)nodesForDomain:(unsigned short)arg1 properties:(id)arg2;	// IMP=0x00000000000cc8b2
- (id)nodesForDomain:(unsigned short)arg1;	// IMP=0x00000000000cc895
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc851
- (unsigned long long)numberOfNodesMatchingFilter:(id)arg1;	// IMP=0x00000000000cc80d
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc785
- (id)anyNodeForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc6dc
- (id)anyNodeMatchingFilter:(id)arg1;	// IMP=0x00000000000cc668
- (id)_nodeIdentifiersWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;	// IMP=0x00000000000cc5a1
- (unsigned long long)nodesCountForLabel:(id)arg1;	// IMP=0x00000000000cc586
- (id)anyNodeForLabel:(id)arg1;	// IMP=0x00000000000cc56b
- (id)nodesForLabel:(id)arg1;	// IMP=0x00000000000cc550
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2;	// IMP=0x00000000000cc4bf
- (id)nodeIdentifiersMatchingFilter:(id)arg1;	// IMP=0x00000000000cc444
- (id)nodesForIdentifiers:(id)arg1;	// IMP=0x00000000000cc3e9
- (id)nodeForIdentifier:(unsigned long long)arg1;	// IMP=0x00000000000cc3cc
- (void)legacyRemoveNodes:(id)arg1;	// IMP=0x00000000000cc32b
- (id)addUniquelyIdentifiedNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;	// IMP=0x00000000000cbf90
- (id)addUniqueNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(_Bool *)arg5;	// IMP=0x00000000000cbe79
- (id)addNodeFromBase:(id)arg1;	// IMP=0x00000000000cbda0
- (id)addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x00000000000cbd82
- (id)addNodeWithLabel:(id)arg1;	// IMP=0x00000000000cbd5c
- (id)_addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x00000000000cbc34
- (Class)nodeClass;	// IMP=0x00000000000cbc23
- (void)executeGraphChangeRequest:(id)arg1;	// IMP=0x00000000000cb755
- (void)invalidateMemoryCaches;	// IMP=0x00000000000cb74f
- (void)rollbackBatch;	// IMP=0x00000000000cb707
- (void)leaveBatch;	// IMP=0x00000000000cb6bf
- (void)enterBatch;	// IMP=0x00000000000cb677
- (id)identifier;	// IMP=0x00000000000cb61c
- (void)setVersion:(unsigned long long)arg1;	// IMP=0x00000000000cb5c5
- (unsigned long long)version;	// IMP=0x00000000000cb576
- (id)description;	// IMP=0x00000000000cb559
- (void)labelAndDomainFromLabels:(id)arg1 outLabel:(id *)arg2 outDomain:(unsigned short *)arg3;	// IMP=0x00000000000cb23e
- (id)labelsForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000000cb0ca
- (id)initWithSpecification:(id)arg1;	// IMP=0x00000000000caf7a
- (void)mergeWithGraph:(id)arg1 strictNodes:(_Bool)arg2 strictEdges:(_Bool)arg3 saveToDatabase:(_Bool)arg4 createdNodes:(out id *)arg5 createdEdges:(out id *)arg6;	// IMP=0x0000000000105e3f
- (void)persistWeight:(float)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000114084
- (void)persistWeight:(float)arg1 forNodeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000113f01
- (void)removeModelPropertiesForEdgeWithIdentifier:(unsigned long long)arg1;	// IMP=0x0000000000113ddc
- (void)removeModelPropertyForKey:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000000113c38
- (void)persistModelProperties:(id)arg1 forEdgeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;	// IMP=0x0000000000113a87
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forEdgeWithIdentifier:(unsigned long long)arg3;	// IMP=0x00000000001138d8
- (void)removeModelPropertiesForNodeWithIdentifier:(unsigned long long)arg1;	// IMP=0x00000000001137b3
- (void)removeModelPropertyForKey:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2;	// IMP=0x000000000011360f
- (void)persistModelProperties:(id)arg1 forNodeWithIdentifier:(unsigned long long)arg2 clobberExisting:(_Bool)arg3;	// IMP=0x000000000011345e
- (void)persistModelProperty:(id)arg1 forKey:(id)arg2 forNodeWithIdentifier:(unsigned long long)arg3;	// IMP=0x00000000001132af
- (_Bool)compareWithPersistedState;	// IMP=0x00000000001132a7
- (_Bool)copyPersistentStoreToURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000113222
- (void)closePersistentStore;	// IMP=0x00000000001131ba
- (_Bool)migratePersistentStoreToURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000011308f
- (_Bool)savePersistentStore;	// IMP=0x0000000000113087
- (void)savePersistentStoreWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000113081
- (void)unloadDomains:(id)arg1;	// IMP=0x000000000011303b
- (void)unloadEdge:(id)arg1;	// IMP=0x0000000000112ff5
- (void)loadDomains:(id)arg1;	// IMP=0x0000000000112faf
- (id)databaseURL;	// IMP=0x0000000000112f54
- (id)initWithSpecification:(id)arg1 persistenceStoreURL:(id)arg2 progressReporter:(id)arg3;	// IMP=0x0000000000112ec4
- (id)_instantiateGraphWithStoreAtURL:(id)arg1;	// IMP=0x0000000000112c95
- (id)edgeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5 sourceNodeIdentifier:(int)arg6 targetNodeIdentifier:(int)arg7;	// IMP=0x0000000000112c45
- (id)nodeFromFetchedRowWithIdentifier:(int)arg1 domain:(short)arg2 label:(id)arg3 weight:(float)arg4 properties:(id)arg5;	// IMP=0x0000000000112bf5
- (id)initWithGraphJSONURL:(id)arg1;	// IMP=0x0000000000137666
- (id)initWithGraphMLURL:(id)arg1;	// IMP=0x0000000000137620
- (id)initWithSpecification:(id)arg1 dataURL:(id)arg2;	// IMP=0x0000000000137444
- (void)_loadWithGraphDictionary:(id)arg1;	// IMP=0x0000000000136a52

@end

