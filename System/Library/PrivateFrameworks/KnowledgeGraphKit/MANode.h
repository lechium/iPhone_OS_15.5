//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <KnowledgeGraphKit/KGNode-Protocol.h>
#import <KnowledgeGraphKit/MAElement-Protocol.h>
#import <KnowledgeGraphKit/NSCopying-Protocol.h>

@class MAGraphReference, NSArray, NSDictionary, NSString;
@protocol MAGraphProxy, MANodeImplementationProtocol;

@interface MANode : NSObject <MAElement, NSCopying, KGNode>
{
    unsigned long long _identifier;	// 8 = 0x8
    MAGraphReference *_graphReference;	// 16 = 0x10
    id <MANodeImplementationProtocol> _implementation;	// 24 = 0x18
}

- (void).cxx_destruct;	// IMP=0x00000000001051d1
@property(retain, nonatomic) id <MANodeImplementationProtocol> implementation; // @synthesize implementation=_implementation;
@property(retain, nonatomic) MAGraphReference *graphReference; // @synthesize graphReference=_graphReference;
@property(nonatomic) unsigned long long identifier; // @synthesize identifier=_identifier;
- (unsigned long long)memoryFootprint:(id)arg1;	// IMP=0x00000000001050d1
- (id)associatedNodesForRemoval;	// IMP=0x00000000001050b8
- (id)visualStringWithName:(id)arg1 andPropertyKeys:(id)arg2;	// IMP=0x0000000000104e96
- (id)visualStringWithName:(id)arg1;	// IMP=0x0000000000104e82
- (id)visualString;	// IMP=0x0000000000104e6e
- (id)resolvedNode;	// IMP=0x0000000000104e65
- (void)setShouldStoreResolvedNode;	// IMP=0x0000000000104e5f
- (id)shortestPathToNode:(id)arg1 directed:(_Bool)arg2;	// IMP=0x0000000000104dd3
- (void)enumerateSiblingNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000104cc2
- (void)enumerateSiblingNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000104c03
- (void)enumerateNeighborEdgesAndNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000104b65
- (void)enumerateNeighborNodesThroughEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000104ac7
- (id)siblingNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x0000000000104a14
- (id)anyNeighborNodeThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000001049f7
- (id)neighborNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000001049da
- (id)neighborNodesThroughInEdges;	// IMP=0x00000000001049be
- (id)neighborNodesThroughOutEdges;	// IMP=0x00000000001049a2
- (id)neighborNodes;	// IMP=0x000000000010498c
- (id)anyNeighborNodeThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;	// IMP=0x000000000010485a
- (id)neighborNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;	// IMP=0x0000000000104771
- (id)neighborNodesWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x0000000000104690
- (_Bool)hasEdge:(id)arg1 isIn:(_Bool *)arg2;	// IMP=0x0000000000104462
- (void)enumerateNeighborNodesThroughInEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001043e0
- (void)enumerateNeighborEdgesAndNodesThroughInEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000010435e
- (void)enumerateNeighborNodesThroughOutEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001042dc
- (void)enumerateNeighborEdgesAndNodesThroughOutEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000010425a
- (void)enumerateEdgesInDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000010402e
- (void)enumerateNeighborEdgesAndNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000103f8b
- (void)enumerateNeighborNodesThroughEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000103ee8
- (void)enumerateNeighborNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 inDomain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000103e3f
- (void)enumerateNeighborNodesThroughEdgesOfType:(unsigned long long)arg1 matchingFilter:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000103e29
- (void)enumerateNeighborEdgesAndNodesThroughEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 inDomain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000103d80
- (void)enumerateNeighborNodesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000103d03
- (void)enumerateNeighborEdgesAndNodesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000103c86
- (void)enumerateNeighborNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000103be8
- (void)enumerateEdgesWithDomains:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001039bc
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000103919
- (void)enumerateOutEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000103897
- (void)enumerateInEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000103815
- (void)enumerateEdgesOfType:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000103793
- (void)enumerateEdgesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000103711
- (_Bool)hasEdgeWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x0000000000103689
- (id)anyEdgeWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x000000000010366c
- (unsigned long long)countOfEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000001035e2
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2;	// IMP=0x00000000001035c5
- (id)allEdges;	// IMP=0x00000000001035a9
- (id)anyEdgeOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;	// IMP=0x00000000001034a5
- (id)edgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3;	// IMP=0x00000000001033ea
- (void)enumerateEdgesOfType:(unsigned long long)arg1 withLabel:(id)arg2 domain:(unsigned short)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000103341
- (id)anyEdgeWithNode:(id)arg1;	// IMP=0x0000000000103327
- (id)anyEdgeFromNode:(id)arg1;	// IMP=0x000000000010330d
- (id)anyEdgeTowardNode:(id)arg1;	// IMP=0x00000000001032f3
- (id)edgesWithNode:(id)arg1;	// IMP=0x00000000001032d9
- (id)edgesFromNode:(id)arg1;	// IMP=0x00000000001032bf
- (id)edgesTowardNode:(id)arg1;	// IMP=0x00000000001032a5
- (id)anyEdgeOfType:(unsigned long long)arg1 withNode:(id)arg2;	// IMP=0x00000000001031a7
- (id)edgesOfType:(unsigned long long)arg1 withNode:(id)arg2;	// IMP=0x00000000001030f4
- (void)enumerateEdgesOfType:(unsigned long long)arg1 withNode:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001030de
- (_Bool)hasEdgeWithNode:(id)arg1;	// IMP=0x00000000001030c0
- (_Bool)hasEdgeFromNode:(id)arg1;	// IMP=0x00000000001030a2
- (_Bool)hasEdgeTowardNode:(id)arg1;	// IMP=0x0000000000103084
- (unsigned long long)outEdgesCount;	// IMP=0x0000000000103024
- (unsigned long long)inEdgesCount;	// IMP=0x0000000000102fc4
- (unsigned long long)edgesCount;	// IMP=0x0000000000102f64
- (_Bool)isUnique;	// IMP=0x0000000000102e6e
- (_Bool)isOrphan;	// IMP=0x0000000000102e55
- (id)changingPropertiesWithProperties:(id)arg1;	// IMP=0x0000000000102ce5
- (id)propertyDictionary;	// IMP=0x0000000000102cb3
- (id)propertyKeys;	// IMP=0x0000000000102c81
- (unsigned long long)propertiesCount;	// IMP=0x0000000000102c4f
- (_Bool)hasProperties;	// IMP=0x0000000000102c1d
- (void)enumeratePropertiesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000102bab
- (_Bool)isIdentifiedByProperties:(id)arg1;	// IMP=0x0000000000102b99
- (id)propertyForKey:(id)arg1 kindOfClass:(Class)arg2;	// IMP=0x0000000000102b42
- (id)propertyForKey:(id)arg1;	// IMP=0x0000000000102a83
- (_Bool)hasProperties:(id)arg1;	// IMP=0x0000000000102961
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x000000000010294f
- (_Bool)matchesNode:(id)arg1 includingProperties:(_Bool)arg2;	// IMP=0x0000000000102811
- (_Bool)isEqualToNode:(id)arg1;	// IMP=0x0000000000102700
- (_Bool)isSameNodeAsNode:(id)arg1;	// IMP=0x0000000000102649
- (_Bool)hasEqualPropertiesToNode:(id)arg1;	// IMP=0x00000000001025b8
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000102437
- (void)resolveIdentifier:(unsigned long long)arg1;	// IMP=0x000000000010242d
@property(readonly, copy, nonatomic) NSDictionary *properties;
@property(readonly, copy, nonatomic) NSArray *labels;
- (id)initWithIdentifier:(unsigned long long)arg1 labels:(id)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x00000000001022aa
- (id)shortDescription;	// IMP=0x0000000000102160
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <MAGraphProxy> graph;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001020ac
- (id)initWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;	// IMP=0x0000000000101fb1
- (id)init;	// IMP=0x0000000000101f82
- (_Bool)conformsToNodeSchema:(id)arg1;	// IMP=0x0000000000105bbe

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) unsigned short domain; // @dynamic domain;
@property(readonly, copy, nonatomic) NSString *label; // @dynamic label;
@property(readonly) Class superclass;
@property(readonly, nonatomic) float weight; // @dynamic weight;

@end

