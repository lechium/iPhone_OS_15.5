//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthUI/HKSampleTypeUpdateControllerObserver-Protocol.h>

@class HKActivitySummaryDataProvider, HKHealthStore, HKSampleTypeUpdateController, HKUnitPreferenceController, NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface HKChartDataCacheController : NSObject <HKSampleTypeUpdateControllerObserver>
{
    NSArray *_chartCachesByTimeScopeAndDisplayTypeIdentifier;	// 8 = 0x8
    NSMutableDictionary *_chartCachesByDisplayTypeIdentifier;	// 16 = 0x10
    NSMutableArray *_chartCachesByCustomDisplayType;	// 24 = 0x18
    NSMutableDictionary *_currentValueDataProvidersByDisplayType;	// 32 = 0x20
    NSMutableDictionary *_alternateCurrentValueDataProvidersByDisplayType;	// 40 = 0x28
    NSMutableDictionary *_secondaryValueDataProviders;	// 48 = 0x30
    HKActivitySummaryDataProvider *_activitySummaryDataProvider;	// 56 = 0x38
    HKSampleTypeUpdateController *_updateController;	// 64 = 0x40
    HKHealthStore *_healthStore;	// 72 = 0x48
    HKUnitPreferenceController *_unitController;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x000000000003bd7a
@property(retain, nonatomic) HKUnitPreferenceController *unitController; // @synthesize unitController=_unitController;
@property(retain, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
@property(retain, nonatomic) HKSampleTypeUpdateController *updateController; // @synthesize updateController=_updateController;
- (void)removeCachesForDisplayTypeIdentifier:(long long)arg1;	// IMP=0x000000000003bb86
- (id)findCustomCachesForDisplayType:(id)arg1;	// IMP=0x000000000003b95e
- (void)_removeCustomCachesForDisplayTypeIdentifier:(long long)arg1;	// IMP=0x000000000003b83d
- (void)addCustomChartCache:(id)arg1 forDisplayType:(id)arg2;	// IMP=0x000000000003b79a
- (id)activitySummaryDataProviderWithHealthStore:(id)arg1 dateCache:(id)arg2 displayTypeController:(id)arg3 unitController:(id)arg4;	// IMP=0x000000000003b6bf
- (id)_createAlternateCurrentValueDataProviderForDisplayType:(id)arg1 healthStore:(id)arg2 updateController:(id)arg3 dateCache:(id)arg4;	// IMP=0x000000000003b5e6
- (id)_createCurrentValueDataProviderForDisplayType:(id)arg1 healthStore:(id)arg2 updateController:(id)arg3 dateCache:(id)arg4;	// IMP=0x000000000003b47c
- (id)alternateCurrentValueDataProviderForDisplayType:(id)arg1 healthStore:(id)arg2 updateController:(id)arg3 dateCache:(id)arg4;	// IMP=0x000000000003b328
- (id)currentValueDataProviderForDisplayType:(id)arg1 healthStore:(id)arg2 updateController:(id)arg3 dateCache:(id)arg4;	// IMP=0x000000000003b22f
- (void)_subscribeForUpdatesForDisplayType:(id)arg1;	// IMP=0x000000000003b1dc
- (id)_chartCacheIdentifiersFromStartDate:(id)arg1 endDate:(id)arg2;	// IMP=0x000000000003b042
- (id)_chartCacheIdentifiersFromSamples:(id)arg1;	// IMP=0x000000000003adaa
- (void)updateController:(id)arg1 didReceiveHighFrequencyUpdateForType:(id)arg2;	// IMP=0x000000000003ab2e
- (_Bool)_anySampleShouldInvalidateCache:(id)arg1;	// IMP=0x000000000003a964
- (void)updateController:(id)arg1 didReceiveUpdateForType:(id)arg2 samplesAdded:(id)arg3 objectsRemoved:(id)arg4 recoveringFromError:(_Bool)arg5;	// IMP=0x000000000003a6f6
- (id)_generateChartCacheForDisplayType:(id)arg1 timeScope:(long long)arg2;	// IMP=0x000000000003a5ee
- (id)_chartCacheForDisplayType:(id)arg1 timeScope:(long long)arg2 chartCachesByDisplayTypeIdentifier:(id)arg3;	// IMP=0x000000000003a4d9
- (id)_timeScopeBasedChartCacheForDisplayType:(id)arg1 timeScope:(long long)arg2;	// IMP=0x000000000003a447
- (id)allInteractiveChartsCaches;	// IMP=0x0000000000039fb4
- (id)interactiveChartsCacheForDisplayType:(id)arg1 timeScope:(long long)arg2;	// IMP=0x0000000000039f22
- (id)initWithHealthStore:(id)arg1 unitController:(id)arg2 updateController:(id)arg3;	// IMP=0x0000000000039d56

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

