//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthUI/HKCardioFitnessDataSourceProvider-Protocol.h>

@class HKChartDataCacheController, HKDateCache, HKDisplayCategoryController, HKDisplayTypeController, HKHealthStore, HKInteractiveChartDataFormatter, HKSampleTypeDateRangeController, HKSampleTypeUpdateController, HKSelectedTimeScopeController, HKUnitPreferenceController, NSDictionary, _HKWheelchairUseCharacteristicCache;
@protocol HKAddDataViewControllerProvider, HKCardioFitnessDataSourceProvider, HKSleepDataSourceProvider;

@interface HKHealthChartFactory : NSObject <HKCardioFitnessDataSourceProvider>
{
    HKHealthStore *_healthStore;	// 8 = 0x8
    id <HKSleepDataSourceProvider> _sleepDataSourceProvider;	// 16 = 0x10
    HKInteractiveChartDataFormatter *_sleepChartFormatter;	// 24 = 0x18
    id <HKAddDataViewControllerProvider> _addDataViewControllerProvider;	// 32 = 0x20
    id <HKCardioFitnessDataSourceProvider> _cardioFitnessDataSourceProvider;	// 40 = 0x28
    HKDisplayTypeController *_displayTypeController;	// 48 = 0x30
    HKUnitPreferenceController *_unitPreferenceController;	// 56 = 0x38
    HKDisplayCategoryController *_displayCategoryController;	// 64 = 0x40
    HKChartDataCacheController *_chartDataCacheController;	// 72 = 0x48
    HKSampleTypeUpdateController *_sampleTypeUpdateController;	// 80 = 0x50
    HKDateCache *_dateCache;	// 88 = 0x58
    HKSelectedTimeScopeController *_selectedTimeScopeController;	// 96 = 0x60
    _HKWheelchairUseCharacteristicCache *_wheelchairUseCharacteristicCache;	// 104 = 0x68
    HKSampleTypeDateRangeController *_sampleTypeDateRangeController;	// 112 = 0x70
    NSDictionary *_identifierToDisplayTypeMapping;	// 120 = 0x78
}

+ (id)_standardIdentifierMappings;	// IMP=0x0000000000017833
- (void).cxx_destruct;	// IMP=0x00000000000189f6
@property(retain, nonatomic) NSDictionary *identifierToDisplayTypeMapping; // @synthesize identifierToDisplayTypeMapping=_identifierToDisplayTypeMapping;
@property(readonly, nonatomic) HKSampleTypeDateRangeController *sampleTypeDateRangeController; // @synthesize sampleTypeDateRangeController=_sampleTypeDateRangeController;
@property(readonly, nonatomic) _HKWheelchairUseCharacteristicCache *wheelchairUseCharacteristicCache; // @synthesize wheelchairUseCharacteristicCache=_wheelchairUseCharacteristicCache;
@property(readonly, nonatomic) HKSelectedTimeScopeController *selectedTimeScopeController; // @synthesize selectedTimeScopeController=_selectedTimeScopeController;
@property(readonly, nonatomic) HKDateCache *dateCache; // @synthesize dateCache=_dateCache;
@property(readonly, nonatomic) HKSampleTypeUpdateController *sampleTypeUpdateController; // @synthesize sampleTypeUpdateController=_sampleTypeUpdateController;
@property(readonly, nonatomic) HKChartDataCacheController *chartDataCacheController; // @synthesize chartDataCacheController=_chartDataCacheController;
@property(readonly, nonatomic) HKDisplayCategoryController *displayCategoryController; // @synthesize displayCategoryController=_displayCategoryController;
@property(readonly, nonatomic) HKUnitPreferenceController *unitPreferenceController; // @synthesize unitPreferenceController=_unitPreferenceController;
@property(readonly, nonatomic) HKDisplayTypeController *displayTypeController; // @synthesize displayTypeController=_displayTypeController;
@property(retain, nonatomic) id <HKCardioFitnessDataSourceProvider> cardioFitnessDataSourceProvider; // @synthesize cardioFitnessDataSourceProvider=_cardioFitnessDataSourceProvider;
@property(retain, nonatomic) id <HKAddDataViewControllerProvider> addDataViewControllerProvider; // @synthesize addDataViewControllerProvider=_addDataViewControllerProvider;
@property(retain, nonatomic) HKInteractiveChartDataFormatter *sleepChartFormatter; // @synthesize sleepChartFormatter=_sleepChartFormatter;
@property(retain, nonatomic) id <HKSleepDataSourceProvider> sleepDataSourceProvider; // @synthesize sleepDataSourceProvider=_sleepDataSourceProvider;
@property(readonly, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
- (id)_mapTypeIdentifierToDisplayType:(id)arg1;	// IMP=0x00000000000188f5
- (id)makeCardioFitnessInteractiveChartViewControllerWithDisplayDate:(id)arg1 applicationItems:(id)arg2 preferredOverlay:(long long)arg3 trendModel:(id)arg4;	// IMP=0x0000000000017817
- (id)standardSleepChartFormatter;	// IMP=0x00000000000177fe
- (id)_buildApplicationItems;	// IMP=0x000000000001761c
- (id)_customTypeIdentifierController:(id)arg1 applicationItems:(id)arg2 displayDate:(id)arg3 preferredOverlay:(long long)arg4 restorationUserActivity:(id)arg5 trendModel:(id)arg6;	// IMP=0x0000000000016ea3
- (id)CHRRoomApplicationItems;	// IMP=0x0000000000016cab
- (id)_displayTypeForTypeIdentifier:(id)arg1;	// IMP=0x0000000000016c18
- (long long)_resolvedTimeScopeForTypeIdentifier:(id)arg1 displayDateInterval:(id)arg2;	// IMP=0x0000000000016a79
- (id)supportedTypeIdentifiers;	// IMP=0x00000000000168a1
- (void)updateChartSummaryTrendModel:(id)arg1 viewController:(id)arg2;	// IMP=0x00000000000167bb
- (void)encodeActivityChartDataForActivityMoveMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016647
- (id)activityChartForActivityMoveMode:(long long)arg1 displayDate:(id)arg2 chartSharableModel:(id)arg3;	// IMP=0x0000000000016482
- (id)createInteractiveChartForSimpleDisplayType:(id)arg1 chartOptions:(unsigned long long)arg2;	// IMP=0x00000000000162be
- (id)createDisplayTypeForSleepDuration;	// IMP=0x000000000001608c
- (id)_buildSummaryTrendOverlayChartViewControllerWithDisplayType:(id)arg1 timeScopeRanges:(id)arg2 initialTimeScope:(long long)arg3 chartSummaryTrendModel:(id)arg4 firstWeekday:(long long)arg5;	// IMP=0x0000000000015fae
- (id)_buildStandardRemoteChartViewControllerWithDisplayType:(id)arg1 timeScopeRanges:(id)arg2 initialTimeScope:(long long)arg3 firstWeekday:(long long)arg4;	// IMP=0x0000000000015d15
- (id)_remoteCustomFormatterForDisplayType:(id)arg1;	// IMP=0x0000000000015cb8
- (id)_sleepRemoteGraphSeriesForDisplayType:(id)arg1 graphSeriesDataSource:(id)arg2;	// IMP=0x0000000000015c01
- (id)_standardRemoteGraphSeriesForDisplayType:(id)arg1 graphSeriesDataSource:(id)arg2 timeScope:(long long)arg3;	// IMP=0x0000000000015ae1
- (id)_remoteGraphSeriesForDisplayType:(id)arg1 graphSeriesDataSource:(id)arg2 timeScope:(long long)arg3;	// IMP=0x0000000000015a2e
- (id)_remoteDisplayTypeConfigurationFromDataSources:(id)arg1 model:(id)arg2 originalDisplayType:(id)arg3;	// IMP=0x00000000000155b7
- (long long)_sourceFirstWeekdayFromModel:(id)arg1;	// IMP=0x00000000000154a1
- (id)_sourceTimeZoneFromModel:(id)arg1;	// IMP=0x0000000000015357
- (id)_remoteDateIntervals;	// IMP=0x0000000000015156
- (id)remoteInteractiveChartForTypeIdentifier:(id)arg1 model:(id)arg2 chartSummaryTrendModel:(id)arg3;	// IMP=0x0000000000014ce6
- (void)encodeChartQueryDataForTypeIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000145a3
- (id)_remoteStatisticsIntervalForDisplayType:(id)arg1 timeScope:(long long)arg2;	// IMP=0x0000000000014525
- (id)_defaultRemoteDataSourcesForDisplayType:(id)arg1;	// IMP=0x00000000000143b4
- (id)_cardioFitnessDataSourcesForDisplayType:(id)arg1;	// IMP=0x00000000000142d6
- (id)_sleepRemoteDataSourcesForDisplayType:(id)arg1;	// IMP=0x00000000000141a8
- (id)_remoteDataSourcesForDisplayType:(id)arg1;	// IMP=0x0000000000014124
- (id)_remoteChartDisplayTypeForTypeIdentifier:(id)arg1;	// IMP=0x0000000000013fb7
- (_Bool)_oldStyleTrendableTypeIdentifier:(id)arg1;	// IMP=0x0000000000013faf
- (id)_trendDisplayTypeForTypeIdentifier:(id)arg1 applicationItems:(id)arg2 overlayRoomViewController:(id)arg3;	// IMP=0x0000000000013f64
- (id)interactiveChartForTypeIdentifier:(id)arg1 preferredOverlay:(long long)arg2 displayDateInterval:(id)arg3 restorationUserActivity:(id)arg4 chartSummaryTrendModel:(id)arg5;	// IMP=0x0000000000013a6b
- (id)chartForTypeIdentifier:(id)arg1 dateRange:(id)arg2 minimumSize:(struct CGSize)arg3 disableXAxis:(_Bool)arg4 currentCalendar:(id)arg5;	// IMP=0x0000000000013665
- (id)chartForTypeIdentifier:(id)arg1 dateRange:(id)arg2 minimumSize:(struct CGSize)arg3;	// IMP=0x00000000000135a6
- (id)initWithHealthStore:(id)arg1 preferredUnitPreferenceController:(id)arg2;	// IMP=0x000000000001326b
- (id)initWithHealthStore:(id)arg1;	// IMP=0x0000000000013257
- (id)init;	// IMP=0x00000000000131dd

@end

