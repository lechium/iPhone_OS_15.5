//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class HKLineSeriesPointMarkerStyle, HKStrokeStyle, NSArray;

@interface HKSleepPeriodSeries
{
    HKStrokeStyle *_strokeStyle;	// 8 = 0x8
    HKStrokeStyle *_tiledStrokeStyle;	// 16 = 0x10
    NSArray *_defaultFillStyles;	// 24 = 0x18
    NSArray *_highlightedFillStyles;	// 32 = 0x20
    NSArray *_inactiveFillStyles;	// 40 = 0x28
    HKStrokeStyle *_goalLineStrokeStyle;	// 48 = 0x30
    HKLineSeriesPointMarkerStyle *_upperGoalLineMarkerStyle;	// 56 = 0x38
    HKLineSeriesPointMarkerStyle *_lowerGoalLineMarkerStyle;	// 64 = 0x40
    CDUnknownBlockType _startOfDayTransform;	// 72 = 0x48
    struct CGSize _cornerRadii;	// 80 = 0x50
}

+ (id)inBedImageCompatibleWithFont:(id)arg1 withColor:(id)arg2;	// IMP=0x000000000023c533
+ (id)asleepImageCompatibleWithFont:(id)arg1 withColor:(id)arg2;	// IMP=0x000000000023c4bf
+ (id)_sleepCircleImageWithWidth:(double)arg1 diameter:(double)arg2 color:(id)arg3;	// IMP=0x000000000023c3da
- (void).cxx_destruct;	// IMP=0x000000000023c70f
@property(copy, nonatomic) CDUnknownBlockType startOfDayTransform; // @synthesize startOfDayTransform=_startOfDayTransform;
@property(retain, nonatomic) HKLineSeriesPointMarkerStyle *lowerGoalLineMarkerStyle; // @synthesize lowerGoalLineMarkerStyle=_lowerGoalLineMarkerStyle;
@property(retain, nonatomic) HKLineSeriesPointMarkerStyle *upperGoalLineMarkerStyle; // @synthesize upperGoalLineMarkerStyle=_upperGoalLineMarkerStyle;
@property(copy, nonatomic) HKStrokeStyle *goalLineStrokeStyle; // @synthesize goalLineStrokeStyle=_goalLineStrokeStyle;
@property(copy, nonatomic) NSArray *inactiveFillStyles; // @synthesize inactiveFillStyles=_inactiveFillStyles;
@property(copy, nonatomic) NSArray *highlightedFillStyles; // @synthesize highlightedFillStyles=_highlightedFillStyles;
@property(copy, nonatomic) NSArray *defaultFillStyles; // @synthesize defaultFillStyles=_defaultFillStyles;
@property(copy, nonatomic) HKStrokeStyle *tiledStrokeStyle; // @synthesize tiledStrokeStyle=_tiledStrokeStyle;
@property(copy, nonatomic) HKStrokeStyle *strokeStyle; // @synthesize strokeStyle=_strokeStyle;
@property(nonatomic) struct CGSize cornerRadii; // @synthesize cornerRadii=_cornerRadii;
- (id)_attributedAxisString:(id)arg1;	// IMP=0x000000000023c29f
- (id)_stringFromTimeSinceNoon:(id)arg1;	// IMP=0x000000000023c10f
- (void)_addAnnotationForValue:(double)arg1;	// IMP=0x000000000023c006
- (_Bool)blockCoordinate:(id)arg1 greaterThan:(id)arg2;	// IMP=0x000000000023bf68
- (_Bool)blockCoordinate:(id)arg1 lessThan:(id)arg2;	// IMP=0x000000000023beca
- (double)_maximumYForCoordinate:(id)arg1;	// IMP=0x000000000023bd44
- (double)_minimumYForCoordinate:(id)arg1;	// IMP=0x000000000023bbd2
- (_Bool)blockCoordinateIsVisibleInsideOfChartRect:(struct CGRect)arg1 blockCoordinate:(id)arg2;	// IMP=0x000000000023bb31
- (void)_assertCoordinateCompatibility:(id)arg1;	// IMP=0x000000000023ba73
- (double)yAxisDifferenceToPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000023b893
- (double)xAxisDistanceFromPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000023b863
- (double)distanceFromPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000023b633
- (id)coordinatesForBlock:(id)arg1 blockPath:(CDStruct_6ca94699)arg2 xAxis:(id)arg3 yAxis:(id)arg4;	// IMP=0x000000000023af71
- (void)_drawPaths:(id)arg1 withFillStyles:(id)arg2 strokeStyle:(id)arg3 axisRect:(struct CGRect)arg4 context:(struct CGContext *)arg5;	// IMP=0x000000000023abf5
- (void)_drawGoalLinePath:(id)arg1 goalMarkerPoints:(id)arg2 markerImage:(id)arg3 context:(struct CGContext *)arg4;	// IMP=0x000000000023a8f4
- (void)_drawWithBlockCoordinates:(id)arg1 visibleBarCount:(long long)arg2 pointTransform:(struct CGAffineTransform)arg3 context:(struct CGContext *)arg4 axisRect:(struct CGRect)arg5 axisResolution:(double)arg6;	// IMP=0x0000000000238eb2
- (double)barWidthForVisibleBarCount:(long long)arg1 axisRect:(struct CGRect)arg2 minimumSpacing:(double)arg3;	// IMP=0x0000000000238e5c
- (long long)_visibleBarCountWithZoomLevelConfiguration:(id)arg1;	// IMP=0x0000000000238dbb
- (void)drawSeriesWithBlockCoordinates:(id)arg1 axisRect:(struct CGRect)arg2 zoomLevelConfiguration:(id)arg3 pointTransform:(struct CGAffineTransform)arg4 renderContext:(struct CGContext *)arg5 secondaryRenderContext:(id)arg6;	// IMP=0x0000000000238cd7
- (_Bool)supportsMultiTouchSelection;	// IMP=0x0000000000238ccf
- (_Bool)shouldInvertAxis;	// IMP=0x0000000000238cc7
- (void)clearCaches;	// IMP=0x00000000002389bc

@end

