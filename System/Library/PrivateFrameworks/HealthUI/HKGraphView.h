//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <HealthUI/HKGraphRenderDelegate-Protocol.h>
#import <HealthUI/HKGraphSeriesOverlayDelegate-Protocol.h>
#import <HealthUI/HKGraphTileDrawingDelegate-Protocol.h>
#import <HealthUI/HKInteractiveChartRangeProvider-Protocol.h>
#import <HealthUI/HKMultiTouchPressGestureRecognizerDelegate-Protocol.h>
#import <HealthUI/HKScrollPerformanceTestable-Protocol.h>
#import <HealthUI/HKSeriesDelegate-Protocol.h>
#import <HealthUI/UIScrollViewDelegate-Protocol.h>

@class HKAxis, HKBorderLineView, HKGraphViewSelectionStyle, HKMultiTouchPressGestureRecognizer, HKPropertyAnimationApplier, HKValueRange, NSArray, NSCalendar, NSMapTable, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSTimer, UIColor, UIImage, UIScrollView, _HKGraphViewOverlayView;
@protocol HKGraphRenderer, HKGraphViewDelegate;

@interface HKGraphView : UIView <UIScrollViewDelegate, HKSeriesDelegate, HKGraphRenderDelegate, HKMultiTouchPressGestureRecognizerDelegate, HKGraphTileDrawingDelegate, HKGraphSeriesOverlayDelegate, HKScrollPerformanceTestable, HKInteractiveChartRangeProvider>
{
    NSMutableArray *_seriesGroupRows;	// 8 = 0x8
    _Bool _needsUpdateGraphViewConfiguration;	// 16 = 0x10
    _Bool _shouldInformDelegateOfUpdates;	// 17 = 0x11
    _Bool _shouldListenToScrollViewDelegate;	// 18 = 0x12
    HKValueRange *_chartableValueRange;	// 24 = 0x18
    UIImage *_topFeatheringImage;	// 32 = 0x20
    UIImage *_rightFeatheringImage;	// 40 = 0x28
    UIImage *_bottomFeatheringImage;	// 48 = 0x30
    UIImage *_leftFeatheringImage;	// 56 = 0x38
    UIView<HKGraphRenderer> *_renderView;	// 64 = 0x40
    UIScrollView *_scrollView;	// 72 = 0x48
    HKBorderLineView *_leftMarginView;	// 80 = 0x50
    UIView<HKGraphRenderer> *_yAxisLabelContent;	// 88 = 0x58
    double _yAxisLabelMinimumWidth;	// 96 = 0x60
    _Bool _subviewsHaveBeenLaidOut;	// 104 = 0x68
    _Bool _disableXAxis;	// 105 = 0x69
    _Bool _disableScrolling;	// 106 = 0x6a
    _Bool _disableSelection;	// 107 = 0x6b
    _Bool _multiSeriesSelection;	// 108 = 0x6c
    _Bool _moveSelectedSeriesToFront;	// 109 = 0x6d
    _Bool _contentWidthFromTimeScope;	// 110 = 0x6e
    _Bool _enableStickySelection;	// 111 = 0x6f
    _Bool _enableZoomInGesture;	// 112 = 0x70
    _Bool _enableInteractiveSelectionLine;	// 113 = 0x71
    _Bool _tilingDisabled;	// 114 = 0x72
    _Bool _prefersOpaqueLegends;	// 115 = 0x73
    _Bool _drawsGridlinesPerSeriesGroup;	// 116 = 0x74
    _Bool _contentOffsetIsSet;	// 117 = 0x75
    _Bool _tilesHidden;	// 118 = 0x76
    _Bool _tileScrollingOverride;	// 119 = 0x77
    _Bool _tilesTransientDisabled;	// 120 = 0x78
    _Bool _tilesWaitingForInitialRender;	// 121 = 0x79
    _Bool _measuringStartupTime;	// 122 = 0x7a
    _Bool _measurementStartupAutoscale;	// 123 = 0x7b
    _Bool _animationAutoscaleInProgress;	// 124 = 0x7c
    _Bool _externalSelectionScheduled;	// 125 = 0x7d
    id <HKGraphViewDelegate> _delegate;	// 128 = 0x80
    HKAxis *_xAxis;	// 136 = 0x88
    double _xAxisSpace;	// 144 = 0x90
    UIColor *_outlineColor;	// 152 = 0x98
    UIColor *_topMarginColor;	// 160 = 0xa0
    unsigned long long _outlineOptions;	// 168 = 0xa8
    unsigned long long _featheringOptions;	// 176 = 0xb0
    HKGraphViewSelectionStyle *_selectionStyle;	// 184 = 0xb8
    long long _xAxisDateZoom;	// 192 = 0xc0
    HKValueRange *_effectiveAxisRange;	// 200 = 0xc8
    HKValueRange *_actualAxisRange;	// 208 = 0xd0
    double _hardLeftMarginWidth;	// 216 = 0xd8
    double _virtualLeftMarginWidth;	// 224 = 0xe0
    double _virtualRightMarginWidth;	// 232 = 0xe8
    long long _virtualLeftMarginStyle;	// 240 = 0xf0
    long long _virtualRightMarginStyle;	// 248 = 0xf8
    HKValueRange *_actualVisibleRange;	// 256 = 0x100
    HKValueRange *_effectiveVisibleRangeCadence;	// 264 = 0x108
    HKValueRange *_effectiveVisibleRangeActive;	// 272 = 0x110
    long long _minimumDateZoom;	// 280 = 0x118
    long long _maximumDateZoom;	// 288 = 0x120
    long long _scrollingOptions;	// 296 = 0x128
    NSCalendar *_currentCalendar;	// 304 = 0x130
    HKMultiTouchPressGestureRecognizer *_multiTouchGestureRecognizer;	// 312 = 0x138
    double _zoomScale;	// 320 = 0x140
    UIView *_detailView;	// 328 = 0x148
    HKValueRange *_destinationEffectiveVisibleRangeActive;	// 336 = 0x150
    NSSet *_yAxisAccessoryViews;	// 344 = 0x158
    long long _tileColumns;	// 352 = 0x160
    double _tileWidthInPoints;	// 360 = 0x168
    long long _tileFirstColumn;	// 368 = 0x170
    long long _tileLastColumn;	// 376 = 0x178
    long long _tileColumnHysteresis;	// 384 = 0x180
    NSMutableDictionary *_tilesByColumnNumber;	// 392 = 0x188
    NSMutableArray *_tileQueue;	// 400 = 0x190
    double _tileZoomScaleOverride;	// 408 = 0x198
    CDUnknownBlockType _tileMarkDirtyCompletion;	// 416 = 0x1a0
    long long _tileInitialRedrawCount;	// 424 = 0x1a8
    double _lastSingleSelectionXValue;	// 432 = 0x1b0
    _HKGraphViewOverlayView *_overlayView;	// 440 = 0x1b8
    long long _previousOverlayType;	// 448 = 0x1c0
    NSMapTable *_overlayInteractiveViews;	// 456 = 0x1c8
    double _startTime;	// 464 = 0x1d0
    double _lastEndTime;	// 472 = 0x1d8
    NSTimer *_startupTimer;	// 480 = 0x1e0
    double _firstNonemptyDrawTime;	// 488 = 0x1e8
    HKPropertyAnimationApplier *_animationApplier;	// 496 = 0x1f0
    NSMutableDictionary *_currentAnimationProperties;	// 504 = 0x1f8
    id _externalSelectionModelCoordinate;	// 512 = 0x200
    double _externalSelectionLastLocation;	// 520 = 0x208
    struct CGPoint _contentOffset;	// 528 = 0x210
    struct CGPoint _tileContentOffsetOverride;	// 544 = 0x220
    struct UIEdgeInsets _axisInset;	// 560 = 0x230
}

+ (_Bool)visibleIntersectionForRange:(id)arg1 visibleRange:(id)arg2;	// IMP=0x000000000005b74d
+ (id)_rangeFromModelCoordinateMin:(double)arg1 max:(double)arg2 axis:(id)arg3;	// IMP=0x000000000005a564
+ (double)_modelCoordinateSpanForRange:(id)arg1 axis:(id)arg2;	// IMP=0x000000000005a45a
- (void).cxx_destruct;	// IMP=0x000000000006cf2a
@property(nonatomic) double externalSelectionLastLocation; // @synthesize externalSelectionLastLocation=_externalSelectionLastLocation;
@property(nonatomic) _Bool externalSelectionScheduled; // @synthesize externalSelectionScheduled=_externalSelectionScheduled;
@property(retain, nonatomic) id externalSelectionModelCoordinate; // @synthesize externalSelectionModelCoordinate=_externalSelectionModelCoordinate;
@property(retain, nonatomic) NSMutableDictionary *currentAnimationProperties; // @synthesize currentAnimationProperties=_currentAnimationProperties;
@property(retain, nonatomic) HKPropertyAnimationApplier *animationApplier; // @synthesize animationApplier=_animationApplier;
@property(nonatomic) _Bool animationAutoscaleInProgress; // @synthesize animationAutoscaleInProgress=_animationAutoscaleInProgress;
@property(nonatomic) _Bool measurementStartupAutoscale; // @synthesize measurementStartupAutoscale=_measurementStartupAutoscale;
@property(nonatomic) double firstNonemptyDrawTime; // @synthesize firstNonemptyDrawTime=_firstNonemptyDrawTime;
@property(retain, nonatomic) NSTimer *startupTimer; // @synthesize startupTimer=_startupTimer;
@property(nonatomic) double lastEndTime; // @synthesize lastEndTime=_lastEndTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool measuringStartupTime; // @synthesize measuringStartupTime=_measuringStartupTime;
@property(retain, nonatomic) NSMapTable *overlayInteractiveViews; // @synthesize overlayInteractiveViews=_overlayInteractiveViews;
@property(nonatomic) long long previousOverlayType; // @synthesize previousOverlayType=_previousOverlayType;
@property(retain, nonatomic) _HKGraphViewOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) double lastSingleSelectionXValue; // @synthesize lastSingleSelectionXValue=_lastSingleSelectionXValue;
@property(nonatomic) long long tileInitialRedrawCount; // @synthesize tileInitialRedrawCount=_tileInitialRedrawCount;
@property(nonatomic) _Bool tilesWaitingForInitialRender; // @synthesize tilesWaitingForInitialRender=_tilesWaitingForInitialRender;
@property(nonatomic) _Bool tilesTransientDisabled; // @synthesize tilesTransientDisabled=_tilesTransientDisabled;
@property(copy, nonatomic) CDUnknownBlockType tileMarkDirtyCompletion; // @synthesize tileMarkDirtyCompletion=_tileMarkDirtyCompletion;
@property(nonatomic) double tileZoomScaleOverride; // @synthesize tileZoomScaleOverride=_tileZoomScaleOverride;
@property(nonatomic) struct CGPoint tileContentOffsetOverride; // @synthesize tileContentOffsetOverride=_tileContentOffsetOverride;
@property(nonatomic) _Bool tileScrollingOverride; // @synthesize tileScrollingOverride=_tileScrollingOverride;
@property(retain, nonatomic) NSMutableArray *tileQueue; // @synthesize tileQueue=_tileQueue;
@property(retain, nonatomic) NSMutableDictionary *tilesByColumnNumber; // @synthesize tilesByColumnNumber=_tilesByColumnNumber;
@property(nonatomic) _Bool tilesHidden; // @synthesize tilesHidden=_tilesHidden;
@property(nonatomic) long long tileColumnHysteresis; // @synthesize tileColumnHysteresis=_tileColumnHysteresis;
@property(nonatomic) long long tileLastColumn; // @synthesize tileLastColumn=_tileLastColumn;
@property(nonatomic) long long tileFirstColumn; // @synthesize tileFirstColumn=_tileFirstColumn;
@property(nonatomic) double tileWidthInPoints; // @synthesize tileWidthInPoints=_tileWidthInPoints;
@property(nonatomic) long long tileColumns; // @synthesize tileColumns=_tileColumns;
@property(retain, nonatomic) NSSet *yAxisAccessoryViews; // @synthesize yAxisAccessoryViews=_yAxisAccessoryViews;
@property(retain, nonatomic) HKValueRange *destinationEffectiveVisibleRangeActive; // @synthesize destinationEffectiveVisibleRangeActive=_destinationEffectiveVisibleRangeActive;
@property(retain, nonatomic) UIView *detailView; // @synthesize detailView=_detailView;
@property(nonatomic) _Bool contentOffsetIsSet; // @synthesize contentOffsetIsSet=_contentOffsetIsSet;
@property(nonatomic) struct CGPoint contentOffset; // @synthesize contentOffset=_contentOffset;
@property(nonatomic) double zoomScale; // @synthesize zoomScale=_zoomScale;
@property(nonatomic) _Bool drawsGridlinesPerSeriesGroup; // @synthesize drawsGridlinesPerSeriesGroup=_drawsGridlinesPerSeriesGroup;
@property(nonatomic) _Bool prefersOpaqueLegends; // @synthesize prefersOpaqueLegends=_prefersOpaqueLegends;
@property(nonatomic) _Bool tilingDisabled; // @synthesize tilingDisabled=_tilingDisabled;
@property(nonatomic) _Bool enableInteractiveSelectionLine; // @synthesize enableInteractiveSelectionLine=_enableInteractiveSelectionLine;
@property(nonatomic) _Bool enableZoomInGesture; // @synthesize enableZoomInGesture=_enableZoomInGesture;
@property(readonly, nonatomic) HKMultiTouchPressGestureRecognizer *multiTouchGestureRecognizer; // @synthesize multiTouchGestureRecognizer=_multiTouchGestureRecognizer;
@property(nonatomic) _Bool enableStickySelection; // @synthesize enableStickySelection=_enableStickySelection;
@property(nonatomic) _Bool contentWidthFromTimeScope; // @synthesize contentWidthFromTimeScope=_contentWidthFromTimeScope;
@property(retain, nonatomic) NSCalendar *currentCalendar; // @synthesize currentCalendar=_currentCalendar;
@property(nonatomic) long long scrollingOptions; // @synthesize scrollingOptions=_scrollingOptions;
@property(nonatomic) long long maximumDateZoom; // @synthesize maximumDateZoom=_maximumDateZoom;
@property(nonatomic) long long minimumDateZoom; // @synthesize minimumDateZoom=_minimumDateZoom;
@property(readonly, nonatomic) HKValueRange *effectiveVisibleRangeActive; // @synthesize effectiveVisibleRangeActive=_effectiveVisibleRangeActive;
@property(readonly, nonatomic) HKValueRange *effectiveVisibleRangeCadence; // @synthesize effectiveVisibleRangeCadence=_effectiveVisibleRangeCadence;
@property(readonly, nonatomic) HKValueRange *actualVisibleRange; // @synthesize actualVisibleRange=_actualVisibleRange;
@property(nonatomic) long long virtualRightMarginStyle; // @synthesize virtualRightMarginStyle=_virtualRightMarginStyle;
@property(nonatomic) long long virtualLeftMarginStyle; // @synthesize virtualLeftMarginStyle=_virtualLeftMarginStyle;
@property(nonatomic) double virtualRightMarginWidth; // @synthesize virtualRightMarginWidth=_virtualRightMarginWidth;
@property(nonatomic) double virtualLeftMarginWidth; // @synthesize virtualLeftMarginWidth=_virtualLeftMarginWidth;
@property(nonatomic) double hardLeftMarginWidth; // @synthesize hardLeftMarginWidth=_hardLeftMarginWidth;
@property(readonly, nonatomic) HKValueRange *actualAxisRange; // @synthesize actualAxisRange=_actualAxisRange;
@property(readonly, nonatomic) HKValueRange *effectiveAxisRange; // @synthesize effectiveAxisRange=_effectiveAxisRange;
@property(readonly, nonatomic) long long xAxisDateZoom; // @synthesize xAxisDateZoom=_xAxisDateZoom;
@property(retain, nonatomic) HKGraphViewSelectionStyle *selectionStyle; // @synthesize selectionStyle=_selectionStyle;
@property(nonatomic) _Bool moveSelectedSeriesToFront; // @synthesize moveSelectedSeriesToFront=_moveSelectedSeriesToFront;
@property(nonatomic) _Bool multiSeriesSelection; // @synthesize multiSeriesSelection=_multiSeriesSelection;
@property(nonatomic) _Bool disableSelection; // @synthesize disableSelection=_disableSelection;
@property(nonatomic) _Bool disableScrolling; // @synthesize disableScrolling=_disableScrolling;
@property(nonatomic) unsigned long long featheringOptions; // @synthesize featheringOptions=_featheringOptions;
@property(nonatomic) unsigned long long outlineOptions; // @synthesize outlineOptions=_outlineOptions;
@property(copy, nonatomic) UIColor *topMarginColor; // @synthesize topMarginColor=_topMarginColor;
@property(copy, nonatomic) UIColor *outlineColor; // @synthesize outlineColor=_outlineColor;
@property(nonatomic) struct UIEdgeInsets axisInset; // @synthesize axisInset=_axisInset;
@property(nonatomic) _Bool disableXAxis; // @synthesize disableXAxis=_disableXAxis;
@property(nonatomic) double xAxisSpace; // @synthesize xAxisSpace=_xAxisSpace;
@property(retain, nonatomic) HKAxis *xAxis; // @synthesize xAxis=_xAxis;
@property(nonatomic) __weak id <HKGraphViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_overlayViewsForOverlayData:(id)arg1 overlayView:(id)arg2;	// IMP=0x000000000006c280
- (void)_drawOverlaysIfNeeded:(id)arg1;	// IMP=0x000000000006bba8
- (long long)_overlayEnvironmentType;	// IMP=0x000000000006bb4f
- (long long)_overlayTypeForOverlaySeriesData:(id)arg1;	// IMP=0x000000000006b949
- (long long)_ordinalForOverlayType:(long long)arg1;	// IMP=0x000000000006b927
- (id)_overlappingOverlaySeriesData:(id)arg1;	// IMP=0x000000000006b691
- (id)_nonOverlappingOverlaySeriesData:(id)arg1;	// IMP=0x000000000006b47b
- (void)overlayNeedsRedisplay;	// IMP=0x000000000006b45e
- (void)_layoutOverlayView;	// IMP=0x000000000006b3ce
- (void)enumerateVisibleCoordinatesForSeries:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000000006b182
- (void)_showTiles;	// IMP=0x000000000006b137
- (void)_hideTiles;	// IMP=0x000000000006b100
- (void)_hideTilesWithForce;	// IMP=0x000000000006b0b0
- (void)drawToContext:(struct CGContext *)arg1 tileRect:(struct CGRect)arg2 column:(long long)arg3;	// IMP=0x000000000006ace1
- (void)_handleMarkDirtyCompletion;	// IMP=0x000000000006aa1a
- (void)_markTilesDirtyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000006a7fe
- (void)_tileHiddenFlag:(_Bool)arg1;	// IMP=0x000000000006a5e3
- (struct CGRect)_tileScreenRectForColumn:(long long)arg1;	// IMP=0x000000000006a4ef
- (void)_touchTilesForContentOffset:(struct CGPoint)arg1 applyHysteresis:(_Bool)arg2;	// IMP=0x0000000000069d8c
- (void)_reconfigureScrollingTiles;	// IMP=0x000000000006993a
- (struct CGPoint)_contentOffsetForActualViewRange;	// IMP=0x000000000006983e
- (void)_handleTilesInitialRender;	// IMP=0x000000000006979f
- (_Bool)_tilesReconfigurableAfterInitialRender;	// IMP=0x000000000006977a
- (_Bool)_tilesConfigurableAfterInitialRender;	// IMP=0x0000000000069755
- (_Bool)_tilesAreEnabled;	// IMP=0x0000000000069723
- (void)setIndependentAxes:(id)arg1 stackOffset:(long long)arg2;	// IMP=0x0000000000069678
- (void)setPreviousDateZoom:(long long)arg1;	// IMP=0x0000000000069667
- (id)primarySeries;	// IMP=0x00000000000695e3
- (id)findVisibleBlockCoordinatesForPrimarySeries;	// IMP=0x00000000000694b6
- (void)testScrollPerformanceWithTestName:(id)arg1 iterations:(int)arg2 delta:(int)arg3 length:(int)arg4;	// IMP=0x0000000000069488
- (void)testScrollPerformanceWithTestName:(id)arg1 iterations:(int)arg2 delta:(int)arg3 options:(id)arg4;	// IMP=0x0000000000069454
- (void)_notifyDidEndExternalSelection;	// IMP=0x0000000000069418
- (void)_notifyDelegateOfTapOnYAxis;	// IMP=0x00000000000693dc
- (void)_notifyDelegateSeriesUpdate:(id)arg1 newDataArrived:(_Bool)arg2;	// IMP=0x0000000000069349
- (void)_notifyDelegateOfYAxisWidth:(double)arg1 toWidth:(double)arg2;	// IMP=0x00000000000692f1
- (void)_notifyDelegateOfSizeChange;	// IMP=0x00000000000692b5
- (void)_notifyDelegateOfFinishUserScrolling;	// IMP=0x000000000006926e
- (void)_notifyDelegateOfVisibleValueRange:(id)arg1 changeContext:(long long)arg2;	// IMP=0x00000000000691f8
- (void)_notifyDateZoomDidChangeFromValue:(long long)arg1 toValue:(long long)arg2;	// IMP=0x0000000000069187
- (void)_notifyDidEndSelection;	// IMP=0x0000000000069139
- (void)_notifyDidUpdateSelectionWithPointContext:(id)arg1;	// IMP=0x00000000000690be
- (void)_notifyDidBeginSelection;	// IMP=0x0000000000069070
- (void)didMoveToWindow;	// IMP=0x0000000000068f30
- (void)_activateStickySelection;	// IMP=0x0000000000068d82
- (void)_deactivateStickySelection;	// IMP=0x0000000000068bf1
- (_Bool)_stickySelectionActive;	// IMP=0x0000000000068a85
- (void)_processExternalSelection;	// IMP=0x00000000000686b1
- (void)_scheduleExternalSelectionIfNeededClearingLastLocation;	// IMP=0x000000000006867b
- (void)_scheduleRequiredExternalSelection;	// IMP=0x0000000000068636
- (void)_scheduleExternalSelectionIfNeeded;	// IMP=0x0000000000068572
- (void)_cancelExternalSelection;	// IMP=0x0000000000068515
- (void)_endExternalSelectionViaTimer;	// IMP=0x0000000000068503
- (void)_installExternalSelectionEndTimer;	// IMP=0x0000000000068485
- (void)touchSelectionAtModelX:(id)arg1;	// IMP=0x000000000006844a
- (void)_moveSeriesToFront:(id)arg1;	// IMP=0x000000000006813d
- (void)_selectionRecognizerDidFinish:(id)arg1;	// IMP=0x0000000000068112
- (void)_finishSelection;	// IMP=0x0000000000067e98
- (void)_deselectAllSeriesWithAlpha:(double)arg1 offScreenIndicatorAlpha:(double)arg2 seriesGroup:(id)arg3;	// IMP=0x0000000000067cf0
- (id)_pointSelectionContextWithPathRange:(CDStruct_f3788345)arg1 touchPoints:(id)arg2 seriesGroupRow:(long long)arg3 seriesInGroup:(id)arg4;	// IMP=0x000000000006704b
- (id)_newPointSelectionContextsWithTouchPoints:(id)arg1 updateViewStates:(_Bool)arg2;	// IMP=0x0000000000066fba
- (id)_oneSeriesSelectionContextsWithTouchPoints:(id)arg1 updateViewStates:(_Bool)arg2;	// IMP=0x0000000000066715
- (id)_multiSeriesSelectionContextsWithTouchPoints:(id)arg1 updateViewStates:(_Bool)arg2;	// IMP=0x000000000006606e
- (void)_selectionRecognizerDidMoveWithTouchPoints:(id)arg1;	// IMP=0x0000000000065fcf
- (_Bool)_selectionContextsNotPreviouslySelected:(id)arg1;	// IMP=0x0000000000065e7f
- (void)_resetSingleSelectionXValue;	// IMP=0x0000000000065e65
- (void)_selectionRecognizerDidMove:(id)arg1;	// IMP=0x0000000000065c0c
- (CDStruct_767cbfa4)_closestDataPointPathToPoint:(struct CGPoint)arg1 seriesGroupRow:(long long)arg2 minimumXDistance:(double)arg3 xDistanceOut:(double *)arg4;	// IMP=0x0000000000065606
- (CDStruct_767cbfa4)_closestDataPointPathToPoint:(struct CGPoint)arg1 seriesGroupRow:(long long)arg2 seriesInGroup:(id)arg3 minimumXDistance:(double)arg4 xDistanceOut:(double *)arg5;	// IMP=0x0000000000064fde
- (void)_updateSelectionContextStateWithTouchPoint:(struct CGPoint)arg1 seriesGroup:(id)arg2;	// IMP=0x0000000000064edc
- (id)_valueForXAxisLocation:(double)arg1;	// IMP=0x0000000000064dd8
- (struct CGAffineTransform)_xAxisCoordinateTransform;	// IMP=0x0000000000064bf5
- (void)_handleStartTouchPoint:(struct CGPoint)arg1 seriesGroupRow:(long long)arg2;	// IMP=0x0000000000063fd2
- (void)_selectionRecognizerDidBeginWithTouchPoint:(struct CGPoint)arg1;	// IMP=0x0000000000063f22
- (void)_selectionRecognizerDidBegin:(id)arg1;	// IMP=0x0000000000063e72
- (struct CGPoint)_touchPointForSeriesGroupIndex:(long long)arg1 originalTouchPoint:(struct CGPoint)arg2;	// IMP=0x0000000000063dbf
- (void)gestureWillBeginWithRecognizer:(id)arg1;	// IMP=0x0000000000063c9d
- (id)_closestSeriesToPoint:(struct CGPoint)arg1 allSeries:(id)arg2;	// IMP=0x00000000000639b8
- (_Bool)_touchesActuallyMoved:(id)arg1;	// IMP=0x00000000000637da
- (void)_selectionRecognizerDidUpdate:(id)arg1;	// IMP=0x0000000000063724
- (void)_removeSelectionRecognizerFromView:(id)arg1;	// IMP=0x00000000000636d1
- (void)_addSelectionRecognizerToView:(id)arg1;	// IMP=0x00000000000635f7
- (id)_closestGraphSeriesForTouchPoint:(struct CGPoint)arg1 seriesGroup:(id)arg2;	// IMP=0x0000000000063272
- (void)_enumerateSeriesSelectionRegionsForSeriesGroup:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000063094
- (long long)_currentSelectionStateForSeriesGroup:(id)arg1;	// IMP=0x0000000000062ffb
- (void)_touchAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000062ec3
- (void)_toggleStickySelectionAction:(id)arg1;	// IMP=0x0000000000062e3e
- (void)_addTapGestureRecognizerForTogglingStickyToView:(id)arg1;	// IMP=0x0000000000062db5
- (void)_tapOnViewAction:(id)arg1;	// IMP=0x0000000000062cb2
- (void)_addTapGestureRecognizerForTapOnView:(id)arg1;	// IMP=0x0000000000062c29
- (_Bool)_renderXAxisLabelAndGridsNeedsNewRendererInContext:(struct CGContext *)arg1;	// IMP=0x0000000000062abe
- (void)_updateScrollViewPropertiesIgnoringScrollViewCallbacks:(CDUnknownBlockType)arg1;	// IMP=0x0000000000062a98
- (void)_updateGraphViewConfigurationIfNecessary;	// IMP=0x0000000000062a73
- (void)_setNeedsUpdateGraphViewConfiguration;	// IMP=0x00000000000629f3
- (void)_scrollToCurrentVisibleRangeAnimated:(_Bool)arg1;	// IMP=0x00000000000628e6
- (void)_restoreDestinationActiveRange;	// IMP=0x0000000000062816
- (void)_preserveDestinationActiveRange:(id)arg1;	// IMP=0x0000000000062804
- (void)_updateZoomForParameters;	// IMP=0x0000000000062716
- (double)_contentWidth;	// IMP=0x00000000000625a3
- (double)_maximumZoomScale;	// IMP=0x000000000006239b
- (void)_updateAxisZoomScaleValueRange;	// IMP=0x0000000000062317
- (double)_maxTimeThreshold;	// IMP=0x0000000000062220
- (void)_updateDateZoomIfNecessary;	// IMP=0x000000000006219f
- (void)_reloadViewScope;	// IMP=0x0000000000062127
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;	// IMP=0x0000000000061e3d
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x0000000000061ddb
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x0000000000061d79
- (void)_snapXAxisRangeToPreservedRange;	// IMP=0x0000000000061d57
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x0000000000061d17
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x0000000000061ac9
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0000000000061a9b
- (_Bool)stillAnimating:(id)arg1;	// IMP=0x000000000006198f
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000061897
- (void)setZoomScale:(double)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000616d3
- (void)graphRenderer:(id)arg1 shouldRenderSceneWithContext:(struct CGContext *)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x0000000000061184
- (struct CGRect)_yAxisRectForSeriesGroupRow:(long long)arg1 chartRect:(struct CGRect)arg2;	// IMP=0x000000000006114b
- (struct CGRect)_yAxisRectForSeriesGroupRow:(long long)arg1 insetForLegends:(_Bool)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x0000000000061019
- (struct _HKLocationSpan)_locationSpanForSeriesGroupRow:(long long)arg1 chartRect:(struct CGRect)arg2;	// IMP=0x0000000000060f82
- (double)_renderXAxisLabelsInContext:(struct CGContext *)arg1;	// IMP=0x0000000000060dfc
- (void)_renderYAxisLabelsInContext:(struct CGContext *)arg1 chartRect:(struct CGRect)arg2;	// IMP=0x0000000000060b60
- (void)_renderYAxisGridlinesInContext:(struct CGContext *)arg1 chartRect:(struct CGRect)arg2 withBlendMode:(int)arg3;	// IMP=0x0000000000060954
- (void)_renderXAxisGridlinesInContext:(struct CGContext *)arg1 withBlendMode:(int)arg2;	// IMP=0x00000000000607cd
- (void)_renderBaselineWithContext:(struct CGContext *)arg1 chartRect:(struct CGRect)arg2;	// IMP=0x00000000000605c8
- (id)_visibleSeriesForSeriesGroup:(id)arg1;	// IMP=0x0000000000060510
- (void)_renderSelectionLineWithContext:(struct CGContext *)arg1;	// IMP=0x000000000005fd2d
- (void)_updateAllLegendsWithSelectedValues:(id)arg1;	// IMP=0x000000000005fac3
- (id)_gridlineRangesForChartRect:(struct CGRect)arg1;	// IMP=0x000000000005f72b
- (double)_topBaselineYValueForChartRect:(struct CGRect)arg1;	// IMP=0x000000000005f4fc
- (double)_bottomBaselineYValueForChartRect:(struct CGRect)arg1;	// IMP=0x000000000005f2d1
- (void)_renderVirtualMarginsWithContext:(struct CGContext *)arg1;	// IMP=0x000000000005f16e
- (double)_inactiveRightAreaForRect:(struct CGRect)arg1;	// IMP=0x000000000005ef2a
- (void)_renderVirtualMarginInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2 marginStyle:(long long)arg3;	// IMP=0x000000000005edb1
- (void)_renderVirtualMarginGridLines:(struct CGRect)arg1 context:(struct CGContext *)arg2;	// IMP=0x000000000005ecfd
- (void)_renderSeriesWithContext:(struct CGContext *)arg1 secondaryRenderContext:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000005e431
- (void)_renderDataAreaDividersWithContext:(struct CGContext *)arg1;	// IMP=0x000000000005e29c
- (id)_combinedYAxisRangeForAutoscaleSeries:(id)arg1 yAxisRect:(struct CGRect)arg2;	// IMP=0x000000000005df62
- (void)_cancelAutoscaleAnimations;	// IMP=0x000000000005dd5b
- (void)_removeAutoscaleAnimationWithName:(id)arg1 cancelled:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000005dc67
- (id)_insertAutoscaleAnimation:(id)arg1;	// IMP=0x000000000005dacd
- (void)_autoscaleAnimationCancelled;	// IMP=0x000000000005da9b
- (void)_autoscaleAnimationEnd;	// IMP=0x000000000005da1b
- (void)_autoscaleAnimationStart;	// IMP=0x000000000005d9e3
- (void)_actionsAfterAnimationTransform:(id)arg1 finalVisibleRange:(id)arg2;	// IMP=0x000000000005d7ca
- (void)_actionsBeforeAnimationTransform:(id)arg1;	// IMP=0x000000000005d611
- (id)_propertyAnimationForTransform:(id)arg1;	// IMP=0x000000000005d27f
- (_Bool)_allSeriesAreInverted:(id)arg1;	// IMP=0x000000000005d12e
- (id)_autoscaleTransformsFromAutoscaleSeriesList:(id)arg1 specificRange:(id)arg2;	// IMP=0x000000000005cb16
- (_Bool)_seriesRequiresYAutoscale:(id)arg1;	// IMP=0x000000000005cab8
- (_Bool)_autoscaleTransformIsSignificant:(id)arg1;	// IMP=0x000000000005ca10
- (id)_findAutoscaleSeriesForYAxis:(id)arg1 allAutoscaleSeries:(id)arg2;	// IMP=0x000000000005c86e
- (id)_autoscaleSeriesOnlyIfNeeded:(_Bool)arg1;	// IMP=0x000000000005c4ff
- (void)autoscaleYAxesAnimated:(_Bool)arg1 specificRange:(id)arg2 onlyIfNeeded:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000005be2d
- (void)_autoScaleXAxis;	// IMP=0x000000000005bd35
- (id)_defaultXAxisValueRange;	// IMP=0x000000000005bc26
- (double)snapScreenCoordinateToXAxisResolution:(double)arg1;	// IMP=0x000000000005ba0e
- (void)nonemptyDrawComplete;	// IMP=0x000000000005b93d
- (_Bool)rangeIsVisible:(id)arg1;	// IMP=0x000000000005b8bc
- (struct CGRect)screenRectForSeries:(id)arg1;	// IMP=0x000000000005b682
- (struct CGPoint)seriesContentOffset;	// IMP=0x000000000005b670
- (_Bool)seriesDrawingDuringTiling;	// IMP=0x000000000005b65e
- (_Bool)seriesDrawingDuringAutoscale;	// IMP=0x000000000005b64c
- (_Bool)seriesDrawingDuringScrolling;	// IMP=0x000000000005b5f5
- (struct UIEdgeInsets)virtualMarginInsets;	// IMP=0x000000000005b570
- (void)seriesDidInvalidatePaths:(id)arg1 newDataArrived:(_Bool)arg2;	// IMP=0x000000000005b4c7
- (id)_findActualAxisRangeFromVisibleRanges;	// IMP=0x000000000005b19c
- (id)_effectiveVisibleRangeFromActualVisibleRange:(id)arg1;	// IMP=0x000000000005af91
- (id)_actualVisibleRangeFromEffectiveVisibleRange:(id)arg1 dataAreaRect:(struct CGRect)arg2;	// IMP=0x000000000005adad
- (void)setEffectiveAxisRange:(id)arg1 effectiveVisibleRangeCadence:(id)arg2 effectiveVisibleRangeActive:(id)arg3;	// IMP=0x000000000005ad80
- (void)_updateEffectiveAxisRange:(id)arg1 effectiveVisibleRangeCadence:(id)arg2 effectiveVisibleRangeActive:(id)arg3 virtualLeftMarginWidth:(double)arg4 virtualRightMarginWidth:(double)arg5;	// IMP=0x000000000005abb8
- (_Bool)_compareRange:(id)arg1 toRange:(id)arg2;	// IMP=0x000000000005a88e
- (_Bool)_compareChartDate:(id)arg1 toDate:(id)arg2;	// IMP=0x000000000005a85e
- (void)setEffectiveVisibleRangeActive:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000005a818
- (_Bool)_setRangesForActiveVisibleRange:(id)arg1;	// IMP=0x000000000005a65f
- (id)_rangeFromRange:(id)arg1 withStartOfRange:(id)arg2;	// IMP=0x000000000005a25c
- (void)setVirtualRightMargin:(double)arg1;	// IMP=0x000000000005a1b7
- (void)setVirtualLeftMargin:(double)arg1;	// IMP=0x000000000005a175
- (void)_updateGraphViewConfiguration;	// IMP=0x000000000005a081
- (void)_updateRangesForEffectiveAxisRange:(id)arg1 effectiveVisibleRangeCadence:(id)arg2 effectiveVisibleRangeActive:(id)arg3;	// IMP=0x0000000000059f9c
- (void)_setVisibleRangesForEffectiveRangeCadence:(id)arg1;	// IMP=0x0000000000059d1e
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000059b6b
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000059aa0
- (void)_resumeChartInteraction;	// IMP=0x0000000000059a68
- (void)_pauseChartInteraction;	// IMP=0x0000000000059a33
- (void)_setYAxisAccessoryViews:(id)arg1;	// IMP=0x000000000005996c
@property(retain, nonatomic) HKValueRange *chartableValueRange;
- (void)setBackgroundColor:(id)arg1;	// IMP=0x0000000000059752
- (void)setRenderView:(id)arg1;	// IMP=0x0000000000059601
- (void)_clearRenderViewIfNecessary;	// IMP=0x000000000005959c
- (void)invalidateDataSourceCaches;	// IMP=0x000000000005930b
- (void)removeSeries;	// IMP=0x00000000000590dd
- (void)setNeedsReloadSeries;	// IMP=0x00000000000590a0
- (void)_loadSeriesForZoom:(long long)arg1;	// IMP=0x0000000000058eeb
- (void)_shareYAxesForSeriesGroup:(id)arg1;	// IMP=0x0000000000058a69
- (id)_graphSeriesForZoom:(long long)arg1 seriesGroupRow:(long long)arg2;	// IMP=0x00000000000586be
- (void)_layoutYAxisAccessoryViewsForChartRect:(struct CGRect)arg1;	// IMP=0x00000000000582cb
- (void)_installAccessoryViews;	// IMP=0x00000000000580fe
- (void)_layoutDetailView;	// IMP=0x0000000000057ea0
- (void)_layoutLegendsForChartRect:(struct CGRect)arg1;	// IMP=0x0000000000057a2f
- (void)_createLegendForSeriesGroup:(id)arg1;	// IMP=0x00000000000578a8
- (struct UIEdgeInsets)_currentLegendInsets;	// IMP=0x00000000000577af
- (void)_updateLegendsForAllSeriesGroups;	// IMP=0x000000000005767a
- (void)_updateLegendForSeriesGroup:(id)arg1;	// IMP=0x0000000000057200
- (_Bool)_seriesGroupHasLegendEntries:(id)arg1;	// IMP=0x0000000000057013
- (void)_createLegendsIfNecessary;	// IMP=0x0000000000056e6c
- (_Bool)_graphViewIsConfigured;	// IMP=0x0000000000056ddf
- (void)_recordLastRenderTime;	// IMP=0x0000000000056cf9
- (void)_startupTimerCallback:(id)arg1;	// IMP=0x0000000000056b1d
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000000569a9
- (void)layoutSubviews;	// IMP=0x0000000000056778
- (void)_loadScrollView;	// IMP=0x00000000000565f7
@property(readonly, nonatomic) _Bool isScrollViewDecelerating;
@property(readonly, nonatomic) NSArray *allSeries;
- (void)_updateScene;	// IMP=0x00000000000562de
- (struct CGRect)_overlayAreaRect;	// IMP=0x000000000005626e
- (struct CGRect)_dataAreaRect;	// IMP=0x00000000000561d5
- (struct UIEdgeInsets)_dataAreaInsets;	// IMP=0x000000000005617a
- (struct CGRect)_verticalAxisRect;	// IMP=0x00000000000560f3
- (struct CGRect)_scrollingAreaRect;	// IMP=0x000000000005604d
- (double)_detailViewWidth;	// IMP=0x0000000000055fea
- (struct CGRect)_adjustLeftMarginRectForBaselines:(struct CGRect)arg1;	// IMP=0x0000000000055e87
@property(readonly, nonatomic) struct CGRect leftMarginViewRect;
@property(readonly, nonatomic) double yAxisWidth;
- (_Bool)_configureYAxisViewIfNeeded;	// IMP=0x00000000000559b6
- (_Bool)_needsYAxisUpdateDuringRender;	// IMP=0x0000000000055951
- (id)_firstSelectionContext;	// IMP=0x00000000000557d2
- (long long)_countOfAllSeries;	// IMP=0x0000000000055646
- (long long)_groupRowForSeries:(id)arg1;	// IMP=0x00000000000553a4
- (void)_walkAllSeries:(CDUnknownBlockType)arg1;	// IMP=0x000000000005511d
- (_Bool)_axisRangeIsDateRange;	// IMP=0x00000000000550be
- (void)resetAndRedraw;	// IMP=0x0000000000054c5b
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0000000000054b9d
- (_Bool)_measureStartupFlagFromEnvironment;	// IMP=0x0000000000054af0
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000054451

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

