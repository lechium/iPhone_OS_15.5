//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class HKAxisLabelStyle, HKStrokeStyle;

@interface HKQuantityDistributionSeries
{
    _Bool _excludeDistribution;	// 8 = 0x8
    HKStrokeStyle *_inactiveStrokeStyle;	// 16 = 0x10
    HKStrokeStyle *_unselectedStrokeStyle;	// 24 = 0x18
    HKStrokeStyle *_selectedStrokeStyle;	// 32 = 0x20
    HKAxisLabelStyle *_minMaxLabelStyle;	// 40 = 0x28
    HKAxisLabelStyle *_minMaxValueStyle;	// 48 = 0x30
    HKStrokeStyle *_minMaxPointStyle;	// 56 = 0x38
    long long _zeroCountForGap;	// 64 = 0x40
    double _hollowLineRatio;	// 72 = 0x48
}

+ (id)transformedSegmentsFromChartPoint:(id)arg1 forX:(double)arg2 minY:(double)arg3 maxY:(double)arg4 zeroCountForGap:(long long)arg5;	// IMP=0x000000000019cd9d
+ (id)segmentsFromChartPoint:(id)arg1 minY:(double)arg2 maxY:(double)arg3 zeroCountForGap:(long long)arg4;	// IMP=0x000000000019c88f
+ (id)segmentsFromChartPoint:(id)arg1 zeroCountForGap:(long long)arg2;	// IMP=0x000000000019c7bb
- (void).cxx_destruct;	// IMP=0x000000000019cf9e
@property(nonatomic) double hollowLineRatio; // @synthesize hollowLineRatio=_hollowLineRatio;
@property(nonatomic) long long zeroCountForGap; // @synthesize zeroCountForGap=_zeroCountForGap;
@property(nonatomic) _Bool excludeDistribution; // @synthesize excludeDistribution=_excludeDistribution;
@property(copy, nonatomic) HKStrokeStyle *minMaxPointStyle; // @synthesize minMaxPointStyle=_minMaxPointStyle;
@property(copy, nonatomic) HKAxisLabelStyle *minMaxValueStyle; // @synthesize minMaxValueStyle=_minMaxValueStyle;
@property(copy, nonatomic) HKAxisLabelStyle *minMaxLabelStyle; // @synthesize minMaxLabelStyle=_minMaxLabelStyle;
@property(copy, nonatomic) HKStrokeStyle *selectedStrokeStyle; // @synthesize selectedStrokeStyle=_selectedStrokeStyle;
@property(copy, nonatomic) HKStrokeStyle *unselectedStrokeStyle; // @synthesize unselectedStrokeStyle=_unselectedStrokeStyle;
@property(copy, nonatomic) HKStrokeStyle *inactiveStrokeStyle; // @synthesize inactiveStrokeStyle=_inactiveStrokeStyle;
- (_Bool)blockCoordinate:(id)arg1 greaterThan:(id)arg2;	// IMP=0x000000000019c750
- (_Bool)blockCoordinate:(id)arg1 lessThan:(id)arg2;	// IMP=0x000000000019c6e5
- (double)yAxisDifferenceToPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000019c4dd
- (double)xAxisDistanceFromPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000019c4a5
- (double)distanceFromPoint:(struct CGPoint)arg1 blockCoordinate:(id)arg2 chartRect:(struct CGRect)arg3;	// IMP=0x000000000019c302
- (id)coordinatesForBlock:(id)arg1 blockPath:(CDStruct_6ca94699)arg2 xAxis:(id)arg3 yAxis:(id)arg4;	// IMP=0x000000000019bfa8
- (struct CGRect)_textRectForSize:(struct CGSize)arg1 location:(struct CGPoint)arg2 screenRect:(struct CGRect)arg3 yOffset:(double)arg4;	// IMP=0x000000000019bdd5
- (void)_drawMinMaxLabelsForMin:(struct CGPoint)arg1 max:(struct CGPoint)arg2 pointTransform:(struct CGAffineTransform)arg3 axisRect:(struct CGRect)arg4 context:(struct CGContext *)arg5;	// IMP=0x000000000019af9e
- (void)drawSeriesWithBlockCoordinates:(id)arg1 axisRect:(struct CGRect)arg2 zoomLevelConfiguration:(id)arg3 pointTransform:(struct CGAffineTransform)arg4 renderContext:(struct CGContext *)arg5 secondaryRenderContext:(id)arg6;	// IMP=0x000000000019a15b
- (id)marginsForYAxis:(id)arg1 chartRect:(struct CGRect)arg2;	// IMP=0x0000000000199fa6
- (_Bool)supportsMultiTouchSelection;	// IMP=0x0000000000199f78
- (id)_quickDate:(id)arg1;	// IMP=0x0000000000199ebb
- (id)init;	// IMP=0x0000000000199e69

@end

