//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <FileProviderDaemon/FPDDomainIndexerDelegate-Protocol.h>
#import <FileProviderDaemon/FPDFileCoordinationProviderDelegate-Protocol.h>

@class FPDDomainIndexer, FPDProvider, FPPacer, NSArray, NSData, NSDictionary, NSFileProviderDomain, NSMutableDictionary, NSOperationQueue, NSString, NSURL;
@protocol FPDDomainBackend, FPDExtensionSessionProtocol, OS_dispatch_queue, OS_dispatch_source, OS_os_log;

@interface FPDDomain : NSObject <FPDFileCoordinationProviderDelegate, FPDDomainIndexerDelegate>
{
    NSMutableDictionary *_coordinatorMetadataPerURL;	// 8 = 0x8
    NSMutableDictionary *_providedItemRecursiveGenCountPerURL;	// 16 = 0x10
    NSOperationQueue *_providedItemsOperationQueue;	// 24 = 0x18
    id <FPDExtensionSessionProtocol> _session;	// 32 = 0x20
    Class _fpfsClass;	// 40 = 0x28
    _Bool _cantStartup;	// 48 = 0x30
    _Bool _isObservingRoot;	// 49 = 0x31
    _Bool _indexerStarted;	// 50 = 0x32
    _Bool _indexerStopped;	// 51 = 0x33
    _Bool _isUsingFPFS;	// 52 = 0x34
    _Bool _invalidated;	// 53 = 0x35
    NSObject<OS_dispatch_source> *_timer;	// 56 = 0x38
    NSURL *_previouslyAccessedSecurityScopedURL;	// 64 = 0x40
    FPPacer *_rootCreationPacer;	// 72 = 0x48
    _Bool _started;	// 80 = 0x50
    _Bool _ejectable;	// 81 = 0x51
    _Bool _unableToStartup;	// 82 = 0x52
    NSString *_identifier;	// 88 = 0x58
    NSString *_providerDomainID;	// 96 = 0x60
    NSFileProviderDomain *_nsDomainOrNilForDefault;	// 104 = 0x68
    NSFileProviderDomain *_nsDomain;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_serialQueue;	// 120 = 0x78
    NSObject<OS_os_log> *_log;	// 128 = 0x80
    NSArray *_extensionStorageURLs;	// 136 = 0x88
    NSString *_purposeIdentifier;	// 144 = 0x90
    id <FPDDomainBackend> _defaultBackend;	// 152 = 0x98
    id <FPDDomainBackend> _extensionBackend;	// 160 = 0xa0
    id <FPDDomainBackend> _deactivatedBackend;	// 168 = 0xa8
    FPDProvider *_provider;	// 176 = 0xb0
    NSMutableDictionary *_filePresenters;	// 184 = 0xb8
    NSDictionary *_domainUserInfo;	// 192 = 0xc0
    FPDDomainIndexer *_indexer;	// 200 = 0xc8
    NSData *_fpfsRootBookmarkData;	// 208 = 0xd0
    Class _fpfsTestingBackendClass;	// 216 = 0xd8
}

- (void).cxx_destruct;	// IMP=0x00000000000425f7
@property(retain, nonatomic) Class fpfsTestingBackendClass; // @synthesize fpfsTestingBackendClass=_fpfsTestingBackendClass;
@property(copy, nonatomic) NSData *fpfsRootBookmarkData; // @synthesize fpfsRootBookmarkData=_fpfsRootBookmarkData;
@property(retain, nonatomic) FPDDomainIndexer *indexer; // @synthesize indexer=_indexer;
@property(retain, nonatomic) NSDictionary *domainUserInfo; // @synthesize domainUserInfo=_domainUserInfo;
@property(retain, nonatomic) NSMutableDictionary *filePresenters; // @synthesize filePresenters=_filePresenters;
@property(readonly, nonatomic) id <FPDExtensionSessionProtocol> session; // @synthesize session=_session;
@property(readonly, nonatomic) __weak FPDProvider *provider; // @synthesize provider=_provider;
@property(readonly, nonatomic) id <FPDDomainBackend> deactivatedBackend; // @synthesize deactivatedBackend=_deactivatedBackend;
@property(readonly, nonatomic) id <FPDDomainBackend> extensionBackend; // @synthesize extensionBackend=_extensionBackend;
@property(retain, nonatomic) id <FPDDomainBackend> defaultBackend; // @synthesize defaultBackend=_defaultBackend;
@property(readonly, nonatomic) NSString *purposeIdentifier; // @synthesize purposeIdentifier=_purposeIdentifier;
@property(readonly, nonatomic) NSArray *extensionStorageURLs; // @synthesize extensionStorageURLs=_extensionStorageURLs;
@property(readonly, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(nonatomic) _Bool unableToStartup; // @synthesize unableToStartup=_unableToStartup;
@property(nonatomic) _Bool ejectable; // @synthesize ejectable=_ejectable;
@property(readonly, nonatomic) NSFileProviderDomain *nsDomain; // @synthesize nsDomain=_nsDomain;
@property(retain, nonatomic) NSFileProviderDomain *nsDomainOrNilForDefault; // @synthesize nsDomainOrNilForDefault=_nsDomainOrNilForDefault;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(readonly, nonatomic) NSString *providerDomainID; // @synthesize providerDomainID=_providerDomainID;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)dumpStateTo:(id)arg1 limitNumberOfItems:(_Bool)arg2;	// IMP=0x000000000004186b
- (void)dumpInternalStateTo:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004169d
- (id)providerVersion;	// IMP=0x0000000000041651
- (id)telemetryReport;	// IMP=0x0000000000041605
- (long long)nonEvictableSpace;	// IMP=0x00000000000415c6
- (void)downloadItemWithItemID:(id)arg1 request:(id)arg2 progress:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000414ec
- (void)forceIngestionForItemID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000004144f
- (void)forceFSIngestionForItemID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000413c0
- (void)forceIngestionAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000041331
- (id)materializedURLForItemID:(id)arg1;	// IMP=0x00000000000412c1
- (void)valuesForAttributes:(id)arg1 forURL:(id)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000412a8
- (void)enumerateWithSettings:(id)arg1 lifetimeExtender:(id)arg2 observer:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000411cc
- (void)fetchOperationServiceOrEndpointWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000004113b
- (void)didChangeItemID:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000040af1
- (void)daemonSideItemChange:(id)arg1 changedFields:(unsigned long long)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000407b1
- (_Bool)isProviderForURL:(id)arg1;	// IMP=0x00000000000404e3
- (void)_unregisterFromFileCoordinator;	// IMP=0x0000000000040017
- (void)_registerFileCoordinatorWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003f4ce
- (void)_movingItemAtURL:(id)arg1 requiresProvidingWithDestinationURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003f24c
- (void)_providedItemAtURL:(id)arg1 withPresenterWithID:(id)arg2 didMoveToURL:(id)arg3;	// IMP=0x000000000003ed9e
- (void)_providedItemAtURL:(id)arg1 didLosePresenterWithID:(id)arg2;	// IMP=0x000000000003eb5b
- (void)_providedItemAtURL:(id)arg1 didGainPresenterWithID:(id)arg2;	// IMP=0x000000000003e776
- (_Bool)_wantsPresenterNotifications;	// IMP=0x000000000003e76e
- (void)_writerWithID:(id)arg1 didFinishWritingForURL:(id)arg2;	// IMP=0x000000000003e254
- (void)_cancelProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;	// IMP=0x000000000003decb
- (void)_provideItemAtURL:(id)arg1 toReaderWithID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003cb6f
- (_Bool)_isProviderBlockingConsumer:(id)arg1;	// IMP=0x000000000003ca94
- (void)setProvidedItemRecursiveGenerationCount:(id)arg1 forItemAtURL:(id)arg2;	// IMP=0x000000000003c955
- (id)getProvidedItemRecursiveGenerationCountForItemAtURL:(id)arg1;	// IMP=0x000000000003c83e
- (id)_removeProgressForProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;	// IMP=0x000000000003c754
- (void)_provideItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003c6b6
- (id)_siblingDelegateForURL:(id)arg1;	// IMP=0x000000000003c614
- (id)_physicalURLForURL:(id)arg1;	// IMP=0x000000000003c553
- (id)_providedItemsOperationQueue;	// IMP=0x000000000003c545
- (id)_fileReactorID;	// IMP=0x000000000003c534
- (void)extensionIndexer:(id)arg1 didChangeNeedsAuthentification:(_Bool)arg2;	// IMP=0x000000000003c3b3
- (id)cleanupDomainWithMode:(unsigned long long)arg1;	// IMP=0x000000000003bf4f
- (void)invalidateSession;	// IMP=0x000000000003bf39
- (void)invalidateWithReason:(id)arg1;	// IMP=0x000000000003bd0b
- (void)stopIndexer;	// IMP=0x000000000003bab6
- (void)cancelPendingCoordinations;	// IMP=0x000000000003b7b0
- (void)startWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003b706
- (void)_startWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003ac2c
- (void)createRootAndObserveIfNeededWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003a830
- (void)_startObservingRootAndResumeIndexerWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039ebd
- (void)createRootURLWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039988
- (_Bool)createRootByImportingDirectoryAtURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003994e
- (void)finishSetup;	// IMP=0x00000000000393ff
@property(nonatomic) _Bool userEnabled; // @dynamic userEnabled;
@property(readonly, nonatomic) NSString *fp_prettyDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *rootURLs;
- (_Bool)isDefaultDomain;	// IMP=0x0000000000038e4a
- (_Bool)isUsingFPFS;	// IMP=0x0000000000038e41
- (_Bool)supportsFPFS;	// IMP=0x0000000000038d24
- (_Bool)isHiddenDefaultDomain;	// IMP=0x0000000000038cdc
- (_Bool)_shouldDisconnectDueToLowDiskSpace;	// IMP=0x00000000000387a0
- (void)_setupRecoveryTimer;	// IMP=0x0000000000038555
- (_Bool)_shouldDisconnect;	// IMP=0x0000000000038309
@property(readonly, nonatomic) unsigned long long disconnectionState;
@property(readonly, nonatomic) _Bool isConnectedToAppExtension;
- (id)initWithIdentifier:(id)arg1 nsDomain:(id)arg2 extensionStorageURLs:(id)arg3 purposeIdentifier:(id)arg4 fpfsClass:(Class)arg5 provider:(id)arg6;	// IMP=0x0000000000037d88

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

