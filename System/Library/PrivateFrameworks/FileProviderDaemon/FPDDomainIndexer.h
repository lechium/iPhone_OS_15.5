//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FPDDomain, FPDExtension, NSDate, NSError, NSString, NSURL;
@protocol FPDDomainIndexerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface FPDDomainIndexer : NSObject
{
    NSString *_domainIdentifier;	// 8 = 0x8
    NSString *_providerDomainID;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_timerSource;	// 32 = 0x20
    NSURL *_stateURL;	// 40 = 0x28
    NSURL *_needsAuthURL;	// 48 = 0x30
    _Bool _needsIndexing;	// 56 = 0x38
    _Bool _isIndexing;	// 57 = 0x39
    _Bool _enabled;	// 58 = 0x3a
    _Bool _invalidated;	// 59 = 0x3b
    _Bool _isStarted;	// 60 = 0x3c
    _Bool _clearNeedsIndexing;	// 61 = 0x3d
    unsigned long long _batchIndexedCount;	// 64 = 0x40
    unsigned long long _batchIndexedCountSinceLastIndexing;	// 72 = 0x48
    unsigned long long _consecutiveBatchErrorCount;	// 80 = 0x50
    NSDate *_lastIndexingStartDate;	// 88 = 0x58
    NSError *_lastError;	// 96 = 0x60
    _Bool _registeredWithScheduler;	// 104 = 0x68
    _Bool _needsAuthentication;	// 105 = 0x69
    id <FPDDomainIndexerDelegate> _delegate;	// 112 = 0x70
    unsigned long long _maxRetryDelayInSec;	// 120 = 0x78
    FPDDomain *_domain;	// 128 = 0x80
    FPDExtension *_extension;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x000000000004bccf
@property(nonatomic) __weak FPDExtension *extension; // @synthesize extension=_extension;
@property(readonly, nonatomic) __weak FPDDomain *domain; // @synthesize domain=_domain;
@property(nonatomic) unsigned long long maxRetryDelayInSec; // @synthesize maxRetryDelayInSec=_maxRetryDelayInSec;
@property(nonatomic) __weak id <FPDDomainIndexerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *domainIdentifier; // @synthesize domainIdentifier=_domainIdentifier;
@property(nonatomic) _Bool needsAuthentication; // @synthesize needsAuthentication=_needsAuthentication;
- (void)dumpStateTo:(id)arg1;	// IMP=0x000000000004b790
- (void)setIndexingEnabled:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000004b493
- (void)signalChangesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000004b298
- (void)_signalChangesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000004b152
- (void)dropIndexWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004ab0c
- (_Bool)dropIndexWithError:(id *)arg1;	// IMP=0x000000000004a974
- (id)localSpotlightIndexer;	// IMP=0x000000000004a81f
- (void)signalNeedsReindexFromScratchWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000004a6ad
- (void)indexOneBatchWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000004a5d7
- (void)__indexOneBatchIfPossibleClearingNeedsIndexing:(_Bool)arg1;	// IMP=0x000000000004a01f
- (void)_indexOneBatchIfPossibleClearingNeedsIndexing:(_Bool)arg1;	// IMP=0x0000000000049d27
- (void)_handleOneBatchCompletionWithError:(id)arg1 hasMoreChanges:(_Bool)arg2;	// IMP=0x00000000000495cc
@property(readonly, nonatomic) _Bool learnNeedsAuthenticationFromBatchError;
- (_Bool)readNeedsAuthFromDisk;	// IMP=0x0000000000049583
- (void)persistsNeedsAuthOnDisk;	// IMP=0x0000000000049484
- (void)clearNeedsAuthOnDisk;	// IMP=0x00000000000493f4
- (void)setNeedsAuth;	// IMP=0x000000000004938b
- (void)clearNeedsAuth;	// IMP=0x00000000000492ef
- (_Bool)readNeedsIndexingFromDisk;	// IMP=0x00000000000492ae
- (void)clearNeedsIndexingOnDisk;	// IMP=0x0000000000049254
- (void)persistNeedsIndexingOnDisk;	// IMP=0x0000000000049190
- (void)invalidate;	// IMP=0x00000000000490c8
- (void)_unregisterFromScheduler;	// IMP=0x0000000000049082
- (void)_cancelTimer;	// IMP=0x000000000004904c
- (void)start;	// IMP=0x0000000000048dbd
- (id)description;	// IMP=0x0000000000048cbe
- (id)initWithExtension:(id)arg1 domain:(id)arg2 enabled:(_Bool)arg3;	// IMP=0x0000000000048a91

@end

