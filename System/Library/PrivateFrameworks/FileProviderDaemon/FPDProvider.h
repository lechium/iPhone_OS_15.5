//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FPDExtension, FPDExtensionManager, FPDProviderDescriptor, FPDServer, NSArray, NSDictionary, NSMutableDictionary, NSSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface FPDProvider : NSObject
{
    NSObject<OS_dispatch_queue> *_domainQueue;	// 8 = 0x8
    _Bool _invalidated;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_presentersQueue;	// 24 = 0x18
    FPDProviderDescriptor *_descriptor;	// 32 = 0x20
    NSSet *_blockedProcessNames;	// 40 = 0x28
    NSURL *_supportURL;	// 48 = 0x30
    NSURL *_domainsPlistURL;	// 56 = 0x38
    NSURL *_providerPlistURL;	// 64 = 0x40
    FPDServer *_server;	// 72 = 0x48
    FPDExtensionManager *_manager;	// 80 = 0x50
    NSMutableDictionary *_domainsByID;	// 88 = 0x58
    NSArray *_requestedExtendedAttributes;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_queue;	// 104 = 0x68
}

+ (void)_garbageCollectFoldersWithNoRelatedDomain:(id)arg1 supportDir:(id)arg2;	// IMP=0x0000000000055434
+ (void)dumpXattrsForContentsOfDirectoryAtURL:(id)arg1 dumper:(id)arg2;	// IMP=0x0000000000054690
+ (void)dumpXattrsForItemAtURL:(id)arg1 to:(id)arg2;	// IMP=0x0000000000053e94
+ (id)getXattr:(const char *)arg1 at:(const char *)arg2;	// IMP=0x0000000000053de1
+ (id)onDiskProvidersForServer:(id)arg1;	// IMP=0x000000000004e06f
+ (id)fpfsDomainXattrForURL:(id)arg1;	// IMP=0x000000000004deea
- (void).cxx_destruct;	// IMP=0x000000000005595f
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSArray *requestedExtendedAttributes; // @synthesize requestedExtendedAttributes=_requestedExtendedAttributes;
@property(readonly, nonatomic) NSMutableDictionary *domainsByID; // @synthesize domainsByID=_domainsByID;
@property(readonly, nonatomic) FPDExtensionManager *manager; // @synthesize manager=_manager;
@property(readonly, nonatomic) FPDServer *server; // @synthesize server=_server;
@property(readonly, nonatomic) NSURL *providerPlistURL; // @synthesize providerPlistURL=_providerPlistURL;
@property(readonly, nonatomic) NSURL *domainsPlistURL; // @synthesize domainsPlistURL=_domainsPlistURL;
@property(readonly, nonatomic) NSURL *supportURL; // @synthesize supportURL=_supportURL;
@property(copy, nonatomic) NSSet *blockedProcessNames; // @synthesize blockedProcessNames=_blockedProcessNames;
@property(readonly, nonatomic) _Bool invalidated; // @synthesize invalidated=_invalidated;
@property(readonly, nonatomic) FPDProviderDescriptor *descriptor; // @synthesize descriptor=_descriptor;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *presentersQueue; // @synthesize presentersQueue=_presentersQueue;
- (void)dumpStateTo:(id)arg1 providerFilter:(id)arg2 limitNumberOfItems:(_Bool)arg3;	// IMP=0x000000000005497f
- (void)dumpXattrsForDomains:(id)arg1 dumper:(id)arg2;	// IMP=0x0000000000054013
- (void)dumpValue:(id)arg1 forKey:(id)arg2 to:(id)arg3;	// IMP=0x0000000000053a3c
- (void)setDomainUserInfo:(id)arg1 forDomainIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000053798
- (void)setEjectable:(_Bool)arg1 forDomainIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000053521
- (void)enableAllDomainsIfNoUserElection;	// IMP=0x0000000000053188
- (void)setEnabled:(_Bool)arg1 forDomainIdentifier:(id)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000052bb4
@property(readonly, nonatomic) _Bool shouldHideDomainDisplayName;
@property(readonly, nonatomic) NSDictionary *nsDomainsByID;
@property(readonly, nonatomic) NSDictionary *relevantDomainsByID;
- (void)reloadDomain:(id)arg1 unableToStartup:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000526b1
- (void)removeDomain:(id)arg1 mode:(unsigned long long)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000520fd
- (void)removeAllDomainsForRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000005197d
- (void)addDomain:(id)arg1 byImportingDirectoryAtURL:(id)arg2 unableToStartup:(_Bool)arg3 reloadDomain:(_Bool)arg4 request:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x0000000000050a15
- (void)addDomain:(id)arg1 byImportingDirectoryAtURL:(id)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000508da
- (void)_createSymlinkForDomain:(id)arg1;	// IMP=0x00000000000508d4
- (void)importDomainsFromDiskAndUpdatePList:(_Bool)arg1;	// IMP=0x000000000004fd60
- (void)_startOrClearDomain:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000004fd48
- (id)newDomainFromNSDomain:(id)arg1;	// IMP=0x000000000004f9e8
- (id)defaultNSDomain;	// IMP=0x000000000004f941
- (id)_recreateDefaultDomainIfNeeded;	// IMP=0x000000000004f59b
- (void)_writeDomainPropertiesIfChangedFrom:(id)arg1;	// IMP=0x000000000004ee26
- (void)_writeDomainProperties;	// IMP=0x000000000004ee12
- (void)writeDomainProperties;	// IMP=0x000000000004ee00
@property(readonly, nonatomic) _Bool supportsEnumeration;
@property(readonly, nonatomic) NSArray *extensionStorageURLs;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, nonatomic) NSString *purposeIdentifier;
@property(readonly, nonatomic) NSString *identifier;
- (id)domainForIdentifier:(id)arg1;	// IMP=0x000000000004dd2b
- (id)domainForRealPathURL:(id)arg1;	// IMP=0x000000000004da75
- (id)domainForURL:(id)arg1;	// IMP=0x000000000004da13
@property(readonly, nonatomic) NSArray *providedItemsURLs;
@property(readonly, nonatomic) _Bool supportsFPFS;
- (_Bool)_supportsFPFS;	// IMP=0x000000000004d570
@property(readonly, nonatomic) FPDExtension *asAppExtensionBackedProvider;
@property(readonly, nonatomic) _Bool isAppExtensionReachable;
- (id)providerDomainForDomain:(id)arg1;	// IMP=0x000000000004cf48
- (id)description;	// IMP=0x000000000004ce90
- (void)invalidateWithReason:(id)arg1;	// IMP=0x000000000004c63a
- (void)startWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000004c2a5
- (id)initWithDescriptor:(id)arg1 server:(id)arg2;	// IMP=0x000000000004be35

@end

