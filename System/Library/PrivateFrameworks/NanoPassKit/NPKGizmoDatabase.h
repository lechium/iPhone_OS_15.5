//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface NPKGizmoDatabase : NSObject
{
    struct sqlite3 *_database;	// 8 = 0x8
    struct sqlite3_stmt *_deleteStatement;	// 16 = 0x10
    struct sqlite3_stmt *_insertStatement;	// 24 = 0x18
    struct sqlite3_stmt *_insertDiffStatement;	// 32 = 0x20
    struct sqlite3_stmt *_selectPassDataStatement;	// 40 = 0x28
    struct sqlite3_stmt *_selectPassAndImageSetsDataStatement;	// 48 = 0x30
    struct sqlite3_stmt *_selectPassDiffStatement;	// 56 = 0x38
    struct sqlite3_stmt *_updateDeletePendingStatement;	// 64 = 0x40
    struct sqlite3_stmt *_selectDeletePendingStatement;	// 72 = 0x48
    struct sqlite3_stmt *_updatePreferredAIDStatement;	// 80 = 0x50
    struct sqlite3_stmt *_selectPreferredAIDStatement;	// 88 = 0x58
    struct sqlite3_stmt *_insertTransactionStatement;	// 96 = 0x60
    struct sqlite3_stmt *_removeTransactionStatement;	// 104 = 0x68
    struct sqlite3_stmt *_removeTransactionWithServiceIdentifier;	// 112 = 0x70
    struct sqlite3_stmt *_selectTransactionsStatement;	// 120 = 0x78
    struct sqlite3_stmt *_selectTransactionsStatementWithSource;	// 128 = 0x80
    struct sqlite3_stmt *_selectTransactionsStatementWithoutSource;	// 136 = 0x88
    struct sqlite3_stmt *_selectTransactionWithIdentifierStatement;	// 144 = 0x90
    struct sqlite3_stmt *_selectTransactionWithServiceIdentifierStatement;	// 152 = 0x98
    struct sqlite3_stmt *_insertTransactionSourceIdentifierForPassStatement;	// 160 = 0xa0
    struct sqlite3_stmt *_selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;	// 168 = 0xa8
    struct sqlite3_stmt *_selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;	// 176 = 0xb0
    struct sqlite3_stmt *_selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;	// 184 = 0xb8
    struct sqlite3_stmt *_selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;	// 192 = 0xc0
    struct sqlite3_stmt *_deleteTransactionSourceIdentifierForPassStatement;	// 200 = 0xc8
    struct sqlite3_stmt *_deleteTransactionsForTransactionSourceStatement;	// 208 = 0xd0
    struct sqlite3_stmt *_trimTransactionsForTransactionSourceStatement;	// 216 = 0xd8
    struct sqlite3_stmt *_selectTransitAppletStateForPassStatement;	// 224 = 0xe0
    struct sqlite3_stmt *_updateTransitAppletStateForPassStatement;	// 232 = 0xe8
    struct sqlite3_stmt *_insertEphemeralTransactionStatement;	// 240 = 0xf0
    struct sqlite3_stmt *_deleteEphemeralTransactionByTransactionSourceIdentifierStatement;	// 248 = 0xf8
    struct sqlite3_stmt *_currentEphemeralTransactionIdentifierStatement;	// 256 = 0x100
    struct sqlite3_stmt *_selectLastAddValueAmountForPassStatement;	// 264 = 0x108
    struct sqlite3_stmt *_updateLastAddValueAmountForPassStatement;	// 272 = 0x110
    struct sqlite3_stmt *_selectPendingAddValueDateForPassStatement;	// 280 = 0x118
    struct sqlite3_stmt *_updatePendingAddValueDateForPassStatement;	// 288 = 0x120
    struct sqlite3_stmt *_selectBalancesForPassStatement;	// 296 = 0x128
    struct sqlite3_stmt *_updateBalancesForPassStatement;	// 304 = 0x130
    struct sqlite3_stmt *_selectSubcredentialsForPassStatement;	// 312 = 0x138
    struct sqlite3_stmt *_updateSubcredentialsForPassStatement;	// 320 = 0x140
    NSObject<OS_dispatch_queue> *_dbQueue;	// 328 = 0x148
    _Bool _isInTransaction;	// 336 = 0x150
    NSMutableDictionary *_manifest;	// 344 = 0x158
    NSMutableArray *_passDescriptions;	// 352 = 0x160
    NSArray *_libraryHashes;	// 360 = 0x168
    int _externallyChangedBroadcasts;	// 368 = 0x170
    _Bool _sendingLocalNotifyDatabaseChanged;	// 372 = 0x174
    _Bool _needsMoreLocalNotifyDatabaseChanged;	// 373 = 0x175
    _Bool _passDBIsAvailable;	// 374 = 0x176
}

+ (unsigned long long)latestWatchOSMajorVersion;	// IMP=0x0000000000106a7f
+ (void)setMigrationDataSource:(id)arg1;	// IMP=0x00000000000ec490
+ (id)_migrationDataSource;	// IMP=0x00000000000ec34a
+ (id)_migrationDelegateQueue;	// IMP=0x00000000000ec2f3
+ (long long)maxDatabaseVersion;	// IMP=0x00000000000ec2e8
+ (id)sharedDatabase;	// IMP=0x00000000000ec293
- (void).cxx_destruct;	// IMP=0x00000000001095cc
@property(nonatomic) _Bool passDBIsAvailable; // @synthesize passDBIsAvailable=_passDBIsAvailable;
- (_Bool)_table:(id)arg1 containsColumn:(id)arg2;	// IMP=0x0000000000109189
- (void)_attemptDatabaseOpen;	// IMP=0x0000000000109089
- (void)_handleHasMigrationDataSource;	// IMP=0x0000000000109083
- (void)_handleFirstUnlock;	// IMP=0x0000000000108fcd
- (void)_inQueue_teardownDB;	// IMP=0x0000000000108ad7
- (void)teardownDB;	// IMP=0x00000000001089e6
- (void)_handleDatabaseChangedExternally;	// IMP=0x000000000010887e
- (_Bool)_preconditionsMetForDatabaseOpen;	// IMP=0x0000000000108843
- (void)_updateDatabaseVersionRow:(long long)arg1;	// IMP=0x00000000001085ff
- (void)_insertDatabaseVersionRow:(long long)arg1;	// IMP=0x00000000001083bb
- (long long)_databaseVersionExists:(_Bool *)arg1 valid:(_Bool *)arg2;	// IMP=0x0000000000108111
- (_Bool)_migrateDatabase:(CDUnknownBlockType)arg1;	// IMP=0x0000000000107d30
- (id)filteredPassesUsingPassDescriptionPredicate:(id)arg1 includeImageSets:(_Bool)arg2;	// IMP=0x0000000000107985
- (_Bool)hasPassesMatchingPassDescriptionPredicate:(id)arg1;	// IMP=0x0000000000107740
- (void)enumerateAllPassesAndDescriptionsWithBlock:(CDUnknownBlockType)arg1 includeImageSets:(_Bool)arg2;	// IMP=0x00000000001074bf
- (void)enumerateAllPassesWithBlock:(CDUnknownBlockType)arg1 includeImageSets:(_Bool)arg2;	// IMP=0x000000000010740f
- (id)manifestHashesForWatchOSMajorVersion:(unsigned long long)arg1;	// IMP=0x0000000000107044
@property(readonly) NSDictionary *manifestHashes; // @dynamic manifestHashes;
- (id)_libraryHashLockedForWatchOSMajorVersion:(unsigned long long)arg1;	// IMP=0x0000000000106a8a
- (id)libraryHashForWatchOSMajorVersion:(unsigned long long)arg1;	// IMP=0x0000000000106951
@property(readonly) NSData *libraryHash; // @dynamic libraryHash;
@property(readonly) NSArray *passDescriptions;
- (id)_getPreferredPaymentApplicationForPaymentPass:(id)arg1 aid:(id *)arg2;	// IMP=0x00000000001064b3
- (id)preferredPaymentApplicationForPaymentPass:(id)arg1;	// IMP=0x000000000010616e
- (void)setPreferredPaymentApplication:(id)arg1 forPaymentPass:(id)arg2;	// IMP=0x00000000001058e1
- (_Bool)_getDeletePendingForUniqueID:(id)arg1;	// IMP=0x0000000000105826
- (void)setDeletePending:(_Bool)arg1 forUniqueID:(id)arg2;	// IMP=0x000000000010512c
- (id)diffForUniqueID:(id)arg1;	// IMP=0x0000000000104fc0
- (id)passForUniqueID:(id)arg1 includeImageSets:(_Bool)arg2;	// IMP=0x0000000000104e4c
- (id)passForUniqueID:(id)arg1;	// IMP=0x0000000000104e35
- (void)_saveDiffLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x0000000000104be4
- (id)_diffForUniqueIDLocked:(id)arg1;	// IMP=0x0000000000104ace
- (id)_passForUniqueIDLocked:(id)arg1 includeImageSets:(_Bool)arg2;	// IMP=0x00000000001047d6
- (_Bool)_updateTransactionSourceIdentifiersDuringMigration:(id)arg1;	// IMP=0x00000000001040fb
- (_Bool)_updateCompleteRemoteHashesDuringMigration;	// IMP=0x000000000010408b
- (_Bool)_updateSettingsDuringMigration:(id)arg1;	// IMP=0x0000000000103e53
- (_Bool)_updateHasStoredValueDuringMigration:(id)arg1;	// IMP=0x0000000000103c1b
- (_Bool)_updateEncodedPaymentPassDuringMigration:(id)arg1;	// IMP=0x00000000001039ab
- (_Bool)_updateHasUserSelectableContactlessPaymentApplications:(id)arg1;	// IMP=0x0000000000103773
- (_Bool)_updateEffectivePaymentApplicationStateDuringMigration:(id)arg1;	// IMP=0x000000000010353b
- (_Bool)_updateLocalizedDescriptionDuringMigration:(id)arg1;	// IMP=0x00000000001032cb
- (_Bool)_updateOrganizationNamesDuringMigration:(id)arg1;	// IMP=0x000000000010305b
- (_Bool)_updateAvailableActionsDuringMigration:(id)arg1;	// IMP=0x0000000000102d7c
- (_Bool)_updateFrontAndBackFieldBucketsDuringMigration:(id)arg1;	// IMP=0x00000000001029e5
- (_Bool)_updateCompleteLocalHashesDuringMigration:(id)arg1;	// IMP=0x000000000010268f
- (_Bool)_updateIngestedDatesDuringMigration:(id)arg1;	// IMP=0x0000000000102433
- (_Bool)_updateDevicePaymentApplicationsDuringMigration:(id)arg1;	// IMP=0x0000000000102162
- (_Bool)_updateExpressPassTypesMaskDuringMigration:(id)arg1;	// IMP=0x0000000000101f2f
- (_Bool)_updateIssuerCountryCodesDuringMigration:(id)arg1;	// IMP=0x0000000000101cbf
- (_Bool)_repairEncodedImagesDuringMigration:(id)arg1;	// IMP=0x00000000001018cc
- (_Bool)_updateEncodedImageSetsDuringMigration:(id)arg1;	// IMP=0x00000000001015e3
- (_Bool)_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:(id)arg1;	// IMP=0x0000000000101233
- (_Bool)_updateDeviceAndPreferredPaymentApplicationsDuringMigration:(id)arg1;	// IMP=0x0000000000100e83
- (_Bool)_updatePrivateLabelAndCobrandDuringMigration:(id)arg1;	// IMP=0x0000000000100bef
- (_Bool)_updateNFCPayloadDuringMigration:(id)arg1;	// IMP=0x0000000000100950
- (void)_enumerateAllPassesForMigration:(CDUnknownBlockType)arg1;	// IMP=0x00000000001006d6
- (void)_setSubcredentialsLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000001000f0
- (id)_subcredentialsForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fff72
- (void)_setPaymentBalancesLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000ffa6e
- (id)_paymentBalancesForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000ff882
- (void)_setPendingAddValueDateLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000ff224
- (id)_pendingAddValueDateForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000ff146
- (void)_setLastAddValueAmountLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000feab1
- (id)_lastAddValueAmountForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fe9a4
- (id)_currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00000000000fe70e
- (void)_setCurrentEphemeralTransactionIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2;	// IMP=0x00000000000fe318
- (void)_setTransitAppletStateLocked:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000fdca6
- (id)_transitAppletStateForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fdb69
- (id)_passUniqueIdentifierForTransactionSourceIdentifierLocked:(id)arg1;	// IMP=0x00000000000fda8e
- (id)_transactionSourceIdentifierForPassUniqueIdentifierLocked:(id)arg1;	// IMP=0x00000000000fd9b3
- (id)_transactionSourceIdentifierForTransactionWithServiceIdentifierLocked:(id)arg1;	// IMP=0x00000000000fd8d8
- (void)_removeTransactionSourceIdentifierForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fd721
- (void)_createTransactionSourceIdentifierIfNecessaryForPassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fd4a5
- (id)_transactionSourceIdentifierForTransactionWithIdentifierLocked:(id)arg1;	// IMP=0x00000000000fd3ca
- (id)_transactionWithServiceIdentifierLocked:(id)arg1;	// IMP=0x00000000000fd2a7
- (id)_transactionWithIdentifierLocked:(id)arg1;	// IMP=0x00000000000fd184
- (id)_transactionsForTransactionSourceIdentifierLocked:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderByDate:(long long)arg6 limit:(unsigned long long)arg7;	// IMP=0x00000000000fce7e
- (void)_trimTransactionsForTransactionSourceIdentifierLocked:(id)arg1 withPaymentCredentialType:(long long)arg2;	// IMP=0x00000000000fcc71
- (void)_removeTransactionsForTransactionSource:(id)arg1;	// IMP=0x00000000000fcaba
- (void)_removeTransactionWithIdentifier:(id)arg1;	// IMP=0x00000000000fc903
- (void)_removeTransactionWithServiceIdentifierLocked:(id)arg1 forTransactionSourceIdentifier:(id)arg2;	// IMP=0x00000000000fc6f1
- (void)_saveTransactionLocked:(id)arg1 forTransactionSourceIdentifier:(id)arg2;	// IMP=0x00000000000fc34a
- (_Bool)_removePassWithUniqueIDLocked:(id)arg1;	// IMP=0x00000000000fbcb0
- (void)_savePassLocked:(id)arg1 locallyAdded:(_Bool)arg2 wasUpdate:(_Bool *)arg3;	// IMP=0x00000000000f8a36
- (_Bool)_passDBIsAvailableLocked;	// IMP=0x00000000000f8a13
@property(readonly, nonatomic) unsigned long long numberOfPasses;
- (void)_notifyDatabaseChangedExternally;	// IMP=0x00000000000f885b
- (void)_notifyDatabaseChangedWithNoop:(_Bool)arg1 firstUnlock:(_Bool)arg2;	// IMP=0x00000000000f8497
- (void)_notifyForFirstUnlock;	// IMP=0x00000000000f847e
- (void)_notifyDatabaseChangedWithNoop:(_Bool)arg1;	// IMP=0x00000000000f846a
- (CDUnknownBlockType)restoreBlockForVolatilePassData;	// IMP=0x00000000000f7686
- (id)pendingAddValueDateForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f7546
- (void)setPendingAddValueDate:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f746a
- (id)lastAddValueAmountForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f732a
- (void)setLastAddValueAmount:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f724e
- (id)currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00000000000f710e
- (void)setCurrentEphemeralTransactionIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2;	// IMP=0x00000000000f7032
- (void)setSubcredentials:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f6e3a
- (id)subcredentialsForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f6cce
- (void)setPaymentBalances:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f6ad6
- (id)paymentBalancesForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f684e
- (void)setTransitAppletState:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f6656
- (id)transitAppletStateForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f64ea
- (id)passUniqueIDForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00000000000f637e
- (id)transactionSourceIdentifierForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f6212
- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)arg1;	// IMP=0x00000000000f60a6
- (id)transactionSourceIdentifierForTransactionWithIdentifier:(id)arg1;	// IMP=0x00000000000f5f3a
- (id)transactionWithServiceIdentifier:(id)arg1;	// IMP=0x00000000000f5dce
- (id)transactionWithIdentifier:(id)arg1;	// IMP=0x00000000000f5c62
- (id)transactionsForTransactionSourceIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7;	// IMP=0x00000000000f5a52
- (id)transactionSourcesForPassWithUniqueID:(id)arg1;	// IMP=0x00000000000f5a39
- (void)removeTransactionsForTransactionSource:(id)arg1;	// IMP=0x00000000000f579a
- (void)removeTransactionWithIdentifier:(id)arg1;	// IMP=0x00000000000f54fb
- (void)_saveTransaction:(id)arg1 forTransactionSourceIdentifier:(id)arg2 withPaymentCredentialType:(long long)arg3 shouldTrim:(_Bool)arg4;	// IMP=0x00000000000f5003
- (void)saveTransaction:(id)arg1 forPass:(id)arg2;	// IMP=0x00000000000f4dc7
- (id)rebuildDatabaseWithPasses:(id)arg1;	// IMP=0x00000000000f490b
- (id)removePassWithUniqueID:(id)arg1;	// IMP=0x00000000000f467c
- (void)saveDiff:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x00000000000f4382
- (id)savePass:(id)arg1 isLocalPass:(_Bool)arg2;	// IMP=0x00000000000f3ca3
- (id)_decodeObjectOfClass:(Class)arg1 fromStatement:(struct sqlite3_stmt *)arg2 column:(int)arg3;	// IMP=0x00000000000f3c29
- (id)_decodeObjectOfClasses:(id)arg1 fromStatement:(struct sqlite3_stmt *)arg2 column:(int)arg3;	// IMP=0x00000000000f3a4e
- (void)_performTransactionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000f396a
- (void)_loadInitialManifestLocked;	// IMP=0x00000000000f24d6
- (struct sqlite3_stmt *)updateSubcredentialsForPassStatement;	// IMP=0x00000000000f239b
- (struct sqlite3_stmt *)selectSubcredentialsForPassStatement;	// IMP=0x00000000000f2260
- (struct sqlite3_stmt *)updateBalancesForPassStatement;	// IMP=0x00000000000f2125
- (struct sqlite3_stmt *)selectBalancesForPassStatement;	// IMP=0x00000000000f1fea
@property(readonly) struct sqlite3_stmt *updatePendingAddValueDateForPassStatement;
@property(readonly) struct sqlite3_stmt *selectPendingAddValueDateForPassStatement;
@property(readonly) struct sqlite3_stmt *updateLastAddValueAmountForPassStatement;
@property(readonly) struct sqlite3_stmt *selectLastAddValueAmountForPassStatement;
@property(readonly) struct sqlite3_stmt *currentEphemeralTransactionIdentifierStatement;
@property(readonly) struct sqlite3_stmt *deleteEphemeralTransactionByTransactionSourceIdentifierStatement;
@property(readonly) struct sqlite3_stmt *insertEphemeralTransactionStatement;
@property(readonly) struct sqlite3_stmt *updateTransitAppletStateForPassStatement;
@property(readonly) struct sqlite3_stmt *selectTransitAppletStateForPassStatement;
@property(readonly) struct sqlite3_stmt *trimTransactionsForTransactionSourceStatement;
@property(readonly) struct sqlite3_stmt *deleteTransactionsForTransactionSourceStatement;
@property(readonly) struct sqlite3_stmt *deleteTransactionSourceIdentifierForPassStatement;
- (struct sqlite3_stmt *)selectPassUniqueIdentifierForTransactionSourceIdentifierStatement;	// IMP=0x00000000000f0feb
- (struct sqlite3_stmt *)selectTransactionSourceIdentifierForPassUniqueIdentifierStatement;	// IMP=0x00000000000f0eb0
- (struct sqlite3_stmt *)selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement;	// IMP=0x00000000000f0d6b
- (struct sqlite3_stmt *)selectTransactionSourceIdentifierForTransactionWithIdentifierStatement;	// IMP=0x00000000000f0c30
@property(readonly) struct sqlite3_stmt *insertTransactionSourceIdentifierForPassStatement;
@property(readonly) struct sqlite3_stmt *selectTransactionWithServiceIdentifierStatement;
@property(readonly) struct sqlite3_stmt *selectTransactionWithIdentifierStatement;
- (struct sqlite3_stmt *)selectTransactionsStatementWithTransactionSource:(unsigned long long)arg1 orderByDate:(long long)arg2;	// IMP=0x00000000000f0421
- (struct sqlite3_stmt *)removeTransactionWithServiceIdentifierStatement;	// IMP=0x00000000000f02ec
- (struct sqlite3_stmt *)removeTransactionStatement;	// IMP=0x00000000000f01b7
- (struct sqlite3_stmt *)insertTransactionStatement;	// IMP=0x00000000000f0082
@property(readonly) struct sqlite3_stmt *selectPassDiffStatement; // @dynamic selectPassDiffStatement;
@property(readonly) struct sqlite3_stmt *selectPassAndImageSetsDataStatement; // @dynamic selectPassAndImageSetsDataStatement;
@property(readonly) struct sqlite3_stmt *selectPassDataStatement; // @dynamic selectPassDataStatement;
@property(readonly) struct sqlite3_stmt *selectPreferredAIDStatement;
@property(readonly) struct sqlite3_stmt *updatePreferredAIDStatement;
- (struct sqlite3_stmt *)selectDeletePendingStatement;	// IMP=0x00000000000ef944
@property(readonly) struct sqlite3_stmt *updateDeletePendingStatement;
@property(readonly) struct sqlite3_stmt *insertDiffStatement;
@property(readonly) struct sqlite3_stmt *insertStatement; // @dynamic insertStatement;
@property(readonly) struct sqlite3_stmt *deleteStatement; // @dynamic deleteStatement;
@property(readonly) struct sqlite3 *database; // @dynamic database;
- (void)_executeSQLQuery:(id)arg1 processResultsBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ecb0a
- (_Bool)_executeSQL:(id)arg1;	// IMP=0x00000000000ec95a
- (void)dealloc;	// IMP=0x00000000000ec722
- (id)init;	// IMP=0x00000000000ec61b

@end

