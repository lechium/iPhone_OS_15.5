//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NanoPassKit/NPKPaymentProvisioningFlowControllerProtocol-Protocol.h>
#import <NanoPassKit/PKContactlessCardIngesterDelegate-Protocol.h>
#import <NanoPassKit/PKPaymentAuthorizationControllerDelegate-Protocol.h>
#import <NanoPassKit/PKPaymentAuthorizationControllerPrivateDelegate-Protocol.h>

@class NPKFidoAuthCoordinator, NPKPaymentProvisioningFlowControllerPreconditionsStepContext, NPKPaymentProvisioningFlowControllerRequestContext, NSData, NSDecimalNumber, NSString, PKAddPaymentPassRequest, PKAddPaymentPassRequestConfiguration, PKAppleBalanceCredential, PKContactlessCardIngester, PKPaymentAuthorizationController, PKPaymentCredential, PKPaymentPass, PKPaymentProvisioningController, PKPaymentProvisioningMethodMetadata, PKPaymentRequest, PKPaymentSetupFieldsModel, PKPaymentSetupProduct, PKPaymentWebService, PKServiceProviderPurchase;
@protocol NPKPaymentProvisioningFlowControllerDelegate, NSObject, OS_dispatch_source;

@interface NPKPaymentProvisioningFlowController : NSObject <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate, PKContactlessCardIngesterDelegate, NPKPaymentProvisioningFlowControllerProtocol>
{
    _Bool _readerModeProvisioningSupported;	// 8 = 0x8
    _Bool _digitalIssuanceSupported;	// 9 = 0x9
    _Bool _separateLocalDeviceEntryRequired;	// 10 = 0xa
    _Bool _termsAcceptedOutOfBand;	// 11 = 0xb
    int _currentStep;	// 12 = 0xc
    id <NPKPaymentProvisioningFlowControllerDelegate> _delegate;	// 16 = 0x10
    PKPaymentProvisioningController *_provisioningController;	// 24 = 0x18
    long long _setupContext;	// 32 = 0x20
    PKPaymentAuthorizationController *_unitTestingAuthorizationController;	// 40 = 0x28
    PKContactlessCardIngester *_unitTestingCardIngester;	// 48 = 0x30
    PKAddPaymentPassRequestConfiguration *_inAppProvisioningRequestConfiguration;	// 56 = 0x38
    PKAddPaymentPassRequest *_inAppProvisioningRequest;	// 64 = 0x40
    NSData *_inAppProvisioningPublicKeyHash;	// 72 = 0x48
    NSData *_inAppProvisioningNonce;	// 80 = 0x50
    NSObject<OS_dispatch_source> *_inAppProvisioningGetRequestTimer;	// 88 = 0x58
    NPKFidoAuthCoordinator *_fidoAuthCoordinator;	// 96 = 0x60
    PKPaymentWebService *_webService;	// 104 = 0x68
    NPKPaymentProvisioningFlowControllerPreconditionsStepContext *_preconditionsRequestContext;	// 112 = 0x70
    NSString *_chooseCredentialsStepIdentifier;	// 120 = 0x78
    NSString *_immediatelyBeforeTermsStepIdentifier;	// 128 = 0x80
    PKPaymentSetupFieldsModel *_fieldsModel;	// 136 = 0x88
    id <NSObject> _progressNotificationToken;	// 144 = 0x90
    NPKPaymentProvisioningFlowControllerRequestContext *_provisioningProgressRequestContext;	// 152 = 0x98
    PKPaymentPass *_issuerVerificationPass;	// 160 = 0xa0
    PKPaymentCredential *_currentCredential;	// 168 = 0xa8
    PKAppleBalanceCredential *_currentAppleBalanceCredential;	// 176 = 0xb0
    PKPaymentSetupProduct *_currentProduct;	// 184 = 0xb8
    unsigned long long _termsReason;	// 192 = 0xc0
    PKPaymentRequest *_digitalIssuancePaymentRequest;	// 200 = 0xc8
    NSDecimalNumber *_digitalIssuanceAmount;	// 208 = 0xd0
    PKServiceProviderPurchase *_digitalIssuancePurchase;	// 216 = 0xd8
    NPKPaymentProvisioningFlowControllerRequestContext *_digitalIssuanceAmountRequestContext;	// 224 = 0xe0
    NPKPaymentProvisioningFlowControllerRequestContext *_digitalIssuancePaymentRequestContext;	// 232 = 0xe8
    PKPaymentAuthorizationController *_authorizationController;	// 240 = 0xf0
    PKContactlessCardIngester *_cardIngester;	// 248 = 0xf8
    unsigned long long _internalIngestionState;	// 256 = 0x100
    unsigned long long _flowIngestionState;	// 264 = 0x108
    double _ingestionProgress;	// 272 = 0x110
    unsigned long long _ingestionStateOnRetry;	// 280 = 0x118
    NSString *_ingestionCardSessionToken;	// 288 = 0x120
    NSObject<OS_dispatch_source> *_ingestionCardNotFoundTimer;	// 296 = 0x128
    PKPaymentProvisioningMethodMetadata *_ingestionMethodMetadata;	// 304 = 0x130
    NPKPaymentProvisioningFlowControllerRequestContext *_readerModeRequestContext;	// 312 = 0x138
}

+ (id)_productsArrayFromPickerSection:(id)arg1;	// IMP=0x000000000005b00d
+ (id)_filterAssociatedCredentials:(id)arg1 forProduct:(id)arg2;	// IMP=0x000000000005947c
+ (_Bool)_localCredentials:(id)arg1 containProduct:(id)arg2;	// IMP=0x0000000000089acb
+ (_Bool)_isHSA2Enabled;	// IMP=0x0000000000089a02
+ (id)_authContext;	// IMP=0x0000000000089922
+ (void)_addCreditDebitItemToSection:(CDUnknownBlockType)arg1 webService:(id)arg2;	// IMP=0x000000000008982e
+ (void)_addAppleBalanceToSections:(id)arg1 fromModel:(id)arg2;	// IMP=0x0000000000089628
+ (void)_addGroupedItemsToSections:(id)arg1 fromModel:(id)arg2 webService:(id)arg3 paymentSection:(CDUnknownBlockType)arg4;	// IMP=0x00000000000889fa
+ (id)_filteredPaymentSetupProducts:(id)arg1 localCredentials:(id)arg2 setupContext:(long long)arg3 webService:(id)arg4 mobileCarrierRegion:(id)arg5 readerModeSupported:(_Bool)arg6 digitalIssuanceSupported:(_Bool)arg7;	// IMP=0x0000000000087b62
+ (id)_flowPickerSectionsWithContext:(long long)arg1 provisioningController:(id)arg2 readerModeSupported:(_Bool)arg3 digitalIssuanceSupported:(_Bool)arg4;	// IMP=0x0000000000087709
+ (id)_displayableCouldNotAddCardErrorWithUnderlyingError:(id)arg1;	// IMP=0x00000000000d827e
+ (id)_displayableErrorWithUnderlyingVerificationError:(id)arg1;	// IMP=0x00000000000d7fcc
+ (id)_displayableErrorWithIneligibilityReason:(long long)arg1 learnMoreURL:(id)arg2;	// IMP=0x00000000000d7bc4
+ (id)_physicalCardURLFromMetadata:(id)arg1 forScale:(double)arg2;	// IMP=0x000000000014f271
+ (id)_readerModeResources;	// IMP=0x000000000014f19d
+ (_Bool)_readerModeEntryAllowedForProduct:(id)arg1;	// IMP=0x000000000014d640
- (void).cxx_destruct;	// IMP=0x000000000006938b
@property(retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *readerModeRequestContext; // @synthesize readerModeRequestContext=_readerModeRequestContext;
@property(retain, nonatomic) PKPaymentProvisioningMethodMetadata *ingestionMethodMetadata; // @synthesize ingestionMethodMetadata=_ingestionMethodMetadata;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *ingestionCardNotFoundTimer; // @synthesize ingestionCardNotFoundTimer=_ingestionCardNotFoundTimer;
@property(retain, nonatomic) NSString *ingestionCardSessionToken; // @synthesize ingestionCardSessionToken=_ingestionCardSessionToken;
@property(nonatomic) unsigned long long ingestionStateOnRetry; // @synthesize ingestionStateOnRetry=_ingestionStateOnRetry;
@property(nonatomic) double ingestionProgress; // @synthesize ingestionProgress=_ingestionProgress;
@property(nonatomic) unsigned long long flowIngestionState; // @synthesize flowIngestionState=_flowIngestionState;
@property(nonatomic) unsigned long long internalIngestionState; // @synthesize internalIngestionState=_internalIngestionState;
@property(retain, nonatomic) PKContactlessCardIngester *cardIngester; // @synthesize cardIngester=_cardIngester;
@property(retain, nonatomic) PKPaymentAuthorizationController *authorizationController; // @synthesize authorizationController=_authorizationController;
@property(retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuancePaymentRequestContext; // @synthesize digitalIssuancePaymentRequestContext=_digitalIssuancePaymentRequestContext;
@property(retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuanceAmountRequestContext; // @synthesize digitalIssuanceAmountRequestContext=_digitalIssuanceAmountRequestContext;
@property(retain, nonatomic) PKServiceProviderPurchase *digitalIssuancePurchase; // @synthesize digitalIssuancePurchase=_digitalIssuancePurchase;
@property(retain, nonatomic) NSDecimalNumber *digitalIssuanceAmount; // @synthesize digitalIssuanceAmount=_digitalIssuanceAmount;
@property(retain, nonatomic) PKPaymentRequest *digitalIssuancePaymentRequest; // @synthesize digitalIssuancePaymentRequest=_digitalIssuancePaymentRequest;
@property(nonatomic) _Bool termsAcceptedOutOfBand; // @synthesize termsAcceptedOutOfBand=_termsAcceptedOutOfBand;
@property(nonatomic) unsigned long long termsReason; // @synthesize termsReason=_termsReason;
@property(retain, nonatomic) PKPaymentSetupProduct *currentProduct; // @synthesize currentProduct=_currentProduct;
@property(retain, nonatomic) PKAppleBalanceCredential *currentAppleBalanceCredential; // @synthesize currentAppleBalanceCredential=_currentAppleBalanceCredential;
@property(retain, nonatomic) PKPaymentCredential *currentCredential; // @synthesize currentCredential=_currentCredential;
@property(retain, nonatomic) PKPaymentPass *issuerVerificationPass; // @synthesize issuerVerificationPass=_issuerVerificationPass;
@property(retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *provisioningProgressRequestContext; // @synthesize provisioningProgressRequestContext=_provisioningProgressRequestContext;
@property(retain, nonatomic) id <NSObject> progressNotificationToken; // @synthesize progressNotificationToken=_progressNotificationToken;
@property(retain, nonatomic) PKPaymentSetupFieldsModel *fieldsModel; // @synthesize fieldsModel=_fieldsModel;
@property(retain, nonatomic) NSString *immediatelyBeforeTermsStepIdentifier; // @synthesize immediatelyBeforeTermsStepIdentifier=_immediatelyBeforeTermsStepIdentifier;
@property(retain, nonatomic) NSString *chooseCredentialsStepIdentifier; // @synthesize chooseCredentialsStepIdentifier=_chooseCredentialsStepIdentifier;
@property(retain, nonatomic) NPKPaymentProvisioningFlowControllerPreconditionsStepContext *preconditionsRequestContext; // @synthesize preconditionsRequestContext=_preconditionsRequestContext;
@property(nonatomic) int currentStep; // @synthesize currentStep=_currentStep;
@property(retain, nonatomic) PKPaymentWebService *webService; // @synthesize webService=_webService;
@property(retain, nonatomic) NPKFidoAuthCoordinator *fidoAuthCoordinator; // @synthesize fidoAuthCoordinator=_fidoAuthCoordinator;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *inAppProvisioningGetRequestTimer; // @synthesize inAppProvisioningGetRequestTimer=_inAppProvisioningGetRequestTimer;
@property(retain, nonatomic) NSData *inAppProvisioningNonce; // @synthesize inAppProvisioningNonce=_inAppProvisioningNonce;
@property(retain, nonatomic) NSData *inAppProvisioningPublicKeyHash; // @synthesize inAppProvisioningPublicKeyHash=_inAppProvisioningPublicKeyHash;
@property(retain, nonatomic) PKAddPaymentPassRequest *inAppProvisioningRequest; // @synthesize inAppProvisioningRequest=_inAppProvisioningRequest;
@property(retain, nonatomic) PKAddPaymentPassRequestConfiguration *inAppProvisioningRequestConfiguration; // @synthesize inAppProvisioningRequestConfiguration=_inAppProvisioningRequestConfiguration;
@property(retain, nonatomic) PKContactlessCardIngester *unitTestingCardIngester; // @synthesize unitTestingCardIngester=_unitTestingCardIngester;
@property(retain, nonatomic) PKPaymentAuthorizationController *unitTestingAuthorizationController; // @synthesize unitTestingAuthorizationController=_unitTestingAuthorizationController;
@property(nonatomic, getter=isSeparateLocalDeviceEntryRequired) _Bool separateLocalDeviceEntryRequired; // @synthesize separateLocalDeviceEntryRequired=_separateLocalDeviceEntryRequired;
@property(nonatomic, getter=isDigitalIssuanceSupported) _Bool digitalIssuanceSupported; // @synthesize digitalIssuanceSupported=_digitalIssuanceSupported;
@property(nonatomic, getter=isReaderModeProvisioningSupported) _Bool readerModeProvisioningSupported; // @synthesize readerModeProvisioningSupported=_readerModeProvisioningSupported;
@property(readonly, nonatomic) long long setupContext; // @synthesize setupContext=_setupContext;
@property(readonly, nonatomic) PKPaymentProvisioningController *provisioningController; // @synthesize provisioningController=_provisioningController;
@property(nonatomic) __weak id <NPKPaymentProvisioningFlowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_requestPassDetailsForAccountCredential:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000068c2c
- (void)_verifyPasscodeStateIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000068c11
- (void)_configureWebServiceIfNecessary:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000068a22
- (id)_requiredFieldsFromRequirementsResponse;	// IMP=0x0000000000068680
- (id)_filteredPaymentSetupFields:(id)arg1 forLocalDeviceEntry:(_Bool)arg2;	// IMP=0x00000000000685bb
- (_Bool)_fieldRequiresLocalEntry:(id)arg1;	// IMP=0x000000000006856a
- (_Bool)_fieldsModelCompleteExceptForLocalFields:(id)arg1;	// IMP=0x00000000000681b5
- (id)_localRequiredFieldsFromRequirementsResponse;	// IMP=0x00000000000680fd
- (id)_requiredFieldsFromRequirementsResponseExcludingLocalFields;	// IMP=0x0000000000067fb6
- (void)_sendDidEncounterError:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000067e30
- (void)_sendDidTransitionFromStep:(int)arg1 toStep:(int)arg2 withContext:(id)arg3;	// IMP=0x0000000000067698
- (void)_performTransitionToStep:(int)arg1 withContext:(id)arg2;	// IMP=0x00000000000673e8
- (void)_endProvisioningFlowWithError:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000067335
- (void)_endProvisioningFlowWithSuccessForPass:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000006727f
- (void)_handleEndOfProvisioningFlowForCurrentPass:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000067061
- (void)_transitionToVerificationCodeWithPaymentPass:(id)arg1 channel:(id)arg2 requestContext:(id)arg3;	// IMP=0x0000000000066eb1
- (void)_transitionToVerificationFieldsWithPaymentPass:(id)arg1 fields:(id)arg2 requestContext:(id)arg3;	// IMP=0x0000000000066d20
- (void)_transitionToVerificationChannelsWithPaymentPass:(id)arg1 channels:(id)arg2 requestContext:(id)arg3;	// IMP=0x0000000000066ba2
- (void)_transitionToMoreInformationWithItems:(id)arg1 pass:(id)arg2 requestContext:(id)arg3;	// IMP=0x0000000000066a24
- (void)_transitionToProductDisambiguationWithProducts:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000066980
- (void)_transitionToSecondaryManualEntryWithFields:(id)arg1 credential:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000006659b
- (id)_secondaryFilteredFields:(id)arg1 forCredential:(id)arg2;	// IMP=0x000000000006648c
- (id)_credentialReadonlyFieldIdentifiers;	// IMP=0x0000000000066422
- (void)_transitionToManualEntry:(id)arg1;	// IMP=0x0000000000065f9f
- (id)_curatedDefaultPaymentSetupProvisioningFields;	// IMP=0x0000000000065ecd
- (void)_transitionToAppleBalanceAccountDetailsWithProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000065cae
- (void)_transitionToChooseCredentials:(id)arg1 product:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000006591e
- (void)_transitionBasedOnCredentials:(id)arg1 product:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000006553c
- (void)_transitionToProvisioningForCredential:(id)arg1 product:(id)arg2 requestContext:(id)arg3;	// IMP=0x00000000000652b2
- (void)_transitionToProvisioningProgressWithRequestContext:(id)arg1;	// IMP=0x000000000006521b
- (void)_transitionToTermsForReason:(unsigned long long)arg1 URL:(id)arg2 requestContext:(id)arg3;	// IMP=0x00000000000650fd
- (void)_transitionToChooseProductWithProducts:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000065059
- (void)_transitionToChooseFlowWithSections:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000064fb5
- (void)_provisioningLocalizedProgressDescriptionDidChange:(id)arg1;	// IMP=0x0000000000064ecf
- (void)_downloadRemoteAssetsAndAddPaymentPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000064ccc
- (void)_downloadAndAddUpdatedPassForPaymentPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000064b8e
- (void)_handleVerificationCode:(id)arg1 forPass:(id)arg2 context:(id)arg3;	// IMP=0x000000000006492a
- (void)_handleVerificationFieldsForPass:(id)arg1 context:(id)arg2;	// IMP=0x0000000000064564
- (void)_updateVerificationForPass:(id)arg1 channel:(id)arg2 context:(id)arg3;	// IMP=0x0000000000064282
- (void)_requestVerificationOptionsForPass:(id)arg1 context:(id)arg2;	// IMP=0x0000000000064030
- (void)_handleVerificationResponseForPass:(id)arg1 context:(id)arg2;	// IMP=0x0000000000063d00
- (void)_performNextStepForProvisionedPass:(id)arg1 moreInfoAcknowledged:(_Bool)arg2 requestContext:(id)arg3;	// IMP=0x0000000000063aba
- (void)_performNextStepForProvisionedPass:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000063aa3
- (void)_handleFinished:(id)arg1;	// IMP=0x00000000000639a2
- (void)_performProvisionWithRequest:(id)arg1 requestContext:(id)arg2 assertion:(id)arg3;	// IMP=0x0000000000063663
- (void)_performProvision:(id)arg1;	// IMP=0x000000000006303a
- (void)_performTerms:(id)arg1;	// IMP=0x0000000000062ea7
- (void)_performPasscodeUpgrade:(id)arg1;	// IMP=0x0000000000062bc3
- (_Bool)_isPasscodeUpgradeRequired;	// IMP=0x0000000000062bad
- (void)_handlePasscodeUpgradeCompleteWithSuccess:(_Bool)arg1 error:(id)arg2 requestContext:(id)arg3;	// IMP=0x0000000000062b55
- (void)_performValidateSecurityRequirements:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000062926
- (_Bool)_isValidateSecurityRequirementsRequired;	// IMP=0x00000000000628e4
- (void)_performResolveLocalEligibilityARequirements:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000626c5
- (_Bool)_isResolveLocalEligibilityRequired;	// IMP=0x0000000000062683
- (void)_performProvisioningEligibility:(id)arg1;	// IMP=0x000000000006206f
- (void)_performEligibility:(id)arg1;	// IMP=0x0000000000061ee2
- (void)_requestRequirements:(id)arg1;	// IMP=0x00000000000614c4
- (id)_newPaymentProvisioningRequest;	// IMP=0x0000000000061211
- (id)_newPaymentEligibilityRequest;	// IMP=0x0000000000060aad
- (id)_newPaymentRequirementsRequest;	// IMP=0x00000000000607dc
- (void)_performNextActionForProvisioningState:(id)arg1;	// IMP=0x00000000000604bb
- (void)_startProvisioningForCredential:(id)arg1 requestContext:(id)arg2;	// IMP=0x0000000000060214
- (void)_handleProceedWithCredentials:(id)arg1 chosenByUser:(_Bool)arg2 requestContext:(id)arg3;	// IMP=0x000000000005ffe6
- (void)_handleAppleBalanceAccountDetailsAcknowledgedWithProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005fee1
- (void)_handleAppleBalanceProductChosen:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005f624
- (void)_handleProductChosen:(id)arg1 includeCardsOnFile:(_Bool)arg2 requestContext:(id)arg3;	// IMP=0x000000000005f343
- (void)_handlePreconditionsVerified:(id)arg1;	// IMP=0x000000000005f2c5
- (void)_handleProvisioningFlowStarted:(id)arg1;	// IMP=0x000000000005e9f4
- (void)_fetchAddRequestWithCertificatesResponse:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005e6c4
- (void)_fetchInAppProvisioningCertificates:(id)arg1;	// IMP=0x000000000005e07a
- (void)_performRequirementsOrEligibilityForInAppProvisioning:(id)arg1;	// IMP=0x000000000005e055
- (void)handleIssuerApplicationAddRequest:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005ddcb
- (void)startInAppProvisioningFlowWithConfiguration:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005dbe1
- (void)skipIssuerVerification:(id)arg1;	// IMP=0x000000000005daa6
- (void)handleIssuerVerificationCode:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005d93d
- (void)handleIssuerVerificationFields:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005d5db
- (void)handleIssuerVerificationChannel:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005d4fc
- (void)startIssuerVerificationFlowForPaymentPass:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005d2e8
- (void)acknowledgeMoreInformation:(id)arg1;	// IMP=0x000000000005d1ae
- (void)skipProvisioning:(id)arg1;	// IMP=0x000000000005d101
- (void)acceptTerms:(id)arg1;	// IMP=0x000000000005cf89
- (void)acknowledgeAppleBalanceAccountDetailsWithProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005ce37
- (void)handlePasscodeUpgradeCompleteWithSuccess:(_Bool)arg1 error:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000005ccc7
- (void)handleProductSelection:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005c87b
- (void)handleManualEntryFields:(id)arg1 credential:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000005bce6
- (void)chooseManualEntry:(id)arg1;	// IMP=0x000000000005bc3d
- (void)chooseCredentials:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b9e9
- (void)handleReaderModeFields:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b900
- (void)chooseReaderMode:(id)arg1;	// IMP=0x000000000005b859
- (void)handleDigitalIssuanceAmount:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b777
- (void)chooseProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b75d
- (void)chooseProduct:(id)arg1 includeCardsOnFile:(_Bool)arg2 requestContext:(id)arg3;	// IMP=0x000000000005b5a3
- (void)chooseProductAndCredentialsFlowForProduct:(id)arg1 credentials:(id)arg2 requestContext:(id)arg3;	// IMP=0x000000000005b588
- (void)prefetchCredentialsForProduct:(id)arg1 requestContext:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005b2f4
- (void)chooseEMoneyProductFromFlowPickerSection:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b2dc
- (void)chooseTransitProductFromFlowPickerSection:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005b2c4
- (void)_chooseProductFromFlowPickerSection:(id)arg1 requestContext:(id)arg2 transitioningToStep:(int)arg3;	// IMP=0x000000000005b1ef
- (void)chooseCardsOnFileFlowForProduct:(id)arg1 requestContext:(id)arg2 preloadMetadata:(_Bool)arg3;	// IMP=0x000000000005ad80
- (void)ensureMetadataForCredentials:(id)arg1 requestContext:(id)arg2 updateHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000005a9c8
- (void)_cardsOnFileForProduct:(id)arg1 updateHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005a8b1
- (void)_ensureMetadataForCredentials:(id)arg1 updateHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000059845
- (_Bool)hasCredentialsAssociatedWithProduct:(id)arg1;	// IMP=0x000000000005979d
- (void)chooseFlowForPickerItem:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000005928e
- (void)acknowledgeWelcome:(id)arg1;	// IMP=0x0000000000058df0
- (void)startProvisioningFlow:(id)arg1;	// IMP=0x0000000000058c63
- (void)reset;	// IMP=0x0000000000058aa6
- (void)dealloc;	// IMP=0x0000000000058a05
- (id)initWithProvisioningController:(id)arg1 setupContext:(long long)arg2;	// IMP=0x000000000005861c
- (id)_addCardErrorForPaymentRequest:(id)arg1;	// IMP=0x00000000000bcffe
- (void)paymentAuthorizationController:(id)arg1 didAuthorizePurchase:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bcefc
- (void)paymentAuthorizationControllerDidFinish:(id)arg1;	// IMP=0x00000000000bcb01
- (void)paymentAuthorizationController:(id)arg1 didAuthorizePayment:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bca9c
- (id)_paymentRequestForAmount:(id)arg1;	// IMP=0x00000000000bc55f
- (void)_startDigitalIssuancePaymentWithAmount:(id)arg1 requestContext:(id)arg2;	// IMP=0x00000000000bc04e
- (void)_canMakeDigitalIssuancePaymentsForTransitProductsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000bbf83
- (void)_canMakeDigitalIssuancePaymentsForTransitProducts:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bb477
- (void)_handleDigitalIssuanceTermsAccepted:(id)arg1;	// IMP=0x00000000000bb0ac
- (void)_transitionToDigitalIssuanceForProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x00000000000bafcb
- (id)_subtitleForState:(unsigned long long)arg1;	// IMP=0x000000000014f600
- (id)_titleForState:(unsigned long long)arg1;	// IMP=0x000000000014f45a
- (void)_invalidateCardNotFoundTimer;	// IMP=0x000000000014f118
- (void)_startCardNotFoundTimer;	// IMP=0x000000000014ef64
- (void)_cardNotFoundTimerFired;	// IMP=0x000000000014ef4d
- (void)_transitionToIngestionProgress:(double)arg1;	// IMP=0x000000000014ef0a
- (void)_transitionToFlowIngestionState:(unsigned long long)arg1;	// IMP=0x000000000014eecd
- (void)_removePassIfNecessary;	// IMP=0x000000000014ee22
- (void)_resetReaderModeProvisioningState;	// IMP=0x000000000014ecb9
- (void)_startTransferringCard;	// IMP=0x000000000014e906
- (void)_startReadingCard;	// IMP=0x000000000014e5cf
- (void)_startIngestion;	// IMP=0x000000000014e524
- (void)contactlessCardIngester:(id)arg1 didFailToIngestCardWithError:(id)arg2 resetProvisioning:(_Bool)arg3 isRecoverable:(_Bool)arg4;	// IMP=0x000000000014e25f
- (void)_transitionToFlowIngestionState:(unsigned long long)arg1 progress:(double)arg2;	// IMP=0x000000000014e079
- (void)contactlessCardIngester:(id)arg1 didUpdateCardIngestionStatus:(unsigned long long)arg2;	// IMP=0x000000000014dde5
- (void)_tearDownCardIngester;	// IMP=0x000000000014dd6f
- (void)_setupCardIngester;	// IMP=0x000000000014dc9f
- (void)_noteProvisioningStateChangeForReaderMode:(long long)arg1;	// IMP=0x000000000014db8d
- (void)_startReaderModeIngestion:(id)arg1;	// IMP=0x000000000014db41
- (void)_handleReaderModeTermsAccepted:(id)arg1;	// IMP=0x000000000014da6c
- (void)_transitionToReaderModeForProduct:(id)arg1 requestContext:(id)arg2;	// IMP=0x000000000014d7a7

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

