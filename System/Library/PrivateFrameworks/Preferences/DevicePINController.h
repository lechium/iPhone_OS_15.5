//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSDictionary, NSNumber, NSString, UIBarButtonItem;
@protocol DevicePINControllerDelegate;

@interface DevicePINController
{
    int _mode;	// 40 = 0x28
    int _substate;	// 44 = 0x2c
    NSString *_oldPassword;	// 48 = 0x30
    NSString *_lastEntry;	// 56 = 0x38
    _Bool _success;	// 64 = 0x40
    id _pinDelegate;	// 72 = 0x48
    UIBarButtonItem *_cancelButton;	// 80 = 0x50
    UIBarButtonItem *_nextButton;	// 88 = 0x58
    UIBarButtonItem *_doneButton;	// 96 = 0x60
    NSString *_error1;	// 104 = 0x68
    NSString *_error2;	// 112 = 0x70
    _Bool _hasBeenDismissed;	// 120 = 0x78
    long long _sepOnceToken;	// 128 = 0x80
    NSDictionary *_sepLockInfo;	// 136 = 0x88
    _Bool _useSEPLockInfo;	// 144 = 0x90
    NSNumber *_requiresKeyboard;	// 152 = 0x98
    NSNumber *_pinLength;	// 160 = 0xa0
    NSNumber *_simplePIN;	// 168 = 0xa8
    NSNumber *_numericPIN;	// 176 = 0xb0
    _Bool _hidesNavigationButtons;	// 184 = 0xb8
    _Bool _hidesCancelButton;	// 185 = 0xb9
    _Bool _shouldDismissWhenDone;	// 186 = 0xba
    _Bool _allowOptionsButton;	// 187 = 0xbb
    NSString *_doneButtonTitle;	// 192 = 0xc0
    NSString *_passcodeOptionsTitle;	// 200 = 0xc8
    CDUnknownBlockType _passcodeOptionsHandler;	// 208 = 0xd0
}

+ (_Bool)settingEnabled;	// IMP=0x0000000000066030
- (void).cxx_destruct;	// IMP=0x000000000006b3c3
@property(copy, nonatomic) CDUnknownBlockType passcodeOptionsHandler; // @synthesize passcodeOptionsHandler=_passcodeOptionsHandler;
@property(copy, nonatomic) NSString *passcodeOptionsTitle; // @synthesize passcodeOptionsTitle=_passcodeOptionsTitle;
@property(nonatomic) _Bool allowOptionsButton; // @synthesize allowOptionsButton=_allowOptionsButton;
@property(copy, nonatomic) NSString *doneButtonTitle; // @synthesize doneButtonTitle=_doneButtonTitle;
@property(nonatomic) _Bool shouldDismissWhenDone; // @synthesize shouldDismissWhenDone=_shouldDismissWhenDone;
@property(nonatomic) _Bool hidesCancelButton; // @synthesize hidesCancelButton=_hidesCancelButton;
@property(nonatomic) _Bool hidesNavigationButtons; // @synthesize hidesNavigationButtons=_hidesNavigationButtons;
@property(nonatomic) __weak id <DevicePINControllerDelegate> pinDelegate; // @synthesize pinDelegate=_pinDelegate;
- (void)setSuccess:(_Bool)arg1;	// IMP=0x000000000006b2a0
- (_Bool)success;	// IMP=0x000000000006b290
- (id)title;	// IMP=0x000000000006b0eb
- (void)setPane:(id)arg1;	// IMP=0x000000000006adb8
- (id)pinPane;	// IMP=0x000000000006ada0
- (void)showPasscodeOptions:(id)arg1;	// IMP=0x000000000006ac5a
- (id)passcodeOptionsAlertController;	// IMP=0x000000000006a74a
- (void)_setPINPaneToSimple:(_Bool)arg1 simpleLength:(int)arg2 numeric:(_Bool)arg3 requiresKeyboard:(int)arg4;	// IMP=0x000000000006a620
- (_Bool)_shouldShowOptionsButton;	// IMP=0x000000000006a4ee
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x000000000006a444
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x000000000006a3f8
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x000000000006a363
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x000000000006a2a3
- (id)pinInstructionsPromptFont;	// IMP=0x000000000006a280
- (id)pinInstructionsPrompt;	// IMP=0x000000000006a15e
- (void)cancelButtonTapped;	// IMP=0x000000000006a023
- (_Bool)_shouldCheckForWeakness;	// IMP=0x0000000000069ff4
- (void)_preflightPasswordForWeakness:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000069d59
- (void)_removePinWithOldPassword:(id)arg1;	// IMP=0x0000000000069b15
- (void)pinEntered:(id)arg1;	// IMP=0x0000000000068c82
- (_Bool)_asyncSetPinCompatible;	// IMP=0x0000000000068c7a
- (void)_slidePasscodeFieldLeft:(_Bool)arg1;	// IMP=0x0000000000068a48
- (void)viewWillLayoutSubviews;	// IMP=0x000000000006898b
- (void)loadView;	// IMP=0x000000000006891c
- (_Bool)completedInputIsValid:(id)arg1;	// IMP=0x0000000000068914
- (void)adjustButtonsForPasswordLength:(unsigned long long)arg1;	// IMP=0x00000000000688c0
- (void)_updatePINButtons;	// IMP=0x000000000006852c
- (_Bool)showSimplePINCancelButtonOnLeft;	// IMP=0x0000000000068524
- (void)_showPINConfirmationError;	// IMP=0x0000000000068469
- (void)_showUnacceptablePINError:(id)arg1 password:(id)arg2;	// IMP=0x00000000000682cd
- (void)_updateUI;	// IMP=0x0000000000068278
- (void)_updateErrorTextAndFailureCount:(_Bool)arg1;	// IMP=0x0000000000067ebb
- (void)_showFailedAttempts;	// IMP=0x0000000000067ded
- (void)suspend;	// IMP=0x0000000000067dd1
- (void)performActionAfterPINRemove;	// IMP=0x0000000000067dcb
- (void)performActionAfterPINSet;	// IMP=0x0000000000067dc5
- (void)performActionAfterPINEntry;	// IMP=0x0000000000067dbf
- (_Bool)attemptValidationWithPIN:(id)arg1;	// IMP=0x0000000000067d55
- (void)_adjustUnblockTime;	// IMP=0x0000000000067c22
- (double)_secondsToBlockForFailedAttempts:(long long)arg1;	// IMP=0x0000000000067bf2
- (void)_setUnblockTime:(double)arg1;	// IMP=0x0000000000067b6e
- (_Bool)isBlocked;	// IMP=0x0000000000067b50
- (double)blockedTimeRemaining;	// IMP=0x0000000000067aa2
- (double)unblockTime;	// IMP=0x000000000006799a
- (void)_clearBlockedState;	// IMP=0x00000000000678e3
- (void)_setNumberOfFailedAttempts:(long long)arg1;	// IMP=0x000000000006783f
- (long long)numberOfFailedAttempts;	// IMP=0x00000000000677cd
- (void)_rereadBlockedState;	// IMP=0x000000000006777f
- (void)_invalidateSEPLockInfo;	// IMP=0x000000000006775e
- (id)_sepLockInfo;	// IMP=0x0000000000067749
- (_Bool)_useSEPLockInfo;	// IMP=0x00000000000675ca
@property(nonatomic, getter=isNumericPIN) _Bool numericPIN;
- (_Bool)isCreatingPasscode;	// IMP=0x0000000000067561
@property(nonatomic) int pinLength;
@property(nonatomic) _Bool simplePIN;
@property(nonatomic) _Bool requiresKeyboard;
- (int)_simplePasscodeType;	// IMP=0x00000000000671f5
- (int)_getScreenType;	// IMP=0x0000000000067150
- (struct __CFString *)blockedStateKey;	// IMP=0x0000000000067143
- (struct __CFString *)blockTimeIntervalKey;	// IMP=0x0000000000067136
- (struct __CFString *)failedAttemptsKey;	// IMP=0x0000000000067129
- (struct __CFString *)defaultsID;	// IMP=0x000000000006711c
- (_Bool)useProgressiveDelays;	// IMP=0x0000000000067114
- (_Bool)validatePIN:(id)arg1;	// IMP=0x0000000000067049
- (id)_createAndShowAnimatedNavBarSpinner;	// IMP=0x0000000000066f93
- (void)setPIN:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000066705
- (void)setPIN:(id)arg1;	// IMP=0x00000000000666ff
- (_Bool)pinIsAcceptable:(id)arg1 outError:(id *)arg2;	// IMP=0x000000000006650a
- (void)setLastEntry:(id)arg1;	// IMP=0x00000000000664f6
- (void)setOldPassword:(id)arg1;	// IMP=0x00000000000664e2
- (void)dealloc;	// IMP=0x0000000000066496
- (id)stringsBundle;	// IMP=0x000000000006646b
- (id)stringsTable;	// IMP=0x000000000006645e
- (void)_dismiss;	// IMP=0x00000000000662e3
- (struct CGSize)overallContentSizeForViewInPopover;	// IMP=0x00000000000662b2
- (int)mode;	// IMP=0x00000000000662a2
- (void)setMode:(int)arg1;	// IMP=0x000000000006622d
- (void)setSpecifier:(id)arg1;	// IMP=0x0000000000066143
- (id)init;	// IMP=0x00000000000660c2
- (void)willUnlock;	// IMP=0x000000000006607b

@end

