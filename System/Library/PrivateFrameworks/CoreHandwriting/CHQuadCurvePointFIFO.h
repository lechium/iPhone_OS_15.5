//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE;
@protocol CHPointFIFODrawingTarget;

@interface CHQuadCurvePointFIFO
{
    _Bool _emitInterpolatedPoints;	// 16 = 0x10
    float _unitScale;	// 20 = 0x14
    CDUnknownBlockType _emissionHandler;	// 24 = 0x18
    struct CGPath *_path;	// 32 = 0x20
    double _lineWidth;	// 40 = 0x28
    id <CHPointFIFODrawingTarget> _drawingTarget;	// 48 = 0x30
    MISSING_TYPE *_lastPoint;	// 64 = 0x40
    vector_82477975 _prevPoints;	// 80 = 0x50
    vector_82477975 _points;	// 104 = 0x68
    vector_82477975 _controlPoints;	// 128 = 0x80
}

+ (MISSING_TYPE *)interpolateFromPoint:(float)arg1 toPoint:controlPoint:time: /* Error: Ran out of types for this method. */;	// IMP=0x00000000000a94e0
- (id).cxx_construct;	// IMP=0x00000000000aafb0
- (void).cxx_destruct;	// IMP=0x00000000000aaf30
@property(retain, nonatomic) id <CHPointFIFODrawingTarget> drawingTarget; // @synthesize drawingTarget=_drawingTarget;
@property(nonatomic) MISSING_TYPE *lastPoint; // @synthesize lastPoint=_lastPoint;
@property(nonatomic) vector_242c0691 controlPoints; // @synthesize controlPoints=_controlPoints;
@property(nonatomic) vector_242c0691 points; // @synthesize points=_points;
@property(nonatomic) vector_242c0691 prevPoints; // @synthesize prevPoints=_prevPoints;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(nonatomic) struct CGPath *path; // @synthesize path=_path;
@property(copy) CDUnknownBlockType emissionHandler; // @synthesize emissionHandler=_emissionHandler;
@property(nonatomic) _Bool emitInterpolatedPoints; // @synthesize emitInterpolatedPoints=_emitInterpolatedPoints;
@property(nonatomic) float unitScale; // @synthesize unitScale=_unitScale;
- (void)clear;	// IMP=0x00000000000aaaa0
- (void)flush;	// IMP=0x00000000000aa1f0
- (void)addPoint: /* Error: Ran out of types for this method. */;	// IMP=0x00000000000a9560
- (void)setUnitScaleForViewSize:(struct CGSize)arg1 normalizedSize:(struct CGSize)arg2 contentScaleFactor:(double)arg3;	// IMP=0x00000000000a9520
- (void)dealloc;	// IMP=0x00000000000a9460
- (id)initWithFIFO:(id)arg1 drawingTarget:(id)arg2;	// IMP=0x00000000000a93e0
- (id)initWithFIFO:(id)arg1;	// IMP=0x00000000000a9370

@end

