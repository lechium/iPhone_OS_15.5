//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface CHLanguageUtilities : NSObject
{
}

+ (id)lexiconCorrectionsForToken:(id)arg1 locale:(id)arg2 lexicon:(struct _LXLexicon *)arg3 lmVocabulary:(void *)arg4 ovsStringChecker:(id)arg5 textReplacements:(id)arg6 consumableStrokesSet:(id)arg7 minimumTokenScore:(double)arg8 activeHistoryRange:(struct _NSRange)arg9 outBestTokenScore:(double *)arg10 shouldCapitalizeWord:(_Bool)arg11 shouldSkipEntryCorrection:(_Bool)arg12 allowFullCapsCorrections:(_Bool)arg13 minimalLengthForLowConfidenceCorrections:(long long)arg14 lowConfidenceThreshold:(double)arg15 minimalLengthForCustomCapitalizationCorrections:(long long)arg16 outBestTokenIndex:(long long *)arg17 outFoundTokenInLexicon:(_Bool *)arg18 outFoundCaseMatchingTokenInLexicon:(_Bool *)arg19 outCorrectionFromOutOfContextEntry:(_Bool *)arg20;	// IMP=0x0000000000005380
+ (double)computeEditPenalizationFromString:(id)arg1 toReferenceString:(id)arg2 withSuffix:(id)arg3 withCaseSensitivity:(_Bool)arg4 withFirstLetterCaseSensitivity:(_Bool)arg5 withDiacriticSensitivity:(_Bool)arg6 withDiacriticsCharSet:(id)arg7 withConsumableStrokesCharSet:(id)arg8 outputSuffix:(id *)arg9 lexiconExtraCharacters:(id *)arg10 firstLetterCaseFlipped:(_Bool *)arg11;	// IMP=0x0000000000003ba0
+ (_Bool)shouldCapitalizeGivenHistory:(id)arg1 shouldAutoCapitalizeSetting:(_Bool)arg2 locale:(id)arg3;	// IMP=0x00000000000035f0
+ (id)mecabraTokenizationAndKanaConversionForString:(id)arg1 mecabraEngine:(struct __Mecabra *)arg2 contextRef:(struct __MecabraContext *)arg3 leftCandidateRef:(void *)arg4 alternativeCandidateLimit:(long long)arg5;	// IMP=0x0000000000003040
+ (_Bool)isMecabraConversionCandidateAllowed:(id)arg1;	// IMP=0x0000000000002e30
+ (double)characterLMLogProbabilityForString:(id)arg1 characterLM:(id)arg2;	// IMP=0x0000000000002d70
+ (unsigned int)tokenIDForString:(id)arg1 withLexicon:(struct _LXLexicon *)arg2;	// IMP=0x0000000000002ae0
+ (id)transliterateStringUsingICUTransliterator:(id)arg1 _icuTransliterator:(void **)arg2;	// IMP=0x0000000000002970
+ (_Bool)findPartialMatchInPhraseLexicon:(struct _LXLexicon *)arg1 token:(id)arg2 contextBeforeToken:(id)arg3;	// IMP=0x00000000000024b0
+ (id)splitStringIntoSubtokensForLexicon:(id)arg1 minLength:(long long)arg2;	// IMP=0x0000000000002150
+ (id)tokensRangesForString:(id)arg1 outTokenIDs:(id *)arg2 languageModel:(void *)arg3;	// IMP=0x0000000000001af0
+ (unsigned int)normalizeLMTokenIDForWord:(id)arg1 tokenID:(unsigned int)arg2 isFromPattern:(_Bool)arg3 score:(double *)arg4 languageModel:(void *)arg5;	// IMP=0x0000000000001a00

@end

