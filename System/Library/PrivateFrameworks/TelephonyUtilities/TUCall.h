//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TelephonyUtilities/NSSecureCoding-Protocol.h>

@class NSArray, NSData, NSDate, NSDictionary, NSSet, NSString, NSUUID, TUCallCenter, TUCallDisplayContext, TUCallModel, TUCallNotificationManager, TUCallProvider, TUCallScreenShareAttributes, TUCallServicesInterface, TUDialRequest, TUHandle, TUProxyCall, TUSenderIdentity, TUVideoCallAttributes;
@protocol OS_dispatch_queue;

@interface TUCall : NSObject <NSSecureCoding>
{
    _Bool _endpointOnCurrentDevice;	// 8 = 0x8
    _Bool _shouldSuppressRingtone;	// 9 = 0x9
    _Bool _wantsHoldMusic;	// 10 = 0xa
    _Bool _wasDialAssisted;	// 11 = 0xb
    _Bool _supportsRecents;	// 12 = 0xc
    _Bool _hasUpdatedAudio;	// 13 = 0xd
    _Bool _video;	// 14 = 0xe
    _Bool _ringtoneSuppressedRemotely;	// 15 = 0xf
    _Bool _sharingScreen;	// 16 = 0x10
    _Bool _mixesVoiceWithMedia;	// 17 = 0x11
    _Bool _mediaPlaybackOnExternalDevice;	// 18 = 0x12
    _Bool _wasPulledToCurrentDevice;	// 19 = 0x13
    _Bool _isKnownCaller;	// 20 = 0x14
    _Bool _joinedFromLink;	// 21 = 0x15
    _Bool _failureExpected;	// 22 = 0x16
    int _disconnectedReason;	// 24 = 0x18
    int _faceTimeIDStatus;	// 28 = 0x1c
    int _filteredOutReason;	// 32 = 0x20
    int _transitionStatus;	// 36 = 0x24
    int _hardPauseDigitsState;	// 40 = 0x28
    int _ttyType;	// 44 = 0x2c
    int _originatingUIType;	// 48 = 0x30
    NSDate *_dateCreated;	// 56 = 0x38
    NSDate *_dateAnsweredOrDialed;	// 64 = 0x40
    NSDate *_dateSentInvitation;	// 72 = 0x48
    NSDate *_dateStartedConnecting;	// 80 = 0x50
    NSDate *_dateConnected;	// 88 = 0x58
    NSDate *_dateEnded;	// 96 = 0x60
    NSString *_uniqueProxyIdentifier;	// 104 = 0x68
    NSString *_sourceIdentifier;	// 112 = 0x70
    TUCallModel *_model;	// 120 = 0x78
    TUCallNotificationManager *_callNotificationManager;	// 128 = 0x80
    TUProxyCall *_comparativeCall;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_queue;	// 144 = 0x90
    TUCallServicesInterface *_callServicesInterface;	// 152 = 0x98
    TUVideoCallAttributes *_videoCallAttributes;	// 160 = 0xa0
    long long _verificationStatus;	// 168 = 0xa8
    long long _priority;	// 176 = 0xb0
    long long _provisionalHoldStatus;	// 184 = 0xb8
    NSString *_isoCountryCode;	// 192 = 0xc0
    long long _soundRegion;	// 200 = 0xc8
    NSDictionary *_providerContext;	// 208 = 0xd0
    double _hostCreationTime;	// 216 = 0xd8
    double _hostMessageSendTime;	// 224 = 0xe0
    double _clientMessageReceiveTime;	// 232 = 0xe8
    NSString *_hardPauseDigits;	// 240 = 0xf0
    long long _junkConfidence;	// 248 = 0xf8
    long long _identificationCategory;	// 256 = 0x100
    long long _bluetoothAudioFormat;	// 264 = 0x108
    TUCallScreenShareAttributes *_screenShareAttributes;	// 272 = 0x110
    struct CGSize _remoteScreenAspectRatio;	// 280 = 0x118
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000cf989
+ (id)faceTimeSupplementalDialTelephonyCallStringIncludingFTA:(_Bool)arg1;	// IMP=0x00000000000cee1b
+ (id)supplementalDialTelephonyCallString;	// IMP=0x00000000000cedfa
+ (id)supplementalDialTelephonyCallStringForDestination:(id)arg1 isPhoneNumber:(_Bool)arg2;	// IMP=0x00000000000cedd8
+ (id)_supplementalDialTelephonyCallStringForLocString:(id)arg1 destination:(id)arg2 isPhoneNumber:(_Bool)arg3 includeFaceTimeAudio:(_Bool)arg4;	// IMP=0x00000000000cead1
+ (_Bool)isJunkConfidenceLevelJunk:(long long)arg1;	// IMP=0x00000000000ccf17
+ (long long)maxJunkConfidence;	// IMP=0x00000000000ccf0c
+ (long long)acceptableJunkConfidence;	// IMP=0x00000000000ccf01
- (void).cxx_destruct;	// IMP=0x00000000000d080e
@property(nonatomic, getter=isFailureExpected) _Bool failureExpected; // @synthesize failureExpected=_failureExpected;
@property(readonly, nonatomic) TUCallScreenShareAttributes *screenShareAttributes; // @synthesize screenShareAttributes=_screenShareAttributes;
@property(nonatomic) long long bluetoothAudioFormat; // @synthesize bluetoothAudioFormat=_bluetoothAudioFormat;
@property(nonatomic) _Bool joinedFromLink; // @synthesize joinedFromLink=_joinedFromLink;
@property(readonly, nonatomic) _Bool isKnownCaller; // @synthesize isKnownCaller=_isKnownCaller;
@property(readonly, nonatomic) long long identificationCategory; // @synthesize identificationCategory=_identificationCategory;
@property(readonly, nonatomic) long long junkConfidence; // @synthesize junkConfidence=_junkConfidence;
@property(readonly, nonatomic) int originatingUIType; // @synthesize originatingUIType=_originatingUIType;
@property(nonatomic) int ttyType; // @synthesize ttyType=_ttyType;
@property(copy, nonatomic) NSString *hardPauseDigits; // @synthesize hardPauseDigits=_hardPauseDigits;
@property(nonatomic) int hardPauseDigitsState; // @synthesize hardPauseDigitsState=_hardPauseDigitsState;
@property(nonatomic) _Bool wasPulledToCurrentDevice; // @synthesize wasPulledToCurrentDevice=_wasPulledToCurrentDevice;
@property(nonatomic) double clientMessageReceiveTime; // @synthesize clientMessageReceiveTime=_clientMessageReceiveTime;
@property(nonatomic) double hostMessageSendTime; // @synthesize hostMessageSendTime=_hostMessageSendTime;
@property(nonatomic) double hostCreationTime; // @synthesize hostCreationTime=_hostCreationTime;
@property(nonatomic) _Bool mediaPlaybackOnExternalDevice; // @synthesize mediaPlaybackOnExternalDevice=_mediaPlaybackOnExternalDevice;
@property(nonatomic) _Bool mixesVoiceWithMedia; // @synthesize mixesVoiceWithMedia=_mixesVoiceWithMedia;
@property(nonatomic, getter=isSharingScreen) _Bool sharingScreen; // @synthesize sharingScreen=_sharingScreen;
@property(readonly, nonatomic) struct CGSize remoteScreenAspectRatio; // @synthesize remoteScreenAspectRatio=_remoteScreenAspectRatio;
@property(readonly, nonatomic) NSDictionary *providerContext; // @synthesize providerContext=_providerContext;
@property(nonatomic) _Bool ringtoneSuppressedRemotely; // @synthesize ringtoneSuppressedRemotely=_ringtoneSuppressedRemotely;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
@property(nonatomic) long long soundRegion; // @synthesize soundRegion=_soundRegion;
@property(nonatomic) _Bool hasUpdatedAudio; // @synthesize hasUpdatedAudio=_hasUpdatedAudio;
@property(nonatomic) int transitionStatus; // @synthesize transitionStatus=_transitionStatus;
@property(copy, nonatomic) NSString *isoCountryCode; // @synthesize isoCountryCode=_isoCountryCode;
@property(nonatomic) long long provisionalHoldStatus; // @synthesize provisionalHoldStatus=_provisionalHoldStatus;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(nonatomic) long long verificationStatus; // @synthesize verificationStatus=_verificationStatus;
@property(retain, nonatomic) TUVideoCallAttributes *videoCallAttributes; // @synthesize videoCallAttributes=_videoCallAttributes;
@property(nonatomic) __weak TUCallServicesInterface *callServicesInterface; // @synthesize callServicesInterface=_callServicesInterface;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool supportsRecents; // @synthesize supportsRecents=_supportsRecents;
@property(nonatomic) int filteredOutReason; // @synthesize filteredOutReason=_filteredOutReason;
@property(retain, nonatomic) TUProxyCall *comparativeCall; // @synthesize comparativeCall=_comparativeCall;
@property(readonly, nonatomic) TUCallNotificationManager *callNotificationManager; // @synthesize callNotificationManager=_callNotificationManager;
@property(copy, nonatomic) TUCallModel *model; // @synthesize model=_model;
@property(nonatomic) _Bool wasDialAssisted; // @synthesize wasDialAssisted=_wasDialAssisted;
@property(copy, nonatomic) NSString *sourceIdentifier; // @synthesize sourceIdentifier=_sourceIdentifier;
@property(copy, nonatomic) NSString *uniqueProxyIdentifier; // @synthesize uniqueProxyIdentifier=_uniqueProxyIdentifier;
@property(retain, nonatomic) NSDate *dateEnded; // @synthesize dateEnded=_dateEnded;
@property(retain, nonatomic) NSDate *dateConnected; // @synthesize dateConnected=_dateConnected;
@property(retain, nonatomic) NSDate *dateStartedConnecting; // @synthesize dateStartedConnecting=_dateStartedConnecting;
@property(retain, nonatomic) NSDate *dateSentInvitation; // @synthesize dateSentInvitation=_dateSentInvitation;
@property(retain, nonatomic) NSDate *dateAnsweredOrDialed; // @synthesize dateAnsweredOrDialed=_dateAnsweredOrDialed;
@property(readonly, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(nonatomic) _Bool wantsHoldMusic; // @synthesize wantsHoldMusic=_wantsHoldMusic;
@property(nonatomic) _Bool shouldSuppressRingtone; // @synthesize shouldSuppressRingtone=_shouldSuppressRingtone;
@property(nonatomic, getter=isEndpointOnCurrentDevice) _Bool endpointOnCurrentDevice; // @synthesize endpointOnCurrentDevice=_endpointOnCurrentDevice;
@property(nonatomic) int faceTimeIDStatus; // @synthesize faceTimeIDStatus=_faceTimeIDStatus;
@property(nonatomic) int disconnectedReason; // @synthesize disconnectedReason=_disconnectedReason;
- (_Bool)isDialRequestVideoUpgrade:(id)arg1;	// IMP=0x00000000000d034b
- (_Bool)isVideoUpgradeFromCall:(id)arg1;	// IMP=0x00000000000d024d
- (void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2;	// IMP=0x00000000000d0247
- (void)setScreenShareAttributes:(id)arg1;	// IMP=0x00000000000d0241
- (void)setRemoteVideoPresentationState:(int)arg1;	// IMP=0x00000000000d023b
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;	// IMP=0x00000000000d0235
- (struct CGSize)localAspectRatioForOrientation:(long long)arg1;	// IMP=0x00000000000d022b
@property(readonly, nonatomic) struct CGRect remoteVideoContentRect;
@property(readonly, nonatomic) struct CGSize remoteAspectRatio;
@property(readonly, nonatomic) long long remoteScreenOrientation;
@property(readonly, nonatomic) long long remoteCameraOrientation;
@property(readonly, nonatomic) long long cameraType;
@property(nonatomic) _Bool requiresRemoteVideo;
- (void)setRemoteVideoLayer:(id)arg1 forMode:(long long)arg2;	// IMP=0x00000000000d01b6
- (void)setLocalVideoLayer:(id)arg1 forMode:(long long)arg2;	// IMP=0x00000000000d01b0
@property(readonly, nonatomic) NSString *endedReasonString;
@property(readonly, nonatomic) NSString *endedErrorString;
@property(readonly, nonatomic) NSDictionary *callStats;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000cfe53
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000cf991
- (void)updateWithCall:(id)arg1;	// IMP=0x00000000000cf644
- (id)errorAlertMessage;	// IMP=0x00000000000cf274
- (id)errorAlertTitle;	// IMP=0x00000000000cef97
- (id)supplementalInCallString;	// IMP=0x00000000000ceefa
- (id)serviceDisplayString;	// IMP=0x00000000000cee3c
@property(readonly, copy, nonatomic) NSDictionary *endedReasonUserInfo;
- (_Bool)hasRelaySupport:(int)arg1;	// IMP=0x00000000000ceaa8
@property(readonly, nonatomic) int callRelaySupport;
@property(readonly, nonatomic) int abUID;
@property(readonly, copy, nonatomic) NSString *companyName;
@property(readonly, copy, nonatomic) NSString *localizedLabel;
@property(readonly, copy, nonatomic) NSString *suggestedDisplayName;
@property(readonly, copy, nonatomic) NSString *displayFirstName;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly, copy, nonatomic) NSArray *contactIdentifiers;
@property(readonly, copy, nonatomic) NSString *contactIdentifier;
@property(readonly, copy, nonatomic) TUCallDisplayContext *displayContext;
@property(readonly, nonatomic) NSData *remoteFrequency;
@property(readonly, nonatomic) NSData *localFrequency;
@property(nonatomic, getter=isDownlinkMuted) _Bool downlinkMuted;
@property(nonatomic, getter=isUplinkMuted) _Bool uplinkMuted;
- (_Bool)setMuted:(_Bool)arg1;	// IMP=0x00000000000ce68e
- (_Bool)isMuted;	// IMP=0x00000000000ce67c
@property(readonly, copy, nonatomic) NSString *audioMode;
@property(readonly, copy, nonatomic) NSString *audioCategory;
@property(readonly, nonatomic) _Bool supportsDTMFTones;
@property(readonly, nonatomic) _Bool shouldPlayDTMFTone;
@property(readonly, nonatomic, getter=isFromSiri) _Bool fromSiri;
@property(readonly, nonatomic, getter=isJunk) _Bool junk;
@property(readonly, nonatomic, getter=isEmergencyCall) _Bool emergencyCall;
@property(readonly, nonatomic) _Bool statusIsProvisional;
@property(readonly, nonatomic) int callStatus;
@property(readonly, nonatomic) int status;
@property(readonly, nonatomic) NSString *reminderString;
@property(readonly, copy, nonatomic) NSString *callDurationString;
@property(readonly, nonatomic) double callDuration;
- (unsigned long long)hash;	// IMP=0x00000000000ce1da
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000ce17d
- (_Bool)isEqualToCall:(id)arg1;	// IMP=0x00000000000ce0ec
@property(readonly, copy, nonatomic) NSUUID *localSenderIdentityAccountUUID;
@property(readonly, copy, nonatomic) NSUUID *localSenderIdentityUUID;
@property(readonly, copy, nonatomic) TUSenderIdentity *localSenderIdentity;
@property(readonly, copy, nonatomic) NSUUID *callGroupUUID;
@property(readonly, copy, nonatomic) NSString *callHistoryIdentifier;
@property(readonly, copy, nonatomic) NSString *callUUID;
@property(readonly, nonatomic, getter=isHostedOnCurrentDevice) _Bool hostedOnCurrentDevice;
@property(readonly, nonatomic) _Bool shouldDisplayLocationIfAvailable;
@property(readonly, nonatomic) TUHandle *handle;
@property(readonly, copy, nonatomic) NSString *callerNameFromNetwork;
@property(readonly, copy, nonatomic) NSString *destinationID;
- (void)ungroup;	// IMP=0x00000000000cdf94
- (void)groupWithOtherCall:(id)arg1;	// IMP=0x00000000000cdf8e
@property(readonly, copy, nonatomic) NSSet *remoteParticipantHandles;
@property(readonly, copy, nonatomic) TUDialRequest *dialRequestForRedial;
@property(readonly, nonatomic) long long faceTimeTransportType;
@property(readonly, nonatomic, getter=isTTY) _Bool tty;
@property(readonly, nonatomic, getter=isRTT) _Bool rtt;
@property(readonly, nonatomic, getter=isVoIPCall) _Bool voipCall;
@property(readonly, nonatomic, getter=isWiFiCall) _Bool wiFiCall;
@property(readonly, nonatomic) _Bool needsManualInCallSounds;
- (void)suppressRingtoneDueToRemoteSuppression;	// IMP=0x00000000000cd9d4
- (void)suppressRingtone;	// IMP=0x00000000000cd9bd
- (void)resetWantsHoldMusic;	// IMP=0x00000000000cd9a9
@property(readonly, nonatomic, getter=isConferenced) _Bool conferenced;
@property(readonly, nonatomic, getter=isIncoming) _Bool incoming;
@property(readonly, nonatomic) _Bool isActive;
@property(nonatomic) _Bool isSendingVideo;
@property(readonly, nonatomic, getter=isConnected) _Bool connected;
@property(readonly, nonatomic, getter=isConnecting) _Bool connecting;
@property(readonly, nonatomic) _Bool hasSentInvitation;
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) _Bool wasDeclined;
@property(readonly, nonatomic) int service;
@property(readonly, nonatomic) TUCallProvider *displayProvider;
@property(readonly, nonatomic) TUCallProvider *backingProvider;
@property(readonly, nonatomic) TUCallProvider *provider;
@property(readonly, copy, nonatomic) NSUUID *uniqueProxyIdentifierUUID;
- (void)postNotificationsAfterUpdatesInBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cd55f
@property(readonly, nonatomic) NSString *hardPauseDigitsDisplayString;
- (void)sendHardPauseDigits;	// IMP=0x00000000000cd512
- (void)playDTMFToneForKey:(unsigned char)arg1;	// IMP=0x00000000000cd50c
- (void)resetProvisionalState;	// IMP=0x00000000000cd4f8
- (void)disconnectWithReason:(int)arg1;	// IMP=0x00000000000cd41a
- (void)unhold;	// IMP=0x00000000000cd403
- (void)hold;	// IMP=0x00000000000cd3ec
- (void)setIsOnHold:(_Bool)arg1;	// IMP=0x00000000000cd38d
@property(readonly, nonatomic) _Bool isOnHold;
- (void)answerWithRequest:(id)arg1;	// IMP=0x00000000000cd114
- (void)_handleStatusChange;	// IMP=0x00000000000cd0cf
@property(readonly, nonatomic) long long outputAudioPowerSpectrumToken;
@property(readonly, nonatomic) long long inputAudioPowerSpectrumToken;
@property(readonly, nonatomic) long long videoStreamToken;
@property(readonly, nonatomic) float localMeterLevel;
@property(readonly, nonatomic) float remoteMeterLevel;
@property(readonly, nonatomic, getter=isConversation) _Bool conversation;
@property(readonly, nonatomic) _Bool wantsStagingArea;
@property(readonly, nonatomic, getter=isMutuallyExclusiveCall) _Bool mutuallyExclusiveCall;
@property(readonly, nonatomic) _Bool shouldSuppressInCallUI;
@property(readonly, nonatomic, getter=isRemoteUplinkMuted) _Bool remoteUplinkMuted;
@property(readonly, nonatomic) _Bool supportsTTYWithVoice;
@property(readonly, nonatomic, getter=isVideoMirrored) _Bool videoMirrored;
@property(readonly, nonatomic, getter=isVideoPaused) _Bool videoPaused;
@property(readonly, nonatomic, getter=isVideoDegraded) _Bool videoDegraded;
@property(readonly, nonatomic, getter=isMediaStalled) _Bool mediaStalled;
@property(readonly, nonatomic) _Bool isSendingAudio;
@property(readonly, nonatomic, getter=isBlocked) _Bool blocked;
@property(readonly, nonatomic, getter=isOutgoing) _Bool outgoing;
@property(readonly, nonatomic, getter=isThirdPartyVideo) _Bool thirdPartyVideo;
@property(readonly, nonatomic) _Bool prefersExclusiveAccessToCellularNetwork;
@property(readonly, nonatomic, getter=isUsingBaseband) _Bool usingBaseband;
@property(readonly, nonatomic, getter=isVoicemail) _Bool voicemail;
@property(readonly, nonatomic, getter=isSOS) _Bool sos;
@property(readonly, nonatomic, getter=isEmergency) _Bool emergency;
@property(readonly, nonatomic) __weak TUCallCenter *callCenter;
- (void)updateComparativeCall;	// IMP=0x00000000000ccf41
- (id)description;	// IMP=0x00000000000cc43e
- (void)dealloc;	// IMP=0x00000000000cc3c9
- (id)initWithUniqueProxyIdentifier:(id)arg1 endpointOnCurrentDevice:(_Bool)arg2;	// IMP=0x00000000000cc270
- (id)initWithCall:(id)arg1;	// IMP=0x00000000000cc1ee
- (id)initWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00000000000cc1d7
- (id)init;	// IMP=0x00000000000cc15c

@end

