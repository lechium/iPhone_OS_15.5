//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIControl.h>

#import <CameraEditKit/CEKAbstractSlider-Protocol.h>
#import <CameraEditKit/CEKSliderTickMarksDelegate-Protocol.h>
#import <CameraEditKit/UIScrollViewDelegate-Protocol.h>

@class CEKEdgeGradientView, CEKSelectionFeedbackGenerator, CEKSliderDotView, CEKSliderTickMarksView, NSString, UIColor, UILabel, UIScrollView, UIView;
@protocol CEKSliderDelegate, CEKTickMarksConfiguration;

@interface CEKSlider : UIControl <UIScrollViewDelegate, CEKSliderTickMarksDelegate, CEKAbstractSlider>
{
    struct {
        _Bool respondsToWillBeginScrolling;
        _Bool respondsToDidScroll;
        _Bool respondsToWillEndScrolling;
        _Bool respondsToDidEndScrolling;
        _Bool respondsToWillUpdateValue;
    } _delegateFlags;	// 8 = 0x8
    _Bool _interactiveWhenHidden;	// 13 = 0xd
    _Bool __animating;	// 14 = 0xe
    _Bool __overscrolling;	// 15 = 0xf
    _Bool __active;	// 16 = 0x10
    _Bool __reAdjustingOffsets;	// 17 = 0x11
    _Bool __dimmed;	// 18 = 0x12
    double _labelVerticalPadding;	// 24 = 0x18
    long long _sliderVerticalAlignment;	// 32 = 0x20
    double _sliderVerticalOffset;	// 40 = 0x28
    double _levelIndicatorHeight;	// 48 = 0x30
    long long _textOrientation;	// 56 = 0x38
    unsigned long long _fontStyle;	// 64 = 0x40
    id <CEKSliderDelegate> _delegate;	// 72 = 0x48
    double _animationDuration;	// 80 = 0x50
    double _maximumValue;	// 88 = 0x58
    double _minimumValue;	// 96 = 0x60
    double _value;	// 104 = 0x68
    double _defaultValue;	// 112 = 0x70
    double _markedValue;	// 120 = 0x78
    long long _tickMarkCount;	// 128 = 0x80
    UIColor *_tickMarkColor;	// 136 = 0x88
    UIColor *_prominentTickMarkColor;	// 144 = 0x90
    long long _valueLabelVisibility;	// 152 = 0x98
    UIScrollView *__contentScrollView;	// 160 = 0xa0
    CEKSliderTickMarksView *__tickMarksView;	// 168 = 0xa8
    UIView *__levelIndicatorView;	// 176 = 0xb0
    CEKSliderDotView *__dotView;	// 184 = 0xb8
    CEKEdgeGradientView *__edgeGradientView;	// 192 = 0xc0
    unsigned long long __tickMarkIndex;	// 200 = 0xc8
    CEKSelectionFeedbackGenerator *__feedbackGenerator;	// 208 = 0xd0
    UILabel *__titleLabel;	// 216 = 0xd8
    UILabel *__valueLabel;	// 224 = 0xe0
    UIView *__levelIndicatorBackgroundView;	// 232 = 0xe8
    CDStruct_ae5a35ae _gradientInsets;	// 240 = 0xf0
    struct CGSize _tickMarkSize;	// 256 = 0x100
}

+ (id)_integerFormatter;	// IMP=0x0000000000017256
- (void).cxx_destruct;	// IMP=0x000000000001ae09
@property(retain, nonatomic) UIView *_levelIndicatorBackgroundView; // @synthesize _levelIndicatorBackgroundView=__levelIndicatorBackgroundView;
@property(nonatomic, getter=_isDimmed, setter=_setDimmed:) _Bool _dimmed; // @synthesize _dimmed=__dimmed;
@property(nonatomic, getter=_isreAdjustingOffsets) _Bool _reAdjustingOffsets; // @synthesize _reAdjustingOffsets=__reAdjustingOffsets;
@property(retain, nonatomic) UILabel *_valueLabel; // @synthesize _valueLabel=__valueLabel;
@property(retain, nonatomic) UILabel *_titleLabel; // @synthesize _titleLabel=__titleLabel;
@property(nonatomic, getter=_isActive, setter=_setActive:) _Bool _active; // @synthesize _active=__active;
@property(readonly, nonatomic) CEKSelectionFeedbackGenerator *_feedbackGenerator; // @synthesize _feedbackGenerator=__feedbackGenerator;
@property(nonatomic, setter=_setTickMarkIndex:) unsigned long long _tickMarkIndex; // @synthesize _tickMarkIndex=__tickMarkIndex;
@property(nonatomic, getter=_isOverscrolling, setter=_setOverscrolling:) _Bool _overscrolling; // @synthesize _overscrolling=__overscrolling;
@property(nonatomic, getter=_isAnimating, setter=_setAnimating:) _Bool _animating; // @synthesize _animating=__animating;
@property(retain, nonatomic, setter=_setEdgeGradientView:) CEKEdgeGradientView *_edgeGradientView; // @synthesize _edgeGradientView=__edgeGradientView;
@property(readonly, nonatomic) CEKSliderDotView *_dotView; // @synthesize _dotView=__dotView;
@property(readonly, nonatomic) UIView *_levelIndicatorView; // @synthesize _levelIndicatorView=__levelIndicatorView;
@property(readonly, nonatomic) CEKSliderTickMarksView *_tickMarksView; // @synthesize _tickMarksView=__tickMarksView;
@property(readonly, nonatomic) UIScrollView *_contentScrollView; // @synthesize _contentScrollView=__contentScrollView;
@property(nonatomic) long long valueLabelVisibility; // @synthesize valueLabelVisibility=_valueLabelVisibility;
@property(retain, nonatomic) UIColor *prominentTickMarkColor; // @synthesize prominentTickMarkColor=_prominentTickMarkColor;
@property(retain, nonatomic) UIColor *tickMarkColor; // @synthesize tickMarkColor=_tickMarkColor;
@property(nonatomic) struct CGSize tickMarkSize; // @synthesize tickMarkSize=_tickMarkSize;
@property(nonatomic) long long tickMarkCount; // @synthesize tickMarkCount=_tickMarkCount;
@property(nonatomic) double markedValue; // @synthesize markedValue=_markedValue;
@property(nonatomic) double defaultValue; // @synthesize defaultValue=_defaultValue;
@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) double minimumValue; // @synthesize minimumValue=_minimumValue;
@property(nonatomic) double maximumValue; // @synthesize maximumValue=_maximumValue;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(nonatomic) __weak id <CEKSliderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long fontStyle; // @synthesize fontStyle=_fontStyle;
@property(nonatomic) long long textOrientation; // @synthesize textOrientation=_textOrientation;
@property(nonatomic) CDStruct_ae5a35ae gradientInsets; // @synthesize gradientInsets=_gradientInsets;
@property(nonatomic) double levelIndicatorHeight; // @synthesize levelIndicatorHeight=_levelIndicatorHeight;
@property(nonatomic) double sliderVerticalOffset; // @synthesize sliderVerticalOffset=_sliderVerticalOffset;
@property(nonatomic) long long sliderVerticalAlignment; // @synthesize sliderVerticalAlignment=_sliderVerticalAlignment;
@property(nonatomic) _Bool interactiveWhenHidden; // @synthesize interactiveWhenHidden=_interactiveWhenHidden;
@property(nonatomic) double labelVerticalPadding; // @synthesize labelVerticalPadding=_labelVerticalPadding;
@property(nonatomic) _Bool useLegibilityShadows;
- (void)tickMarksViewDidChangeWidthForTickMarkCount:(id)arg1;	// IMP=0x000000000001aa30
- (void)_sliderDidEndScrolling;	// IMP=0x000000000001a9b4
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x000000000001a9a2
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x000000000001a98a
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;	// IMP=0x000000000001a902
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x000000000001a858
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x000000000001a33b
- (struct CGRect)frameForTicksView;	// IMP=0x000000000001a270
- (struct CGRect)frameForLevelIndicator;	// IMP=0x000000000001a212
- (struct CGRect)frameForValueLabel;	// IMP=0x000000000001a1b4
- (struct CGRect)frameForTitleLabel;	// IMP=0x000000000001a156
@property(nonatomic) long long titleAlignment;
- (void)setTextOrientation:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000019f2f
- (void)_updateFonts;	// IMP=0x0000000000019e39
- (void)_updateValueLabel;	// IMP=0x0000000000019cf1
- (void)_setShowValueLabel:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000199c2
- (void)_setNormalizedValue:(double)arg1;	// IMP=0x00000000000198e6
- (void)_setValue:(double)arg1 shouldSendActions:(_Bool)arg2 shouldUpdateScrollPosition:(_Bool)arg3;	// IMP=0x0000000000019869
- (void)_updateScrollViewPosition;	// IMP=0x00000000000197e5
- (double)xOffsetForValue:(double)arg1;	// IMP=0x00000000000196e3
- (double)_xOffsetForMarkedValue;	// IMP=0x0000000000019640
- (void)_setActive:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000195b0
- (void)_updateColorsAnimated:(_Bool)arg1;	// IMP=0x00000000000193ee
- (void)_updateEnableAppearanceStateAnimated:(_Bool)arg1;	// IMP=0x000000000001917c
- (void)_setDimmed:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000019156
- (void)setEnabled:(_Bool)arg1 dimmed:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000000000190c4
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000190a8
- (void)removeGradients;	// IMP=0x0000000000018f7b
- (void)setOpaqueGradientsWithColor:(id)arg1;	// IMP=0x0000000000018edd
- (void)setTransparentGradients;	// IMP=0x0000000000018e77
- (void)_createGradientIfNeeded;	// IMP=0x0000000000018e13
@property(nonatomic) double tickMarkSpacing;
@property(nonatomic) long long mainTickMarkInterval;
@property(nonatomic) _Bool useTickMarkLegibilityShadows;
- (void)_updateLegibilityBackground;	// IMP=0x00000000000189f1
@property(readonly, nonatomic) id <CEKTickMarksConfiguration> tickMarksConfiguration;
- (void)_updateMarkedViewAnimated:(_Bool)arg1;	// IMP=0x000000000001870f
- (_Bool)_markedValueWithinRange;	// IMP=0x00000000000186a3
- (void)setMarkedValue:(double)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000018654
@property(retain, nonatomic) NSString *title;
- (void)_clampValuesAndUpdateScrollPosition:(_Bool)arg1;	// IMP=0x0000000000018396
- (void)resetToDefault;	// IMP=0x000000000001834f
- (void)layoutSubviews;	// IMP=0x00000000000177d6
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000017709
- (id)formattedIntegerStringFromNumber:(id)arg1;	// IMP=0x000000000001733f
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000001723d
- (id)initWithTitle:(id)arg1;	// IMP=0x0000000000016dda

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

