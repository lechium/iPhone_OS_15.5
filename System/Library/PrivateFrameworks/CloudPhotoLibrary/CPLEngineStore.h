//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudPhotoLibrary/CPLAbstractObject-Protocol.h>
#import <CloudPhotoLibrary/CPLEngineComponent-Protocol.h>

@class CPLChangeBatch, CPLEngineChangePipe, CPLEngineCloudCache, CPLEngineDerivativesCache, CPLEngineIDMapping, CPLEngineInitialQueryTracker, CPLEngineLibrary, CPLEngineOutgoingResources, CPLEnginePushRepository, CPLEngineQuarantinedRecords, CPLEngineRemappedDeletes, CPLEngineResourceDownloadQueue, CPLEngineResourceStorage, CPLEngineScopeCleanupTasks, CPLEngineScopeStorage, CPLEngineStatusCenter, CPLEngineTransientRepository, CPLPlatformObject, CPLRecordStorageView, CPLResetTracker, CPLSyncSessionPredictor, NSArray, NSDate, NSHashTable, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CPLEngineStore : NSObject <CPLAbstractObject, CPLEngineComponent>
{
    NSHashTable *_storages;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_batchedTransactionsQueue;	// 16 = 0x10
    NSMutableArray *_batchedTransactions;	// 24 = 0x18
    _Bool _batchedTransactionDequeueIsScheduled;	// 32 = 0x20
    _Bool _dontDelayChangeSessionUpdate;	// 33 = 0x21
    _Bool _applyingChangeSessionUpdate;	// 34 = 0x22
    NSURL *_resetEventsURL;	// 40 = 0x28
    NSMutableArray *_resetEvents;	// 48 = 0x30
    CPLResetTracker *_pendingTracker;	// 56 = 0x38
    CPLChangeBatch *_unacknowledgedBatch;	// 64 = 0x40
    _Bool _discardUnacknowledgedBatchOnTransactionFail;	// 72 = 0x48
    _Bool _transactionClientCacheViewHasPushRepository;	// 73 = 0x49
    NSMutableDictionary *_transactionNewPredictions;	// 80 = 0x50
    NSSet *_lastInvalidRecordScopedIdentifiers;	// 88 = 0x58
    NSDate *_lastInvalidRecordsDate;	// 96 = 0x60
    NSObject<OS_dispatch_source> *_pendingUpdateTimer;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_pendingUpdateQueue;	// 112 = 0x70
    double _pendingUpdateInterval;	// 120 = 0x78
    _Bool _unschedulePendingUpdateApplyOnWriteSuccess;	// 128 = 0x80
    _Bool _schedulePendingUpdateApplyOnWriteSuccess;	// 129 = 0x81
    _Bool _scheduleSetupOnWriteSuccess;	// 130 = 0x82
    _Bool _scheduleDisabledFeatureUpdateOnWriteSuccess;	// 131 = 0x83
    _Bool _schedulePullFromClient;	// 132 = 0x84
    NSObject<OS_dispatch_queue> *_shouldSyncScopeListQueue;	// 136 = 0x88
    _Bool _shouldEnableScopeListSyncOnWriteSuccess;	// 144 = 0x90
    NSArray *_disabledFeatures;	// 152 = 0x98
    _Bool _hasUpdatedDisabledFeatures;	// 160 = 0xa0
    _Bool _isUpdatingDisabledFeatures;	// 161 = 0xa1
    _Bool _shouldTriggerCompleteResetSyncAfterDisabledFeaturesUpdate;	// 162 = 0xa2
    _Bool _shouldTriggerResetSyncAfterDisabledFeaturesUpdate;	// 163 = 0xa3
    _Bool _shouldSyncScopeList;	// 164 = 0xa4
    CPLPlatformObject *_platformObject;	// 168 = 0xa8
    CPLRecordStorageView *_transactionClientCacheView;	// 176 = 0xb0
    CPLEngineLibrary *_engineLibrary;	// 184 = 0xb8
    CPLEnginePushRepository *_pushRepository;	// 192 = 0xc0
    CPLEngineScopeStorage *_scopes;	// 200 = 0xc8
    CPLEngineScopeCleanupTasks *_cleanupTasks;	// 208 = 0xd0
    CPLEngineChangePipe *_pullQueue;	// 216 = 0xd8
    CPLEngineIDMapping *_idMapping;	// 224 = 0xe0
    CPLEngineCloudCache *_cloudCache;	// 232 = 0xe8
    CPLEngineTransientRepository *_transientPullRepository;	// 240 = 0xf0
    CPLEngineResourceStorage *_resourceStorage;	// 248 = 0xf8
    CPLEngineResourceDownloadQueue *_downloadQueue;	// 256 = 0x100
    CPLEngineOutgoingResources *_outgoingResources;	// 264 = 0x108
    CPLEngineRemappedDeletes *_remappedDeletes;	// 272 = 0x110
    CPLEngineQuarantinedRecords *_quarantinedRecords;	// 280 = 0x118
    CPLEngineStatusCenter *_statusCenter;	// 288 = 0x120
    CPLEngineInitialQueryTracker *_initialQueryTracker;	// 296 = 0x128
    CPLEngineDerivativesCache *_derivativesCache;	// 304 = 0x130
    CPLSyncSessionPredictor *_predictor;	// 312 = 0x138
    unsigned long long _state;	// 320 = 0x140
}

+ (id)platformImplementationProtocol;	// IMP=0x0000000000036e64
+ (id)stateDescriptionForState:(unsigned long long)arg1;	// IMP=0x0000000000036e03
+ (id)storageNames;	// IMP=0x0000000000036dd3
- (void).cxx_destruct;	// IMP=0x0000000000031955
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(readonly, nonatomic) CPLSyncSessionPredictor *predictor; // @synthesize predictor=_predictor;
@property(readonly, nonatomic) CPLEngineDerivativesCache *derivativesCache; // @synthesize derivativesCache=_derivativesCache;
@property(readonly, nonatomic) CPLEngineInitialQueryTracker *initialQueryTracker; // @synthesize initialQueryTracker=_initialQueryTracker;
@property(readonly, nonatomic) CPLEngineStatusCenter *statusCenter; // @synthesize statusCenter=_statusCenter;
@property(readonly, nonatomic) CPLEngineQuarantinedRecords *quarantinedRecords; // @synthesize quarantinedRecords=_quarantinedRecords;
@property(readonly, nonatomic) CPLEngineRemappedDeletes *remappedDeletes; // @synthesize remappedDeletes=_remappedDeletes;
@property(readonly, nonatomic) CPLEngineOutgoingResources *outgoingResources; // @synthesize outgoingResources=_outgoingResources;
@property(readonly, nonatomic) CPLEngineResourceDownloadQueue *downloadQueue; // @synthesize downloadQueue=_downloadQueue;
@property(readonly, nonatomic) CPLEngineResourceStorage *resourceStorage; // @synthesize resourceStorage=_resourceStorage;
@property(readonly, nonatomic) CPLEngineTransientRepository *transientPullRepository; // @synthesize transientPullRepository=_transientPullRepository;
@property(readonly, nonatomic) CPLEngineCloudCache *cloudCache; // @synthesize cloudCache=_cloudCache;
@property(readonly, nonatomic) CPLEngineIDMapping *idMapping; // @synthesize idMapping=_idMapping;
@property(readonly, nonatomic) CPLEngineChangePipe *pullQueue; // @synthesize pullQueue=_pullQueue;
@property(readonly, nonatomic) CPLEngineScopeCleanupTasks *cleanupTasks; // @synthesize cleanupTasks=_cleanupTasks;
@property(readonly, nonatomic) CPLEngineScopeStorage *scopes; // @synthesize scopes=_scopes;
@property(readonly, nonatomic) CPLEnginePushRepository *pushRepository; // @synthesize pushRepository=_pushRepository;
@property(readonly, nonatomic) __weak CPLEngineLibrary *engineLibrary; // @synthesize engineLibrary=_engineLibrary;
@property(readonly, nonatomic) CPLPlatformObject *platformObject; // @synthesize platformObject=_platformObject;
- (void)testKey:(id)arg1 value:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003164c
- (void)getStatusDictionaryWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000315b2
- (void)getStatusWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000031518
- (id)componentName;	// IMP=0x000000000003150b
- (void)assertNoUnacknowledgedChanges;	// IMP=0x0000000000031217
- (void)assertCanRead;	// IMP=0x0000000000031013
- (void)assertCanWrite;	// IMP=0x0000000000030e0f
- (_Bool)_canWrite;	// IMP=0x0000000000030dcb
- (_Bool)_canRead;	// IMP=0x0000000000030d87
- (void)_removeTransactionOnCurrentThread:(id)arg1;	// IMP=0x0000000000030b50
- (void)_setTransactionOnCurrentThread:(id)arg1;	// IMP=0x0000000000030906
- (id)_currentTransaction;	// IMP=0x000000000003087e
- (void)_addCleanupBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030720
@property(readonly, copy) NSString *description;
- (void)markAsCorrupted;	// IMP=0x00000000000305cc
- (void)emergencyClose;	// IMP=0x000000000003058f
- (void)stopVacuum;	// IMP=0x0000000000030552
- (void)startVacuum;	// IMP=0x0000000000030515
- (void)predictSyncSessionValue:(id)arg1 ofType:(id)arg2;	// IMP=0x00000000000303fe
- (void)wipeStoreAtNextOpeningWithReason:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000030378
- (_Bool)storeDerivativesFilter:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000302fb
- (id)derivativesFilter;	// IMP=0x00000000000302ab
- (id)localResourceForCloudResource:(id)arg1 recordClass:(Class *)arg2;	// IMP=0x000000000003018a
- (_Bool)setShouldUpdateDisabledFeaturesWithError:(id *)arg1;	// IMP=0x0000000000030128
@property(readonly, nonatomic) _Bool shouldUpdateDisabledFeatures;
@property(readonly, nonatomic) NSArray *disabledFeatures;
- (_Bool)isFeatureDisabled:(id)arg1;	// IMP=0x000000000003000e
- (_Bool)updateDisabledFeatures:(id)arg1 didReset:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x000000000002f345
- (id)_storedDisabledFeatures;	// IMP=0x000000000002f2f5
- (_Bool)hasUnacknowledgedChanges;	// IMP=0x000000000002f291
- (id)unacknowledgedChangeWithLocalScopedIdentifier:(id)arg1;	// IMP=0x000000000002f1c7
- (void)dropUnacknowledgedBatch;	// IMP=0x000000000002f191
- (void)keepUnacknowledgedBatch:(id)arg1;	// IMP=0x000000000002f149
- (_Bool)checkExpectedLibraryVersion:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002f098
- (_Bool)hasPendingChangeSessionUpdate;	// IMP=0x000000000002f054
- (_Bool)forceApplyPendingChangeSessionUpdateWithError:(id *)arg1;	// IMP=0x000000000002ef49
- (_Bool)applyPreviousChangeSessionUpdateWithExpectedLibraryVersion:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002ed56
- (_Bool)beginChangeSession:(id)arg1 withLibraryVersion:(id)arg2 resetTracker:(id)arg3 error:(id *)arg4;	// IMP=0x000000000002de72
- (_Bool)storeChangeSessionUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002dbbe
- (_Bool)_storeChangeSessionUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002db34
- (void)_dropTransactionClientCacheView;	// IMP=0x000000000002db0d
- (void)_unschedulePendingUpdateApply;	// IMP=0x000000000002daf0
- (void)_schedulePendingUpdateApply;	// IMP=0x000000000002dad3
- (void)_reallyUnschedulePendingUpdateApply;	// IMP=0x000000000002da80
- (void)_reallySchedulePendingUpdateApply;	// IMP=0x000000000002da03
- (_Bool)_applyPendingUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d814
- (_Bool)_applyAndDiscardPendingUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d70b
- (void)notePushRepositoryStoredSomeChanges;	// IMP=0x000000000002d6e7
@property(readonly, nonatomic) CPLRecordStorageView *transactionClientCacheView; // @synthesize transactionClientCacheView=_transactionClientCacheView;
@property(readonly, nonatomic) _Bool shouldGenerateDerivatives;
@property(readonly, nonatomic) id corruptionInfo;
@property(readonly) NSDate *libraryCreationDate;
- (_Bool)isClientInSyncWithClientCache;	// IMP=0x000000000002d594
- (_Bool)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;	// IMP=0x000000000002d541
- (id)clientCacheIdentifier;	// IMP=0x000000000002d4f1
- (_Bool)storeLastQuarantineCountReportDate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d474
- (id)lastQuarantineCountReportDate;	// IMP=0x000000000002d424
- (_Bool)storeUserIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d395
- (id)userIdentifier;	// IMP=0x000000000002d345
@property(readonly, nonatomic) _Bool pushRepositoryIsFull;
- (id)createNewLibraryVersion;	// IMP=0x000000000002d13d
- (id)libraryVersion;	// IMP=0x000000000002d0ed
@property(readonly) _Bool shouldSyncScopeList; // @synthesize shouldSyncScopeList=_shouldSyncScopeList;
- (void)_updateShouldSyncScopeList:(_Bool)arg1;	// IMP=0x000000000002d00b
- (_Bool)_shouldSyncScopeListWithOptions:(unsigned long long)arg1;	// IMP=0x000000000002cfff
- (_Bool)updateLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000000002cf76
- (unsigned long long)libraryOptions;	// IMP=0x000000000002cf32
- (_Bool)storeLibraryVersion:(id)arg1 withError:(id *)arg2;	// IMP=0x000000000002ceb5
- (void)closeAndDeactivate:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002cc9a
- (void)performBarrier;	// IMP=0x000000000002cc4d
- (void)performBatchedWriteTransactionBarrierWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002ca46
- (void)performBatchedWriteTransactionBarrier;	// IMP=0x000000000002c9fb
- (void)performBatchedWriteTransactionWithBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c8cc
- (void)_reallyPerformBatchedTransactionsLocked;	// IMP=0x000000000002c7ac
- (void)_scheduleBatchedTransactionsLocked;	// IMP=0x000000000002c74c
- (id)performWriteTransactionByPassBlocker:(id)arg1 withBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c73a
- (void)blockWriteTransactionsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c6c8
- (id)performWriteTransactionWithBlock:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c6ae
- (id)_performWriteTransactionByPassBlocker:(id)arg1 WithBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c3ab
- (void)_commitWriteTransaction:(id)arg1 commitError:(id)arg2;	// IMP=0x000000000002bd95
- (void)transactionDidFinish;	// IMP=0x000000000002bd83
- (void)writeTransactionDidFail;	// IMP=0x000000000002bccd
- (void)writeTransactionDidSucceed;	// IMP=0x000000000002b99e
- (id)performReadTransactionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002b7f5
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002b5f8
- (void)_performBarrierTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b4d4
- (void)_finishTransaction;	// IMP=0x000000000002b38b
- (void)_performTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000002ad54
- (_Bool)_handleException:(id)arg1;	// IMP=0x000000000002ac14
- (_Bool)deleteDynamicallyCreatedStorages:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002ab97
- (_Bool)createStoragesDynamically:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002ab1a
- (void)noteInvalidRecordScopedIdentifiersInPushSession:(id)arg1;	// IMP=0x000000000002aa94
- (void)noteOtherResetEvent:(id)arg1 cause:(id)arg2;	// IMP=0x000000000002aa75
- (_Bool)resetSyncAnchorWithCause:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002a8e3
- (_Bool)resetCompleteSyncStateIncludingIDMappingWithCause:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002a712
- (_Bool)resetCompleteSyncStateWithCause:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002a52a
- (_Bool)resetLocalSyncStateWithCause:(id)arg1 date:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002a32f
- (_Bool)resetLocalSyncStateWithCause:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002a318
- (_Bool)_resetSyncAnchorWithCause:(id)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002a1b8
- (_Bool)_resetCompleteSyncStateIncludingIDMappingWithCause:(id)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002a058
- (_Bool)_resetCompleteSyncStateWithCause:(id)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000029ef8
- (_Bool)_resetLocalSyncStateWithCause:(id)arg1 scope:(id)arg2 date:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000029d84
- (_Bool)_resetGlobalStateWithError:(id *)arg1;	// IMP=0x0000000000029ba8
- (id)_resetEventsJSON;	// IMP=0x000000000002994c
- (id)_resetEventsDescriptions;	// IMP=0x00000000000292e8
@property(readonly, nonatomic) _Bool hasPendingResetSync;
- (void)noteResetSyncFinished;	// IMP=0x000000000002901b
- (void)_storeResetEvent:(id)arg1 scopeIdentifier:(id)arg2 date:(id)arg3 cause:(id)arg4;	// IMP=0x0000000000028ff6
- (void)_storeResetEvent:(id)arg1 scopeIdentifier:(id)arg2 date:(id)arg3 pending:(_Bool)arg4 cause:(id)arg5;	// IMP=0x0000000000028c5a
- (void)_loadResetEvents;	// IMP=0x0000000000028bee
- (void)registerStorage:(id)arg1;	// IMP=0x0000000000028a32
@property(readonly, nonatomic) NSArray *storages;
- (void)dealloc;	// IMP=0x0000000000028842
- (id)initWithEngineLibrary:(id)arg1;	// IMP=0x00000000000280e3
- (id)newClientCacheViewUsesPushRepository:(_Bool *)arg1;	// IMP=0x00000000001193bb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

