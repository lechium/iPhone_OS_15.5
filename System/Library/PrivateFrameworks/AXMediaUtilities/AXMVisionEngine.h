//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AXMediaUtilities/AXMDescribing-Protocol.h>
#import <AXMediaUtilities/AXMServiceDelegate-Protocol.h>
#import <AXMediaUtilities/AXMTaskDispatcherDelegate-Protocol.h>
#import <AXMediaUtilities/AXMVisionEngineNodeConnectionDelegate-Protocol.h>
#import <AXMediaUtilities/NSCopying-Protocol.h>
#import <AXMediaUtilities/NSSecureCoding-Protocol.h>

@class AXMImageRegistrationNode, AXMSequenceRequestManager, AXMService, AXMTaskDispatcher, AXMVisionEngineCache, NSArray, NSMutableArray, NSString, _AXMVisionEngineAnalysisTask;
@protocol OS_dispatch_queue;

@interface AXMVisionEngine : NSObject <AXMVisionEngineNodeConnectionDelegate, AXMTaskDispatcherDelegate, AXMServiceDelegate, NSCopying, NSSecureCoding, AXMDescribing>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSMutableArray *_queue_sourceNodes;	// 16 = 0x10
    NSMutableArray *_queue_evaluationNodes;	// 24 = 0x18
    AXMImageRegistrationNode *_queue_imageRegistrationNode;	// 32 = 0x20
    NSMutableArray *_queue_resultHandlers;	// 40 = 0x28
    _Bool _queue_shouldNotifyServiceOfEngineConfigChange;	// 48 = 0x30
    _AXMVisionEngineAnalysisTask *_queue_currentTask;	// 56 = 0x38
    _Bool _prioritySchedulingEnabled;	// 64 = 0x40
    _Bool _prioritySchedulingAllowMultipleNodeExecution;	// 65 = 0x41
    _Bool _imageRegistrationFilteringEnabled;	// 66 = 0x42
    _Bool _diagnosticsEnabled;	// 67 = 0x43
    _Bool _disableResultLogging;	// 68 = 0x44
    NSString *_identifier;	// 72 = 0x48
    long long _maximumQueueSize;	// 80 = 0x50
    unsigned long long _thresholdPriority;	// 88 = 0x58
    long long _minimumImageRegistrationSignalLevel;	// 96 = 0x60
    AXMVisionEngineCache *_cache;	// 104 = 0x68
    AXMService *_axMediaUtilsService;	// 112 = 0x70
    AXMTaskDispatcher *_taskDispatcher;	// 120 = 0x78
    AXMSequenceRequestManager *_sequenceRequestManager;	// 128 = 0x80
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000016cd4
- (void).cxx_destruct;	// IMP=0x000000000001d3ad
@property(retain, nonatomic) AXMSequenceRequestManager *sequenceRequestManager; // @synthesize sequenceRequestManager=_sequenceRequestManager;
@property(retain, nonatomic) AXMTaskDispatcher *taskDispatcher; // @synthesize taskDispatcher=_taskDispatcher;
@property(retain, nonatomic) AXMService *axMediaUtilsService; // @synthesize axMediaUtilsService=_axMediaUtilsService;
@property(nonatomic) _Bool disableResultLogging; // @synthesize disableResultLogging=_disableResultLogging;
@property(nonatomic, getter=areDiagnosticsEnabled) _Bool diagnosticsEnabled; // @synthesize diagnosticsEnabled=_diagnosticsEnabled;
@property(retain, nonatomic) AXMVisionEngineCache *cache; // @synthesize cache=_cache;
@property(nonatomic) long long minimumImageRegistrationSignalLevel; // @synthesize minimumImageRegistrationSignalLevel=_minimumImageRegistrationSignalLevel;
@property(nonatomic) _Bool imageRegistrationFilteringEnabled; // @synthesize imageRegistrationFilteringEnabled=_imageRegistrationFilteringEnabled;
@property unsigned long long thresholdPriority; // @synthesize thresholdPriority=_thresholdPriority;
@property _Bool prioritySchedulingAllowMultipleNodeExecution; // @synthesize prioritySchedulingAllowMultipleNodeExecution=_prioritySchedulingAllowMultipleNodeExecution;
@property _Bool prioritySchedulingEnabled; // @synthesize prioritySchedulingEnabled=_prioritySchedulingEnabled;
@property long long maximumQueueSize; // @synthesize maximumQueueSize=_maximumQueueSize;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void)captureSessionNodeDidDropFrame:(id)arg1;	// IMP=0x000000000001d27b
- (void)captureSessionNodeWillProcessFrame:(id)arg1;	// IMP=0x000000000001d275
- (void)captureSessionNodeDidEndProcessingFrames:(id)arg1;	// IMP=0x000000000001d26f
- (void)captureSessionNodeDidBeginProcessingFrames:(id)arg1;	// IMP=0x000000000001d269
- (_Bool)diagnosticsEnabled:(id)arg1;	// IMP=0x000000000001d257
- (_Bool)engineWillAcceptTiggerWithSource:(id)arg1;	// IMP=0x000000000001d1da
- (void)_invokeFullQueueResultHandlersForContext:(id)arg1;	// IMP=0x000000000001d0f6
- (void)triggerWithSource:(id)arg1 context:(id)arg2;	// IMP=0x000000000001cbbc
- (void)axMediaUtilitiesService:(id)arg1 eventOccurred:(long long)arg2;	// IMP=0x000000000001ca0d
- (void)dispatcher:(id)arg1 handleTask:(id)arg2;	// IMP=0x000000000001c789
- (void)axmAppendRecursiveDescription:(id)arg1 withIndentation:(long long)arg2;	// IMP=0x000000000001c3d8
- (id)axmDescription;	// IMP=0x000000000001c2de
- (void)purgeResources:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bce7
- (void)prewarmEngine;	// IMP=0x000000000001bca9
- (void)updateEngineConfiguration:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bab3
- (void)disableResultCaching;	// IMP=0x000000000001ba9f
- (void)enableResultCachingWithCacheSize:(long long)arg1;	// IMP=0x000000000001ba46
@property(readonly, nonatomic) long long cacheSize;
@property(readonly, nonatomic) _Bool isCachingEnabled;
- (void)_invokeResultHandlers:(id)arg1 withResult:(id)arg2;	// IMP=0x000000000001b8af
- (void)_invokeResultHandlers:(id)arg1 withError:(id)arg2;	// IMP=0x000000000001b78f
- (void)_queue_removeAllResultHandlers;	// IMP=0x000000000001b779
- (void)removeAllResultHandlers;	// IMP=0x000000000001b718
- (void)_queue_removeResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b6e2
- (void)removeResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b636
- (void)_queue_addResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b600
- (void)addResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b524
- (id)resultHandlers;	// IMP=0x000000000001b431
- (_Bool)_queue_nodeIdentifierExists:(id)arg1;	// IMP=0x000000000001b13e
- (_Bool)nodeIdentifierExists:(id)arg1;	// IMP=0x000000000001b040
- (id)_queue_makeUniqueIdentifierForNode:(Class)arg1;	// IMP=0x000000000001af32
- (id)makeUniqueIdentifierForNode:(Class)arg1;	// IMP=0x000000000001ae33
- (id)_queue_evaluationNodeWithIdentifier:(id)arg1;	// IMP=0x000000000001ac6e
- (id)_queue_sourceNodeWithIdentifier:(id)arg1;	// IMP=0x000000000001aaa9
- (id)evaluationNodeWithIdentifier:(id)arg1;	// IMP=0x000000000001a96c
- (id)sourceNodeWithIdentifier:(id)arg1;	// IMP=0x000000000001a7b8
- (void)addSourceNodes:(id)arg1 evaluationNodes:(id)arg2;	// IMP=0x000000000001a584
- (void)removeAllEvaluationNodes;	// IMP=0x000000000001a3e9
- (void)removeEvaluationNode:(id)arg1;	// IMP=0x000000000001a321
- (void)insertEvaluationNode:(id)arg1 atIndex:(long long)arg2;	// IMP=0x000000000001a1b6
- (void)addEvaluationNode:(id)arg1;	// IMP=0x000000000001a02a
- (_Bool)canAddEvaluationNodeClass:(Class)arg1;	// IMP=0x0000000000019ff3
- (_Bool)canAddEvaluationNode:(id)arg1;	// IMP=0x0000000000019fd6
@property(readonly, nonatomic) NSArray *evaluationNodes;
- (void)removeAllSourceNodes;	// IMP=0x0000000000019d48
- (void)removeSourceNode:(id)arg1;	// IMP=0x0000000000019c80
- (void)insertSourceNode:(id)arg1 atIndex:(long long)arg2;	// IMP=0x0000000000019b15
- (void)addSourceNode:(id)arg1;	// IMP=0x00000000000199b8
- (_Bool)canAddSourceNodeClass:(Class)arg1;	// IMP=0x0000000000019981
- (_Bool)canAddSourceNode:(id)arg1;	// IMP=0x0000000000019964
@property(readonly, nonatomic) NSArray *sourceNodes;
- (void)_queue_handleEvaluatedContext:(id)arg1 result:(id)arg2 error:(id)arg3;	// IMP=0x00000000000195dc
- (void)_queue_evaluateWithSource:(id)arg1 context:(id)arg2;	// IMP=0x0000000000018873
- (_Bool)_queue_activeEvaluationNodesExclusivelyUseVisionFramework:(id)arg1;	// IMP=0x0000000000018722
- (void)_queue_logEvaluatedResult:(id)arg1;	// IMP=0x00000000000181b9
- (id)_queue_activeEvaluationNodesForOptions:(id)arg1 applyPriorityScheduling:(_Bool)arg2 prioritySchedulingAllowMultipleNodeExecution:(_Bool)arg3;	// IMP=0x0000000000017b49
- (_Bool)_queue_shouldEvaluateNode:(id)arg1 withOptions:(id)arg2;	// IMP=0x0000000000017793
- (void)_queue_remotelyEvaluateWithSource:(id)arg1 context:(id)arg2;	// IMP=0x00000000000172b1
- (_Bool)_queue_shouldContinueWithoutResultHandlers:(id)arg1;	// IMP=0x000000000001724c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000170ba
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000016cdc
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000016c51
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToEngine:(id)arg1;	// IMP=0x0000000000016a04
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000001699d
- (void)_commonInit;	// IMP=0x00000000000167da
- (id)initWithIdentifier:(id)arg1;	// IMP=0x000000000001675d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

