//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AXMediaUtilities/NSSecureCoding-Protocol.h>

@class AXBookendMetric, AXMPipelineContextInput, AXMSequenceRequestManager, AXMVisionAnalysisOptions, AXMVisionResult, AXMetricSession, NSArray, NSDictionary, NSError, NSMutableArray, NSMutableOrderedSet, NSMutableSet, NSNumber, VNImageRequestHandler, VNSceneObservation;
@protocol AXMetricContainer, NSCopying, NSSecureCoding, OS_dispatch_queue;

@interface AXMVisionPipelineContext : NSObject <NSSecureCoding>
{
    AXMPipelineContextInput *_sourceInput;	// 8 = 0x8
    NSDictionary *_sourceParameters;	// 16 = 0x10
    _Bool _sourceProvidesOwnResults;	// 24 = 0x18
    NSMutableArray *_resultHandlers;	// 32 = 0x20
    AXBookendMetric *_piplelineMetric;	// 40 = 0x28
    VNSceneObservation *_sceneObservation;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_sceneObservationQueue;	// 56 = 0x38
    NSMutableArray *_detectedSceneClassifications;	// 64 = 0x40
    NSMutableOrderedSet *_auxiliaryDetectors;	// 72 = 0x48
    _Bool _shouldProcessRemotely;	// 80 = 0x50
    _Bool _shouldCallCompletionHandlersForEngineBusyError;	// 81 = 0x51
    _Bool _shouldCallCompletionHandlersForEmptyResultSet;	// 82 = 0x52
    _Bool _evaluationExclusivelyUsesVisionFramework;	// 83 = 0x53
    NSError *_error;	// 88 = 0x58
    AXMVisionAnalysisOptions *_analysisOptions;	// 96 = 0x60
    NSArray *_effectiveTextDetectionLocales;	// 104 = 0x68
    long long _imageRegistrationState;	// 112 = 0x70
    NSObject<NSSecureCoding> *_userContext;	// 120 = 0x78
    id <NSCopying> _cacheKey;	// 128 = 0x80
    unsigned long long _sequenceID;	// 136 = 0x88
    AXMetricSession *_metricSession;	// 144 = 0x90
    NSMutableArray *_features;	// 152 = 0x98
    NSMutableSet *_evaluatedFeatureTypes;	// 160 = 0xa0
    AXMVisionResult *_result;	// 168 = 0xa8
    NSNumber *_appliedImageOrientation;	// 176 = 0xb0
    VNImageRequestHandler *_visionImageRequestHandler;	// 184 = 0xb8
    AXMSequenceRequestManager *_sequenceRequestManager;	// 192 = 0xc0
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000001fc8c
+ (id)contextWithSourceParameters:(id)arg1 options:(id)arg2;	// IMP=0x000000000001f886
- (void).cxx_destruct;	// IMP=0x0000000000021577
@property(retain, nonatomic) AXMSequenceRequestManager *sequenceRequestManager; // @synthesize sequenceRequestManager=_sequenceRequestManager;
@property(retain, nonatomic) VNImageRequestHandler *visionImageRequestHandler; // @synthesize visionImageRequestHandler=_visionImageRequestHandler;
@property(retain, nonatomic) NSNumber *appliedImageOrientation; // @synthesize appliedImageOrientation=_appliedImageOrientation;
@property(retain, nonatomic) AXMVisionResult *result; // @synthesize result=_result;
@property(retain, nonatomic) NSMutableSet *evaluatedFeatureTypes; // @synthesize evaluatedFeatureTypes=_evaluatedFeatureTypes;
@property(retain, nonatomic) NSMutableArray *features; // @synthesize features=_features;
@property(retain, nonatomic) AXMetricSession *metricSession; // @synthesize metricSession=_metricSession;
@property(nonatomic) unsigned long long sequenceID; // @synthesize sequenceID=_sequenceID;
@property(nonatomic) _Bool evaluationExclusivelyUsesVisionFramework; // @synthesize evaluationExclusivelyUsesVisionFramework=_evaluationExclusivelyUsesVisionFramework;
@property(nonatomic) _Bool shouldCallCompletionHandlersForEmptyResultSet; // @synthesize shouldCallCompletionHandlersForEmptyResultSet=_shouldCallCompletionHandlersForEmptyResultSet;
@property(nonatomic) _Bool shouldCallCompletionHandlersForEngineBusyError; // @synthesize shouldCallCompletionHandlersForEngineBusyError=_shouldCallCompletionHandlersForEngineBusyError;
@property(retain, nonatomic) id <NSCopying> cacheKey; // @synthesize cacheKey=_cacheKey;
@property(retain, nonatomic) NSObject<NSSecureCoding> *userContext; // @synthesize userContext=_userContext;
@property(nonatomic) long long imageRegistrationState; // @synthesize imageRegistrationState=_imageRegistrationState;
@property(retain, nonatomic) NSArray *effectiveTextDetectionLocales; // @synthesize effectiveTextDetectionLocales=_effectiveTextDetectionLocales;
@property(retain, nonatomic) AXMVisionAnalysisOptions *analysisOptions; // @synthesize analysisOptions=_analysisOptions;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool shouldProcessRemotely; // @synthesize shouldProcessRemotely=_shouldProcessRemotely;
- (void)didFinishProcessingContext;	// IMP=0x0000000000021308
- (void)willBeginProcessingContext;	// IMP=0x00000000000212a0
@property(readonly, nonatomic) id <AXMetricContainer> pipelineMetric;
- (void)removeAllAuxiliaryDetectors;	// IMP=0x0000000000021236
- (id)auxiliaryDetectors;	// IMP=0x0000000000021228
- (void)addAuxiliaryDetector:(id)arg1;	// IMP=0x00000000000211be
@property(readonly, nonatomic) AXMPipelineContextInput *sourceInput;
- (id)generateImageRepresentation;	// IMP=0x0000000000020f59
- (id)generateFileNameForImageWithPrefix:(id)arg1 extension:(id)arg2;	// IMP=0x0000000000020eac
- (void)errorOccurred:(id)arg1;	// IMP=0x0000000000020e9a
- (void)setEquivalenceToken:(id)arg1;	// IMP=0x0000000000020c02
- (_Bool)_addSignificantEventFeatureGateIfNeededToFeature:(id)arg1 category:(id)arg2 minimumConfidence:(double)arg3;	// IMP=0x0000000000020a70
- (void)addEvaluatedFeatureType:(unsigned long long)arg1;	// IMP=0x00000000000209fa
- (void)appendFeature:(id)arg1;	// IMP=0x000000000002093a
- (void)produceImage:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020857
- (void)addSceneLabelForOCRDocumentTypeDetection:(id)arg1;	// IMP=0x0000000000020841
@property(readonly, nonatomic) NSArray *sceneLabelsForOCRDocumentTypeDetection;
- (void)addResultHandlers:(id)arg1;	// IMP=0x000000000002081d
- (void)addResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000207dd
@property(readonly, nonatomic) NSArray *resultHandlers;
- (id)sceneObservation;	// IMP=0x0000000000020610
- (void)createSceneObservationIfNilWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002053e
@property(readonly, nonatomic) _Bool visionImageRequestHandlerIsLoaded;
- (id)visionImageRequestHandlerWithOptions:(id)arg1;	// IMP=0x00000000000204fb
- (id)_makeRequestHandlerForInput:(id)arg1 options:(id)arg2;	// IMP=0x000000000002023c
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) _Bool sourceProvidesResults;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000001ffdd
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000001fc94
- (id)description;	// IMP=0x000000000001fbfd
- (void)_commonInitWithDiagnosticsEnabled:(_Bool)arg1;	// IMP=0x000000000001fa44
- (id)initWithSourceParameters:(id)arg1 options:(id)arg2;	// IMP=0x000000000001f8f6

@end

