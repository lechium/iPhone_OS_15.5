//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CADisplayLink, NSCalendar, NSDate, NSHashTable;
@protocol OS_dispatch_source;

@interface CLKClockTimer : NSObject
{
    CADisplayLink *_displayLink;	// 8 = 0x8
    NSHashTable *_handlersByUpdateFrequency[5];	// 16 = 0x10
    NSHashTable *_allHandlers;	// 56 = 0x38
    unsigned long long _nextToken;	// 64 = 0x40
    NSDate *_lastNow;	// 72 = 0x48
    long long _lastHour;	// 80 = 0x50
    long long _lastMinute;	// 88 = 0x58
    long long _lastSecond;	// 96 = 0x60
    long long _last15fps;	// 104 = 0x68
    long long _last30fps;	// 112 = 0x70
    long long _last60fps;	// 120 = 0x78
    _Bool _paused;	// 128 = 0x80
    _Bool _isForeground;	// 129 = 0x81
    _Bool _backlightOn;	// 130 = 0x82
    _Bool _permittedToRun;	// 131 = 0x83
    NSObject<OS_dispatch_source> *_signalSource;	// 136 = 0x88
    NSDate *_waitTimerScheduledFireTime;	// 144 = 0x90
    NSObject<OS_dispatch_source> *_waitForNextEventTimer;	// 152 = 0x98
    NSCalendar *_calendar;	// 160 = 0xa0
    _Bool _ignoreScreenState;	// 168 = 0xa8
}

+ (void)_forceDate:(id)arg1;	// IMP=0x000000000004408e
+ (id)now;	// IMP=0x000000000004401c
+ (id)sharedInstance;	// IMP=0x0000000000043fc7
- (void).cxx_destruct;	// IMP=0x0000000000045f49
@property(nonatomic) _Bool ignoreScreenState; // @synthesize ignoreScreenState=_ignoreScreenState;
- (void)_dumpIndentificationLogs;	// IMP=0x0000000000045c84
- (void)pause;	// IMP=0x0000000000045c6b
- (void)unpause;	// IMP=0x0000000000045c52
- (void)_updateIsPermittedToRun;	// IMP=0x0000000000045ba0
- (void)_handleTimePassed;	// IMP=0x00000000000452b7
- (void)_onDisplayLink:(id)arg1;	// IMP=0x00000000000452a5
- (void)_maybeClearLastSeenTimeComponents;	// IMP=0x00000000000451e6
- (void)_updateDisplayLink;	// IMP=0x0000000000045196
- (void)_updateDisplayLinkWithTimeUntilNextHighAccuracyEvent:(double)arg1 withMinimumUpdateFrequency:(long long)arg2;	// IMP=0x0000000000044e73
- (void)_setDisplayLinkFrameInterval:(long long)arg1;	// IMP=0x0000000000044e16
- (void)_createDisplayLinkIfNeeded;	// IMP=0x0000000000044d72
- (void)_cancelWaitTimer;	// IMP=0x0000000000044d11
- (double)_timeUntilNextHighAccuracyEventFromNow;	// IMP=0x0000000000044c4c
- (double)_timeUntilNextHighAccuracyEventFromHour:(long long)arg1 minute:(long long)arg2 second:(long long)arg3 nanosecond:(long long)arg4;	// IMP=0x0000000000044bbe
- (long long)_minimumPossibleUpdateFrequency;	// IMP=0x0000000000044b2e
- (_Bool)_hasHandlers;	// IMP=0x0000000000044b11
- (id)start60fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;	// IMP=0x0000000000044a08
- (id)start30fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;	// IMP=0x00000000000448ff
- (id)start15fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;	// IMP=0x00000000000447f1
- (id)startSecondUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;	// IMP=0x00000000000446e8
- (id)startMinuteUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;	// IMP=0x00000000000445e2
- (void)setHandler:(id)arg1 wantsCommit:(_Bool)arg2;	// IMP=0x00000000000445cb
- (id)_nextTokenWithUpdateFrequency:(long long)arg1 wantsCommit:(_Bool)arg2 wantsHighAccuracy:(_Bool)arg3 identificationLog:(CDUnknownBlockType)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x000000000004448b
- (void)stopUpdatesForToken:(id)arg1;	// IMP=0x00000000000443de
- (id)startUpdatesWithUpdateFrequency:(long long)arg1 withHandler:(CDUnknownBlockType)arg2 identificationLog:(CDUnknownBlockType)arg3;	// IMP=0x000000000004432d
- (void)dealloc;	// IMP=0x00000000000442fe
- (id)init;	// IMP=0x00000000000440a2

@end

