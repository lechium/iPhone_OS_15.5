//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CLKImageProvider, CLKTextProvider;

@interface CLKComplicationTemplateModularLargeColumns
{
    _Bool _useNoColumnPadding;	// 64 = 0x40
    CLKImageProvider *_row1ImageProvider;	// 72 = 0x48
    CLKTextProvider *_row1Column1TextProvider;	// 80 = 0x50
    CLKTextProvider *_row1Column2TextProvider;	// 88 = 0x58
    CLKImageProvider *_row2ImageProvider;	// 96 = 0x60
    CLKTextProvider *_row2Column1TextProvider;	// 104 = 0x68
    CLKTextProvider *_row2Column2TextProvider;	// 112 = 0x70
    CLKImageProvider *_row3ImageProvider;	// 120 = 0x78
    CLKTextProvider *_row3Column1TextProvider;	// 128 = 0x80
    CLKTextProvider *_row3Column2TextProvider;	// 136 = 0x88
    long long _column2Alignment;	// 144 = 0x90
}

+ (id)templateWithRow1ImageProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2ImageProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6 row3ImageProvider:(id)arg7 row3Column1TextProvider:(id)arg8 row3Column2TextProvider:(id)arg9;	// IMP=0x0000000000012dcc
+ (id)templateWithRow1Column1TextProvider:(id)arg1 row1Column2TextProvider:(id)arg2 row2Column1TextProvider:(id)arg3 row2Column2TextProvider:(id)arg4 row3Column1TextProvider:(id)arg5 row3Column2TextProvider:(id)arg6;	// IMP=0x0000000000012ce0
- (void).cxx_destruct;	// IMP=0x00000000000132fb
@property(nonatomic) _Bool useNoColumnPadding; // @synthesize useNoColumnPadding=_useNoColumnPadding;
@property(nonatomic) long long column2Alignment; // @synthesize column2Alignment=_column2Alignment;
@property(copy, nonatomic) CLKTextProvider *row3Column2TextProvider; // @synthesize row3Column2TextProvider=_row3Column2TextProvider;
@property(copy, nonatomic) CLKTextProvider *row3Column1TextProvider; // @synthesize row3Column1TextProvider=_row3Column1TextProvider;
@property(copy, nonatomic) CLKImageProvider *row3ImageProvider; // @synthesize row3ImageProvider=_row3ImageProvider;
@property(copy, nonatomic) CLKTextProvider *row2Column2TextProvider; // @synthesize row2Column2TextProvider=_row2Column2TextProvider;
@property(copy, nonatomic) CLKTextProvider *row2Column1TextProvider; // @synthesize row2Column1TextProvider=_row2Column1TextProvider;
@property(copy, nonatomic) CLKImageProvider *row2ImageProvider; // @synthesize row2ImageProvider=_row2ImageProvider;
@property(copy, nonatomic) CLKTextProvider *row1Column2TextProvider; // @synthesize row1Column2TextProvider=_row1Column2TextProvider;
@property(copy, nonatomic) CLKTextProvider *row1Column1TextProvider; // @synthesize row1Column1TextProvider=_row1Column1TextProvider;
@property(copy, nonatomic) CLKImageProvider *row1ImageProvider; // @synthesize row1ImageProvider=_row1ImageProvider;
- (void)_enumerateIntegerKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000001314b
- (void)_enumerateImageProviderKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000001300f
- (void)_enumerateTextProviderKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000012f22
- (long long)compatibleFamily;	// IMP=0x0000000000012f17
- (id)initWithRow1ImageProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2ImageProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6 row3ImageProvider:(id)arg7 row3Column1TextProvider:(id)arg8 row3Column2TextProvider:(id)arg9;	// IMP=0x0000000000012b4a
- (id)initWithRow1Column1TextProvider:(id)arg1 row1Column2TextProvider:(id)arg2 row2Column1TextProvider:(id)arg3 row2Column2TextProvider:(id)arg4 row3Column1TextProvider:(id)arg5 row3Column2TextProvider:(id)arg6;	// IMP=0x0000000000012b06

@end

