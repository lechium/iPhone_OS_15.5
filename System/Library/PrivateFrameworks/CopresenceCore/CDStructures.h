//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Fsm<States, States::Idle, Triggers> {
    struct map<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>, std::less<States>, std::allocator<std::pair<const States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>>> transitionsMap;
    int currentState;
    struct function<void (States, States, Triggers)> _debug_fn;
};

struct function<void (States, States, Triggers)> {
    struct __value_func<void (States, States, Triggers)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct map<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>, std::less<States>, std::allocator<std::pair<const States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>>> {
    struct __tree<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::__map_value_compare<States, std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::less<States>, true>, std::allocator<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> {
                void *__left_;
            } __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<States, std::__value_type<States, std::vector<FSM::Fsm<States, States::Idle, Triggers>::Trans>>, std::less<States>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct type {
    unsigned char __lx[32];
};

