//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GKAutoPeerIDTable, GKConnection, GKList, GKSession, GKTable, GKVoiceChatSessionListener, NSString;
@protocol GKSessionDOOBReceiveHandler, GKSessionDelegate, GKSessionPrivateDelegate;

@interface GKSessionInternal : NSObject
{
    GKSession *_session;	// 8 = 0x8
    NSString *domain;	// 16 = 0x10
    NSString *serviceType;	// 24 = 0x18
    unsigned long long _port;	// 32 = 0x20
    NSString *_displayName;	// 40 = 0x28
    unsigned int _pid;	// 48 = 0x30
    unsigned long long maxPeers;	// 56 = 0x38
    struct OpaqueGCKSession *sessionRef;	// 64 = 0x40
    struct OpaqueAGPSession *agpSessionRef;	// 72 = 0x48
    GKConnection *_connection;	// 80 = 0x50
    id _delegate;	// 88 = 0x58
    id _privateDelegate;	// 96 = 0x60
    id _dataReceiveHandler;	// 104 = 0x68
    void *_dataReceiveHandlerContext;	// 112 = 0x70
    id <GKSessionDOOBReceiveHandler> _doobReceiveHandler[2];	// 120 = 0x78
    void *_doobReceiveHandlerContext[2];	// 136 = 0x88
    GKTable *_peerInfoTable;	// 152 = 0x98
    GKTable *_peerNameTable;	// 160 = 0xa0
    GKAutoPeerIDTable *_peerIDTable;	// 168 = 0xa8
    GKList *_peersAvailable;	// 176 = 0xb0
    GKList *_peersConnected;	// 184 = 0xb8
    GKList *_peersForCleanup;	// 192 = 0xc0
    GKList *_peersPendingIncomingInvitation;	// 200 = 0xc8
    GKList *_peersPendingOutgoingInvitation;	// 208 = 0xd0
    struct _opaque_pthread_mutex_t _lock;	// 216 = 0xd8
    struct _opaque_pthread_mutex_t _delegateLock;	// 280 = 0x118
    _Bool _isSearching;	// 344 = 0x158
    _Bool _isPublishing;	// 345 = 0x159
    _Bool _sessionStarted;	// 346 = 0x15a
    unsigned int _mode;	// 348 = 0x15c
    _Bool _isBusy;	// 352 = 0x160
    NSString *sessionID;	// 360 = 0x168
    double disconnectTimeout;	// 368 = 0x170
    struct _DNSServiceRef_t *_dnsServiceConnection;	// 376 = 0x178
    struct _DNSServiceRef_t *_dnsServiceResolveConnection;	// 384 = 0x180
    int _sReset;	// 392 = 0x188
    struct _DNSServiceRef_t *_serviceBrowser;	// 400 = 0x190
    struct _DNSServiceRef_t *_service;	// 408 = 0x198
    struct _DNSServiceRef_t *_oldService;	// 416 = 0x1a0
    _Bool _handleEventsRunning;	// 424 = 0x1a8
    _Bool _stopHandlingEvents;	// 425 = 0x1a9
    _Bool _wifiEnabled;	// 426 = 0x1aa
    _Bool _shutdown;	// 427 = 0x1ab
    GKVoiceChatSessionListener *_voiceChatListener;	// 432 = 0x1b0
}

@property(readonly, retain) GKConnection *connection; // @synthesize connection=_connection;
@property(readonly) unsigned int sessionMode; // @synthesize sessionMode=_mode;
@property(readonly) NSString *sessionID; // @synthesize sessionID;
@property(nonatomic) unsigned long long port; // @synthesize port=_port;
@property(nonatomic) struct OpaqueAGPSession *agpSessionRef; // @synthesize agpSessionRef;
@property(nonatomic) struct OpaqueGCKSession *sessionRef; // @synthesize sessionRef;
@property(nonatomic) unsigned long long maxPeers; // @synthesize maxPeers;
@property(copy, nonatomic) NSString *serviceType; // @synthesize serviceType;
@property(copy, nonatomic) NSString *domain; // @synthesize domain;
- (id)voiceChatSessionListener;	// IMP=0x000000000004b6d1
- (id)stringForGCKID:(unsigned int)arg1;	// IMP=0x000000000004b6b8
- (void)didResolveService:(struct _DNSServiceRef_t *)arg1 forPeer:(id)arg2 hostName:(const char *)arg3 port:(unsigned short)arg4 interface:(unsigned int)arg5 txtLen:(unsigned short)arg6 txtRecord:(const void *)arg7 withError:(int)arg8 moreComing:(_Bool)arg9;	// IMP=0x000000000004ad4a
- (void)didLookupHostname:(struct _DNSServiceRef_t *)arg1 forPeer:(id)arg2 hostName:(const char *)arg3 address:(const struct sockaddr_in *)arg4 interface:(unsigned int)arg5 withError:(int)arg6 moreComing:(_Bool)arg7;	// IMP=0x000000000004aaad
- (_Bool)tryConnectToPeer:(id)arg1;	// IMP=0x000000000004a266
- (void)browse;	// IMP=0x000000000004972f
- (void)didRemoveService:(const char *)arg1 fromIF:(const char *)arg2 withError:(int)arg3 moreComing:(_Bool)arg4;	// IMP=0x00000000000491d5
- (void)didFindService:(const char *)arg1 fromIF:(const char *)arg2 withError:(int)arg3 moreComing:(_Bool)arg4;	// IMP=0x00000000000489aa
- (void)didUpdateTXTRecordForPeer:(id)arg1 fromIF:(const char *)arg2 txtLen:(unsigned short)arg3 txtRecord:(const void *)arg4 withError:(int)arg5 moreComing:(_Bool)arg6;	// IMP=0x000000000004859e
- (void)processTXTRecordForPeer:(id)arg1 txtLen:(unsigned short)arg2 txtRecord:(const void *)arg3;	// IMP=0x00000000000482b1
- (void)cleanupExAvailablePeers;	// IMP=0x0000000000047f5e
- (_Bool)filterService:(const char *)arg1 withPID:(unsigned int)arg2;	// IMP=0x0000000000047f56
- (void)publish;	// IMP=0x000000000004787e
- (_Bool)checkDNSConnection;	// IMP=0x0000000000047636
- (void)handleEvents;	// IMP=0x0000000000046be9
@property double disconnectTimeout;
- (_Bool)isPeerBusy:(id)arg1;	// IMP=0x0000000000046b5f
@property _Bool wifiEnabled;
@property(getter=isBusy) _Bool busy;
- (void)stopOldService;	// IMP=0x0000000000046797
@property(readonly) NSString *peerID;
- (id)peersWithConnectionState:(unsigned int)arg1;	// IMP=0x000000000004669f
@property(getter=isAvailable) _Bool available;
- (void)disconnectFromAllPeers;	// IMP=0x0000000000045e92
- (void)disconnectPeerFromAllPeers:(id)arg1;	// IMP=0x0000000000045add
- (void)denyConnectionFromPeer:(id)arg1;	// IMP=0x0000000000045a09
- (_Bool)acceptConnectionFromPeer:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000045869
- (void)cancelConnectToPeer:(id)arg1;	// IMP=0x0000000000045690
- (void)connectToPeer:(id)arg1 withTimeout:(double)arg2;	// IMP=0x0000000000044d4f
- (void)timeoutConnectToPeer:(id)arg1;	// IMP=0x0000000000044920
- (void)setDataReceiveHandler:(id)arg1 withContext:(void *)arg2;	// IMP=0x00000000000447e9
@property(readonly, nonatomic) id dataReceiveHandler;
- (void)setDOOBReceiveHandler:(id)arg1 withContext:(void *)arg2 inBand:(unsigned int)arg3;	// IMP=0x0000000000044686
- (void)receiveDOOB:(id)arg1 fromPeer:(id)arg2 inSession:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000444ef
- (_Bool)sendDataToAllPeers:(id)arg1 withDataMode:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x0000000000044269
- (_Bool)sendData:(id)arg1 toPeers:(id)arg2 withDataMode:(unsigned int)arg3 enableOOB:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000043e35
- (_Bool)sendData:(id)arg1 toPeers:(id)arg2 withDataMode:(unsigned int)arg3 error:(id *)arg4;	// IMP=0x0000000000043e13
- (_Bool)passesSendDataSanityCheck:(id)arg1 toPeers:(id)arg2 withDataMode:(unsigned int)arg3 error:(id *)arg4;	// IMP=0x0000000000043da3
- (_Bool)sendAudioData:(id)arg1 toPeers:(id)arg2 withDataMode:(unsigned int)arg3 error:(id *)arg4;	// IMP=0x0000000000043d7e
- (id)displayNameForPeer:(id)arg1;	// IMP=0x0000000000043a60
@property(readonly) NSString *displayName;
- (void)dealloc;	// IMP=0x000000000004384d
- (void)reset;	// IMP=0x0000000000043254
- (id)initWithSessionID:(id)arg1 displayName:(id)arg2 session:(id)arg3 sessionMode:(unsigned int)arg4;	// IMP=0x0000000000042999
- (id)initWithConnection:(id)arg1 session:(id)arg2 delegate:(id)arg3;	// IMP=0x0000000000041e83
- (id)description;	// IMP=0x0000000000041e15
@property id <GKSessionPrivateDelegate> privateDelegate;
@property id <GKSessionDelegate> delegate;
- (void)unlock;	// IMP=0x000000000003e919
- (void)lock;	// IMP=0x000000000003e8a8
- (void)didPublishWithError:(int)arg1;	// IMP=0x000000000003e493
- (void)stopResolvingAllPeers;	// IMP=0x000000000003e37a
- (id)serviceName;	// IMP=0x000000000003e2d3
- (_Bool)parseServiceName:(const char *)arg1 intoDisplayName:(id *)arg2 pid:(unsigned int *)arg3 state:(id *)arg4;	// IMP=0x000000000003dae6
- (void)tellDelegate_networkStatisticsChanged:(id)arg1;	// IMP=0x000000000003d770
- (void)tellDelegate_updateRelay:(id)arg1;	// IMP=0x000000000003d328
- (void)tellDelegate_initiateRelay:(id)arg1;	// IMP=0x000000000003cee0
- (void)tellDelegate_peerDidBecomeBusy:(id)arg1;	// IMP=0x000000000003cc3f
- (void)tellDelegate_connectionRequestToPeerFailed:(id)arg1;	// IMP=0x000000000003c873
- (void)tellDelegate_gotInvited:(id)arg1;	// IMP=0x000000000003c4cd
- (void)tellDelegate_didReceiveData:(id)arg1;	// IMP=0x000000000003c255
- (void)tellDelegate_didReceiveBand_RetryICE:(id)arg1;	// IMP=0x000000000003c147
- (void)tellDelegate_peerDidBecomeUnavailable:(id)arg1;	// IMP=0x000000000003be61
- (void)tellDelegate_peerDidBecomeAvailable:(id)arg1;	// IMP=0x000000000003bb81
- (void)tellDelegate_isConnectingPeer:(id)arg1;	// IMP=0x000000000003b864
- (void)tellDelegate_didDisconnectPeer:(id)arg1;	// IMP=0x000000000003b417
- (void)tellDelegate_didConnectPeer:(id)arg1;	// IMP=0x000000000003adb5
- (void)tellDelegate_sessionDidFailWithError:(id)arg1;	// IMP=0x000000000003ac9c
- (void)setDisplayName:(id)arg1 forPeer:(unsigned int)arg2;	// IMP=0x000000000003aa71
- (void)printDictionaries;	// IMP=0x000000000003aa6b
- (id)newNSErrorFromGKSessionError:(int)arg1 description:(id)arg2 reason:(id)arg3;	// IMP=0x000000000003a8e3
- (id)newNSErrorFromHRESULT:(int)arg1 description:(id)arg2 reason:(id)arg3;	// IMP=0x000000000003a75b
- (_Bool)isShuttingDown;	// IMP=0x000000000003a74f
- (void)sendCallbacksToDelegate:(CDStruct_68f9d01f *)arg1 remotePeer:(unsigned int)arg2;	// IMP=0x000000000003e98a

@end

