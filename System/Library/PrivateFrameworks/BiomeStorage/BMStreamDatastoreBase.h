//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BMFrameStore, BMPruningPolicy, BMStoreConfig, BMStreamMetadata, NSString, _PASLock;

@interface BMStreamDatastoreBase : NSObject
{
    unsigned long long _permission;	// 8 = 0x8
    unsigned long long _datastoreVersion;	// 16 = 0x10
    unsigned long long _maxFileSize;	// 24 = 0x18
    NSString *_streamPath;	// 32 = 0x20
    _Bool _isRemote;	// 40 = 0x28
    _Bool _isTombstone;	// 41 = 0x29
    NSString *_remoteStreamName;	// 48 = 0x30
    BMStreamMetadata *_metadata;	// 56 = 0x38
    BMPruningPolicy *_pruningPolicy;	// 64 = 0x40
    Class _eventDataClass;	// 72 = 0x48
    struct os_unfair_lock_s _lock;	// 80 = 0x50
    BMStoreConfig *_config;	// 88 = 0x58
    id _lockStateChangeRegistration;	// 96 = 0x60
    _PASLock *_deviceLockStateLock;	// 104 = 0x68
    NSString *_streamId;	// 112 = 0x70
    BMFrameStore *_framesStore;	// 120 = 0x78
}

+ (long long)fileSizeOfURL:(id)arg1;	// IMP=0x000000000000a839
+ (id)orderedSegmentsInDirectory:(id)arg1 includeZeroSizeSegments:(_Bool)arg2;	// IMP=0x000000000000a2bb
+ (unsigned long long)indexOfSegmentContainingEventTime:(double)arg1 fromSegments:(id)arg2;	// IMP=0x0000000000009815
+ (double)timestampWithFilename:(id)arg1;	// IMP=0x00000000000097f2
+ (id)fileNameWithTimestamp:(double)arg1;	// IMP=0x0000000000009780
- (void).cxx_destruct;	// IMP=0x0000000000010fa6
@property(readonly, nonatomic) BMPruningPolicy *pruningPolicy; // @synthesize pruningPolicy=_pruningPolicy;
@property(readonly, nonatomic) NSString *remoteStreamName; // @synthesize remoteStreamName=_remoteStreamName;
@property(readonly, nonatomic) _Bool isRemote; // @synthesize isRemote=_isRemote;
@property(readonly, nonatomic) NSString *streamPath; // @synthesize streamPath=_streamPath;
@property(readonly, nonatomic) unsigned long long datastoreVersion; // @synthesize datastoreVersion=_datastoreVersion;
@property(readonly, nonatomic) unsigned long long permission; // @synthesize permission=_permission;
@property(readonly, nonatomic) BMStoreConfig *config; // @synthesize config=_config;
@property(retain, nonatomic) BMFrameStore *framesStore; // @synthesize framesStore=_framesStore;
@property(readonly, copy, nonatomic) NSString *streamId; // @synthesize streamId=_streamId;
- (id)filelockPath;	// IMP=0x0000000000010f1f
@property(readonly, nonatomic) unsigned long long maxFileSize;
- (_Bool)saveMetadata:(id)arg1;	// IMP=0x0000000000010c8a
- (id)loadMetadata;	// IMP=0x0000000000010abe
- (_Bool)updateMetadata:(Class)arg1 pruningPolicy:(id)arg2;	// IMP=0x00000000000108b0
- (_Bool)updateMetadata:(Class)arg1;	// IMP=0x000000000001089c
- (id)metadataPath;	// IMP=0x000000000001087f
- (void)didMarkFrameAsRemovedWithSegmentName:(id)arg1 frame:(id)arg2 reason:(unsigned long long)arg3 outTombstoneBookmark:(id *)arg4;	// IMP=0x0000000000010879
- (void)didMarkFrameAsRemovedWithSegmentName:(id)arg1 frame:(id)arg2 reason:(unsigned long long)arg3;	// IMP=0x0000000000010873
- (id)frameStoreOfSegmentContainingEventTime:(double)arg1;	// IMP=0x0000000000010611
- (id)segmentWithFilename:(id)arg1 segmentNames:(id)arg2 segmentFileHandles:(id)arg3 createNewFile:(_Bool)arg4 error:(id *)arg5;	// IMP=0x000000000001026e
- (id)segmentWithFilename:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000010074
- (void)handleDeviceLocking;	// IMP=0x000000000000ff81
- (void)handleDeviceUnlock;	// IMP=0x000000000000fed6
- (id)newFramestoreWithTime:(double)arg1 segmentNames:(id)arg2 segmentFileHandles:(id)arg3;	// IMP=0x000000000000fce6
- (id)newFramestoreWithTime:(double)arg1;	// IMP=0x000000000000fb42
- (id)nextSegmentAfterFrameStore:(id)arg1 segmentNames:(id)arg2 direction:(unsigned long long)arg3;	// IMP=0x000000000000f8bf
- (_Bool)_segmentStillExists:(id)arg1;	// IMP=0x000000000000f81f
- (id)segmentAfterFrameStore:(id)arg1 createNewSegment:(_Bool)arg2 direction:(unsigned long long)arg3;	// IMP=0x000000000000f24a
- (id)segmentAfterFrameStore:(id)arg1 createNewSegment:(_Bool)arg2;	// IMP=0x000000000000f235
- (void)fetchEventFromFrameStore:(id)arg1 atOffset:(unsigned long long)arg2 withOptions:(unsigned long long)arg3 callback:(CDUnknownBlockType)arg4;	// IMP=0x000000000000eec4
- (void)reverseEnumerateSegmentsNamesFrom:(double)arg1 to:(double)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000ec62
- (void)reverseEnumerateSegmentsFrom:(double)arg1 to:(double)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000e989
- (void)enumerateSegmentsNamesFrom:(double)arg1 to:(double)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000e708
- (void)enumerateSegmentsFrom:(double)arg1 to:(double)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000e41f
- (_Bool)writeEventBytes:(const void *)arg1 length:(unsigned long long)arg2 dataVersion:(unsigned int)arg3 timestamp:(double)arg4 outBookmark:(id *)arg5;	// IMP=0x000000000000e07b
- (id)_bookmarkWithSegmentName:(id)arg1 offset:(unsigned long long)arg2;	// IMP=0x000000000000e00d
- (_Bool)writeEventData:(id)arg1 dataVersion:(unsigned int)arg2 timestamp:(double)arg3 outBookmark:(id *)arg4;	// IMP=0x000000000000df3d
- (_Bool)writeEventBytes:(const void *)arg1 length:(unsigned long long)arg2 dataVersion:(unsigned int)arg3 timestamp:(double)arg4;	// IMP=0x000000000000df25
- (_Bool)writeEventData:(id)arg1 dataVersion:(unsigned int)arg2 timestamp:(double)arg3;	// IMP=0x000000000000df10
- (void)enumerateEventsFrom:(double)arg1 to:(double)arg2 options:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000dd6e
- (_Bool)deleteEventAtBookmark:(id)arg1 outTombstoneBookmark:(id *)arg2;	// IMP=0x000000000000d874
- (id)newEnumeratorFromBookmark:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000000d7d4
- (id)newEnumeratorFromBookmark:(id)arg1;	// IMP=0x000000000000d7c0
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 maxEvents:(unsigned long long)arg3 lastN:(unsigned long long)arg4 options:(unsigned long long)arg5;	// IMP=0x000000000000d659
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 maxEvents:(unsigned long long)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000000d63a
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000000d61e
- (id)newEnumeratorFromStartTime:(double)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000000d5a0
- (id)newEnumeratorFromStartTime:(double)arg1;	// IMP=0x000000000000d58c
- (void)eventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 shouldDeleteUsingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000d572
- (void)eventsFrom:(double)arg1 to:(double)arg2 shouldDeleteUsingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000d55b
- (_Bool)removeFrameStoreFileWithSegmentName:(id)arg1;	// IMP=0x000000000000d433
- (_Bool)isNotLastSegment:(id)arg1;	// IMP=0x000000000000d2b3
- (void)pruneStreamToMaxSegmentAge:(double)arg1;	// IMP=0x000000000000d076
- (void)pruneStreamToMaxStreamSizeInBytes:(unsigned long long)arg1;	// IMP=0x000000000000ccf4
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 pruneFutureEvents:(_Bool)arg4 shouldDeleteUsingBlock:(CDUnknownBlockType)arg5;	// IMP=0x000000000000c18a
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 pruneFutureEvents:(_Bool)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x000000000000c091
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 pruneFutureEvents:(_Bool)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000c075
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 pruneFutureEvents:(_Bool)arg3 shouldDeleteUsingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000c059
- (id)fetchEventsFrom:(double)arg1 to:(double)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000000bf2b
- (id)fetchEventsFrom:(double)arg1 to:(double)arg2;	// IMP=0x000000000000bf17
- (_Bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2 outBookmark:(id *)arg3;	// IMP=0x000000000000bc43
- (_Bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2;	// IMP=0x000000000000bc2f
- (_Bool)writeEventWithEventBody:(id)arg1;	// IMP=0x000000000000bbeb
- (unsigned long long)segmentFileSize:(id)arg1;	// IMP=0x000000000000bad4
- (unsigned long long)streamSizeInBytes;	// IMP=0x000000000000b848
@property(readonly, nonatomic) _Bool canReadOrPruneData;
- (Class)eventBodyClass;	// IMP=0x000000000000b715
@property(readonly, nonatomic) BMStreamMetadata *metadata;
- (id)segmentNames;	// IMP=0x000000000000b53c
- (void)syncMappedFiles;	// IMP=0x000000000000b4ff
- (id)_remoteStreamPath;	// IMP=0x000000000000b496
- (id)_localStreamPath;	// IMP=0x000000000000b479
- (id)effectiveStreamPath;	// IMP=0x000000000000b402
- (void)dealloc;	// IMP=0x000000000000b3b4
- (id)initWithStream:(id)arg1 streamPath:(id)arg2 permission:(unsigned long long)arg3 config:(id)arg4;	// IMP=0x000000000000a9e4
- (id)initWithStream:(id)arg1 permission:(unsigned long long)arg2 config:(id)arg3;	// IMP=0x000000000000a923
- (id)fileHandleForFile:(id)arg1 createNewFile:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000000a0c7
- (id)filePathForFilename:(id)arg1;	// IMP=0x000000000000a044
- (void)openFiles:(id)arg1 saveToOpenFiles:(id)arg2;	// IMP=0x0000000000009e2e
- (_Bool)shouldCacheFileDescriptors;	// IMP=0x0000000000009e10
- (void)updateSegmentsWithGuardedDeviceLockStateData:(id)arg1;	// IMP=0x0000000000009b97
- (void)updateSegments;	// IMP=0x0000000000009b0d

@end

