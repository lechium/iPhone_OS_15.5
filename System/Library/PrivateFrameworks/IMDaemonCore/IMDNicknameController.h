//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <IMDaemonCore/IMSystemMonitorListener-Protocol.h>

@class IDSKVStore, IMNickname, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet;

@interface IMDNicknameController : NSObject <IMSystemMonitorListener>
{
    _Bool _needToLoadMapsInfoFromDisk;	// 8 = 0x8
    _Bool _nicknameIsUploadingToCK;	// 9 = 0x9
    IMNickname *_personalNickname;	// 16 = 0x10
    IDSKVStore *_kvStore;	// 24 = 0x18
    double _lastMeContactStoreSync;	// 32 = 0x20
    IDSKVStore *_handledNicknamesKVStore;	// 40 = 0x28
    IDSKVStore *_pendingNicknameUpdatesKVStore;	// 48 = 0x30
    IDSKVStore *_handleSharingKVStore;	// 56 = 0x38
    NSMutableDictionary *_handledNicknames;	// 64 = 0x40
    NSMutableDictionary *_pendingNicknameUpdates;	// 72 = 0x48
    NSMutableSet *_handleAllowList;	// 80 = 0x50
    NSMutableSet *_handleDenyList;	// 88 = 0x58
    NSMutableArray *_chatsToSendNicknameInfoTo;	// 96 = 0x60
}

+ (id)sharedInstance;	// IMP=0x0000000000050f85
@property(nonatomic) _Bool nicknameIsUploadingToCK; // @synthesize nicknameIsUploadingToCK=_nicknameIsUploadingToCK;
@property(retain, nonatomic) NSMutableArray *chatsToSendNicknameInfoTo; // @synthesize chatsToSendNicknameInfoTo=_chatsToSendNicknameInfoTo;
@property(nonatomic) _Bool needToLoadMapsInfoFromDisk; // @synthesize needToLoadMapsInfoFromDisk=_needToLoadMapsInfoFromDisk;
@property(retain, nonatomic) NSMutableSet *handleDenyList; // @synthesize handleDenyList=_handleDenyList;
@property(retain, nonatomic) NSMutableSet *handleAllowList; // @synthesize handleAllowList=_handleAllowList;
@property(retain, nonatomic) NSMutableDictionary *pendingNicknameUpdates; // @synthesize pendingNicknameUpdates=_pendingNicknameUpdates;
@property(retain, nonatomic) NSMutableDictionary *handledNicknames; // @synthesize handledNicknames=_handledNicknames;
@property(retain, nonatomic) IDSKVStore *handleSharingKVStore; // @synthesize handleSharingKVStore=_handleSharingKVStore;
@property(retain, nonatomic) IDSKVStore *pendingNicknameUpdatesKVStore; // @synthesize pendingNicknameUpdatesKVStore=_pendingNicknameUpdatesKVStore;
@property(retain, nonatomic) IDSKVStore *handledNicknamesKVStore; // @synthesize handledNicknamesKVStore=_handledNicknamesKVStore;
@property(nonatomic) double lastMeContactStoreSync; // @synthesize lastMeContactStoreSync=_lastMeContactStoreSync;
@property(retain, nonatomic) IDSKVStore *kvStore; // @synthesize kvStore=_kvStore;
@property(retain, nonatomic) IMNickname *personalNickname; // @synthesize personalNickname=_personalNickname;
- (void)markAllNicknamesAsPending;	// IMP=0x0000000000057fc7
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x0000000000057f81
- (id)transferServicesController;	// IMP=0x0000000000057f68
- (id)substringRecordIDForNickname:(id)arg1;	// IMP=0x0000000000057efa
- (id)nicknameForHandle:(id)arg1;	// IMP=0x0000000000057e53
- (id)nicknameForHandleURI:(id)arg1;	// IMP=0x0000000000057de9
- (id)nicknameForRecordID:(id)arg1 handle:(id)arg2;	// IMP=0x0000000000057cf9
- (id)nicknameForRecordID:(id)arg1;	// IMP=0x0000000000057ad5
- (id)allNicknames;	// IMP=0x0000000000057a73
- (void)_deleteAvatarForNickname:(id)arg1;	// IMP=0x00000000000579da
- (id)pendingPersonalNickname;	// IMP=0x00000000000578b5
- (id)storedPersonalNickname;	// IMP=0x0000000000057654
- (id)nickNameRecordID;	// IMP=0x0000000000057599
- (id)nickNameDecryptionKey;	// IMP=0x0000000000057515
- (void)_deletePublicNicknameLocationAndKey;	// IMP=0x000000000005744d
- (void)_deletePendingNicknameForUpload;	// IMP=0x00000000000573d3
- (id)_getPendingNicknameForUpload;	// IMP=0x0000000000057267
- (void)_storePendingNicknameForUpload:(id)arg1;	// IMP=0x000000000005716d
- (void)_storePublicNickname:(id)arg1 nicknameLocation:(id)arg2 encryptionKey:(id)arg3;	// IMP=0x0000000000056f01
- (void)_makeAllNicknameContentsClassC;	// IMP=0x0000000000056d0f
- (_Bool)_populateNicknameDictionary:(id)arg1 forKVStore:(id)arg2 limitToLoad:(unsigned long long)arg3;	// IMP=0x0000000000056abe
- (void)loadSharingHandlesPrefs;	// IMP=0x00000000000567ee
- (void)loadHandledNicknamesAndPendingUpdates;	// IMP=0x00000000000565df
- (void)loadPersonalNicknameIfNeeded;	// IMP=0x0000000000056503
- (void)_loadAllInfoFromDiskIfAble;	// IMP=0x00000000000563d6
- (void)_deleteDataUnderScrutiny;	// IMP=0x00000000000562d0
- (void)_setUnderScrutiny:(_Bool)arg1;	// IMP=0x000000000005626d
- (_Bool)_isUnderScrutiny;	// IMP=0x0000000000056222
- (_Bool)_deviceUnderFirstUnlock;	// IMP=0x00000000000561f0
- (void)cleanUpNicknameForID:(id)arg1;	// IMP=0x0000000000055ed1
- (void)_deleteHandleIDFromHandledMap:(id)arg1;	// IMP=0x0000000000055e6f
- (void)_deleteHandleIDFromPendingMap:(id)arg1;	// IMP=0x0000000000055e0d
- (void)_deleteNicknameFromPendingMap:(id)arg1;	// IMP=0x0000000000055dd9
- (void)_writeNicknameToKVStore:(id)arg1 nickname:(id)arg2;	// IMP=0x0000000000055ce7
- (void)markNicknameAsUpdated:(id)arg1;	// IMP=0x0000000000055cd0
- (void)_updateNicknameInHandledMap:(id)arg1;	// IMP=0x0000000000055a9c
- (void)_markNicknameAsUpdated:(id)arg1 incrementPendingNicknameVersion:(_Bool)arg2;	// IMP=0x00000000000559af
- (_Bool)replacedNicknameForHandleIDInHandledMapIfNeeded:(id)arg1 nickname:(id)arg2;	// IMP=0x00000000000558a2
- (void)addNicknameToPendingUpdates:(id)arg1;	// IMP=0x00000000000555e5
- (void)_broadcastPendingMapChanged;	// IMP=0x000000000005559c
- (void)ignorePendingNicknameForHandleID:(id)arg1;	// IMP=0x000000000005542c
- (void)clearPendingNicknameForHandleID:(id)arg1;	// IMP=0x000000000005531f
- (void)saveNicknameForRecordID:(id)arg1 handleID:(id)arg2 userNickname:(id)arg3;	// IMP=0x0000000000055260
- (void)_updatePendingNicknameVersion;	// IMP=0x00000000000551bb
- (void)_updateHandleList:(id)arg1 withHandles:(id)arg2 forKey:(id)arg3 broadcastUpdates:(_Bool)arg4;	// IMP=0x00000000000550cb
- (void)denyHandlesForSharing:(id)arg1;	// IMP=0x0000000000054fe2
- (void)allowHandlesForSharing:(id)arg1 onChatGUIDs:(id)arg2;	// IMP=0x0000000000054d81
- (void)broadcastHandlesSharingNicknamesDidChange;	// IMP=0x0000000000054d38
@property(readonly, nonatomic) NSSet *denyListedHandlesForSharing;
@property(readonly, nonatomic) NSSet *allowListedHandlesForSharing;
- (void)sendPersonalNicknameToChat:(id)arg1;	// IMP=0x0000000000054c0d
- (void)queueChatToSendNicknamePostUploadIfNeeded:(id)arg1;	// IMP=0x0000000000054b4c
- (_Bool)_sendMessageDictionary:(id)arg1 toDevice:(id)arg2;	// IMP=0x0000000000054a01
- (void)sendPersonalNicknameRecordIDAndVersionToAllPeers;	// IMP=0x00000000000549a7
- (void)sendPersonalNicknameRecordIDAndVersionRequestedByDevice:(id)arg1;	// IMP=0x0000000000054967
- (void)sendNicknamePreferencesDidChange;	// IMP=0x0000000000054860
- (_Bool)_isNicknamesSharingEnabled;	// IMP=0x00000000000547f8
- (void)sendPendingNicknameUpdatesDidChange;	// IMP=0x00000000000547a0
- (void)handleNicknameUpdatesFromPeerDevice:(id)arg1 fromPeerDevice:(id)arg2;	// IMP=0x000000000005467b
- (_Bool)_requestingToSendLocalNicknameInfo:(id)arg1;	// IMP=0x0000000000054646
- (void)_syncHandleAllowDenyListToOtherDevices;	// IMP=0x00000000000544d4
- (void)_updateDenyAllowListHandlesVersion;	// IMP=0x000000000005442f
- (void)_updateHandleDenyAllowListIfNeeded:(id)arg1;	// IMP=0x0000000000053dc7
- (void)_updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:(id)arg1;	// IMP=0x0000000000053c62
- (void)_showDebugAlertWithHeader:(id)arg1 message:(id)arg2;	// IMP=0x0000000000053bca
- (void)_updateHandledNicknamesIfNeeded:(id)arg1;	// IMP=0x000000000005389e
- (void)_markNicknameAsUpdatedForHandleID:(id)arg1;	// IMP=0x00000000000537e6
- (id)messageDictionaryWithPersonalRecordIDAndVersion;	// IMP=0x000000000005354b
- (void)_updateMessageDictionaryWithPendingNicknameUpdates:(id)arg1;	// IMP=0x0000000000053476
- (void)_updateSharingPreferencesIfNeededFromMadridMessage:(id)arg1;	// IMP=0x00000000000531c5
- (void)deleteAllPersonalNicknames:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000053008
- (void)NicknameWithRecordID:(id)arg1 URI:(id)arg2 decryptionKey:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000052bff
- (void)getNicknameWithRecordID:(id)arg1 decryptionKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000052a8c
- (void)currentPersonalNicknameWithRecordID:(id)arg1 decryptionKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000052835
- (void)currentPersonalNicknamewithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000527e3
- (void)_clearSharingLists;	// IMP=0x0000000000052779
- (void)_resetHandleSharingList;	// IMP=0x00000000000526de
- (void)_uploadPendingNicknameIfNecessary;	// IMP=0x0000000000052619
- (void)setPersonalNickname:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000005222f
- (void)_endNicknameUpload;	// IMP=0x0000000000051fbc
- (void)_beginNicknameUpload:(id)arg1;	// IMP=0x0000000000051eef
- (void)verifyTruncatedRecordIDMatchesPersonalNickname:(id)arg1 forChat:(id)arg2;	// IMP=0x0000000000051d94
- (void)deviceSignedOutOfiMessage;	// IMP=0x0000000000051cb3
- (void)_newDeviceDidSignIntoiMessageWithRetryCount:(unsigned long long)arg1;	// IMP=0x0000000000051ac1
- (void)_retryPeerRequestWithRetry:(unsigned long long)arg1;	// IMP=0x0000000000051a51
- (void)newDeviceDidSignIntoiMessage;	// IMP=0x0000000000051a3d
- (void)reuploadProfileIfNeeded;	// IMP=0x000000000005199e
- (void)_tryToReuploadPersonalNicknameWithRetryCount:(unsigned long long)arg1 reuploadVersion:(unsigned long long)arg2;	// IMP=0x00000000000517d5
- (unsigned long long)_reuploadLocalProfileVersionNumber;	// IMP=0x0000000000051741
- (void)_evaluateIfAccountHasMultiplePhoneNumbers;	// IMP=0x0000000000051567
- (void)aliasesDidChange:(_Bool)arg1;	// IMP=0x0000000000051443
- (void)evaluateAccountStateForFeatureEligibility;	// IMP=0x000000000005131f
- (void)_ckAccountChanged:(id)arg1;	// IMP=0x000000000005130d
- (_Bool)_nicknameFeatureEnabled;	// IMP=0x0000000000051303
- (id)defaults;	// IMP=0x00000000000512ea
- (void)dealloc;	// IMP=0x0000000000051216
- (id)init;	// IMP=0x0000000000050fca

@end

