//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDWorkoutDataSource-Protocol.h>
#import <HealthDaemon/HDWorkoutSessionStateController-Protocol.h>
#import <HealthDaemon/HKDataFlowLinkProcessor-Protocol.h>
#import <HealthDaemon/HKStateMachineDelegate-Protocol.h>

@class BKSProcessAssertion, HDHealthStoreClient, HDProfile, HDWorkoutManager, HDWorkoutSessionEntity, HDWorkoutSessionTaskServer, HKDataFlowLink, HKObserverSet, HKSource, HKStateMachine, HKWorkoutConfiguration, NSDate, NSString, NSUUID, _HKCurrentWorkoutSnapshot, _HKExpiringCompletionTimer;
@protocol HDWorkoutDataAccumulator, HDWorkoutSessionController, OS_dispatch_queue, OS_dispatch_source;

@interface HDWorkoutSessionServer : NSObject <HKDataFlowLinkProcessor, HKStateMachineDelegate, HDWorkoutSessionStateController, HDWorkoutDataSource>
{
    HDProfile *_profile;	// 8 = 0x8
    HDWorkoutManager *_workoutManager;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_persistenceQueue;	// 32 = 0x20
    HKDataFlowLink *_workoutDataFlowLink;	// 40 = 0x28
    HKObserverSet *_observers;	// 48 = 0x30
    id <HDWorkoutSessionController> _sessionController;	// 56 = 0x38
    _HKExpiringCompletionTimer *_invalidationTimer;	// 64 = 0x40
    BKSProcessAssertion *_invalidationAssertion;	// 72 = 0x48
    HDWorkoutSessionEntity *_persistentEntity;	// 80 = 0x50
    double _stopEventGenerationWaitInterval;	// 88 = 0x58
    HKStateMachine *_stateMachine;	// 96 = 0x60
    HKStateMachine *_targetStateMachine;	// 104 = 0x68
    _Bool _hasFailed;	// 112 = 0x70
    _HKCurrentWorkoutSnapshot *_currentWorkoutSnapshot;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_latestActivityUpdateTimer;	// 128 = 0x80
    NSUUID *_identifier;	// 136 = 0x88
    HKWorkoutConfiguration *_workoutConfiguration;	// 144 = 0x90
    NSString *_applicationIdentifier;	// 152 = 0x98
    HDWorkoutSessionTaskServer *_taskServer;	// 160 = 0xa0
    HDHealthStoreClient *_client;	// 168 = 0xa8
    NSString *_clientProcessBundleIdentifier;	// 176 = 0xb0
    HKSource *_clientSource;	// 184 = 0xb8
    NSDate *_startDate;	// 192 = 0xc0
    NSDate *_stopDate;	// 200 = 0xc8
}

+ (void)unitTest_setDefaultStopEventGenerationWaitInterval:(double)arg1;	// IMP=0x0000000000656950
+ (_Bool)finishAllWorkoutsExcludingSessions:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x000000000064fa67
+ (_Bool)finishAllWorkoutSessionsForClient:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x000000000064f374
+ (id)sessionIdentifierForRecoveryInProfile:(id)arg1 error:(id *)arg2;	// IMP=0x000000000064f353
+ (id)recoveredSessionServerWithProfile:(id)arg1 sessionUUID:(id)arg2 workoutManager:(id)arg3 error:(id *)arg4;	// IMP=0x000000000064f077
- (void).cxx_destruct;	// IMP=0x0000000000658013
@property(readonly, copy, nonatomic) NSDate *stopDate; // @synthesize stopDate=_stopDate;
@property(readonly, copy, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly, copy, nonatomic) HKSource *clientSource; // @synthesize clientSource=_clientSource;
@property(readonly, copy, nonatomic) NSString *clientProcessBundleIdentifier; // @synthesize clientProcessBundleIdentifier=_clientProcessBundleIdentifier;
@property(retain, nonatomic) HDHealthStoreClient *client; // @synthesize client=_client;
@property(nonatomic) __weak HDWorkoutSessionTaskServer *taskServer; // @synthesize taskServer=_taskServer;
@property(readonly, copy, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
@property(readonly, copy, nonatomic) HKWorkoutConfiguration *workoutConfiguration; // @synthesize workoutConfiguration=_workoutConfiguration;
@property(readonly, copy, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
- (void)unitTest_setCMWorkoutManager:(id)arg1;	// IMP=0x0000000000656c87
- (_Bool)unitTest_updateLatestActivityDate:(id)arg1;	// IMP=0x0000000000656a92
- (void)unitTest_generateWorkoutConfigurationUpdate:(id)arg1;	// IMP=0x00000000006569f0
- (void)unitTest_generateStopEvent;	// IMP=0x000000000065695e
- (void)unitTest_setStopEventGenerationWaitInterval:(double)arg1;	// IMP=0x00000000006568e2
- (void)unitTest_setSessionController:(id)arg1;	// IMP=0x00000000006568d1
- (_Bool)storeSessionControllerState:(id)arg1 forRecoveryIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000065640f
@property(readonly, nonatomic) id <HDWorkoutDataAccumulator> workoutDataAccumulator;
- (void)generateConfigurationUpdate:(id)arg1;	// IMP=0x0000000000656132
- (void)generateMetadata:(id)arg1;	// IMP=0x000000000065600c
- (void)generateError:(id)arg1;	// IMP=0x0000000000655f6c
- (void)generateEvent:(id)arg1;	// IMP=0x0000000000655bc2
- (void)finishAggregationWithDate:(id)arg1;	// IMP=0x0000000000655b04
- (void)finish;	// IMP=0x0000000000655af0
- (void)endHeartRateRecovery;	// IMP=0x0000000000655a38
- (void)autoResumeWithDate:(id)arg1;	// IMP=0x0000000000655980
- (void)autoPauseWithDate:(id)arg1;	// IMP=0x00000000006558c8
- (_Bool)resumeWithError:(id *)arg1;	// IMP=0x0000000000655864
- (_Bool)pauseWithError:(id *)arg1;	// IMP=0x0000000000655800
- (_Bool)endWithError:(id *)arg1;	// IMP=0x000000000065579c
- (_Bool)stopActivityWithDate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000655712
- (_Bool)startActivityWithDate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000655688
- (_Bool)prepareWithError:(id *)arg1;	// IMP=0x0000000000655624
- (void)didResignCurrentWithError:(id)arg1;	// IMP=0x00000000006554b0
- (void)didBecomeCurrent;	// IMP=0x00000000006553f8
- (_Bool)setTargetState:(long long)arg1 date:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000655088
- (void)stateMachine:(id)arg1 didTransition:(id)arg2 fromState:(id)arg3 toState:(id)arg4 date:(id)arg5 error:(id)arg6;	// IMP=0x000000000065468c
- (void)stateMachine:(id)arg1 didEnterState:(id)arg2 date:(id)arg3 error:(id)arg4;	// IMP=0x00000000006544a8
- (void)stateMachine:(id)arg1 willEnterState:(id)arg2 date:(id)arg3 error:(id)arg4;	// IMP=0x000000000065422b
- (void)stateMachine:(id)arg1 persistTransition:(id)arg2;	// IMP=0x0000000000653f00
- (void)removeObserver:(id)arg1;	// IMP=0x0000000000653eea
- (void)addObserver:(id)arg1 queue:(id)arg2;	// IMP=0x0000000000653ed4
- (void)workoutDataDestination:(id)arg1 didUpdateConfiguration:(id)arg2;	// IMP=0x0000000000653ece
- (void)workoutDataDestination:(id)arg1 requestsFinalDataFrom:(id)arg2 to:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000653c9b
- (void)workoutDataDestination:(id)arg1 didChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;	// IMP=0x0000000000653c95
- (void)workoutDataDestination:(id)arg1 requestsDataFrom:(id)arg2 to:(id)arg3;	// IMP=0x0000000000653abf
@property(readonly, copy) NSUUID *workoutDataProcessorUUID;
@property(readonly) HKDataFlowLink *workoutDataFlowLink;
- (id)taskServerConfigurationForRecoveryWithError:(id *)arg1;	// IMP=0x00000000006537f0
@property(readonly, nonatomic) _Bool shouldStopPreviousSession;
@property(readonly, nonatomic) _Bool isFirstParty;
- (id)currentWorkoutSnapshot;	// IMP=0x0000000000652f4d
- (void)setWorkoutDataAccumulator:(id)arg1;	// IMP=0x0000000000652dcf
- (void)setAssociatedWorkoutBuilderEntity:(id)arg1;	// IMP=0x0000000000652c12
@property(readonly, nonatomic) _Bool canBePaused;
@property(readonly, nonatomic) _Bool isActive;
@property(readonly, nonatomic) long long state;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0000000000651ce9
- (id)initWithProfile:(id)arg1 configuration:(id)arg2 sessionUUID:(id)arg3 workoutManager:(id)arg4;	// IMP=0x000000000064fdfd

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

