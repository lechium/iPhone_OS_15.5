//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface HDKeyValueEntity
{
}

+ (id)entityEncoderForProfile:(id)arg1 transaction:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5;	// IMP=0x00000000006105f5
+ (id)propertyForSyncProvenance;	// IMP=0x00000000000475cc
+ (id)uniquedColumns;	// IMP=0x0000000000610578
+ (const CDStruct_4c492439 *)columnDefinitionsWithCount:(unsigned long long *)arg1;	// IMP=0x0000000000610564
+ (id)databaseTable;	// IMP=0x0000000000610554
+ (id)_modDateForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000610125
+ (Class)_entityClassForKeyValueCategory:(long long)arg1;	// IMP=0x000000000000a836
+ (_Bool)_insertValues:(id)arg1 forKeys:(id)arg2 modificationDates:(id)arg3 domain:(id)arg4 category:(long long)arg5 provenance:(long long)arg6 updatePolicy:(long long)arg7 profile:(id)arg8 error:(id *)arg9;	// IMP=0x000000000000ab48
+ (const char *)_insertStatementKey;	// IMP=0x000000000060fe68
+ (_Bool)_insertCodableTimestampedKeyValuePairs:(id)arg1 domain:(id)arg2 category:(long long)arg3 provenance:(long long)arg4 updatePolicy:(long long)arg5 profile:(id)arg6 error:(id *)arg7;	// IMP=0x000000000060f929
+ (_Bool)_insertCodableTimestampedKeyValuePairs:(id)arg1 domain:(id)arg2 category:(long long)arg3 provenance:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000060f8fd
+ (_Bool)_insertCodableCategoryDomainDictionary:(id)arg1 provenance:(long long)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x000000000060f3fc
+ (_Bool)_insertKeysAndValues:(id)arg1 modificationDate:(id)arg2 domain:(id)arg3 category:(long long)arg4 provenance:(long long)arg5 updatePolicy:(long long)arg6 profile:(id)arg7 error:(id *)arg8;	// IMP=0x000000000000a94b
+ (_Bool)_setRawKeysAndValues:(id)arg1 domain:(id)arg2 category:(long long)arg3 database:(id)arg4 error:(id *)arg5;	// IMP=0x000000000060efab
+ (_Bool)_enumerateKeyValueEntitiesInCategory:(long long)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x000000000001bacc
+ (id)_rawValuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 database:(id)arg4 error:(id *)arg5;	// IMP=0x000000000002611e
+ (_Bool)setValueForAllKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x000000000060eba9
+ (_Bool)removeValuesForDomain:(id)arg1 category:(long long)arg2 keys:(id)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x000000000060e9bf
+ (_Bool)setValuesWithDictionary:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x0000000000076013
+ (_Bool)setString:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000060e80b
+ (_Bool)setNumber:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000003105c
+ (_Bool)setQuantity:(id)arg1 unit:(id)arg2 forKey:(id)arg3 domain:(id)arg4 category:(long long)arg5 profile:(id)arg6 error:(id *)arg7;	// IMP=0x000000000060e629
+ (_Bool)setDateComponents:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000060e441
+ (_Bool)setDate:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000001cca6
+ (_Bool)setData:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 error:(id *)arg6;	// IMP=0x000000000000a44c
+ (id)modificationDatesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x000000000060e3fa
+ (id)allValuesForDomain:(id)arg1 category:(long long)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000044c75
+ (_Bool)enumerateValuesForDomain:(id)arg1 category:(long long)arg2 keys:(id)arg3 profile:(id)arg4 error:(id *)arg5 usingBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000000443fc
+ (id)valuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x000000000060e34d
+ (id)stringForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000071bc3
+ (id)numberForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000024f35
+ (id)quantityForKey:(id)arg1 unit:(id)arg2 domain:(id)arg3 category:(long long)arg4 profile:(id)arg5 entity:(id *)arg6 error:(id *)arg7;	// IMP=0x0000000000072a97
+ (id)dateComponentsForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000072971
+ (id)dateForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x000000000001b2d0
+ (id)dataForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 profile:(id)arg4 entity:(id *)arg5 error:(id *)arg6;	// IMP=0x000000000006ef82
+ (long long)_deviceLocalCategory;	// IMP=0x00000000000265a2
+ (id)okemoZursObjectAnchorWithProfile:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001f5056
+ (_Bool)setOkemoZursObjectAnchor:(long long)arg1 database:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001f4f22
+ (id)retrieveDatabaseIdentifierFromDatabase:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000025efc
+ (_Bool)persistDatabaseIdentifier:(id)arg1 database:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001f4d72
+ (id)retrieveDatabaseIdentifierCreationDateFromProfile:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001f4ce8
+ (id)retrieveDatabaseIdentifierFromProfile:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000072510
+ (_Bool)persistDatabaseIdentifier:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001f4c55
+ (id)generateNewDatabaseIdentifier;	// IMP=0x00000000001f4bfe

@end

