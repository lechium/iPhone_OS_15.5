//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDataObserver-Protocol.h>
#import <HealthDaemon/HDDatabaseProtectedDataObserver-Protocol.h>
#import <HealthDaemon/HDTaskServer-Protocol.h>
#import <HealthDaemon/HKQueryServerInterface-Protocol.h>

@class HDDaemonTransaction, HDDataCollectionAssertion, HDDatabaseTransactionContextStatistics, HDHealthStoreClient, HDProfile, HDQueryServerClientState, HKObjectType, HKQuantityType, HKQueryServerConfiguration, HKSampleType, NSArray, NSDictionary, NSSet, NSString, NSUUID, _HKFilter;
@protocol HDQueryServerDelegate, HKQueryClientInterface><NSXPCProxyCreating, OS_dispatch_queue;

@interface HDQueryServer : NSObject <HDDatabaseProtectedDataObserver, HKQueryServerInterface, HDDataObserver, HDTaskServer>
{
    NSDictionary *_baseDataEntityEncodingOptions;	// 8 = 0x8
    HKQueryServerConfiguration *_configuration;	// 16 = 0x10
    CDUnknownBlockType _queryDidFinishHandler;	// 24 = 0x18
    NSArray *_dataObservationAssertions;	// 32 = 0x20
    HDDataCollectionAssertion *_dataCollectionAssertion;	// 40 = 0x28
    HDDaemonTransaction *_activationTransaction;	// 48 = 0x30
    HDDaemonTransaction *_runningTransaction;	// 56 = 0x38
    HDQueryServerClientState *_clientState;	// 64 = 0x40
    _Atomic int _queryState;	// 72 = 0x48
    _Bool _shouldTakeObservationAssertions;	// 76 = 0x4c
    _Bool _observingData;	// 77 = 0x4d
    _Bool _isCollectingData;	// 78 = 0x4e
    _Atomic _Bool _shouldFinish;	// 79 = 0x4f
    _Atomic _Bool _shouldPause;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_unitTestQueryQueue;	// 88 = 0x58
    HDDatabaseTransactionContextStatistics *_transactionStatistics;	// 96 = 0x60
    id <HDQueryServerDelegate> _delegate;	// 104 = 0x68
    NSUUID *_queryUUID;	// 112 = 0x70
    HDHealthStoreClient *_client;	// 120 = 0x78
    HDProfile *_profile;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_queryQueue;	// 136 = 0x88
    double _collectionInterval;	// 144 = 0x90
    HKObjectType *_objectType;	// 152 = 0x98
    long long _dataCount;	// 160 = 0xa0
    _HKFilter *_filter;	// 168 = 0xa8
    CDUnknownBlockType _unitTest_queryServerSetShouldPauseHandler;	// 176 = 0xb0
    CDUnknownBlockType _unitTest_queryServerWillChangeStateHandler;	// 184 = 0xb8
    CDUnknownBlockType _unitTest_queryServerDidFinishStateTransitionHandler;	// 192 = 0xc0
}

+ (_Bool)validateConfiguration:(id)arg1 client:(id)arg2 error:(id *)arg3;	// IMP=0x000000000044616b
+ (Class)configurationClass;	// IMP=0x0000000000446140
+ (id)requiredEntitlements;	// IMP=0x00000000004460c8
+ (id)taskIdentifier;	// IMP=0x000000000044609d
+ (_Bool)supportsAnchorBasedAuthorization;	// IMP=0x0000000000445b6c
+ (Class)queryClass;	// IMP=0x0000000000445b3c
+ (id)builtInQueryServerClasses;	// IMP=0x000000000040f7bb
- (void).cxx_destruct;	// IMP=0x0000000000041a91
@property(copy, nonatomic) CDUnknownBlockType unitTest_queryServerDidFinishStateTransitionHandler; // @synthesize unitTest_queryServerDidFinishStateTransitionHandler=_unitTest_queryServerDidFinishStateTransitionHandler;
@property(copy, nonatomic) CDUnknownBlockType unitTest_queryServerWillChangeStateHandler; // @synthesize unitTest_queryServerWillChangeStateHandler=_unitTest_queryServerWillChangeStateHandler;
@property(copy, nonatomic) CDUnknownBlockType unitTest_queryServerSetShouldPauseHandler; // @synthesize unitTest_queryServerSetShouldPauseHandler=_unitTest_queryServerSetShouldPauseHandler;
@property(readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property(nonatomic) long long dataCount; // @synthesize dataCount=_dataCount;
@property(copy, nonatomic) HDQueryServerClientState *clientState; // @synthesize clientState=_clientState;
@property(readonly, copy, nonatomic) HKObjectType *objectType; // @synthesize objectType=_objectType;
@property(nonatomic) double collectionInterval; // @synthesize collectionInterval=_collectionInterval;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queryQueue; // @synthesize queryQueue=_queryQueue;
@property(readonly, nonatomic) __weak HDProfile *profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) HDHealthStoreClient *client; // @synthesize client=_client;
@property(readonly, copy, nonatomic) HKQueryServerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, copy, nonatomic) NSUUID *queryUUID; // @synthesize queryUUID=_queryUUID;
@property(nonatomic) __weak id <HDQueryServerDelegate> delegate; // @synthesize delegate=_delegate;
- (double)_queue_logThresholdHardwareFactor;	// IMP=0x0000000000446b87
- (double)_queue_queryLogThreshold;	// IMP=0x0000000000446b37
- (void)_queue_logQueryWithDuration:(double)arg1 statistics:(id)arg2;	// IMP=0x00000000004466d7
@property(readonly, copy) NSString *description;
- (id)diagnosticDescription;	// IMP=0x0000000000446285
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;	// IMP=0x0000000000025187
- (void)samplesOfTypesWereRemoved:(id)arg1 anchor:(id)arg2;	// IMP=0x000000000044627d
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;	// IMP=0x0000000000446277
- (void)connectionInvalidated;	// IMP=0x00000000004461d9
- (id)remoteInterface;	// IMP=0x00000000004461a6
- (id)exportedInterface;	// IMP=0x0000000000446173
- (id)taskUUID;	// IMP=0x0000000000446132
- (_Bool)_shouldObserveDatabaseProtectedDataAvailability;	// IMP=0x0000000000446095
- (_Bool)_shouldExecuteWhenProtectedDataIsUnavailable;	// IMP=0x00000000000039ad
- (_Bool)validateConfiguration:(id *)arg1;	// IMP=0x0000000000445b80
- (void)_queue_didChangeStateFromPreviousState:(long long)arg1 state:(long long)arg2;	// IMP=0x0000000000445b7a
- (void)_queue_didDeactivate;	// IMP=0x0000000000445b74
- (void)_queue_stop;	// IMP=0x0000000000011a26
- (void)_queue_start;	// IMP=0x0000000000003e2c
- (_Bool)_shouldObserveAllSampleTypes;	// IMP=0x00000000000040ac
- (_Bool)_shouldListenForUpdates;	// IMP=0x0000000000003aec
- (id)newDataEntityEnumerator;	// IMP=0x0000000000028a83
- (id)readAuthorizationStatusForType:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002946c
- (CDUnknownBlockType)sampleAuthorizationFilter;	// IMP=0x0000000000028b21
- (void)onQueue:(CDUnknownBlockType)arg1;	// IMP=0x00000000000032c9
- (void)scheduleDatabaseAccessOnQueueWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000003651
@property(readonly, nonatomic) _Bool hasActiveDaemonTransaction;
@property(readonly, nonatomic) double activationTime;
@property(readonly) _Bool clientHasActiveWorkout;
@property(readonly, nonatomic) HKQuantityType *quantityType;
@property(readonly, nonatomic) HKSampleType *sampleType;
@property(readonly, copy, nonatomic) NSSet *objectTypes;
@property(readonly) long long queryState;
@property(readonly, nonatomic) id <HKQueryClientInterface><NSXPCProxyCreating> clientProxy;
- (void)remote_deactivateServer;	// IMP=0x0000000000041124
- (void)remote_startQueryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000004458bd
- (void)_queue_stopDataCollection;	// IMP=0x0000000000041436
- (void)_queue_startDataCollection;	// IMP=0x000000000003ce2a
- (_Bool)_shouldSuspendQuery;	// IMP=0x000000000003bdc2
- (_Bool)_shouldStopProcessingQuery;	// IMP=0x0000000000003867
- (void)clientStateDidChange:(id)arg1;	// IMP=0x0000000000444e46
- (void)clientStateWillChange:(id)arg1;	// IMP=0x0000000000444dec
- (void)schedulePause;	// IMP=0x0000000000444d54
- (void)deactivateServerWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000041139
- (void)setQueryDidFinishHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000003237
- (void)activateServerWithClientState:(id)arg1 error:(id)arg2;	// IMP=0x0000000000443f06
- (_Bool)prepareToActivateServerWithError:(id *)arg1;	// IMP=0x0000000000443d45
- (id)createDatabaseTransactionContext;	// IMP=0x0000000000443cdb
- (id)filteredSamplesForClientWithSamples:(id)arg1;	// IMP=0x0000000000443432
- (id)sanitizedSampleForQueryClient:(id)arg1;	// IMP=0x000000000044332c
- (void)dealloc;	// IMP=0x00000000000418d9
- (id)initWithUUID:(id)arg1 configuration:(id)arg2 client:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000442f40

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

