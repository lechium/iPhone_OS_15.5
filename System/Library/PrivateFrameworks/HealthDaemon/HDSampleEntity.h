//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface HDSampleEntity
{
}

+ (id)columnNamesForTimeOffset;	// IMP=0x00000000001ea4da
+ (id)entityEncoderForProfile:(id)arg1 transaction:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5;	// IMP=0x00000000001ea409
+ (CDUnknownBlockType)objectInsertionFilterForProfile:(id)arg1;	// IMP=0x0000000000017ba5
+ (long long)preferredEntityType;	// IMP=0x00000000001ea3f6
+ (_Bool)_validateEntityWithEnumerator:(id)arg1 error:(id *)arg2 validationErrorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000001ea0ae
+ (_Bool)validateEntitiesOfTypes:(id)arg1 profile:(id)arg2 error:(id *)arg3 validationErrorHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001e9e9f
+ (id)minimumSampleStartDateForProfile:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001e9bb8
+ (id)anySampleOfType:(id)arg1 profile:(id)arg2 encodingOptions:(id)arg3 predicate:(id)arg4 error:(id *)arg5;	// IMP=0x000000000001ce67
+ (id)sampleTypesForSamplesMatchingPredicate:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001e9872
+ (id)populatedSampleTypes:(id)arg1 inDateInterval:(id)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001e91b3
+ (id)dateIntervalsForSampleTypes:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001e89e7
+ (long long)countOfSamplesWithType:(id)arg1 profile:(id)arg2 matchingPredicate:(id)arg3 withError:(id *)arg4;	// IMP=0x0000000000055802
+ (id)sourceIDsForSamplesWithType:(id)arg1 profile:(id)arg2 predicate:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001e8907
+ (id)entityEnumeratorWithTypes:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001e879f
+ (id)entityEnumeratorWithType:(id)arg1 profile:(id)arg2;	// IMP=0x000000000001acd5
+ (id)samplesWithType:(id)arg1 profile:(id)arg2 encodingOptions:(id)arg3 predicate:(id)arg4 limit:(unsigned long long)arg5 anchor:(id *)arg6 error:(id *)arg7;	// IMP=0x000000000001a9a8
+ (_Bool)enumerateAssociatedObjectsForIdentifier:(long long)arg1 inDatabase:(id)arg2 error:(id *)arg3 associatedObjectHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001e84d5
+ (void)deleteSamplesWithPredicate:(id)arg1 limit:(unsigned long long)arg2 deletionContext:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001e7f9c
+ (void)deleteSamplesWithPredicate:(id)arg1 limit:(unsigned long long)arg2 generateDeletedObjects:(_Bool)arg3 transaction:(id)arg4 profile:(id)arg5 recursiveDeleteAuthorizationBlock:(CDUnknownBlockType)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x00000000001e7e78
+ (void)deleteSamplesWithTypes:(id)arg1 sourceEntities:(id)arg2 profile:(id)arg3 recursiveDeleteAuthorizationBlock:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000001e734d
+ (id)maxAnchorForSamplesWithType:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001e729d
+ (id)oldestSampleWithType:(id)arg1 profile:(id)arg2 encodingOptions:(id)arg3 predicate:(id)arg4 error:(id *)arg5;	// IMP=0x000000000007ade8
+ (id)mostRecentSampleWithType:(id)arg1 profile:(id)arg2 encodingOptions:(id)arg3 predicate:(id)arg4 anchor:(id *)arg5 error:(id *)arg6;	// IMP=0x000000000001d051
+ (id)orderingTermForSortDescriptor:(id)arg1;	// IMP=0x00000000001e6ed3
+ (_Bool)requiresSampleTypePredicate;	// IMP=0x0000000000038f87
+ (id)insertDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 persistentID:(id)arg4 error:(id *)arg5;	// IMP=0x000000000002f1a6
+ (Class)_entityClassForDeletion;	// IMP=0x00000000001e6e16
+ (Class)_deletedEntityClass;	// IMP=0x0000000000081778
+ (id)indices;	// IMP=0x00000000001e6be2
+ (const CDStruct_4c492439 *)columnDefinitionsWithCount:(unsigned long long *)arg1;	// IMP=0x00000000001e6bce
+ (id)databaseTable;	// IMP=0x000000000008029a

@end

