//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HealthDaemon/HDTaskServerObserver-Protocol.h>
#import <HealthDaemon/HDWorkoutDataAccumulator-Protocol.h>
#import <HealthDaemon/HDWorkoutDataDestination-Protocol.h>
#import <HealthDaemon/HKDataFlowLinkProcessor-Protocol.h>
#import <HealthDaemon/HKStateMachineDelegate-Protocol.h>
#import <HealthDaemon/HKWorkoutBuilderServerInterface-Protocol.h>

@class HDWorkoutBuilderEntity, HKDataFlowLink, HKObserverSet, HKStateMachine, HKWorkoutBuilderConfiguration, NSArray, NSDate, NSDateInterval, NSError, NSMutableDictionary, NSMutableSet, NSObject, NSSet, NSString, NSUUID;
@protocol HDWorkoutDataAccumulator, OS_dispatch_queue;

@interface HDWorkoutBuilderServer <HDWorkoutDataAccumulator, HKDataFlowLinkProcessor, HKStateMachineDelegate, HKWorkoutBuilderServerInterface, HDWorkoutDataDestination, HDTaskServerObserver>
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    _Atomic _Bool _invalidated;	// 12 = 0xc
    HDWorkoutBuilderEntity *_persistentEntity;	// 16 = 0x10
    NSError *_error;	// 24 = 0x18
    HKObserverSet *_dataAccumulatorObservers;	// 32 = 0x20
    HKObserverSet *_sampleObservers;	// 40 = 0x28
    NSSet *_quantityTypesIncludedWhilePaused;	// 48 = 0x30
    NSMutableDictionary *_statisticsCalculatorsByType;	// 56 = 0x38
    NSMutableDictionary *_sourceOrderProvidersByType;	// 64 = 0x40
    NSMutableDictionary *_statisticsDataSourcesByType;	// 72 = 0x48
    NSMutableSet *_quantityTypesRequiringCalculatorInvalidation;	// 80 = 0x50
    HKDataFlowLink *_workoutDataFlowLink;	// 88 = 0x58
    NSSet *_expectedDataSourceUUIDs;	// 96 = 0x60
    HKStateMachine *_stateMachine;	// 104 = 0x68
    long long _targetConstructionState;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_upstreamQueue;	// 120 = 0x78
    HKWorkoutBuilderConfiguration *_configuration;	// 128 = 0x80
    NSMutableDictionary *_metadata;	// 136 = 0x88
    NSArray *_workoutEvents;	// 144 = 0x90
    NSDate *_workoutStartDate;	// 152 = 0x98
    NSDate *_workoutEndDate;	// 160 = 0xa0
    NSDateInterval *_dataInterval;	// 168 = 0xa8
}

+ (_Bool)validateConfiguration:(id)arg1 client:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000601bd2
+ (Class)configurationClass;	// IMP=0x0000000000601bc1
+ (id)requiredEntitlements;	// IMP=0x0000000000601bb4
+ (id)taskIdentifier;	// IMP=0x0000000000601ba0
+ (_Bool)finishAllDetachedWorkoutBuildersExcludingSessions:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000600fc7
+ (_Bool)finishAllWorkoutBuildersForClient:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000600dcf
+ (void)finishDetachedBuilderForEntity:(id)arg1 sessionEndDate:(id)arg2 profile:(id)arg3;	// IMP=0x000000000060020a
+ (id)recoveredWorkoutBuilderConfigurationForClient:(id)arg1 sessionIdentifier:(id)arg2 builderIdentifierOut:(id *)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x00000000005ff900
- (void).cxx_destruct;	// IMP=0x000000000060deff
- (void)didInvalidateTaskServer:(id)arg1;	// IMP=0x000000000060db41
- (void)didCreateTaskServer:(id)arg1;	// IMP=0x000000000060d2bd
- (void)connectionInvalidated;	// IMP=0x000000000060cf8f
- (id)remoteInterface;	// IMP=0x000000000060cf76
- (id)exportedInterface;	// IMP=0x000000000060cf5d
- (_Bool)enumerateSamplesOfType:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000060ce54
- (void)removeSampleObserver:(id)arg1;	// IMP=0x000000000060ce37
- (void)addSampleObserver:(id)arg1;	// IMP=0x000000000060ce1a
- (id)currentMetadata;	// IMP=0x000000000060b02b
- (void)remote_setShouldCollectEvents:(_Bool)arg1;	// IMP=0x000000000060afb1
- (void)remote_setStatisticsComputationMethod:(long long)arg1 forType:(id)arg2;	// IMP=0x000000000060af51
- (void)remote_setStatisticsMergeStrategy:(unsigned long long)arg1 forType:(id)arg2;	// IMP=0x000000000060ac70
- (void)remote_updateDevice:(id)arg1;	// IMP=0x000000000060a91c
- (void)remote_recoverWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000060a708
- (void)remote_removeMetadata:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000060a17a
- (void)remote_addMetadata:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000609eb7
- (void)remote_addWorkoutEvents:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000609bf4
- (void)remote_addSamples:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000609720
- (void)remote_removeDataSourcesWithIdentifiers:(id)arg1;	// IMP=0x0000000000609277
- (void)remote_addDataSourcesWithIdentifiers:(id)arg1;	// IMP=0x0000000000608dcd
- (void)remote_setTargetConstructionState:(long long)arg1 startDate:(id)arg2 endDate:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000006084b9
- (void)stateMachine:(id)arg1 didTransition:(id)arg2 fromState:(id)arg3 toState:(id)arg4 date:(id)arg5 error:(id)arg6;	// IMP=0x0000000000607e8d
- (void)stateMachine:(id)arg1 didEnterState:(id)arg2 date:(id)arg3 error:(id)arg4;	// IMP=0x0000000000606ba4
- (id)startDate;	// IMP=0x0000000000606b60
- (id)currentEvents;	// IMP=0x0000000000606b15
- (void)removeDataAccumulationObserver:(id)arg1;	// IMP=0x0000000000606af8
- (void)addDataAccumulationObserver:(id)arg1;	// IMP=0x0000000000606862
- (void)updateWorkoutConfiguration:(id)arg1 dataSource:(id)arg2;	// IMP=0x000000000060642f
@property(readonly, nonatomic) id <HDWorkoutDataAccumulator> workoutDataAccumulator;
- (void)addMetadata:(id)arg1 dataSource:(id)arg2;	// IMP=0x000000000060615f
- (void)addWorkoutEvents:(id)arg1 dataSource:(id)arg2;	// IMP=0x0000000000605b02
- (void)addSamples:(id)arg1 dataSource:(id)arg2;	// IMP=0x0000000000604347
@property(readonly) unsigned long long workoutDataDestinationState;
@property(readonly, copy) NSUUID *workoutDataProcessorUUID;
@property(readonly) HKDataFlowLink *workoutDataFlowLink;
@property(readonly, copy) NSString *description;
- (void)connectionConfigured;	// IMP=0x00000000006018ad
- (id)initWithUUID:(id)arg1 configuration:(id)arg2 client:(id)arg3 delegate:(id)arg4;	// IMP=0x000000000060115f
@property(readonly) _Bool invalidated;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

