//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HealthDaemon/HDSeriesEntity-Protocol.h>

@class NSString;

@interface HDQuantitySampleSeriesEntity <HDSeriesEntity>
{
}

+ (_Bool)unitTesting_insertValues:(id)arg1 quantitySample:(id)arg2 seriesVersion:(long long)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003f6779
+ (long long)unitTesting_insertionEra;	// IMP=0x00000000003f676f
+ (void)unitTesting_updateInsertionEra;	// IMP=0x00000000003f6762
+ (_Bool)migrateDataFromDataStore:(const void *)arg1 to:(void *)arg2 transaction:(id)arg3 recoveryAnalytics:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003f58a4
+ (_Bool)migrateDataToSQLFromStore:(const void *)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003f50f8
+ (id)removeValues:(id)arg1 fromQuantitySeriesSample:(id)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003f4000
+ (id)mergeDataObject:(id)arg1 provenance:(id)arg2 profile:(id)arg3 transaction:(id)arg4 error:(id *)arg5 insertHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000003f2c81
+ (_Bool)supportsObjectMerging;	// IMP=0x00000000003f2c79
+ (_Bool)primitiveRemoveDatums:(id)arg1 HFDKey:(long long)arg2 deleteFromSQLite:(_Bool)arg3 transaction:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003f25be
+ (_Bool)deleteSeriesFromHFDWithKey:(long long)arg1 database:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003f24b7
+ (_Bool)deleteSeriesFromSQLiteWithKey:(long long)arg1 database:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003f238e
+ (_Bool)enumerateRawDataWithTransaction:(id)arg1 HFDKey:(long long)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003f16b8
+ (_Bool)enumerateDataWithTransaction:(id)arg1 HFDKey:(long long)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003f155b
+ (id)hasSeriesDataForHFDKey:(id)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003f06fb
+ (id)entityEncoderForProfile:(id)arg1 transaction:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5;	// IMP=0x00000000003f05f3
+ (id)additionalPredicateForEnumeration;	// IMP=0x00000000003f05d3
+ (_Bool)enumerateDataWithIdentifier:(id)arg1 transaction:(id)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003f03b8
+ (_Bool)enumerateDataWithIdentifier:(id)arg1 profile:(id)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003f020f
+ (_Bool)replaceExistingObject:(id)arg1 existingObjectID:(id)arg2 replacementObject:(id)arg3 replacementObjectID:(id)arg4 profile:(id)arg5 transaction:(id)arg6 error:(id *)arg7;	// IMP=0x00000000003ef93c
+ (_Bool)replaceObjectID:(id)arg1 replacementObjectID:(id)arg2 deleteOriginalHFDData:(_Bool)arg3 profile:(id)arg4 transaction:(id)arg5 error:(id *)arg6;	// IMP=0x00000000003ee93d
+ (_Bool)deleteSeriesWithID:(id)arg1 deleteHFDData:(_Bool)arg2 profile:(id)arg3 transaction:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003ee694
+ (id)quantitySampleSeriesEntitiesForAutoFreezeSQL;	// IMP=0x00000000003ed9f7
+ (id)quantitySampleSeriesEntitiesForAutoFreezeWithTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003ed789
+ (_Bool)performPostJournalMergeCleanupWithTransaction:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003ed146
+ (id)freezeSeriesWithIdentifier:(id)arg1 metadata:(id)arg2 endDate:(id)arg3 profile:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003ecfc0
+ (_Bool)primitiveInsertValues:(id)arg1 seriesVersion:(long long)arg2 HFDKey:(long long)arg3 insertToSQLite:(_Bool)arg4 database:(id)arg5 error:(id *)arg6;	// IMP=0x00000000003ec797
+ (CDUnknownBlockType)objectInsertionFilterForProfile:(id)arg1;	// IMP=0x00000000003ebf1c
+ (_Bool)insertValues:(id)arg1 series:(id)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003ebe43
+ (id)insertDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 persistentID:(id)arg4 error:(id *)arg5;	// IMP=0x00000000003ea977
+ (_Bool)validateEntityWithProfile:(id)arg1 error:(id *)arg2 validationErrorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000003ea96f
+ (_Bool)performSeriesWriteTransactionWithProfile:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000003ea761
+ (id)privateSubEntities;	// IMP=0x00000000003ea698
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00000000003ea546
+ (id)orderingTermForSortDescriptor:(id)arg1;	// IMP=0x00000000003ea1e0
+ (id)joinClausesForProperty:(id)arg1;	// IMP=0x00000000003e9f07
+ (Class)entityClassForEnumeration;	// IMP=0x00000000003e9ef6
+ (_Bool)isConcreteEntity;	// IMP=0x00000000003e9eee
+ (id)indices;	// IMP=0x00000000003e9d5b
+ (id)foreignKeys;	// IMP=0x00000000003e9c9c
+ (const CDStruct_4c492439 *)columnDefinitionsWithCount:(unsigned long long *)arg1;	// IMP=0x00000000003e9c41
+ (id)databaseTable;	// IMP=0x00000000003e9c34
- (_Bool)unitTesting_setInsertionEra:(long long)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003f6e81
- (void)willDeleteFromDatabase:(id)arg1;	// IMP=0x00000000003f1e48
- (_Bool)deleteFromDatabase:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003f1dc8
- (_Bool)enumerateDataWithTransaction:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000003f143a
- (_Bool)enumerateDataInInterval:(id)arg1 transaction:(id)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003f0ea9
- (_Bool)startTimeEndTimeCountForSeriesWithTransaction:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000003f0c1c
- (id)countForSeriesWithTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003f0af0
- (id)hasSeriesDataWithTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003f0a04
- (id)freezeWithEndDate:(id)arg1 transaction:(id)arg2 profile:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003edaa0
- (id)seriesSourceWithDatabase:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003ec51c
- (id)HFDKeyWithDatabase:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003ec46b
- (_Bool)insertValues:(id)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003ec09f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

