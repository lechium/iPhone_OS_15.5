//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <HealthDaemon/CBCentralManagerPrivateDelegate-Protocol.h>
#import <HealthDaemon/CBPairingAgentDelegate-Protocol.h>

@class CBCentralManager, CBUUID, HDDataCollectionManager, HDIdentifierTable, HDProfile, NSLock, NSMutableDictionary, NSSet, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface HDHealthServiceManager : NSObject <CBCentralManagerPrivateDelegate, CBPairingAgentDelegate>
{
    int _privacyNotificationToken;	// 8 = 0x8
    CBCentralManager *_central;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    HDDataCollectionManager *_dataCollectionManager;	// 32 = 0x20
    HDProfile *_profile;	// 40 = 0x28
    NSLock *_discoveryLock;	// 48 = 0x30
    HDIdentifierTable *_discoveryInfosTable;	// 56 = 0x38
    NSMutableDictionary *_discoveryInfosByServiceUUID;	// 64 = 0x40
    NSSet *_scanServiceUUIDs;	// 72 = 0x48
    CBUUID *_allServicesUUID;	// 80 = 0x50
    NSLock *_connectionLock;	// 88 = 0x58
    HDIdentifierTable *_connectionInfosTable;	// 96 = 0x60
    NSMutableDictionary *_connectionInfosByPeripheralUUID;	// 104 = 0x68
    NSMutableDictionary *_connectedPeripheralsByPeripheralUUID;	// 112 = 0x70
    NSMutableDictionary *_bluetoothUpdateHandlers;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_privateModeTimer;	// 128 = 0x80
}

- (void).cxx_destruct;	// IMP=0x00000000006c6e25
- (void)pairingAgent:(id)arg1 peerDidRequestPairing:(id)arg2 type:(long long)arg3 passkey:(id)arg4;	// IMP=0x00000000006c6957
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;	// IMP=0x00000000006c656c
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;	// IMP=0x00000000006c6025
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;	// IMP=0x00000000006c5cdd
- (unsigned long long)connectHealthService:(id)arg1 connectionOptions:(unsigned long long)arg2 sessionHandler:(CDUnknownBlockType)arg3 dataHandler:(CDUnknownBlockType)arg4 mfaSuccessHandler:(CDUnknownBlockType)arg5 autoPairData:(id)arg6 error:(id *)arg7;	// IMP=0x00000000006c5ad6
- (unsigned long long)connectHealthService:(id)arg1 sessionHandler:(CDUnknownBlockType)arg2 dataHandler:(CDUnknownBlockType)arg3 error:(id *)arg4;	// IMP=0x00000000006c592d
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;	// IMP=0x00000000006c4c5d
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;	// IMP=0x00000000006c49d8
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;	// IMP=0x00000000006c4753
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;	// IMP=0x00000000006c3d70
- (void)centralManager:(id)arg1 willRestoreState:(id)arg2;	// IMP=0x00000000006c3c55
- (void)centralManagerDidUpdateState:(id)arg1;	// IMP=0x00000000006c3360
- (void)writeCharacteristic:(id)arg1 onSession:(unsigned long long)arg2 expectResponse:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000006c2fd3
- (void)performOperation:(id)arg1 onSession:(unsigned long long)arg2 withParameters:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000006c2c36
- (void)getProperty:(id)arg1 forSession:(unsigned long long)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000006c2a2d
- (void)getSupportedPropertyNamesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000006c29d5
- (void)characteristicReceived:(id)arg1 device:(id)arg2;	// IMP=0x00000000006c21d4
- (id)_healthServiceForPeriperalID:(id)arg1 serviceType:(long long)arg2;	// IMP=0x00000000006c205a
- (void)releasePrivateMode;	// IMP=0x00000000006c085c
- (void)enablePrivateModeForSessionWithIdentifier:(id)arg1;	// IMP=0x00000000006c0575
- (void)resetOOBState;	// IMP=0x00000000006c02cd
- (id)retrieveOOBData:(id *)arg1;	// IMP=0x00000000006c00c7
- (id)allServicesWithError:(id *)arg1;	// IMP=0x00000000006c006b
- (void)servicesInvalidatedForDevice:(id)arg1 withError:(id)arg2;	// IMP=0x00000000006bf6b1
- (void)unpairHealthServiceIfNecessary:(id)arg1;	// IMP=0x00000000006bf298
- (void)disconnectHealthService:(unsigned long long)arg1;	// IMP=0x00000000006be764
- (unsigned long long)connectHealthService:(id)arg1 sessionHandler:(CDUnknownBlockType)arg2 dataHandler:(CDUnknownBlockType)arg3 characteristicsHandler:(CDUnknownBlockType)arg4 error:(id *)arg5;	// IMP=0x00000000006bccf9
- (void)discoveredCharacteristics:(id)arg1 forDevice:(id)arg2 service:(id)arg3;	// IMP=0x00000000006bc791
- (void)discoveredServices:(id)arg1 forPeripheral:(id)arg2;	// IMP=0x00000000006bc25e
- (void)stopDiscoveryWithIdentifier:(unsigned long long)arg1;	// IMP=0x00000000006bb887
- (unsigned long long)discoverHealthServicesWithType:(long long)arg1 timeout:(unsigned long long)arg2 alwaysNotify:(_Bool)arg3 handler:(CDUnknownBlockType)arg4 error:(id *)arg5;	// IMP=0x00000000006ba2f8
- (void)sendBluetoothStatusUpdatesForServer:(id)arg1 updateHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000006b9e1b
- (_Bool)setHealthUpdatesEnabled:(_Bool)arg1 fromDevice:(id)arg2 error:(id *)arg3;	// IMP=0x00000000006b96eb
- (_Bool)healthUpdatesEnabledFromDevice:(id)arg1 error:(id *)arg2;	// IMP=0x00000000006b91ec
- (id)reviewSavedHealthServiceSessionsWithError:(id *)arg1;	// IMP=0x00000000006b8b2a
- (void)dealloc;	// IMP=0x00000000006b8aec
- (id)initWithProfile:(id)arg1 centralManager:(id)arg2 queue:(id)arg3;	// IMP=0x00000000006b86ab
- (id)initWithProfile:(id)arg1;	// IMP=0x00000000006b8694

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

