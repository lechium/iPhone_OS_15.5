//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HealthDaemon/HDHealthEntityEncoding-Protocol.h>

@interface HDHealthEntity <HDHealthEntityEncoding>
{
}

+ (_Bool)performPostJournalMergeCleanupWithTransaction:(id)arg1 profile:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003bdd88
+ (_Bool)updateProperties:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4 bindingHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000003da6a
+ (id)insertOrReplaceEntity:(_Bool)arg1 healthDatabase:(id)arg2 properties:(id)arg3 error:(id *)arg4 bindingHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000003349f
+ (id)entityEncoderForProfile:(id)arg1 transaction:(id)arg2 purpose:(long long)arg3 encodingOptions:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5;	// IMP=0x00000000003bdabd
+ (id)transactionContextForWriting:(_Bool)arg1 baseContext:(id)arg2;	// IMP=0x00000000003bd964
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id *)arg3 block:(CDUnknownBlockType)arg4 inaccessibilityHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000003bd829
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3 inaccessibilityHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003bd6f6
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id *)arg3 block:(CDUnknownBlockType)arg4;	// IMP=0x00000000003bd5c8
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000003bd4cc
+ (_Bool)performReadTransactionWithHealthDatabase:(id)arg1 context:(id)arg2 error:(id *)arg3 block:(CDUnknownBlockType)arg4;	// IMP=0x00000000003bd3a1
+ (_Bool)performReadTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000003bd2a8
+ (id)propertyForSyncProvenance;	// IMP=0x00000000003bd298
+ (id)propertyForSyncAnchor;	// IMP=0x00000000003bd284
+ (id)createValidationError:(id)arg1 rowId:(id)arg2;	// IMP=0x00000000003bd07e
+ (_Bool)validateEntityWithProfile:(id)arg1 error:(id *)arg2 validationErrorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000003bd076
+ (id)defaultForeignKey;	// IMP=0x00000000003bd030
+ (id)databaseName;	// IMP=0x0000000000057f25
+ (id)protectedDatabaseName;	// IMP=0x0000000000008fd5
+ (long long)protectionClass;	// IMP=0x00000000003bcfb1
+ (id)predicateForSyncWithPredicate:(id)arg1 syncEntityClass:(Class)arg2 session:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4;	// IMP=0x000000000029257d
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 syncEntityClass:(Class)arg3 session:(id)arg4 orderingTerms:(id)arg5 limit:(unsigned long long)arg6 healthDatabase:(id)arg7 error:(id *)arg8;	// IMP=0x0000000000292002
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 session:(id)arg3 healthDatabase:(id)arg4 error:(id *)arg5;	// IMP=0x00000000000472cc
+ (_Bool)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 syncEntityClass:(Class)arg3 session:(id)arg4 syncAnchorRange:(struct HDSyncAnchorRange)arg5 orderingTerms:(id)arg6 limit:(unsigned long long)arg7 lastSyncAnchor:(long long *)arg8 healthDatabase:(id)arg9 error:(id *)arg10 block:(CDUnknownBlockType)arg11;	// IMP=0x00000000002917d2
+ (_Bool)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 session:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 limit:(unsigned long long)arg5 lastSyncAnchor:(long long *)arg6 healthDatabase:(id)arg7 error:(id *)arg8 block:(CDUnknownBlockType)arg9;	// IMP=0x0000000000047661
+ (id)maxRowIDForPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000031e52
+ (id)propertyValueForAnyWithProperty:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003be2c9
+ (id)anyWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x000000000007e841
+ (_Bool)deleteEntitiesWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003be16c
+ (_Bool)enumerateProperties:(id)arg1 withPredicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4 enumerationHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000033853
+ (long long)sizeOfDatabaseTableInHealthDatabase:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003bdffc
+ (id)countDistinctForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003bdde7
+ (long long)countOfObjectsWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000559af
+ (id)columnNamesForTimeOffset;	// IMP=0x00000000003bfd04
+ (id)updateSQLForTimeOffsetWithBindingCount:(unsigned long long *)arg1;	// IMP=0x00000000003bfa6c
- (_Bool)updateProperties:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3 bindingHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000003bdb5f
- (_Bool)willDeleteWithTransaction:(id)arg1 error:(id *)arg2;	// IMP=0x00000000003bf9d8
- (_Bool)setForeignKeyEntity:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003bf7db
- (id)foreignKeyEntity:(Class)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003bf529
- (_Bool)setNumber:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003bf342
- (id)numberForProperty:(id)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003bf0cd
- (_Bool)setString:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003beee6
- (id)stringForProperty:(id)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003bec71
- (_Bool)setDate:(id)arg1 forProperty:(id)arg2 transaction:(id)arg3 error:(id *)arg4;	// IMP=0x00000000003bea8a
- (id)dateForProperty:(id)arg1 transaction:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003be815
- (id)stringForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003be5e3
- (id)valueForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000813c7
- (_Bool)getValuesForProperties:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000000004d102

@end

