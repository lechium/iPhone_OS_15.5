//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HDAssertion, HDSyncPredicate, NSCalendar, NSDate, NSString, NSUUID;
@protocol HDSyncSessionDelegate, HDSyncStore;

@interface HDSyncSession : NSObject
{
    id <HDSyncSessionDelegate> _delegate;	// 8 = 0x8
    id <HDSyncStore> _syncStore;	// 16 = 0x10
    NSUUID *_sessionUUID;	// 24 = 0x18
    NSString *_shortSessionIdentifier;	// 32 = 0x20
    NSDate *_startDate;	// 40 = 0x28
    NSCalendar *_calendar;	// 48 = 0x30
    NSString *_reason;	// 56 = 0x38
    HDAssertion *_databaseAccessibilityAssertion;	// 64 = 0x40
    double _databaseAccessibilityTimeout;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x000000000001ed16
@property(nonatomic) double databaseAccessibilityTimeout; // @synthesize databaseAccessibilityTimeout=_databaseAccessibilityTimeout;
@property(retain, nonatomic) HDAssertion *databaseAccessibilityAssertion; // @synthesize databaseAccessibilityAssertion=_databaseAccessibilityAssertion;
@property(readonly, copy, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(readonly, copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(readonly, copy, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly, copy, nonatomic) NSString *shortSessionIdentifier; // @synthesize shortSessionIdentifier=_shortSessionIdentifier;
@property(readonly, copy, nonatomic) NSUUID *sessionUUID; // @synthesize sessionUUID=_sessionUUID;
@property(readonly, nonatomic) id <HDSyncStore> syncStore; // @synthesize syncStore=_syncStore;
@property(readonly, nonatomic) __weak id <HDSyncSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;	// IMP=0x00000000000469ed
- (long long)maxEncodedBytesPerChangeSetForSyncEntityClass:(Class)arg1;	// IMP=0x0000000000317298
- (long long)maxEncodedBytesPerCodableChangeForSyncEntityClass:(Class)arg1;	// IMP=0x0000000000317269
- (id)newChangeWithSyncEntityClass:(Class)arg1 version:(CDStruct_c12fb951)arg2;	// IMP=0x0000000000317242
- (_Bool)shouldOverrideCycleTrackingSymptomsForBackwardsCompatibilty;	// IMP=0x000000000031723a
- (id)excludedSyncStores;	// IMP=0x00000000000473dc
- (_Bool)requiresSyncForChangesFromAnchorRangeMap:(id)arg1;	// IMP=0x0000000000317232
- (void)syncDidFinishWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x000000000001e8f7
- (_Bool)transactionDidEndWithError:(id *)arg1;	// IMP=0x00000000003170ef
- (void)sendChanges:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000048147
- (void)willSyncAnchorRanges:(id)arg1;	// IMP=0x0000000000317036
- (_Bool)syncDidBeginWithProfile:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000046eae
- (void)syncWillBegin;	// IMP=0x000000000001e8b9
@property(readonly, copy, nonatomic) HDSyncPredicate *syncPredicate;
- (id)init;	// IMP=0x0000000000316ef5
- (id)initWithSyncStore:(id)arg1 reason:(id)arg2 delegate:(id)arg3;	// IMP=0x0000000000316cc4

@end

