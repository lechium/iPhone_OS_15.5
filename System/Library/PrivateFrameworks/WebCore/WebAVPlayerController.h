//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVPlayerController, AVValueTiming, NSArray, NSString, WebAVMediaSelectionOption;

@interface WebAVPlayerController : NSObject
{
    WebAVMediaSelectionOption *_currentAudioMediaSelectionOption;	// 8 = 0x8
    WebAVMediaSelectionOption *_currentLegibleMediaSelectionOption;	// 16 = 0x10
    _Bool _pictureInPictureInterrupted;	// 24 = 0x18
    _Bool _muted;	// 25 = 0x19
    struct WeakPtr<WebCore::PlaybackSessionModel, WTF::EmptyCounter> _delegate;	// 32 = 0x20
    struct WeakPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::EmptyCounter> _playbackSessionInterface;	// 40 = 0x28
    double _defaultPlaybackRate;	// 48 = 0x30
    double _rate;	// 56 = 0x38
    _Bool _liveStreamEventModePossible;	// 64 = 0x40
    _Bool _isScrubbing;	// 65 = 0x41
    _Bool _allowsPictureInPicture;	// 66 = 0x42
    _Bool _canScanBackward;	// 67 = 0x43
    _Bool _hasContentChapters;	// 68 = 0x44
    _Bool _canPlay;	// 69 = 0x45
    _Bool _canPause;	// 70 = 0x46
    _Bool _canTogglePlayback;	// 71 = 0x47
    _Bool _canSeek;	// 72 = 0x48
    _Bool _hasEnabledAudio;	// 73 = 0x49
    _Bool _hasEnabledVideo;	// 74 = 0x4a
    _Bool _hasVideo;	// 75 = 0x4b
    _Bool _playingOnSecondScreen;	// 76 = 0x4c
    _Bool _externalPlaybackActive;	// 77 = 0x4d
    _Bool _allowsExternalPlayback;	// 78 = 0x4e
    AVPlayerController *_playerControllerProxy;	// 80 = 0x50
    double _contentDuration;	// 88 = 0x58
    double _contentDurationWithinEndTimes;	// 96 = 0x60
    NSArray *_loadedTimeRanges;	// 104 = 0x68
    long long _status;	// 112 = 0x70
    AVValueTiming *_timing;	// 120 = 0x78
    NSArray *_seekableTimeRanges;	// 128 = 0x80
    NSArray *_audioMediaSelectionOptions;	// 136 = 0x88
    NSArray *_legibleMediaSelectionOptions;	// 144 = 0x90
    long long _externalPlaybackType;	// 152 = 0x98
    NSString *_externalPlaybackAirPlayDeviceLocalizedName;	// 160 = 0xa0
    double _seekableTimeRangesLastModifiedTime;	// 168 = 0xa8
    double _liveUpdateInterval;	// 176 = 0xb0
    AVValueTiming *_minTiming;	// 184 = 0xb8
    AVValueTiming *_maxTiming;	// 192 = 0xc0
    struct CGSize _contentDimensions;	// 200 = 0xc8
}

+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;	// IMP=0x0000000000c7b090
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;	// IMP=0x0000000000c7a5a0
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;	// IMP=0x0000000000c7a360
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;	// IMP=0x0000000000c7a310
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;	// IMP=0x0000000000c7a2b0
+ (id)keyPathsForValuesAffectingCanSeekToEnd;	// IMP=0x0000000000c7a1c0
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;	// IMP=0x0000000000c79ed0
+ (id)keyPathsForValuesAffectingCanScanForward;	// IMP=0x0000000000c79b90
+ (id)keyPathsForValuesAffectingMinTime;	// IMP=0x0000000000c79640
+ (id)keyPathsForValuesAffectingMaxTime;	// IMP=0x0000000000c79590
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;	// IMP=0x0000000000c794b0
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;	// IMP=0x0000000000c79440
+ (id)keyPathsForValuesAffectingPlaying;	// IMP=0x0000000000c791d0
- (id).cxx_construct;	// IMP=0x0000000000c7b590
- (void).cxx_destruct;	// IMP=0x0000000000c7b520
@property(retain, nonatomic) AVValueTiming *maxTiming; // @synthesize maxTiming=_maxTiming;
@property(retain, nonatomic) AVValueTiming *minTiming; // @synthesize minTiming=_minTiming;
@property double liveUpdateInterval; // @synthesize liveUpdateInterval=_liveUpdateInterval;
@property double seekableTimeRangesLastModifiedTime; // @synthesize seekableTimeRangesLastModifiedTime=_seekableTimeRangesLastModifiedTime;
@property _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(retain) NSString *externalPlaybackAirPlayDeviceLocalizedName; // @synthesize externalPlaybackAirPlayDeviceLocalizedName=_externalPlaybackAirPlayDeviceLocalizedName;
@property long long externalPlaybackType; // @synthesize externalPlaybackType=_externalPlaybackType;
@property(getter=isExternalPlaybackActive) _Bool externalPlaybackActive; // @synthesize externalPlaybackActive=_externalPlaybackActive;
@property(nonatomic, getter=isPlayingOnSecondScreen) _Bool playingOnSecondScreen; // @synthesize playingOnSecondScreen=_playingOnSecondScreen;
@property(retain) NSArray *legibleMediaSelectionOptions; // @synthesize legibleMediaSelectionOptions=_legibleMediaSelectionOptions;
@property(retain) NSArray *audioMediaSelectionOptions; // @synthesize audioMediaSelectionOptions=_audioMediaSelectionOptions;
@property(retain) NSArray *seekableTimeRanges; // @synthesize seekableTimeRanges=_seekableTimeRanges;
@property(retain) AVValueTiming *timing; // @synthesize timing=_timing;
@property long long status; // @synthesize status=_status;
@property(retain) NSArray *loadedTimeRanges; // @synthesize loadedTimeRanges=_loadedTimeRanges;
@property double contentDurationWithinEndTimes; // @synthesize contentDurationWithinEndTimes=_contentDurationWithinEndTimes;
@property _Bool hasVideo; // @synthesize hasVideo=_hasVideo;
@property _Bool hasEnabledVideo; // @synthesize hasEnabledVideo=_hasEnabledVideo;
@property _Bool hasEnabledAudio; // @synthesize hasEnabledAudio=_hasEnabledAudio;
@property struct CGSize contentDimensions; // @synthesize contentDimensions=_contentDimensions;
@property double contentDuration; // @synthesize contentDuration=_contentDuration;
@property _Bool canSeek; // @synthesize canSeek=_canSeek;
@property _Bool canTogglePlayback; // @synthesize canTogglePlayback=_canTogglePlayback;
@property _Bool canPause; // @synthesize canPause=_canPause;
@property _Bool canPlay; // @synthesize canPlay=_canPlay;
@property(readonly) _Bool hasContentChapters; // @synthesize hasContentChapters=_hasContentChapters;
@property _Bool canScanBackward; // @synthesize canScanBackward=_canScanBackward;
@property(retain) AVPlayerController *playerControllerProxy; // @synthesize playerControllerProxy=_playerControllerProxy;
- (_Bool)hasSeekableLiveStreamingContent;	// IMP=0x0000000000c7af50
- (void)updateMinMaxTiming;	// IMP=0x0000000000c7ab50
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000c7a800
- (void)volumeChanged:(double)arg1;	// IMP=0x0000000000c7a7b0
@property double volume;
- (void)toggleMuted:(id)arg1;	// IMP=0x0000000000c7a6c0
@property(getter=isMuted) _Bool muted;
@property(getter=isPictureInPictureInterrupted) _Bool pictureInPictureInterrupted;
@property(readonly, getter=isPictureInPicturePossible) _Bool pictureInPicturePossible;
- (void)setAllowsPictureInPicture:(_Bool)arg1;	// IMP=0x0000000000c7a5d0
@property(readonly, getter=isPlayingOnExternalScreen) _Bool playingOnExternalScreen;
@property(retain) WebAVMediaSelectionOption *currentLegibleMediaSelectionOption;
@property(retain) WebAVMediaSelectionOption *currentAudioMediaSelectionOption;
@property(readonly) _Bool hasLegibleMediaSelectionOptions;
@property(readonly) _Bool hasAudioMediaSelectionOptions;
@property(readonly) _Bool hasMediaSelectionOptions;
@property(readonly) _Bool canSeekFrameForward;
@property(readonly) _Bool canSeekFrameBackward;
- (void)seekChapterForward:(id)arg1;	// IMP=0x0000000000c7a230
- (void)seekToEnd:(id)arg1;	// IMP=0x0000000000c7a1e0
@property(readonly) _Bool canSeekToEnd;
- (void)seekChapterBackward:(id)arg1;	// IMP=0x0000000000c79f40
- (void)seekToBeginning:(id)arg1;	// IMP=0x0000000000c79ef0
@property(readonly) _Bool canSeekToBeginning;
- (void)endScanningBackward:(id)arg1;	// IMP=0x0000000000c79c70
- (void)beginScanningBackward:(id)arg1;	// IMP=0x0000000000c79c30
- (void)endScanningForward:(id)arg1;	// IMP=0x0000000000c79bf0
- (void)beginScanningForward:(id)arg1;	// IMP=0x0000000000c79bb0
@property(readonly) _Bool canScanForward;
@property(readonly) _Bool isScrubbing;
- (void)gotoEndOfSeekableRanges:(id)arg1;	// IMP=0x0000000000c79920
- (void)skipBackwardThirtySeconds:(id)arg1;	// IMP=0x0000000000c79670
@property(readonly) double minTime;
@property(readonly) double maxTime;
- (_Bool)hasLiveStreamingContent;	// IMP=0x0000000000c79460
- (void)setCurrentTimeWithinEndTimes:(double)arg1;	// IMP=0x0000000000c79420
- (double)currentTimeWithinEndTimes;	// IMP=0x0000000000c793f0
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x0000000000c79380
- (void)seekByTimeInterval:(double)arg1;	// IMP=0x0000000000c79360
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x0000000000c792f0
- (void)seekToTime:(double)arg1;	// IMP=0x0000000000c79290
- (void)endScrubbing:(id)arg1;	// IMP=0x0000000000c79240
- (void)beginScrubbing:(id)arg1;	// IMP=0x0000000000c791f0
- (void)setRate:(double)arg1 fromJavaScript:(_Bool)arg2;	// IMP=0x0000000000c790d0
@property double rate;
- (void)setDefaultPlaybackRate:(double)arg1 fromJavaScript:(_Bool)arg2;	// IMP=0x0000000000c78fa0
@property double defaultPlaybackRate;
@property void *playbackSessionInterface;
@property void *delegate;
@property(getter=isPlaying) _Bool playing;
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;	// IMP=0x0000000000c78d40
- (void)togglePlayback:(id)arg1;	// IMP=0x0000000000c78cd0
- (void)pause:(id)arg1;	// IMP=0x0000000000c78c90
- (void)play:(id)arg1;	// IMP=0x0000000000c78c50
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x0000000000c78c30
- (id)player;	// IMP=0x0000000000c78c20
- (void)dealloc;	// IMP=0x0000000000c78b20
- (id)init;	// IMP=0x0000000000c78940

@end

