//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AXCoreUtilities/AXBaseSettings.h>

@class AXVoiceOverActivity, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSNumber, NSOrderedSet, NSSet, NSString, NSURL, NSUUID;

@interface AXSettings : AXBaseSettings
{
    NSMutableSet *_migratedSwitchControlMenuItemsPreferenceKeys;	// 8 = 0x8
    NSMutableDictionary *_unarchivedVoiceCache;	// 16 = 0x10
    _Bool _assistiveTouchInternalOnlyHiddenNubbitModeEnabled;	// 24 = 0x18
    _Bool _writeAXLogsToFile;	// 25 = 0x19
    _Bool _voiceOverVerbositySpeakCustomActionsHint;	// 26 = 0x1a
    _Bool _touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass;	// 27 = 0x1b
    float _reduceWhitePointLevel;	// 28 = 0x1c
    NSArray *_switchControlCombinedTopLevelMenuItems;	// 32 = 0x20
    double _voiceOverHapticIntensity;	// 40 = 0x28
    double _lastPlatformSwitchTimeResetCount;	// 48 = 0x30
    double _lastGuidedAccessTimeLimitResetCount;	// 56 = 0x38
    double _lastGuidedAccessTimeResetCount;	// 64 = 0x40
    double _lastHearingAidControlPanelTimeResetCount;	// 72 = 0x48
    double _lastHearingAidHandoffTimeResetCount;	// 80 = 0x50
}

+ (id)sharedInstance;	// IMP=0x000000000008adba
- (void).cxx_destruct;	// IMP=0x000000000009f1d5
@property(nonatomic) double lastHearingAidHandoffTimeResetCount; // @synthesize lastHearingAidHandoffTimeResetCount=_lastHearingAidHandoffTimeResetCount;
@property(nonatomic) double lastHearingAidControlPanelTimeResetCount; // @synthesize lastHearingAidControlPanelTimeResetCount=_lastHearingAidControlPanelTimeResetCount;
@property(nonatomic) double lastGuidedAccessTimeResetCount; // @synthesize lastGuidedAccessTimeResetCount=_lastGuidedAccessTimeResetCount;
@property(nonatomic) double lastGuidedAccessTimeLimitResetCount; // @synthesize lastGuidedAccessTimeLimitResetCount=_lastGuidedAccessTimeLimitResetCount;
@property(nonatomic) double lastPlatformSwitchTimeResetCount; // @synthesize lastPlatformSwitchTimeResetCount=_lastPlatformSwitchTimeResetCount;
@property(nonatomic) float reduceWhitePointLevel; // @synthesize reduceWhitePointLevel=_reduceWhitePointLevel;
@property(nonatomic) _Bool touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass; // @synthesize touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass=_touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass;
@property(nonatomic) _Bool voiceOverVerbositySpeakCustomActionsHint; // @synthesize voiceOverVerbositySpeakCustomActionsHint=_voiceOverVerbositySpeakCustomActionsHint;
@property(nonatomic) double voiceOverHapticIntensity; // @synthesize voiceOverHapticIntensity=_voiceOverHapticIntensity;
@property(nonatomic) _Bool writeAXLogsToFile; // @synthesize writeAXLogsToFile=_writeAXLogsToFile;
@property(nonatomic) _Bool assistiveTouchInternalOnlyHiddenNubbitModeEnabled; // @synthesize assistiveTouchInternalOnlyHiddenNubbitModeEnabled=_assistiveTouchInternalOnlyHiddenNubbitModeEnabled;
@property(retain, nonatomic) NSArray *switchControlCombinedTopLevelMenuItems; // @synthesize switchControlCombinedTopLevelMenuItems=_switchControlCombinedTopLevelMenuItems;
@property(nonatomic) double soundActionsLastModelAccess;
@property(nonatomic) double audiogramIngestionLastModelAccess;
@property(nonatomic) _Bool callAudioRoutingAutoAnswerEnabled;
@property(nonatomic) double callAudioRoutingAutoAnswerDelay;
- (void)aggregatePerAppSettingsStatistics;	// IMP=0x000000000009e972
- (void)removeCustomizedAppID:(id)arg1;	// IMP=0x000000000009e7d3
- (void)addCustomizedAppID:(id)arg1;	// IMP=0x000000000009e6d5
@property(copy, nonatomic) NSDictionary *perAppSettingsStats;
@property(copy, nonatomic) NSArray *perAppSettingsCustomizedAppIDs;
@property(nonatomic) _Bool reachabilityEnabled;
@property(nonatomic) _Bool didResetD22Preferences;
@property(nonatomic) long long guidedAccessUsageCount;
@property(nonatomic) long long voiceOverBSIUsageCount;
@property(nonatomic) long long brokenHomeButtonCount;
@property(nonatomic) long long guidedAccessTimeLimitsUsageCount;
@property(nonatomic) long long characterVoicesUsageCount;
@property(nonatomic) long long hearingAidControlPanelCount;
@property(nonatomic) long long hearingAidHandOffCount;
@property(nonatomic) long long switchControlPlatformSwitchedCount;
@property(nonatomic) long long tapticTimeUsageCount;
@property(nonatomic) long long magnifierUsageCount;
@property(copy, nonatomic) NSDictionary *assistiveTouchUsageCount;
@property(nonatomic) double lastAssistiveTouchTimeResetCount;
@property(nonatomic) double lastCharacterVoiceTimeResetCount;
- (void)setlastPlatformSwitchTimeResetCount:(double)arg1;	// IMP=0x000000000009dead
- (void)setlastGuidedAccessTimeLimitResetCount:(double)arg1;	// IMP=0x000000000009de3f
- (void)setlastGuidedAccessTimeResetCount:(double)arg1;	// IMP=0x000000000009ddd1
@property(nonatomic) double lastTapticTimeResetCount;
@property(nonatomic) double lastBrailleScreenInputTimeResetCount;
- (void)setlastHearingAidControlPanelTimeResetCount:(double)arg1;	// IMP=0x000000000009dc87
- (void)setlastHearingAidHandoffTimeResetCount:(double)arg1;	// IMP=0x000000000009dc19
@property(nonatomic) double lastSmartInvertColorsEnablement;
@property(nonatomic) double lastMagnifierResetCount;
@property(nonatomic) _Bool shouldLimitDisplayRefreshRate;
@property(retain, nonatomic) NSString *medicalPreamble;
@property(nonatomic) _Bool shouldTTYMedicalPreamble;
@property(nonatomic) _Bool shouldSpeakMedicalPreamble;
@property(nonatomic) _Bool shouldFlashForAlertInSilentMode;
@property(nonatomic) _Bool localizationQACaptionMode;
@property(nonatomic) _Bool localizationQACaptionShowLocalizedString;
@property(nonatomic) _Bool localizationQACaptionShowUSString;
@property(nonatomic) _Bool localizationQACaptionShowFilePath;
@property(retain, nonatomic) NSURL *alexLocalAssetURL;
@property(nonatomic) _Bool voiceOverSceneDescriptionsEnabled;
@property(nonatomic) long long voiceOverNavigationStyle;
@property(copy, nonatomic) NSArray *imageCaptioningDisabledApps;
@property(copy, nonatomic) NSDictionary *voiceOverDirectTouchEnabledApps;
@property(nonatomic) long long voiceOverSpeakSecondsEncoding;
- (id)gizmoGetWatchFaceAutoSpeakPreferences;	// IMP=0x000000000009d52d
- (_Bool)gizmoGetAutoSpeakEnabledForComplication:(id)arg1 slot:(id)arg2 face:(id)arg3;	// IMP=0x000000000009d43f
- (void)gizmoSetAutoSpeakEnabledForComplication:(id)arg1 slot:(id)arg2 face:(id)arg3 toggle:(_Bool)arg4;	// IMP=0x000000000009d1ff
@property(nonatomic) _Bool gizmoApplicationAccessibilityEnabled;
@property(nonatomic) _Bool appValidationTestingMode;
@property(nonatomic) _Bool fullKeyboardAccessShouldShowDebugKeyCommandsView;
@property(nonatomic) _Bool fullKeyboardAccessShouldShowTextEditingModeInstructions;
@property(nonatomic) long long fullKeyboardAccessFocusRingColor;
@property(nonatomic) _Bool fullKeyboardAccessFocusRingHighContrastEnabled;
@property(nonatomic) _Bool fullKeyboardAccessLargeFocusRingEnabled;
@property(nonatomic) _Bool fullKeyboardAccessFocusRingTimeoutEnabled;
@property(nonatomic) double fullKeyboardAccessFocusRingTimeout;
@property(retain, nonatomic) NSData *fullKeyboardAccessCommandMapData;
@property(nonatomic) double magnifierBrightness;
@property(nonatomic) double magnifierContrast;
@property(nonatomic) _Bool magnifierFilterInverted;
@property(nonatomic) unsigned long long magnifierFilterSetIdentifier;
@property(nonatomic) double magnifierZoomLevel;
@property(nonatomic) _Bool magnifierShouldUseVideoStabilization;
@property(nonatomic) _Bool magnifierShouldAdjustFiltersForAmbientLight;
- (void)setMagnifierEnabled:(_Bool)arg1 changeTripleClickMenu:(_Bool)arg2;	// IMP=0x000000000009c943
@property(nonatomic) _Bool magnifierEnabled;
@property(nonatomic) _Bool stickyKeysBeepEnabled;
@property(nonatomic) _Bool stickyKeysShiftToggleEnabled;
@property(nonatomic) _Bool stickyKeysEnabled;
@property(nonatomic) double touchAccommodationsTapActivationTimeout;
@property(nonatomic) long long touchAccommodationsTapActivationMethod;
@property(nonatomic) double touchAccommodationsIgnoreRepeatDuration;
@property(nonatomic) _Bool touchAccommodationsIgnoreRepeatEnabled;
@property(readonly, nonatomic) long long touchAccommodationsHoldDurationSwipeGestureSensitivity;
@property(nonatomic) double touchAccommodationsSwipeGestureMinimumDistance;
@property(nonatomic) _Bool touchAccommodationsAllowsSwipeGesturesToBypass;
@property(nonatomic) double touchAccommodationsHoldDuration;
@property(nonatomic) _Bool touchAccommodationsHoldDurationEnabled;
@property(nonatomic) _Bool touchAccommodationsUsageConfirmed;
@property(nonatomic) _Bool touchAccommodationsTripleClickConfirmed;
@property(readonly, nonatomic) _Bool touchAccommodationsAreConfigured;
@property(nonatomic) _Bool touchAccommodationsEnabled;
- (void)_updateTouchAccommodationsTripleClickSetting;	// IMP=0x000000000009c055
@property(nonatomic) _Bool shouldStreamToRightAid;
@property(nonatomic) double leftRightBalanceValue;
@property(nonatomic) _Bool leftRightBalanceEnabled;
@property(nonatomic) _Bool shouldStreamToLeftAid;
@property(nonatomic) _Bool allowHearingAidControlOnLockScreen;
@property(nonatomic) _Bool independentHearingAidSettings;
@property(copy, nonatomic) NSArray *voiceOverQuickSettingsItems;
- (void)voiceOverResetSoundAndHapticPreferences;	// IMP=0x000000000009bc8d
- (void)voiceOverSetHapticEnabled:(_Bool)arg1 forEvent:(id)arg2;	// IMP=0x000000000009bc05
- (id)voiceOverHapticEnabledForEvent:(id)arg1;	// IMP=0x000000000009bbe9
- (void)voiceOverSetSoundEnabled:(_Bool)arg1 forEvent:(id)arg2;	// IMP=0x000000000009bb61
- (id)voiceOverSoundEnabledForEvent:(id)arg1;	// IMP=0x000000000009bb45
- (void)_voiceOverSetSoundOrHapticValue:(id)arg1 forPreference:(id)arg2 outputEvent:(id)arg3;	// IMP=0x000000000009b9c6
- (id)_voiceOverSoundOrHapticValueForPreference:(id)arg1 outputEvent:(id)arg2;	// IMP=0x000000000009b8f2
@property(retain, nonatomic) NSDictionary *voiceOverSoundAndHapticPreferences;
@property(nonatomic) _Bool voiceOverAutomaticButtonLabels;
@property(nonatomic) long long voiceOverNumberFeedback;
@property(nonatomic) long long voiceOverNeuralElementFeedback;
@property(nonatomic) _Bool voiceOverShouldSpeakDiscoveredText;
@property(nonatomic) _Bool voiceOverTouchBrailleShowGeneralStatus;
- (void)setPreferredBrailleTableIdentifier:(id)arg1 forKeyboardLanguage:(id)arg2 keyboardLayout:(id)arg3;	// IMP=0x000000000009b515
- (id)preferredBrailleTableIdentifierForKeyboardLanguage:(id)arg1 keyboardLayout:(id)arg2;	// IMP=0x000000000009b40e
- (void)setVoiceOverTouchPreferredBrailleTableIdentifiers:(id)arg1;	// IMP=0x000000000009b3f5
- (id)voiceOverTouchPreferredBrailleTableIdentifiers;	// IMP=0x000000000009b3ce
@property(nonatomic) _Bool voiceOverTouchUpdateBrailleWithoutConnectedDisplay;
@property(nonatomic) _Bool voiceOverTouchBrailleShowTextStyleStatus;
@property(nonatomic) _Bool voiceOverTouchBrailleShouldReverseDots;
@property(nonatomic) long long voiceOverTapticChimesSoundType;
@property(nonatomic) long long voiceOverTapticChimesFrequencyEncoding;
@property(nonatomic) long long voiceOverTapticChimesAvailability;
@property(nonatomic) _Bool tapticTimeInternalFlashScreenEnabled;
@property(nonatomic) _Bool voiceOverTapticChimesEnabled;
@property(nonatomic) float voiceOverTapticTimeSpeed;
@property(nonatomic) long long voiceOverTapticTimeEncoding;
@property(nonatomic) _Bool voiceOverTapticTimeMode;
@property(readonly, nonatomic) _Bool tapticTimeIsAvailable;
@property(nonatomic) long long tapToSpeakTimeAvailability;
@property(nonatomic) _Bool tapToSpeakTimeEnabled;
- (void)_setAudioHardwareChannelLayout:(id)arg1;	// IMP=0x000000000009ad32
- (id)_audioHardwareChannelLayout;	// IMP=0x000000000009ad19
@property(nonatomic) long long voiceOverNavigationDirectionMode;
@property(nonatomic) double voiceOverDoubleTapInterval;
@property(nonatomic) double voiceOverBrailleKeyDebounceTimeout;
@property(nonatomic) double voiceOverBrailleAlertDisplayDuration;
@property(nonatomic) _Bool voiceOverBrailleAlertsEnabled;
@property(nonatomic) _Bool voiceOverTouchBrailleGesturesDidPlayCalibrationHint;
@property(nonatomic) long long voiceOverTouchBrailleGesturesLockedTypingMode;
@property(nonatomic) long long voiceOverTouchBrailleGesturesLockedOrientation;
@property(nonatomic) _Bool voiceOverTouchBrailleGesturesShouldUseLockedConfiguration;
@property(nonatomic) _Bool voiceOverShouldOutputToHearingAid;
- (float)voiceOverSpeakingRateForLanguage:(id)arg1;	// IMP=0x000000000009a788
- (void)setVoiceOverSpeakingRate:(float)arg1 forLanguage:(id)arg2;	// IMP=0x000000000009a67a
- (id)_voiceOverTouchSpeakingRateLanguages;	// IMP=0x000000000009a661
- (id)voiceOverAlternativeVoiceIdentifier:(id)arg1;	// IMP=0x000000000009a5ad
- (void)setVoiceOverAlternativeVoiceIdentifier:(id)arg1 forLanguage:(id)arg2;	// IMP=0x000000000009a4a7
- (void)clearVoicePrefersCompactSettings;	// IMP=0x000000000009a48c
- (void)configureZoomForLoginSession;	// IMP=0x000000000009a442
- (void)addRotorOptionsForLoginSession;	// IMP=0x000000000009a099
@property(nonatomic) _Bool switchControlUserDidReadUSBRestrictedModeAlert;
@property(nonatomic) _Bool voiceOverUserDidReadUSBRestrictedModeAlert;
@property(nonatomic) _Bool switchControlShouldDisallowUSBRestrictedMode;
@property(nonatomic) _Bool voiceOverShouldDisallowUSBRestrictedMode;
@property(retain, nonatomic) NSData *voiceOverCustomCommandProfile;
@property(nonatomic) long long voiceOverDescribedMedia;
@property(nonatomic) _Bool voiceOverExploreFocusAffectsNativeFocus;
@property(nonatomic) _Bool voiceOverPrefersFollowFocusNavigationStyle;
@property(nonatomic) long long voiceOverPreferredTVInteractionMode;
@property(nonatomic) _Bool voiceOverSilenceAnnouncements;
@property(nonatomic) _Bool voiceOverSpeakNonfocusableElementsAfterDelay;
@property(nonatomic) _Bool voiceOverShowSoftwareKeyboardWithBraille;
@property(nonatomic) _Bool voiceOverBrailleGradeTwoAutoTranslateEnabled;
@property(retain, nonatomic) NSNumber *voiceOverHandwritingWasNativeAutocorrectEnabled;
@property(nonatomic) _Bool voiceOverAlwaysUseNemethCodeForMathEnabled;
@property(copy, nonatomic) NSArray *voiceOverBrailleLanguageRotorItems;
@property(copy, nonatomic) NSString *voiceOverBrailleTableIdentifier;
- (_Bool)anyUserPreferredLangaugeIsRTL;	// IMP=0x0000000000099846
- (void)_localeChange:(id)arg1;	// IMP=0x00000000000997d1
@property(nonatomic) _Bool voiceOverEditAppsActionEnabled;
@property(nonatomic) _Bool voiceOverSpeakActionConfirmation;
@property(copy, nonatomic) NSArray *voiceOverRotorItems;
@property(nonatomic) _Bool voiceOverSpeakNotificationsEnabled;
@property(nonatomic) _Bool voiceOverSpeakingRateInRotorEnabled;
@property(nonatomic) _Bool voiceOverHapticsEnabled;
@property(nonatomic) _Bool voiceOverAdjustSoundVolumeIndependently;
@property(nonatomic) double voiceOverSoundVolume;
@property(nonatomic) _Bool voiceOverVerbosityEmojiSuffixEnabled;
@property(nonatomic) long long voiceOverVerbosityEmojiFeedback;
@property(nonatomic) _Bool voiceOverLanguageDetectionEnabled;
@property(nonatomic) _Bool voiceOverSoundEffectsEnabled;
@property(nonatomic) _Bool voiceOverPitchChangeEnabled;
@property(nonatomic) double voiceOverPitch;
@property(nonatomic) _Bool voiceOverAudioFollowsHDMIAudio;
@property(nonatomic) _Bool voiceOverAudioDuckingEnabled;
@property(retain, nonatomic) NSString *voiceOverSelectedLanguage;
@property(nonatomic) _Bool voiceOverHintsEnabled;
@property(nonatomic) double voiceOverBrailleAutoAdvanceDuration;
@property(nonatomic) _Bool voiceOverBrailleWordWrapEnabled;
@property(readonly, nonatomic) _Bool voiceOverBrailleGesturesEnabled;
@property(readonly, nonatomic) _Bool voiceOverHandwritingEnabled;
- (_Bool)_voiceOverRotorItemEnabled:(id)arg1;	// IMP=0x0000000000097dfa
@property(nonatomic) long long voiceOverActivationWorkaround;
@property(nonatomic) long long voiceOverBrailleGesturesTypingFeedback;
@property(nonatomic) long long voiceOverSoftwareTypingFeedback;
@property(nonatomic) long long voiceOverHardwareTypingFeedback;
@property(nonatomic) long long voiceOverPhoneticsFeedback;
@property(nonatomic) long long voiceOverNavigateImagesOption;
@property(nonatomic) long long voiceOverHelpMode;
@property(nonatomic) _Bool voiceOverLargeCursorEnabled;
@property(nonatomic) _Bool voiceOverSpeakTableColumnRowInformation;
@property(nonatomic) _Bool voiceOverSpeakTableHeaders;
@property(nonatomic) _Bool voiceOverSpeaksOverTelephoneCalls;
@property(nonatomic) long long voiceOverQuickNavAnnouncementFeedback;
@property(nonatomic) _Bool voiceOverTouchSingleLetterQuickNavEnabled;
@property(nonatomic) long long voiceOverDiscoveredSensitiveContentFeedback;
@property(nonatomic) long long voiceOverActionsFeedback;
@property(nonatomic) long long voiceOverContainerOutputFeedback;
@property(nonatomic) long long voiceOverMoreContentOutputFeedback;
@property(nonatomic) long long voiceOverCapitalLetterFeedback;
@property(nonatomic) long long voiceOverDeletionFeedback;
@property(nonatomic) long long voiceOverLinkFeedback;
@property(nonatomic) long long voiceOverPunctuationLevel;
@property(copy, nonatomic) NSUUID *voiceOverPunctuationGroup;
@property(copy, nonatomic) NSUUID *voiceOverDefaultPunctuationGroup;
@property(nonatomic) _Bool voiceOverTouchBraillePanningAutoTurnsReadingContent;
@property(nonatomic) long long voiceOverTouchBrailleGesturesInputMode;
@property(nonatomic) long long voiceOverTouchBrailleDisplayOutputMode;
@property(nonatomic) long long voiceOverTouchBrailleDisplayInputMode;
@property(retain, nonatomic) NSArray *customPronunciationSubstitutions;
@property(nonatomic) struct CGPoint quickSpeakNubbitNormalizedPosition;
@property(nonatomic) _Bool siriAutoUpdateListInitialized;
- (void)_removeSpeakingRatePreferenceForLanguage:(id)arg1;	// IMP=0x0000000000096c39
- (float)quickSpeakSpeakingRateForLanguage:(id)arg1;	// IMP=0x0000000000096b0a
- (void)setQuickSpeakSpeakingRate:(float)arg1 forLanguage:(id)arg2;	// IMP=0x00000000000969fc
- (id)_quickSpeakSpeakingRateLanguages;	// IMP=0x00000000000969e3
- (id)_quickSpeakAltVoices;	// IMP=0x0000000000096985
- (id)_quickSpeakPrefersCompact;	// IMP=0x000000000009696c
- (id)_voiceOverPrefersCompactByLanguage;	// IMP=0x0000000000096953
- (id)_voiceOverAlternativeVoiceIdentifiers;	// IMP=0x000000000009693a
- (id)_switchControlAltVoices;	// IMP=0x0000000000096921
- (id)_switchControlPrefersCompact;	// IMP=0x0000000000096908
- (id)_switchControlScannerDefaultDialect;	// IMP=0x00000000000968ef
- (id)_voiceOverDefaultDialect;	// IMP=0x00000000000968d6
- (void)_clearWhitetailMigrationSettings;	// IMP=0x0000000000096810
- (id)selectedSpeechVoiceIdentifiersForSource:(long long)arg1;	// IMP=0x00000000000964cc
- (void)setSelectedSpeechVoiceIdentifiersWithLanguageSource:(id)arg1;	// IMP=0x00000000000964b3
- (id)selectedSpeechVoiceIdentifiersWithLanguageSource;	// IMP=0x000000000009649a
- (id)selectedSpeechVoiceIdentifiers;	// IMP=0x00000000000961e0
- (void)setUserDidSelectVoiceForLanguage:(id)arg1 source:(long long)arg2;	// IMP=0x0000000000096024
- (void)setSpeechVoiceIdentifier:(id)arg1 forLanguage:(id)arg2 source:(long long)arg3;	// IMP=0x0000000000095e2a
- (_Bool)userDidSelectVoiceForLanguage:(id)arg1 source:(long long)arg2;	// IMP=0x0000000000095cec
- (id)speechVoiceIdentifierForLanguage:(id)arg1 source:(long long)arg2 exists:(_Bool *)arg3;	// IMP=0x0000000000095445
@property(nonatomic) unsigned long long quickSpeakHighlightOption;
@property(nonatomic) long long quickSpeakSentenceHighlightColor;
@property(nonatomic) long long quickSpeakWordHighlightColor;
@property(nonatomic) unsigned long long quickSpeakSentenceHighlightOption;
@property(nonatomic) float quickSpeakSpeakingRate;
@property(nonatomic) _Bool quickSpeakUnderlineSentence;
@property(nonatomic) float quickSpeakVolume;
@property(nonatomic) long long speechControllerDoubleTapAction;
@property(nonatomic) long long speechControllerLongPressAction;
@property(nonatomic) double speechControllerIdleOpacity;
@property(nonatomic) _Bool showSpeechController;
@property(nonatomic) _Bool wordFeedbackEnabled;
@property(nonatomic) _Bool quickTypeWordFeedbackEnabled;
@property(nonatomic) double characterFeedbackDelayDuration;
@property(nonatomic) _Bool phoneticFeedbackEnabled;
@property(nonatomic) _Bool letterFeedbackEnabled;
@property(nonatomic) _Bool speakCorrectionsEnabled;
@property(copy, nonatomic) NSArray *tripleClickOrderedOptions;
@property(nonatomic) _Bool classicInvertColors;
@property(nonatomic) _Bool guidedAccessEnableExperimentalUI;
@property(retain, nonatomic) NSNumber *guidedAccessOverrideTimeRestrictionDuration;
@property(nonatomic) _Bool guidedAccessDisallowDirectInactiveToActiveTransition;
@property(nonatomic) _Bool enableHearingAidReporter;
@property(nonatomic) _Bool skipHearingAidMFiAuth;
@property(nonatomic) _Bool voiceOverHearingAidRoutingEnabled;
@property(nonatomic) long long voiceOverKeyboardModifierChoice;
@property(nonatomic) double voiceOverContinuousPathKeyboardStartTimeout;
@property(nonatomic) _Bool dataMigratorRequestedVoiceCacheRefresh;
@property(retain, nonatomic) NSArray *currentVoices;
@property(readonly, nonatomic) _Bool currentVoicesExist;
@property(readonly, nonatomic) _Bool extantVoicesExist;
@property(retain, nonatomic) NSArray *extantVoices;
- (id)testingExtantVoices;	// IMP=0x000000000009462d
- (void)setTestingExtantVoices:(id)arg1;	// IMP=0x0000000000094604
- (id)_retrieveVoices:(id)arg1;	// IMP=0x00000000000941e9
- (void)_setVoiceArray:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000940d9
@property(nonatomic) _Bool voiceOverUseTVToggleStyleNavigation;
@property(retain, nonatomic) NSArray *voiceOverActivities;
- (id)programmingActivity;	// IMP=0x0000000000093c5c
@property(retain, nonatomic) AXVoiceOverActivity *voiceOverSelectedActivity;
- (void)setAutomaticAccessibilityMode:(long long)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x0000000000093852
- (long long)automaticAccessibilityModeForBundleIdentifier:(id)arg1;	// IMP=0x00000000000937ad
- (void)setAutomaticAccessibilityModes:(id)arg1;	// IMP=0x0000000000093794
- (id)automaticAccessibilityModes;	// IMP=0x0000000000093772
@property(nonatomic) _Bool automaticAccessibilityVisualizationsEnabled;
@property(nonatomic) _Bool automaticAccessibilityIgnoreAppAccessibilityPreferred;
@property(nonatomic) _Bool automaticAccessibilityEnabled;
@property(nonatomic) _Bool shouldCaptureVisionEngineDiagnosticsToDisk;
@property(nonatomic) _Bool voiceOverImageCaptionsEnabled;
@property(readonly, nonatomic) _Bool voiceOverShowBrailleWatchSettings;
@property(nonatomic) _Bool voiceOverUseDigitalCrownNavigation;
@property(nonatomic) _Bool voiceOverUseActiveSiriVoice;
@property(nonatomic) _Bool voiceOverFlashlightNotificationsEnabled;
@property(nonatomic) long long voiceOverContentDescriptionLevel;
@property(nonatomic) _Bool didTriggerSOSToday;
- (_Bool)didTriggerSOSValueSet;	// IMP=0x000000000009324e
@property(nonatomic) _Bool syncPronunciationsWithCloudKit;
@property(nonatomic) _Bool enableVoiceOverCaptions;
@property(nonatomic) long long internalLoggingColorTheme;
@property(nonatomic) _Bool shouldPerformValidationsAtRuntime;
@property(nonatomic) _Bool useNewAXBundleLoader;
@property(nonatomic) _Bool logAXNotificationPosting;
@property(nonatomic) _Bool ignoreAXServerEntitlements;
@property(nonatomic) _Bool ignoreAXAsserts;
@property(nonatomic) _Bool includeBacktraceInLogs;
@property(nonatomic) _Bool validateSecondPartyApps;
@property(nonatomic) _Bool assistiveTouchInternalOnlyPearlTrackingEnabled;
- (_Bool)assistiveTouchInternalOnlyHiddenNubbitMode;	// IMP=0x0000000000092cda
@property(nonatomic) _Bool assistiveTouchCameraSwitchPreviewEnabled;
@property(retain, nonatomic) NSDate *gaxInternalSettingsLastPasscodeSetDate;
@property(retain, nonatomic) NSDate *gaxInternalSettingsLastActivationDate;
@property(copy, nonatomic) NSString *gaxInternalSettingsProductBuildVersion;
@property(copy, nonatomic) NSNumber *gaxInternalSettingsECID;
@property(nonatomic) _Bool gaxInternalSettingsSystemDidRestartDueToLowBattery;
@property(nonatomic) _Bool gaxInternalSettingsIsActiveAppSelfLocked;
@property(nonatomic) _Bool gaxInternalSettingsTimeRestrictionHasExpired;
@property(copy, nonatomic) NSString *gaxInternalSettingsActiveAppID;
@property(copy, nonatomic) NSNumber *gaxInternalSettingsActiveAppOrientation;
@property(retain, nonatomic) NSArray *gaxInternalSettingsUserConfiguredAppIDs;
@property(retain, nonatomic) NSArray *gaxInternalSettingsSavedAccessibilityTripleClickOptions;
@property(retain, nonatomic) NSDictionary *gaxInternalSettingsSavedAccessibilityFeatures;
@property(retain, nonatomic) NSDictionary *gaxInternalSettingsUserGlobalProfile;
@property(retain, nonatomic) NSDictionary *gaxInternalSettingsUserAppProfile;
@property(readonly, nonatomic) _Bool guidedAccessAllowsMultipleWindows;
@property(nonatomic) long long guidedAccessAutoLockTimeInSeconds;
@property(readonly, nonatomic) _Bool guidedAccessOverrideIdleTime;
@property(nonatomic) _Bool guidedAccessShouldSpeakForTimeRestrictionEvents;
@property(readonly, nonatomic) NSString *guidedAccessDefaultToneIdentifierForTimeRestrictionEvents;
@property(copy, nonatomic) NSString *guidedAccessToneIdentifierForTimeRestrictionEvents;
@property(nonatomic) _Bool guidedAccessAllowsUnlockWithTouchID;
@property(nonatomic) _Bool guidedAccessAXFeaturesEnabled;
@property(nonatomic) _Bool zoomDebugShowExternalFocusRect;
@property(nonatomic) _Bool zoomDebugDisableZoomLensScaleTransform;
- (void)zoomUserHadLegacyZoomEnabled:(_Bool *)arg1 wasZoomedIn:(_Bool *)arg2 withScale:(double *)arg3;	// IMP=0x0000000000092325
@property(nonatomic) _Bool zoomAutopannerShouldPanWithAcceleration;
@property(nonatomic) _Bool zoomScrollWheelKbShortcutEnabled;
@property(nonatomic) _Bool zoomTempToggleZoomKbShortcutEnabled;
@property(nonatomic) _Bool zoomSwitchZoomModeKbShortcutEnabled;
@property(nonatomic) _Bool zoomResizeZoomWindowKbShortcutEnabled;
@property(nonatomic) _Bool zoomPanZoomKbShortcutEnabled;
@property(nonatomic) _Bool zoomToggleZoomKbShortcutEnabled;
@property(nonatomic) _Bool zoomAdjustZoomLevelKbShortcutEnabled;
@property(nonatomic) _Bool zoomKeyboardShortcutsEnabled;
@property(nonatomic) _Bool zoomShouldAllowFullscreenAutopanning;
@property(nonatomic) long long zoomControllerColor;
@property(nonatomic) double zoomIdleSlugOpacity;
@property(retain, nonatomic) NSOrderedSet *zoomPreferredDockPositions;
@property(retain, nonatomic) NSOrderedSet *zoomPreferredLensModes;
@property(nonatomic) double zoomPreferredMaximumZoomScale;
@property(retain, nonatomic) NSString *zoomPreferredCurrentDockPosition;
@property(retain, nonatomic) NSString *zoomPreferredCurrentLensMode;
@property(nonatomic) _Bool zoomAlwaysUseWindowedZoomForTyping;
@property(nonatomic) _Bool zoomSlugTapAndSlideToAdjustZoomLevelEnabled;
@property(nonatomic) long long zoomSlugTripleTapAction;
@property(nonatomic) long long zoomSlugDoubleTapAction;
@property(nonatomic) long long zoomSlugSingleTapAction;
@property(nonatomic) _Bool zoomPeekZoomEverEnabled;
@property(nonatomic) _Bool zoomPeekZoomEnabled;
@property(nonatomic) _Bool zoomShouldShowSlug;
@property(nonatomic) _Bool zoomShouldFollowFocus;
@property(retain, nonatomic) NSString *zoomCurrentLensMode;
@property(nonatomic) _Bool zoomInStandby;
@property(nonatomic) _Bool zoomShowedBanner;
@property(retain, nonatomic) NSString *zoomCurrentLensEffect;
@property(nonatomic) struct CGPoint zoomSlugNormalizedPosition;
@property(nonatomic) struct CGPoint zoomPanOffset;
@property(nonatomic) double zoomScale;
@property(nonatomic) double dockSize;
@property(nonatomic) struct CGRect zoomWindowFrame;
@property(nonatomic) _Bool zoomPreferencesWereInitialized;
- (void)_switchControlClearMenuItemMigrationTracking;	// IMP=0x0000000000091157
- (id)_switchControlMenuItemPreferences;	// IMP=0x0000000000091094
- (void)_switchControlClearMenuItemPreferences;	// IMP=0x0000000000090ed4
@property(nonatomic) long long switchControlScanAfterTapLocation;
@property(nonatomic) _Bool switchControlIsEnabledAsReceiver;
@property(nonatomic) _Bool switchControlShouldAlwaysActivateKeyboardKeys;
@property(nonatomic) double switchControlAutoTapTimeout;
@property(nonatomic) long long switchControlTapBehavior;
@property(nonatomic) double switchControlDwellTime;
@property(nonatomic) long long switchControlScanningStyle;
@property(nonatomic) long long switchControlPointPickerSelectionStyle;
@property(nonatomic) _Bool switchControlRestartScanningAtCurrentKey;
@property(nonatomic) _Bool switchControlShouldUseExtendedKeyboardPredictions;
- (id)_allSubmenuKeys;	// IMP=0x00000000000906ba
@property(retain, nonatomic) NSArray *switchControlMediaControlsTopLevelMenuItems;
@property(retain, nonatomic) NSArray *switchControlMediaControlsMenuItems;
@property(readonly, nonatomic) NSArray *mediaControlsKeys;
@property(retain, nonatomic) NSArray *switchControlSettingsTopLevelMenuItems;
@property(retain, nonatomic) NSArray *switchControlSettingsMenuItems;
@property(readonly, nonatomic) NSArray *settingsKeys;
@property(retain, nonatomic) NSArray *switchControlDeviceTopLevelMenuItems;
@property(retain, nonatomic) NSArray *switchControlDeviceMenuItems;
@property(readonly, nonatomic) NSArray *deviceKeys;
@property(retain, nonatomic) NSArray *switchControlGesturesTopLevelMenuItems;
@property(retain, nonatomic) NSArray *switchControlGesturesMenuItems;
@property(readonly, nonatomic) NSArray *gestureKeys;
@property(nonatomic) _Bool switchControlShouldUseShortFirstPage;
- (_Bool)_switchControlHasEmptyTopLevelMenuItems:(id)arg1;	// IMP=0x000000000008fae6
@property(readonly, nonatomic) _Bool switchControlHasEmptyTopLevelMenu;
@property(retain, nonatomic) NSArray *switchControlTopLevelMenuItems;
- (id)topLevelKeys;	// IMP=0x000000000008f8b2
- (id)_switchControlMigratePreMonarchIncludedMenuItemsForNewTypes:(id)arg1;	// IMP=0x000000000008f2df
- (id)_switchControlMenuItemsForPreferenceKey:(id)arg1 allTypes:(id)arg2 enabledByDefault:(_Bool)arg3 topLevel:(_Bool)arg4;	// IMP=0x000000000008ea47
@property(retain, nonatomic) NSUUID *switchControlLaunchRecipeUUID;
@property(retain, nonatomic) NSArray *switchControlRecipes;
@property(nonatomic) _Bool assistiveTouchGameControllerEnabled;
@property(retain, nonatomic) NSDictionary *assistiveTouchMainScreenCustomization;
@property(readonly, nonatomic) NSDictionary *assistiveTouchMainScreenDefaultCustomization;
@property(nonatomic) double assistiveTouchIdleOpacity;
- (_Bool)assistiveTouchCustomizationEnabled;	// IMP=0x000000000008deaf
- (void)updateCustomizableMouse:(id)arg1;	// IMP=0x000000000008dc66
@property(readonly, nonatomic) NSArray *assistiveTouchMouseCustomizedClickActions;
@property(retain, nonatomic) NSString *assistiveTouchOrbAction;
@property(retain, nonatomic) NSString *assistiveTouchLongPressAction;
@property(nonatomic) double assistiveTouchLongPressActionDuration;
@property(nonatomic) double assistiveTouchDoubleTapActionTimeout;
@property(retain, nonatomic) NSString *assistiveTouchDoubleTapAction;
@property(retain, nonatomic) NSString *assistiveTouchSingleTapAction;
- (_Bool)assistiveTouchScannerPrefersCompact:(id)arg1;	// IMP=0x000000000008d827
- (void)setAssistiveTouchScannerPrefersCompact:(_Bool)arg1 forLanguage:(id)arg2;	// IMP=0x000000000008d6ed
@property(nonatomic) _Bool assistiveTouchScannerAddedTripleClickAutomatically;
@property(nonatomic) _Bool assistiveTouchSwitchUsageConfirmed;
@property(nonatomic) long long assistiveTouchHeadMovementSensitivity;
@property(nonatomic) unsigned long long assistiveTouchMouseZoomPanningStyle;
@property(nonatomic) _Bool assistiveTouchMouseDwellControlShowPrompt;
@property(nonatomic) _Bool assistiveTouchMouseDwellControlMutatedMenu;
@property(retain, nonatomic) NSDictionary *assistiveTouchMouseDwellControlCornerCustomization;
@property(nonatomic) double assistiveTouchMouseDwellControlMovementToleranceRadius;
@property(nonatomic) double assistiveTouchMouseDwellControlActivationTimeout;
@property(retain, nonatomic) NSString *assistiveTouchMouseDwellControlAutorevertAction;
@property(nonatomic) _Bool assistiveTouchMouseDwellControlAutorevertEnabled;
@property(nonatomic) _Bool assistiveTouchMouseDwellControlEnabled;
@property(nonatomic) double assistiveTouchMousePointerTimeout;
@property(nonatomic) _Bool assistiveTouchMousePointerTimeoutEnabled;
@property(nonatomic) double assistiveTouchMousePointerSizeMultiplier;
@property(nonatomic) long long assistiveTouchMousePointerColor;
@property(nonatomic) long long assistiveTouchCursorColor;
@property(retain, nonatomic) NSSet *assistiveTouchSwitches;
@property(nonatomic) double assistiveTouchScannerSpeechRate;
@property(nonatomic) _Bool assistiveTouchScannerSpeechEnabled;
@property(nonatomic) _Bool assistiveTouchScannerSoundEnabled;
@property(nonatomic) long long assistiveTouchScanCycles;
@property(nonatomic) double assistiveTouchScanTimeout;
@property(nonatomic) _Bool assistiveTouchScanTimeoutEnabled;
@property(nonatomic) double assistiveTouchStepInterval;
@property(nonatomic) _Bool assistiveTouchInputCoalescingEnabled;
@property(nonatomic) double assistiveTouchInputCoalescingDuration;
@property(nonatomic) _Bool assistiveTouchLongPressPauseScanningEnabled;
@property(nonatomic) _Bool assistiveTouchLongPressEnabled;
@property(nonatomic) double assistiveTouchLongPressDuration;
@property(nonatomic) _Bool assistiveTouchInputHoldEnabled;
@property(nonatomic) double assistiveTouchInputHoldDuration;
@property(nonatomic) _Bool assistiveTouchDelayAfterInputEnabled;
@property(nonatomic) double assistiveTouchDelayAfterInput;
@property(nonatomic) _Bool assistiveTouchActionRepeatEnabled;
@property(nonatomic) double assistiveTouchActionRepeatInterval;
@property(nonatomic) double assistiveTouchAxisSweepSpeed;
@property(nonatomic) _Bool assistiveTouchScannerMenuLabelsEnabled;
@property(nonatomic) _Bool assistiveTouchScannerCompactMenuEnabled;
@property(nonatomic) _Bool assistiveTouchGroupElementsEnabled;
- (_Bool)assistiveTouchAutoScanningEnabled;	// IMP=0x000000000008c23e
@property(nonatomic) long long assistiveTouchScanningMode;
@property(nonatomic) _Bool assistiveTouchScannerCursorHighVisibilityEnabled;
@property(nonatomic) _Bool assistiveTouchScannerSpeechShouldSpeakTraits;
@property(nonatomic) _Bool assistiveTouchScannerSpeechIsInterruptedByScanning;
@property(nonatomic) long long assistiveTouchPreferredPointPicker;
@property(retain, nonatomic) NSArray *assistiveTouchSavedGestures;
@property(retain, nonatomic) NSArray *assistiveTouchRecentGestures;
@property(retain, nonatomic) NSArray *assistiveTouchCustomGestures;
- (void)_setGestures:(id)arg1 forPreferenceKey:(id)arg2;	// IMP=0x000000000008bde4
- (id)_gesturesForPreferenceKeyMigratingIfNecessary:(id)arg1;	// IMP=0x000000000008b909
@property(nonatomic) double assistiveTouchSpeed;
@property(nonatomic) long long assistiveTouchMouseKeysMaxSpeed;
@property(nonatomic) long long assistiveTouchMouseKeysDelay;
@property(nonatomic) _Bool assistiveTouchMouseAllowAppleBluetoothDevicesPairing;
@property(nonatomic) _Bool assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled;
@property(nonatomic) _Bool assistiveTouchMouseKeysUseMainKeyboardKeys;
@property(nonatomic) _Bool assistiveTouchMouseKeysOptionToggleEnabled;
@property(nonatomic) _Bool assistiveTouchMouseKeysEnabled;
@property(nonatomic) _Bool assistiveTouchMouseBehavesLikeFinger;
@property(nonatomic) _Bool assistiveTouchOpenMenuSwaggleEnabled;
@property(nonatomic) _Bool supportsAdvancedDisplayFilters;
@property(nonatomic) _Bool assistiveTouchAlwaysShowMenuEnabled;
@property(nonatomic) unsigned long long laserZoomPanningStyle;
@property(readonly, nonatomic) _Bool laserEnabled;
- (void)_handleVoiceUnarchivedCache:(id)arg1;	// IMP=0x000000000008b148
- (void)_listenForAccessibilitySupportPassthroughs;	// IMP=0x000000000008b077
- (void)nukePrefsForDomains:(int *)arg1 numDomains:(unsigned long long)arg2;	// IMP=0x000000000008af62
- (void)nukeAll;	// IMP=0x000000000008ae90
- (id)init;	// IMP=0x000000000008ae23
- (id)valueForPreferenceKey:(id)arg1;	// IMP=0x000000000008acf6
- (void)willPerformUpdateBlocksForPreferenceKey:(id)arg1;	// IMP=0x000000000008ace4
- (void)willPostNotificationForPreferenceKey:(id)arg1 value:(id)arg2;	// IMP=0x000000000008ac69
- (id)_migratePreferenceIfNecessary:(id)arg1;	// IMP=0x000000000008abe8
- (struct __CFString *)_domainNameForDomain:(int)arg1;	// IMP=0x000000000008aac4
- (id)preferenceKeyForSelector:(SEL)arg1;	// IMP=0x000000000008a9aa
- (int)_domainForPreferenceKey:(id)arg1;	// IMP=0x000000000008a89c
- (id)allDomainNamesForPreferenceKey:(id)arg1;	// IMP=0x000000000008a7e6
- (id)domainNameForPreferenceKey:(id)arg1;	// IMP=0x000000000008a7b6
- (id)keysToIgnoreDuringBuddyTransfer;	// IMP=0x000000000008a748
@property double audioLeftRightBalance;
@property _Bool monoAudioEnabled;
@property _Bool highContrastFocusIndicatorsEnabled;
@property _Bool reduceWhitePointEnabled;
@property _Bool buttonShapesEnabled;
@property _Bool increaseButtonLegibilityEnabled;
@property _Bool reduceMotionAutoplayVideoPreviewsEnabled;
@property _Bool reduceMotionEnabled;
@property _Bool enhanceBackgroundContrastEnabled;
@property _Bool enhanceTextTrackingEnabled;
@property _Bool enhanceTextLegibilityEnabled;
@property _Bool zoomSmoothScalingEnabled;
@property _Bool zoomToggledByVoiceOver;
@property _Bool zoomToggledByPreferenceSwitch;
@property _Bool zoomEnabled;
@property _Bool voiceOverBrailleEightDotMode;
@property long long voiceOverBrailleContractionMode;
@property(nonatomic) long long voiceOverBrailleStatusCellPreference;
@property long long voiceOverBrailleMasterStatusCellIndex;
@property long long voiceOverBrailleVirtualStatusAlignment;
@property(copy) NSString *voiceOverTouchBrailleTableIdentifier;
@property(copy) NSDictionary *voiceOverBrailleBluetoothDisplay;
@property int voiceOverTypingMode;
@property(readonly) _Bool voiceOverLanguageRotorItemsExist;
@property(retain) NSArray *voiceOverLanguageRotorItems;
@property _Bool voiceOverUIEnabled;
@property _Bool voiceOverScreenCurtainEnabled;
@property _Bool voiceOverEnabledThroughAccessory;
@property _Bool voiceOverUsageConfirmed;
@property float voiceOverVolume;
@property float voiceOverSpeakingRate;
@property _Bool voiceOverEnabled;
@property _Bool siriSemanticContextEnabled;
@property _Bool automationHitpointWarpingEnabled;
@property _Bool automationFauxTableViewCellsEnabled;
@property _Bool automationFauxCollectionViewCellsEnabled;
@property(readonly) NSString *automationPreferredLocalization;
@property _Bool automationLocalizedStringLookupInfoEnabled;
@property _Bool automationEnabled;
@property _Bool inspectorEnabled;
@property _Bool switchControlEnabled;
@property _Bool assistiveTouchUIEnabled;
@property _Bool assistiveTouchHardwareEnabled;
@property _Bool assistiveTouchEnabled;
@property(nonatomic) _Bool appleTVRemoteClickpadTapsForDirectionalNavigationEnabled;
@property(retain) NSArray *tripleClickOptions;
@property _Bool applicationAccessibilityEnabled;
@property(readonly) _Bool accessibilityEnabled;
- (id)switchForUUID:(id)arg1;	// IMP=0x00000000000b02b8
- (id)_createAndSaveRecipeForInterfaceOrientedPoint:(struct CGPoint)arg1 forHold:(_Bool)arg2;	// IMP=0x00000000000b0020
- (id)createAndSaveRecipeForInterfaceOrientedHoldPoint:(struct CGPoint)arg1;	// IMP=0x00000000000b0009
- (id)createAndSaveRecipeForInterfaceOrientedPoint:(struct CGPoint)arg1;	// IMP=0x00000000000afff5
- (_Bool)isNewRecipe:(id)arg1;	// IMP=0x00000000000afe11
- (void)saveRecipe:(id)arg1;	// IMP=0x00000000000afd50
- (_Bool)updateRecipe:(id)arg1;	// IMP=0x00000000000afc9d
- (void)_assignDefaultTitleIfNeededToRecipe:(id)arg1;	// IMP=0x00000000000afbb0
- (_Bool)_updateWithoutSavingExistingRecipe:(id)arg1 allRecipes:(id)arg2;	// IMP=0x00000000000afa58
- (_Bool)validateAndUpdateRecipeIfNeeded:(id)arg1;	// IMP=0x00000000000af3b3
- (id)_switchWithAnyActionExcludingUUIDs:(id)arg1 needsToSupportLongPress:(_Bool)arg2;	// IMP=0x00000000000af399
- (id)_switchWithAction:(long long)arg1 excludedUUIDs:(id)arg2 needsToSupportLongPress:(_Bool)arg3;	// IMP=0x00000000000af123
- (_Bool)_hasSwitchWithUUID:(id)arg1;	// IMP=0x00000000000aef59

@end

