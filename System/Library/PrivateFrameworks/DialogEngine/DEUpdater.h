//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DEManifest, DEUpdaterState, DEWorkQueues, NSDate, NSString, NSURL;

@interface DEUpdater : NSObject
{
    _Bool _manifestSyncing;	// 8 = 0x8
    _Bool _disableManifestSync;	// 9 = 0x9
    _Bool _foregroundManifestSync;	// 10 = 0xa
    _Bool _logToCoreAnalytics;	// 11 = 0xb
    NSString *_distribution;	// 16 = 0x10
    NSURL *_publicationURL;	// 24 = 0x18
    NSDate *_publicationErrorTime;	// 32 = 0x20
    double _publicationErrorTTL;	// 40 = 0x28
    NSURL *_downloadURLPrefix;	// 48 = 0x30
    NSURL *_builtinDir;	// 56 = 0x38
    NSURL *_updateDir;	// 64 = 0x40
    NSURL *_storageBase;	// 72 = 0x48
    NSURL *_overlayBase;	// 80 = 0x50
    NSURL *_tmpBase;	// 88 = 0x58
    DEManifest *_builtinManifest;	// 96 = 0x60
    DEManifest *_latestManifest;	// 104 = 0x68
    DEWorkQueues *_queues;	// 112 = 0x70
    DEWorkQueues *_syncQueues;	// 120 = 0x78
    DEUpdaterState *_state;	// 128 = 0x80
}

+ (_Bool)updatesExistFor:(id)arg1 updateDir:(id)arg2;	// IMP=0x00000000000bd4cb
+ (id)getUpdatedURLFor:(id)arg1 updateDir:(id)arg2;	// IMP=0x00000000000bd351
+ (void)remove:(id)arg1 from:(id)arg2;	// IMP=0x00000000000bce5e
+ (id)getUpdateDirFor:(id)arg1 base:(id)arg2;	// IMP=0x00000000000bc96b
+ (id)loadPublication:(id)arg1 defaultTag:(id)arg2 allowAllKeys:(_Bool)arg3;	// IMP=0x00000000000bc564
+ (id)appendPublicationName:(id)arg1;	// IMP=0x00000000000bc528
+ (_Bool)prepareDistribution:(id)arg1 disabled:(_Bool)arg2 in:(id)arg3 tag:(id)arg4 keyId:(unsigned long long)arg5 privateKey:(id)arg6;	// IMP=0x00000000000bbd65
+ (_Bool)packageDirectory:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 dest:(id)arg5 manifestDest:(id)arg6 downloadType:(unsigned long long)arg7 keyId:(unsigned long long)arg8 privateKey:(id)arg9 updating:(id)arg10;	// IMP=0x00000000000bbd18
+ (_Bool)package:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 dest:(id)arg5 manifestDest:(id)arg6 overrides:(id)arg7 keyId:(unsigned long long)arg8 privateKey:(id)arg9 updating:(id)arg10;	// IMP=0x00000000000bbcc2
+ (_Bool)package:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 dest:(id)arg5 manifestDest:(id)arg6 overrides:(id)arg7 dirDownloadType:(unsigned long long)arg8 keyId:(unsigned long long)arg9 privateKey:(id)arg10 updating:(id)arg11 publicationURL:(id)arg12 downloadURLPrefix:(id)arg13;	// IMP=0x00000000000baba0
+ (_Bool)putDirectoryManifest:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 downloadType:(unsigned long long)arg5;	// IMP=0x00000000000bab7d
+ (_Bool)putManifest:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 overrides:(id)arg5;	// IMP=0x00000000000bab5a
+ (_Bool)putManifest:(id)arg1 src:(id)arg2 contents:(id)arg3 summary:(id)arg4 overrides:(id)arg5 dirDownloadType:(unsigned long long)arg6;	// IMP=0x00000000000ba446
+ (id)summarize:(id)arg1 filter:(id)arg2;	// IMP=0x00000000000b9d92
+ (_Bool)copyFrom:(id)arg1 to:(id)arg2;	// IMP=0x00000000000b9afa
+ (id)getPublicationPath:(id)arg1 category:(id)arg2 URLVersion:(unsigned long long)arg3;	// IMP=0x00000000000b9a44
+ (id)getDownloadURLPrefix:(id)arg1;	// IMP=0x00000000000b9886
+ (id)getPublicationURL:(id)arg1;	// IMP=0x00000000000b9555
+ (_Bool)hasDefaultURLs:(id)arg1 publicationURL:(id)arg2 downloadURLPrefix:(id)arg3;	// IMP=0x00000000000b92c5
+ (id)getDefaultCategory;	// IMP=0x00000000000b9297
+ (id)getPublicationURL:(id)arg1 prefixURL:(id)arg2 category:(id)arg3;	// IMP=0x00000000000b9163
+ (id)getPublicationPath:(id)arg1 category:(id)arg2;	// IMP=0x00000000000b8fce
+ (id)getURLParams:(id)arg1;	// IMP=0x00000000000b8fa3
+ (id)getURLParams:(id)arg1 URLVersion:(unsigned long long)arg2;	// IMP=0x00000000000b8f77
+ (id)getURLParams:(id)arg1 URLVersion:(unsigned long long)arg2 manifest:(id)arg3;	// IMP=0x00000000000b87f0
+ (id)getVersionSeed:(unsigned long long)arg1;	// IMP=0x00000000000b8786
+ (_Bool)manifestExists:(id)arg1;	// IMP=0x00000000000b866d
+ (void)clearURLParamsCache;	// IMP=0x00000000000b8609
+ (id)getManifestName;	// IMP=0x00000000000b85fc
+ (id)getDispatchQueue;	// IMP=0x00000000000b8581
- (void).cxx_destruct;	// IMP=0x00000000000c7aed
@property(nonatomic) _Bool logToCoreAnalytics; // @synthesize logToCoreAnalytics=_logToCoreAnalytics;
@property(nonatomic) _Bool foregroundManifestSync; // @synthesize foregroundManifestSync=_foregroundManifestSync;
@property(nonatomic) _Bool disableManifestSync; // @synthesize disableManifestSync=_disableManifestSync;
@property _Bool manifestSyncing; // @synthesize manifestSyncing=_manifestSyncing;
@property(retain, nonatomic) DEUpdaterState *state; // @synthesize state=_state;
@property(retain, nonatomic) DEWorkQueues *syncQueues; // @synthesize syncQueues=_syncQueues;
@property(retain, nonatomic) DEWorkQueues *queues; // @synthesize queues=_queues;
@property(retain, nonatomic) DEManifest *latestManifest; // @synthesize latestManifest=_latestManifest;
@property(retain, nonatomic) DEManifest *builtinManifest; // @synthesize builtinManifest=_builtinManifest;
@property(retain, nonatomic) NSURL *tmpBase; // @synthesize tmpBase=_tmpBase;
@property(retain, nonatomic) NSURL *overlayBase; // @synthesize overlayBase=_overlayBase;
@property(retain, nonatomic) NSURL *storageBase; // @synthesize storageBase=_storageBase;
@property(retain, nonatomic) NSURL *updateDir; // @synthesize updateDir=_updateDir;
@property(retain, nonatomic) NSURL *builtinDir; // @synthesize builtinDir=_builtinDir;
@property(retain, nonatomic) NSURL *downloadURLPrefix; // @synthesize downloadURLPrefix=_downloadURLPrefix;
@property(nonatomic) double publicationErrorTTL; // @synthesize publicationErrorTTL=_publicationErrorTTL;
@property(retain, nonatomic) NSDate *publicationErrorTime; // @synthesize publicationErrorTime=_publicationErrorTime;
@property(retain, nonatomic) NSURL *publicationURL; // @synthesize publicationURL=_publicationURL;
@property(retain, nonatomic) NSString *distribution; // @synthesize distribution=_distribution;
- (id)findDirectory:(_Bool)arg1 status:(id *)arg2;	// IMP=0x00000000000c7884
- (void)findDirectory:(_Bool)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c77d8
- (id)findDirectory:(_Bool)arg1 downloadType:(unsigned long long)arg2 status:(id *)arg3;	// IMP=0x00000000000c752f
- (void)findDirectory:(_Bool)arg1 downloadType:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c71cd
- (void)findDirectoryLocally:(_Bool)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c7069
- (id)findDirectoryLocally:(_Bool)arg1 status:(id *)arg2;	// IMP=0x00000000000c6c9f
- (_Bool)applyUpdate;	// IMP=0x00000000000c6382
- (_Bool)updateIsReady;	// IMP=0x00000000000c6167
- (id)find:(id)arg1 status:(id *)arg2;	// IMP=0x00000000000c6074
- (void)find:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c5fa3
- (id)find:(id)arg1 downloadType:(unsigned long long)arg2 status:(id *)arg3;	// IMP=0x00000000000c5c16
- (void)find:(id)arg1 downloadType:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c5926
- (void)findLocally:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c5793
- (id)findLocally:(id)arg1 status:(id *)arg2;	// IMP=0x00000000000c54a3
- (id)getOutOfDateVersion:(id)arg1;	// IMP=0x00000000000c518e
- (_Bool)nameKnown:(id)arg1 blockRequired:(_Bool *)arg2;	// IMP=0x00000000000c50e3
- (void)update:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c4eaa
- (void)unorderedUpdate:(id)arg1 block:(CDUnknownBlockType)arg2 syncBlock:(CDUnknownBlockType)arg3 syncInForeground:(id)arg4;	// IMP=0x00000000000c3794
- (_Bool)checkManifest:(id)arg1 manifestURL:(id)arg2;	// IMP=0x00000000000c346c
- (void)sync:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c3117
- (void)unorderedSync:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c283b
- (_Bool)syncNeeded;	// IMP=0x00000000000c26b8
- (void)runSyncBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c2679
- (void)prepare:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 linkIfLatest:(_Bool)arg4 publication:(id)arg5 block:(CDUnknownBlockType)arg6;	// IMP=0x00000000000c227b
- (void)unorderedPrepare:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 linkIfLatest:(_Bool)arg4 publication:(id)arg5 block:(CDUnknownBlockType)arg6;	// IMP=0x00000000000c1696
- (void)removeFromOverlay:(id)arg1;	// IMP=0x00000000000c15ed
- (void)removeFromStorage:(id)arg1;	// IMP=0x00000000000c15cc
- (id)store:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 from:(id)arg4 src:(id)arg5;	// IMP=0x00000000000c1240
- (id)prepared:(id)arg1 version:(id)arg2;	// IMP=0x00000000000c0e3f
- (_Bool)matches:(id)arg1 filter:(id)arg2;	// IMP=0x00000000000c0bcb
- (id)init;	// IMP=0x00000000000c0bbd
- (id)initPlaceholder;	// IMP=0x00000000000c0b8e
- (id)initWithBuiltinDir:(id)arg1;	// IMP=0x00000000000c0b61
- (id)initWithBuiltinDir:(id)arg1 filter:(id)arg2;	// IMP=0x00000000000c0b38
- (id)initWithBuiltinDir:(id)arg1 updateDir:(id)arg2;	// IMP=0x00000000000c0b0b
- (id)initWithPublicationURL:(id)arg1 downloadURLPrefix:(id)arg2 builtinDir:(id)arg3;	// IMP=0x00000000000c0ae5
- (id)initWithPublicationURL:(id)arg1 downloadURLPrefix:(id)arg2 builtinDir:(id)arg3 updateDir:(id)arg4 filter:(id)arg5;	// IMP=0x00000000000c041d
- (void)setUpdatesExist;	// IMP=0x00000000000c0037
- (void)prepareLatestManifest;	// IMP=0x00000000000bfebc
- (id)chooseURLFor:(id)arg1 version:(id)arg2 versionFound:(_Bool *)arg3;	// IMP=0x00000000000bf8d2
- (_Bool)prepareBuiltinManifest:(_Bool)arg1 filter:(id)arg2;	// IMP=0x00000000000bede0
- (_Bool)saveState;	// IMP=0x00000000000bebc1
- (_Bool)resetState;	// IMP=0x00000000000bea3d
- (_Bool)loadState;	// IMP=0x00000000000be72a
- (_Bool)linkToOverlay:(id)arg1 from:(id)arg2 replace:(_Bool)arg3;	// IMP=0x00000000000be714
- (_Bool)linkToOverlay:(id)arg1 from:(id)arg2 replace:(_Bool)arg3 shouldSymlink:(_Bool)arg4;	// IMP=0x00000000000bde07
- (void)checkOverlay:(id)arg1 version:(id)arg2;	// IMP=0x00000000000bdaaa
- (id)chooseOverlayBase;	// IMP=0x00000000000bd9c6
- (id)getDownloadURLFor:(id)arg1 encryptedVersion:(id)arg2;	// IMP=0x00000000000bd996
- (id)getStorageURLFor:(id)arg1 version:(id)arg2;	// IMP=0x00000000000bd966
- (id)getVersionFor:(id)arg1;	// IMP=0x00000000000bd942
- (id)getVersionFor:(id)arg1 encryptedVersion:(id *)arg2;	// IMP=0x00000000000bd79b
- (id)getLatestManifestAsset:(id)arg1;	// IMP=0x00000000000bd6c5
- (id)getLatestManifestVersion;	// IMP=0x00000000000bd658
- (_Bool)directoryDistributionValid;	// IMP=0x00000000000bd613
- (_Bool)individualDistributionValid;	// IMP=0x00000000000bd5cb
- (_Bool)isDirectoryDistribution;	// IMP=0x00000000000bd5ad

@end

