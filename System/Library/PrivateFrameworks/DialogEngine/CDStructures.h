//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CC_SHA256state_st {
    unsigned int count[2];
    unsigned int hash[8];
    unsigned int wbuf[16];
};

struct Context;

struct Dialog;

struct ElapsedTimer {
    double _field1;
    double _field2;
    unsigned long long _field3;
};

struct File;

struct GrammarFeature {
    int mType;
    basic_string_8e19b51d mName;
    struct set<std::string, std::less<std::string>, std::allocator<std::string>> mValues;
};

struct Group;

struct Node;

struct ObjectInput {
    CDUnknownFunctionPointerType *_vptr$PropertyBase;
    basic_string_8e19b51d mName;
    basic_string_8e19b51d mType;
    basic_string_8e19b51d mDescription;
    basic_string_8e19b51d mSampleValue;
    basic_string_8e19b51d mVersionAdded;
    basic_string_8e19b51d mDeprecated;
    _Bool mProfanityFilter;
    _Bool mOptional;
    int mAccessMode;
};

struct ObjectProperty {
    CDUnknownFunctionPointerType *_vptr$PropertyBase;
    basic_string_8e19b51d mName;
    basic_string_8e19b51d mType;
    basic_string_8e19b51d mDescription;
    basic_string_8e19b51d mSampleValue;
    basic_string_8e19b51d mVersionAdded;
    basic_string_8e19b51d mDeprecated;
    _Bool mProfanityFilter;
    _Bool mOptional;
    basic_string_8e19b51d mSemanticConcept;
    basic_string_8e19b51d mValueFromCat;
    basic_string_8e19b51d mDefaultValue;
    _Bool mIsIterator;
    _Bool mCanOverride;
};

struct ObjectSchema;

struct Parameter;

struct Variable;

struct __shared_weak_count;

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct internal_state;

struct optional<siri::dialogengine::ObjectInput> {
    union {
        char __null_state_;
        struct ObjectInput __val_;
    } ;
    _Bool __engaged_;
};

struct optional<siri::dialogengine::ObjectProperty> {
    union {
        char __null_state_;
        struct ObjectProperty __val_;
    } ;
    _Bool __engaged_;
};

struct set<std::string, std::less<std::string>, std::allocator<std::string>> {
    struct __tree<std::string, std::less<std::string>, std::allocator<std::string>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::string, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> {
                void *__left_;
            } __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<std::string>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<siri::dialogengine::Context> {
    struct Context *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::Dialog> {
    struct Dialog *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::File> {
    struct File *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::Group> {
    struct Group *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<siri::dialogengine::Node> {
    struct Node *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::ObjectProperty> {
    struct ObjectProperty *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::ObjectSchema> {
    struct ObjectSchema *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::Parameter> {
    struct Parameter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<siri::dialogengine::Variable> {
    struct Variable *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int ctx[96];
} CDStruct_43cfb2c2;

// Template types
typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_8e19b51d;

typedef struct optional<siri::dialogengine::ObjectInput> {
    union {
        char __null_state_;
        struct ObjectInput __val_;
    } ;
    _Bool __engaged_;
} optional_fe50ecc7;

typedef struct optional<siri::dialogengine::ObjectProperty> {
    union {
        char __null_state_;
        struct ObjectProperty __val_;
    } ;
    _Bool __engaged_;
} optional_78b343fc;

typedef struct shared_ptr<siri::dialogengine::Context> {
    struct Context *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3beef14e;

typedef struct shared_ptr<siri::dialogengine::Dialog> {
    struct Dialog *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bd7e2fee;

typedef struct shared_ptr<siri::dialogengine::File> {
    struct File *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ab06ee6d;

typedef struct shared_ptr<siri::dialogengine::Group> {
    struct Group *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_730f3692;

typedef struct shared_ptr<siri::dialogengine::Node> {
    struct Node *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_549d7737;

typedef struct shared_ptr<siri::dialogengine::ObjectProperty> {
    struct ObjectProperty *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7568151d;

typedef struct shared_ptr<siri::dialogengine::ObjectSchema> {
    struct ObjectSchema *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5311c20d;

typedef struct shared_ptr<siri::dialogengine::Parameter> {
    struct Parameter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a172c490;

typedef struct shared_ptr<siri::dialogengine::Variable> {
    struct Variable *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_695b9c0c;

