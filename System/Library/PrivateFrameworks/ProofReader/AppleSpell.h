//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface AppleSpell : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    void *_proofReaderConnection;	// 16 = 0x10
    struct __CFDictionary *_databaseConnections;	// 24 = 0x18
    NSMutableDictionary *_languageModelDicts;	// 32 = 0x20
    NSMutableDictionary *_lexiconDict;	// 40 = 0x28
    NSMutableDictionary *_phraseLexiconDict;	// 48 = 0x30
    struct __CFDictionary *_emojiPredictorDict;	// 56 = 0x38
    double _referenceResetTimer;	// 64 = 0x40
    double _lastWriteLanguageModels;	// 72 = 0x48
    double _lastDecayLanguageModels;	// 80 = 0x50
    double _lastResetLanguageModels;	// 88 = 0x58
    double _lastReleaseLanguageModels;	// 96 = 0x60
    double _lastMaintainLanguageModels;	// 104 = 0x68
    unsigned long long _languageModelWordCount;	// 112 = 0x70
    NSMutableDictionary *_localDictionaryArrays;	// 120 = 0x78
    NSMutableArray *_globalDictionaryArray;	// 128 = 0x80
    NSString *_lastLanguage;	// 136 = 0x88
    NSString *_lastCandidateLanguage;	// 144 = 0x90
    NSArray *_userPreferredLanguages;	// 152 = 0x98
    NSArray *_userPreferredLatinLanguages;	// 160 = 0xa0
    NSArray *_userTopLanguages;	// 168 = 0xa8
    NSArray *_userTransliterationLocalizations;	// 176 = 0xb0
    NSArray *_userAdditionalEnglishLocalizations;	// 184 = 0xb8
    NSMutableDictionary *_learnedResponses;	// 192 = 0xc0
    NSMutableDictionary *_probationaryLearnedResponses;	// 200 = 0xc8
    NSMutableDictionary *_probationaryLearnedResponseTimes;	// 208 = 0xd0
    NSMutableArray *_diagnosticInfo;	// 216 = 0xd8
    NSMutableSet *_foundNames;	// 224 = 0xe0
    id _foundNamesLexicon;	// 232 = 0xe8
    id _foundPhrasesLexicon;	// 240 = 0xf0
    double _lastFindNames;	// 248 = 0xf8
    NSMutableSet *_foundShortcuts;	// 256 = 0x100
    NSMutableDictionary *_foundShortcutsDictionary;	// 264 = 0x108
    struct __CFDictionary *_databaseConnectionsByPathAndCode;	// 272 = 0x110
    unsigned long long _reserved1;	// 280 = 0x118
    double _reserved2;	// 288 = 0x120
    NSMutableArray *_reserved3;	// 296 = 0x128
    NSMutableDictionary *_reserved4;	// 304 = 0x130
    double _reserved5;	// 312 = 0x138
    NSMutableArray *_altBundleURLs;	// 320 = 0x140
    NSObject<OS_dispatch_queue> *_assetDataBundleSerialQueue;	// 328 = 0x148
    NSMutableDictionary *_assetDataBundleURLDictionary;	// 336 = 0x150
    NSMutableSet *_updatedDataBundleLanguages;	// 344 = 0x158
    NSURL *_updateBundleURL;	// 352 = 0x160
    NSMutableDictionary *_languageCounts;	// 360 = 0x168
    double _lastLanguageCounts;	// 368 = 0x170
    NSMutableDictionary *_userAdaptationDictionary;	// 376 = 0x178
    NSData *_lastKeyEventArray;	// 384 = 0x180
    unsigned long long *_keyboardHistogram;	// 392 = 0x188
    double _lastKeyboardHistogramRecording;	// 400 = 0x190
    NSMutableArray *_requestedAssets;	// 408 = 0x198
    NSMutableArray *_requestedByCheckerAssets;	// 416 = 0x1a0
    double _lastAssetRequest;	// 424 = 0x1a8
    NSMutableArray *_recordedCorrections;	// 432 = 0x1b0
    NSMutableArray *_recordedTICorrections;	// 440 = 0x1b8
    NSMutableDictionary *_characterLanguageModelDictionary;	// 448 = 0x1c0
    NSMutableDictionary *_transformerLanguageModelDictionary;	// 456 = 0x1c8
    double _probationaryInterval;	// 464 = 0x1d0
    NSMutableArray *_guessRequestTimestamps;	// 472 = 0x1d8
    _Bool _userPrefersUncheckedLatinLanguage;	// 480 = 0x1e0
    _Bool _userPrefersUncheckedCyrillicLanguage;	// 481 = 0x1e1
    _Bool _hasUpdatedDataBundleLanguages;	// 482 = 0x1e2
    _Bool _shouldClearFoundNames;	// 483 = 0x1e3
    _Bool _automaticTextCompletionCollapsed;	// 484 = 0x1e4
    _Bool _automaticTextCompletionEnabled;	// 485 = 0x1e5
    _Bool _foundNamesProhibited;	// 486 = 0x1e6
}

+ (void)resetSharedInstance;	// IMP=0x00000000000015a5
+ (id)sharedInstance;	// IMP=0x0000000000001580
- (_Bool)spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 language:(id)arg4;	// IMP=0x0000000000005a18
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005a06
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x00000000000059f4
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x00000000000059e2
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2 language:(id)arg3;	// IMP=0x00000000000059d0
- (id)spellServer:(id)arg1 stringForInputString:(id)arg2 language:(id)arg3;	// IMP=0x0000000000005742
- (id)spellServer:(id)arg1 suggestWordWithLengthInRange:(struct _NSRange)arg2 language:(id)arg3;	// IMP=0x000000000000572a
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x000000000000570e
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000056fc
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x00000000000056e0
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000056ce
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x00000000000056b2
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000056a0
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5 errorModel:(id)arg6;	// IMP=0x000000000000568e
- (id)spellServer:(id)arg1 suggestContextualGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x000000000000567c
- (id)spellServer:(id)arg1 suggestGuessesForWord:(id)arg2 inLanguage:(id)arg3;	// IMP=0x0000000000005623
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;	// IMP=0x0000000000005607
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;	// IMP=0x00000000000055f5
- (id)spellServer:(id)arg1 generateCandidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;	// IMP=0x00000000000055e3
- (id)spellServer:(id)arg1 checkString:(id)arg2 offset:(unsigned long long)arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long *)arg7;	// IMP=0x0000000000003d68
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 languages:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;	// IMP=0x0000000000003bc3
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;	// IMP=0x0000000000003a72
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5;	// IMP=0x0000000000003929
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 language:(id)arg3 details:(id *)arg4;	// IMP=0x00000000000038b1
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 range:(struct _NSRange)arg3 language:(id)arg4 orthography:(id)arg5 mutableResults:(id)arg6 offset:(unsigned long long)arg7 details:(id *)arg8;	// IMP=0x00000000000033c4
- (_Bool)_checkGrammarInString:(id)arg1 range:(struct _NSRange)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 bufIO:(struct _PR_BUF_IO *)arg6 errorRange:(struct _NSRange *)arg7 details:(id *)arg8;	// IMP=0x0000000000003027
- (void)loadLexiconsAndLanguageModelsForLanguage:(id)arg1;	// IMP=0x0000000000002fd3
- (void)releaseAllLexicons;	// IMP=0x0000000000002fc1
- (void)releaseAllLanguageModels;	// IMP=0x0000000000002faf
- (void)resetAllLanguageModels;	// IMP=0x0000000000002f9d
- (void)setUpdateBundleURL:(id)arg1;	// IMP=0x0000000000002f97
- (void)addAlternateDataBundleURL:(id)arg1;	// IMP=0x0000000000002f91
- (void)releaseDatabaseConnections;	// IMP=0x0000000000002f32
- (void *)databaseConnectionForLanguageObject:(id)arg1;	// IMP=0x0000000000002132
- (id)databasePathForLanguageObject:(id)arg1;	// IMP=0x0000000000001f62
- (void)resetDataBundlesForAllLanguages;	// IMP=0x0000000000001edd
- (void)resetDataBundlesForLanguageObject:(id)arg1;	// IMP=0x0000000000001deb
- (id)dataBundlesForLanguageObject:(id)arg1;	// IMP=0x00000000000017b6
- (id)dataBundle;	// IMP=0x000000000000179d
- (id)init;	// IMP=0x00000000000015d4
- (void)resetTimer;	// IMP=0x00000000000015ce
- (void)timeout:(id)arg1;	// IMP=0x00000000000015c8
- (_Bool)getTransformerModelConditionalProbabilityForString:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000d0b6
- (_Bool)getCharacterModelConditionalProbabilityForString:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000d02f
- (_Bool)getConditionalProbabilityForWord:(id)arg1 context:(id)arg2 language:(id)arg3 probability:(double *)arg4;	// IMP=0x000000000000cea0
- (id)assetDataBundleURLsForLanguageObject:(id)arg1;	// IMP=0x000000000000cda5
- (float)dynamicScoreForWord:(id)arg1 languageObject:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x000000000000cd57
- (float)dynamicScoreForWord:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3;	// IMP=0x000000000000cd0e
- (_Bool)_useAlternateLanguageForRange:(struct _NSRange)arg1 ofString:(id)arg2 languageObject:(id)arg3 tagger:(id)arg4 alternateLanguageObject:(id)arg5 alternateTagger:(id)arg6 appIdentifier:(id)arg7;	// IMP=0x000000000000ca39
- (id)_rankedCandidatesForCandidateList:(id)arg1 languageObject:(id)arg2 tagger:(id)arg3 appIdentifier:(id)arg4 parameterBundles:(id)arg5;	// IMP=0x000000000000af96
- (void)getParameterValue:(double *)arg1 forName:(id)arg2 languageObject:(id)arg3 parameterBundles:(id)arg4 defaultValue:(double)arg5;	// IMP=0x000000000000ae55
- (id)_rankedCandidatesForRange:(struct _NSRange)arg1 candidates:(id)arg2 languageObject:(id)arg3 tagger:(id)arg4 appIdentifier:(id)arg5 allowTransformer:(_Bool)arg6 scoreDictionary:(id)arg7;	// IMP=0x000000000000a622
- (_Bool)_getUnigramProbabilityForString:(id)arg1 languageModel:(id)arg2 probability:(double *)arg3;	// IMP=0x000000000000a58a
- (_Bool)_addLanguageModelCompletionsForPartialWordRange:(struct _NSRange)arg1 languageObject:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 waitForLanguageModel:(_Bool)arg7 allowTransformer:(_Bool)arg8 candidates:(id)arg9 scoreDictionary:(id)arg10 tryTransliteration:(_Bool *)arg11;	// IMP=0x0000000000009655
- (id)languageModelCompletionsForPartialWord:(id)arg1 languageObject:(id)arg2 sender:(id)arg3 appIdentifier:(id)arg4;	// IMP=0x0000000000009529
- (void)_addLanguageModelCompletionsForPrefix:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 capitalized:(_Bool)arg6 candidates:(id)arg7;	// IMP=0x0000000000008ff5
- (void)releaseLanguageModels;	// IMP=0x0000000000008f9f
- (void)resetLanguageModels;	// IMP=0x0000000000008f49
- (void)_releaseLanguageModels;	// IMP=0x0000000000008e6d
- (unsigned long long)_resetLanguageModels;	// IMP=0x0000000000008aa1
- (id)transformerLanguageModelForLanguageObject:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x0000000000008a84
- (id)characterLanguageModelForLanguageObject:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x0000000000008a67
- (id)_NLPLanguageModelWithGranularity:(long long)arg1 forLanguageObject:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x000000000000874c
- (id)_loadNLPLanguageModelWithGranularity:(long long)arg1 forLanguageObject:(id)arg2 onQueue:(id)arg3;	// IMP=0x00000000000084af
- (_Bool)useUnigramProbabilityForLanguageObject:(id)arg1;	// IMP=0x0000000000008396
- (void)loadWordLanguageModelForLanguageObject:(id)arg1;	// IMP=0x000000000000837c
- (_Bool)useTransformerLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x00000000000082e5
- (_Bool)useCharacterLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x0000000000008264
- (_Bool)useWordLanguageModelForLanguageObject:(id)arg1 tagger:(id)arg2 appIdentifier:(id)arg3;	// IMP=0x00000000000081dd
- (id)wordLanguageModelForLanguageObject:(id)arg1 appIdentifier:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x0000000000008195
- (id)wordLanguageModelForLanguage:(id)arg1 appIdentifier:(id)arg2 waitForResult:(_Bool)arg3;	// IMP=0x0000000000007dac
- (id)modelCreationQueue;	// IMP=0x0000000000007d09
- (id)_loadWordLanguageModelForLanguage:(id)arg1 localization:(id)arg2 appIdentifier:(id)arg3 onQueue:(id)arg4;	// IMP=0x00000000000078a7
- (void)_readLanguageModelParametersFromDictionary:(id)arg1;	// IMP=0x000000000000743f
- (void)_readLanguageModelParametersFromDefaults;	// IMP=0x0000000000007121
- (id)languageModelLocalizationForLanguage:(id)arg1;	// IMP=0x0000000000007108
- (unsigned long long)_contextLengthForRange:(struct _NSRange)arg1 languageObject:(id)arg2 tagger:(id)arg3 languageModel:(id)arg4 maxContextLength:(unsigned long long)arg5 context:(unsigned int *)arg6 cleanOffset:(unsigned long long *)arg7 cleanContextRange:(struct _NSRange *)arg8 lastTokenRange:(struct _NSRange *)arg9 lastTokenID:(unsigned int *)arg10;	// IMP=0x0000000000006a9e
- (id)backgroundMaintenanceQueue;	// IMP=0x0000000000006a48
- (_Bool)shouldBlockWord:(id)arg1 languageObject:(id)arg2;	// IMP=0x000000000000691a
- (id)_stringForCompletion:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 prefix:(id)arg6 capitalized:(_Bool)arg7;	// IMP=0x000000000000668f
- (id)_stringForTokenIDs:(const unsigned int *)arg1 tokenCount:(unsigned long long)arg2 entryString:(id)arg3 languageModel:(id)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 prefix:(id)arg8 capitalized:(_Bool)arg9;	// IMP=0x000000000000611f
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 terminatorTokenID:(unsigned int)arg4;	// IMP=0x00000000000060fd
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 languageObject:(id)arg3 createIfAbsent:(_Bool)arg4 terminatorTokenID:(unsigned int)arg5;	// IMP=0x0000000000005f2e
- (id)_standardizedLanguageModelStringForString:(id)arg1;	// IMP=0x0000000000005cdb
- (id)sentenceTerminatorCharacterSet;	// IMP=0x0000000000005c7e
- (void)clearCaches;	// IMP=0x00000000000101b4
- (id)parameterBundleForLanguageObject:(id)arg1;	// IMP=0x0000000000010090
- (id)sentenceCorrectionsDictionaryForLanguageObject:(id)arg1;	// IMP=0x0000000000010079
- (id)phraseCorrectionsDictionaryForLanguageObject:(id)arg1;	// IMP=0x0000000000010062
- (id)capitalizationDictionaryArrayForLanguageObject:(id)arg1;	// IMP=0x000000000000fee0
- (id)guessesDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000fec9
- (id)autocorrectionDictionaryForLanguageObject:(id)arg1;	// IMP=0x000000000000feb5
- (id)dictionaryForLanguageObject:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x000000000000fd6c
- (_Bool)checkNameWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 globalOnly:(_Bool)arg4;	// IMP=0x000000000000fa74
- (_Bool)checkWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 index:(unsigned long long)arg4;	// IMP=0x000000000000f951
- (id)localDictionaryArrayForLanguageObject:(id)arg1;	// IMP=0x000000000000f3c3
- (id)globalDictionaryArray;	// IMP=0x000000000000f1ae
- (id)taggerForLanguageObject:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000016a56
- (id)spellServer:(id)arg1 candidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;	// IMP=0x000000000002710f
- (_Bool)noSuggestForCompletion:(id)arg1 languageObject:(id)arg2 appIdentifier:(id)arg3 alreadyCapitalized:(_Bool)arg4;	// IMP=0x00000000000270bf
- (void)personalizeEmojiArray:(id)arg1;	// IMP=0x0000000000026f02
- (id)spellServer:(id)arg1 suggestWordWithMinimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 language:(id)arg4;	// IMP=0x000000000002663d
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x0000000000026172
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x000000000002590c
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x000000000002562f
- (id)_correctionResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 languages:(id)arg8 connection:(struct _PR_DB_IO *)arg9 flags:(unsigned long long)arg10 keyEventArray:(id)arg11 selectedRangeValue:(id)arg12 parameterBundles:(id)arg13 previousLetter:(unsigned short)arg14 nextLetter:(unsigned short)arg15 extraMisspellingCount:(unsigned long long)arg16 extraCorrectionCount:(unsigned long long *)arg17;	// IMP=0x0000000000033a6d
- (id)_correctionResultForWord:(id)arg1 replacementRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 capitalize:(_Bool)arg6 isCapitalized:(_Bool)arg7 isSecondCapitalized:(_Bool)arg8 hasCurlyApostrophe:(_Bool)arg9 capitalizationLocale:(id)arg10 proposedCorrection:(id)arg11;	// IMP=0x0000000000033289
- (_Bool)_permitCorrection:(id)arg1 languageObject:(id)arg2 flags:(unsigned long long)arg3 isCapitalized:(_Bool)arg4 typologyCorrection:(id)arg5;	// IMP=0x0000000000033066
- (id)_spaceInsertionCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 flags:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 typologyCorrection:(id)arg8;	// IMP=0x000000000003257d
- (id)_connectionCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 flags:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 accentCorrectionOnly:(_Bool)arg8 isAbbreviation:(_Bool *)arg9 trySpaceInsertion:(_Bool *)arg10 hasAccentCorrections:(_Bool *)arg11 candidateList:(id)arg12 typologyCorrection:(id)arg13;	// IMP=0x000000000003174b
- (id)_umlautCorrectionForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 typologyCorrection:(id)arg6;	// IMP=0x000000000003127f
- (_Bool)_prohibitCorrectionBasedOnCountsForString:(id)arg1 lowercaseString:(id)arg2 appIdentifier:(id)arg3 languageObject:(id)arg4 typologyCorrection:(id)arg5;	// IMP=0x0000000000031049
- (id)_initialCorrectionForString:(id)arg1 lowercaseString:(id)arg2 isFirstSecondCapitalized:(_Bool)arg3 dictionary:(id)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6;	// IMP=0x0000000000030e0a
- (_Bool)_acceptWithoutAccentForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4;	// IMP=0x0000000000030c13
- (id)_accentCorrectionResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 onlyAtInsertionPoint:(_Bool)arg6 capitalize:(_Bool)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;	// IMP=0x00000000000303cd
- (_Bool)wordIsAlreadyAccented:(id)arg1;	// IMP=0x0000000000030294
- (id)_phraseCapitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 currentWordRange:(struct _NSRange)arg3 inString:(id)arg4 offset:(unsigned long long)arg5 languageObject:(id)arg6 onlyAtInsertionPoint:(_Bool)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;	// IMP=0x000000000002ff85
- (id)_capitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 languageObject:(id)arg5 onlyAtInsertionPoint:(_Bool)arg6 keyEventArray:(id)arg7 selectedRangeValue:(id)arg8;	// IMP=0x000000000002fef2
- (_Bool)findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 selectedRangeValue:(id)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;	// IMP=0x000000000002fc50
- (_Bool)_findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 endingAtIndex:(unsigned long long)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;	// IMP=0x000000000002f64d
- (void)_addGuessesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 minAutocorrectionLength:(unsigned long long)arg6 previousLetter:(unsigned short)arg7 nextLetter:(unsigned short)arg8 basicOnly:(_Bool)arg9 toGuesses:(id)arg10;	// IMP=0x000000000002c382
- (char *)_validatedGuessWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkUser:(_Bool)arg6 additionalBuffer:(char *)arg7;	// IMP=0x000000000002c20b
- (id)vietnameseModificationForWord:(id)arg1;	// IMP=0x000000000002bcdb
- (void)enumerateCorrectionEntriesForWord:(id)arg1 maxCorrections:(unsigned long long)arg2 inLexiconForLanguageObject:(id)arg3 withBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000600e6
- (void)enumerateEntriesForWord:(id)arg1 inLexiconForLanguageObject:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000005ff4f
- (id)phraseMatching:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005ff0c
- (_Bool)getMetaFlagsForWord:(id)arg1 inLexiconForLanguageObject:(id)arg2 metaFlags:(unsigned int *)arg3 otherMetaFlags:(unsigned int *)arg4;	// IMP=0x000000000005feb5
- (void)enumerateCorrectionEntriesForWord:(id)arg1 maxCorrections:(unsigned long long)arg2 inLexiconForLanguage:(id)arg3 withBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000005fd19
- (void)enumerateEntriesForWord:(id)arg1 inLexiconForLanguage:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000005fb82
- (id)phraseMatching:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005f934
- (_Bool)getMetaFlagsForWord:(id)arg1 inLexiconForLanguage:(id)arg2 metaFlags:(unsigned int *)arg3 otherMetaFlags:(unsigned int *)arg4;	// IMP=0x000000000005f204
- (_Bool)validateWord:(id)arg1 inLexicon:(id)arg2;	// IMP=0x000000000005f1a8
- (_Bool)validateUntilLearnedWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f181
- (_Bool)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f15a
- (_Bool)validateVariantWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f139
- (_Bool)validateAdditionalWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f118
- (_Bool)validateWord:(id)arg1 inLexiconForLanguageObject:(id)arg2;	// IMP=0x000000000005f0f7
- (_Bool)validateWord:(id)arg1 inLexiconsForLanguageObject:(id)arg2 requiredMetaFlags:(unsigned int)arg3 alternativeRequiredMetaFlags:(unsigned int)arg4 prohibitedMetaFlags:(unsigned int)arg5 caseInsensitive:(_Bool)arg6;	// IMP=0x000000000005f068
- (_Bool)validateUntilLearnedWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005f00a
- (_Bool)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005efaf
- (_Bool)validateVariantWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005ef54
- (_Bool)validateAdditionalWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005eef9
- (_Bool)validateWord:(id)arg1 inLexiconForLanguage:(id)arg2;	// IMP=0x000000000005ee9e
- (_Bool)validateWord:(id)arg1 inLexicons:(id)arg2 forLanguage:(id)arg3 requiredMetaFlags:(unsigned int)arg4 alternativeRequiredMetaFlags:(unsigned int)arg5 prohibitedMetaFlags:(unsigned int)arg6 caseInsensitive:(_Bool)arg7;	// IMP=0x000000000005e9fe
- (void)updateAllLexicons;	// IMP=0x000000000005e985
- (void)updateLexiconsForLanguageObjectIfNecessary:(id)arg1;	// IMP=0x000000000005e948
- (void)updateLexiconsForLanguageObject:(id)arg1;	// IMP=0x000000000005e914
- (void)updateLexiconsForLanguageIfNecessary:(id)arg1;	// IMP=0x000000000005e899
- (void)updateLexiconsForLanguage:(id)arg1;	// IMP=0x000000000005e718
- (id)_phraseLexiconsForLanguage:(id)arg1;	// IMP=0x000000000005e701
- (id)_phraseLexiconsForLanguage:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x000000000005e415
- (id)_loadPhraseLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;	// IMP=0x000000000005e131
- (unsigned long long)loadedLexiconsCountForLanguageObject:(id)arg1;	// IMP=0x000000000005e0ee
- (id)lexiconForLanguageObject:(id)arg1;	// IMP=0x000000000005e099
- (id)_lexiconsForLanguageObject:(id)arg1;	// IMP=0x000000000005e060
- (id)lexiconForLanguage:(id)arg1;	// IMP=0x000000000005e022
- (id)_lexiconsForLanguage:(id)arg1;	// IMP=0x000000000005e00b
- (id)_lexiconsForLanguage:(id)arg1 waitForResult:(_Bool)arg2;	// IMP=0x000000000005dd1f
- (id)_loadLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;	// IMP=0x000000000005d733
- (id)backgroundLoadingQueue;	// IMP=0x000000000005d6dd
- (id)_phraseLexiconPathForLanguage:(id)arg1;	// IMP=0x000000000005d69e
- (id)_lexiconPathForLanguageObject:(id)arg1 type:(id)arg2;	// IMP=0x000000000005d619
- (id)_lexiconPathForLocalization:(id)arg1 type:(id)arg2;	// IMP=0x000000000005d438
- (void)enumerateAssetDataItemsForLocale:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000005d3b8
- (_Bool)testTurkishSuffixationPattern:(id)arg1;	// IMP=0x000000000006f43a
- (unsigned long long)numberOfTurkishSuffixPointsInBuffer:(char *)arg1 length:(unsigned long long)arg2 maxSuffixPoints:(unsigned long long)arg3 suffixPoints:(CDStruct_b54abf8e *)arg4;	// IMP=0x000000000006f290
- (_Bool)_spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 languageObject:(id)arg4;	// IMP=0x00000000000994d0
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 range:(struct _NSRange)arg3 languages:(id)arg4 topLanguages:(id)arg5 orthography:(id)arg6 checkOrthography:(_Bool)arg7 mutableResults:(id)arg8 offset:(unsigned long long)arg9 autocorrect:(_Bool)arg10 onlyAtInsertionPoint:(_Bool)arg11 initialCapitalize:(_Bool)arg12 autocapitalize:(_Bool)arg13 keyEventArray:(id)arg14 appIdentifier:(id)arg15 selectedRangeValue:(id)arg16 parameterBundles:(id)arg17 wordCount:(long long *)arg18 countOnly:(_Bool)arg19 correction:(id *)arg20;	// IMP=0x00000000000956a0
- (id)_orthographyByModifyingOrthography:(id)arg1 withLatinLanguage:(id)arg2;	// IMP=0x00000000000955fc
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkNames:(_Bool)arg8 checkHyphens:(_Bool)arg9 checkIntercaps:(_Bool)arg10 checkOptions:(_Bool)arg11 depth:(unsigned long long)arg12;	// IMP=0x0000000000095597
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkNames:(_Bool)arg9 checkHyphens:(_Bool)arg10 checkIntercaps:(_Bool)arg11 checkOptions:(_Bool)arg12 depth:(unsigned long long)arg13;	// IMP=0x0000000000095525
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 depth:(unsigned long long)arg14;	// IMP=0x00000000000954a5
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 forCorrection:(_Bool)arg14 depth:(unsigned long long)arg15;	// IMP=0x0000000000091ed6
- (id)stringByReducingArabicAlefVariantsInString:(id)arg1;	// IMP=0x0000000000091cc9
- (id)stringByRemovingArabicDiacriticsFromString:(id)arg1;	// IMP=0x0000000000091ba0
- (_Bool)checkSpecialPrefixesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2;	// IMP=0x000000000009196c
- (_Bool)validateAbbreviationOrNumberWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5;	// IMP=0x00000000000914ec
- (_Bool)validateWordPrefixBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x0000000000091368
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x0000000000091239
- (_Bool)checkNoCapAbbreviationWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3;	// IMP=0x00000000000910c5
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3;	// IMP=0x00000000000910b0
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 alreadyCapitalized:(_Bool)arg4;	// IMP=0x000000000009108a
- (unsigned long long)acceptabilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 forPrediction:(_Bool)arg4 alreadyCapitalized:(_Bool)arg5;	// IMP=0x000000000009106c
- (unsigned long long)acceptabilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 languageObject:(id)arg3 forPrediction:(_Bool)arg4 alreadyCapitalized:(_Bool)arg5 depth:(unsigned long long)arg6;	// IMP=0x0000000000090b1c
- (_Bool)_checkEnglishGrammarInString:(id)arg1 range:(struct _NSRange)arg2 indexIntoBuffer:(unsigned long long)arg3 bufferLength:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 bufIO:(struct _PR_BUF_IO *)arg8 retval:(int *)arg9 errorRange:(struct _NSRange *)arg10 details:(id *)arg11;	// IMP=0x00000000000a3d95
- (id)_detailWithRange:(struct _NSRange)arg1 description:(id)arg2 corrections:(id)arg3;	// IMP=0x00000000000a3d0d
- (id)_modifiedGrammarDescriptionForDescription:(id)arg1;	// IMP=0x00000000000a3ae8
- (id)contextAlternativeAnnotatedStringsForZhuyinInputString:(id)arg1;	// IMP=0x00000000000aa194
- (void)_addContextAlternativesForZhuyinInputString:(id)arg1 modifications:(id)arg2 afterIndex:(unsigned long long)arg3 delta:(long long)arg4 toArray:(id)arg5;	// IMP=0x00000000000a9d16
- (id)spellServer:(id)arg1 suggestGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5 errorModel:(id)arg6;	// IMP=0x00000000000afc21
- (id)spellServer:(id)arg1 suggestContextualGuessDictionariesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x00000000000afa84
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;	// IMP=0x00000000000af989
- (id)_spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4 options:(id)arg5;	// IMP=0x00000000000af8e2
- (id)_spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 languageObject:(id)arg4 options:(id)arg5 tagger:(id)arg6 errorModel:(id)arg7 guessesDictionaries:(id)arg8;	// IMP=0x00000000000ade76
- (void)addLexiconGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 minCorrectionLength:(unsigned long long)arg5 minExtendedCorrectionLength:(unsigned long long)arg6 isCapitalized:(_Bool)arg7 stopAfterFreeInsertions:(_Bool)arg8 toGuesses:(id)arg9;	// IMP=0x00000000000ad9ed
- (void)_addSpaceInsertionGuessesForWord:(id)arg1 sender:(id)arg2 buffer:(char *)arg3 length:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 isCapitalized:(_Bool)arg7 checkUser:(_Bool)arg8 oneLetterWords:(const char *)arg9 twoLetterWords:(const char *)arg10 candidateList:(id)arg11;	// IMP=0x00000000000ad231
- (void)_addAdditionalGuessesForWord:(id)arg1 sender:(id)arg2 buffer:(char *)arg3 length:(unsigned long long)arg4 languageObject:(id)arg5 connection:(struct _PR_DB_IO *)arg6 accents:(const char *)arg7 isCapitalized:(_Bool)arg8 isAllCaps:(_Bool)arg9 isAllAlpha:(_Bool)arg10 hasLigature:(_Bool)arg11 suggestPossessive:(_Bool)arg12 checkUser:(_Bool)arg13 checkHyphens:(_Bool)arg14 candidateList:(id)arg15;	// IMP=0x00000000000ab35f
- (void)_addConnectionGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 connection:(struct _PR_DB_IO *)arg5 candidateList:(id)arg6;	// IMP=0x00000000000aac1c
- (void)_addTwoLetterWordGuessesForWord:(id)arg1 buffer:(char *)arg2 length:(unsigned long long)arg3 languageObject:(id)arg4 isCapitalized:(_Bool)arg5 isAllCaps:(_Bool)arg6 twoLetterWords:(const char *)arg7 candidateList:(id)arg8;	// IMP=0x00000000000aa7e2
- (id)spellServer:(id)arg1 finalModificationsForPinyinInputString:(id)arg2;	// IMP=0x00000000000ba66a
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000ba650
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2;	// IMP=0x00000000000ba633
- (id)spellServer:(id)arg1 _retainedFinalModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000ba48f
- (id)spellServer:(id)arg1 _retainedModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;	// IMP=0x00000000000ba107
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2;	// IMP=0x00000000000ba0ed
- (id)spellServer:(id)arg1 _retainedCorrectionsForPinyinInputString:(id)arg2;	// IMP=0x00000000000b9d47
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b9d2d
- (id)spellServer:(id)arg1 _retainedPrefixesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b9142
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b9122
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2;	// IMP=0x00000000000b9105
- (id)spellServer:(id)arg1 _retainedAlternativesForPinyinInputString:(id)arg2 extended:(_Bool)arg3;	// IMP=0x00000000000b8a82
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)arg1 depth:(unsigned long long)arg2;	// IMP=0x00000000000b859a
- (id)_retainedAlternativesByCombiningAlternatives:(id)arg1 withAlternatives:(id)arg2 andAddingAlternatives:(id)arg3;	// IMP=0x00000000000b80df
- (id)_pinyinStringByCombiningPinyinString:(id)arg1 withPinyinString:(id)arg2;	// IMP=0x00000000000b7a51
- (unsigned long long)_getSplitIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 forPinyinInputString:(id)arg3;	// IMP=0x00000000000b782a
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)arg1;	// IMP=0x00000000000b7060
- (void)addModifiedPartialPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 prePrevPrevIndex:(unsigned long long)arg6 startingModificationsAt:(unsigned long long)arg7 inBuffer:(char *)arg8 length:(unsigned long long)arg9 initialSyllableCount:(unsigned long long)arg10 initialScore:(unsigned long long)arg11 prevScore:(unsigned long long)arg12 prevPrevScore:(unsigned long long)arg13 lastSyllableScore:(unsigned long long)arg14;	// IMP=0x00000000000b681b
- (void)addModifiedPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 startingModificationsAt:(unsigned long long)arg6 inBuffer:(char *)arg7 length:(unsigned long long)arg8 initialSyllableCount:(unsigned long long)arg9 initialScore:(unsigned long long)arg10 prevScore:(unsigned long long)arg11 prevPrevScore:(unsigned long long)arg12 lastSyllableScore:(unsigned long long)arg13 couldBeAbbreviatedPinyin:(_Bool)arg14;	// IMP=0x00000000000b347a
- (void)addSpecialModifiedPinyinToArray:(id)arg1 inBuffer:(char *)arg2 length:(unsigned long long)arg3 atEnd:(_Bool)arg4;	// IMP=0x00000000000b2717
- (id)englishStringFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x00000000000b26c6
- (id)englishStringsFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;	// IMP=0x00000000000b1d22
- (id)contextAlternativeAnnotatedStringsForPinyinInputString:(id)arg1;	// IMP=0x00000000000c0e00
- (void)_addContextAlternativesForPinyinInputString:(id)arg1 modifications:(id)arg2 afterIndex:(unsigned long long)arg3 delta:(long long)arg4 toArray:(id)arg5;	// IMP=0x00000000000c085f
- (_Bool)inputStringIsFullOrAbbreviatedPinyin:(id)arg1;	// IMP=0x00000000000c0792
- (_Bool)inputStringIsPinyin:(id)arg1 allowPartialLastSyllable:(_Bool)arg2;	// IMP=0x00000000000c0643
- (id)spellServer:(id)arg1 suggestGuessesForKoreanWordRange:(struct _NSRange)arg2 inString:(id)arg3 options:(id)arg4;	// IMP=0x00000000000c196d
- (id)_correctionResultForKoreanString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 keyEventArray:(id)arg8;	// IMP=0x00000000000c1965
- (void)addGuessesForKoreanWord:(id)arg1 includeAdditionalGuesses:(_Bool)arg2 toGuesses:(id)arg3;	// IMP=0x00000000000c156f
- (id)externalStringForKoreanInternalString:(id)arg1;	// IMP=0x00000000000c14d4
- (id)internalStringForKoreanExternalString:(id)arg1;	// IMP=0x00000000000c1438

@end

