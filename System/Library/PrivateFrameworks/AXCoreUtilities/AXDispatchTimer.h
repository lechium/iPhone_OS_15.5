//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface AXDispatchTimer : NSObject
{
    _Bool _active;	// 8 = 0x8
    _Bool _pending;	// 9 = 0x9
    _Bool _cancelled;	// 10 = 0xa
    _Bool _automaticallyCancelPendingBlockUponSchedulingNewBlock;	// 11 = 0xb
    _Bool _useWallTime;	// 12 = 0xc
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 16 = 0x10
    NSObject<OS_dispatch_source> *_dispatchTimer;	// 24 = 0x18
    NSString *_label;	// 32 = 0x20
    CDUnknownBlockType _processBlock;	// 40 = 0x28
    CDUnknownBlockType _cancelBlock;	// 48 = 0x30
}

- (void).cxx_destruct;	// IMP=0x0000000000002fdf
@property(copy) CDUnknownBlockType cancelBlock; // @synthesize cancelBlock=_cancelBlock;
@property(copy) CDUnknownBlockType processBlock; // @synthesize processBlock=_processBlock;
@property(retain, nonatomic) NSString *label; // @synthesize label=_label;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *dispatchTimer; // @synthesize dispatchTimer=_dispatchTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) _Bool useWallTime; // @synthesize useWallTime=_useWallTime;
@property(nonatomic) _Bool automaticallyCancelPendingBlockUponSchedulingNewBlock; // @synthesize automaticallyCancelPendingBlockUponSchedulingNewBlock=_automaticallyCancelPendingBlockUponSchedulingNewBlock;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic, getter=isPending) _Bool pending; // @synthesize pending=_pending;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
- (id)description;	// IMP=0x0000000000002e3f
- (void)cancel;	// IMP=0x0000000000002d0e
- (void)_reallyCancel;	// IMP=0x0000000000002c3f
- (void)afterDelay:(double)arg1 processBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000002a1d
- (void)afterDelay:(double)arg1 processBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000002a09
- (void)_afterDelay:(double)arg1 processBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000265c
- (void)dealloc;	// IMP=0x000000000000261e
- (id)initWithTargetSerialQueue:(id)arg1;	// IMP=0x000000000000241a
- (id)init;	// IMP=0x0000000000002406

@end

