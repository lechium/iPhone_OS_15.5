//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PhysicsKit/NSCopying-Protocol.h>
#import <PhysicsKit/NSSecureCoding-Protocol.h>

@class NSArray, NSMutableArray, PKPhysicsWorld;
@protocol NSObject;

@interface PKPhysicsBody : NSObject <NSCopying, NSSecureCoding>
{
    id <NSObject> _representedObject;	// 8 = 0x8
    struct b2BodyDef _bodyDef;	// 16 = 0x10
    struct b2Body *_body;	// 96 = 0x60
    struct PKCField *_field;	// 104 = 0x68
    int _dynamicType;	// 112 = 0x70
    struct vector<PKPhysicsShape *, std::allocator<PKPhysicsShape *>> _shapes;	// 120 = 0x78
    PKPhysicsWorld *_world;	// 144 = 0x90
    NSMutableArray *_joints;	// 152 = 0x98
    _Bool _inUse;	// 160 = 0xa0
    int _shapeType;	// 164 = 0xa4
    shared_ptr_2aaf3a07 _pathPtr;	// 168 = 0xa8
    shared_ptr_639e7c03 _quadTree;	// 184 = 0xb8
    struct CGPoint _p0;	// 200 = 0xc8
    struct CGPoint _p1;	// 216 = 0xd8
    struct CGSize _size;	// 232 = 0xe8
    double _radius;	// 248 = 0xf8
    double _edgeRadius;	// 256 = 0x100
    struct CGImage *_mask;	// 264 = 0x108
    shared_ptr_2aaf3a07 _outline;	// 272 = 0x110
    _Bool _isPinned;	// 288 = 0x120
    _Bool _allowsRotation;	// 289 = 0x121
    CDUnknownBlockType _postStepBlock;	// 296 = 0x128
}

+ (id)bodyWithEdgeLoopFromPath:(struct CGPath *)arg1;	// IMP=0x00000000000071f7
+ (id)bodyWithEdgeChainFromPath:(struct CGPath *)arg1;	// IMP=0x00000000000071c1
+ (id)bodyWithPolygonFromPath:(struct CGPath *)arg1;	// IMP=0x000000000000707f
+ (id)bodyWithEdgeFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0000000000007026
+ (id)bodyWithRectangleOfSize:(struct CGSize)arg1 center:(struct CGPoint)arg2 edgeRadius:(double)arg3;	// IMP=0x0000000000006fc0
+ (id)bodyWithRectangleOfSize:(struct CGSize)arg1 center:(struct CGPoint)arg2;	// IMP=0x0000000000006f67
+ (id)bodyWithRectangleOfSize:(struct CGSize)arg1 edgeRadius:(double)arg2;	// IMP=0x0000000000006f08
+ (id)bodyWithRectangleOfSize:(struct CGSize)arg1;	// IMP=0x0000000000006eb3
+ (id)bodyWithCircleOfRadius:(double)arg1 center:(struct CGPoint)arg2;	// IMP=0x0000000000006e64
+ (id)bodyWithCircleOfRadius:(double)arg1;	// IMP=0x0000000000006e19
+ (id)bodyWithBodies:(id)arg1;	// IMP=0x0000000000006dbb
+ (id)initWithMarchingCubes:(void *)arg1 pixelFrame:(struct CGRect)arg2;	// IMP=0x0000000000006d9a
+ (id)initWithQuadTree:(id)arg1;	// IMP=0x0000000000006a71
+ (id)bodyWithOutline:(shared_ptr_2aaf3a07)arg1 offset:(struct CGPoint)arg2;	// IMP=0x0000000000002749
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000001e0e
- (id).cxx_construct;	// IMP=0x00000000000096b5
- (void).cxx_destruct;	// IMP=0x0000000000009639
@property(copy, nonatomic) CDUnknownBlockType postStepBlock; // @synthesize postStepBlock=_postStepBlock;
- (id)allContactedBodies;	// IMP=0x0000000000009574
- (id)description;	// IMP=0x0000000000009315
- (id)_descriptionFormat;	// IMP=0x0000000000009295
- (id)_descriptionClassName;	// IMP=0x0000000000009288
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000087fe
- (id)copy;	// IMP=0x00000000000087d7
@property(nonatomic, getter=isDynamic) _Bool dynamic;
@property(nonatomic) double charge;
@property(nonatomic) double friction;
@property(nonatomic) double restitution;
@property(nonatomic) double radius;
- (void)reapplyScale:(double)arg1 yScale:(double)arg2;	// IMP=0x0000000000008552
@property(readonly, nonatomic) double area;
@property(nonatomic) double density;
@property(nonatomic) double mass;
@property(readonly, nonatomic) NSArray *joints;
@property(nonatomic, getter=isResting) _Bool resting;
@property(nonatomic) _Bool allowsRotation;
@property(nonatomic) double angularVelocity;
@property(nonatomic) struct CGVector velocity;
@property(nonatomic) unsigned int contactTestBitMask;
@property(nonatomic) unsigned int collisionBitMask;
@property(nonatomic) unsigned int fieldBitMask;
@property(nonatomic) unsigned int categoryBitMask;
@property(nonatomic) _Bool affectedByGravity;
@property(nonatomic) _Bool usesPreciseCollisionDetection;
- (void)applyUnscaledImpulse:(struct CGVector)arg1;	// IMP=0x0000000000007d4e
- (void)applyUnscaledImpulse:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000007c15
- (void)applyUnscaledForce:(struct CGVector)arg1;	// IMP=0x0000000000007b83
- (void)applyUnscaledForce:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000007a5d
- (void)applyAngularImpulse:(double)arg1;	// IMP=0x00000000000079ee
- (void)applyImpulse:(struct CGVector)arg1;	// IMP=0x00000000000078c2
- (void)applyImpulse:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000007760
- (void)applyTorque:(double)arg1;	// IMP=0x00000000000076f9
- (void)applyForce:(struct CGPoint)arg1;	// IMP=0x0000000000007638
- (void)applyForce:(struct CGPoint)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00000000000074e9
@property(nonatomic) double angularDamping;
@property(nonatomic) double linearDamping;
@property(nonatomic) double rotation;
- (_Bool)_allowSleep;	// IMP=0x00000000000073b8
- (void)set_allowSleep:(_Bool)arg1;	// IMP=0x0000000000007390
@property(nonatomic) struct CGPoint position;
@property(nonatomic) _Bool pinned;
@property(nonatomic) __weak id <NSObject> representedObject;
- (id)initWithEdgeLoopFromPath:(struct CGPath *)arg1;	// IMP=0x00000000000065f9
- (id)initWithEdgeChainFromPath:(struct CGPath *)arg1;	// IMP=0x0000000000006522
- (id)initWithPolygonFromPath:(struct CGPath *)arg1;	// IMP=0x0000000000006437
- (id)initWithEdgeFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x00000000000063d2
- (id)initWithRectangleOfSize:(struct CGSize)arg1 center:(struct CGPoint)arg2 edgeRadius:(float)arg3;	// IMP=0x0000000000005ffb
- (id)initWithRectangleOfSize:(struct CGSize)arg1 center:(struct CGPoint)arg2;	// IMP=0x0000000000005fe0
- (id)initWithRectangleOfSize:(struct CGSize)arg1;	// IMP=0x0000000000005fb5
- (id)initWithCircleOfRadius:(double)arg1 center:(struct CGPoint)arg2;	// IMP=0x0000000000005f53
- (id)initWithCircleOfRadius:(double)arg1;	// IMP=0x0000000000005f30
- (id)initWithBodies:(id)arg1;	// IMP=0x0000000000005b56
- (void)dealloc;	// IMP=0x0000000000005a98
- (id)init;	// IMP=0x00000000000058ed
- (_Bool)isEqualToBody:(id)arg1;	// IMP=0x00000000000054eb
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000035e0
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000002d4e
- (void)clearBox2DData;	// IMP=0x00000000000026fb
@property(readonly, nonatomic) void *volume;
@property(nonatomic) shared_ptr_2aaf3a07 outline;
@property(nonatomic) struct b2Body *_body;
@property(nonatomic) struct b2BodyDef _bodyDef;
- (void)set_inUse:(_Bool)arg1;	// IMP=0x00000000000098ad
- (_Bool)_inUse;	// IMP=0x00000000000098a1
- (void)set_joints:(id)arg1;	// IMP=0x000000000000988d
- (id)_joints;	// IMP=0x000000000000987c
- (shared_ptr_639e7c03)_quadTree;	// IMP=0x0000000000009854
- (id)_world;	// IMP=0x000000000000983b
- (void)set_world:(id)arg1;	// IMP=0x0000000000009827
- (void)setActive:(_Bool)arg1;	// IMP=0x000000000000971d
- (_Bool)active;	// IMP=0x0000000000009702
@property(readonly, nonatomic) void *_shapes;

@end

