//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <VectorKit/MDRenderTarget-Protocol.h>

@class NSString;
@protocol GGLRenderQueueSource;

__attribute__((visibility("hidden")))
@interface GGLImageCanvas : NSObject <MDRenderTarget>
{
    struct CGSize _size;	// 8 = 0x8
    double _contentScale;	// 24 = 0x18
    struct CGRect _bounds;	// 32 = 0x20
    _Bool _canMakeImage;	// 64 = 0x40
    _Bool _recreateRenderTarget;	// 65 = 0x41
    _Bool _allowAlpha;	// 66 = 0x42
    _Bool _supportsFramebufferFetch;	// 67 = 0x43
    id <GGLRenderQueueSource> _renderSource;	// 72 = 0x48
    struct unique_ptr<ggl::IOSurfaceTexture, std::default_delete<ggl::IOSurfaceTexture>> _flippedSurfaceTexture;	// 80 = 0x50
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _flippedRenderTarget;	// 88 = 0x58
    struct unique_ptr<(anonymous namespace)::YFlipPass, std::default_delete<(anonymous namespace)::YFlipPass>> _yFlipPass;	// 96 = 0x60
    struct RenderTargetFormat _sRGBFormat;	// 104 = 0x68
    struct RenderTargetFormat _resolvedRenderTargetFormat;	// 136 = 0x88
    struct shared_ptr<ggl::Device> _device;	// 168 = 0xa8
    void *_renderer;	// 184 = 0xb8
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _sRGBRenderTarget;	// 192 = 0xc0
    struct shared_ptr<ggl::Texture2DAbstract> _sRGBColorBuffer;	// 200 = 0xc8
    struct unique_ptr<ggl::RenderBuffer, std::default_delete<ggl::RenderBuffer>> _depthStencilBuffer;	// 216 = 0xd8
    struct array<std::shared_ptr<ggl::RenderBuffer>, 3UL> _sRGBColorTextures;	// 224 = 0xe0
    struct RenderTargetFormat _linearFormat;	// 272 = 0x110
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _linearRenderTarget;	// 304 = 0x130
    struct shared_ptr<ggl::Texture2DAbstract> _linearColorBuffer;	// 312 = 0x138
    struct array<std::shared_ptr<ggl::RenderBuffer>, 3UL> _linearColorTextures;	// 328 = 0x148
    struct unique_ptr<ggl::RenderTarget, std::default_delete<ggl::RenderTarget>> _blitRenderTarget;	// 376 = 0x178
    struct RenderTargetFormat _blitFormat;	// 384 = 0x180
    _Bool _useMultisampling;	// 416 = 0x1a0
    struct shared_ptr<ggl::Texture> _msaaResolveBuffer;	// 424 = 0x1a8
    unsigned long long _signpostId;	// 440 = 0x1b8
}

- (id).cxx_construct;	// IMP=0x00000000004d94a1
- (void).cxx_destruct;	// IMP=0x00000000004d9347
@property(nonatomic) _Bool allowAlpha; // @synthesize allowAlpha=_allowAlpha;
@property(readonly, nonatomic) _Bool multiSample; // @synthesize multiSample=_useMultisampling;
@property(nonatomic) id <GGLRenderQueueSource> renderSource; // @synthesize renderSource=_renderSource;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) double contentScale; // @synthesize contentScale=_contentScale;
@property(readonly, nonatomic) _Bool supportsFramebufferFetch; // @synthesize supportsFramebufferFetch=_supportsFramebufferFetch;
- (void)didDrawView;	// IMP=0x00000000004d92b9
- (void)willDrawView;	// IMP=0x00000000004d925a
- (void)renderWithTimestamp:(double)arg1 completion:(function_2e574590)arg2;	// IMP=0x00000000004d8d4b
- (_Bool)hasRenderTarget;	// IMP=0x00000000004d8d3a
- (void)destroyRenderTarget;	// IMP=0x00000000004d8b1e
- (void)createRenderTarget;	// IMP=0x00000000004d7de9
- (struct __IOSurface *)flipImage;	// IMP=0x00000000004d7c07
@property(readonly, nonatomic) void *renderer;
@property(readonly, nonatomic) const struct RenderTargetFormat *blitFormat;
@property(readonly, nonatomic) void *blitRenderTarget;
@property(readonly, nonatomic) const struct RenderTargetFormat *linearFormat;
@property(readonly, nonatomic) void *linearRenderTarget;
@property(readonly, nonatomic) const struct RenderTargetFormat *format;
- (shared_ptr_fa6aa836)bitmapData;	// IMP=0x00000000004d79ed
@property(readonly, nonatomic) void *imageTexture;
@property(readonly, nonatomic) _Bool shouldRasterize;
- (void)dealloc;	// IMP=0x00000000004d796f
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 useMultisampling:(_Bool)arg3 extraColorFormats:(const void *)arg4 taskContext:(const void *)arg5 device:(void *)arg6 signpostId:(unsigned long long)arg7;	// IMP=0x00000000004d6bfd
- (void *)_internalRenderTarget;	// IMP=0x00000000004d6bf3
@property(readonly, nonatomic) void *finalRenderTarget;
@property(readonly, nonatomic) struct CGSize sizeInPixels;
- (void *)finalSurface;	// IMP=0x00000000004d6bc0
@property(readonly, nonatomic) void *renderTarget;

// Remaining properties
@property(readonly, nonatomic) float averageFPS;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

