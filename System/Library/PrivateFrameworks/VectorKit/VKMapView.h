//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <QuartzCore/CALayer.h>

@class CADisplay, GEOMapRegion, GEOPOICategoryFilter, MDARController, NSArray, NSMutableArray, NSSet, NSString, VKARWalkingCameraController, VKClassicGlobeCanvas, VKDaVinciCameraController, VKLabelMarker, VKMapCameraController, VKMapCanvas, VKMuninCameraController, VKNavCameraController, VKNavContext, VKNotificationObserver, VKPolylineOverlay, VKPuckAnimator, VKRouteContext, VKSceneConfiguration, VKStateCaptureHandler, VKTimedAnimation;
@protocol VKMapViewCameraDelegate, VKMapViewDelegate;

@interface VKMapView : CALayer
{
    struct optional<VKMapType> _mapType;	// 8 = 0x8
    VKMapCanvas *_canvas;	// 16 = 0x10
    VKClassicGlobeCanvas *_globe;	// 24 = 0x18
    struct mutex _mapDelegateMutex;	// 32 = 0x20
    id <VKMapViewDelegate> _mapDelegate;	// 96 = 0x60
    _Bool _loaderOpen;	// 104 = 0x68
    NSString *_tileLoaderClientID;	// 112 = 0x70
    unsigned char _emphasis;	// 120 = 0x78
    VKTimedAnimation *_edgeInsetAnimation;	// 128 = 0x80
    struct VKEdgeInsets _animatingToEdgeInsets;	// 136 = 0x88
    _Bool _isChangingMapType;	// 152 = 0x98
    double _verticalYaw;	// 160 = 0xa0
    unsigned char _applicationState;	// 168 = 0xa8
    unsigned char _displayedSearchResultsType;	// 169 = 0xa9
    unsigned char _usage;	// 170 = 0xaa
    unsigned char _mapkitUsage;	// 171 = 0xab
    VKNotificationObserver *_notificationObserver;	// 176 = 0xb0
    VKPuckAnimator *_userLocationAnimator;	// 184 = 0xb8
    long long _navigationDisplayRate;	// 192 = 0xc0
    _Bool _isInBackground;	// 200 = 0xc8
    VKMapCameraController *_mapCameraController;	// 208 = 0xd0
    VKDaVinciCameraController *_davinciMapCameraController;	// 216 = 0xd8
    VKNavCameraController *_navigationCameraController;	// 224 = 0xe0
    struct _retain_ptr<VKMuninCameraController *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKMuninCameraController *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _muninCameraController;	// 232 = 0xe8
    struct _retain_ptr<VKARWalkingCameraController *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKARWalkingCameraController *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _arWalkingCameraController;	// 256 = 0x100
    VKNavContext *_navContext;	// 280 = 0x118
    Coordinate3D_bc242218 _lastAnimatedUserCoordinate;	// 288 = 0x120
    Unit_3d259e8a _lastAnimatedCourse;	// 312 = 0x138
    struct unique_ptr<md::MapEngine, std::default_delete<md::MapEngine>> _mapEngine;	// 320 = 0x140
    _Bool _didFinishSnapshotting;	// 328 = 0x148
    int _flyoverMode;	// 332 = 0x14c
    MDARController *_arController;	// 336 = 0x150
    GEOPOICategoryFilter *_pointsOfInterestFilter;	// 344 = 0x158
    _Bool _compressedBuildingsEnabled;	// 352 = 0x160
    struct _retain_ptr<VKStateCaptureHandler *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        VKStateCaptureHandler *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _stateCaptureHandler;	// 360 = 0x168
    _retain_ptr_c0a21da9 _vkCamera;	// 384 = 0x180
    VKRouteContext *_routeContext;	// 408 = 0x198
    struct _retain_ptr<NSSet<NSNumber *>*, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> {
        CDUnknownFunctionPointerType *_vptr$_retain_ptr;
        NSSet *_obj;
        struct _retain_objc _retain;
        struct _release_objc _release;
    } _selectedBuildingFeatureIds;	// 416 = 0x1a0
    struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> _manifestTileGroupObserverProxy;	// 440 = 0x1b8
    long long _lastTerrainMode;	// 464 = 0x1d0
    _Bool _lastEnableGlobe;	// 472 = 0x1d8
    _Bool _lastEnableRoundedBuildings;	// 473 = 0x1d9
    _Bool _lastEnableColorizedBuildings;	// 474 = 0x1da
    _Bool _lastEnableBuildingHeights;	// 475 = 0x1db
    _Bool _lastEnableAdvancedLighting;	// 476 = 0x1dc
    _Bool _lastEnableAdvancedWater;	// 477 = 0x1dd
    NSMutableArray *_mapsFeatureListeners;	// 480 = 0x1e0
    CDStruct_80aa614a _mapDisplayStyle;	// 488 = 0x1e8
    _Bool _displayStyleOverrideEnabled;	// 493 = 0x1ed
    unsigned char _mapKitUsage;	// 494 = 0x1ee
}

+ (_Bool)_globeIsEnabled;	// IMP=0x00000000000b485d
+ (_Bool)_globeIsAvailable;	// IMP=0x00000000000b4853
+ (_Bool)_elevatedGroundIsEnabled;	// IMP=0x00000000000b4738
+ (_Bool)_elevatedGroundIsAvailable;	// IMP=0x00000000000b472e
- (id).cxx_construct;	// IMP=0x00000000000c4cf4
- (void).cxx_destruct;	// IMP=0x00000000000c4b79
@property(nonatomic) unsigned char mapKitUsage; // @synthesize mapKitUsage=_mapKitUsage;
@property(nonatomic) _Bool compressedBuildingsEnabled; // @synthesize compressedBuildingsEnabled=_compressedBuildingsEnabled;
@property(retain, nonatomic) GEOPOICategoryFilter *pointsOfInterestFilter; // @synthesize pointsOfInterestFilter=_pointsOfInterestFilter;
@property(readonly, nonatomic) VKPuckAnimator *userLocationAnimator; // @synthesize userLocationAnimator=_userLocationAnimator;
@property(nonatomic) unsigned char displayedSearchResultsType; // @synthesize displayedSearchResultsType=_displayedSearchResultsType;
@property(nonatomic) unsigned char applicationState; // @synthesize applicationState=_applicationState;
@property(nonatomic) id <VKMapViewDelegate> mapDelegate; // @synthesize mapDelegate=_mapDelegate;
- (id)resolveMapCameraController;	// IMP=0x00000000000c4aa3
- (id)navigationPuck;	// IMP=0x00000000000c4a86
@property(readonly, nonatomic) VKSceneConfiguration *sceneConfiguration;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(const void *)arg2;	// IMP=0x00000000000c4a3d
- (void)puckAnimatorDidStop:(id)arg1;	// IMP=0x00000000000c4a07
- (void)puckAnimator:(id)arg1 getElevation:(double *)arg2 withCoordinate:(const void *)arg3;	// IMP=0x00000000000c49b8
- (void)puckAnimator:(id)arg1 updatedPosition:(const void *)arg2 course:(const void *)arg3;	// IMP=0x00000000000c4848
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;	// IMP=0x00000000000c47a3
- (void)map:(id)arg1 didUpdateVerticalYawTo:(double)arg2;	// IMP=0x00000000000c4743
- (void)removeExternalAnchor:(id)arg1;	// IMP=0x00000000000c46fb
- (void)addExternalAnchor:(id)arg1;	// IMP=0x00000000000c463d
- (void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;	// IMP=0x00000000000c453b
- (void)setUseSmallCache:(_Bool)arg1;	// IMP=0x00000000000c44f4
- (void)forceResolveCameraController;	// IMP=0x00000000000c44bb
- (id)pptTileStatisticsForMapType:(int)arg1 latitude:(double)arg2 longitude:(double)arg3 zoom:(float)arg4 width:(double)arg5 height:(double)arg6 rect:(CDStruct_02837cd9)arg7;	// IMP=0x00000000000c44b3
- (void)setRouteLineSplitAnnotation:(id)arg1;	// IMP=0x00000000000c447e
@property(nonatomic) _Bool rendersInBackground;
- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;	// IMP=0x00000000000c4364
- (_Bool)gridDisabled;	// IMP=0x00000000000c431f
- (_Bool)rastersDisabled;	// IMP=0x00000000000c42da
- (_Bool)buildingFootprintsDisabled;	// IMP=0x00000000000c4295
@property(nonatomic) _Bool renderInverseFills;
@property(nonatomic) _Bool renderOverlayPolygons;
- (_Bool)polygonsDisabled;	// IMP=0x00000000000c41c6
- (_Bool)labelsDisabled;	// IMP=0x00000000000c4181
- (_Bool)roadsDisabled;	// IMP=0x00000000000c413c
@property(readonly, nonatomic, getter=getSceneState) unsigned long long sceneState;
@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;
- (void)setDisableGrid:(_Bool)arg1;	// IMP=0x00000000000c4094
- (void)setDisableRasters:(_Bool)arg1;	// IMP=0x00000000000c4054
- (void)setDisableBuildingFootprints:(_Bool)arg1;	// IMP=0x00000000000c4014
- (void)setDisablePolygons:(_Bool)arg1;	// IMP=0x00000000000c3f54
- (void)setDisableLabels:(_Bool)arg1;	// IMP=0x00000000000c3f14
- (void)setDisableRoads:(_Bool)arg1;	// IMP=0x00000000000c3ed4
- (_Bool)tapAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3e59
- (void)stopSnappingAnimations;	// IMP=0x00000000000c3dfc
- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;	// IMP=0x00000000000c3dba
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3d41
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 degrees:(double)arg2;	// IMP=0x00000000000c3cbe
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;	// IMP=0x00000000000c3c3b
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3bc2
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3b49
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;	// IMP=0x00000000000c3ac6
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3a4d
- (void)stopPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c39d4
- (void)willStopPanningAtPoint:(struct CGPoint)arg1 withVelocity:(struct CGPoint)arg2;	// IMP=0x00000000000c394f
- (void)updatePanWithTranslation:(struct CGPoint)arg1;	// IMP=0x00000000000c38d6
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(_Bool)arg2;	// IMP=0x00000000000c3850
- (void)startPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c37d5
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c375c
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;	// IMP=0x00000000000c36cf
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c3656
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c35b2
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;	// IMP=0x00000000000c3537
- (_Bool)wantsTimerTick;	// IMP=0x00000000000c350c
- (void)didPresent;	// IMP=0x00000000000c349e
- (void)willLayoutWithTimestamp:(double)arg1 withContext:(void *)arg2;	// IMP=0x00000000000c345b
- (void)setRegionRestriction:(id)arg1 duration:(double)arg2 timingFunction:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c33ae
- (void)setCenterCoordinateDistanceRange:(CDStruct_c3b9c2ee)arg1 duration:(double)arg2 timingFunction:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c3327
- (void)mapController:(id)arg1 requestsDisplayRate:(long long)arg2;	// IMP=0x00000000000c3229
- (void)_updateMapDisplayStyle;	// IMP=0x00000000000c3180
- (void)mapLabelsDidLayout:(id)arg1;	// IMP=0x00000000000c30be
- (void)map:(id)arg1 labelMarkerDidChangeState:(const void *)arg2;	// IMP=0x00000000000c2e82
- (void)map:(id)arg1 selectedLabelMarkerWillDisappear:(const void *)arg2;	// IMP=0x00000000000c2c43
- (void)mapDidFinishChangingMapDisplayStyle:(CDStruct_80aa614a)arg1;	// IMP=0x00000000000c2b88
- (void)map:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;	// IMP=0x00000000000c2ac8
- (void)labelMarkerDidChangeState:(const void *)arg1;	// IMP=0x00000000000c28af
- (void)selectedLabelMarkerWillDisappear:(const void *)arg1;	// IMP=0x00000000000c26ae
- (void)labelManagerDidLayout;	// IMP=0x00000000000c260d
- (void)didUpdateSceneStatus:(unsigned char)arg1;	// IMP=0x00000000000c23fa
- (void)willBecomeFullyDrawn;	// IMP=0x00000000000c23f4
- (void)mapDidReloadStylesheet:(id)arg1;	// IMP=0x00000000000c2353
- (void)didFinishLoadingDataWithError:(id)arg1;	// IMP=0x00000000000c22a7
- (void)didFinishLoadingData;	// IMP=0x00000000000c2206
- (void)didStartLoadingData;	// IMP=0x00000000000c2165
- (void)injectDebugARUserRouteCoordinate:(struct PolylineCoordinate)arg1;	// IMP=0x00000000000c215f
- (void)injectDebugARFeatures:(id)arg1;	// IMP=0x00000000000c2159
- (void)arWalkingElevationRequestFailure:(id)arg1;	// IMP=0x00000000000c200c
- (void)arWalkingFeatureSetStateDidUpdate:(id)arg1;	// IMP=0x00000000000c1ebf
- (void)activeARWalkingFeatureDidUpdate:(id)arg1;	// IMP=0x00000000000c1d72
- (void)muninJunctionDidChange:(const void *)arg1 currentRoad:(const void *)arg2 localize:(_Bool)arg3;	// IMP=0x00000000000c1969
- (void)_postDelegateCallbackBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c192d
- (id)_mapDelegateQueue;	// IMP=0x00000000000c18d6
@property(retain, nonatomic) VKPolylineOverlay *focusedLabelsPolyline;
- (void)setNavContext:(id)arg1;	// IMP=0x00000000000c1760
- (void)setRouteContext:(id)arg1;	// IMP=0x00000000000c156d
- (void)setCurrentLocationText:(id)arg1;	// IMP=0x00000000000c1479
- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;	// IMP=0x00000000000c1351
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;	// IMP=0x00000000000c12b4
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;	// IMP=0x00000000000c1217
- (void)removeOverlay:(id)arg1;	// IMP=0x00000000000c117f
- (void)addOverlay:(id)arg1;	// IMP=0x00000000000c10e7
- (void)removePersistentRouteOverlay:(id)arg1;	// IMP=0x00000000000c0fb8
- (void)addPersistentRouteOverlay:(id)arg1;	// IMP=0x00000000000c0e1a
- (void)removeRouteOverlay:(id)arg1;	// IMP=0x00000000000c0cee
- (void)addRouteOverlay:(id)arg1;	// IMP=0x00000000000c0b07
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) _Bool animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;	// IMP=0x00000000000c0a53
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3 duration:(double)arg4 timingFunction:(CDUnknownBlockType)arg5;	// IMP=0x00000000000c09b3
@property(nonatomic) long long annotationTrackingHeadingAnimationDisplayRate;
@property(nonatomic) CDStruct_211b8904 annotationTrackingBehavior;
@property(nonatomic) double trackingZoomScale;
@property(readonly, nonatomic) NSArray *labelMarkers;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (_Bool)shouldHideOffscreenSelectedAnnotation;	// IMP=0x00000000000c0586
- (CDUnknownBlockType)annotationCoordinateTest;	// IMP=0x00000000000c055b
- (CDUnknownBlockType)annotationRectTest;	// IMP=0x00000000000c0530
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000c0466
@property(readonly, nonatomic) _Bool canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) _Bool showingFlyover;
@property(readonly, nonatomic) int flyoverMode;
- (void)setFlyoverMode:(int)arg1;	// IMP=0x00000000000bfec5
@property(readonly, nonatomic, getter=maxPitch) double maxPitch;
@property(readonly, nonatomic, getter=minPitch) double minPitch;
@property(readonly, nonatomic, getter=isFullyPitched) _Bool fullyPitched;
@property(readonly, nonatomic, getter=isPitched) _Bool pitched;
- (_Bool)canEnter3DModeFlyoverForTileSize:(long long)arg1;	// IMP=0x00000000000bfdcb
@property(readonly, nonatomic) _Bool canEnter3DMode;
@property(readonly, nonatomic) _Bool supportsGPUFrameCaptureToDestination;
- (void)exit3DMode;	// IMP=0x00000000000bfc5b
- (void)enter3DMode;	// IMP=0x00000000000bfb66
- (void)setSelectedBuildingFeatureIds:(id)arg1;	// IMP=0x00000000000bf864
- (void)deselectVenuePoiFeatureId;	// IMP=0x00000000000bf795
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;	// IMP=0x00000000000bf6b8
- (void)deselectFeatureId;	// IMP=0x00000000000bf604
- (void)setSelectedFeatureId:(unsigned long long)arg1;	// IMP=0x00000000000bf537
- (void)deselectTransitLineMarker;	// IMP=0x00000000000bf460
- (void)selectTransitLineMarker:(id)arg1;	// IMP=0x00000000000bf376
- (id)selectedTransitLineIDs;	// IMP=0x00000000000bf2a0
- (id)transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bf117
- (id)transitLineMarkersInCurrentViewport;	// IMP=0x00000000000bf04b
- (void)setDisableTransitLines:(_Bool)arg1;	// IMP=0x00000000000bef51
- (_Bool)transitLinesDisabled;	// IMP=0x00000000000bef1b
- (void)clearPreviouslySelectedLabelMarker;	// IMP=0x00000000000beefc
- (void)deselectLabelMarker;	// IMP=0x00000000000beec5
- (void)selectLabelMarker:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bede8
- (void)selectLabelMarker:(id)arg1;	// IMP=0x00000000000bedd4
- (id)rapMarkerAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000bed90
- (id)labelMarkerForCustomFeatureAnnotation:(id)arg1;	// IMP=0x00000000000bed40
- (id)labelMarkerForCustomFeatureAnnotation:(id)arg1 dataSource:(id)arg2;	// IMP=0x00000000000bebef
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;	// IMP=0x00000000000bead5
- (void)setLabelExclusionRegions:(id)arg1;	// IMP=0x00000000000bea99
- (void)removeCustomFeatureDataSource:(id)arg1;	// IMP=0x00000000000bea72
- (void)addCustomFeatureDataSource:(id)arg1;	// IMP=0x00000000000bea4b
- (void)setExternalTrafficFeatures:(id)arg1 areRouteTrafficFeaturesActive:(_Bool)arg2;	// IMP=0x00000000000be932
- (void)setHiddenTrafficIncidentFeatures:(id)arg1;	// IMP=0x00000000000be844
@property(nonatomic) _Bool trackingCameraShouldHandleGestures;
- (void)transitionToTracking:(_Bool)arg1 mapMode:(long long)arg2 startLocation:(CDStruct_c3b9c2ee)arg3 startCourse:(double)arg4 pounceCompletionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000be58e
- (void)navigationCameraReturnToPuck;	// IMP=0x00000000000be4d2
- (void)pauseTracking;	// IMP=0x00000000000be416
- (void)stopTracking;	// IMP=0x00000000000be310
- (id)tileStatistics;	// IMP=0x00000000000bc82d
- (void)resetTileStatistics;	// IMP=0x00000000000bc6d8
- (void)disableTileStatistics;	// IMP=0x00000000000bc6af
- (void)enableTileStatistics;	// IMP=0x00000000000bc651
- (id)testStatistics;	// IMP=0x00000000000bbe7c
- (void)resetTestStatistics;	// IMP=0x00000000000bbe39
- (void)disableTestStatistics;	// IMP=0x00000000000bbdde
- (void)enableTestStatistics;	// IMP=0x00000000000bbd84
- (void)resumeFlyoverTourAnimation;	// IMP=0x00000000000bbd45
- (void)pauseFlyoverTourAnimation;	// IMP=0x00000000000bbd06
- (void)stopFlyoverAnimation;	// IMP=0x00000000000bbca7
- (void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bbb77
- (void)moveToFlyoverTourStartPosition:(id)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bba93
- (void)startFlyoverAnimation:(id)arg1 animateToStart:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000bb96f
- (void)_notifyDelegateFlyoverTourLabelChanged:(id)arg1;	// IMP=0x00000000000bb8c3
- (void)_runFlyoverTourStateChange:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bb6bc
- (void)prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bb5cd
@property(readonly, nonatomic) _Bool canShowFlyoverAnimation;
- (void)setCameraFramingInsets:(struct VKEdgeInsets)arg1;	// IMP=0x00000000000bb44c
@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;
@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000baa0a
- (double)distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromLayer:(id)arg3 withPrecision:(long long)arg4;	// IMP=0x00000000000ba82e
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;	// IMP=0x00000000000ba7cd
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;	// IMP=0x00000000000ba76c
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;	// IMP=0x00000000000ba70b
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;	// IMP=0x00000000000ba69d
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;	// IMP=0x00000000000ba62f
- (double)durationToAnimateToMapRegion:(id)arg1;	// IMP=0x00000000000ba5cc
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000000ba442
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000ba428
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3;	// IMP=0x00000000000ba2de
- (void)setYaw:(double)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000ba1a2
- (void)runAnimation:(id)arg1;	// IMP=0x00000000000ba176
- (void)renderInContext:(struct CGContext *)arg1;	// IMP=0x00000000000ba0cb
- (void)setContentsScale:(double)arg1;	// IMP=0x00000000000b9f73
- (id)activeLogics;	// IMP=0x00000000000b9e57
- (void)_configureDefaultSettings;	// IMP=0x00000000000b961a
- (void)dealloc;	// IMP=0x00000000000b9255
- (id)initShouldRasterize:(_Bool)arg1 inBackground:(_Bool)arg2 contentScale:(double)arg3 auditToken:(id)arg4 mapViewPurpose:(long long)arg5 allowsAntialiasing:(_Bool)arg6;	// IMP=0x00000000000b8374
- (id)initShouldRasterize:(_Bool)arg1 inBackground:(_Bool)arg2 contentScale:(double)arg3 auditToken:(id)arg4 mapViewPurpose:(long long)arg5;	// IMP=0x00000000000b8352
- (void)activateInternalSettings;	// IMP=0x00000000000b8299
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000000000b8033
@property(readonly, nonatomic) CDStruct_071ac149 centerCoordinate;
- (id)consoleString:(_Bool)arg1;	// IMP=0x00000000000b7fb0
@property(readonly, nonatomic) GEOMapRegion *mapRegionIgnoringEdgeInsets;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) double altitude;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
- (struct CGRect)mapRegionBounds;	// IMP=0x00000000000b7e33
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000b79b8
- (void)_applyMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b7908
- (void)setMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b75aa
- (void)setMapDisplayStyle:(CDStruct_80aa614a)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b7590
@property(nonatomic) CDStruct_80aa614a mapDisplayStyle;
- (void)_updateBackgroundColor;	// IMP=0x00000000000b744f
- (void)setMapType:(int)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b649e
@property(nonatomic) int mapType;
- (_Bool)supportsNightMode;	// IMP=0x00000000000b6399
- (_Bool)supportsMapType:(int)arg1;	// IMP=0x00000000000b633e
- (void)_createGlobe;	// IMP=0x00000000000b617f
- (void)setCanonicalSkyHeight:(double)arg1;	// IMP=0x00000000000b60a3
- (void)setDesiredMapMode:(long long)arg1;	// IMP=0x00000000000b5d7b
- (void)setClientLocalizedStrings:(id)arg1;	// IMP=0x00000000000b5d3e
- (void)venueCreated:(const void *)arg1 building:(const void *)arg2;	// IMP=0x00000000000b5c76
- (void)nearestVenueDidChange:(const void *)arg1 building:(const void *)arg2;	// IMP=0x00000000000b5b93
- (void)_setFloorSwitcherZoomPadding:(float)arg1;	// IMP=0x00000000000b5b46
- (float)zoomToRevealVenueBuildingFloorplan:(id)arg1;	// IMP=0x00000000000b5b1d
- (float)zoomToRevealVenueFloorplan:(id)arg1;	// IMP=0x00000000000b5af4
- (id)clearVenueBuildingFloorSelections;	// IMP=0x00000000000b5998
- (void)setDisplayedFloorOrdinal:(short)arg1 forVenueBuilding:(id)arg2;	// IMP=0x00000000000b591f
- (short)displayedFloorOrdinalForVenueBuilding:(id)arg1;	// IMP=0x00000000000b5899
- (short)defaultFloorOrdinalForVenueBuilding:(id)arg1;	// IMP=0x00000000000b584a
- (_Bool)displayedFloorIsDefaultForVenueBuilding:(id)arg1;	// IMP=0x00000000000b57d0
- (id)venueWithID:(unsigned long long)arg1;	// IMP=0x00000000000b5723
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1 withMarginForError:(_Bool)arg2 includeNonRevealedVenues:(_Bool)arg3;	// IMP=0x00000000000b55de
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1 withMarginForError:(_Bool)arg2;	// IMP=0x00000000000b55ca
- (id)venueAtLocation:(CDStruct_c3b9c2ee)arg1;	// IMP=0x00000000000b55b1
- (id)venueBuildingWithFocus;	// IMP=0x00000000000b5524
- (id)venueWithFocus;	// IMP=0x00000000000b5497
- (_Bool)isDimmingBaseMap;	// IMP=0x00000000000b545f
- (void)setDimmingBaseMap:(_Bool)arg1 animated:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000000b4ff8
- (void)setDimmingBaseMap:(_Bool)arg1;	// IMP=0x00000000000b4fd9
- (float)worldSpaceWidthOfView;	// IMP=0x00000000000b4f84
- (void)tileGroupDidChange;	// IMP=0x00000000000b4f43
- (void)_reconfigurePermissions;	// IMP=0x00000000000b4e87
@property(readonly, nonatomic) _Bool isShowingCuratedElevatedGround;
@property(nonatomic) _Bool enableAdvancedWater;
- (_Bool)_advancedWaterAllowed;	// IMP=0x00000000000b4d7e
@property(nonatomic) _Bool enableAdvancedLighting;
- (_Bool)_advancedLightingAllowed;	// IMP=0x00000000000b4cd2
@property(nonatomic) _Bool enableBuildingHeights;
- (_Bool)_buildingHeightsAllowed;	// IMP=0x00000000000b4c2b
@property(nonatomic) _Bool enableColorizedBuildings;
- (_Bool)_colorizedBuildingsAllowed;	// IMP=0x00000000000b4b94
@property(nonatomic) _Bool enableRoundedBuildings;
- (_Bool)_roundedBuildingsAllowed;	// IMP=0x00000000000b4aed
@property(nonatomic) _Bool enableGlobe;
- (_Bool)_daVinciDataAvailable;	// IMP=0x00000000000b489f
- (void)setModernMapEnabled:(_Bool)arg1;	// IMP=0x00000000000b4871
- (_Bool)_modernMapAllowed;	// IMP=0x00000000000b4867
@property(nonatomic) long long terrainMode;
@property(nonatomic) _Bool loadMuninAvailability;
- (void)setLoadMuninMetadata:(_Bool)arg1;	// IMP=0x00000000000b468d
- (_Bool)isLoadingMuninMetadata;	// IMP=0x00000000000b4648
@property(nonatomic) _Bool showsVenues;
@property(nonatomic) _Bool showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest;
@property(nonatomic) _Bool showsPointLabels;
@property(nonatomic) _Bool showsRoadShields;
@property(nonatomic) _Bool showsRoadLabels;
@property(nonatomic) long long shieldIdiom;
@property(nonatomic) long long navigationShieldSize;
@property(nonatomic) long long shieldSize;
- (double)zoomLevelAdjustmentForTileSize:(long long)arg1;	// IMP=0x00000000000b3a6a
- (double)currentZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000b3a2e
- (double)maximumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000b39f2
- (double)topDownMinimumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000b39b6
- (double)minimumZoomLevelForTileSize:(long long)arg1;	// IMP=0x00000000000b397a
- (_Bool)canZoomOutForTileSize:(long long)arg1;	// IMP=0x00000000000b393e
- (_Bool)canZoomInForTileSize:(long long)arg1;	// IMP=0x00000000000b3902
@property(nonatomic) _Bool iconsShouldAlignToPixels;
@property(nonatomic, getter=isGesturing) _Bool gesturing;
- (void)disableMapDisplayStyleDebugOverride;	// IMP=0x00000000000b33fe
- (void)enableMapDisplayStyleDebugOverride:(CDStruct_80aa614a)arg1;	// IMP=0x00000000000b32b0
- (id)detailedDescriptionDictionaryRepresentation;	// IMP=0x00000000000b3297
- (id)detailedDescription;	// IMP=0x00000000000b3229
@property(nonatomic) _Bool shouldLoadMapMargin;
@property(nonatomic) _Bool shouldLoadFallbackTiles;
- (id)debugLabelString:(_Bool)arg1;	// IMP=0x00000000000b2f98
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000b2e21
@property(readonly, nonatomic) _Bool enableDebugLabelHighlighting;
@property(retain, nonatomic) CADisplay *hostDisplay;
- (_Bool)isEffectivelyHidden;	// IMP=0x00000000000b2c25
- (void)didReceiveLocalChanged;	// IMP=0x00000000000b2c10
- (void)didReceiveFlushTileCaches;	// IMP=0x00000000000b2bfb
- (void)didReceiveMemoryWarning;	// IMP=0x00000000000b2b6a
- (void)setHidden:(_Bool)arg1;	// IMP=0x00000000000b292e
- (void)clearScene;	// IMP=0x00000000000b28f7
- (void)setNeedsLayout;	// IMP=0x00000000000b28e2
@property(nonatomic) _Bool debugLayoutContinuously;
@property(nonatomic) _Bool isPitchable;
@property(nonatomic) _Bool staysCenteredDuringRotation;
@property(nonatomic) _Bool staysCenteredDuringPinch;
@property(nonatomic) long long labelScaleFactor;
@property(nonatomic) _Bool localizeLabels;
- (_Bool)canRotate;	// IMP=0x00000000000b2277
- (void)flushTileLoads;	// IMP=0x00000000000b21ce
- (void)didFinishSnapshotting;	// IMP=0x00000000000b20e8
- (void)didEnterBackground;	// IMP=0x00000000000b1ee3
- (void)willEnterForeground;	// IMP=0x00000000000b1d5a
- (_Bool)_createDisplayLayer;	// IMP=0x00000000000b1b1d
@property(nonatomic) long long navigationDisplayRate;
@property(nonatomic) long long displayRate;
@property(nonatomic) _Bool trafficIncidentsEnabled;
- (void)_updateBuildingCompressionSetting;	// IMP=0x00000000000b170b
@property(nonatomic) _Bool trafficEnabled;
@property(nonatomic) long long applicationUILayout;
- (void)setEmphasis:(unsigned char)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000b1256
- (unsigned char)emphasis;	// IMP=0x00000000000b1245
@property(nonatomic) CDStruct_b31ca263 vehicleState;
@property(nonatomic) long long targetDisplay;
@property(nonatomic) float styleZOffsetScale;
- (void)reloadStylesheet;	// IMP=0x00000000000b0ea2
- (_Bool)stylesheetIsDevResource;	// IMP=0x00000000000b0e09
- (id)attributionsForCurrentRegion;	// IMP=0x00000000000b0dde
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)forceCameraUpdateForFrameResize;	// IMP=0x00000000000b0d88
- (void)forceLayout;	// IMP=0x00000000000b0ca5
- (void)forceFrame;	// IMP=0x00000000000b0c93
- (void)_forceLayoutForSuspensionSnapShot;	// IMP=0x00000000000b0bd0
- (id)secondaryCanvas;	// IMP=0x00000000000b0b95
- (void)_closeLoaderConnection:(_Bool)arg1;	// IMP=0x00000000000b0b0b
- (void)closeLoaderConnection;	// IMP=0x00000000000b0af7
- (void)openLoaderConnection;	// IMP=0x00000000000b0a83
@property(nonatomic, getter=isLabelMarkerSelectionEnabled) _Bool labelMarkerSelectionEnabled;
- (void *)_labelSettings;	// IMP=0x00000000000b0916
@property(nonatomic) id <VKMapViewCameraDelegate> cameraDelegate;
- (void)setApplicationState:(unsigned char)arg1 displayedSearchResultsType:(unsigned char)arg2;	// IMP=0x00000000000b0499
- (float)currentZoomLevel;	// IMP=0x00000000000829fb
- (unordered_map_49c2a10b)clientStyleAttributes;	// IMP=0x0000000000082355
- (id)markerAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000008230e
- (id)buildingMarkerAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000820f2
- (void)populateDebugNode:(void *)arg1 withOptions:(const void *)arg2;	// IMP=0x00000000000c504b
- (long long)currentMapMode;	// IMP=0x00000000000c5008
- (void)performStylesheetDidChange;	// IMP=0x00000000000c4ea5
@property(readonly, nonatomic) const void *mapEngine;
@property(readonly, nonatomic) VKMapCanvas *mapCanvas;
- (void)debugHighlightFeatureMarker:(const void *)arg1;	// IMP=0x00000000000c4e32
- (id)currentCanvas;	// IMP=0x00000000000c4dd5
- (id)iconForStyleAttributes:(id)arg1 contentScale:(double)arg2 size:(long long)arg3 transparent:(_Bool)arg4;	// IMP=0x00000000000c5f84
- (id)roadLabelTilesInScene;	// IMP=0x00000000006d13b5
- (long long)getCurrentSetARInterfaceOrientation;	// IMP=0x00000000007643e5
- (void)setARInterfaceOrientation:(long long)arg1;	// IMP=0x0000000000764276
- (void)arController:(id)arg1 didChangeTrackingState:(unsigned long long)arg2 reason:(unsigned long long)arg3;	// IMP=0x000000000076420e
- (void)arControllerSessionInterruptionEnded:(id)arg1;	// IMP=0x00000000007641be
- (void)arController:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;	// IMP=0x000000000076416b
- (void)arController:(id)arg1 didEncounterError:(id)arg2;	// IMP=0x0000000000764118
- (void)map:(id)arg1 didEnterARMode:(_Bool)arg2;	// IMP=0x0000000000764033
- (void)_postDelegateCallbackBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000763ff7
- (id)_mapDelegateQueue;	// IMP=0x0000000000763fa0
- (void)exitARMode;	// IMP=0x0000000000763f9a
- (void)enterARModeAtCoordinate:(CDStruct_c3b9c2ee)arg1;	// IMP=0x0000000000763f94
@property(nonatomic) _Bool virtualParallaxEnabled;
- (id)onscreenImageResources;	// IMP=0x000000000087bd90
- (id)currentMarker;	// IMP=0x000000000087bd33
- (void)enableViewDataLoading:(_Bool)arg1;	// IMP=0x000000000087bcec
- (_Bool)cancelPendingMove;	// IMP=0x000000000087bc5a
- (_Bool)moveToMarker:(id)arg1 withHeading:(double)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000087ba6c
- (_Bool)moveToStorefrontView:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000087b854
- (id)muninMarkerAtCoordinate:(CDStruct_c3b9c2ee)arg1;	// IMP=0x000000000087b333
- (id)muninMarkerAtCoordinate:(CDStruct_c3b9c2ee)arg1 completeMarkerHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000087ae8c
@property(readonly, nonatomic) double heading;
- (void)enterMuninForMarker:(id)arg1 withHeading:(double)arg2;	// IMP=0x000000000087abc8
- (void)enterMuninForStorefrontView:(id)arg1 secondaryStorefrontView:(id)arg2;	// IMP=0x0000000000879b02

@end

