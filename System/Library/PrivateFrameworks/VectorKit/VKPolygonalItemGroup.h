//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VKPolygonalItemGroup : NSObject
{
    struct optional<md::MeshSet<ggl::PolygonBase::CompressedMeshMesh, ggl::PolygonBase::CompressedVbo>> _fillMeshInfo;	// 8 = 0x8
    struct vector<std::shared_ptr<ggl::PolygonBase::CompressedMeshMesh>, std::allocator<std::shared_ptr<ggl::PolygonBase::CompressedMeshMesh>>> _fillMeshes;	// 168 = 0xa8
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _fillCullingGroups;	// 192 = 0xc0
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _strokeCullingGroups;	// 576 = 0x240
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _venueCullingGroups;	// 960 = 0x3c0
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _venueEndCapCullingGroups;	// 1344 = 0x540
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _venueWallHorizontalStrokeCullingGroups;	// 1728 = 0x6c0
    struct array<std::vector<std::vector<FeatureRange>>, 16UL> _venueWallVerticalStrokeCullingGroups;	// 2112 = 0x840
    struct unordered_map<std::pair<const void *, unsigned long>, std::vector<md::Edge>, std::hash<md::SectionKey>, std::equal_to<std::pair<const void *, unsigned long>>, std::allocator<std::pair<const std::pair<const void *, unsigned long>, std::vector<md::Edge>>>> _polygonEdges;	// 2496 = 0x9c0
    struct unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>> _featureIds;	// 2536 = 0x9e8
    struct Box<float, 3> _boundingBox;	// 2576 = 0xa10
    float _tileZoom;	// 2600 = 0xa28
    float _contentScale;	// 2604 = 0xa2c
    unsigned int _cullingMask;	// 2608 = 0xa30
    _Bool _isFixedSize;	// 2612 = 0xa34
    _Bool _stylesUpToDate;	// 2613 = 0xa35
    _Bool _hasRouteAttributes;	// 2614 = 0xa36
    struct vector<ggl::Batcher, std::allocator<ggl::Batcher>> _fillRenderItemBatchers;	// 2616 = 0xa38
    struct vector<ggl::Batcher, std::allocator<ggl::Batcher>> _strokeRenderItemBatchers;	// 2640 = 0xa50
    Matrix_8746f91e _centroid;	// 2664 = 0xa68
    struct FeatureStyleAttributesSet _attributeSets;	// 2672 = 0xa70
    struct unordered_map<StyleQueryOverride, std::vector<std::shared_ptr<gss::StylesheetQuery<gss::PropertyID>>>, (anonymous namespace)::StyleQueryOverrideHash, std::equal_to<StyleQueryOverride>, std::allocator<std::pair<const StyleQueryOverride, std::vector<std::shared_ptr<gss::StylesheetQuery<gss::PropertyID>>>>>> _styleQueries;	// 2728 = 0xaa8
    shared_ptr_3e3c7f86 _styleManager;	// 2768 = 0xad0
    struct PolygonRouteAttributes _routeAttributes;	// 2784 = 0xae0
}

- (id).cxx_construct;	// IMP=0x00000000003d7dc3
- (void).cxx_destruct;	// IMP=0x00000000003d7be6
@property(readonly, nonatomic) Matrix_8746f91e centroid; // @synthesize centroid=_centroid;
@property(readonly, nonatomic) _Bool isFixedSize; // @synthesize isFixedSize=_isFixedSize;
@property(readonly, nonatomic) unsigned int cullingMask; // @synthesize cullingMask=_cullingMask;
- (void)clearRouteAttributes;	// IMP=0x00000000003d7ba7
- (void)setRouteAttributes:(const struct PolygonRouteAttributes *)arg1;	// IMP=0x00000000003d7b7b
- (void)updateCachedStyles;	// IMP=0x00000000003d739e
@property(readonly, nonatomic) const void *featureIds;
- (_Bool)hasFeatureId:(unsigned long long)arg1;	// IMP=0x00000000003d736a
- (_Bool)canAcceptPolygon:(void *)arg1;	// IMP=0x00000000003d72b6
- (void)didFinishAddingData;	// IMP=0x00000000003d7061
- (void)willAddDataWithAccessor:(struct ResourceAccessor *)arg1;	// IMP=0x00000000003d6bf7
- (unsigned char)indexForGeoFeatureAttributes:(const void *)arg1;	// IMP=0x00000000003d6853
- (const void *)commitRangesToVerticalVenueWallStrokeRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3;	// IMP=0x00000000003d679f
- (const void *)commitRangesToHorizontalVenueWallStrokeRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3;	// IMP=0x00000000003d66eb
- (const void *)commitRangesToVenueWallEndCapRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3;	// IMP=0x00000000003d6637
- (const void *)commitRangesToVenueWallRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3;	// IMP=0x00000000003d6583
- (const void *)commitRangesToStrokeRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3 featureIdPredicate:(function_ce5c9822)arg4;	// IMP=0x00000000003d64c0
- (const void *)commitRangesToFillRenderItemBatcher:(void *)arg1 forMeshAtIndex:(unsigned long long)arg2 cullingMask:(unsigned int)arg3 featureIdPredicate:(function_ce5c9822)arg4;	// IMP=0x00000000003d63fd
@property(readonly, nonatomic) void *fillMeshes;
@property(readonly, nonatomic) float tileZoom;
- (void *)styleQueries:(const struct StyleQueryOverride *)arg1;	// IMP=0x00000000003d6011
@property(readonly, nonatomic) Matrix_811b2232 size;
@property(readonly, nonatomic) const void *maxPoint;
@property(readonly, nonatomic) const void *origin;
- (const void *)attributeSets;	// IMP=0x00000000003d5fae
- (unsigned char)maxAttributeSetsPerGroup;	// IMP=0x00000000003d5fa3
- (void)dealloc;	// IMP=0x00000000003d5f74
- (id)initWithStyleQuery:(void *)arg1 tileZoom:(float)arg2 fixedAroundCentroid:(const void *)arg3 contentScale:(float)arg4;	// IMP=0x00000000003d5bc6

@end

