//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <EmailCore/ECNWConnectionWrapper-Protocol.h>

@class NSArray, NSConditionLock, NSData, NSError, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, OS_nw_connection, OS_nw_endpoint, OS_nw_error;

@interface ECNWConnectionWrapper : NSObject <ECNWConnectionWrapper>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSObject<OS_nw_connection> *_connection;	// 16 = 0x10
    int _connectionState;	// 24 = 0x18
    NSObject<OS_dispatch_semaphore> *_eventSemaphore;	// 32 = 0x20
    struct os_unfair_lock_s _lock;	// 40 = 0x28
    NSObject<OS_nw_endpoint> *_endpoint;	// 48 = 0x30
    NSConditionLock *_readBufferLock;	// 56 = 0x38
    NSObject<OS_dispatch_group> *_writeGroup;	// 64 = 0x40
    _Bool _readScheduled;	// 72 = 0x48
    NSObject<OS_nw_error> *_readError;	// 80 = 0x50
    NSData *_buffer;	// 88 = 0x58
    unsigned long long _bufferOffset;	// 96 = 0x60
    NSString *_securityProtocol;	// 104 = 0x68
    NSString *_service;	// 112 = 0x70
    _Bool _readable;	// 120 = 0x78
    _Bool _writable;	// 121 = 0x79
    double _connectTime;	// 128 = 0x80
    _Bool _allowsTrustPrompt;	// 136 = 0x88
    _Bool _isNonAppInitiated;	// 137 = 0x89
    _Bool _disableEphemeralDiffieHellmanCiphers;	// 138 = 0x8a
    _Bool _usesOpportunisticSockets;	// 139 = 0x8b
    unsigned int _timeout;	// 140 = 0x8c
    NSString *_accountIdentifier;	// 144 = 0x90
    NSArray *_clientCertificates;	// 152 = 0x98
    NSString *_connectionServiceType;	// 160 = 0xa0
    NSError *_error;	// 168 = 0xa8
    NSString *_networkAccountIdentifier;	// 176 = 0xb0
    CDUnknownBlockType _networkActivityChangeBlock;	// 184 = 0xb8
    NSArray *_serverCertificates;	// 192 = 0xc0
    CDUnknownBlockType _serverTrustHandler;	// 200 = 0xc8
    NSString *_sourceApplicationBundleIdentifier;	// 208 = 0xd0
    CDUnknownBlockType _bytesAvailableHandler;	// 216 = 0xd8
}

+ (id)log;	// IMP=0x000000000002338c
- (void).cxx_destruct;	// IMP=0x0000000000027371
@property(copy) CDUnknownBlockType bytesAvailableHandler; // @synthesize bytesAvailableHandler=_bytesAvailableHandler;
@property(nonatomic) _Bool usesOpportunisticSockets; // @synthesize usesOpportunisticSockets=_usesOpportunisticSockets;
@property(nonatomic) unsigned int timeout; // @synthesize timeout=_timeout;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(copy, nonatomic) CDUnknownBlockType serverTrustHandler; // @synthesize serverTrustHandler=_serverTrustHandler;
@property(readonly, copy, nonatomic) NSArray *serverCertificates; // @synthesize serverCertificates=_serverCertificates;
@property(copy, nonatomic) CDUnknownBlockType networkActivityChangeBlock; // @synthesize networkActivityChangeBlock=_networkActivityChangeBlock;
@property(copy, nonatomic) NSString *networkAccountIdentifier; // @synthesize networkAccountIdentifier=_networkAccountIdentifier;
@property(retain) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool disableEphemeralDiffieHellmanCiphers; // @synthesize disableEphemeralDiffieHellmanCiphers=_disableEphemeralDiffieHellmanCiphers;
@property(nonatomic) _Bool isNonAppInitiated; // @synthesize isNonAppInitiated=_isNonAppInitiated;
@property(copy, nonatomic) NSString *connectionServiceType; // @synthesize connectionServiceType=_connectionServiceType;
@property(retain, nonatomic) NSArray *clientCertificates; // @synthesize clientCertificates=_clientCertificates;
@property(nonatomic) _Bool allowsTrustPrompt; // @synthesize allowsTrustPrompt=_allowsTrustPrompt;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool isConstrained;
@property(readonly, nonatomic) _Bool isCellularConnection;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, nonatomic) _Bool isWritable;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) unsigned int remotePortNumber;
@property(readonly, nonatomic) NSString *remoteHostname;
- (void)unregisterForBytesAvailable;	// IMP=0x0000000000026ee8
- (void)registerForBytesAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000026d89
- (void)enableThroughputMonitoring:(_Bool)arg1;	// IMP=0x0000000000026a0b
- (_Bool)setSecurityProtocol:(id)arg1;	// IMP=0x000000000002665e
- (id)securityProtocol;	// IMP=0x0000000000026641
- (void)close;	// IMP=0x000000000002662d
- (void)stopActivity;	// IMP=0x000000000002660d
- (void)startActivity;	// IMP=0x00000000000265ed
- (void)_closeWithErrorDomain:(id)arg1 code:(long long)arg2;	// IMP=0x0000000000026583
- (void)_closeWithError:(id)arg1;	// IMP=0x00000000000262db
- (void)_scheduleNextRead;	// IMP=0x0000000000025d7b
- (long long)readBytesIntoBuffer:(char *)arg1 maxLength:(unsigned long long)arg2;	// IMP=0x00000000000255be
- (long long)writeBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000025201
- (void)_networkActivityEnded;	// IMP=0x000000000002517a
- (void)_networkActivityStarted;	// IMP=0x00000000000250e8
- (id)_negotiatedSecurityProtocol;	// IMP=0x0000000000024fd1
- (void)_configureTLS:(id)arg1;	// IMP=0x0000000000024c5a
- (void)_handleConnectionFailure:(int)arg1;	// IMP=0x0000000000024c36
- (void)_handleConnectionReady;	// IMP=0x0000000000024c22
- (id)_createConnectionWithEndpoint:(id)arg1 error:(int *)arg2;	// IMP=0x00000000000246eb
- (_Bool)_connectToEndpoint:(id)arg1 service:(id)arg2;	// IMP=0x0000000000023ad5
- (_Bool)test_connectToUNIXSocket:(id)arg1 service:(id)arg2;	// IMP=0x000000000002385c
- (_Bool)connectToHost:(id)arg1 withPort:(unsigned int)arg2 service:(id)arg3;	// IMP=0x00000000000236b9
- (void)cancel;	// IMP=0x00000000000235c8
- (void)dealloc;	// IMP=0x0000000000023558
- (id)init;	// IMP=0x0000000000023469

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

