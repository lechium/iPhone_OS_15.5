//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface IFSymbolImage
{
    _Bool _flippable;	// 8 = 0x8
    struct CGImage *_internalCGImage;	// 16 = 0x10
    double _internalScale;	// 24 = 0x18
    double _pointSize;	// 32 = 0x20
    unsigned long long _symbolSize;	// 40 = 0x28
    long long _symbolWeight;	// 48 = 0x30
    double _referencePointSize;	// 56 = 0x38
    double _fontMatchingScaleFactor;	// 64 = 0x40
    double _baselineOffset;	// 72 = 0x48
    double _capHeight;	// 80 = 0x50
    struct CGSize _internalSize;	// 88 = 0x58
    struct CGRect _alignmentRect;	// 104 = 0x68
    struct CGRect _contentBounds;	// 136 = 0x88
}

@property(readonly, nonatomic, getter=isFlippable) _Bool flippable; // @synthesize flippable=_flippable;
@property(readonly, nonatomic) struct CGRect contentBounds; // @synthesize contentBounds=_contentBounds;
@property(readonly, nonatomic) struct CGRect alignmentRect; // @synthesize alignmentRect=_alignmentRect;
@property(readonly, nonatomic) double capHeight; // @synthesize capHeight=_capHeight;
@property(readonly, nonatomic) double baselineOffset; // @synthesize baselineOffset=_baselineOffset;
@property(readonly, nonatomic) double fontMatchingScaleFactor; // @synthesize fontMatchingScaleFactor=_fontMatchingScaleFactor;
@property(readonly, nonatomic) double referencePointSize; // @synthesize referencePointSize=_referencePointSize;
@property(readonly, nonatomic) long long symbolWeight; // @synthesize symbolWeight=_symbolWeight;
@property(readonly, nonatomic) unsigned long long symbolSize; // @synthesize symbolSize=_symbolSize;
@property(readonly, nonatomic) double pointSize; // @synthesize pointSize=_pointSize;
- (struct CGSize)size;	// IMP=0x0000000000008ea3
- (double)scale;	// IMP=0x0000000000008e91
- (struct CGImage *)CGImage;	// IMP=0x0000000000008e3a
- (void)dealloc;	// IMP=0x0000000000008df4
- (id)initWithNamedVectorGlyph:(id)arg1;	// IMP=0x0000000000008b8f

@end

