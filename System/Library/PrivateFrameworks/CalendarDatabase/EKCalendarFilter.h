//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CalendarDatabase/NSCopying-Protocol.h>

@class NSMutableSet, NSString;

@interface EKCalendarFilter : NSObject <NSCopying>
{
    struct _opaque_pthread_mutex_t _lock;	// 8 = 0x8
    NSMutableSet *_calendarUIDs;	// 72 = 0x48
    struct CalDatabase *_database;	// 80 = 0x50
    NSString *_searchTerm;	// 88 = 0x58
    int _entityType;	// 96 = 0x60
}

+ (void)_addCalendarsForStoreWithUID:(id)arg1 toSet:(id)arg2 database:(struct CalDatabase *)arg3;	// IMP=0x0000000000071515
+ (void)_addCalendarUIDsFromPrefs:(id)arg1 toSet:(id)arg2 database:(struct CalDatabase *)arg3;	// IMP=0x000000000007138a
+ (void)_addCalendarWithUID:(id)arg1 toSet:(id)arg2 database:(struct CalDatabase *)arg3;	// IMP=0x00000000000712fb
- (void).cxx_destruct;	// IMP=0x0000000000071e4f
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
- (id)calendarIDClauseForQueryWithVariableName:(id)arg1;	// IMP=0x0000000000071acc
- (id)filterQueryForKey:(id)arg1 prefix:(id)arg2 whereClause:(id)arg3 creator:(CDUnknownFunctionPointerType)arg4 userInfo:(void *)arg5;	// IMP=0x0000000000071916
- (id)filterQueryForQueryString:(id)arg1 creator:(CDUnknownFunctionPointerType)arg2 userInfo:(void *)arg3;	// IMP=0x000000000007189c
- (id)_addFilterToQuery:(id)arg1 creator:(CDUnknownFunctionPointerType)arg2 userInfo:(void *)arg3;	// IMP=0x0000000000071875
- (void)validate;	// IMP=0x0000000000071652
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000007120b
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000711d5
- (void)removeCalendarWithUID:(id)arg1;	// IMP=0x00000000000711bf
- (_Bool)isCalendarUIDVisible:(id)arg1;	// IMP=0x0000000000071161
- (int)visibleCalendarCountWithOptions:(int)arg1;	// IMP=0x0000000000070f65
- (id)visibleCalendarsWithOptions:(int)arg1;	// IMP=0x0000000000070d1b
- (id)filteredCalendars;	// IMP=0x0000000000070b32
- (id)_generateUIDSetToFilterAllCalendars;	// IMP=0x0000000000070ac1
- (id)_generateUIDSetToShowCalendarUIDs:(id)arg1;	// IMP=0x0000000000070a1f
- (id)_generateUIDSetToFilterCalendars:(id)arg1;	// IMP=0x00000000000709b2
- (id)_generateUIDSetToShowCalendars:(id)arg1;	// IMP=0x00000000000708eb
- (id)_UIDAntiSetWithCalendars:(id)arg1;	// IMP=0x00000000000706f9
- (id)_UIDSetWithCalendars:(id)arg1;	// IMP=0x0000000000070507
- (_Bool)isFilteringAll;	// IMP=0x00000000000704c8
- (_Bool)_isFilteringAllWhileLocked;	// IMP=0x0000000000070441
- (_Bool)isShowingAll;	// IMP=0x0000000000070424
- (void)dealloc;	// IMP=0x00000000000703dc
- (id)initWithDatabase:(struct CalDatabase *)arg1 entityType:(int)arg2 calendarUIDs:(id)arg3;	// IMP=0x000000000007032c
- (id)initWithDatabase:(struct CalDatabase *)arg1 entityType:(int)arg2 filteringCalendarsWithUIDs:(id)arg3;	// IMP=0x00000000000702a9
- (id)initWithDatabase:(struct CalDatabase *)arg1 entityType:(int)arg2 filteringCalendars:(id)arg3;	// IMP=0x000000000007022a
- (id)initWithDatabase:(struct CalDatabase *)arg1 entityType:(int)arg2 showingCalendarsWithUIDs:(id)arg3;	// IMP=0x00000000000701ab
- (id)initWithDatabase:(struct CalDatabase *)arg1 showingCalendarsWithUIDs:(id)arg2;	// IMP=0x000000000007012c
- (id)initWithDatabase:(struct CalDatabase *)arg1 showingCalendars:(id)arg2;	// IMP=0x00000000000700ad
- (id)initFilteringAllWithDatabase:(struct CalDatabase *)arg1;	// IMP=0x000000000007005a
- (id)initWithDatabase:(struct CalDatabase *)arg1 entityType:(int)arg2;	// IMP=0x0000000000070045
- (id)initWithDatabase:(struct CalDatabase *)arg1;	// IMP=0x000000000007002b

@end

