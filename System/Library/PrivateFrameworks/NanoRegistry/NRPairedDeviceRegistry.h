//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NanoRegistry/NRPairedDeviceRegistryXPCFrameworkDelegate-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface NRPairedDeviceRegistry <NRPairedDeviceRegistryXPCFrameworkDelegate>
{
    _Bool _disconnected;	// 8 = 0x8
    unsigned short _lastCompatibilityState;	// 10 = 0xa
    NSMutableDictionary *_legacyDevices;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_pairedDeviceRegistryDeviceListQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_pairedRegistryGetDevicesQueue;	// 32 = 0x20
    unsigned long long _lastStatus;	// 40 = 0x28
    NSMutableArray *_waitingForRegistryUpdateBlocks;	// 48 = 0x30
    unsigned long long _callCount;	// 56 = 0x38
}

+ (CDUnknownBlockType)activePairedDeviceSelectorBlock;	// IMP=0x00000000000245dd
+ (CDUnknownBlockType)pairedDevicesSelectorBlock;	// IMP=0x000000000002457f
+ (CDUnknownBlockType)activeDeviceSelectorBlock;	// IMP=0x0000000000024521
+ (id)sharedInstance;	// IMP=0x0000000000023ff8
+ (_Bool)shouldBoostProcess;	// IMP=0x0000000000021a41
+ (Class)proxyClass;	// IMP=0x000000000002039e
- (void).cxx_destruct;	// IMP=0x000000000002d7e8
- (id)applyDiff:(id)arg1;	// IMP=0x000000000002d587
- (void)isPhoneReadyToMigrateDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002d1a4
- (_Bool)isAssertionActive:(id)arg1;	// IMP=0x000000000002cec6
- (_Bool)hasCompletedInitialSyncForPairingID:(id)arg1;	// IMP=0x000000000002cbe8
- (unsigned long long)migrationCountForPairingID:(id)arg1;	// IMP=0x000000000002c90b
- (unsigned long long)lastSyncSwitchIndex;	// IMP=0x000000000002c660
- (void)clearRecoveryFlagWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c5d0
- (void)checkIfFlaggedForRecoveryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c540
- (void)keepPhoneUnlockedInternalTestSPI:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c45a
- (id)devicesFromMigrationConsentRequestData:(id)arg1;	// IMP=0x000000000002c3d3
- (id)migrationConsentRequestData;	// IMP=0x000000000002c37c
- (id)lastMigrationRequestPhoneName;	// IMP=0x000000000002c23c
- (void)beginMigrationWithDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002be6c
- (void)beginMigrationWithDevice:(id)arg1 passcode:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002babb
- (void)setMigrationConsented:(_Bool)arg1 forDevice:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002ba3e
- (void)setMigrationConsented:(_Bool)arg1 forDeviceID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b6b3
- (void)waitForWatchPairingExtendedMetadataForAdvertisedName:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b41a
- (void)stopWatchSetupPush;	// IMP=0x000000000002b396
- (_Bool)isWatchSetupPushActive;	// IMP=0x000000000002b2fb
- (void)startWatchSetupPush;	// IMP=0x000000000002b277
- (void)_pingActiveGizmoWithPriority:(long long)arg1 withMessageSize:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002af32
- (void)putMigrationChallengeCharacteristicWriteData:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002abb1
- (void)getMigrationPairingCharacteristicReadDataWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002a791
- (void)_getActiveDeviceAssertionsWithInlineBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002a623
- (void)getSwitchEventsFromIndex:(unsigned int)arg1 inlineCallback:(CDUnknownBlockType)arg2;	// IMP=0x000000000002a470
- (id)_deviceIDAtSwitchIndex:(unsigned int)arg1 date:(id *)arg2;	// IMP=0x000000000002a298
- (unsigned int)switchIndex;	// IMP=0x000000000002a16b
- (void)pairingClientSetPairingParentName:(id)arg1 pairingParentAltDSID:(id)arg2 forDevice:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000029d6a
- (void)pairingClientSetAltAccountName:(id)arg1 altDSID:(id)arg2 forDevice:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000029969
- (void)pairingClientSetAltAccountName:(id)arg1 forDevice:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002994f
- (void)pairingClientDidEnterPhase:(id)arg1;	// IMP=0x000000000002989c
- (id)deviceIDForIDSDevice:(id)arg1;	// IMP=0x0000000000029887
- (id)deviceIDForNRDevice:(id)arg1;	// IMP=0x0000000000029868
- (id)deviceForNRDevice:(id)arg1 fromIDSDevices:(id)arg2;	// IMP=0x0000000000029667
- (id)nonActiveDeviceForIDSDevice:(id)arg1;	// IMP=0x00000000000295e7
- (id)deviceForIDSDevice:(id)arg1;	// IMP=0x0000000000029567
- (id)nonActiveDeviceForBluetoothID:(id)arg1;	// IMP=0x00000000000294b6
- (id)nonActiveDeviceForBTDeviceID:(id)arg1;	// IMP=0x000000000002942c
- (id)deviceForBluetoothID:(id)arg1;	// IMP=0x0000000000029267
- (id)deviceForBTDeviceID:(id)arg1;	// IMP=0x00000000000291dd
- (id)deviceForPairingID:(id)arg1;	// IMP=0x000000000002908e
- (void)completeRTCPairingMetricForMetricID:(id)arg1 withSuccess:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028e6f
- (void)_submitAlbertPairingReport;	// IMP=0x0000000000028dc9
- (void)_submitServerRequestReportWithRequestType:(id)arg1 duration:(double)arg2 errorCode:(unsigned int)arg3;	// IMP=0x0000000000028dc3
- (id)serverRequestReporterWithType:(id)arg1;	// IMP=0x0000000000028d76
- (void)sendDevicesUpdatedNotification;	// IMP=0x0000000000028cb9
- (void)xpcHasNewOOBKey:(id)arg1;	// IMP=0x0000000000028bf4
- (void)xpcDeviceID:(id)arg1 needsPasscode:(id)arg2;	// IMP=0x0000000000028b14
- (_Bool)supportsPairedDevice;	// IMP=0x0000000000028b02
- (void)overrideSignalStrengthLimit:(long long)arg1;	// IMP=0x0000000000028a45
- (void)endDiscovery;	// IMP=0x00000000000289c1
- (void)beginDiscovery;	// IMP=0x000000000002893d
- (void)retriggerUnpairInfoDialog;	// IMP=0x00000000000288b9
- (long long)minQuickSwitchCompatibilityVersion;	// IMP=0x000000000002886e
- (long long)minPairingCompatibilityVersion;	// IMP=0x0000000000028823
- (long long)maxPairingCompatibilityVersion;	// IMP=0x00000000000287d8
- (long long)pairingCompatibilityVersion;	// IMP=0x000000000002878d
- (void)userIsCheckingForUpdate;	// IMP=0x0000000000028723
- (id)blockAndQueryVersions;	// IMP=0x00000000000285f2
- (_Bool)isPaired;	// IMP=0x00000000000285aa
- (id)pairingID;	// IMP=0x0000000000028407
- (id)pairingStorePath;	// IMP=0x0000000000028203
- (void)resumePairingClientCrashMonitoring;	// IMP=0x000000000002817f
- (void)suspendPairingClientCrashMonitoring;	// IMP=0x00000000000280fb
- (void)abortPairingWithReason:(id)arg1;	// IMP=0x0000000000028048
- (void)abortPairing;	// IMP=0x0000000000028034
- (id)waitForActiveDevice;	// IMP=0x0000000000027d9a
- (id)waitForActiveOrAltAccountDevice;	// IMP=0x0000000000027b15
- (id)waitForActivePairedOrAltAccountDevice;	// IMP=0x0000000000027ada
- (id)waitForActivePairedDevice;	// IMP=0x0000000000027a9f
- (void)waitForAltAccountPairingStorePathPairingID:(CDUnknownBlockType)arg1;	// IMP=0x0000000000027850
- (void)waitForPairingStorePathPairingID:(CDUnknownBlockType)arg1;	// IMP=0x000000000002755e
- (void)altAccountPairingStorePathPairingID:(CDUnknownBlockType)arg1;	// IMP=0x000000000002745e
- (void)pairingStorePathPairingID:(CDUnknownBlockType)arg1;	// IMP=0x00000000000273ab
- (void)enterCompatibilityState:(unsigned short)arg1 forDevice:(id)arg2;	// IMP=0x00000000000272f7
- (void)fakePairedSyncIsCompleteWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000026f9a
- (void)switchToSimulator:(id)arg1 withQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000026c1d
- (void)unpairWithSimulator:(id)arg1 withQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000268a0
- (void)pairWithSimulator:(id)arg1 withQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000026523
- (void)unpairWithDevice:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x000000000002614b
- (void)unpairWithDevice:(id)arg1 shouldObliterate:(_Bool)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x0000000000026047
- (void)notifyPairingShouldContinue;	// IMP=0x0000000000025fdd
- (void)notifyPasscode:(id)arg1 forDevice:(id)arg2;	// IMP=0x0000000000025f14
- (void)notifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x0000000000025e60
- (void)gizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x0000000000025ae3
- (void)gizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x0000000000025766
- (void)companionPasscodePairWithDevice:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x00000000000253aa
- (void)companionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 withOptions:(id)arg3 operationHasBegun:(CDUnknownBlockType)arg4;	// IMP=0x0000000000024ff6
- (id)getAllDevicesWithArchivedAltAccountDevicesMatching:(CDUnknownBlockType)arg1;	// IMP=0x0000000000024d7c
- (id)getAllDevicesWithArchivedDevicesMatching:(CDUnknownBlockType)arg1;	// IMP=0x0000000000024a69
- (id)getDevicesMatching:(CDUnknownBlockType)arg1;	// IMP=0x000000000002469f
- (id)getAllDevicesWithArchivedDevices;	// IMP=0x0000000000024500
- (id)getAllDevices;	// IMP=0x00000000000244df
- (id)getActivePairedDevice;	// IMP=0x0000000000024457
- (id)getPairedDevices;	// IMP=0x00000000000243f0
- (id)getDevices;	// IMP=0x0000000000024389
- (_Bool)isKeychainEnabled;	// IMP=0x00000000000241ca
- (void)getDevicesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002407d
- (unsigned short)compatibilityState;	// IMP=0x0000000000023ad4
@property(readonly, nonatomic) unsigned long long status;
- (unsigned long long)_getStatusWithCollection:(id)arg1;	// IMP=0x0000000000023787
- (id)_;	// IMP=0x0000000000023569
- (id)_getClientInfo;	// IMP=0x0000000000023434
- (id)_getSecureProperties:(id)arg1;	// IMP=0x0000000000023101
- (id)_getChangeHistory;	// IMP=0x0000000000022fcc
- (id)initWithBoost:(_Bool)arg1 disconnected:(_Bool)arg2;	// IMP=0x0000000000021c7a
- (_Bool)supportsWatch;	// IMP=0x0000000000021c3a
- (id)initWithBoost:(_Bool)arg1;	// IMP=0x0000000000021c26
- (id)init;	// IMP=0x0000000000021bed
- (void)_invalidateActiveDeviceAssertionWithIdentifier:(id)arg1;	// IMP=0x000000000002198e
- (void)setActivePairedDevice:(id)arg1 withActiveDeviceAssertionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021529
- (void)setActivePairedDevice:(id)arg1 isMagicSwitch:(_Bool)arg2 operationHasCompleted:(CDUnknownBlockType)arg3;	// IMP=0x000000000002114f
- (void)setActivePairedDevice:(id)arg1 operationHasCompleted:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021138
- (_Bool)pairedDeviceSupportQuickSwitch;	// IMP=0x0000000000021023
- (_Bool)pairedDeviceCountIsLessThanMaxTinkerPairedDevices;	// IMP=0x0000000000020f80
- (_Bool)pairedDeviceCountIsLessThanMaxPairedDevices;	// IMP=0x0000000000020edd
- (void)setWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020b7e
- (void)clearWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020a9a
- (_Bool)watchNeedsGraduation;	// IMP=0x0000000000020995
- (long long)maxTinkerPairedDeviceCount;	// IMP=0x000000000002098a
- (long long)maxPairedDeviceCount;	// IMP=0x000000000002097f
- (void)threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002047a
- (void)logCallFrequency;	// IMP=0x00000000000203af
- (id)_getLocalDeviceCollection;	// IMP=0x0000000000020242

@end

