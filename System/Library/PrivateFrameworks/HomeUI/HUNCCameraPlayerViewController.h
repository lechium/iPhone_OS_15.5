//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVKit/AVPlayerViewController.h>

#import <HomeUI/AVPlayerViewControllerDelegate-Protocol.h>
#import <HomeUI/AVPlayerViewControllerDelegatePrivate-Protocol.h>
#import <HomeUI/HFCameraPlaybackEngineObserver-Protocol.h>
#import <HomeUI/HFItemManagerDelegate-Protocol.h>
#import <HomeUI/HUCameraPlayerAVBehaviorDelegate-Protocol.h>

@class HFCameraAnalyticsCameraPlayerLaunchEvent, HFCameraItem, HFCameraPlaybackEngine, HFItemManager, HMCameraClip, HMCameraProfile, HUCameraBlurViewController, HUCameraLiveButtonView, HUCameraPlayerAVBehavior, HUCameraPlayerAccessoryViewController, HUCameraPlayerLiveContentViewController, HUNCCameraPlayerPlaceholderContentViewController, HUNCCameraScrubberViewController, NAUILayoutConstraintSet, NSDate, NSString, NSUUID;

@interface HUNCCameraPlayerViewController : AVPlayerViewController <AVPlayerViewControllerDelegate, AVPlayerViewControllerDelegatePrivate, HFCameraPlaybackEngineObserver, HFItemManagerDelegate, HUCameraPlayerAVBehaviorDelegate>
{
    _Bool _hu_playbackControlsAreVisible;	// 8 = 0x8
    unsigned long long _numberOfAssociatedAccessoriesDisplayed;	// 16 = 0x10
    HMCameraProfile *_cameraProfile;	// 24 = 0x18
    HFItemManager *_itemManager;	// 32 = 0x20
    HFCameraItem *_cameraItem;	// 40 = 0x28
    HFCameraPlaybackEngine *_playbackEngine;	// 48 = 0x30
    HUCameraPlayerAVBehavior *_behavior;	// 56 = 0x38
    HUCameraPlayerLiveContentViewController *_liveContentViewController;	// 64 = 0x40
    HUNCCameraScrubberViewController *_miniScrubberViewController;	// 72 = 0x48
    HUCameraPlayerAccessoryViewController *_accessoryViewController;	// 80 = 0x50
    HUNCCameraPlayerPlaceholderContentViewController *_placeholderContentViewController;	// 88 = 0x58
    HUCameraBlurViewController *_blurViewController;	// 96 = 0x60
    NAUILayoutConstraintSet *_staticConstraintSet;	// 104 = 0x68
    NAUILayoutConstraintSet *_scrubberConstraintSet;	// 112 = 0x70
    HMCameraClip *_currentClip;	// 120 = 0x78
    NSUUID *_notificationUUID;	// 128 = 0x80
    NSUUID *_clipUUID;	// 136 = 0x88
    NSDate *_playbackStartDateFromSignificantEvent;	// 144 = 0x90
    HFCameraAnalyticsCameraPlayerLaunchEvent *_launchEvent;	// 152 = 0x98
    HUCameraLiveButtonView *_liveButtonView;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x000000000034e010
@property(retain, nonatomic) HUCameraLiveButtonView *liveButtonView; // @synthesize liveButtonView=_liveButtonView;
@property(retain, nonatomic) HFCameraAnalyticsCameraPlayerLaunchEvent *launchEvent; // @synthesize launchEvent=_launchEvent;
@property(nonatomic) _Bool hu_playbackControlsAreVisible; // @synthesize hu_playbackControlsAreVisible=_hu_playbackControlsAreVisible;
@property(retain, nonatomic) NSDate *playbackStartDateFromSignificantEvent; // @synthesize playbackStartDateFromSignificantEvent=_playbackStartDateFromSignificantEvent;
@property(retain, nonatomic) NSUUID *clipUUID; // @synthesize clipUUID=_clipUUID;
@property(retain, nonatomic) NSUUID *notificationUUID; // @synthesize notificationUUID=_notificationUUID;
@property(nonatomic) __weak HMCameraClip *currentClip; // @synthesize currentClip=_currentClip;
@property(retain, nonatomic) NAUILayoutConstraintSet *scrubberConstraintSet; // @synthesize scrubberConstraintSet=_scrubberConstraintSet;
@property(retain, nonatomic) NAUILayoutConstraintSet *staticConstraintSet; // @synthesize staticConstraintSet=_staticConstraintSet;
@property(retain, nonatomic) HUCameraBlurViewController *blurViewController; // @synthesize blurViewController=_blurViewController;
@property(retain, nonatomic) HUNCCameraPlayerPlaceholderContentViewController *placeholderContentViewController; // @synthesize placeholderContentViewController=_placeholderContentViewController;
@property(retain, nonatomic) HUCameraPlayerAccessoryViewController *accessoryViewController; // @synthesize accessoryViewController=_accessoryViewController;
@property(retain, nonatomic) HUNCCameraScrubberViewController *miniScrubberViewController; // @synthesize miniScrubberViewController=_miniScrubberViewController;
@property(retain, nonatomic) HUCameraPlayerLiveContentViewController *liveContentViewController; // @synthesize liveContentViewController=_liveContentViewController;
@property(retain, nonatomic) HUCameraPlayerAVBehavior *behavior; // @synthesize behavior=_behavior;
@property(retain, nonatomic) HFCameraPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
@property(retain, nonatomic) HFCameraItem *cameraItem; // @synthesize cameraItem=_cameraItem;
@property(retain, nonatomic) HFItemManager *itemManager; // @synthesize itemManager=_itemManager;
@property(retain, nonatomic) HMCameraProfile *cameraProfile; // @synthesize cameraProfile=_cameraProfile;
@property(nonatomic) unsigned long long numberOfAssociatedAccessoriesDisplayed; // @synthesize numberOfAssociatedAccessoriesDisplayed=_numberOfAssociatedAccessoriesDisplayed;
- (void)dealloc;	// IMP=0x000000000034dae9
- (void)updateLiveButton;	// IMP=0x000000000034da0d
- (void)updateVolumeControlVisibility;	// IMP=0x000000000034d966
- (void)toggleMicrophoneState;	// IMP=0x000000000034d704
- (_Bool)shouldDisplayMicrophoneControl;	// IMP=0x000000000034d669
- (void)updateMicrophoneVisibility;	// IMP=0x000000000034d5db
- (void)updateMicrophone;	// IMP=0x000000000034d30c
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;	// IMP=0x000000000034d1da
- (void)_updateCameraStatus;	// IMP=0x000000000034d115
- (void)playbackControlsDidChangePlayerVolume:(float)arg1;	// IMP=0x000000000034d0c6
- (void)playbackControlsDidUpdateVisibilityOfLoadingIndicator:(_Bool)arg1;	// IMP=0x000000000034d07a
- (void)playbackControlsDidToggleMuted:(_Bool)arg1;	// IMP=0x000000000034d02c
- (double)currentScrubberResolutionForBehavior:(id)arg1;	// IMP=0x000000000034cfdc
- (void)playbackEngine:(id)arg1 didUpdateEvents:(id)arg2;	// IMP=0x000000000034cdda
- (void)playbackEngine:(id)arg1 didUpdatePlaybackError:(id)arg2;	// IMP=0x000000000034cac0
- (void)playbackEngine:(id)arg1 didUpdateTimeControlStatus:(unsigned long long)arg2;	// IMP=0x000000000034c6c7
- (void)playbackEngine:(id)arg1 didUpdateLiveCameraSource:(id)arg2;	// IMP=0x000000000034c68c
- (void)playbackEngine:(id)arg1 didUpdateScrubbingStatus:(_Bool)arg2;	// IMP=0x000000000034c673
- (void)playbackEngine:(id)arg1 didUpdatePlaybackPosition:(id)arg2;	// IMP=0x000000000034c63d
- (void)playerViewController:(id)arg1 willTransitionToVisibilityOfPlaybackControls:(_Bool)arg2 withAnimationCoordinator:(id)arg3;	// IMP=0x000000000034c394
- (void)toggleLive;	// IMP=0x000000000034c2ae
- (_Bool)_shouldAutoPlayOnViewAppearance;	// IMP=0x000000000034c0df
- (void)_updatePlayerVolumeSliderState;	// IMP=0x000000000034c057
- (void)_updateLivePreviewAspectRatio;	// IMP=0x000000000034bf68
- (void)_updateStateForScrubbingStatus:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x000000000034be98
- (void)_updateStateForPlaybackPosition:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000034ba01
- (void)addPlaybackEngineObservation;	// IMP=0x000000000034b981
- (void)_setupPlaybackEngine;	// IMP=0x000000000034b779
- (void)loadCameraClip;	// IMP=0x000000000034af01
- (void)reloadForCurrentClip;	// IMP=0x000000000034abff
- (void)reloadAfterNotificationUpdate;	// IMP=0x000000000034ab34
- (void)updateViewConstraints;	// IMP=0x000000000034aa93
- (void)_setupConstraintSets;	// IMP=0x0000000000349ebd
- (id)home;	// IMP=0x0000000000349e43
- (void)_updatedRecordedClipInterfaceAvailabilityAnimated:(_Bool)arg1;	// IMP=0x0000000000349876
- (void)viewWillLayoutSubviews;	// IMP=0x0000000000349607
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x0000000000349528
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000000349408
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0000000000349329
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x00000000003490db
- (void)viewDidLoad;	// IMP=0x00000000003482fc
- (id)initWithCameraProfile:(id)arg1 notificationUUID:(id)arg2 clipUUID:(id)arg3 imageURL:(id)arg4;	// IMP=0x0000000000347d36

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

