//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class CAShapeLayer, MKMapView, NSMeasurementFormatter;
@protocol HULocationTriggerEditorMapDragRadiusViewDelegate, MKAnnotation, MKOverlay;

@interface HULocationTriggerEditorMapDragRadiusView : UIView
{
    _Bool _isDragging;	// 8 = 0x8
    _Bool _isMinimum;	// 9 = 0x9
    _Bool _isMaximum;	// 10 = 0xa
    id <HULocationTriggerEditorMapDragRadiusViewDelegate> _delegate;	// 16 = 0x10
    unsigned long long _proximity;	// 24 = 0x18
    MKMapView *_mapView;	// 32 = 0x20
    UIView *_handleEndpointView;	// 40 = 0x28
    id <MKAnnotation> _annotation;	// 48 = 0x30
    id <MKOverlay> _overlay;	// 56 = 0x38
    CAShapeLayer *_shapeLayer;	// 64 = 0x40
    NSMeasurementFormatter *_measurmentFormatter;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x000000000005ac3d
@property(retain, nonatomic) NSMeasurementFormatter *measurmentFormatter; // @synthesize measurmentFormatter=_measurmentFormatter;
@property(nonatomic) _Bool isMaximum; // @synthesize isMaximum=_isMaximum;
@property(nonatomic) _Bool isMinimum; // @synthesize isMinimum=_isMinimum;
@property(retain, nonatomic) CAShapeLayer *shapeLayer; // @synthesize shapeLayer=_shapeLayer;
@property(retain, nonatomic) id <MKOverlay> overlay; // @synthesize overlay=_overlay;
@property(retain, nonatomic) id <MKAnnotation> annotation; // @synthesize annotation=_annotation;
@property(retain, nonatomic) UIView *handleEndpointView; // @synthesize handleEndpointView=_handleEndpointView;
@property(nonatomic) _Bool isDragging; // @synthesize isDragging=_isDragging;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) unsigned long long proximity; // @synthesize proximity=_proximity;
@property(nonatomic) __weak id <HULocationTriggerEditorMapDragRadiusViewDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)usesMetric;	// IMP=0x000000000005aa53
- (double)minimumRadiusNormalized;	// IMP=0x000000000005aa2a
- (double)maximumRadiusNormalized;	// IMP=0x000000000005aa01
- (double)currentHandleDistance;	// IMP=0x000000000005a88a
- (double)currentHandleDistanceNormalized;	// IMP=0x000000000005a823
- (struct CGPoint)maxPoint;	// IMP=0x000000000005a708
- (struct CGPoint)minPoint;	// IMP=0x000000000005a5cf
- (void)resizeCircleAfterDelay;	// IMP=0x000000000005a529
- (double)feetToMeters:(double)arg1;	// IMP=0x000000000005a51b
- (double)minimumInMeters;	// IMP=0x000000000005a4d4
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x000000000005a1cc
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000059fed
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000059efd
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000059e5f
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000059d3c
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x00000000000594fa
- (void)removeHandle:(_Bool)arg1;	// IMP=0x0000000000059439
- (void)addHandleForAnnotation:(id)arg1 withOverlay:(id)arg2;	// IMP=0x0000000000059377
- (void)animateHandleIn:(_Bool)arg1;	// IMP=0x0000000000058efc
- (id)shapeLayerWithEndPoint:(struct CGPoint)arg1;	// IMP=0x0000000000058e19
- (id)bezierPathWithEndPoint:(struct CGPoint)arg1;	// IMP=0x0000000000058ba7
- (void)popAnimateHandle;	// IMP=0x0000000000058317
- (struct CGPoint)center;	// IMP=0x0000000000058282
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000058010

@end

