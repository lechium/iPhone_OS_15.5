//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PhotoAnalysis/PVPersistenceDelegate-Protocol.h>

@class NSString, PHAManager, PHPhotoLibrary;

@interface PHAVisionServicePersistenceDelegate : NSObject <PVPersistenceDelegate>
{
    PHPhotoLibrary *_photoLibrary;	// 8 = 0x8
    PHAManager *_photoAnalysisManager;	// 16 = 0x10
    unsigned int _faceAlgorithmUmbrellaVersion;	// 24 = 0x18
    unsigned int _sceneAlgorithmUmbrellaVersion;	// 28 = 0x1c
    _Bool _personBuilderMergeCandidatesDisabled;	// 32 = 0x20
}

+ (void)enumerateFetchResult:(id)arg1 withBatchSize:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004e577
+ (id)newFacesDeterministicSortDescriptors;	// IMP=0x000000000004e40d
- (void).cxx_destruct;	// IMP=0x00000000000461e2
@property(nonatomic) _Bool personBuilderMergeCandidatesDisabled; // @synthesize personBuilderMergeCandidatesDisabled=_personBuilderMergeCandidatesDisabled;
@property(nonatomic) unsigned int sceneAlgorithmUmbrellaVersion; // @synthesize sceneAlgorithmUmbrellaVersion=_sceneAlgorithmUmbrellaVersion;
@property(nonatomic) unsigned int faceAlgorithmUmbrellaVersion; // @synthesize faceAlgorithmUmbrellaVersion=_faceAlgorithmUmbrellaVersion;
- (void)logPVDebugMessage:(id)arg1;	// IMP=0x00000000000460f4
- (void)logPVInfoMessage:(id)arg1;	// IMP=0x0000000000046041
- (void)logPVWarningMessage:(id)arg1;	// IMP=0x0000000000045f94
- (void)logPVErrorMessage:(id)arg1;	// IMP=0x0000000000045edc
- (id)suggestedPersonLocalIdentifierForPersonLocalIdentifier:(id)arg1 faceClusterer:(id)arg2 canceler:(id)arg3 context:(id)arg4 error:(id *)arg5;	// IMP=0x0000000000045535
- (id)_faceToFaceCountMapForFaces:(id)arg1;	// IMP=0x000000000004502c
- (id)_representativenessByFaceCSNFromFaces:(id)arg1 canceler:(id)arg2;	// IMP=0x00000000000449f2
- (id)bestRepresentativeFaceForPerson:(id)arg1 qualityMeasureByFace:(id)arg2 candidateFaces:(id)arg3 canceler:(id)arg4;	// IMP=0x00000000000443f7
- (id)bestRepresentativeFaceForPerson:(id)arg1 qualityMeasureByFace:(id)arg2 canceler:(id)arg3;	// IMP=0x00000000000443df
- (_Bool)updateKeyFacesOfPersonsWithLocalIdentifiers:(id)arg1 forceUpdate:(_Bool)arg2 canceler:(id)arg3 error:(id *)arg4;	// IMP=0x000000000004393f
- (_Bool)_cleanupMergeCandidatesForVerifiedPersons:(id)arg1 inLibrary:(id)arg2 minimumFaceGroupSize:(unsigned long long)arg3 canceler:(id)arg4 error:(id *)arg5;	// IMP=0x0000000000042df0
- (_Bool)cleanupMergeCandidatesWithMinimumFaceGroupSize:(unsigned long long)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000042c57
- (void)buildPersonsWithFaceClusterer:(id)arg1 keyFaceUpdateBlock:(CDUnknownBlockType)arg2 canceler:(id)arg3 context:(id)arg4 extendTimeoutBlock:(CDUnknownBlockType)arg5;	// IMP=0x0000000000042652
- (void)collectPersonBuilderMetrics;	// IMP=0x000000000004215b
- (void)_buildPersonsFromUpdatedFaceGroups:(id)arg1 faceClusterer:(id)arg2 keyFaceUpdateBlock:(CDUnknownBlockType)arg3 canceler:(id)arg4 context:(id)arg5;	// IMP=0x00000000000398cd
- (void)_updateFaceCSNsToAddByPerson:(id)arg1 faceCSNsToRemoveByPerson:(id)arg2 faceInFaceGroupByCSN:(id)arg3 faceCSNsByPersonLocalIdentifier:(id)arg4 faceCSNsByMigratedPersonLocalIdentifier:(id)arg5 personsToUpdate:(id)arg6;	// IMP=0x00000000000393ef
- (id)_duplicateFaceCSNsOnAssetForPerson:(id)arg1 faceCSNsOnPerson:(id)arg2 faceByCSNCache:(id)arg3;	// IMP=0x0000000000038d2e
- (id)otherFacesOnAssetWithFace:(id)arg1 options:(id)arg2;	// IMP=0x0000000000038cd7
- (_Bool)_completePersonBuildingWithPersonsToUpdate:(id)arg1 facesToRemoveByPerson:(id)arg2 facesToAddByPerson:(id)arg3 updateFaceGroup:(id)arg4 newMergeCandidatePairs:(id)arg5 newInvalidMergeCandidatePairs:(id)arg6 faceInFaceGroupByCSN:(id)arg7 personCache:(id)arg8 keyFaceUpdateBlock:(CDUnknownBlockType)arg9 canceler:(id)arg10 context:(id)arg11 error:(id *)arg12;	// IMP=0x0000000000037e9c
- (void)_enumeratePersonsWithLocalIdentifiers:(id)arg1 fetchOptions:(id)arg2 personCache:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000003796e
- (void)_getRejectedTrainingFaceCSNs:(id *)arg1 rejectedFaceCSNs:(id *)arg2 rejectedPersonLocalIdentifiers:(id *)arg3 forPerson:(id)arg4 faceInFaceGroupByCSN:(id)arg5;	// IMP=0x00000000000373d2
- (unsigned long long)_level0ClusterIdForFaceCSN:(unsigned long long)arg1 level0Clusters:(id)arg2;	// IMP=0x00000000000372c0
- (void)_getTrainingFacesByPerson:(id *)arg1 confirmedFaceCSNs:(id *)arg2 faceCSNsByPerson:(id *)arg3 faceCSNsByMigratedPerson:(id *)arg4 faceCSNsByQuickClassificationPerson:(id *)arg5 mergeCandidates:(id *)arg6 invalidMergeCandidates:(id *)arg7 rejectedPersonsByPerson:(id *)arg8 faceInFaceGroupByCSN:(id *)arg9 inFaces:(id)arg10 personCache:(id)arg11 canceler:(id)arg12;	// IMP=0x00000000000365f9
- (void)dedupeGraphVerifiedPersonsInFaceGroup:(id)arg1 personCache:(id)arg2;	// IMP=0x0000000000035e09
- (void)_getMergeCandidates:(id)arg1 invalidMergeCandidates:(id)arg2 forPersonsWithLocalIdentifiers:(id)arg3;	// IMP=0x0000000000035639
- (id)_updatedFaceGroupByFGLocalIdentifierFromClusterCSNsWithCanceler:(id)arg1 fetchLimit:(unsigned long long)arg2;	// IMP=0x00000000000352ad
- (_Bool)needsPersonBuilding;	// IMP=0x00000000000351a9
- (id)_pvFaceprintForPHFace:(id)arg1;	// IMP=0x00000000000350f3
- (_Bool)recordNeedToPersonBuildOnFaceGroupContainingFace:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000034d49
- (_Bool)deleteEmptyGroupsAndReturnError:(id *)arg1;	// IMP=0x0000000000034c22
- (_Bool)resetLibraryClustersWithCanceler:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000346c7
- (_Bool)persistChangesToAlgorithmicFaceGroups:(id)arg1 faceCSNByLocalIdentifierForNewlyClusteredFaces:(id)arg2 faceCSNsOfUnclusteredFaces:(id)arg3 localIdentifiersOfUnclusteredFaces:(id)arg4 persistenceCompletionBlock:(CDUnknownBlockType)arg5 canceler:(id)arg6 error:(id *)arg7;	// IMP=0x00000000000335e1
- (id)_localIdentifiersOfUnverifiedPersonsAssociatedWithFaceGroups:(id)arg1 withCanceler:(id)arg2;	// IMP=0x000000000003329e
- (id)_fetchPHFacesForFaceIdentifiers:(id)arg1;	// IMP=0x00000000000330a4
- (id)groupedClusterSequenceNumbersOfFacesInFaceGroupsOfMinimumSize:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000000032bcf
- (_Bool)removeAutoAssignedFacesFromVerifiedPersonsAndPrepareForPersonBuilding:(id)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000324af
- (id)facesFromFaceGroupWithMostNumberOfFacesOnPerson:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000031ead
- (id)faceAssociatedWithFaceCrop:(id)arg1;	// IMP=0x0000000000031d40
- (id)associateFace:(id)arg1 withFaceCrop:(id)arg2 error:(id *)arg3;	// IMP=0x000000000003195f
- (_Bool)clearDirtyStateOnFaceCrops:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031826
- (id)dirtyFaceCropsWithLimit:(unsigned long long)arg1;	// IMP=0x00000000000315ab
- (_Bool)persistGeneratedFaceCrops:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003103a
- (_Bool)updateFaceprint:(id)arg1 ofPersistedFace:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000030ea9
- (_Bool)cleanupGroupedFacesWithClusterSequenceNumberSetToZeroWithCanceler:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000030807
- (_Bool)cleanupUngroupedFacesWithNonZeroClusterSequenceNumbersWithCanceler:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000304e0
- (_Bool)_resetFaceClusterSequenceNumberOfFacesInFetchResult:(id)arg1 inPhotoLibrary:(id)arg2 canceler:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000030319
- (id)_fetchResultForUngroupedFacesWithNonZeroClusterSequenceNumberInPhotoLibrary:(id)arg1;	// IMP=0x0000000000030209
- (id)_fetchResultForGroupedFacesWithClusterSequenceNumberSetToZeroInPhotoLibrary:(id)arg1;	// IMP=0x00000000000300e7
- (_Bool)persistFaces:(id)arg1 deleteFaces:(id)arg2 forAsset:(id)arg3 persistedFaces:(id *)arg4 error:(id *)arg5;	// IMP=0x000000000002fd53
- (_Bool)_ungroupFaceClusterSequenceNumbers:(id)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002f3e2
- (_Bool)ungroupFaceClusterSequenceNumbers:(id)arg1 batchSizeForUnclusteringFaces:(unsigned long long)arg2 canceler:(id)arg3 error:(id *)arg4;	// IMP=0x000000000002eed4
- (void)_categorizeGroupedFacesInFetchResult:(id)arg1 intoFaceLocalIdentifiersByFaceGroup:(id)arg2 ungroupedFaceLocalIdentifiers:(id *)arg3 canceler:(id)arg4 photoLibrary:(id)arg5;	// IMP=0x000000000002ed64
- (id)invalidFaceClusterSequenceNumbersInClusterSequenceNumbers:(id)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002eab7
- (id)facesFromAsset:(id)arg1;	// IMP=0x000000000002e9d1
- (id)assetForIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002e8c1
- (id)facesForClusteringWithLocalIdentifiers:(id)arg1 faceprintVersion:(unsigned int)arg2 groupingIdentifiers:(id)arg3;	// IMP=0x000000000002e22b
- (id)deterministicallyOrderedFaceIdentifiersWithLocalIdentifiers:(id)arg1 faceprintVersion:(unsigned int)arg2;	// IMP=0x000000000002e02c
- (id)unclusteredClusteringEligibleFaceLocalIdentifiers:(id *)arg1;	// IMP=0x000000000002dda1
- (unsigned long long)countOfClusteredFaces;	// IMP=0x000000000002dc48
- (unsigned long long)countOfUnclusteredClusteringEligibleFaces;	// IMP=0x000000000002dc04
- (unsigned long long)countOfClusteringEligibleFaces;	// IMP=0x000000000002dbc0
- (unsigned long long)countOfFaces;	// IMP=0x000000000002daa2
- (id)personsFetchResultWithLocalIdentifiers:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002d9c9
- (id)verifiedPersonsFetchResultWithLocalIdentifiers:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d8ba
- (id)fetchPersonWithLocalIdentifier:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002d6e3
- (id)fetchPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d4df
- (id)fetchFaceWithClusterSequenceNumber:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d273
- (id)fetchFaceWithLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d06f
- (id)fetchAssetWithLocalIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002ce6b
- (id)photoLibrary;	// IMP=0x000000000002cdef
- (id)initWithPhotoAnalysisManager:(id)arg1;	// IMP=0x000000000002cd8b
- (id)initWithPhotoLibrary:(id)arg1;	// IMP=0x000000000002cd1c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

