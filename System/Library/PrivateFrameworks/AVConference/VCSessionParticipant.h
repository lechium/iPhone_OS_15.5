//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVConference/VCAudioIODelegate-Protocol.h>
#import <AVConference/VCAudioIOSink-Protocol.h>
#import <AVConference/VCAudioPowerSpectrumSourceDelegate-Protocol.h>
#import <AVConference/VCConnectionChangedHandler-Protocol.h>
#import <AVConference/VCMediaStreamDelegate-Protocol.h>
#import <AVConference/VCMediaStreamGroupDelegate-Protocol.h>
#import <AVConference/VCRedundancyControllerDelegate-Protocol.h>
#import <AVConference/VCSecurityEventHandler-Protocol.h>

@class AVCBasebandCongestionDetector, AVCStatisticsCollector, NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, VCAudioIO, VCAudioRuleCollection, VCCallInfoBlob, VCNetworkFeedbackController, VCRedundancyControllerVideo, VCSecurityKeyManager, VCSessionMediaNegotiator, VCSessionParticipantOneToOneConfig;
@protocol OS_dispatch_queue, VCSessionParticipantDelegate, VCSessionParticipantStreamDelegate;

__attribute__((visibility("hidden")))
@interface VCSessionParticipant <VCMediaStreamDelegate, VCSecurityEventHandler, VCAudioIOSink, VCAudioIODelegate, VCConnectionChangedHandler, VCRedundancyControllerDelegate, VCAudioPowerSpectrumSourceDelegate, VCMediaStreamGroupDelegate>
{
    unsigned int _state;	// 16 = 0x10
    union tagNTP _creationTime;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_participantQueue;	// 32 = 0x20
    int _processId;	// 40 = 0x28
    id _delegate;	// 48 = 0x30
    id _streamDelegate;	// 56 = 0x38
    NSMutableDictionary *_participantStreamTokens;	// 64 = 0x40
    NSString *_uuid;	// 72 = 0x48
    NSString *_sessionUUID;	// 80 = 0x50
    NSString *_idsDestination;	// 88 = 0x58
    unsigned long long _idsParticipantID;	// 96 = 0x60
    NSData *_opaqueData;	// 104 = 0x68
    VCCallInfoBlob *_callInfoBlob;	// 112 = 0x70
    NSData *_mediaBlobCompressed;	// 120 = 0x78
    NSDictionary *_participantInfo;	// 128 = 0x80
    unsigned int _transportSessionID;	// 136 = 0x88
    VCAudioRuleCollection *_supportedAudioRules;	// 144 = 0x90
    int _deviceRole;	// 152 = 0x98
    long long _direction;	// 160 = 0xa0
    NSMutableArray *_audioStreams;	// 168 = 0xa8
    NSMutableArray *_videoStreams;	// 176 = 0xb0
    AVCStatisticsCollector *_statisticsCollector;	// 184 = 0xb8
    AVCBasebandCongestionDetector *_basebandCongestionDetector;	// 192 = 0xc0
    unsigned int _cellularUniqueTag;	// 200 = 0xc8
    double _lastParticipantMKMRecoveryTime;	// 208 = 0xd0
    double _participantMKMRecoveryTimeout;	// 216 = 0xd8
    float _volume;	// 224 = 0xe0
    float _audioPosition;	// 228 = 0xe4
    _Bool _isMuted;	// 232 = 0xe8
    _Bool _audioEnabled;	// 233 = 0xe9
    _Bool _videoEnabled;	// 234 = 0xea
    _Bool _screenEnabled;	// 235 = 0xeb
    _Bool _audioPaused;	// 236 = 0xec
    _Bool _videoPaused;	// 237 = 0xed
    _Bool _audioPausedToStart;	// 238 = 0xee
    _Bool _videoPausedToStart;	// 239 = 0xef
    VCAudioIO *_audioIO;	// 240 = 0xf0
    unsigned int _preferredIOSampleRate;	// 248 = 0xf8
    unsigned int _preferredIOSamplesPerFrame;	// 252 = 0xfc
    _Bool _oneToOneModeEnabled;	// 256 = 0x100
    _Bool _sharingEnabled;	// 257 = 0x101
    unsigned char _presentationState;	// 258 = 0x102
    VCSessionMediaNegotiator *_mediaNegotiator;	// 264 = 0x108
    struct tagVCMediaQueue *_mediaQueue;	// 272 = 0x110
    _Bool _localOnWiFi;	// 280 = 0x118
    VCRedundancyControllerVideo *_videoRedundancyController;	// 288 = 0x120
    id _reportingAgentWeak;	// 296 = 0x128
    VCSessionParticipantOneToOneConfig *_oneToOneConfig;	// 304 = 0x130
    _Bool _isGKVoiceChat;	// 312 = 0x138
    _Bool _isLowLatencyAudio;	// 313 = 0x139
    NSMutableDictionary *_streamGroups;	// 320 = 0x140
    NSMutableArray *_micStreamGroups;	// 328 = 0x148
    NSMutableArray *_videoStreamGroups;	// 336 = 0x150
    VCSecurityKeyManager *_securityKeyManager;	// 344 = 0x158
    VCNetworkFeedbackController *_networkFeedbackController;	// 352 = 0x160
    _Bool _hasScreenStreams;	// 360 = 0x168
}

+ (void)applyVideoNegotiatedSettings:(id)arg1 toStreamConfiguration:(id)arg2 withFeatureStringDictionary:(id)arg3;	// IMP=0x00000000003ac27a
+ (void)addCodecModesForPayload:(int)arg1 toCodecConfig:(id)arg2;	// IMP=0x00000000003aaceb
+ (id)participantDataWithParticipantData:(id)arg1 isReinit:(_Bool)arg2;	// IMP=0x00000000003a7a1e
+ (id)participantDataWithMediaNegotiatorVersion:(int)arg1 participantData:(id)arg2;	// IMP=0x00000000003a770a
+ (id)participantDataWithParticipantInfo:(id)arg1;	// IMP=0x00000000003a76dd
+ (id)participantInfoWithParticipantData:(id)arg1;	// IMP=0x00000000003a76b3
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(readonly, nonatomic) _Bool hasScreenStreams; // @synthesize hasScreenStreams=_hasScreenStreams;
@property(retain, nonatomic) VCSessionParticipantOneToOneConfig *oneToOneConfig; // @synthesize oneToOneConfig=_oneToOneConfig;
@property(nonatomic, getter=isScreenEnabled) _Bool screenEnabled; // @synthesize screenEnabled=_screenEnabled;
@property(nonatomic) unsigned char presentationState; // @synthesize presentationState=_presentationState;
@property(nonatomic) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(readonly) VCCallInfoBlob *callInfoBlob; // @synthesize callInfoBlob=_callInfoBlob;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(nonatomic, getter=isLocalOnWiFi) _Bool localOnWiFi; // @synthesize localOnWiFi=_localOnWiFi;
@property(readonly, nonatomic) VCSessionMediaNegotiator *mediaNegotiator; // @synthesize mediaNegotiator=_mediaNegotiator;
@property(readonly, nonatomic) unsigned long long idsParticipantID; // @synthesize idsParticipantID=_idsParticipantID;
@property(readonly, nonatomic) VCAudioRuleCollection *supportedAudioRules; // @synthesize supportedAudioRules=_supportedAudioRules;
@property(nonatomic) unsigned int cellularUniqueTag; // @synthesize cellularUniqueTag=_cellularUniqueTag;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(retain, nonatomic) AVCStatisticsCollector *statisticsCollector; // @synthesize statisticsCollector=_statisticsCollector;
@property(readonly, nonatomic) float audioPosition; // @synthesize audioPosition=_audioPosition;
@property(readonly, nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused; // @synthesize videoPaused=_videoPaused;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused; // @synthesize audioPaused=_audioPaused;
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled; // @synthesize videoEnabled=_videoEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(readonly, nonatomic) union tagNTP creationTime; // @synthesize creationTime=_creationTime;
@property(readonly, nonatomic) NSData *opaqueData; // @synthesize opaqueData=_opaqueData;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void)stopVideoCaptureClient;	// IMP=0x00000000003b5453
- (void)streamGroup:(id)arg1 remoteMediaStalled:(_Bool)arg2 duration:(double)arg3;	// IMP=0x00000000003b52d0
- (void)streamGroup:(id)arg1 didSuspendStreams:(_Bool)arg2;	// IMP=0x00000000003b51e9
- (void)didDecryptionTimeOutForMKMRecoveryForStreamGroup:(id)arg1;	// IMP=0x00000000003b4f6b
- (void)streamGroup:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;	// IMP=0x00000000003b4e55
- (void)streamGroup:(id)arg1 didRequestRedundancy:(_Bool)arg2;	// IMP=0x00000000003b4d6f
- (void)didChangeActualNetworkBitrateForStreamGroup:(id)arg1;	// IMP=0x00000000003b4c12
- (void)didChangeReceivingStreamsForStreamGroup:(id)arg1;	// IMP=0x00000000003b4b45
- (void)streamGroup:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;	// IMP=0x00000000003b4994
- (void)streamGroup:(id)arg1 didRemotePauseChange:(_Bool)arg2;	// IMP=0x00000000003b4897
- (void)streamGroup:(id)arg1 didRemoteEnableChange:(_Bool)arg2;	// IMP=0x00000000003b479a
- (void)didMediaDecryptionTimeOutForStreamGroup:(id)arg1;	// IMP=0x00000000003b4632
- (void)didChangeSendingStreamsForStreamGroup:(id)arg1;	// IMP=0x00000000003b4501
- (void)streamGroup:(id)arg1 didChangePlayoutRTPTime:(CDStruct_1b6d18a9)arg2;	// IMP=0x00000000003b44fb
- (void)streamGroup:(id)arg1 didChangeMediaPriority:(unsigned char)arg2;	// IMP=0x00000000003b43a2
- (void)handleSymptomReportForDecryptionError;	// IMP=0x00000000003b42f5
- (void)handleRemoteOneToOneSwitchWithStreamGroup:(id)arg1 fromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;	// IMP=0x00000000003b41a4
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x00000000003b4152
- (void)sendAudioPowerSpectrumSourceRegistration:(_Bool)arg1;	// IMP=0x00000000003b409b
- (void)audioPowerSpectrumSinkDidUnregister;	// IMP=0x00000000003b4087
- (void)audioPowerSpectrumSinkDidRegister;	// IMP=0x00000000003b4070
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;	// IMP=0x00000000003b400f
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;	// IMP=0x00000000003b3fae
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000003b3db1
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000003b3d50
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000003b3cef
- (void)didResumeAudioIO:(id)arg1;	// IMP=0x00000000003b3ce9
- (void)didSuspendAudioIO:(id)arg1;	// IMP=0x00000000003b3ce3
- (void)didEncryptionKeyRollTimeout;	// IMP=0x00000000003b3cdd
- (void)resetDecryptionTimeout;	// IMP=0x00000000003b398b
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x00000000003b3765
- (void)vcMediaStream:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 firType:(int)arg3;	// IMP=0x00000000003b3642
- (void)swapScreenStreamGroupSyncSourceWithState:(unsigned int)arg1;	// IMP=0x00000000003b31d8
- (_Bool)setupStreamGroupMediaSync;	// IMP=0x00000000003b30c3
- (_Bool)setupMediaSyncForStreamGroup:(id)arg1;	// IMP=0x00000000003b2e81
- (void)handleStreamGroupsActiveConnectionChange:(id)arg1;	// IMP=0x00000000003b2d64
- (void)collectAudioChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x00000000003b2cb9
- (void)collectVideoChannelMetrics:(CDStruct_4c7d81d2 *)arg1;	// IMP=0x00000000003b2c58
- (void)createRedundancyControllers;	// IMP=0x00000000003b2b37
- (_Bool)setAudioPosition:(float)arg1;	// IMP=0x00000000003b23be
- (_Bool)setVolume:(float)arg1;	// IMP=0x00000000003b2389
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(readonly, nonatomic) NSArray *allParticipantStreamInfo;
@property(readonly, nonatomic) NSArray *allParticipantManagedStreamInfos;
@property(readonly, nonatomic) _Bool hasVideoStreams;
@property(readonly, nonatomic) NSArray *audioStreams;
- (void)updateAudioSpectrumState;	// IMP=0x00000000003b1f3c
- (void)updateVideoPaused:(_Bool)arg1;	// IMP=0x00000000003b1d4a
- (void)applyScreenEnabledSetting:(_Bool)arg1;	// IMP=0x00000000003b1b68
- (id)applyVideoEnabledSetting:(_Bool)arg1;	// IMP=0x00000000003b1b07
- (void)stop;	// IMP=0x00000000003b1a59
- (void)start;	// IMP=0x00000000003b19ab
@property(nonatomic) id <VCSessionParticipantStreamDelegate> streamDelegate;
@property(readonly, nonatomic) id <VCSessionParticipantDelegate> delegate;
- (char *)participantStateToString:(unsigned int)arg1;	// IMP=0x00000000003b195b
- (_Bool)setState:(unsigned int)arg1;	// IMP=0x00000000003b16cd
- (unsigned int)preferredIOSamplesPerFrameForGroupID:(unsigned int)arg1;	// IMP=0x00000000003b1651
- (unsigned int)preferredIOSampleRateForGroupID:(unsigned int)arg1;	// IMP=0x00000000003b1613
- (void)setupPreferredIOSettings;	// IMP=0x00000000003b158a
- (void)dealloc;	// IMP=0x00000000003b11fa
- (id)initWithConfig:(id)arg1 delegate:(id)arg2;	// IMP=0x00000000003b0854
- (_Bool)configureWithDeviceRole:(int)arg1 negotiatedVideoEnabled:(_Bool)arg2 negotiatedScreenEnabled:(_Bool)arg3 operatingMode:(int)arg4;	// IMP=0x00000000003afb7e
- (_Bool)configureOneToOneWithConfig:(id)arg1;	// IMP=0x00000000003af593
- (_Bool)configureVideoWithDeviceRole:(int)arg1 streamInfoArray:(id)arg2;	// IMP=0x00000000003aeffb
- (id)newAudioRateControlConfigWithMediaControlInfoVersion:(unsigned char)arg1 isOneToOne:(_Bool)arg2;	// IMP=0x00000000003aed67
- (id)newVideoRateControlConfigWithMediaControlInfoVersion:(unsigned char)arg1 enableMediaControlInfoGenerator:(_Bool)arg2 isOneToOne:(_Bool)arg3;	// IMP=0x00000000003aeab8
- (_Bool)configureAudioWithDeviceRole:(int)arg1;	// IMP=0x00000000003adfd5
- (_Bool)updateConfigurationWithDeviceRole:(int)arg1;	// IMP=0x00000000003ada73
- (_Bool)configureAudioIOWithDeviceRole:(int)arg1 operatingMode:(int)arg2;	// IMP=0x00000000003ada12
- (_Bool)completeStreamSetup:(id)arg1;	// IMP=0x00000000003ad668
- (void)setupNetworkAddressesForMediaConfig:(id)arg1;	// IMP=0x00000000003ad662
- (void)cleanUpOneToOneStreams;	// IMP=0x00000000003ad619
- (void)stopAudioDump;	// IMP=0x00000000003ad41a
- (void)startAudioDump;	// IMP=0x00000000003ad414
- (id)getAudioDumpName;	// IMP=0x00000000003ad40c
- (_Bool)setupSecurityKeyHolderForStreamConfig:(id)arg1;	// IMP=0x00000000003ad295
- (int)securityKeyHolderUsageForStreamConfigDirection:(long long)arg1;	// IMP=0x00000000003ad280
@property(readonly, nonatomic) NSDictionary *participantStreamTokens; // @synthesize participantStreamTokens=_participantStreamTokens;
- (id)streamGroupWithID:(unsigned int)arg1;	// IMP=0x00000000003ad20d
- (id)microphoneGroup;	// IMP=0x00000000003ad1f6
- (id)systemAudioGroup;	// IMP=0x00000000003ad1df
- (id)screenGroup;	// IMP=0x00000000003ad186
- (long long)participantScreenToken;	// IMP=0x00000000003ad149
- (id)cameraGroups;	// IMP=0x00000000003ad043
- (long long)participantVideoToken;	// IMP=0x00000000003ad006
- (long long)participantMicrophoneToken;	// IMP=0x00000000003acfc9
- (id)newOneToOneScreenStreamConfigWithStreamDirection:(long long)arg1 streamSsrc:(unsigned int)arg2 encodingType:(unsigned char)arg3;	// IMP=0x00000000003acadc
- (id)newOneToOneVideoStreamConfigWithStreamDirection:(long long)arg1 streamSsrc:(unsigned int)arg2 encodingType:(unsigned char)arg3;	// IMP=0x00000000003ac5ba
- (id)newOneToOneAudioStreamConfigWithAudioSettings:(id)arg1 streamDirection:(long long)arg2 streamSsrc:(unsigned int)arg3;	// IMP=0x00000000003ab928
- (id)newOneToOneVideoStreamMultiwayConfiguration:(unsigned char)arg1;	// IMP=0x00000000003ab607
- (id)newOneToOneScreenStreamMultiwayConfiguration:(unsigned char)arg1;	// IMP=0x00000000003ab2e6
- (_Bool)setupAudioStreamConfiguration:(id)arg1 audioRules:(id)arg2;	// IMP=0x00000000003aad63
- (void)onDidResumeAudio;	// IMP=0x00000000003aace5
- (id)pauseVideo:(_Bool)arg1;	// IMP=0x00000000003aac33
- (id)pauseAudioStreams:(_Bool)arg1;	// IMP=0x00000000003aaa40
- (_Bool)shouldSetPause:(_Bool)arg1 onStream:(id)arg2;	// IMP=0x00000000003aaa16
- (void)onPauseAudioStreams;	// IMP=0x00000000003aaa10
- (id)setPaused:(_Bool)arg1 onStreamGroups:(id)arg2;	// IMP=0x00000000003aa89c
- (id)setCameraStreamGroupsPaused:(_Bool)arg1;	// IMP=0x00000000003aa85c
- (id)setAudioStreamGroupsPaused:(_Bool)arg1;	// IMP=0x00000000003aa83f
- (id)stopVideoStreams;	// IMP=0x00000000003aa646
- (id)stopAudioStreams;	// IMP=0x00000000003aa3e9
- (id)stopMediaStreams:(id)arg1;	// IMP=0x00000000003aa261
- (void)stopAudioIOCompletion;	// IMP=0x00000000003aa25b
- (void)stopSystemAudioCapture;	// IMP=0x00000000003aa255
- (void)startSystemAudioCapture;	// IMP=0x00000000003aa24f
- (id)stopScreenGroup;	// IMP=0x00000000003a9fb7
- (id)startScreenGroup;	// IMP=0x00000000003a9bfa
- (id)startVideo;	// IMP=0x00000000003a9b3b
- (id)startVideoStreams;	// IMP=0x00000000003a9b1e
- (void)stopStreamGroups;	// IMP=0x00000000003a9a13
- (id)startStreamGroups;	// IMP=0x00000000003a8f5b
- (id)updateActiveStateForStreamGroup:(id)arg1;	// IMP=0x00000000003a8d22
- (_Bool)isStreamGroupActive:(id)arg1;	// IMP=0x00000000003a8cc1
- (id)updateStreamGroups:(id)arg1;	// IMP=0x00000000003a8973
- (id)startStreamGroups:(id)arg1;	// IMP=0x00000000003a8841
- (id)stopStreamGroups:(id)arg1;	// IMP=0x00000000003a873e
- (id)startMicStreamGroups;	// IMP=0x00000000003a8710
- (id)stopMicStreamGroups;	// IMP=0x00000000003a86e2
- (id)startAudioStreams;	// IMP=0x00000000003a86a9
- (id)startMediaStreams:(id)arg1;	// IMP=0x00000000003a8521
- (id)stopAudioIO;	// IMP=0x00000000003a84a0
- (id)startAudioIO;	// IMP=0x00000000003a8343
- (void)onStartAudioIO;	// IMP=0x00000000003a833d
- (_Bool)isVideoStream:(id)arg1;	// IMP=0x00000000003a8314
- (_Bool)isAudioStream:(id)arg1;	// IMP=0x00000000003a82eb
- (void)stopInternal;	// IMP=0x00000000003a80fc
- (id)stopMultiwayStreams;	// IMP=0x00000000003a80c1
- (void)stopOneToOneStreams;	// IMP=0x00000000003a8093
- (id)oneToOneVideoStream;	// IMP=0x00000000003a805d
- (id)generateEncryptionKey;	// IMP=0x00000000003a7fc0
- (id)streamsToString;	// IMP=0x00000000003a7f85
@property(readonly, copy) NSString *description;
- (void)dispatchedSetVideoPaused:(_Bool)arg1;	// IMP=0x00000000003a6f5d
- (void)dispatchedSetAudioPaused:(_Bool)arg1;	// IMP=0x00000000003a6778
- (void)dispatchedSetScreenEnabled:(_Bool)arg1;	// IMP=0x00000000003a62e4
- (void)dispatchedSetVideoEnabled:(_Bool)arg1;	// IMP=0x00000000003a5a7f
- (void)dispatchedSetAudioEnabled:(_Bool)arg1;	// IMP=0x00000000003a553f
- (void)dispatchedStop;	// IMP=0x00000000003a509e
- (void)dispatchedStart;	// IMP=0x00000000003a4456
- (void)startMultiwayStreams;	// IMP=0x00000000003a4263
- (void)dispatchedStartOneToOneStreams;	// IMP=0x00000000003a3d1a
- (void)startOneToOneStreams;	// IMP=0x00000000003a3ad8
- (void)logAllStreamTokens;	// IMP=0x00000000003a38ce
- (void)callStreamDelegateWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000003a3895
- (void)callDelegateWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000003a3597
@property(readonly, nonatomic) int operatingMode;
@property(nonatomic) struct opaqueRTCReporting *reportingAgent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

