//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AVConference/VCAudioIOControllerControl-Protocol.h>
#import <AVConference/VCAudioSessionDelegate-Protocol.h>

@class ATSpatialStreamDescriptions, AVAudioDevice, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, VCAudioRelay, VCAudioRelayIO, VCAudioSessionMediaProperties, VCAudioUnitProperties, VCAudioUnitSpatialContext;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface VCAudioManager : NSObject <VCAudioIOControllerControl, VCAudioSessionDelegate>
{
    struct tagHANDLE *_hAUIO;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 16 = 0x10
    unsigned int _state;	// 24 = 0x18
    VCAudioSessionMediaProperties *_currentAudioSessionMediaProperties;	// 32 = 0x20
    VCAudioUnitProperties *_currentAudioUnitProperties;	// 40 = 0x28
    NSDictionary *_vpOperatingModeToAudioSessionMediaFormatMapping;	// 48 = 0x30
    NSMutableArray *_allClients;	// 56 = 0x38
    NSMutableArray *_startingIOClients;	// 64 = 0x40
    AVAudioDevice *_inputDevice;	// 72 = 0x48
    AVAudioDevice *_outputDevice;	// 80 = 0x50
    _Bool _isGKVoiceChat;	// 88 = 0x58
    _Bool _isMicrophoneMuted;	// 89 = 0x59
    _Bool _isMixingVoiceWithMediaEnabled;	// 90 = 0x5a
    _Bool _isInDaemon;	// 91 = 0x5b
    _Bool _isInputMeteringEnabled;	// 92 = 0x5c
    _Bool _isOutputMeteringEnabled;	// 93 = 0x5d
    _Bool _isSpeakerPhoneEnabled;	// 94 = 0x5e
    _Bool _isSuspended;	// 95 = 0x5f
    _Bool _followSystemInput;	// 96 = 0x60
    _Bool _followSystemOutput;	// 97 = 0x61
    struct _VCAudioIOControllerIOState _sinkData;	// 104 = 0x68
    struct _VCAudioIOControllerIOState _sourceData;	// 216 = 0xd8
    int _interruptThreadState;	// 328 = 0x148
    VCAudioRelay *_interruptThread;	// 336 = 0x150
    VCAudioRelayIO *_interruptThreadClient;	// 344 = 0x158
    _Bool _isInterrupting;	// 352 = 0x160
    struct _opaque_pthread_mutex_t _interruptingMutex;	// 360 = 0x168
    struct _opaque_pthread_mutex_t _inputDeviceMutex;	// 424 = 0x1a8
    struct _opaque_pthread_mutex_t _outputDeviceMutex;	// 488 = 0x1e8
    _Bool _spatialAudioDisabled;	// 552 = 0x228
    void **_audioSession;	// 560 = 0x230
    int _playbackMode;	// 568 = 0x238
    NSMutableDictionary *_spatialContexts;	// 576 = 0x240
    NSMutableDictionary *_audioSessionSinkMuted;	// 584 = 0x248
    VCAudioUnitSpatialContext *_currentSpatialContext;	// 592 = 0x250
    CDUnknownBlockType _mutedTalkerNotificationHandler;	// 600 = 0x258
    NSArray *_stateStrings;	// 608 = 0x260
    ATSpatialStreamDescriptions *_spatialStreamDescriptions;	// 616 = 0x268
    _Bool _isMediaPlaybackOnExternalDevice;	// 624 = 0x270
}

+ (id)sharedSystemAudioInstance;	// IMP=0x0000000000009766
+ (id)sharedVoiceChatInstance;	// IMP=0x000000000000970f
@property(retain, nonatomic) NSDictionary *vpOperatingModeToAudioSessionMediaFormatMapping; // @synthesize vpOperatingModeToAudioSessionMediaFormatMapping=_vpOperatingModeToAudioSessionMediaFormatMapping;
@property(nonatomic) _Bool isInDaemon; // @synthesize isInDaemon=_isInDaemon;
@property(retain, nonatomic) VCAudioUnitProperties *currentAudioUnitProperties; // @synthesize currentAudioUnitProperties=_currentAudioUnitProperties;
@property(retain, nonatomic) VCAudioSessionMediaProperties *currentAudioSessionMediaProperties; // @synthesize currentAudioSessionMediaProperties=_currentAudioSessionMediaProperties;
@property(nonatomic, getter=isSpeakerPhoneEnabled) _Bool speakerPhoneEnabled; // @synthesize speakerPhoneEnabled=_isSpeakerPhoneEnabled;
@property(nonatomic, getter=isMixingVoiceWithMediaEnabled) _Bool mixingVoiceWithMediaEnabled; // @synthesize mixingVoiceWithMediaEnabled=_isMixingVoiceWithMediaEnabled;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted; // @synthesize microphoneMuted=_isMicrophoneMuted;
@property(nonatomic) _Bool isGKVoiceChat; // @synthesize isGKVoiceChat=_isGKVoiceChat;
- (int)setVolume:(float)arg1 withRampTime:(float)arg2;	// IMP=0x000000000001454c
- (void)setupDynamicDuckingVolumeHandlerForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x0000000000014546
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x00000000000144f4
- (void)didSessionEnd;	// IMP=0x00000000000144e2
- (void)didSessionStop;	// IMP=0x00000000000144d0
- (void)didSessionResume;	// IMP=0x00000000000142d3
- (void)didSessionPause;	// IMP=0x00000000000140cb
- (void)stopInterruptThread;	// IMP=0x0000000000013fde
- (void)startInterruptThread;	// IMP=0x0000000000013e0e
- (void)cleanupInterruptThread;	// IMP=0x0000000000013dca
- (_Bool)setupInterruptThread;	// IMP=0x0000000000013c4e
- (void)stopAudioSession;	// IMP=0x0000000000013c3a
- (void)resetAudioSessionWithProperties:(id)arg1 interruptSuccessful:(_Bool *)arg2;	// IMP=0x0000000000013b09
- (_Bool)startAudioSessionWithProperties:(id)arg1;	// IMP=0x0000000000013af4
- (void)refreshRemoteCodecType:(unsigned int)arg1 sampleRate:(double)arg2;	// IMP=0x00000000000139f6
- (void)refreshOutputMetering;	// IMP=0x0000000000013972
- (void)refreshInputMetering;	// IMP=0x00000000000138ee
- (void)updateClient:(id)arg1 direction:(unsigned char)arg2;	// IMP=0x0000000000013395
- (void)stopClient:(id)arg1;	// IMP=0x0000000000012fc3
- (void)startClient:(id)arg1;	// IMP=0x0000000000012b08
- (_Bool)updateStateWithAudioIOClient:(id)arg1;	// IMP=0x00000000000123f8
- (id)preferredClientWithNewClient:(id)arg1;	// IMP=0x000000000001227a
- (_Bool)stateInterruptedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x0000000000011fa1
- (void)stateTransitionInterruptedToStarted;	// IMP=0x0000000000011f73
- (void)stateTransitionInterruptedToRunning;	// IMP=0x0000000000011f41
- (_Bool)stateInterruptedShouldGoToRunning:(id)arg1;	// IMP=0x0000000000011f15
- (_Bool)stateInterruptedShouldGoToStarted:(id)arg1;	// IMP=0x0000000000011eb9
- (_Bool)stateRunningWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x0000000000011b42
- (void)stateTransitionRunningToInterrupted;	// IMP=0x0000000000011b14
- (void)stateRunningToSessionStarted;	// IMP=0x0000000000011ae6
- (_Bool)stateRunningShouldTransitionToInterrupted:(id)arg1;	// IMP=0x0000000000011aba
- (_Bool)stateRunningShouldTransitionToStarted:(id)arg1;	// IMP=0x0000000000011a5e
- (_Bool)stateSessionStartedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001158f
- (void)enterStateStarted;	// IMP=0x0000000000011355
- (_Bool)stateIdleWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x00000000000112cb
- (void)activateSpatialContext:(id)arg1 force:(_Bool)arg2;	// IMP=0x0000000000011260
- (void)applySpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1;	// IMP=0x000000000001108c
- (void)applySessionContextToAudioUnitProperties:(id)arg1 preferredClient:(id)arg2;	// IMP=0x0000000000010ec8
- (void)setSpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1 audioSessionId:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000010d2c
- (void)unregisterAudioSessionId:(unsigned int)arg1;	// IMP=0x0000000000010b3b
- (int)registerAudioSessionId:(unsigned int)arg1 maxChannelCountMic:(unsigned int)arg2 maxChannelCountSpeaker:(unsigned int)arg3 spatialMetadata:(struct OpaqueCMBlockBuffer *)arg4;	// IMP=0x0000000000010877
- (int)unregisterFromMutedTalkerNotification;	// IMP=0x00000000000106bc
- (int)registerForMutedTalkerNotification:(CDUnknownBlockType)arg1;	// IMP=0x0000000000010483
- (int)unregisterForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x000000000001036a
- (int)registerForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x000000000001012d
- (void)applyControllerFormatToClients:(id)arg1;	// IMP=0x000000000000fec7
- (void)activateStartingClient:(id)arg1 applyControllerFormat:(_Bool)arg2;	// IMP=0x000000000000fd98
- (void)completeStartForAllStartingClients;	// IMP=0x000000000000fb86
- (void)unregisterClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x000000000000f8c2
- (void)registerClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x000000000000f569
- (void)stopAUIO;	// IMP=0x000000000000f4d3
- (void)resetAudioLimiterWithProperties:(id)arg1;	// IMP=0x000000000000f37d
- (void)resetAUIOWithProperties:(id)arg1;	// IMP=0x000000000000f1c5
- (_Bool)shouldResetAudioSessionWithProperties:(id)arg1;	// IMP=0x000000000000ef5d
- (_Bool)shouldResetAudioUnitWithProperties:(id)arg1;	// IMP=0x000000000000e6e4
- (_Bool)startAUIOWithProperties:(id)arg1;	// IMP=0x000000000000dc24
- (void)setMediaPlaybackOnExternalDevice:(_Bool)arg1;	// IMP=0x000000000000db8d
- (void)updateCurrentOutputDevice:(id)arg1;	// IMP=0x000000000000d766
@property(retain) AVAudioDevice *currentOutputDevice; // @synthesize currentOutputDevice=_outputDevice;
- (void)setCurrentOutputDeviceInternal:(id)arg1;	// IMP=0x000000000000d193
@property(retain) AVAudioDevice *currentInputDevice; // @synthesize currentInputDevice=_inputDevice;
- (void)updateCurrentInputDevice:(id)arg1;	// IMP=0x000000000000c79d
- (void)setCurrentInputDeviceInternal:(id)arg1;	// IMP=0x000000000000c755
- (void)setupIODevicesForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x000000000000c711
- (id)newAudioSessionMediaPropertiesWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;	// IMP=0x000000000000c700
- (id)newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;	// IMP=0x000000000000c6e7
- (id)newAudioUnitPropertiesForSystemAudioWithPreferredClient:(id)arg1;	// IMP=0x000000000000c3ea
- (id)newAudioUnitPropertiesWithPreferredClient:(id)arg1;	// IMP=0x000000000000bd4d
- (_Bool)computeAllowAudioRecordingWithPreferredClient:(id)arg1;	// IMP=0x000000000000bba5
- (unsigned int)computeSamplePerFrameWithPreferredClient:(id)arg1 sampleRate:(unsigned int)arg2;	// IMP=0x000000000000b9d9
- (void)computeFormatDescription:(struct AudioStreamBasicDescription *)arg1 withPreferredClient:(id)arg2;	// IMP=0x000000000000b814
- (unsigned int)vpOperationModeForConferenceOperatingMode:(int)arg1 deviceRole:(int)arg2;	// IMP=0x000000000000b7a0
- (void)_cleanupDeadClients;	// IMP=0x000000000000b3e8
- (_Bool)removeClient:(id)arg1;	// IMP=0x000000000000b2f4
- (void)waitIdleForClient:(id)arg1;	// IMP=0x000000000000afa5
- (_Bool)addClient:(id)arg1;	// IMP=0x000000000000ae00
- (void)removeAllClientsForIO:(struct _VCAudioIOControllerIOState *)arg1;	// IMP=0x000000000000adb8
- (void)flushEventQueue:(struct opaqueCMSimpleQueue *)arg1;	// IMP=0x000000000000aaea
- (int)prewarmingClientOperatingMode;	// IMP=0x000000000000a9d3
- (void)resetAudioTimestamps;	// IMP=0x000000000000a9ac
- (void)computeHardwarePreferences;	// IMP=0x000000000000a9a6
- (void)setOutputMetering;	// IMP=0x000000000000a867
- (void)setInputMetering;	// IMP=0x000000000000a728
- (void)applyAudioSessionMute;	// IMP=0x000000000000a6a1
- (void)setMute:(_Bool)arg1 forClient:(id)arg2;	// IMP=0x000000000000a496
- (void)dealloc;	// IMP=0x0000000000009ffa
- (id)initWithAudioSessionMode:(int)arg1;	// IMP=0x000000000000999f
- (void)getPreferredFormat:(struct AudioStreamBasicDescription *)arg1 blockSize:(double *)arg2 vpOperatingMode:(unsigned int *)arg3 forOperatingMode:(int)arg4 deviceRole:(int)arg5 suggestedFormat:(struct AudioStreamBasicDescription *)arg6;	// IMP=0x0000000000009805
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sourceIO;
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sinkIO;
- (id)autorelease;	// IMP=0x00000000000097e5
- (oneway void)release;	// IMP=0x00000000000097df
- (unsigned long long)retainCount;	// IMP=0x00000000000097d2
- (id)retain;	// IMP=0x00000000000097c9
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000097c0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

