//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TrackingAvoidance/NSSecureCoding-Protocol.h>

@interface TADeviceRecordSettings : NSObject <NSSecureCoding>
{
    _Bool _surfaceImmediatelyBetweenBackstopAndKeyroll;	// 8 = 0x8
    _Bool _shouldAlertHELEImmediatelyForImmediateTypes;	// 9 = 0x9
    _Bool _surfaceHELEImmediatelyBetweenBackstopAndKeyroll;	// 10 = 0xa
    double _expiryTimeInterval;	// 16 = 0x10
    double _purgeTimeInterval;	// 24 = 0x18
    double _keepAliveInterval;	// 32 = 0x20
    double _minimumStagingInterval;	// 40 = 0x28
    long long _stagingBackstopHour;	// 48 = 0x30
    long long _assumedKeyRollHour;	// 56 = 0x38
    double _scanInterval;	// 64 = 0x40
    double _maxExpectedHELEWildInterval;	// 72 = 0x48
    double _minimumHELEStagingInterval;	// 80 = 0x50
    long long _stagingHELEBackstopHour;	// 88 = 0x58
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000003bbbf
@property(readonly, nonatomic) _Bool surfaceHELEImmediatelyBetweenBackstopAndKeyroll; // @synthesize surfaceHELEImmediatelyBetweenBackstopAndKeyroll=_surfaceHELEImmediatelyBetweenBackstopAndKeyroll;
@property(readonly, nonatomic) long long stagingHELEBackstopHour; // @synthesize stagingHELEBackstopHour=_stagingHELEBackstopHour;
@property(readonly, nonatomic) double minimumHELEStagingInterval; // @synthesize minimumHELEStagingInterval=_minimumHELEStagingInterval;
@property(readonly, nonatomic) _Bool shouldAlertHELEImmediatelyForImmediateTypes; // @synthesize shouldAlertHELEImmediatelyForImmediateTypes=_shouldAlertHELEImmediatelyForImmediateTypes;
@property(readonly, nonatomic) double maxExpectedHELEWildInterval; // @synthesize maxExpectedHELEWildInterval=_maxExpectedHELEWildInterval;
@property(readonly, nonatomic) _Bool surfaceImmediatelyBetweenBackstopAndKeyroll; // @synthesize surfaceImmediatelyBetweenBackstopAndKeyroll=_surfaceImmediatelyBetweenBackstopAndKeyroll;
@property(readonly, nonatomic) double scanInterval; // @synthesize scanInterval=_scanInterval;
@property(readonly, nonatomic) long long assumedKeyRollHour; // @synthesize assumedKeyRollHour=_assumedKeyRollHour;
@property(readonly, nonatomic) long long stagingBackstopHour; // @synthesize stagingBackstopHour=_stagingBackstopHour;
@property(readonly, nonatomic) double minimumStagingInterval; // @synthesize minimumStagingInterval=_minimumStagingInterval;
@property(readonly, nonatomic) double keepAliveInterval; // @synthesize keepAliveInterval=_keepAliveInterval;
@property(nonatomic) double purgeTimeInterval; // @synthesize purgeTimeInterval=_purgeTimeInterval;
@property(nonatomic) double expiryTimeInterval; // @synthesize expiryTimeInterval=_expiryTimeInterval;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000003bd73
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000003bbc7
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000003b905
- (id)initWithExpiryTimeIntervalOrDefault:(id)arg1 purgeTimeIntervalOrDefault:(id)arg2 keepAliveIntervalOrDefault:(id)arg3 minimumStagingIntervalOrDefault:(id)arg4 stagingBackstopHourOrDefault:(id)arg5 assumedKeyRollHourOrDefault:(id)arg6 scanIntervalOrDefault:(id)arg7 surfaceImmediatelyBetweenBackstopAndKeyrollOrDefault:(id)arg8 maxExpectedHELEWildIntervalOrDefault:(id)arg9 shouldAlertHELEImmediatelyForImmediateTypesOrDefault:(id)arg10 minimumHELEStagingIntervalOrDefault:(id)arg11 stagingHELEBackstopHourOrDefault:(id)arg12 surfaceHELEImmediatelyBetweenBackstopAndKeyrollOrDefault:(id)arg13;	// IMP=0x000000000003b582
- (id)initWithExpiryTimeInterval:(double)arg1 purgeTimeInterval:(double)arg2 keepAliveInterval:(double)arg3 minimumStagingInterval:(double)arg4 stagingBackstopHour:(unsigned long long)arg5 assumedKeyRollHour:(unsigned long long)arg6 scanInterval:(double)arg7 surfaceImmediatelyBetweenBackstopAndKeyroll:(_Bool)arg8 maxExpectedHELEWildInterval:(double)arg9 shouldAlertHELEImmediatelyForImmediateTypes:(_Bool)arg10 minimumHELEStagingInterval:(double)arg11 stagingHELEBackstopHour:(unsigned long long)arg12 surfaceHELEImmediatelyBetweenBackstopAndKeyroll:(_Bool)arg13;	// IMP=0x000000000003b4ad
- (id)init;	// IMP=0x000000000003b453

@end

