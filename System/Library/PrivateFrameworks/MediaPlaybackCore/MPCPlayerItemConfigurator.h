//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MPAVRoutingControllerDelegate-Protocol.h>

@class MPAVRoutingController, MPCMediaFoundationTranslator, MPCModelGenericAVItem, MPCPlaybackEngine, MPCPlayerAudioRoute, NSString;
@protocol MFPlaybackStackController><MFQueueManagement, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface MPCPlayerItemConfigurator : NSObject <MPAVRoutingControllerDelegate>
{
    MPCPlayerAudioRoute *_currentAudioRoute;	// 8 = 0x8
    MPAVRoutingController *_routingController;	// 16 = 0x10
    long long _defaultEQPresetType;	// 24 = 0x18
    MPCMediaFoundationTranslator *_translator;	// 32 = 0x20
    id <MFPlaybackStackController><MFQueueManagement> _stackController;	// 40 = 0x28
    MPCPlaybackEngine *_playbackEngine;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_userDefaultsDebouncer;	// 56 = 0x38
    MPCModelGenericAVItem *_currenItem;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00000000000f13a8
@property(readonly, nonatomic) __weak MPCModelGenericAVItem *currenItem; // @synthesize currenItem=_currenItem;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *userDefaultsDebouncer; // @synthesize userDefaultsDebouncer=_userDefaultsDebouncer;
@property(readonly, nonatomic) __weak MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
@property(readonly, nonatomic) __weak id <MFPlaybackStackController><MFQueueManagement> stackController; // @synthesize stackController=_stackController;
@property(readonly, nonatomic) __weak MPCMediaFoundationTranslator *translator; // @synthesize translator=_translator;
@property(nonatomic) long long defaultEQPresetType; // @synthesize defaultEQPresetType=_defaultEQPresetType;
@property(readonly, nonatomic) MPAVRoutingController *routingController; // @synthesize routingController=_routingController;
- (void)_updatePreferredAudioFormatIfRequiredForItem:(id)arg1 route:(id)arg2;	// IMP=0x00000000000f0d32
- (void)_updateQueueItemsAndPlayerForFormatChangeIfRequired;	// IMP=0x00000000000f0bac
- (_Bool)_shouldReloadEntireQueue;	// IMP=0x00000000000f0978
- (id)_modeObjectForPlayerItem:(id)arg1;	// IMP=0x00000000000f08b5
- (id)queuedItems;	// IMP=0x00000000000f064e
- (id)currentItem;	// IMP=0x00000000000f05ce
- (void)updateCurrentAudioRouteWithPickedRoutes:(id)arg1;	// IMP=0x00000000000f04d9
@property(readonly, nonatomic) MPCPlayerAudioRoute *currentAudioRoute; // @synthesize currentAudioRoute=_currentAudioRoute;
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;	// IMP=0x00000000000f0298
- (id)_audioFormatsDictionaryWithHLSMetadata:(id)arg1;	// IMP=0x00000000000f0074
- (id)_HLSMetadataForAsset:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000efeb3
- (id)_audioFormatsDictionaryWithHLSMetadataFromAsset:(id)arg1 metadataWaitTime:(double *)arg2 error:(id *)arg3;	// IMP=0x00000000000efde5
- (void)_emitAudioFormatSelection:(id)arg1 item:(id)arg2;	// IMP=0x00000000000efacb
- (_Bool)_setupQueueItemForEnhancedAudioHLSPlayback:(id)arg1 metadataWaitTime:(double *)arg2 error:(id *)arg3;	// IMP=0x00000000000ef0f1
- (void)_setupPlayer;	// IMP=0x00000000000eef41
- (void)processAudioQualityChanges;	// IMP=0x00000000000eecc4
- (void)tearDownDefaultsDebouncer;	// IMP=0x00000000000eec3f
- (void)setupDefaultsDebouncer;	// IMP=0x00000000000eea93
- (void)_preferredResolutionDidChange:(id)arg1;	// IMP=0x00000000000eea16
- (void)_playbackUserDefaultsEQPresetDidChangeNotification:(id)arg1;	// IMP=0x00000000000ee9b7
- (void)_setupNotifications;	// IMP=0x00000000000ee8da
- (void)_setupRoutingController;	// IMP=0x00000000000ee845
- (void)updatePlayerConfiguration;	// IMP=0x00000000000ee833
- (_Bool)configureQueuePlayerItem:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000edf90
- (void)dealloc;	// IMP=0x00000000000edf1b
- (id)initWithPlaybackEngine:(id)arg1 stackController:(id)arg2 translator:(id)arg3;	// IMP=0x00000000000eddc9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

