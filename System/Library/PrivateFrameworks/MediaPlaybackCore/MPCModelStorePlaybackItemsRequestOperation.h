//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaPlayer/MPAsyncOperation.h>

@class MPCModelStorePlaybackItemsRequest, MPCModelStorePlaybackItemsResponse, NSMutableArray, NSObject, NSOperationQueue, NSProgress;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MPCModelStorePlaybackItemsRequestOperation : MPAsyncOperation
{
    NSProgress *_activeProgress;	// 8 = 0x8
    NSOperationQueue *_operationQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_accessQueue;	// 24 = 0x18
    MPCModelStorePlaybackItemsResponse *_previousModelResponse;	// 32 = 0x20
    _Bool _hasReceivedFinalResponse;	// 40 = 0x28
    _Bool _hasCalledResponseHandler;	// 41 = 0x29
    NSMutableArray *_errors;	// 48 = 0x30
    MPCModelStorePlaybackItemsRequest *_request;	// 56 = 0x38
    CDUnknownBlockType _responseHandler;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000015f748
@property(readonly, copy, nonatomic) CDUnknownBlockType responseHandler; // @synthesize responseHandler=_responseHandler;
@property(readonly, copy, nonatomic) MPCModelStorePlaybackItemsRequest *request; // @synthesize request=_request;
- (void)_runSubscriptionStatusWithRequestContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000015f62b
- (void)_handleItemMetadataBactchRequestCompletedWithAccumulator:(id)arg1 previousResponse:(id)arg2 userIdentity:(id)arg3 error:(id)arg4 isFinalResponse:(_Bool)arg5;	// IMP=0x000000000015f336
- (id)_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:(id)arg1;	// IMP=0x000000000015f293
- (void)_runPersonalizationWithSectionCollection:(id)arg1 localEquivalencyMapping:(id)arg2 expirationDate:(id)arg3 userIdentity:(id)arg4 error:(id)arg5 isFinalResponse:(_Bool)arg6 isInvalidForPersonalization:(_Bool)arg7 networkingTime:(double)arg8;	// IMP=0x000000000015eff9
- (void)_validateUserIdentityForRequestWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000015e786
- (void)_runStorePlatformRequestToLoadMetadataWithAccumulator:(id)arg1 userIdentity:(id)arg2 previousResponse:(id)arg3 shouldBatchResultsWithPlaceholderObjects:(_Bool)arg4;	// IMP=0x000000000015e485
- (void)_importMediaAPICollectionItemMetadataResponse:(id)arg1 withError:(id)arg2 usingAccumulator:(id)arg3 userIdentity:(id)arg4 trustID:(id)arg5 previousResponse:(id)arg6 shouldBatchResultsWithPlaceholderObjects:(_Bool)arg7;	// IMP=0x000000000015e26d
- (void)_runMediaAPIRequestToLoadMetadataWithAccumulator:(id)arg1 userIdentity:(id)arg2 previousResponse:(id)arg3 shouldBatchResultsWithPlaceholderObjects:(_Bool)arg4;	// IMP=0x000000000015d550
- (void)_executeWithUserIdentity:(id)arg1 useMediaAPILookup:(_Bool)arg2;	// IMP=0x000000000015ce9c
- (void)execute;	// IMP=0x000000000015cbd5
- (void)cancel;	// IMP=0x000000000015cb4b
- (id)initWithRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000015c9f5

@end

