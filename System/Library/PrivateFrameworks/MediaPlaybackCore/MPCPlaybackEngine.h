//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MPCExplicitContentAuthorizationDelegate-Protocol.h>

@class MPCAudioSpectrumAnalyzer, MPCPlaybackEngineEventStream, MPCPlaybackIntent, MPCPlayerPath, MPProtocolProxy, NSString, NSXPCListenerEndpoint, _MPCFairPlayPerformanceController, _MPCLeaseManager, _MPCMediaRemotePublisher, _MPCMusicPlayerControllerServer, _MPCPlaybackAccountManager, _MPCPlaybackEngineSessionManager, _MPCReportingController;
@protocol MPCPlaybackEngineDelegate, MPCPlaybackEngineEventObserving, MPCPlaybackEngineImplementation, MPCPlaybackEngineInitializationParameters, MPCVideoOutput;

@interface MPCPlaybackEngine : NSObject <MPCExplicitContentAuthorizationDelegate>
{
    _Bool _started;	// 8 = 0x8
    _Bool _pictureInPictureSupported;	// 9 = 0x9
    _Bool _videoSupported;	// 10 = 0xa
    _Bool _stateRestorationSupported;	// 11 = 0xb
    _Bool _queueHandoffSupported;	// 12 = 0xc
    _Bool _scheduledPlaybackStatePreservation;	// 13 = 0xd
    _Bool _needsUISnapshot;	// 14 = 0xe
    _Bool _systemMusicApplication;	// 15 = 0xf
    _Bool _audioAnalyzerEnabled;	// 16 = 0x10
    NSString *_playerID;	// 24 = 0x18
    NSString *_engineID;	// 32 = 0x20
    id <MPCPlaybackEngineDelegate> _delegate;	// 40 = 0x28
    MPCPlaybackIntent *_fallbackPlaybackIntent;	// 48 = 0x30
    MPProtocolProxy<MPCPlaybackEngineEventObserving> *_eventObserver;	// 56 = 0x38
    id <MPCPlaybackEngineImplementation> _implementation;	// 64 = 0x40
    _MPCMediaRemotePublisher *_mediaRemotePublisher;	// 72 = 0x48
    _MPCMusicPlayerControllerServer *_musicPlayerControllerServer;	// 80 = 0x50
    _MPCReportingController *_reportingController;	// 88 = 0x58
    _MPCPlaybackEngineSessionManager *_sessionManager;	// 96 = 0x60
    _MPCLeaseManager *_leaseManager;	// 104 = 0x68
    _MPCPlaybackAccountManager *_accountManager;	// 112 = 0x70
    _MPCFairPlayPerformanceController *_fairPlayPerformanceController;	// 120 = 0x78
    id <MPCVideoOutput> _videoOutput;	// 128 = 0x80
    id <MPCPlaybackEngineInitializationParameters> _initializationParameters;	// 136 = 0x88
    NSString *_audioSessionCategory;	// 144 = 0x90
    unsigned long long _audioSessionOptions;	// 152 = 0x98
    MPCAudioSpectrumAnalyzer *_audioAnalyzer;	// 160 = 0xa0
    MPCPlaybackEngineEventStream *_eventStream;	// 168 = 0xa8
}

+ (_Bool)requiresMainThread;	// IMP=0x00000000001737b8
+ (void)preheatPlayback;	// IMP=0x000000000017377d
+ (_Bool)usesNewPlaybackImplementation;	// IMP=0x0000000000173758
- (void).cxx_destruct;	// IMP=0x00000000001722c3
@property(readonly, nonatomic) MPCPlaybackEngineEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(readonly, nonatomic) MPCAudioSpectrumAnalyzer *audioAnalyzer; // @synthesize audioAnalyzer=_audioAnalyzer;
@property(nonatomic, getter=isAudioAnalyzerEnabled) _Bool audioAnalyzerEnabled; // @synthesize audioAnalyzerEnabled=_audioAnalyzerEnabled;
@property(nonatomic) unsigned long long audioSessionOptions; // @synthesize audioSessionOptions=_audioSessionOptions;
@property(copy, nonatomic) NSString *audioSessionCategory; // @synthesize audioSessionCategory=_audioSessionCategory;
@property(nonatomic, getter=isSystemMusicApplication) _Bool systemMusicApplication; // @synthesize systemMusicApplication=_systemMusicApplication;
@property(readonly, nonatomic) id <MPCPlaybackEngineInitializationParameters> initializationParameters; // @synthesize initializationParameters=_initializationParameters;
@property(readonly, nonatomic) id <MPCVideoOutput> videoOutput; // @synthesize videoOutput=_videoOutput;
@property(readonly, nonatomic) _MPCFairPlayPerformanceController *fairPlayPerformanceController; // @synthesize fairPlayPerformanceController=_fairPlayPerformanceController;
@property(readonly, nonatomic) _MPCPlaybackAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(readonly, nonatomic) _MPCLeaseManager *leaseManager; // @synthesize leaseManager=_leaseManager;
@property(readonly, nonatomic) _MPCPlaybackEngineSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(readonly, nonatomic) _MPCReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(readonly, nonatomic) _MPCMusicPlayerControllerServer *musicPlayerControllerServer; // @synthesize musicPlayerControllerServer=_musicPlayerControllerServer;
@property(readonly, nonatomic) _MPCMediaRemotePublisher *mediaRemotePublisher; // @synthesize mediaRemotePublisher=_mediaRemotePublisher;
@property(readonly, nonatomic) id <MPCPlaybackEngineImplementation> implementation; // @synthesize implementation=_implementation;
@property(readonly, nonatomic) MPProtocolProxy<MPCPlaybackEngineEventObserving> *eventObserver; // @synthesize eventObserver=_eventObserver;
@property(nonatomic) _Bool needsUISnapshot; // @synthesize needsUISnapshot=_needsUISnapshot;
@property(nonatomic, getter=hasScheduledPlaybackStatePreservation) _Bool scheduledPlaybackStatePreservation; // @synthesize scheduledPlaybackStatePreservation=_scheduledPlaybackStatePreservation;
@property(nonatomic, getter=isQueueHandoffSupported) _Bool queueHandoffSupported; // @synthesize queueHandoffSupported=_queueHandoffSupported;
@property(nonatomic, getter=isStateRestorationSupported) _Bool stateRestorationSupported; // @synthesize stateRestorationSupported=_stateRestorationSupported;
@property(retain, nonatomic) MPCPlaybackIntent *fallbackPlaybackIntent; // @synthesize fallbackPlaybackIntent=_fallbackPlaybackIntent;
@property(nonatomic, getter=isVideoSupported) _Bool videoSupported; // @synthesize videoSupported=_videoSupported;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(readonly, nonatomic, getter=isStarted) _Bool started; // @synthesize started=_started;
@property(nonatomic) __weak id <MPCPlaybackEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *engineID; // @synthesize engineID=_engineID;
@property(readonly, copy, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
- (void)requestAuthorizationForExplicitItem:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000171f0a
- (void)_updateUISnapshotIfNeeded;	// IMP=0x0000000000171ec3
- (_Bool)_shouldIgnorePlaybackSessionError:(id)arg1;	// IMP=0x0000000000171e36
- (void)_initializePlaybackStack;	// IMP=0x0000000000171918
- (void)_detectCrashLoopForSessionIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000001715d7
- (void)_screenBrightnessDidChangeNotification:(id)arg1;	// IMP=0x00000000001714b7
- (void)schedulePlaybackStatePreservation;	// IMP=0x00000000001713a1
@property(readonly, nonatomic) NSXPCListenerEndpoint *serverEndpoint;
@property(readonly, nonatomic) MPCPlayerPath *playerPath;
- (void)reportUserSeekFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000001711e2
- (void)reportUserBackgroundedApplication;	// IMP=0x00000000001711cc
- (void)removeEngineObserver:(id)arg1;	// IMP=0x0000000000171159
- (void)addEngineObserver:(id)arg1;	// IMP=0x00000000001710e6
- (void)invalidate;	// IMP=0x00000000001710cd
- (void)restoreStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000170d71
- (void)becomeActive;	// IMP=0x0000000000170d5b
- (void)start;	// IMP=0x0000000000170d01
- (void)dealloc;	// IMP=0x0000000000170cbc
- (id)initWithParameters:(id)arg1;	// IMP=0x000000000016f72f
- (id)initWithPlayerID:(id)arg1;	// IMP=0x000000000016f6b1

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

