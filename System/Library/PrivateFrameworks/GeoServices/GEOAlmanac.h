//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GEOAlmanacRiseTransitSet, NSDate;

@interface GEOAlmanac : NSObject
{
    CDStruct_2c43369c _location;	// 8 = 0x8
    double _altitude;	// 24 = 0x18
    GEOAlmanacRiseTransitSet *_previousRiseTransitSet;	// 32 = 0x20
    GEOAlmanacRiseTransitSet *_currentRiseTransitSet;	// 40 = 0x28
    GEOAlmanacRiseTransitSet *_nextRiseTransitSet;	// 48 = 0x30
}

- (void).cxx_destruct;	// IMP=0x0000000001193c26
- (id)description;	// IMP=0x00000000011938c2
- (_Bool)isDayLightForDate:(id)arg1;	// IMP=0x00000000011937d3
- (_Bool)isDayLightForTime:(double)arg1;	// IMP=0x0000000001193765
@property(readonly, nonatomic) _Bool isDayLight;
@property(readonly, nonatomic) NSDate *nextSunset;
@property(readonly, nonatomic) NSDate *nextTransit;
@property(readonly, nonatomic) NSDate *nextSunrise;
@property(readonly, nonatomic) NSDate *sunset;
@property(readonly, nonatomic) NSDate *transit;
@property(readonly, nonatomic) NSDate *sunrise;
@property(readonly, nonatomic) NSDate *previousSunset;
@property(readonly, nonatomic) NSDate *previousTransit;
@property(readonly, nonatomic) NSDate *previousSunrise;
- (void)calculateGeocentricDirectionForSunX:(double *)arg1 Y:(double *)arg2 Z:(double *)arg3 date:(id)arg4;	// IMP=0x00000000011932cb
- (void)calculateGeocentricDirectionForSunX:(double *)arg1 Y:(double *)arg2 Z:(double *)arg3;	// IMP=0x0000000001193248
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 date:(id)arg2 altitudeInDegrees:(double)arg3 options:(unsigned long long)arg4;	// IMP=0x00000000011917a6
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 time:(double)arg2 altitudeInDegrees:(double)arg3 options:(unsigned long long)arg4;	// IMP=0x0000000001191711
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 time:(double)arg2 altitudeInDegrees:(double)arg3;	// IMP=0x0000000001191681
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 time:(double)arg2;	// IMP=0x0000000001191667
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1 altitudeInDegrees:(double)arg2;	// IMP=0x00000000011915da
- (void)calculateAstronomicalTimeForLocation:(CDStruct_c3b9c2ee)arg1;	// IMP=0x00000000011915c0

@end

