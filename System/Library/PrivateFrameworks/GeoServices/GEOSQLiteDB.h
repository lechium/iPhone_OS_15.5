//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSError, NSMapTable, NSMutableArray, NSString, NSURL;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_os_log;

@interface GEOSQLiteDB : NSObject
{
    NSObject<OS_os_log> *_log;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_externalFilesQueue;	// 16 = 0x10
    NSObject<OS_dispatch_group> *_externalFilesGroup;	// 24 = 0x18
    NSMutableArray *_externalFilesActiveChannels;	// 32 = 0x20
    _Bool _didEncounterExternalResourceErrorInTransaction;	// 40 = 0x28
    struct sqlite3 *_db;	// 48 = 0x30
    NSError *_lastError;	// 56 = 0x38
    NSURL *_databaseFileURL;	// 64 = 0x40
    int _sqliteFlags;	// 72 = 0x48
    NSDictionary *_pragmas;	// 80 = 0x50
    CDUnknownBlockType _setupBlock;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_queue;	// 96 = 0x60
    NSMapTable *_preparedStatements;	// 104 = 0x68
    _Bool _isInTransaction;	// 112 = 0x70
    _Bool _isTemporaryInMemoryDatabase;	// 113 = 0x71
    NSMutableArray *_filesAddedDuringTransaction;	// 120 = 0x78
    NSMutableArray *_filesDeletedDuringTransaction;	// 128 = 0x80
    NSMapTable *_virtualTables;	// 136 = 0x88
    struct atomic_flag _didTearDown;	// 144 = 0x90
}

+ (_Bool)renameAllDBFilesFrom:(id)arg1 to:(id)arg2;	// IMP=0x0000000000622f24
+ (id)_findAllDBFilesForURL:(id)arg1 error:(id *)arg2;	// IMP=0x00000000006227c2
+ (id)defaultPragmas;	// IMP=0x000000000062149f
- (void).cxx_destruct;	// IMP=0x0000000000626526
@property(readonly, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property(readonly, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *isolationQueue; // @synthesize isolationQueue=_queue;
@property(readonly, nonatomic) int sqliteFlags; // @synthesize sqliteFlags=_sqliteFlags;
@property(readonly, nonatomic) struct sqlite3 *sqliteDB; // @synthesize sqliteDB=_db;
@property(readonly, nonatomic) NSURL *databaseFileURL; // @synthesize databaseFileURL=_databaseFileURL;
- (_Bool)writeBlobData:(id)arg1 toTable:(const char *)arg2 column:(const char *)arg3 rowID:(long long)arg4 error:(id *)arg5;	// IMP=0x0000000000626304
- (long long)lastInsertRowID;	// IMP=0x00000000006262ea
- (_Bool)deleteExternalResourceAtURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000626214
- (_Bool)moveExternalResourceAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000626116
- (_Bool)writeExternalResourceWithData:(id)arg1 toURL:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000625ffd
- (_Bool)reportSQLiteErrorCode:(int)arg1 method:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000625d46
- (id)noCopyBlobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625d2e
- (id)blobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625d19
- (id)_blobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2 noCopy:(_Bool)arg3;	// IMP=0x0000000000625c6e
- (id)stringForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625c06
- (double)doubleForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625bc0
- (long long)int64ForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625b7b
- (int)intForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000000625b36
- (_Bool)executeInTransaction:(CDUnknownBlockType)arg1;	// IMP=0x00000000006254cd
- (_Bool)vacuum;	// IMP=0x0000000000625444
- (_Bool)executeStatement:(id)arg1 statementBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000625299
- (_Bool)executeStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;	// IMP=0x0000000000625188
- (_Bool)bindRealParameter:(const char *)arg1 toValue:(double)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000625120
- (_Bool)bindInt64Parameter:(const char *)arg1 toValue:(long long)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x00000000006250b2
- (_Bool)bindIntParameter:(const char *)arg1 toValue:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000625045
- (_Bool)bindNullParameter:(const char *)arg1 inStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3;	// IMP=0x0000000000624feb
- (_Bool)bindZeroBlobParameter:(const char *)arg1 length:(unsigned long long)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000624f7d
- (_Bool)bindBlobNoCopyParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000624e4b
- (_Bool)bindBlobParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000624d15
- (_Bool)bindTextParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x0000000000624c1b
- (_Bool)_bindParameter:(const char *)arg1 inStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3 withBinder:(CDUnknownBlockType)arg4;	// IMP=0x0000000000624b91
- (_Bool)statementForKey:(id)arg1 statementBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000624a3d
- (struct sqlite3_stmt *)statementForKey:(id)arg1;	// IMP=0x00000000006249eb
- (void)clearStatement:(id)arg1;	// IMP=0x0000000000624977
- (_Bool)prepareStatement:(const char *)arg1 forKey:(id)arg2;	// IMP=0x0000000000624810
- (_Bool)dropTablesLike:(id)arg1;	// IMP=0x0000000000624544
- (_Bool)dropAllTables;	// IMP=0x000000000062452b
- (id)getTablesLike:(id)arg1;	// IMP=0x00000000006243aa
- (id)getAllTables;	// IMP=0x0000000000624391
- (_Bool)createTable:(const char *)arg1 withDrop:(const char *)arg2;	// IMP=0x00000000006241fe
- (_Bool)unregisterVirtualTable:(id)arg1;	// IMP=0x000000000062405e
- (_Bool)registerVirtualTable:(id)arg1;	// IMP=0x0000000000623c29
- (void)_debug_lockDB:(id)arg1;	// IMP=0x0000000000623b02
- (void)_debug_unlockDB:(id)arg1;	// IMP=0x00000000006239bb
- (void)dealloc;	// IMP=0x0000000000623986
- (void)_closeDB;	// IMP=0x0000000000623793
- (void)tearDown;	// IMP=0x00000000006236a7
- (_Bool)deleteAllDBFiles;	// IMP=0x0000000000623668
- (int)_setPragmas;	// IMP=0x000000000062343b
- (_Bool)_deleteAllDBFiles;	// IMP=0x0000000000622b72
- (_Bool)_deleteAllDatabaseFilesIfCorrupt:(int)arg1;	// IMP=0x0000000000622795
- (void)_deleteAndReopenDatabaseIfCorrupt:(int)arg1;	// IMP=0x00000000006226df
- (void)_createParentDirectory;	// IMP=0x0000000000622573
- (int)_openDatabaseFile;	// IMP=0x00000000006222ba
- (int)_openAndConfigure;	// IMP=0x0000000000622162
- (_Bool)_openAndConfigureWithRetryIfCorrupt;	// IMP=0x00000000006220f8
- (_Bool)setup;	// IMP=0x0000000000621d1c
- (void)_execute:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000621bb3
- (void)executeAsync:(CDUnknownBlockType)arg1;	// IMP=0x0000000000621b9f
- (void)executeAsync:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000621a9b
- (void)executeSync:(CDUnknownBlockType)arg1;	// IMP=0x0000000000621a87
- (void)executeSync:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000062195b
- (id)description;	// IMP=0x0000000000621863
- (id)initWithQueueName:(const char *)arg1 log:(id)arg2 databaseFileURL:(id)arg3 sqliteFlags:(int)arg4 pragmas:(id)arg5 setupBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000006216ca
- (id)initWithQueueName:(const char *)arg1 logFacility:(const char *)arg2 dbFilePath:(id)arg3 sqliteFlags:(int)arg4 pragmas:(id)arg5 setupBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000006215bf
- (id)init;	// IMP=0x0000000000621595
@property(nonatomic) long long user_version;
@property(readonly, nonatomic) NSDictionary *pragmas;
@property(readonly, nonatomic) _Bool isDBReady;
@property(readonly, nonatomic) NSString *dbFilePath;
- (id)UUIDForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;	// IMP=0x00000000006266ab
- (_Bool)bindParameter:(const char *)arg1 toUUID:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;	// IMP=0x00000000006265cd
- (_Bool)_waitForAllTransactionExternalResources;	// IMP=0x00000000012e9713
- (void)_channelEncounteredError:(int)arg1;	// IMP=0x00000000012e968e
- (void)_channelCleanupFailedWithError:(int)arg1;	// IMP=0x00000000012e9609
- (void)_doneWritingToChannel:(id)arg1;	// IMP=0x00000000012e95c8
- (void)_writeTransactionExternalResourceWithData:(id)arg1 toURL:(id)arg2;	// IMP=0x00000000012e9074

@end

