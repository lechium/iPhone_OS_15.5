//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <NewsUI/NUANFDebugSettingsObserver-Protocol.h>
#import <NewsUI/NUBarCompressible-Protocol.h>
#import <NewsUI/NULoadable-Protocol.h>
#import <NewsUI/SXAnalyticsReporting-Protocol.h>
#import <NewsUI/SXScrollViewControllerDelegate-Protocol.h>

@class FCObservable, NFEventManager, NSDate, NSHashTable, NSString, NUArticleContext, SXScrollViewController, SXVideoPlayerViewControllerManager, UIResponder, UIScrollView;
@protocol NUANFDebugSettingsProvider, NUArticleDataProvider, NUArticleKeyCommandManager, NUArticleScrollPositionManagerType, NUArticleViewControllerDelegate, NUChromeControl, NUDocumentSectionBlueprintProvider, NUEndOfArticleDataProvider, NULoadingDelegate, NUSpotlightManager, SXAnalyticsReporting;

@interface NUArticleViewController : UIViewController <SXScrollViewControllerDelegate, SXAnalyticsReporting, NUANFDebugSettingsObserver, NULoadable, NUBarCompressible>
{
    _Bool _articleIsPresentingFullscreen;	// 8 = 0x8
    _Bool _didRestoreScrollPosition;	// 9 = 0x9
    _Bool _shouldAutoPlayVideo;	// 10 = 0xa
    _Bool _shouldDisableTransparentNavigationBar;	// 11 = 0xb
    id <NULoadingDelegate> _loadingDelegate;	// 16 = 0x10
    NSString *_contentSizeCategory;	// 24 = 0x18
    long long _contentScale;	// 32 = 0x20
    id <NUArticleViewControllerDelegate> _delegate;	// 40 = 0x28
    id <SXAnalyticsReporting> _analyticsReporting;	// 48 = 0x30
    FCObservable *_articleViewStyler;	// 56 = 0x38
    UIScrollView *_scrollView;	// 64 = 0x40
    NUArticleContext *_articleContext;	// 72 = 0x48
    SXScrollViewController *_scrollViewController;	// 80 = 0x50
    id <NUArticleDataProvider> _articleDataProvider;	// 88 = 0x58
    id <NUEndOfArticleDataProvider> _endOfArticleDataProvider;	// 96 = 0x60
    NFEventManager *_eventManager;	// 104 = 0x68
    id <NUArticleKeyCommandManager> _keyCommandManager;	// 112 = 0x70
    NSHashTable *_loadingListeners;	// 120 = 0x78
    id <NUDocumentSectionBlueprintProvider> _documentSectionBlueprintProvider;	// 128 = 0x80
    id <NUANFDebugSettingsProvider> _debugSettingsProvider;	// 136 = 0x88
    unsigned long long _presentationMode;	// 144 = 0x90
    SXVideoPlayerViewControllerManager *_videoPlayerViewControllerManager;	// 152 = 0x98
    id <NUArticleScrollPositionManagerType> _articleScrollPositionManager;	// 160 = 0xa0
    NSDate *_manualScrollingStartDate;	// 168 = 0xa8
    id <NUSpotlightManager> _spotlightManager;	// 176 = 0xb0
    id <NUChromeControl> _chromeControl;	// 184 = 0xb8
    double _articleLoadedTime;	// 192 = 0xc0
}

+ (id)_parentOrPresentingViewControllerFor:(id)arg1;	// IMP=0x0000000000026e2b
- (void).cxx_destruct;	// IMP=0x0000000000027421
@property(nonatomic) _Bool shouldDisableTransparentNavigationBar; // @synthesize shouldDisableTransparentNavigationBar=_shouldDisableTransparentNavigationBar;
@property(nonatomic) _Bool shouldAutoPlayVideo; // @synthesize shouldAutoPlayVideo=_shouldAutoPlayVideo;
@property(nonatomic) double articleLoadedTime; // @synthesize articleLoadedTime=_articleLoadedTime;
@property(readonly, nonatomic) id <NUChromeControl> chromeControl; // @synthesize chromeControl=_chromeControl;
@property(readonly, nonatomic) id <NUSpotlightManager> spotlightManager; // @synthesize spotlightManager=_spotlightManager;
@property(retain, nonatomic) NSDate *manualScrollingStartDate; // @synthesize manualScrollingStartDate=_manualScrollingStartDate;
@property(nonatomic) _Bool didRestoreScrollPosition; // @synthesize didRestoreScrollPosition=_didRestoreScrollPosition;
@property(readonly, nonatomic) id <NUArticleScrollPositionManagerType> articleScrollPositionManager; // @synthesize articleScrollPositionManager=_articleScrollPositionManager;
@property(readonly, nonatomic) SXVideoPlayerViewControllerManager *videoPlayerViewControllerManager; // @synthesize videoPlayerViewControllerManager=_videoPlayerViewControllerManager;
@property(nonatomic) unsigned long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(nonatomic) _Bool articleIsPresentingFullscreen; // @synthesize articleIsPresentingFullscreen=_articleIsPresentingFullscreen;
@property(readonly, nonatomic) id <NUANFDebugSettingsProvider> debugSettingsProvider; // @synthesize debugSettingsProvider=_debugSettingsProvider;
@property(readonly, nonatomic) id <NUDocumentSectionBlueprintProvider> documentSectionBlueprintProvider; // @synthesize documentSectionBlueprintProvider=_documentSectionBlueprintProvider;
@property(readonly, nonatomic) NSHashTable *loadingListeners; // @synthesize loadingListeners=_loadingListeners;
@property(readonly, nonatomic) id <NUArticleKeyCommandManager> keyCommandManager; // @synthesize keyCommandManager=_keyCommandManager;
@property(readonly, nonatomic) NFEventManager *eventManager; // @synthesize eventManager=_eventManager;
@property(readonly, nonatomic) id <NUEndOfArticleDataProvider> endOfArticleDataProvider; // @synthesize endOfArticleDataProvider=_endOfArticleDataProvider;
@property(readonly, nonatomic) id <NUArticleDataProvider> articleDataProvider; // @synthesize articleDataProvider=_articleDataProvider;
@property(readonly, nonatomic) SXScrollViewController *scrollViewController; // @synthesize scrollViewController=_scrollViewController;
@property(retain, nonatomic) NUArticleContext *articleContext; // @synthesize articleContext=_articleContext;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(readonly, nonatomic) FCObservable *articleViewStyler; // @synthesize articleViewStyler=_articleViewStyler;
@property(nonatomic) __weak id <SXAnalyticsReporting> analyticsReporting; // @synthesize analyticsReporting=_analyticsReporting;
@property(nonatomic) __weak id <NUArticleViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long contentScale; // @synthesize contentScale=_contentScale;
@property(nonatomic) __weak id <NULoadingDelegate> loadingDelegate; // @synthesize loadingDelegate=_loadingDelegate;
- (void)updateTextSelectionForPaywallPresentation;	// IMP=0x0000000000027151
- (_Bool)isPreviewingOrShowingHardPaywall;	// IMP=0x0000000000027076
- (_Bool)accessibilityShouldScrollForScrollViewController:(id)arg1 defaultValue:(_Bool)arg2;	// IMP=0x0000000000026f6a
- (_Bool)scrollViewController:(id)arg1 shouldOccludeAccessibilityElement:(id)arg2;	// IMP=0x0000000000026e8e
- (id)articleMessager;	// IMP=0x0000000000026d3d
- (void)showArticleMessage:(long long)arg1 hideAfterEvent:(id)arg2;	// IMP=0x0000000000026b3e
- (void)scrollToAudioPositionAndHideMessageAfterEvent:(id)arg1;	// IMP=0x000000000002695e
- (void)saveScrollPosition:(id)arg1;	// IMP=0x0000000000026861
- (_Bool)shouldSaveScrollPosition;	// IMP=0x000000000002673d
- (void)updateScrollPositionFromContext;	// IMP=0x0000000000026596
- (id)currentPresentationAttributes;	// IMP=0x00000000000263cc
- (void)updatePresentationAttributes;	// IMP=0x000000000002635c
- (void)updateScrollViewControllerWithFooterBlueprint:(id)arg1;	// IMP=0x00000000000262ea
- (void)updateScrollViewControllerWithContentOverlayBlueprint:(id)arg1 topOffset:(double)arg2;	// IMP=0x0000000000026261
- (void)updateScrollViewControllerWithHeaderBlueprint:(id)arg1;	// IMP=0x00000000000261ef
@property(retain, nonatomic) NSString *contentSizeCategory; // @synthesize contentSizeCategory=_contentSizeCategory;
- (void)scrollToTopAnimated:(_Bool)arg1;	// IMP=0x0000000000025f6f
- (void)testingConditionEnabled:(_Bool)arg1;	// IMP=0x0000000000025e57
- (void)viewportDebuggingEnabled:(_Bool)arg1;	// IMP=0x0000000000025e45
- (void)reportEvent:(id)arg1;	// IMP=0x0000000000025d9e
- (_Bool)useTransparentNavigationBar;	// IMP=0x0000000000025cee
- (void)scrollViewControllerDidStopScrolling:(id)arg1;	// IMP=0x0000000000025b8e
- (void)scrollViewControllerDidScroll:(id)arg1;	// IMP=0x0000000000025a8a
- (void)scrollViewController:(id)arg1 enableNavigation:(_Bool)arg2;	// IMP=0x0000000000025a3e
- (double)toolBarHeightForScrollViewController:(id)arg1;	// IMP=0x0000000000025876
- (double)navigationBarHeightForScrollViewController:(id)arg1;	// IMP=0x0000000000025772
- (void)scrollViewControllerDismissFullscreen:(id)arg1;	// IMP=0x000000000002575e
- (void)scrollViewControllerWillDismissFullscreen:(id)arg1;	// IMP=0x000000000002574a
- (void)willReturnToFullscreen:(id)arg1;	// IMP=0x0000000000025733
- (void)scrollViewControllerRequestsFullscreen:(id)arg1;	// IMP=0x000000000002571c
- (void)scrollViewController:(id)arg1 didApplyDocumentStyle:(id)arg2;	// IMP=0x000000000002563a
- (void)scrollViewControllerDidLayoutContent:(id)arg1;	// IMP=0x00000000000255bf
- (_Bool)prefersStatusBarHidden;	// IMP=0x00000000000255ad
- (long long)preferredStatusBarStyle;	// IMP=0x00000000000254c9
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000000000253bc
- (void)viewDidLayoutSubviews;	// IMP=0x00000000000251cb
- (void)nowPlayingDidDisappear:(id)arg1;	// IMP=0x0000000000025187
- (void)nowPlayingWillDisappear:(id)arg1;	// IMP=0x0000000000025143
- (void)applicationDidBecomeActive:(id)arg1;	// IMP=0x00000000000250ff
- (void)applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000000250bb
@property(readonly, nonatomic) UIResponder *responder;
- (_Bool)resignFirstResponder;	// IMP=0x0000000000024ffd
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000024ff5
- (_Bool)becomeFirstResponder;	// IMP=0x0000000000024f87
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x0000000000024f16
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000000024ed3
- (void)viewSafeAreaInsetsDidChange;	// IMP=0x0000000000024dc6
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0000000000024d55
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000000024ce4
- (void)viewDidLoad;	// IMP=0x0000000000022eb1
- (id)initWithArticleDataProvider:(id)arg1 scrollViewController:(id)arg2 appStateMonitor:(id)arg3 keyCommandManager:(id)arg4 loadingListeners:(id)arg5 headerBlueprintProvider:(id)arg6 debugSettingsProvider:(id)arg7 videoPlayerViewControllerManager:(id)arg8 articleScrollPositionManager:(id)arg9 chromeControl:(id)arg10 spotlightManager:(id)arg11;	// IMP=0x00000000000226a0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

