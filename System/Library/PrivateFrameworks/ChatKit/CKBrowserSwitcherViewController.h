//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <ChatKit/CKAppGrabberViewDelegate-Protocol.h>
#import <ChatKit/CKBrowserTransitionCoordinatorDelegate-Protocol.h>
#import <ChatKit/UIGestureRecognizerDelegate-Protocol.h>
#import <ChatKit/_UIBackdropViewGraphicsQualityChangeDelegate-Protocol.h>

@class CKAppGrabberView, CKBrowserSwitcherCell, CKBrowserTransitionCoordinator, CKImmediatePanGestureRecognizer, IMBalloonPlugin, NSDate, NSMutableDictionary, NSString, UILongPressGestureRecognizer, UIView, UIViewPropertyAnimator;
@protocol CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate, CKBrowserViewControllerProtocol;

@interface CKBrowserSwitcherViewController : UIViewController <UIGestureRecognizerDelegate, CKBrowserTransitionCoordinatorDelegate, CKAppGrabberViewDelegate, _UIBackdropViewGraphicsQualityChangeDelegate>
{
    CKImmediatePanGestureRecognizer *_expandGestureTracker;	// 8 = 0x8
    UIViewPropertyAnimator *_expandPropertyAnimator;	// 16 = 0x10
    _Bool _isDoingExpandInteraction;	// 24 = 0x18
    _Bool _expandInteractionDidMove;	// 25 = 0x19
    _Bool _expandGestureStartedOnGrabber;	// 26 = 0x1a
    double _expandGestureTranslationOffset;	// 32 = 0x20
    _Bool _dragging;	// 40 = 0x28
    _Bool _browserViewReadyForUserInteraction;	// 41 = 0x29
    _Bool _insertedViaCollapse;	// 42 = 0x2a
    _Bool _inDragAndDrop;	// 43 = 0x2b
    _Bool _interactiveExpandStarted;	// 44 = 0x2c
    _Bool _transitioningFromSnapshotToLiveView;	// 45 = 0x2d
    _Bool _transitioningExpandedState;	// 46 = 0x2e
    _Bool _allowFooterLabelUpdates;	// 47 = 0x2f
    _Bool _allowPluginLaunchNotifications;	// 48 = 0x30
    _Bool _viewHasLaidOutSubviews;	// 49 = 0x31
    _Bool _browserIsLoadingCompact;	// 50 = 0x32
    _Bool _browserIsCollapsingFromFullscreen;	// 51 = 0x33
    id <CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> _delegate;	// 56 = 0x38
    UIViewController<CKBrowserViewControllerProtocol> *_currentViewController;	// 64 = 0x40
    CKBrowserTransitionCoordinator *_transitionCoordinator;	// 72 = 0x48
    IMBalloonPlugin *_balloonPlugin;	// 80 = 0x50
    UIView *_contentView;	// 88 = 0x58
    UIView *_browserContainer;	// 96 = 0x60
    CKBrowserSwitcherCell *_cell;	// 104 = 0x68
    NSMutableDictionary *_livePluginIdentifierToTimestampMap;	// 112 = 0x70
    UILongPressGestureRecognizer *_touchTracker;	// 120 = 0x78
    IMBalloonPlugin *_currentVisiblePlugin;	// 128 = 0x80
    CKAppGrabberView *_grabberView;	// 136 = 0x88
    UIView *_shadowView;	// 144 = 0x90
    CDUnknownBlockType _performAfterFirstLayoutBlock;	// 152 = 0x98
    NSDate *_timeOfLastScrollingDecelerationEnded;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x0000000000450ab3
@property(nonatomic) _Bool browserIsCollapsingFromFullscreen; // @synthesize browserIsCollapsingFromFullscreen=_browserIsCollapsingFromFullscreen;
@property(nonatomic) _Bool browserIsLoadingCompact; // @synthesize browserIsLoadingCompact=_browserIsLoadingCompact;
@property(retain, nonatomic) NSDate *timeOfLastScrollingDecelerationEnded; // @synthesize timeOfLastScrollingDecelerationEnded=_timeOfLastScrollingDecelerationEnded;
@property(nonatomic) _Bool viewHasLaidOutSubviews; // @synthesize viewHasLaidOutSubviews=_viewHasLaidOutSubviews;
@property(copy, nonatomic) CDUnknownBlockType performAfterFirstLayoutBlock; // @synthesize performAfterFirstLayoutBlock=_performAfterFirstLayoutBlock;
@property(nonatomic) _Bool allowPluginLaunchNotifications; // @synthesize allowPluginLaunchNotifications=_allowPluginLaunchNotifications;
@property(nonatomic) _Bool allowFooterLabelUpdates; // @synthesize allowFooterLabelUpdates=_allowFooterLabelUpdates;
@property(nonatomic, getter=isTransitioningExpandedState) _Bool transitioningExpandedState; // @synthesize transitioningExpandedState=_transitioningExpandedState;
@property(nonatomic, getter=isTransitioningFromSnapshotToLiveView) _Bool transitioningFromSnapshotToLiveView; // @synthesize transitioningFromSnapshotToLiveView=_transitioningFromSnapshotToLiveView;
@property(nonatomic) _Bool interactiveExpandStarted; // @synthesize interactiveExpandStarted=_interactiveExpandStarted;
@property(nonatomic, getter=isInDragAndDrop) _Bool inDragAndDrop; // @synthesize inDragAndDrop=_inDragAndDrop;
@property(nonatomic) _Bool insertedViaCollapse; // @synthesize insertedViaCollapse=_insertedViaCollapse;
@property(retain, nonatomic) UIView *shadowView; // @synthesize shadowView=_shadowView;
@property(retain, nonatomic) CKAppGrabberView *grabberView; // @synthesize grabberView=_grabberView;
@property(retain, nonatomic) IMBalloonPlugin *currentVisiblePlugin; // @synthesize currentVisiblePlugin=_currentVisiblePlugin;
@property(retain, nonatomic) UILongPressGestureRecognizer *touchTracker; // @synthesize touchTracker=_touchTracker;
@property(retain, nonatomic) NSMutableDictionary *livePluginIdentifierToTimestampMap; // @synthesize livePluginIdentifierToTimestampMap=_livePluginIdentifierToTimestampMap;
@property(retain, nonatomic) CKBrowserSwitcherCell *cell; // @synthesize cell=_cell;
@property(retain, nonatomic) UIView *browserContainer; // @synthesize browserContainer=_browserContainer;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) IMBalloonPlugin *balloonPlugin; // @synthesize balloonPlugin=_balloonPlugin;
@property(nonatomic, getter=isBrowserReadyForUserInteraction) _Bool browserViewReadyForUserInteraction; // @synthesize browserViewReadyForUserInteraction=_browserViewReadyForUserInteraction;
@property(nonatomic, getter=isDragging) _Bool dragging; // @synthesize dragging=_dragging;
@property(retain, nonatomic) CKBrowserTransitionCoordinator *transitionCoordinator; // @synthesize transitionCoordinator=_transitionCoordinator;
@property(readonly, nonatomic) UIViewController<CKBrowserViewControllerProtocol> *currentViewController; // @synthesize currentViewController=_currentViewController;
@property(nonatomic) __weak id <CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;	// IMP=0x000000000045077f
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;	// IMP=0x000000000045076a
- (void)appGrabberViewCloseButtonTapped:(id)arg1;	// IMP=0x00000000004506fe
- (struct CGSize)_browserSize;	// IMP=0x0000000000450616
- (void)dragManagerDidEndDragging:(id)arg1;	// IMP=0x0000000000450535
- (void)dragManagerDidStartDrag:(id)arg1;	// IMP=0x00000000004504ea
- (void)dragManagerWillStartDrag:(id)arg1;	// IMP=0x000000000045044f
- (_Bool)_switchToVisiblePluginWithIdentifier:(id)arg1;	// IMP=0x000000000045026b
- (void)_loadBrowserForBalloonPlugin:(id)arg1 datasource:(id)arg2;	// IMP=0x000000000044fdf5
- (void)handleExpandButton:(id)arg1;	// IMP=0x000000000044fdaa
- (void)setCurrentViewController:(id)arg1;	// IMP=0x000000000044f8f0
- (void)_updateActiveBrowserTimestampForCurrentBalloonPlugin;	// IMP=0x000000000044f7a5
- (void)_removeBrowserFromViewHierarchy:(id)arg1;	// IMP=0x000000000044f679
- (void)_removeBrowserWithPluginIdentifierFromViewHierarchy:(id)arg1;	// IMP=0x000000000044f5ac
- (void)_updateBrowserViewPositionForPluginAndInsertIfNecessary:(id)arg1;	// IMP=0x000000000044f23b
- (void)_updateActiveBrowserAlphaStateOnInsertForCurrentController:(id)arg1 currentView:(id)arg2;	// IMP=0x000000000044f198
- (void)_insertCurrentBrowserAndRemoveOldBrowsersIfNeeded;	// IMP=0x000000000044e9a3
- (_Bool)_currentPluginIsJellyfish;	// IMP=0x000000000044e909
- (_Bool)shouldAutorotate;	// IMP=0x000000000044e81a
- (unsigned long long)supportedInterfaceOrientations;	// IMP=0x000000000044e71e
- (void)_transitionSnapshotViewToBrowserView;	// IMP=0x000000000044e410
- (void)_handleRemoteViewControllerConnectionInterrupted:(id)arg1;	// IMP=0x000000000044e1ca
- (void)_transitionSnapshotViewToBrowserViewAfterViewDidPrepareForDisplay:(id)arg1;	// IMP=0x000000000044de3f
- (void)_updateVisibleBrowserView;	// IMP=0x000000000044dbae
- (void)_snapshotCurrentViewController;	// IMP=0x000000000044da42
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000044d977
- (id)traitCollection;	// IMP=0x000000000044d862
- (void)updateGrabberTitleAndIconForPlugin:(id)arg1;	// IMP=0x000000000044d6c8
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000044d5ec
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000044d2b2
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x000000000044d175
- (_Bool)_pluginHasLiveBrowserViewInSwitcher:(id)arg1;	// IMP=0x000000000044d0a5
- (void)_updateCurrentBrowserSnapshotIfPossible;	// IMP=0x000000000044cff8
- (void)_handleVisibleSwitcherPluginsChanged:(id)arg1;	// IMP=0x000000000044cc96
- (void)saveSnapshotForCurrentBrowserViewControllerIfPossible;	// IMP=0x000000000044cba8
- (_Bool)_hasLandscapeGutters;	// IMP=0x000000000044ca5e
- (void)animateOutCompactWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000044c638
- (void)animateInCompactWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000044c271
- (void)showBrowserFullscreenModalForPlugin:(id)arg1 datasource:(id)arg2;	// IMP=0x000000000044c1e0
- (void)showBrowserFullscreenForPlugin:(id)arg1 datasource:(id)arg2;	// IMP=0x000000000044bfc6
- (void)showBrowserInSwitcherForPlugin:(id)arg1 datasource:(id)arg2 reloadData:(_Bool)arg3;	// IMP=0x000000000044be8e
- (void)unloadRemoteViewControllers;	// IMP=0x000000000044b9b1
- (void)_performAfterFirstLayout:(CDUnknownBlockType)arg1;	// IMP=0x000000000044b953
- (id)appIconOverride;	// IMP=0x000000000044b8ed
- (id)appTitleOverride;	// IMP=0x000000000044b887
- (id)transitionsPresentationViewController;	// IMP=0x000000000044b821
- (_Bool)shouldAlwaysShowAppTitle;	// IMP=0x000000000044b7c7
- (_Bool)browserTransitionCoordinatorShouldDismissOnDragSuccess:(id)arg1;	// IMP=0x000000000044b746
- (double)browserTransitionCoordinatorCollapsedContentHeight:(id)arg1;	// IMP=0x000000000044b6aa
- (void)browserTransitionCoordinator:(id)arg1 hasUpdatedLastTouchDate:(id)arg2;	// IMP=0x000000000044b600
- (void)browserTransitionCoordinator:(id)arg1 didSwitchToPlugin:(id)arg2;	// IMP=0x000000000044b4fb
- (void)browserTransitionCoordinatorWantsPresentationOfAppManager:(id)arg1;	// IMP=0x000000000044b45c
- (void)browserTransitionCoordinatorWantsPresentationOfAppStore:(id)arg1;	// IMP=0x000000000044b3bd
- (void)browserTransitionCoordinatorDidCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;	// IMP=0x000000000044b2fc
- (void)browserTransitionCoordinatorWillCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;	// IMP=0x000000000044b21e
- (void)browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;	// IMP=0x000000000044b16f
- (void)browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;	// IMP=0x000000000044b0c0
- (void)browserTransitionCoordinator:(id)arg1 browserWillBecomeInactive:(id)arg2;	// IMP=0x000000000044b0ac
- (void)browserTransitionCoordinator:(id)arg1 expandedStateDidChange:(_Bool)arg2 withReason:(long long)arg3;	// IMP=0x000000000044adf3
- (void)expandGestureTouchMoved:(id)arg1;	// IMP=0x000000000044a779
- (void)reverseAndCleanupExpandAnimator;	// IMP=0x000000000044a731
- (void)cleanupExpandAnimatorState;	// IMP=0x000000000044a6fd
- (void)stopExpandAnimatorAndCleanupState;	// IMP=0x000000000044a6bf
- (void)setupPausedExpandAnimatorIfNeeded;	// IMP=0x000000000044a1e9
- (double)_rubberBandOffsetWithoutDecorationForOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4 outside:(_Bool *)arg5;	// IMP=0x000000000044a13f
- (double)restingContainerViewOriginY;	// IMP=0x000000000044a0af
- (struct CGRect)restingGrabberFrame;	// IMP=0x0000000000449e68
- (void)dismissBrowserFullscreenAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000449de1
- (struct CGRect)cachedCompactFrameInWindowCoordsForBrowserTransitionCoordinator:(id)arg1;	// IMP=0x0000000000449cf6
- (void)reinsertAppGrabberViewForBrowserTransitionCoordinator:(id)arg1;	// IMP=0x0000000000449bd9
- (id)appGrabberForBrowserTransitionCoordinator:(id)arg1;	// IMP=0x0000000000449bc7
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x00000000004499fa
- (void)browserTransitionCoordinator:(id)arg1 didTransitionFromOrientation:(long long)arg2 toOrientation:(long long)arg3;	// IMP=0x00000000004496fb
- (struct CGSize)browserTransitionCoordinator:(id)arg1 preferredSizeForBrowser:(id)arg2;	// IMP=0x000000000044952f
- (void)transitionToCollapsed;	// IMP=0x000000000044938b
- (void)transitionToFullscreen;	// IMP=0x0000000000449138
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x00000000004490e0
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0000000000448f0b
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000000448e3e
- (void)viewDidLoad;	// IMP=0x0000000000448bcb
- (void)layoutMarginsDidChange;	// IMP=0x0000000000448b61
- (_Bool)isBrowserSwitcherFirstLaunch;	// IMP=0x0000000000448a89
- (void)viewDidLayoutSubviews;	// IMP=0x0000000000448035
- (id)activeBrowserView;	// IMP=0x0000000000447fe5
- (void)loadView;	// IMP=0x0000000000447a8d
- (id)initWithConversation:(id)arg1 sendDelegate:(id)arg2 presentingViewController:(id)arg3;	// IMP=0x0000000000447735
- (void)dealloc;	// IMP=0x0000000000447636
- (void)showPlugin:(id)arg1;	// IMP=0x0000000000450bd0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

