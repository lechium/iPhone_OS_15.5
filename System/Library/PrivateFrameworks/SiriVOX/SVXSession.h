//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SiriVOX/AFAssistantUIService-Protocol.h>
#import <SiriVOX/AFSpeechDelegate-Protocol.h>
#import <SiriVOX/SVXAudioSessionProviding-Protocol.h>
#import <SiriVOX/SVXSpeechSynthesisListening-Protocol.h>
#import <SiriVOX/SVXTaskTrackingCenterDelegate-Protocol.h>

@class AFAnalytics, AFAnalyticsTurnBasedInstrumentationContext, AFConnection, AFDeviceContext, AFHomeAccessoryInfo, AFInstanceContext, AFModesConfiguration, AFPreferences, AFSpeechRequestOptions, AFXPCWrapper, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSUUID, NSUserActivity, SASetApplicationContext, SRSTClient, SVXActivationContext, SVXDeactivationContext, SVXDeviceProblemsState, SVXDeviceSetupContext, SVXServiceCommandHandler, SVXSpeechSynthesizer, SVXTaskTrackingCenter;
@protocol AFRelinquishableAssertion, SVXPerforming, SVXSessionDelegate;

__attribute__((visibility("hidden")))
@interface SVXSession : NSObject <AFAssistantUIService, AFSpeechDelegate, SVXSpeechSynthesisListening, SVXTaskTrackingCenterDelegate, SVXAudioSessionProviding>
{
    AFConnection *_connection;	// 8 = 0x8
    long long _currentState;	// 16 = 0x10
    long long _activityState;	// 24 = 0x18
    NSUUID *_activityUUID;	// 32 = 0x20
    CDUnknownBlockType _postResignActiveBlock;	// 40 = 0x28
    SVXActivationContext *_currentActivationContext;	// 48 = 0x30
    SVXDeactivationContext *_currentDeactivationContext;	// 56 = 0x38
    NSUUID *_currentRequestUUID;	// 64 = 0x40
    AFSpeechRequestOptions *_currentSpeechRequestOptions;	// 72 = 0x48
    CDUnknownBlockType _currentSpeechRequestDidStartBlock;	// 80 = 0x50
    NSMutableArray *_currentSpeechRequestPendingBlocks;	// 88 = 0x58
    _Bool _currentRequestWillPresentUUFR;	// 96 = 0x60
    _Bool _currentRequestDidPresentUUFR;	// 97 = 0x61
    AFAnalyticsTurnBasedInstrumentationContext *_previousRequestInstrumentationContext;	// 104 = 0x68
    AFAnalyticsTurnBasedInstrumentationContext *_currentRequestInstrumentationContext;	// 112 = 0x70
    SVXTaskTrackingCenter *_taskTrackingCenter;	// 120 = 0x78
    NSMutableSet *_sessionIdleAssertions;	// 128 = 0x80
    AFXPCWrapper *_inputAudioPowerWrapper;	// 136 = 0x88
    AFXPCWrapper *_outputAudioPowerWrapper;	// 144 = 0x90
    unsigned int _audioSessionID;	// 152 = 0x98
    NSMutableSet *_audioSessionAssertions;	// 160 = 0xa0
    id <SVXPerforming> _performer;	// 168 = 0xa8
    SVXServiceCommandHandler *_serviceCommandHandler;	// 176 = 0xb0
    SVXSpeechSynthesizer *_speechSynthesizer;	// 184 = 0xb8
    AFInstanceContext *_instanceContext;	// 192 = 0xc0
    AFPreferences *_preferences;	// 200 = 0xc8
    AFAnalytics *_analytics;	// 208 = 0xd0
    id <SVXSessionDelegate> _delegate;	// 216 = 0xd8
    int _currentInstrumentationUIState;	// 224 = 0xe0
    NSMutableArray *_pendingRequestBarriers;	// 232 = 0xe8
    _Bool _isMostRecentRequestStartingMediaPlaybackLocally;	// 240 = 0xf0
    _Bool _isMostRecentRequestSuppressedError;	// 241 = 0xf1
    SASetApplicationContext *_setApplicationContext;	// 248 = 0xf8
    SVXDeviceProblemsState *_deviceProblemsState;	// 256 = 0x100
    SVXDeviceSetupContext *_deviceSetupContext;	// 264 = 0x108
    AFDeviceContext *_localDeviceContext;	// 272 = 0x110
    AFHomeAccessoryInfo *_currentAccessoryInfo;	// 280 = 0x118
    id _myriadToken;	// 288 = 0x120
    long long _myriadState;	// 296 = 0x128
    NSMutableArray *_pendingMyriadDecisionHandlers;	// 304 = 0x130
    NSMutableDictionary *_playbackRequestInfo;	// 312 = 0x138
    NSUserActivity *_userActivity;	// 320 = 0x140
    id <AFRelinquishableAssertion> _audioDuckingCoordinationAssertion;	// 328 = 0x148
    AFModesConfiguration *_modesConfiguration;	// 336 = 0x150
    SRSTClient *_client;	// 344 = 0x158
    NSUUID *_sessionUUID;	// 352 = 0x160
}

- (void).cxx_destruct;	// IMP=0x000000000007d8fd
@property(readonly, nonatomic) NSUUID *sessionUUID; // @synthesize sessionUUID=_sessionUUID;
- (void)_sessionIdleFiredWithAssertion:(id)arg1;	// IMP=0x000000000007d3ee
- (void)_stopSessionIdleTimer;	// IMP=0x000000000007d323
- (void)_startSessionIdleTimerWithTimeInterval:(double)arg1;	// IMP=0x000000000007d136
- (void)_invalidateConnection;	// IMP=0x000000000007cfd8
- (id)_connection:(_Bool)arg1;	// IMP=0x000000000007cda6
- (void)_handleCommand:(id)arg1 taskTracker:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000007c93c
- (void)_presentError:(id)arg1 taskTracker:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000007b78b
- (void)_handleSpeechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;	// IMP=0x000000000007b6bb
- (void)_handleSpeechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000007b612
- (void)_handleSpeechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000007b569
- (void)_handleSpeechSynthesizerDidFinishRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;	// IMP=0x000000000007af63
- (void)_handleSpeechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;	// IMP=0x000000000007abc1
- (void)_handleSpeechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000007a8c7
- (void)_handleSpeechSynthesizerDidBecomeIdle;	// IMP=0x000000000007a7dd
- (void)_handleSpeechSynthesizerWillBecomeBusy;	// IMP=0x000000000007a4cd
- (void)_endThinking;	// IMP=0x000000000007a448
- (void)_beginThinking;	// IMP=0x000000000007a3c3
- (void)_didChangeFromState:(long long)arg1 toState:(long long)arg2;	// IMP=0x000000000007a20a
- (void)_willChangeFromState:(long long)arg1 toState:(long long)arg2;	// IMP=0x000000000007a09e
- (void)_handleAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0000000000079fbf
- (void)_handleAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0000000000079ee0
- (void)_handleDidFailStartPlaybackWithDestination:(long long)arg1;	// IMP=0x0000000000079e0d
- (void)_handleWillProcessStartPlaybackWithDestination:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000079cd3
- (void)_handleDidHandleQuickStopWithActions:(unsigned long long)arg1;	// IMP=0x0000000000079bf8
- (void)_handleDidStopAudioPlaybackRequest:(id)arg1 error:(id)arg2;	// IMP=0x00000000000799c9
- (void)_handleDidStartAudioPlaybackRequest:(id)arg1;	// IMP=0x00000000000797eb
- (void)_handleWillStartAudioPlaybackRequest:(id)arg1;	// IMP=0x00000000000796a3
- (void)_handleAudioSessionDidEndInterruption:(_Bool)arg1;	// IMP=0x0000000000079608
- (void)_handleAudioSessionDidBeginInterruption;	// IMP=0x0000000000079565
- (void)_handleDidChangeAudioSessionID:(unsigned int)arg1;	// IMP=0x00000000000794b1
- (void)_handleShouldSpeak:(_Bool)arg1;	// IMP=0x0000000000079416
- (void)_handleRequestFailedWithError:(id)arg1;	// IMP=0x0000000000079384
- (void)_handleReceivedCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000078d7d
- (void)_handleRequestFinished;	// IMP=0x0000000000078cb2
- (void)_handleDismissAssistant;	// IMP=0x0000000000078beb
- (void)_handleRequestWillStart;	// IMP=0x0000000000078a91
- (void)_handleSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x000000000007891e
- (void)_handleSpeechRecognized:(id)arg1;	// IMP=0x00000000000787d9
- (void)_handleSpeechRecognitionDidFailWithError:(id)arg1;	// IMP=0x000000000007872c
- (void)_handleSpeechRecordingDidFailWithError:(id)arg1;	// IMP=0x0000000000078636
- (void)_handleSpeechRecordingDidCancel;	// IMP=0x0000000000078523
- (void)_handleSpeechRecordingDidEnd;	// IMP=0x00000000000783e0
- (void)_handleSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000078057
- (void)_handleSpeechRecordingDidDetectStartpoint;	// IMP=0x0000000000077f70
- (void)_handleSpeechRecordingDidChangeAVRecordRoute:(id)arg1;	// IMP=0x0000000000077e62
- (void)_handleSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1;	// IMP=0x0000000000077d18
- (void)_handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1;	// IMP=0x0000000000077adf
- (void)_requestDidEndWithOptions:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x00000000000775bf
- (void)_requestWillBeginWithTaskTracker:(id)arg1;	// IMP=0x00000000000770ea
- (void)_invalidate;	// IMP=0x0000000000076e4f
- (void)_resignActiveForReason:(id)arg1;	// IMP=0x0000000000075d76
- (void)_performBlockAfterResignActive:(CDUnknownBlockType)arg1;	// IMP=0x0000000000075c60
- (void)_checkIsActiveWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000007540b
- (id)_currentAccessoryInfo;	// IMP=0x000000000007522a
- (void)_getAlarmAndTimerFiringContextWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000749e8
- (void)_setAudioSessionID:(unsigned int)arg1;	// IMP=0x0000000000074900
- (void)_forceAudioSessionInactiveWithReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000074458
- (void)_forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000073f56
- (void)_setOutputAudioPowerWrapper:(id)arg1;	// IMP=0x0000000000073d0e
- (void)_setInputAudioPowerWrapper:(id)arg1;	// IMP=0x0000000000073ac6
- (void)_discardPendingRequestBarriers;	// IMP=0x000000000007393c
- (void)_performNextPendingRequestBarrier;	// IMP=0x00000000000737a9
- (void)_addRequestBarrier:(CDUnknownBlockType)arg1;	// IMP=0x000000000007366f
- (void)_setApplicationContext:(id)arg1;	// IMP=0x0000000000073588
- (void)_clearContext;	// IMP=0x00000000000734be
- (void)_continuePendingSpeechRequest:(_Bool)arg1;	// IMP=0x00000000000732f7
- (void)_performBlockAfterContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000732b0
- (void)_setCurrentState:(long long)arg1;	// IMP=0x000000000007316a
- (void)_dismiss;	// IMP=0x0000000000073066
- (void)_cancelRequestWithOptions:(unsigned long long)arg1 keepTaskTracker:(id)arg2;	// IMP=0x0000000000072e28
- (void)_waitForMyriadDecisionUsingHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000072d5a
- (void)_resetMyriadDecision;	// IMP=0x0000000000072b1c
- (void)_endWaitingForMyriadDecisionWithToken:(id)arg1 state:(long long)arg2;	// IMP=0x0000000000072773
- (void)_beginWaitingForMyriadDecisionWithToken:(id)arg1;	// IMP=0x00000000000725c2
- (void)endWaitingForMyriadDecisionWithToken:(id)arg1 result:(_Bool)arg2;	// IMP=0x0000000000072460
- (id)beginWaitingForMyriadDecision;	// IMP=0x000000000007225a
- (void)_startActiveAudioSessionRequestForType:(long long)arg1 taskTracker:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000071d1a
- (void)_startSpeechSynthesisRequest:(id)arg1 languageCode:(id)arg2 voiceName:(id)arg3 gender:(long long)arg4 audioSessionID:(unsigned int)arg5 introductionSoundID:(long long)arg6 conclusionSoundID:(long long)arg7 taskTracker:(id)arg8 postActivationHandler:(CDUnknownBlockType)arg9 completion:(CDUnknownBlockType)arg10;	// IMP=0x0000000000070e21
- (void)_startRequestWithInfo:(id)arg1 clearsContext:(_Bool)arg2 deviceSetupContext:(id)arg3 taskTracker:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000070a3c
- (void)_updateSpeechEndpointerOperationMode:(long long)arg1;	// IMP=0x00000000000708c4
- (void)_transitSpeechToAutomaticEndpointing;	// IMP=0x000000000007074e
- (void)_transitSpeechToManualEndpointing;	// IMP=0x00000000000705d8
- (void)_stopSpeechWithCurrentSpeechRequestOptions;	// IMP=0x00000000000704c1
- (void)_stopSpeech;	// IMP=0x0000000000070350
- (void)_startSpeechRequestWithOptions:(id)arg1 clearsContext:(_Bool)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 taskTracker:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000000006f8d2
- (void)_preheatWithStyle:(long long)arg1;	// IMP=0x000000000006f7de
- (void)_deactivateWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006f4ab
- (void)_activateWithContext:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 speechSynthesisRecord:(id)arg6 speechSynthesisState:(long long)arg7 speechRecordingAlertPolicy:(id)arg8 taskTracker:(id)arg9 completion:(CDUnknownBlockType)arg10;	// IMP=0x000000000006bf50
- (void)taskTrackingCenterDidBecomeIdle:(id)arg1;	// IMP=0x000000000006be10
- (void)taskTrackingCenter:(id)arg1 didEndTrackingTaskWithContext:(id)arg2;	// IMP=0x000000000006bd40
- (void)taskTrackingCenter:(id)arg1 didBeginTrackingTaskWithContext:(id)arg2;	// IMP=0x000000000006bc70
- (void)taskTrackingCenterWillBecomeBusy:(id)arg1;	// IMP=0x000000000006bb65
- (void)speechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;	// IMP=0x000000000006b9a0
- (void)speechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000006b883
- (void)speechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000006b766
- (void)speechSynthesizerDidFinishRequest:(id)arg1 utteranceInfo:(id)arg2 record:(id)arg3 taskTracker:(id)arg4;	// IMP=0x000000000006b585
- (void)speechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;	// IMP=0x000000000006b3bd
- (void)speechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000006b2a0
- (void)speechSynthesizerWillEnqueueRequest:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000006b233
- (void)speechSynthesizerDidBecomeIdle;	// IMP=0x000000000006b19c
- (void)speechSynthesizerDidBecomeBusy;	// IMP=0x000000000006b105
- (void)acquireAudioSessionForReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006a689
- (void)assistantConnection:(id)arg1 startUIRequestWithInfo:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006a577
- (void)assistantConnection:(id)arg1 startUIRequestWithText:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006a3f4
- (void)assistantConnection:(id)arg1 audioSessionDidBecomeActive:(_Bool)arg2;	// IMP=0x000000000006a32a
- (void)assistantConnection:(id)arg1 audioSessionWillBecomeActive:(_Bool)arg2;	// IMP=0x000000000006a260
- (void)assistantConnection:(id)arg1 startPlaybackDidFail:(long long)arg2;	// IMP=0x000000000006a197
- (void)assistantConnection:(id)arg1 willProcessStartPlayback:(long long)arg2 intent:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000069fdc
- (void)assistantConnection:(id)arg1 didHandleQuickStopWithAction:(unsigned long long)arg2;	// IMP=0x0000000000069f13
- (void)assistantConnection:(id)arg1 didStopAudioPlaybackRequest:(id)arg2 error:(id)arg3;	// IMP=0x0000000000069cbf
- (void)assistantConnection:(id)arg1 didStartAudioPlaybackRequest:(id)arg2;	// IMP=0x0000000000069b8a
- (void)assistantConnection:(id)arg1 willStartAudioPlaybackRequest:(id)arg2;	// IMP=0x0000000000069a87
- (void)assistantConnection:(id)arg1 setUserActivtiyInfoAndMakeCurrent:(id)arg2 webpageURL:(id)arg3;	// IMP=0x000000000006980d
- (void)assistantConnectionAudioSessionDidEndInterruption:(id)arg1 shouldResume:(_Bool)arg2;	// IMP=0x0000000000069743
- (void)assistantConnectionAudioSessionDidBeginInterruption:(id)arg1;	// IMP=0x0000000000069690
- (void)assistantConnection:(id)arg1 didChangeAudioSessionID:(unsigned int)arg2;	// IMP=0x00000000000695c8
- (void)assistantConnection:(id)arg1 shouldSpeak:(_Bool)arg2;	// IMP=0x00000000000694fe
- (void)assistantConnection:(id)arg1 requestFailedWithError:(id)arg2 requestClass:(id)arg3;	// IMP=0x000000000006936f
- (void)assistantConnection:(id)arg1 receivedCommand:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006923a
- (void)assistantConnectionRequestFinished:(id)arg1;	// IMP=0x0000000000069187
- (void)assistantConnectionDismissAssistant:(id)arg1;	// IMP=0x00000000000690d4
- (void)assistantConnectionRequestWillStart:(id)arg1;	// IMP=0x0000000000069021
- (void)assistantConnection:(id)arg1 recognitionUpdateWithPhrases:(id)arg2 utterances:(id)arg3 refId:(id)arg4;	// IMP=0x0000000000068f0a
- (void)assistantConnection:(id)arg1 recognizedAdditionalSpeechInterpretation:(id)arg2 refId:(id)arg3;	// IMP=0x0000000000068e13
- (void)assistantConnection:(id)arg1 speechRecognizedPartialResult:(id)arg2;	// IMP=0x0000000000068c61
- (void)assistantConnection:(id)arg1 speechRecognized:(id)arg2;	// IMP=0x0000000000068aaf
- (void)assistantConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;	// IMP=0x00000000000689ac
- (void)assistantConnection:(id)arg1 speechRecordingDidFail:(id)arg2;	// IMP=0x00000000000688a9
- (void)assistantConnectionSpeechRecordingDidCancel:(id)arg1;	// IMP=0x00000000000687f6
- (void)assistantConnectionSpeechRecordingDidEnd:(id)arg1;	// IMP=0x0000000000068743
- (void)assistantConnection:(id)arg1 speechRecordingPerformTwoShotPromptWithType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000068629
- (void)assistantConnectionSpeechRecordingDidDetectStartpoint:(id)arg1;	// IMP=0x0000000000068576
- (void)assistantConnection:(id)arg1 speechRecordingDidChangeAVRecordRoute:(id)arg2;	// IMP=0x0000000000068473
- (void)assistantConnection:(id)arg1 speechRecordingDidBeginOnAVRecordRoute:(id)arg2 audioSessionID:(unsigned int)arg3;	// IMP=0x00000000000682d2
- (void)assistantConnection:(id)arg1 speechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg2;	// IMP=0x00000000000681cf
- (void)assistantConnectionSpeechRecordingWillBegin:(id)arg1;	// IMP=0x000000000006811a
- (void)activateWithSpeechRequestOptions:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000067f25
- (void)updateLocalDeviceContext:(id)arg1;	// IMP=0x0000000000067dd2
- (void)updateDeviceSetupContext:(id)arg1;	// IMP=0x0000000000067b29
- (void)updateDeviceProblemsState:(id)arg1;	// IMP=0x00000000000679d6
- (void)invalidate;	// IMP=0x000000000006796a
- (void)handleCommand:(id)arg1 taskTracker:(id)arg2;	// IMP=0x000000000006784b
- (void)addRequestBarrier:(CDUnknownBlockType)arg1;	// IMP=0x0000000000067793
- (void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x0000000000067693
- (void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000672c0
- (void)getAlarmAndTimerFiringContextWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000006714e
- (void)getAudioPowerWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000067026
- (void)getActivityStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066f71
- (void)getStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066ebc
- (void)dismiss;	// IMP=0x0000000000066e50
- (void)cancelRequest;	// IMP=0x0000000000066ddd
- (void)transitSpeechToManualEndpointing;	// IMP=0x0000000000066d71
- (void)transitSpeechToAutomaticEndpointing;	// IMP=0x0000000000066d05
- (void)stopSpeech;	// IMP=0x0000000000066c99
- (void)preheatWithStyle:(long long)arg1;	// IMP=0x0000000000066c1f
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066bff
- (void)deactivateWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000669e1
- (id)activateWithContext:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 speechSynthesisRecord:(id)arg6 speechSynthesisState:(long long)arg7 speechRecordingAlertPolicy:(id)arg8 completion:(CDUnknownBlockType)arg9;	// IMP=0x00000000000662fc
- (id)activateWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000662c8
- (void)prewarmWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000065fa3
- (id)initWithPerformer:(id)arg1 serviceCommandHandler:(id)arg2 speechSynthesizer:(id)arg3 instanceContext:(id)arg4 preferences:(id)arg5 analytics:(id)arg6 delegate:(id)arg7;	// IMP=0x0000000000065875
- (void)dealloc;	// IMP=0x00000000000657cb
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

