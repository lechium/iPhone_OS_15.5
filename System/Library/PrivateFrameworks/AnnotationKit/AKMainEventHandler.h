//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIResponder.h>

#import <AnnotationKit/AKFormFeatureDetectorDelegate-Protocol.h>

@class AKAlignmentGuideController, AKAnnotation, AKAnnotationEventHandler, AKController, AKHighlightColorEditorController, AKPageController, NSString, UIEvent;

@interface AKMainEventHandler : UIResponder <AKFormFeatureDetectorDelegate>
{
    _Bool _mainEventHandlerIsInTrackingLoop;	// 8 = 0x8
    _Bool _mainEventHandlerIsInDoodleTrackingLoop;	// 9 = 0x9
    _Bool _mainEventHandlerIsInRotationLoop;	// 10 = 0xa
    _Bool _shouldEatNextLeftMouseUp;	// 11 = 0xb
    _Bool _shouldEatNextRightMouseUp;	// 12 = 0xc
    _Bool _dragDidCopySelectedAnnotations;	// 13 = 0xd
    _Bool _undoManagerWasGroupingByEvent;	// 14 = 0xe
    _Bool _wasSelectedByLongPressRecognizer;	// 15 = 0xf
    AKAnnotationEventHandler *_annotationEventHandler;	// 16 = 0x10
    unsigned long long _currentModifierFlags;	// 24 = 0x18
    AKPageController *_dragPageController;	// 32 = 0x20
    AKAlignmentGuideController *_dragAlignmentGuideController;	// 40 = 0x28
    double _draggedAnnotationsMaxLeftEdge;	// 48 = 0x30
    double _draggedAnnotationsMinRightEdge;	// 56 = 0x38
    double _draggedAnnotationsMaxBottomEdge;	// 64 = 0x40
    double _draggedAnnotationsMinTopEdge;	// 72 = 0x48
    UIEvent *_lastEventWithValidLocationForAutoscroll;	// 80 = 0x50
    UIEvent *_lastLeftMouseDownEvent;	// 88 = 0x58
    AKAnnotation *_annotationToBeginEditingOnDragEnd;	// 96 = 0x60
    AKHighlightColorEditorController *_highlightColorEditor;	// 104 = 0x68
    AKController *_controller;	// 112 = 0x70
    struct CGPoint _leftMouseDownPoint;	// 120 = 0x78
    struct CGPoint _lastDragPoint;	// 136 = 0x88
    struct CGPoint _lastDragActualLocation;	// 152 = 0x98
    struct CGPoint _lastDragActualLocationInWindow;	// 168 = 0xa8
    struct CGPoint _firstDragPoint;	// 184 = 0xb8
    struct CGPoint _panGestureStartPointInWindow;	// 200 = 0xc8
}

+ (id)newMainEventHandlerForCurrentPlatformWithController:(id)arg1;	// IMP=0x00000000000d0fec
- (void).cxx_destruct;	// IMP=0x00000000000d5b11
@property struct CGPoint panGestureStartPointInWindow; // @synthesize panGestureStartPointInWindow=_panGestureStartPointInWindow;
@property struct CGPoint firstDragPoint; // @synthesize firstDragPoint=_firstDragPoint;
@property __weak AKController *controller; // @synthesize controller=_controller;
@property(retain) AKHighlightColorEditorController *highlightColorEditor; // @synthesize highlightColorEditor=_highlightColorEditor;
@property __weak AKAnnotation *annotationToBeginEditingOnDragEnd; // @synthesize annotationToBeginEditingOnDragEnd=_annotationToBeginEditingOnDragEnd;
@property _Bool wasSelectedByLongPressRecognizer; // @synthesize wasSelectedByLongPressRecognizer=_wasSelectedByLongPressRecognizer;
@property(retain) UIEvent *lastLeftMouseDownEvent; // @synthesize lastLeftMouseDownEvent=_lastLeftMouseDownEvent;
@property(retain) UIEvent *lastEventWithValidLocationForAutoscroll; // @synthesize lastEventWithValidLocationForAutoscroll=_lastEventWithValidLocationForAutoscroll;
@property double draggedAnnotationsMinTopEdge; // @synthesize draggedAnnotationsMinTopEdge=_draggedAnnotationsMinTopEdge;
@property double draggedAnnotationsMaxBottomEdge; // @synthesize draggedAnnotationsMaxBottomEdge=_draggedAnnotationsMaxBottomEdge;
@property double draggedAnnotationsMinRightEdge; // @synthesize draggedAnnotationsMinRightEdge=_draggedAnnotationsMinRightEdge;
@property double draggedAnnotationsMaxLeftEdge; // @synthesize draggedAnnotationsMaxLeftEdge=_draggedAnnotationsMaxLeftEdge;
@property struct CGPoint lastDragActualLocationInWindow; // @synthesize lastDragActualLocationInWindow=_lastDragActualLocationInWindow;
@property struct CGPoint lastDragActualLocation; // @synthesize lastDragActualLocation=_lastDragActualLocation;
@property struct CGPoint lastDragPoint; // @synthesize lastDragPoint=_lastDragPoint;
@property(retain) AKAlignmentGuideController *dragAlignmentGuideController; // @synthesize dragAlignmentGuideController=_dragAlignmentGuideController;
@property(retain) AKPageController *dragPageController; // @synthesize dragPageController=_dragPageController;
@property struct CGPoint leftMouseDownPoint; // @synthesize leftMouseDownPoint=_leftMouseDownPoint;
@property _Bool undoManagerWasGroupingByEvent; // @synthesize undoManagerWasGroupingByEvent=_undoManagerWasGroupingByEvent;
@property _Bool dragDidCopySelectedAnnotations; // @synthesize dragDidCopySelectedAnnotations=_dragDidCopySelectedAnnotations;
@property _Bool shouldEatNextRightMouseUp; // @synthesize shouldEatNextRightMouseUp=_shouldEatNextRightMouseUp;
@property _Bool shouldEatNextLeftMouseUp; // @synthesize shouldEatNextLeftMouseUp=_shouldEatNextLeftMouseUp;
@property unsigned long long currentModifierFlags; // @synthesize currentModifierFlags=_currentModifierFlags;
@property(retain) AKAnnotationEventHandler *annotationEventHandler; // @synthesize annotationEventHandler=_annotationEventHandler;
@property _Bool mainEventHandlerIsInRotationLoop; // @synthesize mainEventHandlerIsInRotationLoop=_mainEventHandlerIsInRotationLoop;
@property _Bool mainEventHandlerIsInDoodleTrackingLoop; // @synthesize mainEventHandlerIsInDoodleTrackingLoop=_mainEventHandlerIsInDoodleTrackingLoop;
@property _Bool mainEventHandlerIsInTrackingLoop; // @synthesize mainEventHandlerIsInTrackingLoop=_mainEventHandlerIsInTrackingLoop;
- (_Bool)_detectFormElementInCurrentPageControllerUnderPointInWindow:(struct CGPoint)arg1;	// IMP=0x00000000000d53fa
- (_Bool)_detectFormElementInCurrentPageControllerUnderPointInWindow:(struct CGPoint)arg1 withStartingPoint:(struct CGPoint)arg2;	// IMP=0x00000000000d5376
- (struct CGPoint)_alignedAnnotationDragPointForPoint:(struct CGPoint)arg1 withEvent:(id)arg2 orRecognizer:(id)arg3;	// IMP=0x00000000000d5202
- (void)_updateSelectionWithAnnotation:(id)arg1 onPageController:(id)arg2;	// IMP=0x00000000000d5139
- (_Bool)_didNotHandleEventSoDeselect;	// IMP=0x00000000000d5079
- (void)_setCurrentPageBasedOnPageController:(id)arg1;	// IMP=0x00000000000d4ff7
- (struct CGPoint)_modelPointFromPointInWindow:(struct CGPoint)arg1 usingPageController:(id)arg2;	// IMP=0x00000000000d4f5a
- (void)applyToAllSelectedAnnotationsRotateEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d4f54
- (void)finishTranslationOfAllSelectedAnnotations;	// IMP=0x00000000000d4cef
- (void)applyTranslationToAllSelectedAnnotations:(struct CGPoint)arg1;	// IMP=0x00000000000d4adb
- (_Bool)hitTestAnnotationsIncludingPOI:(_Bool)arg1 ignoreIfDeselected:(_Bool)arg2 atPointInWindow:(struct CGPoint)arg3 outAnnotation:(id *)arg4;	// IMP=0x00000000000d4910
- (_Bool)hitTestPointsOfInterestsAtPoint:(struct CGPoint)arg1 onPageController:(id)arg2 inAnnotations:(id)arg3 event:(id)arg4 recognizer:(id)arg5 cursorUpdateOnly:(_Bool)arg6;	// IMP=0x00000000000d43b8
- (id)topmostAnnotationForBorderAndInteriorHitTestAtPoint:(struct CGPoint)arg1 inAnnotations:(id)arg2 onPageController:(id)arg3 wasOnBorder:(_Bool *)arg4 wasOnText:(_Bool *)arg5;	// IMP=0x00000000000d4075
- (id)annotationsPassingBoundingBoxHitTestsWithPoint:(struct CGPoint)arg1 onPageController:(id)arg2;	// IMP=0x00000000000d3d47
- (_Bool)continueRotateEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d3cc8
- (_Bool)enterRotateEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d3b9e
- (_Bool)continueDragEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d3612
- (_Bool)enterDragEventTrackingLoopWithEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d2ef8
- (void)updateCursorForEvent:(id)arg1;	// IMP=0x00000000000d2ef2
- (_Bool)handleRotateEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d2daf
- (_Bool)handleKeyboardEvent:(id)arg1;	// IMP=0x00000000000d2da7
- (_Bool)handleRightDownEvent:(id)arg1;	// IMP=0x00000000000d2d9f
- (_Bool)handleDoubleDownEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d2b49
- (_Bool)handleDownEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d1bb7
- (struct CGPoint)modelPointFromWindowPoint:(struct CGPoint)arg1 foundOnPageController:(id *)arg2;	// IMP=0x00000000000d1895
- (struct CGPoint)windowPointFromEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d1728
- (struct CGPoint)modelPointFromEvent:(id)arg1 orRecognizer:(id)arg2 onPageController:(id *)arg3;	// IMP=0x00000000000d16eb
- (_Bool)mainHandleEvent:(id)arg1 orRecognizer:(id)arg2;	// IMP=0x00000000000d10ab
- (void)teardown;	// IMP=0x00000000000d10a5
- (id)initWithController:(id)arg1;	// IMP=0x00000000000d103d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

