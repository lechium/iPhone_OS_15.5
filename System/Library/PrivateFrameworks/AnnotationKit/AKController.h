//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AKActionController, AKAttributeController, AKFormFeatureDetectorController, AKHighlightAnnotationController, AKLegacyDoodleController, AKMainEventHandler, AKModelController, AKPageController, AKPeripheralAvailabilityManager_iOS, AKSidecarController, AKSignatureModelController, AKSparseMutableControllerArray, AKStatistics, AKTextEditorController, AKToolController, AKToolbarView, AKToolbarViewController, AKUndoController, NSArray, NSMapTable, NSString, PKToolPicker, UIView;
@protocol AKControllerDelegateProtocol, AKControllerOverlayInteractionProtocol, PKRulerHostingDelegate;

@interface AKController : NSObject
{
    _Bool _isEditingAnnotation;	// 8 = 0x8
    _Bool _toolPickerVisibleBeforeTextEditing;	// 9 = 0x9
    _Bool _isUsedOnDarkBackground;	// 10 = 0xa
    _Bool overlayShouldPixelate;	// 11 = 0xb
    _Bool _isTornDown;	// 12 = 0xc
    _Bool _allEditingDisabled;	// 13 = 0xd
    _Bool _annotationEditingEnabled;	// 14 = 0xe
    _Bool _pencilAlwaysDraws;	// 15 = 0xf
    _Bool _isTestingInstance;	// 16 = 0x10
    _Bool _hideAllAdornments;	// 17 = 0x11
    _Bool _isLogging;	// 18 = 0x12
    _Bool _selectNewlyCreatedAnnotations;	// 19 = 0x13
    _Bool _shapeDetectionEnabled;	// 20 = 0x14
    _Bool _useHighVisibilityDefaultInks;	// 21 = 0x15
    _Bool __isInDFRAction;	// 22 = 0x16
    id <AKControllerDelegateProtocol> _delegate;	// 24 = 0x18
    AKModelController *_modelController;	// 32 = 0x20
    UIView *_toolbarView;	// 40 = 0x28
    unsigned long long _currentPageIndex;	// 48 = 0x30
    id <PKRulerHostingDelegate> _rulerHostingDelegate;	// 56 = 0x38
    NSString *_author;	// 64 = 0x40
    NSString *_modifiedImageDescription;	// 72 = 0x48
    AKSparseMutableControllerArray *_pageControllers;	// 80 = 0x50
    NSMapTable *_pageModelControllersToPageControllers;	// 88 = 0x58
    AKActionController *_actionController;	// 96 = 0x60
    AKToolController *_toolController;	// 104 = 0x68
    AKToolbarViewController *_toolbarViewController;	// 112 = 0x70
    AKAttributeController *_attributeController;	// 120 = 0x78
    AKUndoController *_undoController;	// 128 = 0x80
    AKSidecarController *_sidecarController;	// 136 = 0x88
    AKMainEventHandler *_mainEventHandler;	// 144 = 0x90
    AKTextEditorController *_textEditorController;	// 152 = 0x98
    AKLegacyDoodleController *_legacyDoodleController;	// 160 = 0xa0
    AKSignatureModelController *_signatureModelController;	// 168 = 0xa8
    AKFormFeatureDetectorController *_formDetectionController;	// 176 = 0xb0
    AKHighlightAnnotationController *_highlightAnnotationController;	// 184 = 0xb8
    AKStatistics *_statisticsLogger;	// 192 = 0xc0
    AKPeripheralAvailabilityManager_iOS *_peripheralAvailabilityManager;	// 200 = 0xc8
    unsigned long long _pasteCascadingMultiplier;	// 208 = 0xd0
    long long _lastPasteboardChangeCount;	// 216 = 0xd8
    unsigned long long _creationCascadingMultiplier;	// 224 = 0xe0
    AKPageController *_lastCreationCascadingPageController;	// 232 = 0xe8
    NSArray *_cachedKeyCommands;	// 240 = 0xf0
    double _akModelToCanvasFixedPixelScaleOfFirstEncounteredPage;	// 248 = 0xf8
    double _screenPixelsToCanvasPixelsDownscale;	// 256 = 0x100
    AKToolbarView *_modernToolbarView;	// 264 = 0x108
    id <AKControllerOverlayInteractionProtocol> _overlayInteractionDelegate;	// 272 = 0x110
}

+ (id)colorForHighlightAttributeWithTag:(long long)arg1;	// IMP=0x0000000000075be9
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x00000000000735bd
+ (void)adjustAnnotationBoundsToFitText:(id)arg1;	// IMP=0x0000000000072864
+ (void)renderAnnotation:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x0000000000072414
+ (id)markupBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2;	// IMP=0x000000000006f7a4
+ (_Bool)_isInLowMemoryEnvironment;	// IMP=0x000000000006f6d3
+ (_Bool)hasPressureCapableHardware;	// IMP=0x000000000006f65e
+ (_Bool)canConnectToStylus;	// IMP=0x000000000006f631
+ (id)akBundleIdentifier;	// IMP=0x000000000006f624
+ (id)akBundle;	// IMP=0x000000000006f5cd
+ (id)controllerWithDelegate:(id)arg1;	// IMP=0x000000000006f580
- (void).cxx_destruct;	// IMP=0x000000000007783f
@property(readonly) _Bool _isInDFRAction; // @synthesize _isInDFRAction=__isInDFRAction;
@property(nonatomic) _Bool useHighVisibilityDefaultInks; // @synthesize useHighVisibilityDefaultInks=_useHighVisibilityDefaultInks;
@property(nonatomic) __weak id <AKControllerOverlayInteractionProtocol> overlayInteractionDelegate; // @synthesize overlayInteractionDelegate=_overlayInteractionDelegate;
@property(nonatomic) __weak AKToolbarView *modernToolbarView; // @synthesize modernToolbarView=_modernToolbarView;
@property(nonatomic) _Bool shapeDetectionEnabled; // @synthesize shapeDetectionEnabled=_shapeDetectionEnabled;
@property(nonatomic) _Bool selectNewlyCreatedAnnotations; // @synthesize selectNewlyCreatedAnnotations=_selectNewlyCreatedAnnotations;
@property(nonatomic) _Bool isLogging; // @synthesize isLogging=_isLogging;
@property double screenPixelsToCanvasPixelsDownscale; // @synthesize screenPixelsToCanvasPixelsDownscale=_screenPixelsToCanvasPixelsDownscale;
@property double akModelToCanvasFixedPixelScaleOfFirstEncounteredPage; // @synthesize akModelToCanvasFixedPixelScaleOfFirstEncounteredPage=_akModelToCanvasFixedPixelScaleOfFirstEncounteredPage;
@property(readonly, nonatomic) NSArray *cachedKeyCommands; // @synthesize cachedKeyCommands=_cachedKeyCommands;
@property(nonatomic) _Bool hideAllAdornments; // @synthesize hideAllAdornments=_hideAllAdornments;
@property __weak AKPageController *lastCreationCascadingPageController; // @synthesize lastCreationCascadingPageController=_lastCreationCascadingPageController;
@property unsigned long long creationCascadingMultiplier; // @synthesize creationCascadingMultiplier=_creationCascadingMultiplier;
@property long long lastPasteboardChangeCount; // @synthesize lastPasteboardChangeCount=_lastPasteboardChangeCount;
@property unsigned long long pasteCascadingMultiplier; // @synthesize pasteCascadingMultiplier=_pasteCascadingMultiplier;
@property(retain) AKPeripheralAvailabilityManager_iOS *peripheralAvailabilityManager; // @synthesize peripheralAvailabilityManager=_peripheralAvailabilityManager;
@property(retain) AKStatistics *statisticsLogger; // @synthesize statisticsLogger=_statisticsLogger;
@property(retain) AKHighlightAnnotationController *highlightAnnotationController; // @synthesize highlightAnnotationController=_highlightAnnotationController;
@property(retain) AKFormFeatureDetectorController *formDetectionController; // @synthesize formDetectionController=_formDetectionController;
@property(retain) AKSignatureModelController *signatureModelController; // @synthesize signatureModelController=_signatureModelController;
@property(retain) AKLegacyDoodleController *legacyDoodleController; // @synthesize legacyDoodleController=_legacyDoodleController;
@property(retain) AKTextEditorController *textEditorController; // @synthesize textEditorController=_textEditorController;
@property(retain) AKMainEventHandler *mainEventHandler; // @synthesize mainEventHandler=_mainEventHandler;
@property(retain) AKSidecarController *sidecarController; // @synthesize sidecarController=_sidecarController;
@property(retain) AKUndoController *undoController; // @synthesize undoController=_undoController;
@property(retain) AKAttributeController *attributeController; // @synthesize attributeController=_attributeController;
@property(retain) AKToolbarViewController *toolbarViewController; // @synthesize toolbarViewController=_toolbarViewController;
@property(retain) AKToolController *toolController; // @synthesize toolController=_toolController;
@property(retain) AKActionController *actionController; // @synthesize actionController=_actionController;
@property(retain) NSMapTable *pageModelControllersToPageControllers; // @synthesize pageModelControllersToPageControllers=_pageModelControllersToPageControllers;
@property(retain) AKSparseMutableControllerArray *pageControllers; // @synthesize pageControllers=_pageControllers;
@property _Bool isTestingInstance; // @synthesize isTestingInstance=_isTestingInstance;
@property(readonly, copy, nonatomic) NSString *modifiedImageDescription; // @synthesize modifiedImageDescription=_modifiedImageDescription;
@property(copy) NSString *author; // @synthesize author=_author;
@property(nonatomic) __weak id <PKRulerHostingDelegate> rulerHostingDelegate; // @synthesize rulerHostingDelegate=_rulerHostingDelegate;
@property unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property(nonatomic) _Bool pencilAlwaysDraws; // @synthesize pencilAlwaysDraws=_pencilAlwaysDraws;
@property(nonatomic) _Bool annotationEditingEnabled; // @synthesize annotationEditingEnabled=_annotationEditingEnabled;
@property(nonatomic) _Bool allEditingDisabled; // @synthesize allEditingDisabled=_allEditingDisabled;
@property(retain) UIView *toolbarView; // @synthesize toolbarView=_toolbarView;
@property(retain) AKModelController *modelController; // @synthesize modelController=_modelController;
@property __weak id <AKControllerDelegateProtocol> delegate; // @synthesize delegate=_delegate;
@property _Bool isTornDown; // @synthesize isTornDown=_isTornDown;
@property(nonatomic) _Bool overlayShouldPixelate; // @synthesize overlayShouldPixelate;
@property(nonatomic) _Bool isUsedOnDarkBackground; // @synthesize isUsedOnDarkBackground=_isUsedOnDarkBackground;
- (void)endLogging;	// IMP=0x00000000000772bd
- (void)beginLogging:(id)arg1 documentType:(id)arg2;	// IMP=0x0000000000077168
- (void)strokeAddedNotification:(id)arg1;	// IMP=0x00000000000770c8
- (void)_pageModelControllerSelectedAnnotationsChangedNotification:(id)arg1;	// IMP=0x0000000000076ddd
- (_Bool)isPresentingPopover;	// IMP=0x0000000000076b4f
- (struct CGRect)_popoverAnchorFrameInModelForAnnotations:(id)arg1;	// IMP=0x00000000000767fe
- (id)pageControllerForAnnotation:(id)arg1;	// IMP=0x000000000007661b
- (id)pageControllerForPageModelController:(id)arg1;	// IMP=0x000000000007647a
- (id)currentPageController;	// IMP=0x00000000000763cd
- (id)_toolpicker_inkIdentifier;	// IMP=0x0000000000076353
- (void)_toolpicker_setInkIdentifier:(id)arg1;	// IMP=0x0000000000076187
- (id)_toolpicker_color;	// IMP=0x0000000000076137
- (void)_toolpicker_setColor:(id)arg1;	// IMP=0x0000000000075eac
- (_Bool)supportForPencilAlwaysDrawsSatisfied;	// IMP=0x0000000000075e6c
- (_Bool)shouldDrawVariableStrokeDoodles;	// IMP=0x0000000000075dd9
- (_Bool)_validateCutCopyDelete;	// IMP=0x0000000000075d67
- (void)_didReceiveMemoryWarning:(id)arg1;	// IMP=0x0000000000075d4e
@property(readonly, nonatomic) PKToolPicker *toolPicker;
@property(readonly, nonatomic) _Bool onlyDrawWithApplePencil;
- (void)removeNoteFromAnnotation:(id)arg1;	// IMP=0x0000000000075c77
- (void)addPopupToAnnotation:(id)arg1 openPopup:(_Bool)arg2;	// IMP=0x0000000000075c02
- (void)highlightableSelectionDidEndChanging;	// IMP=0x0000000000075b0b
- (void)highlightableSelectionWillBeginChanging;	// IMP=0x0000000000075a83
- (void)highlightableSelectionChanged;	// IMP=0x00000000000759fb
- (void)hideSelectionMenu:(id)arg1;	// IMP=0x00000000000759b7
- (void)showSelectionMenu:(id)arg1;	// IMP=0x000000000007545f
- (_Bool)canBeginEditingTextAnnotation:(id)arg1;	// IMP=0x0000000000075350
- (_Bool)validateEditTextAnnotation:(id)arg1;	// IMP=0x00000000000752a4
- (void)editTextAnnotation:(id)arg1;	// IMP=0x0000000000075092
- (_Bool)validateShowAttributeInspector:(id)arg1;	// IMP=0x000000000007508a
- (void)showAttributeInspector:(id)arg1;	// IMP=0x0000000000075084
- (_Bool)validateSelectAll:(id)arg1;	// IMP=0x0000000000074fbf
- (void)selectAll:(id)arg1;	// IMP=0x0000000000074f55
- (_Bool)validateDuplicate:(id)arg1;	// IMP=0x0000000000074c7a
- (void)duplicate:(id)arg1;	// IMP=0x000000000007471d
- (_Bool)validateDelete:(id)arg1;	// IMP=0x00000000000744f3
- (void)delete:(id)arg1;	// IMP=0x00000000000743c9
- (_Bool)validatePaste:(id)arg1;	// IMP=0x00000000000741ca
- (void)paste:(id)arg1;	// IMP=0x0000000000073e16
- (_Bool)validateCopy:(id)arg1;	// IMP=0x0000000000073e04
- (void)copy:(id)arg1;	// IMP=0x0000000000073cf3
- (_Bool)validateCut:(id)arg1;	// IMP=0x0000000000073ce1
- (void)cut:(id)arg1;	// IMP=0x0000000000073bb3
- (_Bool)validateRedo:(id)arg1;	// IMP=0x0000000000073b47
- (void)redo:(id)arg1;	// IMP=0x0000000000073ab9
- (_Bool)validateUndo:(id)arg1;	// IMP=0x0000000000073a4d
- (void)undo:(id)arg1;	// IMP=0x0000000000073993
- (void)delayedUndoControllerSetup;	// IMP=0x0000000000073782
- (void)setModifiedImageDescription:(id)arg1;	// IMP=0x0000000000073630
- (id)originalOrModifiedImageDescription;	// IMP=0x0000000000073535
- (_Bool)supportsImageDescriptionEditing;	// IMP=0x00000000000734d6
- (void)clearUndoStack;	// IMP=0x000000000007346c
- (void)applyCurrentCrop;	// IMP=0x000000000007338e
- (void)resetToDefaultToolMode;	// IMP=0x0000000000073351
- (void)setToolMode:(unsigned long long)arg1;	// IMP=0x0000000000073305
- (unsigned long long)toolMode;	// IMP=0x00000000000732c1
- (_Bool)canPerformKeyCommandAction:(SEL)arg1 withSender:(id)arg2 handled:(_Bool *)arg3;	// IMP=0x00000000000731b3
- (id)keyCommandsForAnnotations;	// IMP=0x0000000000072d5c
- (id)imageForToolbarButtonItemOfType:(unsigned long long)arg1;	// IMP=0x0000000000072c61
- (id)toolbarButtonItemOfType:(unsigned long long)arg1;	// IMP=0x0000000000072c02
- (void)_updateGestureDependencyPriority;	// IMP=0x0000000000072a8a
- (id)rotationGestureRecognizer;	// IMP=0x0000000000072a3a
- (id)panGestureRecognizer;	// IMP=0x00000000000729e6
- (id)pressGestureRecognizer;	// IMP=0x0000000000072996
- (id)doubleTapGestureRecognizer;	// IMP=0x0000000000072946
- (id)tapGestureRecognizer;	// IMP=0x00000000000728f6
- (_Bool)handleEvent:(id)arg1;	// IMP=0x000000000007287d
- (struct CGRect)contentAlignedRectForRect:(struct CGRect)arg1 onPageAtIndex:(unsigned long long)arg2;	// IMP=0x0000000000072789
- (double)currentModelBaseScaleFactorForPageAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000072709
- (long long)currentExifOrientationForPageAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000072695
- (void)reloadVisibleToolbarItemIdentifiers;	// IMP=0x000000000007268f
- (void)commitEditing;	// IMP=0x0000000000072608
- (void)renderAnnotation:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00000000000723f5
- (void)updateOverlayViewAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000072356
- (void)relinquishOverlayAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000722e7
- (void)prepareOverlayAtIndex:(unsigned long long)arg1;	// IMP=0x000000000007221e
- (_Bool)isOverlayViewLoadedAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000071ff0
- (id)overlayViewAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000071f70
- (void)performActionForSender:(id)arg1;	// IMP=0x0000000000071d9d
- (_Bool)validateSender:(id)arg1;	// IMP=0x0000000000071a7c
- (void)enclosingScrollViewDidScroll:(id)arg1;	// IMP=0x000000000007199d
- (void)_setupPageModelController:(id)arg1;	// IMP=0x000000000007182e
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000000000706ca
- (void)didEndEditingAnnotation:(id)arg1;	// IMP=0x00000000000706c0
- (void)didBeginEditingAnnotation:(id)arg1;	// IMP=0x0000000000070670
- (void)toolPickerVisibilityDidChange:(id)arg1;	// IMP=0x0000000000070647
- (void)_didScrollPDFPage:(id)arg1;	// IMP=0x00000000000705fa
- (void)dealloc;	// IMP=0x00000000000705b4
- (void)teardown;	// IMP=0x000000000006fe36
- (id)initForTesting;	// IMP=0x000000000006fde5
- (id)initWithDelegate:(id)arg1;	// IMP=0x000000000006f7bd

@end

