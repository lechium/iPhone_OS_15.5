//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <NanoTimeKitCompanion/CLKTimeFormatterObserver-Protocol.h>
#import <NanoTimeKitCompanion/NTKTimeView-Protocol.h>

@class CLKDevice, CLKTimeFormatter, NSString, NTKOlympusColorPalette, NTKVictoryLabel, NTKVictoryTimeLabel, UIButton, UIColor, UIImage;
@protocol NTKOlympusColorPalette, NTKOlympusContentViewDelegate;

@interface NTKOlympusTimeContentView : UIView <CLKTimeFormatterObserver, NTKTimeView>
{
    _Bool frozen;	// 8 = 0x8
    _Bool _invertedColors;	// 9 = 0x9
    _Bool _useSmallFont;	// 10 = 0xa
    id <NTKOlympusContentViewDelegate> _delegate;	// 16 = 0x10
    CLKDevice *_device;	// 24 = 0x18
    UIButton *_fullscreenLogoButton;	// 32 = 0x20
    UIButton *_circularLogoButton;	// 40 = 0x28
    UIImage *_circularLogoImage;	// 48 = 0x30
    NTKVictoryTimeLabel *_fullscreenHybridUpperTimeLabel;	// 56 = 0x38
    NTKVictoryLabel *_fullscreenHybridLowerTimeLabel;	// 64 = 0x40
    NTKVictoryLabel *_fullscreenDigitalUpperTimeLabel;	// 72 = 0x48
    NTKVictoryLabel *_fullscreenDigitalLowerTimeLabel;	// 80 = 0x50
    NTKVictoryLabel *_circularUpperTimeLabel;	// 88 = 0x58
    NTKVictoryLabel *_circularLowerTimeLabel;	// 96 = 0x60
    UIView *_contentView;	// 104 = 0x68
    UIView *_fullscreenDigitsContainerView;	// 112 = 0x70
    UIView *_circularDigitsContainerView;	// 120 = 0x78
    CLKTimeFormatter *_timeFormatter;	// 128 = 0x80
    unsigned long long _style;	// 136 = 0x88
    unsigned long long _dial;	// 144 = 0x90
    NTKOlympusColorPalette *_colorPalette;	// 152 = 0x98
    id <NTKOlympusColorPalette> _palette;	// 160 = 0xa0
    UIColor *_currentForegroundColor;	// 168 = 0xa8
    UIColor *_currentBackgroundColor;	// 176 = 0xb0
    UIColor *_currentLogoColor;	// 184 = 0xb8
    double _dialFraction;	// 192 = 0xc0
    double _digitalStyleFraction;	// 200 = 0xc8
    double _olympusDigitalStyleFraction;	// 208 = 0xd0
    double _olympusAnalogStyleFraction;	// 216 = 0xd8
    double _analogStyleFraction;	// 224 = 0xe0
    double _olympusDigitalLabelsPositionFraction;	// 232 = 0xe8
    double _analogStyleSwooshPositionFraction;	// 240 = 0xf0
    struct CGSize _logoImageSizeForCircularDial;	// 248 = 0xf8
}

+ (double)scaleForViewDuringColorChangeTransitionWithFraction:(double)arg1;	// IMP=0x00000000000bb633
- (void).cxx_destruct;	// IMP=0x00000000000bc3a5
@property(nonatomic) _Bool useSmallFont; // @synthesize useSmallFont=_useSmallFont;
@property(nonatomic) struct CGSize logoImageSizeForCircularDial; // @synthesize logoImageSizeForCircularDial=_logoImageSizeForCircularDial;
@property(nonatomic) double analogStyleSwooshPositionFraction; // @synthesize analogStyleSwooshPositionFraction=_analogStyleSwooshPositionFraction;
@property(nonatomic) double olympusDigitalLabelsPositionFraction; // @synthesize olympusDigitalLabelsPositionFraction=_olympusDigitalLabelsPositionFraction;
@property(nonatomic) double analogStyleFraction; // @synthesize analogStyleFraction=_analogStyleFraction;
@property(nonatomic) double olympusAnalogStyleFraction; // @synthesize olympusAnalogStyleFraction=_olympusAnalogStyleFraction;
@property(nonatomic) double olympusDigitalStyleFraction; // @synthesize olympusDigitalStyleFraction=_olympusDigitalStyleFraction;
@property(nonatomic) double digitalStyleFraction; // @synthesize digitalStyleFraction=_digitalStyleFraction;
@property(nonatomic) double dialFraction; // @synthesize dialFraction=_dialFraction;
@property(retain, nonatomic) UIColor *currentLogoColor; // @synthesize currentLogoColor=_currentLogoColor;
@property(retain, nonatomic) UIColor *currentBackgroundColor; // @synthesize currentBackgroundColor=_currentBackgroundColor;
@property(retain, nonatomic) UIColor *currentForegroundColor; // @synthesize currentForegroundColor=_currentForegroundColor;
@property(retain, nonatomic) id <NTKOlympusColorPalette> palette; // @synthesize palette=_palette;
@property(retain, nonatomic) NTKOlympusColorPalette *colorPalette; // @synthesize colorPalette=_colorPalette;
@property(nonatomic) unsigned long long dial; // @synthesize dial=_dial;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(retain, nonatomic) CLKTimeFormatter *timeFormatter; // @synthesize timeFormatter=_timeFormatter;
@property(retain, nonatomic) UIView *circularDigitsContainerView; // @synthesize circularDigitsContainerView=_circularDigitsContainerView;
@property(retain, nonatomic) UIView *fullscreenDigitsContainerView; // @synthesize fullscreenDigitsContainerView=_fullscreenDigitsContainerView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) NTKVictoryLabel *circularLowerTimeLabel; // @synthesize circularLowerTimeLabel=_circularLowerTimeLabel;
@property(retain, nonatomic) NTKVictoryLabel *circularUpperTimeLabel; // @synthesize circularUpperTimeLabel=_circularUpperTimeLabel;
@property(retain, nonatomic) NTKVictoryLabel *fullscreenDigitalLowerTimeLabel; // @synthesize fullscreenDigitalLowerTimeLabel=_fullscreenDigitalLowerTimeLabel;
@property(retain, nonatomic) NTKVictoryLabel *fullscreenDigitalUpperTimeLabel; // @synthesize fullscreenDigitalUpperTimeLabel=_fullscreenDigitalUpperTimeLabel;
@property(retain, nonatomic) NTKVictoryLabel *fullscreenHybridLowerTimeLabel; // @synthesize fullscreenHybridLowerTimeLabel=_fullscreenHybridLowerTimeLabel;
@property(retain, nonatomic) NTKVictoryTimeLabel *fullscreenHybridUpperTimeLabel; // @synthesize fullscreenHybridUpperTimeLabel=_fullscreenHybridUpperTimeLabel;
@property(retain, nonatomic) UIImage *circularLogoImage; // @synthesize circularLogoImage=_circularLogoImage;
@property(retain, nonatomic) UIButton *circularLogoButton; // @synthesize circularLogoButton=_circularLogoButton;
@property(retain, nonatomic) UIButton *fullscreenLogoButton; // @synthesize fullscreenLogoButton=_fullscreenLogoButton;
@property(retain, nonatomic) CLKDevice *device; // @synthesize device=_device;
@property(nonatomic) _Bool invertedColors; // @synthesize invertedColors=_invertedColors;
@property(nonatomic) __weak id <NTKOlympusContentViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isFrozen) _Bool frozen; // @synthesize frozen;
- (void)timeFormatterTextDidChange:(id)arg1;	// IMP=0x00000000000bbb8e
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000000bba9b
- (_Bool)containsSubview:(id)arg1;	// IMP=0x00000000000bb92e
- (void)handleLogoButtonTouchUpInside:(id)arg1;	// IMP=0x00000000000bb817
- (void)handleLogoButtonResetHighlight:(id)arg1;	// IMP=0x00000000000bb7cb
- (void)handleLogoButtonHighlighted:(id)arg1;	// IMP=0x00000000000bb77f
- (void)setTimeOffset:(double)arg1;	// IMP=0x00000000000bb762
- (void)setOverrideDate:(id)arg1 duration:(double)arg2;	// IMP=0x00000000000bb745
- (void)setLogoButtonHighlighted:(_Bool)arg1;	// IMP=0x00000000000bb6f7
- (void)cleanupAfterEditing;	// IMP=0x00000000000bb6e5
- (void)prepareForEditing;	// IMP=0x00000000000bb6d3
- (void)_applyTransitionFraction:(double)arg1 fromTextColor:(id)arg2 toTextColor:(id)arg3;	// IMP=0x00000000000bb574
- (void)_applyTransitionFraction:(double)arg1 fromColor:(id)arg2 toColor:(id)arg3 fromBackgroundColor:(id)arg4 toBackgroundColor:(id)arg5 fromLogoColor:(id)arg6 toLogoColor:(id)arg7;	// IMP=0x00000000000bb3a2
- (void)_applyAnimationPopTransitionWithFraction:(double)arg1;	// IMP=0x00000000000bb1ec
- (void)setLabelOutlineColor:(id)arg1;	// IMP=0x00000000000bb12f
- (void)setLabelOutlineAlpha:(double)arg1;	// IMP=0x00000000000bb084
- (void)applyTransitionFraction:(double)arg1 fromColorPalette:(id)arg2 toColorPalette:(id)arg3 animateElements:(_Bool)arg4;	// IMP=0x00000000000badeb
- (void)ensureVisibleIfNeeded:(id)arg1;	// IMP=0x00000000000bad8f
- (void)setViewsVisibleForStyleTransition;	// IMP=0x00000000000bac8e
- (void)setViewsVisibleForDialTransition;	// IMP=0x00000000000bab8f
- (void)setViewsVisibilityForDial:(unsigned long long)arg1 style:(unsigned long long)arg2;	// IMP=0x00000000000ba9b4
- (void)updateStylesFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;	// IMP=0x00000000000ba8a0
- (void)applyTransitionFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;	// IMP=0x00000000000ba510
- (void)applyTransitionFraction:(double)arg1 fromDial:(unsigned long long)arg2 toDial:(unsigned long long)arg3;	// IMP=0x00000000000ba1f7
- (void)updateColors;	// IMP=0x00000000000b9f7b
- (void)updateTimeLabelsFrame;	// IMP=0x00000000000b8ef5
- (void)updateLogosFrame;	// IMP=0x00000000000b8834
- (void)layoutSubviews;	// IMP=0x00000000000b866e
- (id)styleWithFont:(id)arg1;	// IMP=0x00000000000b861c
- (id)createTimeLabelWithFont:(id)arg1 option:(unsigned long long)arg2;	// IMP=0x00000000000b853f
- (id)victoryFontWithSize:(double)arg1;	// IMP=0x00000000000b8524
- (id)fontForDigitalFullscreen;	// IMP=0x00000000000b8459
- (id)fontForHybridFullscreen;	// IMP=0x00000000000b8391
- (id)monospacedFontForCircularDial;	// IMP=0x00000000000b82aa
- (id)fontForCircularDial;	// IMP=0x00000000000b81c6
- (void)removeCircularViews;	// IMP=0x00000000000b8137
- (void)removeFullscreenViews;	// IMP=0x00000000000b8063
- (void)createFullscreenHybridViewsIfNeeded;	// IMP=0x00000000000b7ea5
- (void)createFullscreenDigitalViewsIfNeeded;	// IMP=0x00000000000b7be9
- (id)createLogoButtonWithBackgroundImage:(id)arg1;	// IMP=0x00000000000b7aff
- (void)createCircularViewsIfNeeded;	// IMP=0x00000000000b769a
- (void)createFullscreenLogoIfNeeded;	// IMP=0x00000000000b75df
- (void)configureViewsForEditing;	// IMP=0x00000000000b7537
- (void)createAndRemoveViewsForCurrentStateIfNeeded;	// IMP=0x00000000000b7431
- (void)dealloc;	// IMP=0x00000000000b73e5
- (id)initWithDevice:(id)arg1 dial:(unsigned long long)arg2 style:(unsigned long long)arg3 colorPalette:(id)arg4 useSmallFont:(_Bool)arg5 circularLogoImage:(id)arg6;	// IMP=0x00000000000b707c
- (id)initWithDevice:(id)arg1 dial:(unsigned long long)arg2 style:(unsigned long long)arg3 colorPalette:(id)arg4;	// IMP=0x00000000000b7061

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

