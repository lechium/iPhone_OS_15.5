//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <NanoTimeKitCompanion/CLKMonochromeComplicationView-Protocol.h>
#import <NanoTimeKitCompanion/CLKMonochromeFilterProvider-Protocol.h>

@class CLKDevice, CLKFullColorImageProvider, NSNumber, NSString, NTKStackedImagesComplicationImageView;
@protocol CLKMonochromeFilterProvider;

@interface NTKRichComplicationImageView : UIView <CLKMonochromeFilterProvider, CLKMonochromeComplicationView>
{
    _Bool _useAccentColor;	// 8 = 0x8
    _Bool _hostingOverrideView;	// 9 = 0x9
    _Bool _paused;	// 10 = 0xa
    _Bool _inMonochromeMode;	// 11 = 0xb
    _Bool _prefersFilterOverTransition;	// 12 = 0xc
    id <CLKMonochromeFilterProvider> _filterProvider;	// 16 = 0x10
    CLKDevice *_device;	// 24 = 0x18
    NSNumber *_tritiumUpdateMode;	// 32 = 0x20
    CLKFullColorImageProvider *_imageProvider;	// 40 = 0x28
    UIView *_richComplicationImageView;	// 48 = 0x30
    NTKStackedImagesComplicationImageView *_monochromeImageView;	// 56 = 0x38
    long long _monochromeFilterType;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000004c24e
@property(nonatomic) _Bool prefersFilterOverTransition; // @synthesize prefersFilterOverTransition=_prefersFilterOverTransition;
@property(nonatomic) _Bool inMonochromeMode; // @synthesize inMonochromeMode=_inMonochromeMode;
@property(nonatomic) long long monochromeFilterType; // @synthesize monochromeFilterType=_monochromeFilterType;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic, getter=isHostingOverrideView) _Bool hostingOverrideView; // @synthesize hostingOverrideView=_hostingOverrideView;
@property(nonatomic) __weak NTKStackedImagesComplicationImageView *monochromeImageView; // @synthesize monochromeImageView=_monochromeImageView;
@property(nonatomic) __weak UIView *richComplicationImageView; // @synthesize richComplicationImageView=_richComplicationImageView;
@property(retain, nonatomic) CLKFullColorImageProvider *imageProvider; // @synthesize imageProvider=_imageProvider;
@property(readonly, nonatomic) NSNumber *tritiumUpdateMode; // @synthesize tritiumUpdateMode=_tritiumUpdateMode;
@property(readonly, nonatomic) _Bool useAccentColor; // @synthesize useAccentColor=_useAccentColor;
@property(readonly, nonatomic) CLKDevice *device; // @synthesize device=_device;
@property(nonatomic) __weak id <CLKMonochromeFilterProvider> filterProvider; // @synthesize filterProvider=_filterProvider;
- (_Bool)viewShouldIgnoreTwoPieceImage:(id)arg1;	// IMP=0x000000000004c030
- (id)interpolatedColorForView:(id)arg1;	// IMP=0x000000000004bf74
- (id)colorForView:(id)arg1 accented:(_Bool)arg2;	// IMP=0x000000000004beeb
- (id)filterForView:(id)arg1 style:(long long)arg2;	// IMP=0x000000000004be87
- (id)filterForView:(id)arg1 style:(long long)arg2 fraction:(double)arg3;	// IMP=0x000000000004be11
- (long long)_filterStyle;	// IMP=0x000000000004bde0
- (void)updateMonochromeColor;	// IMP=0x000000000004baa2
- (void)transitionToMonochromeWithFraction:(double)arg1;	// IMP=0x000000000004b2d9
- (_Bool)_isSymbolImageProviderWithoutSpecificSize;	// IMP=0x000000000004b24d
- (_Bool)_isSymbolImageProvider;	// IMP=0x000000000004b21c
- (void)renderSynchronouslyWithImageQueueDiscard:(_Bool)arg1 inGroup:(id)arg2;	// IMP=0x000000000004b19e
- (void)layoutSubviews;	// IMP=0x000000000004ad98
- (void)setImageProvider:(id)arg1 reason:(long long)arg2;	// IMP=0x000000000004a7d0
- (id)initWithDevice:(id)arg1 useAccentColor:(_Bool)arg2;	// IMP=0x000000000004a6ee

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

