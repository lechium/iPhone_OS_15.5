//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NanoTimeKitCompanion/NTKFaceViewComplicationFactory-Protocol.h>

@class CLKDevice, CLKFont, NSString, NTKFaceView;
@protocol NTKUtilityComplicationFactoryDelegate;

@interface NTKUtilityComplicationFactory : NSObject <NTKFaceViewComplicationFactory>
{
    _Bool _accommodatesTwoTopComplications;	// 8 = 0x8
    _Bool _includesDateComplicationLayoutRules;	// 9 = 0x9
    CLKDevice *_device;	// 16 = 0x10
    id <NTKUtilityComplicationFactoryDelegate> _delegate;	// 24 = 0x18
    double _normalSidePadding;	// 32 = 0x20
    double _normalVerticalPadding;	// 40 = 0x28
    double _deselectedKeylineSideInnerPadding;	// 48 = 0x30
    double _deselectedKeylineVerticalInnerPadding;	// 56 = 0x38
    double _deselectedKeylineCircularInnerPadding;	// 64 = 0x40
    double _selectedKeylineSideInnerPadding;	// 72 = 0x48
    double _selectedKeylineVerticalInnerContentSpacer;	// 80 = 0x50
    double _selectedKeylineHeight;	// 88 = 0x58
    double _foregroundAlpha;	// 96 = 0x60
    double _foregroundImageAlpha;	// 104 = 0x68
    double _maxNormalLongWidth;	// 112 = 0x70
    double _crownIndicatorGap;	// 120 = 0x78
    CLKFont *_topBezelLabelFont;	// 128 = 0x80
    double _bezelLabelMaxWidthInDegree;	// 136 = 0x88
    double _bezelLabelTopPadding;	// 144 = 0x90
    double _bezelKeylineInnerCircleOffset;	// 152 = 0x98
    double _bezelKeylineDiameter;	// 160 = 0xa0
    double _dialDiameter;	// 168 = 0xa8
    NTKFaceView *_faceView;	// 176 = 0xb0
    double _dateKeylineMaxWidth;	// 184 = 0xb8
    double _dateHorizontalCenterOffset;	// 192 = 0xc0
    double _dateVerticalCenterOffset;	// 200 = 0xc8
    long long _bottomCenterLayout;	// 208 = 0xd0
    struct CGSize _normalCircularPadding;	// 216 = 0xd8
    struct UIEdgeInsets _screenEdgeInsets;	// 232 = 0xe8
}

+ (void)curvedCircleRadius:(double *)arg1 centerAngle:(double *)arg2 maxAngularWidth:(double *)arg3 circleCenter:(struct CGPoint *)arg4 interior:(_Bool *)arg5 forSlot:(long long)arg6 forDevice:(id)arg7;	// IMP=0x0000000000041f45
+ (unsigned long long)placementForSlot:(long long)arg1;	// IMP=0x00000000000412de
- (void).cxx_destruct;	// IMP=0x0000000000045ca6
@property(nonatomic) long long bottomCenterLayout; // @synthesize bottomCenterLayout=_bottomCenterLayout;
@property(nonatomic) _Bool includesDateComplicationLayoutRules; // @synthesize includesDateComplicationLayoutRules=_includesDateComplicationLayoutRules;
@property(nonatomic) double dateVerticalCenterOffset; // @synthesize dateVerticalCenterOffset=_dateVerticalCenterOffset;
@property(nonatomic) double dateHorizontalCenterOffset; // @synthesize dateHorizontalCenterOffset=_dateHorizontalCenterOffset;
@property(nonatomic) double dateKeylineMaxWidth; // @synthesize dateKeylineMaxWidth=_dateKeylineMaxWidth;
@property(nonatomic) __weak NTKFaceView *faceView; // @synthesize faceView=_faceView;
@property(nonatomic) double dialDiameter; // @synthesize dialDiameter=_dialDiameter;
@property(nonatomic) double bezelKeylineDiameter; // @synthesize bezelKeylineDiameter=_bezelKeylineDiameter;
@property(nonatomic) double bezelKeylineInnerCircleOffset; // @synthesize bezelKeylineInnerCircleOffset=_bezelKeylineInnerCircleOffset;
@property(nonatomic) double bezelLabelTopPadding; // @synthesize bezelLabelTopPadding=_bezelLabelTopPadding;
@property(nonatomic) double bezelLabelMaxWidthInDegree; // @synthesize bezelLabelMaxWidthInDegree=_bezelLabelMaxWidthInDegree;
@property(retain, nonatomic) CLKFont *topBezelLabelFont; // @synthesize topBezelLabelFont=_topBezelLabelFont;
@property(nonatomic) double crownIndicatorGap; // @synthesize crownIndicatorGap=_crownIndicatorGap;
@property(nonatomic) struct UIEdgeInsets screenEdgeInsets; // @synthesize screenEdgeInsets=_screenEdgeInsets;
@property(nonatomic) double maxNormalLongWidth; // @synthesize maxNormalLongWidth=_maxNormalLongWidth;
@property(nonatomic) double foregroundImageAlpha; // @synthesize foregroundImageAlpha=_foregroundImageAlpha;
@property(nonatomic) double foregroundAlpha; // @synthesize foregroundAlpha=_foregroundAlpha;
@property(nonatomic) double selectedKeylineHeight; // @synthesize selectedKeylineHeight=_selectedKeylineHeight;
@property(nonatomic) double selectedKeylineVerticalInnerContentSpacer; // @synthesize selectedKeylineVerticalInnerContentSpacer=_selectedKeylineVerticalInnerContentSpacer;
@property(nonatomic) double selectedKeylineSideInnerPadding; // @synthesize selectedKeylineSideInnerPadding=_selectedKeylineSideInnerPadding;
@property(nonatomic) double deselectedKeylineCircularInnerPadding; // @synthesize deselectedKeylineCircularInnerPadding=_deselectedKeylineCircularInnerPadding;
@property(nonatomic) double deselectedKeylineVerticalInnerPadding; // @synthesize deselectedKeylineVerticalInnerPadding=_deselectedKeylineVerticalInnerPadding;
@property(nonatomic) double deselectedKeylineSideInnerPadding; // @synthesize deselectedKeylineSideInnerPadding=_deselectedKeylineSideInnerPadding;
@property(nonatomic) struct CGSize normalCircularPadding; // @synthesize normalCircularPadding=_normalCircularPadding;
@property(nonatomic) double normalVerticalPadding; // @synthesize normalVerticalPadding=_normalVerticalPadding;
@property(nonatomic) double normalSidePadding; // @synthesize normalSidePadding=_normalSidePadding;
@property(nonatomic) _Bool accommodatesTwoTopComplications; // @synthesize accommodatesTwoTopComplications=_accommodatesTwoTopComplications;
@property(nonatomic) __weak id <NTKUtilityComplicationFactoryDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) CLKDevice *device; // @synthesize device=_device;
- (long long)_utilitySlotForSlot:(id)arg1;	// IMP=0x0000000000045881
- (id)newLegacyViewForComplication:(id)arg1 family:(long long)arg2 slot:(id)arg3;	// IMP=0x0000000000045813
- (void)loadLayoutRules;	// IMP=0x0000000000045642
- (void)curvedComplicationCircleRadius:(double *)arg1 centerAngle:(double *)arg2 maxAngularWidth:(double *)arg3 circleCenter:(struct CGPoint *)arg4 interior:(_Bool *)arg5 forSlot:(id)arg6;	// IMP=0x00000000000454f4
- (_Bool)slotSupportsCurvedText:(id)arg1;	// IMP=0x00000000000454d5
- (long long)legacyLayoutOverrideforComplicationType:(unsigned long long)arg1 slot:(id)arg2;	// IMP=0x0000000000045492
- (id)keylineViewForComplicationSlot:(id)arg1;	// IMP=0x0000000000045459
- (void)configureComplicationView:(id)arg1 forSlot:(id)arg2;	// IMP=0x0000000000045339
- (long long)complicationPickerStyleForSlot:(id)arg1;	// IMP=0x0000000000045313
- (double)_maxWidthForKeylineAndPadding;	// IMP=0x00000000000452e8
- (double)maxDateWidthLeavingRoomForKeylines;	// IMP=0x00000000000452d6
- (double)_maxDateWidthLeavingRoomForKeylines;	// IMP=0x00000000000452a1
- (double)_maxBottomCenterWidthLeavingRoomForKeylines:(struct CGRect)arg1;	// IMP=0x000000000004526f
- (double)_maxBottomCornerWidthLeavingRoomForKeylines:(struct CGRect)arg1;	// IMP=0x00000000000451f8
- (double)_maxTopCornerWidthLeavingRoomForKeylines:(struct CGRect)arg1;	// IMP=0x000000000004516c
- (void)_configureLayout:(id)arg1 withNormalSize:(struct CGSize)arg2 editingSize:(struct CGSize)arg3 variant:(_Bool)arg4 addCircleOverrides:(_Bool)arg5 makeRuleBlock:(CDUnknownBlockType)arg6;	// IMP=0x0000000000044c09
- (void)_configureUpNextTopRightLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x0000000000044929
- (void)_configureBottomRightLongLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x0000000000044689
- (void)_configureBottomRightBelowLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x00000000000443e9
- (void)_configureBottomRightAboveLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x0000000000044149
- (void)_configureTopRightBelowLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x0000000000043ea1
- (void)_configureTopRightAboveLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x0000000000043bcc
- (void)_configureDateLayout:(id)arg1 withBounds:(struct CGRect)arg2;	// IMP=0x00000000000439c8
- (void)_configureBottomCenterLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;	// IMP=0x00000000000434d2
- (void)_configureTopBezelLayout:(id)arg1 withBounds:(struct CGRect)arg2 dialDiameter:(double)arg3;	// IMP=0x000000000004328b
- (void)_configureBottomRightLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;	// IMP=0x0000000000042eb6
- (void)_configureBottomLeftLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;	// IMP=0x0000000000042ac6
- (void)_configureTopRightLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;	// IMP=0x0000000000042670
- (void)_configureTopLeftLayout:(id)arg1 withBounds:(struct CGRect)arg2 variant:(_Bool)arg3;	// IMP=0x0000000000042265
- (id)_viewForDateComplication:(id)arg1;	// IMP=0x00000000000421b1
- (double)foregroundImageAlphaForTransitionFraction:(double)arg1 fromEditMode:(long long)arg2 toEditMode:(long long)arg3;	// IMP=0x0000000000042145
- (double)foregroundImageAlphaForEditing:(_Bool)arg1;	// IMP=0x000000000004212c
- (double)foregroundAlphaForTransitionFraction:(double)arg1 fromEditMode:(long long)arg2 toEditMode:(long long)arg3;	// IMP=0x00000000000420c0
- (double)foregroundAlphaForEditing:(_Bool)arg1;	// IMP=0x00000000000420a7
- (id)curvedMaskForSlot:(long long)arg1;	// IMP=0x0000000000042095
- (double)keylineCornerRadiusForSlot:(long long)arg1;	// IMP=0x0000000000041f3b
- (id)keylineViewForSlot:(long long)arg1 dialDiameter:(double)arg2;	// IMP=0x0000000000041c19
- (id)keylineViewForSlot:(long long)arg1;	// IMP=0x0000000000041bff
- (id)_curvedImageForSlot:(long long)arg1 filled:(_Bool)arg2;	// IMP=0x000000000004181f
- (id)_curvedMaskImageForSlot:(long long)arg1;	// IMP=0x0000000000041808
- (id)_curvedKeylineImageForSlot:(long long)arg1;	// IMP=0x00000000000417f4
- (void)configureComplicationLayout:(id)arg1 forSlot:(long long)arg2 bounds:(struct CGRect)arg3 dialDiameter:(double)arg4;	// IMP=0x0000000000041652
- (void)configureComplicationLayout:(id)arg1 forSlot:(long long)arg2 withBounds:(struct CGRect)arg3;	// IMP=0x000000000004163d
- (double)bezelComplicationMaxAngularWidth;	// IMP=0x000000000004162b
- (double)bezelComplicationRadiusWithDialDiameter:(double)arg1;	// IMP=0x00000000000415a1
- (void)configureComplicationView:(id)arg1 forSlot:(id)arg2 dialDiameter:(double)arg3;	// IMP=0x0000000000041449
- (id)newViewForComplication:(id)arg1 family:(long long)arg2 forSlot:(long long)arg3;	// IMP=0x000000000004134d
- (long long)layoutOverrideForComplicationType:(unsigned long long)arg1 inSlot:(long long)arg2;	// IMP=0x00000000000412ff
- (id)initForDevice:(id)arg1;	// IMP=0x0000000000040f5c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

