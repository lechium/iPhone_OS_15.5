//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <NanoTimeKitCompanion/NTKComplicationDisplay-Protocol.h>
#import <NanoTimeKitCompanion/NTKTemplateComplicationDisplay-Protocol.h>

@class CLKComplicationTemplate, CLKDevice, CLKFont, NSDate, NSString, NTKFaceColorScheme, UIColor, UIImageView;
@protocol NTKComplicationDisplayObserver;

@interface NTKUtilityComplicationView : UIView <NTKTemplateComplicationDisplay, NTKComplicationDisplay>
{
    _Bool _highlighted;	// 8 = 0x8
    _Bool _usesLegibility;	// 9 = 0x9
    UIColor *_foregroundColor;	// 16 = 0x10
    CLKFont *_font;	// 24 = 0x18
    NSDate *_timeTravelDate;	// 32 = 0x20
    UIColor *_computedForegroundColor;	// 40 = 0x28
    UIColor *_computedPlatterColor;	// 48 = 0x30
    double _computedForegroundAlpha;	// 56 = 0x38
    double _computedForegroundImageAlpha;	// 64 = 0x40
    _Bool _canUseCurvedText;	// 72 = 0x48
    _Bool _shouldUseBackgroundPlatter;	// 73 = 0x49
    _Bool _alwaysEnforcePlatterInset;	// 74 = 0x4a
    _Bool _useRoundedFontDesign;	// 75 = 0x4b
    _Bool _useBlockyHighlightCorners;	// 76 = 0x4c
    _Bool _shouldScaleAndFadeWhenHighlighting;	// 77 = 0x4d
    _Bool _suppressesInternalColorOverrides;	// 78 = 0x4e
    _Bool _editing;	// 79 = 0x4f
    id <NTKComplicationDisplayObserver> displayObserver;	// 80 = 0x50
    double _foregroundAlpha;	// 88 = 0x58
    UIColor *_shadowColor;	// 96 = 0x60
    CLKDevice *_device;	// 104 = 0x68
    UIColor *_accentColor;	// 112 = 0x70
    double _foregroundImageAlpha;	// 120 = 0x78
    unsigned long long _placement;	// 128 = 0x80
    double _fontWeight;	// 136 = 0x88
    double _editingRotationAngle;	// 144 = 0x90
    UIImageView *_backgroundPlatter;	// 152 = 0x98
    double _minimumWidth;	// 160 = 0xa0
    UIView *_highlightView;	// 168 = 0xa8
    NTKFaceColorScheme *_colorScheme;	// 176 = 0xb0
    UIColor *_overrideColor;	// 184 = 0xb8
    UIColor *_platterColor;	// 192 = 0xc0
    CLKComplicationTemplate *_complicationTemplate;	// 200 = 0xc8
    struct CGSize _maxSize;	// 208 = 0xd0
    struct UIEdgeInsets _touchEdgeInsets;	// 224 = 0xe0
}

+ (id)_stopwatchImageProvider;	// IMP=0x00000000002c8349
+ (id)_alarmImageProviderActive:(_Bool)arg1;	// IMP=0x00000000002c8082
+ (id)_timerImageProvider;	// IMP=0x00000000002c7d50
+ (id)_preferredAdditionalFontSettings;	// IMP=0x00000000002c7d48
+ (_Bool)handlesComplicationTemplate:(id)arg1;	// IMP=0x00000000002c6ff0
+ (id)largeComplicationViewForType:(unsigned long long)arg1 narrow:(_Bool)arg2;	// IMP=0x00000000002c4e0e
+ (id)smallComplicationViewForType:(unsigned long long)arg1;	// IMP=0x00000000002c4d66
- (void).cxx_destruct;	// IMP=0x00000000002c8929
@property(readonly, nonatomic) CLKComplicationTemplate *complicationTemplate; // @synthesize complicationTemplate=_complicationTemplate;
@property(readonly, nonatomic) _Bool editing; // @synthesize editing=_editing;
@property(readonly, nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(retain, nonatomic) UIColor *platterColor; // @synthesize platterColor=_platterColor;
@property(retain, nonatomic) UIColor *overrideColor; // @synthesize overrideColor=_overrideColor;
@property(retain, nonatomic) NTKFaceColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(nonatomic) struct UIEdgeInsets touchEdgeInsets; // @synthesize touchEdgeInsets=_touchEdgeInsets;
@property(retain, nonatomic) UIView *highlightView; // @synthesize highlightView=_highlightView;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(retain, nonatomic) UIImageView *backgroundPlatter; // @synthesize backgroundPlatter=_backgroundPlatter;
@property(nonatomic) _Bool suppressesInternalColorOverrides; // @synthesize suppressesInternalColorOverrides=_suppressesInternalColorOverrides;
@property(nonatomic) double editingRotationAngle; // @synthesize editingRotationAngle=_editingRotationAngle;
@property(nonatomic) _Bool shouldScaleAndFadeWhenHighlighting; // @synthesize shouldScaleAndFadeWhenHighlighting=_shouldScaleAndFadeWhenHighlighting;
@property(nonatomic) _Bool useBlockyHighlightCorners; // @synthesize useBlockyHighlightCorners=_useBlockyHighlightCorners;
@property(nonatomic) double fontWeight; // @synthesize fontWeight=_fontWeight;
@property(nonatomic) _Bool useRoundedFontDesign; // @synthesize useRoundedFontDesign=_useRoundedFontDesign;
@property(readonly) NSDate *timeTravelDate; // @synthesize timeTravelDate=_timeTravelDate;
@property(nonatomic) _Bool alwaysEnforcePlatterInset; // @synthesize alwaysEnforcePlatterInset=_alwaysEnforcePlatterInset;
@property(nonatomic) _Bool shouldUseBackgroundPlatter; // @synthesize shouldUseBackgroundPlatter=_shouldUseBackgroundPlatter;
@property(nonatomic) unsigned long long placement; // @synthesize placement=_placement;
@property(nonatomic) double foregroundImageAlpha; // @synthesize foregroundImageAlpha=_foregroundImageAlpha;
@property(retain, nonatomic) UIColor *accentColor; // @synthesize accentColor=_accentColor;
@property(retain, nonatomic) CLKDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) CLKFont *font; // @synthesize font=_font;
@property(nonatomic) _Bool usesLegibility; // @synthesize usesLegibility=_usesLegibility;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(nonatomic) _Bool canUseCurvedText; // @synthesize canUseCurvedText=_canUseCurvedText;
@property(nonatomic) __weak id <NTKComplicationDisplayObserver> displayObserver; // @synthesize displayObserver;
- (void)_updateForTemplateChange;	// IMP=0x00000000002c7cd9
- (void)_applyForegroundAlpha;	// IMP=0x00000000002c7cd3
- (double)_widthThatFits;	// IMP=0x00000000002c7cca
- (void)_updateContentForEditingChange;	// IMP=0x00000000002c7cc4
- (void)_updateContentForMaxSizeChange;	// IMP=0x00000000002c7cbe
- (id)_smallCapsFont;	// IMP=0x00000000002c7c6e
- (id)_standardFont;	// IMP=0x00000000002c7b67
- (id)_newImageViewSubview;	// IMP=0x00000000002c7b39
- (id)_newImageViewSubviewWithAlpha:(double)arg1;	// IMP=0x00000000002c7aa9
- (id)_newCurvedHighlightView;	// IMP=0x00000000002c7a92
- (id)_newStandardCurvedLabelSubview;	// IMP=0x00000000002c7a7b
- (id)_newHighlightView;	// IMP=0x00000000002c7a67
- (id)_newHighlightViewVariant:(_Bool)arg1;	// IMP=0x00000000002c78cd
- (id)_newStandardLabelSubview;	// IMP=0x00000000002c78b9
- (id)_newStandardLabelSubviewVariant:(_Bool)arg1;	// IMP=0x00000000002c7843
- (id)_newLabelSubviewWithFont:(id)arg1 variant:(_Bool)arg2;	// IMP=0x00000000002c7556
- (id)_newDigitalTimeLabelSubviewWithOptions:(unsigned long long)arg1;	// IMP=0x00000000002c7314
- (struct UIEdgeInsets)_touchEdgeInsetsForPlacement:(unsigned long long)arg1;	// IMP=0x00000000002c7200
- (void)_enumerateColoringStackedImagesViewsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002c71fa
- (void)_enumerateColoringViewsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002c71f4
- (void)setTimeTravelDate:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000002c7059
- (void)setComplicationTemplate:(id)arg1 reason:(long long)arg2;	// IMP=0x00000000002c6ff8
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
- (void)setEditing:(_Bool)arg1;	// IMP=0x00000000002c6ddb
- (void)setMaxSize:(struct CGSize)arg1;	// IMP=0x00000000002c6d6e
- (void)_updateLabelsForFontChange;	// IMP=0x00000000002c6d22
- (void)_updateImageViewColor:(id)arg1;	// IMP=0x00000000002c6ba0
- (void)_updateImageViewAlpha:(id)arg1;	// IMP=0x00000000002c6b2c
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000002c6a9c
- (void)layoutLabelVertically:(id)arg1;	// IMP=0x00000000002c6988
- (id)_backgroundPlatterImage;	// IMP=0x00000000002c6537
- (void)layoutSubviews;	// IMP=0x00000000002c6199
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000002c60a3
- (_Bool)shouldUsePlatterInset;	// IMP=0x00000000002c606a
- (_Bool)isPlacementForTopBezelComplication;	// IMP=0x00000000002c5f37
- (void)_applyColorScheme:(id)arg1;	// IMP=0x00000000002c5c31
- (void)applyTransitionFraction:(double)arg1 fromFaceColorPalette:(id)arg2 toFaceColorPalette:(id)arg3 units:(unsigned long long)arg4 brightenedUnits:(unsigned long long)arg5;	// IMP=0x00000000002c5a0a
- (void)applyFaceColorPalette:(id)arg1 units:(unsigned long long)arg2;	// IMP=0x00000000002c58a9
- (void)applyTransitionFraction:(double)arg1 fromFaceColor:(unsigned long long)arg2 toFaceColor:(unsigned long long)arg3 units:(unsigned long long)arg4 brightenedUnits:(unsigned long long)arg5;	// IMP=0x00000000002c5801
- (void)applyFaceColor:(unsigned long long)arg1 units:(unsigned long long)arg2;	// IMP=0x00000000002c57a9
- (void)_updateForegroundImageAlpha;	// IMP=0x00000000002c55ae
- (void)_computeForegroundImageAlpha;	// IMP=0x00000000002c5590
- (void)_computeForegroundAlpha;	// IMP=0x00000000002c54ab
- (void)_updateForegroundAlpha;	// IMP=0x00000000002c53e7
@property(nonatomic) double foregroundAlpha; // @synthesize foregroundAlpha=_foregroundAlpha;
- (id)_computedPlatterColor;	// IMP=0x00000000002c5323
- (void)_computePlatterColor;	// IMP=0x00000000002c5307
- (void)_updatePlatterColor;	// IMP=0x00000000002c52dc
- (id)_computedForegroundColor;	// IMP=0x00000000002c52c7
- (void)_computeForegroundColor;	// IMP=0x00000000002c52ab
- (void)_updateForegroundColor;	// IMP=0x00000000002c517a
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000002c4ec9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool shouldUseTemplateColors;
@property(readonly) Class superclass;

@end

