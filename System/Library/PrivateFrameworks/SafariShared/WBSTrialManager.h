//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSString, TRIClient, WBSDiagnosticStateCollector, WBSTrialIdentifiers;
@protocol OS_dispatch_queue;

@interface WBSTrialManager : NSObject
{
    NSMutableDictionary *_customFactorsDictionary;	// 8 = 0x8
    WBSDiagnosticStateCollector *_stateCollector;	// 16 = 0x10
    _Bool _ready;	// 24 = 0x18
    struct os_unfair_lock_s _lock;	// 28 = 0x1c
    TRIClient *_trialClient;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    NSDictionary *_factors;	// 48 = 0x30
    NSString *_experimentId;	// 56 = 0x38
    NSString *_treatmentId;	// 64 = 0x40
}

+ (id)shared;	// IMP=0x00000000000249cc
- (void).cxx_destruct;	// IMP=0x0000000000026118
@property(nonatomic) _Bool ready; // @synthesize ready=_ready;
@property(copy, nonatomic) NSString *treatmentId; // @synthesize treatmentId=_treatmentId;
@property(copy, nonatomic) NSString *experimentId; // @synthesize experimentId=_experimentId;
@property(retain, nonatomic) NSDictionary *factors; // @synthesize factors=_factors;
@property(nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) TRIClient *trialClient; // @synthesize trialClient=_trialClient;
- (void)registerDiagnosticInfo:(id)arg1;	// IMP=0x0000000000025fac
- (id)getFactorValueAsString:(id)arg1;	// IMP=0x0000000000025e4f
- (id)prepareLogDictionary:(_Bool)arg1 withExperimentId:(id)arg2 withTreatmentId:(id)arg3 isCounterFactualSearch:(_Bool)arg4 withFactorData:(id)arg5;	// IMP=0x0000000000025c9d
- (double)getFloatFactor:(id)arg1 forCF:(_Bool)arg2 forDefault:(double)arg3;	// IMP=0x0000000000025c14
- (long long)getIntFactor:(id)arg1 forCF:(_Bool)arg2 forDefault:(long long)arg3;	// IMP=0x0000000000025b96
- (_Bool)getBoolFactor:(id)arg1 forCF:(_Bool)arg2 forDefault:(_Bool)arg3;	// IMP=0x0000000000025b18
- (id)getRetrievalFactorName:(id)arg1 forCF:(_Bool)arg2;	// IMP=0x0000000000025ab4
- (id)stringFactorWithName:(id)arg1;	// IMP=0x0000000000025a46
- (id)numberFactorWithName:(id)arg1;	// IMP=0x000000000002591b
- (void)setFactorWithName:(id)arg1 value:(id)arg2;	// IMP=0x0000000000025887
@property(readonly, nonatomic) WBSTrialIdentifiers *identifiers;
- (id)factorWithName:(id)arg1;	// IMP=0x0000000000025753
- (void)fetchFactorsInNamespace:(id)arg1;	// IMP=0x00000000000251b2
- (_Bool)inExperiment;	// IMP=0x0000000000025164
- (double)CFSearchTimeoutForDefault:(double)arg1;	// IMP=0x0000000000025107
- (_Bool)runCFFlow;	// IMP=0x0000000000024e08
- (_Bool)isCFEnabled;	// IMP=0x0000000000024db4
- (_Bool)isReady;	// IMP=0x0000000000024d97
- (id)init;	// IMP=0x0000000000024a65

@end

