//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SafariShared/NSCopying-Protocol.h>

@class NSString, NSURL, NSURLSessionConfiguration;

@interface WBSPasswordBreachConfiguration : NSObject <NSCopying>
{
    _Bool _isInternalBuild;	// 8 = 0x8
    _Bool _shouldRefillBagWhenEmpty;	// 9 = 0x9
    _Bool _verboseSensitiveLoggingEnabled;	// 10 = 0xa
    NSString *_highFrequencyBucketHashSalt;	// 16 = 0x10
    NSString *_lowFrequencyBucketHashSalt;	// 24 = 0x18
    unsigned long long _highFrequencyBucketHashWorkFactor;	// 32 = 0x20
    unsigned long long _lowFrequencyBucketHashWorkFactor;	// 40 = 0x28
    unsigned long long _highFrequencyBucketScryptBlockSizeR;	// 48 = 0x30
    unsigned long long _lowFrequencyBucketScryptBlockSizeR;	// 56 = 0x38
    unsigned long long _highFrequencyBucketScryptParallelismFactorP;	// 64 = 0x40
    unsigned long long _lowFrequencyBucketScryptParallelismFactorP;	// 72 = 0x48
    unsigned long long _lowFrequencyBucketIdentifierBitCount;	// 80 = 0x50
    NSURL *_highFrequencyBucketURL;	// 88 = 0x58
    NSURL *_lowFrequencyBucketURL;	// 96 = 0x60
    NSURLSessionConfiguration *_urlSessionConfiguration;	// 104 = 0x68
    double _minimumDelayBetweenSessions;	// 112 = 0x70
    unsigned long long _passwordCheckBatchSize;	// 120 = 0x78
    unsigned long long _numberOfBatchesPerSession;	// 128 = 0x80
    unsigned long long _fakePasswordLengthBytes;	// 136 = 0x88
    unsigned long long _lowFrequencyBucketFetchTimeout;	// 144 = 0x90
}

+ (id)standardConfiguration;	// IMP=0x000000000001655c
- (void).cxx_destruct;	// IMP=0x00000000000167ac
@property(readonly, nonatomic) _Bool verboseSensitiveLoggingEnabled; // @synthesize verboseSensitiveLoggingEnabled=_verboseSensitiveLoggingEnabled;
@property(readonly, nonatomic) unsigned long long lowFrequencyBucketFetchTimeout; // @synthesize lowFrequencyBucketFetchTimeout=_lowFrequencyBucketFetchTimeout;
@property(readonly, nonatomic) unsigned long long fakePasswordLengthBytes; // @synthesize fakePasswordLengthBytes=_fakePasswordLengthBytes;
@property(readonly, nonatomic) unsigned long long numberOfBatchesPerSession; // @synthesize numberOfBatchesPerSession=_numberOfBatchesPerSession;
@property(readonly, nonatomic) unsigned long long passwordCheckBatchSize; // @synthesize passwordCheckBatchSize=_passwordCheckBatchSize;
@property(readonly, nonatomic) double minimumDelayBetweenSessions; // @synthesize minimumDelayBetweenSessions=_minimumDelayBetweenSessions;
@property(readonly, nonatomic) NSURLSessionConfiguration *urlSessionConfiguration; // @synthesize urlSessionConfiguration=_urlSessionConfiguration;
@property(readonly, nonatomic) NSURL *lowFrequencyBucketURL; // @synthesize lowFrequencyBucketURL=_lowFrequencyBucketURL;
@property(readonly, nonatomic) NSURL *highFrequencyBucketURL; // @synthesize highFrequencyBucketURL=_highFrequencyBucketURL;
@property(readonly, nonatomic) unsigned long long lowFrequencyBucketIdentifierBitCount; // @synthesize lowFrequencyBucketIdentifierBitCount=_lowFrequencyBucketIdentifierBitCount;
@property(readonly, nonatomic) unsigned long long lowFrequencyBucketScryptParallelismFactorP; // @synthesize lowFrequencyBucketScryptParallelismFactorP=_lowFrequencyBucketScryptParallelismFactorP;
@property(readonly, nonatomic) unsigned long long highFrequencyBucketScryptParallelismFactorP; // @synthesize highFrequencyBucketScryptParallelismFactorP=_highFrequencyBucketScryptParallelismFactorP;
@property(readonly, nonatomic) unsigned long long lowFrequencyBucketScryptBlockSizeR; // @synthesize lowFrequencyBucketScryptBlockSizeR=_lowFrequencyBucketScryptBlockSizeR;
@property(readonly, nonatomic) unsigned long long highFrequencyBucketScryptBlockSizeR; // @synthesize highFrequencyBucketScryptBlockSizeR=_highFrequencyBucketScryptBlockSizeR;
@property(readonly, nonatomic) unsigned long long lowFrequencyBucketHashWorkFactor; // @synthesize lowFrequencyBucketHashWorkFactor=_lowFrequencyBucketHashWorkFactor;
@property(readonly, nonatomic) unsigned long long highFrequencyBucketHashWorkFactor; // @synthesize highFrequencyBucketHashWorkFactor=_highFrequencyBucketHashWorkFactor;
@property(readonly, nonatomic) NSString *lowFrequencyBucketHashSalt; // @synthesize lowFrequencyBucketHashSalt=_lowFrequencyBucketHashSalt;
@property(readonly, nonatomic) NSString *highFrequencyBucketHashSalt; // @synthesize highFrequencyBucketHashSalt=_highFrequencyBucketHashSalt;
- (_Bool)isVerboseSensitiveLoggingEnabled;	// IMP=0x00000000000166d8
@property(readonly, nonatomic) _Bool shouldRefillBagWhenEmpty;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000016551
- (id)initWithDictionary:(id)arg1 protocolClasses:(id)arg2 allowValuesForTesting:(_Bool)arg3;	// IMP=0x0000000000016040
- (id)initWithDictionary:(id)arg1;	// IMP=0x0000000000016024

@end

