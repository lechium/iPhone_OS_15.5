//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface EspressoFDOverfeatNetwork : NSObject
{
    struct vector<std::shared_ptr<Espresso::net>, std::allocator<std::shared_ptr<Espresso::net>>> gpu_nets;	// 8 = 0x8
    struct vector<std::shared_ptr<Espresso::net>, std::allocator<std::shared_ptr<Espresso::net>>> ecpu_nets;	// 32 = 0x20
    struct vector<std::pair<unsigned long long, unsigned long long>, std::allocator<std::pair<unsigned long long, unsigned long long>>> net_scales;	// 56 = 0x38
    struct vector<std::pair<unsigned long long, unsigned long long>, std::allocator<std::pair<unsigned long long, unsigned long long>>> full_scales;	// 80 = 0x50
    struct vector<double, std::allocator<double>> scalesc;	// 104 = 0x68
    struct vector<std::shared_ptr<Espresso::fast_pyramid_resizer>, std::allocator<std::shared_ptr<Espresso::fast_pyramid_resizer>>> resizers_for_batching;	// 128 = 0x80
    int n_resizers_for_batching;	// 152 = 0x98
    struct vector<std::shared_ptr<Espresso::blob<float, 3>>, std::allocator<std::shared_ptr<Espresso::blob<float, 3>>>> probBlobs;	// 160 = 0xa0
    struct vector<std::shared_ptr<Espresso::blob<float, 3>>, std::allocator<std::shared_ptr<Espresso::blob<float, 3>>>> boxBlobs;	// 184 = 0xb8
    NSMutableDictionary *_errorForLayers;	// 208 = 0xd0
    struct pair<unsigned long long, unsigned long long> cropDims;	// 216 = 0xd8
    struct CGColorSpace *colorSpace;	// 232 = 0xe8
    struct net_strides_configuration strideConf;	// 240 = 0xf0
    int retile_stride;	// 320 = 0x140
    int retile_tile_sz;	// 324 = 0x144
    struct vector<int, std::allocator<int>> retile_n_outputs_v;	// 328 = 0x148
    int tile_w_1;	// 352 = 0x160
    int tile_h_1;	// 356 = 0x164
    NSObject<OS_dispatch_queue> *cpu_queue_0;	// 360 = 0x168
    NSObject<OS_dispatch_semaphore> *cpu_semaphore;	// 368 = 0x170
    _Bool _useGPUScaler;	// 376 = 0x178
    int _scalingMode;	// 380 = 0x17c
    float _maxScale;	// 384 = 0x180
    int _forceMaxNScales;	// 388 = 0x184
    int _scaleConfig;	// 392 = 0x188
    int _mode;	// 396 = 0x18c
    int _cpin;	// 400 = 0x190
    NSString *_basename;	// 408 = 0x198
    NSString *_weights;	// 416 = 0x1a0
    shared_ptr_ae8b808b _context_metal;	// 424 = 0x1a8
    shared_ptr_ae8b808b _context_cpu;	// 440 = 0x1b8
}

- (id).cxx_construct;	// IMP=0x00000000006c3f4b
- (void).cxx_destruct;	// IMP=0x00000000006c3dd1
@property(nonatomic) shared_ptr_ae8b808b context_cpu; // @synthesize context_cpu=_context_cpu;
@property(nonatomic) shared_ptr_ae8b808b context_metal; // @synthesize context_metal=_context_metal;
@property(nonatomic) int cpin; // @synthesize cpin=_cpin;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) int scaleConfig; // @synthesize scaleConfig=_scaleConfig;
@property(retain, nonatomic) NSString *weights; // @synthesize weights=_weights;
@property(retain, nonatomic) NSString *basename; // @synthesize basename=_basename;
@property(nonatomic) int forceMaxNScales; // @synthesize forceMaxNScales=_forceMaxNScales;
@property(nonatomic) float maxScale; // @synthesize maxScale=_maxScale;
@property(nonatomic) int scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) _Bool useGPUScaler; // @synthesize useGPUScaler=_useGPUScaler;
- (void)setContextCpu:(id)arg1;	// IMP=0x00000000006c3af7
- (void)setContextMetal:(id)arg1;	// IMP=0x00000000006c3a1d
- (id)errorForLayers;	// IMP=0x00000000006c3a0c
- (_Bool)needRetiling:(int)arg1;	// IMP=0x00000000006c39de
- (void)storeDataForPruning:(shared_ptr_619761a4)arg1 prob:(float)arg2;	// IMP=0x00000000006c39d8
- (void)forward_cpu_network_at_index:(int)arg1 pyr:(const void *)arg2;	// IMP=0x00000000006c361b
- (void)retile_and_forward_espresso_network_at_index:(int)arg1 net:(const void *)arg2 pyr:(const void *)arg3;	// IMP=0x00000000006c3615
- (void)retile_and_forward_espresso_gpu_network_at_index:(int)arg1 net:(const void *)arg2 pyr:(const void *)arg3;	// IMP=0x00000000006c35c9
- (void)setup_retile;	// IMP=0x00000000006c32a3
- (int)default_retile_outputs;	// IMP=0x00000000006c3283
- (void)processPyramid:(shared_ptr_7fb9d9f9)arg1 gpu_resizer:(id)arg2;	// IMP=0x00000000006c2377
- (void)processPyramid:(shared_ptr_7fb9d9f9)arg1;	// IMP=0x00000000006c22d4
- (void)processBlobNoRotation:(const void *)arg1 tex:(id)arg2 doBGRA2RGBA:(_Bool)arg3;	// IMP=0x00000000006c2192
- (void)processVimageNoRotation:(const struct vImage_Buffer *)arg1 tex:(id)arg2 doBGRA2RGBA:(_Bool)arg3;	// IMP=0x00000000006c1f56
- (void)processBlob:(const void *)arg1 tex:(id)arg2;	// IMP=0x00000000006c1e3c
- (void)generatePyramid:(const void *)arg1 tex:(id)arg2;	// IMP=0x00000000006c1d88
- (shared_ptr_891d523c)boxBlobForScale:(int)arg1;	// IMP=0x00000000006c1d57
- (shared_ptr_891d523c)probBlobForScale:(int)arg1;	// IMP=0x00000000006c1d26
- (int)getNumScales;	// IMP=0x00000000006c1d02
- (void)retryLoadingCaffeNet:(void *)arg1 name:(id)arg2 weights:(id)arg3 context:(shared_ptr_ae8b808b)arg4 cp:(int)arg5;	// IMP=0x00000000006c1cfc
- (void)autoSetupNetBaseName:(id)arg1 weights:(id)arg2 scaleConfig:(int)arg3 setupMode:(int)arg4 computePath:(int)arg5 autoAspectRatio:(float)arg6 forceReset:(_Bool)arg7 useLowPriorityMode:(_Bool)arg8 gpuPriority:(unsigned int)arg9;	// IMP=0x00000000006becad
- (void)wipeLayersMemory;	// IMP=0x00000000006bebb5
- (void)reset;	// IMP=0x00000000006beb4d
- (void)autoResizeForAspectRatio:(float)arg1 useLowPriorityMode:(_Bool)arg2 gpuPriority:(unsigned int)arg3;	// IMP=0x00000000006bea45
- (struct net_strides_configuration)strideConfiguration;	// IMP=0x00000000006be9a7
- (double)getScale:(int)arg1;	// IMP=0x00000000006be995
- (void)dealloc;	// IMP=0x00000000006be923
- (id)init;	// IMP=0x00000000006be86d
- (shared_ptr_d082c67d)cpu_net:(int)arg1;	// IMP=0x00000000006be83f
- (shared_ptr_d082c67d)gpu_net:(int)arg1;	// IMP=0x00000000006be811
- (int)resizerCount;	// IMP=0x00000000006be7f9
- (shared_ptr_7fb9d9f9)resizerAtIndex:(int)arg1;	// IMP=0x00000000006be7c8

@end

