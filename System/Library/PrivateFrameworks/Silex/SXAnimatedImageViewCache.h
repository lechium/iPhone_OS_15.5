//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableIndexSet, NSOperationQueue, SXAnimatedImage;
@protocol SXAnimatedImageViewCacheDelegate;

@interface SXAnimatedImageViewCache : NSObject
{
    _Bool _cachingEnabled;	// 8 = 0x8
    struct os_unfair_lock_s _lock;	// 12 = 0xc
    id <SXAnimatedImageViewCacheDelegate> _delegate;	// 16 = 0x10
    SXAnimatedImage *_animatedImage;	// 24 = 0x18
    long long _singleImageByteSize;	// 32 = 0x20
    unsigned long long _lastRequestedIndex;	// 40 = 0x28
    NSOperationQueue *_queue;	// 48 = 0x30
    unsigned long long _numberOfCachedImages;	// 56 = 0x38
    NSMutableArray *_cachedImages;	// 64 = 0x40
    NSMutableIndexSet *_indicesToCache;	// 72 = 0x48
    struct CGSize _size;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x0000000000007079
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) NSMutableIndexSet *indicesToCache; // @synthesize indicesToCache=_indicesToCache;
@property(readonly, nonatomic) NSMutableArray *cachedImages; // @synthesize cachedImages=_cachedImages;
@property(nonatomic) unsigned long long numberOfCachedImages; // @synthesize numberOfCachedImages=_numberOfCachedImages;
@property(readonly, nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property unsigned long long lastRequestedIndex; // @synthesize lastRequestedIndex=_lastRequestedIndex;
@property long long singleImageByteSize; // @synthesize singleImageByteSize=_singleImageByteSize;
@property(nonatomic) _Bool cachingEnabled; // @synthesize cachingEnabled=_cachingEnabled;
@property(nonatomic) __weak SXAnimatedImage *animatedImage; // @synthesize animatedImage=_animatedImage;
@property(nonatomic) __weak id <SXAnimatedImageViewCacheDelegate> delegate; // @synthesize delegate=_delegate;
- (id)decodeImageFromSource:(struct CGImageSource *)arg1 index:(unsigned long long)arg2;	// IMP=0x0000000000006eba
- (void)checkCacheSize;	// IMP=0x0000000000006cb1
- (void)cacheNextImage;	// IMP=0x000000000000698e
- (void)prepareCache;	// IMP=0x00000000000068a4
- (void)restoreCacheSize;	// IMP=0x0000000000006879
- (void)decreaseCacheSize;	// IMP=0x000000000000684e
@property(readonly, nonatomic) unsigned long long maxCacheSize;
@property(nonatomic, getter=preloadingSuspended) _Bool suspendPreloading;
- (void)prune;	// IMP=0x000000000000668b
- (id)imageForFrameIndex:(unsigned long long)arg1;	// IMP=0x000000000000654b
- (unsigned long long)nearestCachedFrameIndexForFrameIndex:(unsigned long long)arg1;	// IMP=0x00000000000063e2
- (void)prepareImageForFrameIndex:(unsigned long long)arg1;	// IMP=0x00000000000062ea
- (id)initWithImageSize:(struct CGSize)arg1;	// IMP=0x00000000000061c1

@end

