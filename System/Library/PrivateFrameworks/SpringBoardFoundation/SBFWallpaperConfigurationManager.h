//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoardFoundation/BSDescriptionProviding-Protocol.h>

@class NSArray, NSMutableDictionary, NSString, SBFMagnifyMode, SBFWallpaperConfiguration;
@protocol SBFProceduralWallpaperProvider, SBFWallpaperConfigurationManagerDelegate;

@interface SBFWallpaperConfigurationManager : NSObject <BSDescriptionProviding>
{
    NSMutableDictionary *_wallpaperImageCache;	// 8 = 0x8
    int _externalNotificationToken;	// 16 = 0x10
    unsigned long long _batchChangeCount;	// 24 = 0x18
    long long _batchNotifyVariants;	// 32 = 0x20
    _Bool _enableWallpaperDimming;	// 40 = 0x28
    _Bool _cachedVariantsShareWallpaperConfiguration;	// 41 = 0x29
    _Bool _cachedVariantsShareWallpaperConfigurationValid;	// 42 = 0x2a
    NSArray *_dataStores;	// 48 = 0x30
    id <SBFWallpaperConfigurationManagerDelegate> _delegate;	// 56 = 0x38
    double _wallpaperScale;	// 64 = 0x40
    long long _wallpaperMode;	// 72 = 0x48
    long long _wallpaperSizeType;	// 80 = 0x50
    id <SBFProceduralWallpaperProvider> _proceduralWallpaperProvider;	// 88 = 0x58
    SBFMagnifyMode *_magnifyMode;	// 96 = 0x60
    struct CGSize _wallpaperSize;	// 104 = 0x68
}

+ (void)initialize;	// IMP=0x00000000000a754c
- (void).cxx_destruct;	// IMP=0x00000000000b36bc
@property(nonatomic, getter=isCachedVariantsShareWallpaperConfigurationValid) _Bool cachedVariantsShareWallpaperConfigurationValid; // @synthesize cachedVariantsShareWallpaperConfigurationValid=_cachedVariantsShareWallpaperConfigurationValid;
@property(nonatomic) _Bool cachedVariantsShareWallpaperConfiguration; // @synthesize cachedVariantsShareWallpaperConfiguration=_cachedVariantsShareWallpaperConfiguration;
@property(retain, nonatomic) SBFMagnifyMode *magnifyMode; // @synthesize magnifyMode=_magnifyMode;
@property(nonatomic) __weak id <SBFProceduralWallpaperProvider> proceduralWallpaperProvider; // @synthesize proceduralWallpaperProvider=_proceduralWallpaperProvider;
@property(readonly, nonatomic) long long wallpaperSizeType; // @synthesize wallpaperSizeType=_wallpaperSizeType;
@property(nonatomic) _Bool enableWallpaperDimming; // @synthesize enableWallpaperDimming=_enableWallpaperDimming;
@property(nonatomic) long long wallpaperMode; // @synthesize wallpaperMode=_wallpaperMode;
@property(readonly, nonatomic) double wallpaperScale; // @synthesize wallpaperScale=_wallpaperScale;
@property(readonly, nonatomic) struct CGSize wallpaperSize; // @synthesize wallpaperSize=_wallpaperSize;
@property(nonatomic) __weak id <SBFWallpaperConfigurationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSArray *dataStores; // @synthesize dataStores=_dataStores;
- (id)succinctDescriptionBuilder;	// IMP=0x00000000000b35c8
- (id)succinctDescription;	// IMP=0x00000000000b3578
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x00000000000b341a
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x00000000000b33ca
@property(readonly, copy) NSString *description;
- (void)getBestCropRect:(out struct CGRect *)arg1 zoomScale:(out double *)arg2 forImageSize:(struct CGSize)arg3 portrait:(_Bool)arg4 parallaxFactor:(double)arg5;	// IMP=0x00000000000b32a9
- (double)parallaxFactorForCropRect:(struct CGRect)arg1 portrait:(_Bool)arg2 forImageSize:(struct CGSize)arg3 zoomScale:(double)arg4;	// IMP=0x00000000000b2a5c
- (struct CGRect)cropRectForOldCropRect:(struct CGRect)arg1 portrait:(_Bool)arg2 zoomScale:(double)arg3 oldParallaxFactor:(double)arg4 forImageSize:(struct CGSize)arg5 newZoomScale:(double *)arg6;	// IMP=0x00000000000b26db
- (struct CGRect)cropRectForViewPort:(struct CGRect)arg1 portrait:(_Bool)arg2 zoomScale:(double)arg3 parallaxFactor:(double)arg4 forImageSize:(struct CGSize)arg5 contentScaleFactor:(double)arg6;	// IMP=0x00000000000b2077
- (id)getWallpaperLegibilitySettingsForVariant:(long long)arg1;	// IMP=0x00000000000b1ffd
- (void)notifyDelegateOfChangesToVariants:(long long)arg1;	// IMP=0x00000000000b1fac
- (void)wallpaperDidChangeForVariants:(long long)arg1 shouldNotify:(_Bool)arg2;	// IMP=0x00000000000b1f1e
- (void)wallpaperWillChangeForVariants:(long long)arg1;	// IMP=0x00000000000b1f0a
- (void)removeDataForTypes:(unsigned long long)arg1 variants:(long long)arg2 variantsShareWallpaperConfiguration:(_Bool)arg3;	// IMP=0x00000000000b1e42
- (void)removeAllDataExceptForTypes:(unsigned long long)arg1 variants:(long long)arg2 variantsShareWallpaperConfiguration:(_Bool)arg3;	// IMP=0x00000000000b1e2d
- (void)removeAllDataExceptForType:(long long)arg1 variants:(long long)arg2 variantsShareWallpaperConfiguration:(_Bool)arg3;	// IMP=0x00000000000b1e08
- (void)removeWallpaperGradientForVariants:(long long)arg1;	// IMP=0x00000000000b1c7e
- (_Bool)setWallpaperGradient:(id)arg1 forVariants:(long long)arg2;	// IMP=0x00000000000b1a8e
- (id)wallpaperColorForVariant:(long long)arg1 fromDataStore:(id)arg2 colorName:(id *)arg3;	// IMP=0x00000000000b19a2
- (void)removeWallpaperColorForVariants:(long long)arg1;	// IMP=0x00000000000b1818
- (_Bool)setWallpaperColorName:(id)arg1 forVariants:(long long)arg2;	// IMP=0x00000000000b1628
- (_Bool)setWallpaperColor:(id)arg1 forVariants:(long long)arg2;	// IMP=0x00000000000b1438
- (void)removeProceduralWallpaperForVariants:(long long)arg1;	// IMP=0x00000000000b12ae
- (_Bool)setProceduralWallpaperIdentifier:(id)arg1 options:(id)arg2 forVariants:(long long)arg3;	// IMP=0x00000000000b1036
- (id)proceduralWallpaperInfoForVariant:(long long)arg1;	// IMP=0x00000000000b0e86
- (id)cleanedProceduralWallpaperInfo:(id)arg1;	// IMP=0x00000000000b0d50
- (_Bool)isProceduralWallpaperInfoValid:(id)arg1;	// IMP=0x00000000000b0ce9
- (Class)proceduralWallpaperClassForIdentifier:(id)arg1;	// IMP=0x00000000000b0c59
- (void)removeVideoForVariants:(long long)arg1;	// IMP=0x00000000000b0ac6
- (struct CGAffineTransform)_naturalPreferredTransform:(struct CGAffineTransform)arg1 forNaturalSize:(struct CGSize)arg2;	// IMP=0x00000000000b090b
- (void)saveCroppedVideo:(id)arg1 toURL:(id)arg2 cropRect:(struct CGRect)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000b0097
- (_Bool)setVideoURL:(id)arg1 forVariant:(long long)arg2 shoudCrop:(_Bool)arg3 relativeCropRect:(struct CGRect)arg4 wallpaperMode:(long long)arg5;	// IMP=0x00000000000afca8
- (id)videoURLForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000afb37
- (void)regenerateStaticWallpaperThumbnailImages;	// IMP=0x00000000000afa4b
- (void)regenerateThumbnailsIfNecessary;	// IMP=0x00000000000af9c4
- (void)regenerateThumbnailIfNecessaryForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000af815
- (void)safeMigrateWallpaperImageIfNecessary;	// IMP=0x00000000000af75a
- (_Bool)safeMigrateWallpaperImageIfNecessaryForVariant:(long long)arg1 representingVariants:(long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000af6ad
- (id)migratedWallpaperOptionsForWallpaperOptions:(id)arg1 originalImageSize:(struct CGSize)arg2;	// IMP=0x00000000000af512
- (void)migrateWallpaperOptionsForImageIfNecessaryForVariant:(long long)arg1 representingVariants:(long long)arg2;	// IMP=0x00000000000ae3f5
- (void)performMigrationWithFailureHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ad11d
@property(readonly, nonatomic) unsigned long long numberOfCachedStaticImages;
- (void)clearCacheForVariants:(long long)arg1 memoryOnly:(_Bool)arg2;	// IMP=0x00000000000acf69
- (void)clearCacheForVariants:(long long)arg1;	// IMP=0x00000000000acf55
- (_Bool)setWallpaperConfigurationFromDefaultWallpaperConfiguration:(id)arg1 forVariants:(long long)arg2 wallpaperMode:(long long)arg3 name:(id)arg4;	// IMP=0x00000000000ac90f
- (void)setWallpaperBundle:(id)arg1 appearance:(id)arg2;	// IMP=0x00000000000ac460
- (void)restoreDefaultWallpaperForAllVariantsAndNotify:(_Bool)arg1;	// IMP=0x00000000000ac2cc
- (long long)wallpaperTypeForSharedWallpaperConfigurationForTypes:(unsigned long long)arg1;	// IMP=0x00000000000abc86
- (_Bool)variantsShareWallpaperConfigurationForTypes:(unsigned long long)arg1;	// IMP=0x00000000000abc6d
@property(readonly, nonatomic) _Bool variantsShareWallpaperConfiguration;
- (void)removeWallpaperImageHashDataForVariants:(long long)arg1;	// IMP=0x00000000000abaac
- (_Bool)setWallpaperImageHashData:(id)arg1 forVariants:(long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000ab91f
- (id)wallpaperImageHashDataForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000ab7ae
- (void)removeWallpaperOptionsForVariants:(long long)arg1;	// IMP=0x00000000000ab674
- (_Bool)setWallpaperOptions:(id)arg1 forVariants:(long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000ab4e7
- (_Bool)setWallpaperOptions:(id)arg1 forVariants:(long long)arg2;	// IMP=0x00000000000ab4d2
- (id)wallpaperOptionsForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000ab361
- (void)removeWallpaperImageDataTypes:(unsigned long long)arg1 forVariants:(long long)arg2;	// IMP=0x00000000000ab211
- (void)removeWallpaperImagesForVariants:(long long)arg1 variantsShareWallpaperConfiguration:(_Bool)arg2;	// IMP=0x00000000000ab069
- (void)removeWallpaperImagesForVariants:(long long)arg1;	// IMP=0x00000000000ab029
- (_Bool)setWallpaperThumbnailData:(id)arg1 forVariant:(long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000aaea0
- (_Bool)setWallpaperThumbnailData:(id)arg1 forVariant:(long long)arg2;	// IMP=0x00000000000aae8b
- (_Bool)setWallpaperThumbnailFromFullsizeImage:(id)arg1 forVariant:(long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000aae24
- (double)thumbnailWidth;	// IMP=0x00000000000aadfc
- (id)thumbnailDataForImage:(id)arg1;	// IMP=0x00000000000aad6e
- (id)normalizeImage:(id)arg1;	// IMP=0x00000000000aa85b
- (_Bool)setWallpaperImage:(id)arg1 originalImage:(id)arg2 thumbnailData:(id)arg3 imageHashData:(id)arg4 wallpaperOptions:(id)arg5 forVariants:(long long)arg6 options:(unsigned long long)arg7 wallpaperMode:(long long)arg8 isMigrating:(_Bool)arg9;	// IMP=0x00000000000a9d83
- (_Bool)setWallpaperImage:(id)arg1 originalImage:(id)arg2 forVariants:(long long)arg3 options:(unsigned long long)arg4;	// IMP=0x00000000000a9c82
- (_Bool)setWallpaperImage:(id)arg1 adjustedImage:(id)arg2 thumbnailData:(id)arg3 imageHashData:(id)arg4 wallpaperOptions:(id)arg5 forVariants:(long long)arg6 wallpaperMode:(long long)arg7;	// IMP=0x00000000000a9a14
- (_Bool)setWallpaperImage:(id)arg1 wallpaperOptions:(id)arg2 forVariants:(long long)arg3;	// IMP=0x00000000000a99e6
- (long long)effectiveSharedVariantForVariants:(long long)arg1;	// IMP=0x00000000000a99cf
- (id)wallpaperThumbnailImageDataForFulfillingLookupForConfiguration:(id)arg1;	// IMP=0x00000000000a98ec
- (id)wallpaperThumbnailImageForFulfillingLookupForConfiguration:(id)arg1;	// IMP=0x00000000000a9685
- (id)wallpaperThumbnailImageForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000a961c
- (id)wallpaperThumbnailImageDataForVariant:(long long)arg1 wallpaperMode:(long long)arg2 inDataStore:(id)arg3;	// IMP=0x00000000000a95a1
- (id)wallpaperThumbnailImageDataForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000a93d6
- (id)wallpaperOriginalImageForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000a91c0
- (id)wallpaperImageForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000a8f84
- (_Bool)hasWallpaperImageForVariant:(long long)arg1 wallpaperMode:(long long)arg2;	// IMP=0x00000000000a8e28
- (id)fallbackWallpaperConfigurationForVarient:(long long)arg1;	// IMP=0x00000000000a8da9
@property(readonly, copy, nonatomic) SBFWallpaperConfiguration *homeScreenWallpaperConfiguration;
@property(readonly, copy, nonatomic) SBFWallpaperConfiguration *lockScreenWallpaperConfiguration;
- (id)wallpaperConfigurationForVariant:(long long)arg1;	// IMP=0x00000000000a8cce
- (id)homeScreenWallpaperConfigurationIncludingValuesForTypes:(unsigned long long)arg1;	// IMP=0x00000000000a8cb4
- (id)lockScreenWallpaperConfigurationIncludingValuesForTypes:(unsigned long long)arg1;	// IMP=0x00000000000a8c9d
- (id)wallpaperConfigurationForVariant:(long long)arg1 includingValuesForTypes:(unsigned long long)arg2 wallpaperMode:(long long)arg3;	// IMP=0x00000000000a7d3b
- (id)wallpaperConfigurationForVariant:(long long)arg1 includingValuesForTypes:(unsigned long long)arg2;	// IMP=0x00000000000a7d26
- (_Bool)isVideoSupportedByDefaultForVariant:(long long)arg1;	// IMP=0x00000000000a7d1a
- (_Bool)isVideoSupportedForVariant:(long long)arg1;	// IMP=0x00000000000a7c9e
- (void)clearDelayedChangeNotifications;	// IMP=0x00000000000a7c90
- (void)delayNotifyingChangeForVariants:(long long)arg1;	// IMP=0x00000000000a7bfa
- (_Bool)isInChangeBatch;	// IMP=0x00000000000a7bec
- (void)endChangeBatch;	// IMP=0x00000000000a7bb5
- (void)beginChangeBatch;	// IMP=0x00000000000a7bab
@property(readonly, nonatomic) struct CGSize wallpaperSizeIncludingParallaxOverhang;
@property(readonly, nonatomic) long long parallaxDeviceType;
- (void)dealloc;	// IMP=0x00000000000a7aea
- (id)init;	// IMP=0x00000000000a7985
- (id)initWithWallpaperDataStores:(id)arg1;	// IMP=0x00000000000a788a
- (id)initWithWallpaperDataStores:(id)arg1 wallpaperSize:(struct CGSize)arg2 scale:(double)arg3 sizeType:(long long)arg4;	// IMP=0x00000000000a7589

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

