//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoardFoundation/SBFAuthenticationAssertionProviding-Protocol.h>
#import <SpringBoardFoundation/SBFAuthenticationStatusProvider-Protocol.h>
#import <SpringBoardFoundation/SBFMobileKeyBagObserver-Protocol.h>
#import <SpringBoardFoundation/SBFPasscodeFieldChangeObserver-Protocol.h>
#import <SpringBoardFoundation/SBFUserAuthenticationModelDelegate-Protocol.h>

@class NSDate, NSHashTable, NSMutableArray, NSString, PCPersistentTimer, SBFAuthenticationAssertion, SBFAuthenticationAssertionManager, SBFMobileKeyBag, SBFMobileKeyBagState, SBFSecureDisplayCoordinator;
@protocol SBFAuthenticationPolicy, SBFUserAuthenticationModel;

@interface SBFUserAuthenticationController : NSObject <SBFMobileKeyBagObserver, SBFUserAuthenticationModelDelegate, SBFAuthenticationAssertionProviding, SBFAuthenticationStatusProvider, SBFPasscodeFieldChangeObserver>
{
    SBFMobileKeyBag *_keybag;	// 8 = 0x8
    NSMutableArray *_responders;	// 16 = 0x10
    NSHashTable *_observers;	// 24 = 0x18
    id <SBFUserAuthenticationModel> _model;	// 32 = 0x20
    long long _authenticationState;	// 40 = 0x28
    NSDate *_lastRevokedAuthenticationDate;	// 48 = 0x30
    SBFAuthenticationAssertionManager *_assertionManager;	// 56 = 0x38
    id <SBFAuthenticationPolicy> _policy;	// 64 = 0x40
    NSString *_lastIncorrectPasscodeAttempt;	// 72 = 0x48
    SBFAuthenticationAssertion *_transientAuthCheckingAssertion;	// 80 = 0x50
    struct __CFRunLoopObserver *_runLoopObserver;	// 88 = 0x58
    PCPersistentTimer *_unblockTimer;	// 96 = 0x60
    long long _cachedAuthFlag;	// 104 = 0x68
    SBFSecureDisplayCoordinator *_secureDisplayCoordinator;	// 112 = 0x70
    SBFMobileKeyBagState *_cachedExtendedState;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x00000000000225ef
@property(retain, nonatomic, getter=_policy, setter=_setPolicy:) id <SBFAuthenticationPolicy> policy; // @synthesize policy=_policy;
@property(readonly, nonatomic) NSDate *lastRevokedAuthenticationDate; // @synthesize lastRevokedAuthenticationDate=_lastRevokedAuthenticationDate;
- (void)_updateSecureModeIfNecessaryForNewAuthState;	// IMP=0x0000000000022577
- (void)_noteDeviceLockStateMayHaveChangedForExternalReasons;	// IMP=0x0000000000022538
- (void)_clearBlockedState;	// IMP=0x00000000000224df
- (void)_unblockTimerFired;	// IMP=0x0000000000022425
- (void)_clearUnblockTimer;	// IMP=0x0000000000022393
- (void)_scheduleUnblockTimer;	// IMP=0x0000000000022237
- (double)_timeUntilUnblockedSinceReferenceDate;	// IMP=0x0000000000022208
- (_Bool)_isUserRequestedEraseEnabled;	// IMP=0x00000000000220f4
- (_Bool)_isPermanentlyBlocked;	// IMP=0x00000000000220de
- (_Bool)_isTemporarilyBlocked;	// IMP=0x00000000000220af
- (void)_notifyAboutTemporaryBlockStatusChanged;	// IMP=0x0000000000021f75
- (void)_refreshModelCacheIfNeeded;	// IMP=0x0000000000021da7
- (long long)_evaluateBiometricAttempt:(id)arg1;	// IMP=0x0000000000021d2c
- (long long)_evaluatePasscodeAttempt:(id)arg1 outError:(id *)arg2;	// IMP=0x0000000000021789
- (long long)_evaluateAuthenticationAttempt:(id)arg1 outError:(id *)arg2;	// IMP=0x0000000000021629
- (_Bool)_authenticateIfInGracePeriod;	// IMP=0x0000000000021539
- (_Bool)_performNilPasscodeCheck;	// IMP=0x00000000000214da
- (_Bool)_boolForAuthenticationResult:(long long)arg1;	// IMP=0x00000000000214cd
- (void)_handleInvalidAuthentication:(id)arg1 responder:(id)arg2;	// IMP=0x00000000000214b8
- (void)_handleFailedAuthentication:(id)arg1 error:(id)arg2 responder:(id)arg3;	// IMP=0x00000000000213f1
- (void)_handleSuccessfulAuthentication:(id)arg1 responder:(id)arg2;	// IMP=0x000000000002126a
- (void)_notifyClientsOfAuthenticationResult:(long long)arg1 forRequest:(id)arg2 error:(id)arg3 withResponder:(id)arg4;	// IMP=0x0000000000020fe2
- (_Bool)_processAuthenticationRequest:(id)arg1 responder:(id)arg2;	// IMP=0x0000000000020f20
- (void)_removeAuthResponder:(id)arg1;	// IMP=0x0000000000020ea3
- (void)_addAsFirstResponder:(id)arg1;	// IMP=0x0000000000020dd8
- (void)_revokeAuthenticationImmediately:(_Bool)arg1 forPublicReason:(id)arg2;	// IMP=0x0000000000020bb7
- (_Bool)_shouldRevokeAuthenticationNow;	// IMP=0x0000000000020b35
- (void)_updateAuthenticationStateImmediately:(_Bool)arg1 forPublicReason:(id)arg2;	// IMP=0x000000000002096b
- (void)_updateAuthenticationStateForPublicReason:(id)arg1;	// IMP=0x0000000000020954
- (void)_updateAuthenticationStateAndDateForLockState:(id)arg1;	// IMP=0x0000000000020757
- (void)_setAuthState:(long long)arg1;	// IMP=0x0000000000020511
- (void)_invalidateCachedPasscodeLockState;	// IMP=0x0000000000020410
- (void)_setup_runLoopObserverIfNecessary;	// IMP=0x00000000000202cb
- (id)_cachedLockStateExtended;	// IMP=0x0000000000020275
- (_Bool)_isUserAuthenticated;	// IMP=0x0000000000020044
- (_Bool)_isInGracePeriodState;	// IMP=0x000000000001fffb
- (_Bool)_isInBioUnlockState;	// IMP=0x000000000001ffb2
- (void)_removePrivateAuthenticationObserver:(id)arg1;	// IMP=0x000000000001ff95
- (void)_addPrivateAuthenticationObserver:(id)arg1;	// IMP=0x000000000001ff26
- (_Bool)_isAssertionValid:(id)arg1;	// IMP=0x000000000001ff10
- (void)_removeAuthenticationAssertion:(id)arg1;	// IMP=0x000000000001fe2a
- (void)_addAuthenticationAssertion:(id)arg1;	// IMP=0x000000000001fd86
- (void)_uncachePasscodeIfNecessary;	// IMP=0x000000000001fd43
- (void)_setupPolicy:(id)arg1;	// IMP=0x000000000001fb58
- (void)_setModel:(id)arg1;	// IMP=0x000000000001faf9
- (void)keybag:(id)arg1 extendedStateDidChange:(id)arg2;	// IMP=0x000000000001fa28
- (void)keybagDidUnlockForTheFirstTime:(id)arg1;	// IMP=0x000000000001f9c7
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x000000000001f7f7
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x000000000001f7a7
- (id)succinctDescriptionBuilder;	// IMP=0x000000000001f6e5
- (id)succinctDescription;	// IMP=0x000000000001f695
- (id)publicDescription;	// IMP=0x000000000001f429
- (void)deviceLockModelRequestsDeviceWipe:(id)arg1;	// IMP=0x000000000001f40c
- (void)deviceLockStateMayHaveChangedForModel:(id)arg1;	// IMP=0x000000000001f3de
- (void)notePasscodeEntryCancelled;	// IMP=0x000000000001f3c8
- (void)notePasscodeEntryBegan;	// IMP=0x000000000001f3b2
- (void)revokeAuthenticationIfNecessaryForPublicReason:(id)arg1;	// IMP=0x000000000001f2eb
- (void)revokeAuthenticationImmediatelyIfNecessaryForPublicReason:(id)arg1;	// IMP=0x000000000001f221
- (void)revokeAuthenticationImmediatelyForPublicReason:(id)arg1;	// IMP=0x000000000001f157
- (_Bool)hasAuthenticatedAtLeastOnceSinceBoot;	// IMP=0x000000000001f141
- (_Bool)isAuthenticatedCached;	// IMP=0x000000000001f133
- (_Bool)isAuthenticated;	// IMP=0x000000000001f121
- (_Bool)hasPasscodeSet;	// IMP=0x000000000001f10b
@property(readonly, copy) NSString *description;
- (id)createGracePeriodAssertionWithReason:(id)arg1;	// IMP=0x000000000001f096
- (id)createKeybagUnlockAssertionWithReason:(id)arg1;	// IMP=0x000000000001f035
- (void)processAuthenticationRequest:(id)arg1;	// IMP=0x000000000001efbc
- (void)processAuthenticationRequest:(id)arg1 responder:(id)arg2;	// IMP=0x000000000001efaa
- (void)removeResponder:(id)arg1;	// IMP=0x000000000001ef98
- (void)addAsFirstResponder:(id)arg1;	// IMP=0x000000000001ef86
@property(readonly, nonatomic) _Bool inSecureDisplayMode;
- (void)dealloc;	// IMP=0x000000000001ef08
- (id)initWithAssertionManager:(id)arg1 policy:(id)arg2 keybag:(id)arg3 model:(id)arg4;	// IMP=0x000000000001ebf1
- (id)initWithAssertionManager:(id)arg1 policy:(id)arg2;	// IMP=0x000000000001ebd9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

