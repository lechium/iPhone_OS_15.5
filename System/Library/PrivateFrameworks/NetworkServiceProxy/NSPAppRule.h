//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NetworkExtension/NEAppRule.h>

@class NSArray, NSData, NSDate, NSNumber, NSPNetworkAgent, NSString, NSUUID, NWNetworkAgentRegistration;

@interface NSPAppRule : NEAppRule
{
    _Bool _disabledByRatio;	// 8 = 0x8
    NSNumber *_disableFallback;	// 16 = 0x10
    NSNumber *_enableDirectMultipath;	// 24 = 0x18
    NSNumber *_enableDirectTFO;	// 32 = 0x20
    NSNumber *_enableDirectExtendedValidation;	// 40 = 0x28
    NSArray *_directTLSPorts;	// 48 = 0x30
    NSNumber *_divertDNSOnly;	// 56 = 0x38
    NSNumber *_noDNSDelegation;	// 64 = 0x40
    NSNumber *_serviceID;	// 72 = 0x48
    NSNumber *_enabled;	// 80 = 0x50
    NSNumber *_fallbackTimeout;	// 88 = 0x58
    NSNumber *_fallbackBufferLimit;	// 96 = 0x60
    NSNumber *_fallbackCountBeforeImmediateFallback;	// 104 = 0x68
    NSString *_proxyEvaluationPath;	// 112 = 0x70
    NSNumber *_useCustomProtocol;	// 120 = 0x78
    NSNumber *_useLocalFlowDivert;	// 128 = 0x80
    NSNumber *_enableDirectRace;	// 136 = 0x88
    NSString *_label;	// 144 = 0x90
    NSString *_edgeSetIdentifier;	// 152 = 0x98
    NSNumber *_connectionTimeout;	// 160 = 0xa0
    NSNumber *_connectionIdleTimeout;	// 168 = 0xa8
    NSNumber *_enableMultipath;	// 176 = 0xb0
    NSNumber *_enableTFO;	// 184 = 0xb8
    NSNumber *_requireTFO;	// 192 = 0xc0
    NSNumber *_enableNoTFOCookie;	// 200 = 0xc8
    NSNumber *_enableUDPRace;	// 208 = 0xd0
    NSNumber *_enableRatio;	// 216 = 0xd8
    NSNumber *_reenableInterval;	// 224 = 0xe0
    NSNumber *_telemetryRatio;	// 232 = 0xe8
    NSNumber *_shouldComposeInitialData;	// 240 = 0xf0
    NSNumber *_enableOptInPerTask;	// 248 = 0xf8
    NSArray *_matchEffectiveApplications;	// 256 = 0x100
    NSString *_locationBundlePath;	// 264 = 0x108
    NSNumber *_initialWindowSize;	// 272 = 0x110
    NSPAppRule *_defaults;	// 280 = 0x118
    NSPNetworkAgent *_agent;	// 288 = 0x120
    NWNetworkAgentRegistration *_agentRegistration;	// 296 = 0x128
    NSUUID *_configurationIdentifier;	// 304 = 0x130
    NSDate *_enableCheckDate;	// 312 = 0x138
    NSData *_updateHash;	// 320 = 0x140
}

+ (id)copyUUIDsForSigningIdentifier:(id)arg1 executablePath:(id)arg2;	// IMP=0x000000000004ad4d
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000047d6c
+ (void)loadAppRules:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000047be4
+ (id)validateRuleDictionary:(id)arg1;	// IMP=0x0000000000044db8
- (void).cxx_destruct;	// IMP=0x000000000004dac5
@property(retain, nonatomic) NSData *updateHash; // @synthesize updateHash=_updateHash;
@property(nonatomic) _Bool disabledByRatio; // @synthesize disabledByRatio=_disabledByRatio;
@property(retain, nonatomic) NSDate *enableCheckDate; // @synthesize enableCheckDate=_enableCheckDate;
@property(retain, nonatomic) NSUUID *configurationIdentifier; // @synthesize configurationIdentifier=_configurationIdentifier;
@property(retain, nonatomic) NWNetworkAgentRegistration *agentRegistration; // @synthesize agentRegistration=_agentRegistration;
@property(retain, nonatomic) NSPNetworkAgent *agent; // @synthesize agent=_agent;
@property(retain, nonatomic) NSPAppRule *defaults; // @synthesize defaults=_defaults;
@property(copy, nonatomic) NSNumber *initialWindowSize; // @synthesize initialWindowSize=_initialWindowSize;
@property(copy, nonatomic) NSString *locationBundlePath; // @synthesize locationBundlePath=_locationBundlePath;
@property(copy, nonatomic) NSArray *matchEffectiveApplications; // @synthesize matchEffectiveApplications=_matchEffectiveApplications;
@property(copy, nonatomic) NSNumber *enableOptInPerTask; // @synthesize enableOptInPerTask=_enableOptInPerTask;
@property(copy, nonatomic) NSNumber *shouldComposeInitialData; // @synthesize shouldComposeInitialData=_shouldComposeInitialData;
@property(copy, nonatomic) NSNumber *telemetryRatio; // @synthesize telemetryRatio=_telemetryRatio;
@property(copy, nonatomic) NSNumber *reenableInterval; // @synthesize reenableInterval=_reenableInterval;
@property(copy, nonatomic) NSNumber *enableRatio; // @synthesize enableRatio=_enableRatio;
@property(copy, nonatomic) NSNumber *enableUDPRace; // @synthesize enableUDPRace=_enableUDPRace;
@property(copy, nonatomic) NSNumber *enableNoTFOCookie; // @synthesize enableNoTFOCookie=_enableNoTFOCookie;
@property(copy, nonatomic) NSNumber *requireTFO; // @synthesize requireTFO=_requireTFO;
@property(copy, nonatomic) NSNumber *enableTFO; // @synthesize enableTFO=_enableTFO;
@property(copy, nonatomic) NSNumber *enableMultipath; // @synthesize enableMultipath=_enableMultipath;
@property(copy, nonatomic) NSNumber *connectionIdleTimeout; // @synthesize connectionIdleTimeout=_connectionIdleTimeout;
@property(copy, nonatomic) NSNumber *connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property(copy, nonatomic) NSString *edgeSetIdentifier; // @synthesize edgeSetIdentifier=_edgeSetIdentifier;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) NSNumber *enableDirectRace; // @synthesize enableDirectRace=_enableDirectRace;
@property(copy, nonatomic) NSNumber *useLocalFlowDivert; // @synthesize useLocalFlowDivert=_useLocalFlowDivert;
@property(copy, nonatomic) NSNumber *useCustomProtocol; // @synthesize useCustomProtocol=_useCustomProtocol;
@property(copy, nonatomic) NSString *proxyEvaluationPath; // @synthesize proxyEvaluationPath=_proxyEvaluationPath;
@property(copy, nonatomic) NSNumber *fallbackCountBeforeImmediateFallback; // @synthesize fallbackCountBeforeImmediateFallback=_fallbackCountBeforeImmediateFallback;
@property(copy, nonatomic) NSNumber *fallbackBufferLimit; // @synthesize fallbackBufferLimit=_fallbackBufferLimit;
@property(copy, nonatomic) NSNumber *fallbackTimeout; // @synthesize fallbackTimeout=_fallbackTimeout;
@property(copy, nonatomic) NSNumber *enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) NSNumber *serviceID; // @synthesize serviceID=_serviceID;
@property(copy, nonatomic) NSNumber *noDNSDelegation; // @synthesize noDNSDelegation=_noDNSDelegation;
@property(copy, nonatomic) NSNumber *divertDNSOnly; // @synthesize divertDNSOnly=_divertDNSOnly;
@property(copy, nonatomic) NSArray *directTLSPorts; // @synthesize directTLSPorts=_directTLSPorts;
@property(copy, nonatomic) NSNumber *enableDirectExtendedValidation; // @synthesize enableDirectExtendedValidation=_enableDirectExtendedValidation;
@property(copy, nonatomic) NSNumber *enableDirectTFO; // @synthesize enableDirectTFO=_enableDirectTFO;
@property(copy, nonatomic) NSNumber *enableDirectMultipath; // @synthesize enableDirectMultipath=_enableDirectMultipath;
@property(copy, nonatomic) NSNumber *disableFallback; // @synthesize disableFallback=_disableFallback;
- (void)teardownNetworkAgent;	// IMP=0x000000000004d3b2
- (_Bool)updateNetworkAgent;	// IMP=0x000000000004cb6e
- (void)merge:(id)arg1;	// IMP=0x000000000004c6b0
- (id)copyTLVData;	// IMP=0x000000000004bab3
- (id)initFromTLVs:(id)arg1;	// IMP=0x000000000004ad55
- (id)copyMatchEffectiveApplicationConditions;	// IMP=0x000000000004abab
- (id)copyMatchDomainConditions;	// IMP=0x000000000004a9f6
- (id)copyAccountIdentifierConditions;	// IMP=0x000000000004a7be
- (id)copyExecutableConditions;	// IMP=0x000000000004a5a5
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000004a1e6
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000493a2
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000486b5
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000047d74
- (void)saveWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000047c9b
- (id)initFromDictionary:(id)arg1;	// IMP=0x00000000000468d9

@end

