//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSMutableDictionary, NSPAppRule, NSUUID;
@protocol NPTunnelDelegate, OS_dispatch_data, OS_nw_endpoint, OS_nw_interface, OS_nw_parameters, OS_nw_path;

@interface NPTunnel : NSObject
{
    struct nw_protocol _protocol;	// 8 = 0x8
    NSObject<OS_dispatch_data> *_savedData;	// 72 = 0x48
    void *_idleTimer;	// 80 = 0x50
    _Bool _isTFOProbeSucceeded;	// 88 = 0x58
    _Bool _isCancelled;	// 89 = 0x59
    _Bool _isReadyForData;	// 90 = 0x5a
    _Bool _eof;	// 91 = 0x5b
    _Bool _handledDisconnected;	// 92 = 0x5c
    _Bool _disableIdleTimeout;	// 93 = 0x5d
    int _error;	// 96 = 0x60
    NSUUID *_identifier;	// 104 = 0x68
    NSObject<OS_nw_parameters> *_parameters;	// 112 = 0x70
    NSObject<OS_nw_endpoint> *_endpoint;	// 120 = 0x78
    NSObject<OS_nw_endpoint> *_localEndpoint;	// 128 = 0x80
    NSObject<OS_nw_path> *_path;	// 136 = 0x88
    id <NPTunnelDelegate> _delegate;	// 144 = 0x90
    NSMutableDictionary *_flows;	// 152 = 0x98
    NSPAppRule *_appRule;	// 160 = 0xa0
    NSDate *_connectionStartDate;	// 168 = 0xa8
    double _timeToFirstRequest;	// 176 = 0xb0
    double _timeToFirstByte;	// 184 = 0xb8
    long long _connectionState;	// 192 = 0xc0
    long long _fallbackReason;	// 200 = 0xc8
    unsigned long long *_timestamps;	// 208 = 0xd0
}

+ (void)initializeProtocol;	// IMP=0x000000000006553a
- (void).cxx_destruct;	// IMP=0x000000000006799e
@property(nonatomic) _Bool disableIdleTimeout; // @synthesize disableIdleTimeout=_disableIdleTimeout;
@property(nonatomic) _Bool handledDisconnected; // @synthesize handledDisconnected=_handledDisconnected;
@property(nonatomic) _Bool eof; // @synthesize eof=_eof;
@property(readonly, nonatomic) _Bool isReadyForData; // @synthesize isReadyForData=_isReadyForData;
@property(nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) _Bool isTFOProbeSucceeded; // @synthesize isTFOProbeSucceeded=_isTFOProbeSucceeded;
@property(readonly, nonatomic) unsigned long long *timestamps; // @synthesize timestamps=_timestamps;
@property(nonatomic) long long fallbackReason; // @synthesize fallbackReason=_fallbackReason;
@property(nonatomic) int error; // @synthesize error=_error;
@property(nonatomic) long long connectionState; // @synthesize connectionState=_connectionState;
@property(nonatomic) double timeToFirstByte; // @synthesize timeToFirstByte=_timeToFirstByte;
@property(nonatomic) double timeToFirstRequest; // @synthesize timeToFirstRequest=_timeToFirstRequest;
@property(retain, nonatomic) NSDate *connectionStartDate; // @synthesize connectionStartDate=_connectionStartDate;
@property(readonly, nonatomic) NSPAppRule *appRule; // @synthesize appRule=_appRule;
@property(readonly, nonatomic) NSMutableDictionary *flows; // @synthesize flows=_flows;
@property(readonly, nonatomic) __weak id <NPTunnelDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSObject<OS_nw_path> *path; // @synthesize path=_path;
@property(retain, nonatomic) NSObject<OS_nw_endpoint> *localEndpoint; // @synthesize localEndpoint=_localEndpoint;
@property(readonly, nonatomic) NSObject<OS_nw_endpoint> *endpoint; // @synthesize endpoint=_endpoint;
@property(readonly, nonatomic) NSObject<OS_nw_parameters> *parameters; // @synthesize parameters=_parameters;
@property(readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSObject<OS_nw_interface> *outputInterface;
- (void)teardownOutputHandler;	// IMP=0x000000000006774d
- (void)destroyConnection;	// IMP=0x00000000000676df
- (void)cancelConnection;	// IMP=0x00000000000675cf
- (void)handleEOF;	// IMP=0x00000000000675c9
- (void)handleReadData:(struct nw_frame_array_s *)arg1;	// IMP=0x00000000000675c3
- (void)readMinimumLength:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;	// IMP=0x0000000000067447
- (void)handleInputAvailable;	// IMP=0x0000000000067441
- (void)handleDataWrittenWithError:(int)arg1;	// IMP=0x000000000006743b
- (void)write:(id)arg1;	// IMP=0x0000000000066b93
- (void)handleOutputAvailable;	// IMP=0x0000000000066b76
- (void)writeInitialData;	// IMP=0x0000000000066b70
- (void)handleConnectionIsDisconnected;	// IMP=0x0000000000066aa3
- (_Bool)flowIsFirstFlow:(id)arg1;	// IMP=0x0000000000066a9b
- (void)handleFlowUsedTunnel;	// IMP=0x0000000000066a95
- (_Bool)start;	// IMP=0x0000000000066a24
@property(readonly, nonatomic) _Bool isConnectionAlive;
- (unsigned long long)maxDataSendSizeForFlow:(id)arg1;	// IMP=0x0000000000066a0b
- (id)createConnectionInfo;	// IMP=0x0000000000066a03
@property(readonly, nonatomic) unsigned long long initialWindowSize;
@property(readonly, nonatomic) _Bool canHandleMoreData;
- (void)handleFallbackForFlow:(id)arg1;	// IMP=0x00000000000669ed
- (void)handleCanHandleMoreData;	// IMP=0x0000000000066869
- (void)handleDisconnected;	// IMP=0x00000000000666da
- (void)handleReady;	// IMP=0x000000000006650f
- (void)handleConnected;	// IMP=0x0000000000066306
- (void)acknowledgeData:(unsigned long long)arg1 sentToFlow:(id)arg2;	// IMP=0x0000000000066300
- (void)sendData:(id)arg1 toClientFlow:(unsigned long long)arg2;	// IMP=0x0000000000066079
- (void)increaseWindowSizeForFlow:(unsigned long long)arg1 byBytes:(unsigned long long)arg2;	// IMP=0x0000000000065ff4
- (long long)sendData:(id)arg1 forFlow:(id)arg2;	// IMP=0x0000000000065fdf
- (void)closeFlow:(id)arg1;	// IMP=0x0000000000065fd9
- (id)handleFlowClosed:(unsigned long long)arg1 withFallbackReason:(long long)arg2;	// IMP=0x0000000000065f40
- (_Bool)hasFlow:(unsigned long long)arg1;	// IMP=0x0000000000065ecc
- (void)removeFlow:(unsigned long long)arg1;	// IMP=0x0000000000065d7b
- (void)startIdleTimer;	// IMP=0x00000000000659e5
- (unsigned long long)allocateFlowID;	// IMP=0x00000000000659da
- (_Bool)addNewFlow:(id)arg1;	// IMP=0x0000000000065785
@property(readonly, nonatomic) struct nw_protocol *protocol;
- (void)dealloc;	// IMP=0x000000000006572e
- (id)initWithEndpoint:(id)arg1 parameters:(id)arg2 appRule:(id)arg3 flowProperties:(id)arg4 delegate:(id)arg5;	// IMP=0x000000000006555e

@end

