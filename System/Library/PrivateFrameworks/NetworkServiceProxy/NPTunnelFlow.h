//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NPFlowProperties, NPTunnel, NSDate, NSPAppRule;
@protocol OS_dispatch_data;

@interface NPTunnelFlow : NSObject
{
    _Bool _hasTunnel;	// 8 = 0x8
    int _tunnelError;	// 12 = 0xc
    long long _fallbackReason;	// 16 = 0x10
    _Bool _isDirectConnectionViable;	// 24 = 0x18
    _Bool _fallbackDisabled;	// 25 = 0x19
    _Bool _enableDirectRace;	// 26 = 0x1a
    _Bool _disconnectedByApp;	// 27 = 0x1b
    _Bool _shouldComposeIntialData;	// 28 = 0x1c
    unsigned long long _hashKey;	// 32 = 0x20
    unsigned long long _identifier;	// 40 = 0x28
    NPTunnel *_tunnel;	// 48 = 0x30
    long long _state;	// 56 = 0x38
    NSPAppRule *_appRule;	// 64 = 0x40
    NPFlowProperties *_extraFlowProperties;	// 72 = 0x48
    NSDate *_firstTxByteTimestamp;	// 80 = 0x50
    NSDate *_startDate;	// 88 = 0x58
    void *_window;	// 96 = 0x60
    unsigned long long _initialBytesLeftOver;	// 104 = 0x68
    NSObject<OS_dispatch_data> *_savedData;	// 112 = 0x70
    void *_fallbackTimer;	// 120 = 0x78
    void *_telemetryTimer;	// 128 = 0x80
    double _fallbackDelay;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x000000000003ef8e
@property(nonatomic) double fallbackDelay; // @synthesize fallbackDelay=_fallbackDelay;
@property(nonatomic) void *telemetryTimer; // @synthesize telemetryTimer=_telemetryTimer;
@property(nonatomic) void *fallbackTimer; // @synthesize fallbackTimer=_fallbackTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_data> *savedData; // @synthesize savedData=_savedData;
@property(nonatomic) _Bool shouldComposeIntialData; // @synthesize shouldComposeIntialData=_shouldComposeIntialData;
@property(nonatomic) _Bool disconnectedByApp; // @synthesize disconnectedByApp=_disconnectedByApp;
@property(readonly, nonatomic) _Bool enableDirectRace; // @synthesize enableDirectRace=_enableDirectRace;
@property(nonatomic) _Bool fallbackDisabled; // @synthesize fallbackDisabled=_fallbackDisabled;
@property(nonatomic) _Bool isDirectConnectionViable; // @synthesize isDirectConnectionViable=_isDirectConnectionViable;
@property(nonatomic) unsigned long long initialBytesLeftOver; // @synthesize initialBytesLeftOver=_initialBytesLeftOver;
@property(readonly, nonatomic) void *window; // @synthesize window=_window;
@property(readonly, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSDate *firstTxByteTimestamp; // @synthesize firstTxByteTimestamp=_firstTxByteTimestamp;
@property(readonly, nonatomic) NPFlowProperties *extraFlowProperties; // @synthesize extraFlowProperties=_extraFlowProperties;
@property(readonly, nonatomic) NSPAppRule *appRule; // @synthesize appRule=_appRule;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(readonly, nonatomic) NPTunnel *tunnel; // @synthesize tunnel=_tunnel;
@property(nonatomic) unsigned long long identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) unsigned long long hashKey; // @synthesize hashKey=_hashKey;
- (void)handleTunnelReadyForData;	// IMP=0x000000000003ee49
- (void)reportTelemetry:(id)arg1 withService:(id)arg2 url:(id)arg3;	// IMP=0x000000000003ed80
- (void)createTelemetryDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003e8a4
- (id)combineStateInfo:(id)arg1 andConnectionInfo:(id)arg2;	// IMP=0x000000000003de96
@property(readonly, nonatomic) _Bool isBestEffort;
- (void)reportMetrics;	// IMP=0x000000000003de88
@property(nonatomic) long long fallbackReason;
- (id)appData;	// IMP=0x000000000003de53
- (void)setAppData:(id)arg1;	// IMP=0x000000000003de4d
- (id)copyConnectionInfo;	// IMP=0x000000000003dd0d
- (id)createFallbackConnectionInfoWithFallbackReason:(long long)arg1;	// IMP=0x000000000003dc50
- (void)processConnectionInfo:(id)arg1;	// IMP=0x000000000003db2f
- (void)handleTunnelCanHandleMoreData;	// IMP=0x000000000003dacb
- (void)handleTunnelDisconnected;	// IMP=0x000000000003da6c
- (void)handleTunnelConnected;	// IMP=0x000000000003d7ca
- (void)closeFromDirectConnectionWithError:(int)arg1;	// IMP=0x000000000003d6c5
- (void)closeFromTunnel;	// IMP=0x000000000003d2e6
@property(readonly, nonatomic) _Bool isClientFlowClosed;
- (void)closeClientFlowWithError:(int)arg1;	// IMP=0x000000000003d2d8
- (void)closeWithError:(int)arg1;	// IMP=0x000000000003d2c6
- (void)increaseWindowSize:(unsigned long long)arg1;	// IMP=0x000000000003d1d0
- (void)handleAppData:(id)arg1;	// IMP=0x000000000003ce24
- (void)stopDirectConnection;	// IMP=0x000000000003ce1e
- (void)startDirectConnection;	// IMP=0x000000000003ce18
- (void)readDataFromClient;	// IMP=0x000000000003ce12
- (void)sendDataToClient:(id)arg1 fromTunnel:(_Bool)arg2;	// IMP=0x000000000003cd9f
- (_Bool)shouldSendDataToClient:(id)arg1 fromTunnel:(_Bool)arg2;	// IMP=0x000000000003ca4b
- (void)cleanupLosingConnection:(_Bool)arg1;	// IMP=0x000000000003c9f1
- (void)dealloc;	// IMP=0x000000000003c9b7
- (id)initWithTunnel:(id)arg1 appRule:(id)arg2 hashKey:(unsigned long long)arg3 extraFlowProperties:(id)arg4;	// IMP=0x000000000003c789

@end

