//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSString, SUScriptColor;

@interface SUScriptCanvasContext
{
    struct CGContext *_context;	// 72 = 0x48
    struct CGPath *_contextPath;	// 80 = 0x50
    id _fillStyle;	// 88 = 0x58
    long long _fillStyleType;	// 96 = 0x60
    double _height;	// 104 = 0x68
    double _scale;	// 112 = 0x70
    double _shadowBlur;	// 120 = 0x78
    SUScriptColor *_shadowColor;	// 128 = 0x80
    double _shadowOffsetX;	// 136 = 0x88
    double _shadowOffsetY;	// 144 = 0x90
    id _strokeStyle;	// 152 = 0x98
    long long _strokeStyleType;	// 160 = 0xa0
    double _width;	// 168 = 0xa8
}

+ (void)initialize;	// IMP=0x00000000000aac31
+ (id)webScriptNameForSelector:(SEL)arg1;	// IMP=0x00000000000aab68
+ (id)webScriptNameForKeyName:(id)arg1;	// IMP=0x00000000000aab14
- (id)scriptAttributeKeys;	// IMP=0x00000000000aabce
- (id)attributeKeys;	// IMP=0x00000000000aabbc
- (void)_ntsApplyShadow;	// IMP=0x00000000000aaa6a
@property(readonly) double width;
@property(retain) id strokeStyle;
@property double shadowOffsetY;
@property double shadowOffsetX;
@property(retain) id shadowColor;
@property double shadowBlur;
@property double miterLimit;
@property double lineWidth;
@property(retain) id lineJoin;
@property(retain) id lineCap;
@property(retain) NSString *globalCompositeOperation;
@property double globalAlpha;
@property(retain) id fillStyle;
@property(readonly) double height;
- (id)_className;	// IMP=0x00000000000a9bd8
- (void)strokeRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;	// IMP=0x00000000000a9a59
- (void)stroke;	// IMP=0x00000000000a997e
- (void)translateWithX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000a9924
- (void)transformWithM11:(double)arg1 m12:(double)arg2 m21:(double)arg3 m22:(double)arg4 dx:(double)arg5 dy:(double)arg6;	// IMP=0x00000000000a9864
- (void)setTransformWithM11:(double)arg1 m12:(double)arg2 m21:(double)arg3 m22:(double)arg4 dx:(double)arg5 dy:(double)arg6;	// IMP=0x00000000000a97a4
- (void)scaleWithX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000a974a
- (void)saveState;	// IMP=0x00000000000a970c
- (void)rotateWithAngle:(double)arg1;	// IMP=0x00000000000a96bc
- (void)restoreState;	// IMP=0x00000000000a967e
- (void)quadraticCurveToCPX:(double)arg1 cpy:(double)arg2 x:(double)arg3 y:(double)arg4;	// IMP=0x00000000000a95c1
- (void)moveToX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000a9522
- (id)makeRadialGradientWithX0:(double)arg1 y0:(double)arg2 r0:(double)arg3 x1:(double)arg4 y1:(double)arg5 r1:(double)arg6;	// IMP=0x00000000000a94b5
- (id)makeLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;	// IMP=0x00000000000a945c
- (void)lineToX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000a93bd
- (_Bool)isPointInPathWithX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000a9355
- (void)fillRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;	// IMP=0x00000000000a91ec
- (void)fill;	// IMP=0x00000000000a911a
- (void)closePath;	// IMP=0x00000000000a90cc
- (void)clip;	// IMP=0x00000000000a908e
- (void)clearRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;	// IMP=0x00000000000a8ffb
- (struct CGPath *)copyCanvasPath;	// IMP=0x00000000000a8f69
- (id)copyCanvasImage;	// IMP=0x00000000000a8ed7
- (void)bezierCurveToCP1X:(double)arg1 cp1y:(double)arg2 cp2x:(double)arg3 cp2y:(double)arg4 x:(double)arg5 y:(double)arg6;	// IMP=0x00000000000a8dfc
- (void)beginPath;	// IMP=0x00000000000a8da3
- (void)arcWithX:(double)arg1 y:(double)arg2 radius:(double)arg3 startAngle:(double)arg4 endAngle:(double)arg5 antiClockwise:(_Bool)arg6;	// IMP=0x00000000000a8cc2
- (void)arcToX1:(double)arg1 y1:(double)arg2 x2:(double)arg3 y2:(double)arg4 radius:(double)arg5;	// IMP=0x00000000000a8bf6
- (void)dealloc;	// IMP=0x00000000000a8b66
- (id)initWithWidth:(double)arg1 height:(double)arg2;	// IMP=0x00000000000a8910

@end

