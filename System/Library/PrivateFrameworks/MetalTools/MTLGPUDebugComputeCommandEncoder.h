//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MetalTools/MTLGPUDebugCommandEncoder-Protocol.h>

@class MTLGPUDebugCommandBuffer, MTLGPUDebugComputePipelineState, NSString;
@protocol MTLBuffer;

@interface MTLGPUDebugComputeCommandEncoder <MTLGPUDebugCommandEncoder>
{
    unsigned int useResourceIteration;	// 36 = 0x24
    _Bool _enableUseResourceValidation;	// 40 = 0x28
    unsigned int _commandBufferJumpNestingLevel;	// 44 = 0x2c
    struct Options *_options;	// 48 = 0x30
    struct MTLGPUDebugStageBufferHandles _handles;	// 56 = 0x38
    struct MTLGPUDebugThreadgroupLengths _threadgroup;	// 1432 = 0x598
    struct GPUDebugEventUUIDPacket _dispatchID;	// 1816 = 0x718
    MTLGPUDebugComputePipelineState *_currentPipeline;	// 1840 = 0x730
    struct MTLGPUDebugBufferSubAlloc _reportBuffer;	// 1848 = 0x738
    id <MTLBuffer> _bufferUsageTable;	// 1864 = 0x748
    id <MTLBuffer> _textureUsageTable;	// 1872 = 0x750
}

- (id).cxx_construct;	// IMP=0x000000000009bd92
- (_Bool)encodeEndWhile;	// IMP=0x000000000009bd59
- (void)encodeStartWhile:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x000000000009bd20
- (_Bool)encodeEndIf;	// IMP=0x000000000009bce7
- (void)encodeStartIf:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x000000000009bcae
- (_Bool)encodeEndDoWhile:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x000000000009bc75
- (void)encodeStartDoWhile;	// IMP=0x000000000009bb98
- (void)executeCommandsInBuffer:(id)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned long long)arg3;	// IMP=0x000000000009ae95
- (void)executeCommandsInBuffer:(id)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x0000000000099f9e
- (void)endEncoding;	// IMP=0x0000000000099f16
- (void)setComputePipelineState:(id)arg1;	// IMP=0x0000000000099e4e
- (void)useHeaps:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000099e02
- (void)useHeap:(id)arg1;	// IMP=0x0000000000099d97
- (void)useResources:(const id *)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3;	// IMP=0x0000000000099d3f
- (void)useResource:(id)arg1 usage:(unsigned long long)arg2;	// IMP=0x0000000000099b5e
- (void)setThreadgroupMemoryLength:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000099af2
- (void)dispatchThreadgroupsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2 threadsPerThreadgroup:(CDStruct_14f26992)arg3;	// IMP=0x0000000000099a8f
- (void)dispatchThreadgroups:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x0000000000099a2e
- (void)dispatchThreadsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2;	// IMP=0x00000000000999dc
- (void)dispatchThreads:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x000000000009997b
- (void)setIntersectionFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x0000000000099922
- (void)setIntersectionFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x00000000000998ce
- (void)setVisibleFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x0000000000099875
- (void)setVisibleFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x0000000000099821
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x0000000000099719
- (void)setTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000009966e
- (void)setAccelerationStructures:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x0000000000099615
- (void)setAccelerationStructure:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x00000000000995c1
- (void)setBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x000000000009957f
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x000000000009950c
- (void)setBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000000994f5
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x0000000000099483
- (void)setComputePipelineStateBuffers:(id)arg1;	// IMP=0x0000000000099190
- (void)flushBindings;	// IMP=0x0000000000098e25
- (void)setKernelReportBuffer:(id)arg1 offset:(unsigned long long)arg2;	// IMP=0x0000000000098d87
- (void)setBufferUsageTable:(id)arg1 textureUsageTable:(id)arg2;	// IMP=0x0000000000098cca
- (id)temporaryBufferWithLength:(unsigned long long)arg1;	// IMP=0x0000000000098caa
- (id)temporaryBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000098c8a
@property(readonly) unsigned int encoderID;
- (id)initWithComputeCommandEncoder:(id)arg1 commandBuffer:(id)arg2 descriptor:(id)arg3 encoderID:(unsigned int)arg4;	// IMP=0x0000000000098bd0
- (id)initWithComputeCommandEncoder:(id)arg1 parent:(id)arg2 encoderID:(unsigned int)arg3;	// IMP=0x0000000000098b1a
- (void)_initBufferArgumentData:(id)arg1;	// IMP=0x0000000000098b14

// Remaining properties
@property(readonly) MTLGPUDebugCommandBuffer *commandBuffer; // @dynamic commandBuffer;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

