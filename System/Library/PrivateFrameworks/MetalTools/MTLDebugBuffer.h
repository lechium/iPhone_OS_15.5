//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MetalTools/MTLDebugResourcePurgeable-Protocol.h>

@class MTLDebugDevice, MTLDebugResource, NSMutableArray;

@interface MTLDebugBuffer <MTLDebugResourcePurgeable>
{
    MTLDebugResource *_common;	// 48 = 0x30
    unsigned long long _length;	// 56 = 0x38
    MTLDebugDevice *_debugDevice;	// 64 = 0x40
    NSMutableArray *_debugMarkers;	// 72 = 0x48
    struct atomic<int> _purgeableStateToken;	// 80 = 0x50
    _Bool _purgeableStateHasBeenSet;	// 84 = 0x54
    _Bool _isContentExposedToCPU;	// 85 = 0x55
    const void *_pointer;	// 88 = 0x58
}

@property(nonatomic) _Bool isContentExposedToCPU; // @synthesize isContentExposedToCPU=_isContentExposedToCPU;
@property(readonly, nonatomic) const void *pointer; // @synthesize pointer=_pointer;
@property(readonly, nonatomic) MTLDebugResource *common; // @synthesize common=_common;
- (_Bool)purgeableStateValidForRendering;	// IMP=0x000000000004fd7e
- (void)unlockPurgeableState;	// IMP=0x000000000004fd6d
- (void)lockPurgeableState;	// IMP=0x000000000004fd5c
- (void)removeAllDebugMarkers;	// IMP=0x000000000004fd13
- (void)addDebugMarker:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x000000000004fc4f
- (id)copyDebugMarkers;	// IMP=0x000000000004fc0c
- (void *)contents;	// IMP=0x000000000004fbc6
- (void)didModifyRange:(struct _NSRange)arg1;	// IMP=0x000000000004fb86
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;	// IMP=0x000000000004fab7
- (id)newLinearTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3 bytesPerImage:(unsigned long long)arg4;	// IMP=0x000000000004f4ec
- (id)newTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3;	// IMP=0x000000000004eb68
- (id)description;	// IMP=0x000000000004eb54
- (_Bool)doesAliasAnyResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000004eb37
- (_Bool)doesAliasAllResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000004eb1a
- (void)setParentGPUSize:(unsigned long long)arg1;	// IMP=0x000000000004eae9
- (unsigned long long)parentGPUSize;	// IMP=0x000000000004eabe
- (void)setParentGPUAddress:(unsigned long long)arg1;	// IMP=0x000000000004ea8d
- (unsigned long long)parentGPUAddress;	// IMP=0x000000000004ea62
- (unsigned long long)gpuAddress;	// IMP=0x000000000004ea37
- (void)makeAliasable;	// IMP=0x000000000004e9c1
- (_Bool)doesAliasResource:(id)arg1;	// IMP=0x000000000004e9a4
- (unsigned long long)resourceIndex;	// IMP=0x000000000004e979
- (void)dealloc;	// IMP=0x000000000004e921
- (id)initWithBuffer:(id)arg1 device:(id)arg2 bytes:(const void *)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000004e844
- (id)initWithBuffer:(id)arg1 heap:(id)arg2 device:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000004e785
- (id)initWithBuffer:(id)arg1 device:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000004e6c9
- (unsigned long long)length;	// IMP=0x000000000004e6b8

@end

