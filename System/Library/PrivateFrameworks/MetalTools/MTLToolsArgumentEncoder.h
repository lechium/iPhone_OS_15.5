//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MetalTools/MTLArgumentEncoderSPI-Protocol.h>

@class NSString, _MTLIndirectArgumentBufferLayout;
@protocol MTLDevice;

@interface MTLToolsArgumentEncoder <MTLArgumentEncoderSPI>
{
}

- (void)setIntersectionFunctionTables:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006cc44
- (void)setIntersectionFunctionTable:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006cbed
- (void)setVisibleFunctionTables:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006cb94
- (void)setVisibleFunctionTable:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006cb3d
- (void)setIntersectionFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x000000000006cae4
- (void)setIntersectionFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x000000000006ca8d
- (void)setVisibleFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x000000000006ca34
- (void)setVisibleFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x000000000006c9dd
- (void)setAccelerationStructure:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c986
- (id)newArgumentEncoderForBufferAtIndex:(unsigned long long)arg1;	// IMP=0x000000000006c8d5
- (void)setIndirectCommandBuffers:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c87c
- (void)setIndirectCommandBuffer:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c825
- (void)setComputePipelineStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c7cc
- (void)setComputePipelineState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c775
- (void)setRenderPipelineStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c71c
- (void)setRenderPipelineState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c6c5
- (void)setSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c601
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c53d
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x000000000006c472
- (void)setSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c41b
- (void)setTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c3c4
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x000000000006c365
- (void)setFunctionPointers:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000006c320
- (void)setFunctionPointer:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000006c2e0
- (void)setArgumentBuffer:(id)arg1 startOffset:(unsigned long long)arg2 arrayElement:(unsigned long long)arg3;	// IMP=0x000000000006c281
- (void)setArgumentBuffer:(id)arg1 offset:(unsigned long long)arg2;	// IMP=0x000000000006c22a
@property(readonly, nonatomic) _MTLIndirectArgumentBufferLayout *layout;
@property(readonly) id <MTLDevice> device;
@property(readonly) unsigned long long alignment;
- (void *)constantDataAtIndex:(unsigned long long)arg1;	// IMP=0x000000000006c159
@property(readonly) unsigned long long encodedLength;
@property(copy) NSString *label;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

