//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MetalTools/MTLDeviceSPI-Protocol.h>

@class MTLGPUBVHBuilder, MTLTargetDeviceArchitecture, MTLToolsObjectCache, NSArray, NSDictionary, NSString;
@protocol MTLDeviceSPI;

@interface MTLToolsDevice <MTLDeviceSPI>
{
    id <MTLDeviceSPI> _deviceWrapper;	// 40 = 0x28
    MTLToolsObjectCache *functionHandleObjectCache;	// 48 = 0x30
    MTLToolsObjectCache *dynamicLibraryObjectCache;	// 56 = 0x38
    MTLToolsObjectCache *sourceLibraryObjectCache;	// 64 = 0x40
    MTLToolsObjectCache *functionObjectCache;	// 72 = 0x48
    MTLToolsObjectCache *depthStencilObjectCache;	// 80 = 0x50
    MTLToolsObjectCache *samplerObjectCache;	// 88 = 0x58
    _Bool _integrated;	// 96 = 0x60
    unsigned long long _memorySize;	// 104 = 0x68
}

+ (void)registerDevices;	// IMP=0x000000000001e170
- (void).cxx_destruct;	// IMP=0x0000000000026ea3
@property(readonly) unsigned long long memorySize; // @synthesize memorySize=_memorySize;
@property(readonly, getter=isIntegrated) _Bool integrated; // @synthesize integrated=_integrated;
- (id)getSamplerStateForBaseObject:(id)arg1 descriptor:(id)arg2;	// IMP=0x0000000000026de4
- (id)getDepthStencilStateForBaseObject:(id)arg1 descriptor:(id)arg2;	// IMP=0x0000000000026d48
- (id)getFunctionForBaseObject:(id)arg1 library:(id)arg2;	// IMP=0x0000000000026cb7
- (id)getDynamicLibraryForBaseObject:(id)arg1;	// IMP=0x0000000000026c26
@property(readonly, nonatomic) _Bool supportsStackOverflowErrorCode;
@property(readonly, nonatomic) _Bool supportsCommandBufferJump;
@property(readonly, nonatomic) _Bool supportsLossyCompression;
@property(readonly, nonatomic) _Bool supportsAtomicUlongVoidMinMax;
@property(readonly, nonatomic) _Bool supportsSparseDepthAttachments;
@property(readonly, nonatomic) _Bool supportsBfloat16Format;
@property(readonly, nonatomic) _Bool supportsSIMDShuffleAndFill;
@property(readonly, nonatomic) _Bool supportsQuadReduction;
@property(readonly, nonatomic) _Bool supportsInterchangeTiled;
@property(readonly, nonatomic) _Bool supportsSIMDGroupMatrix;
@property(readonly, nonatomic) _Bool supportsComputeCompressedTextureWrite;
@property(readonly, nonatomic) _Bool supportsDevicePartitioning;
@property(readonly, nonatomic) _Bool supportsForkJoin;
@property(readonly, nonatomic) _Bool supportsBufferBoundsChecking;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsXR;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsPQ;
@property(readonly, nonatomic) _Bool supportsAnisoSampleFix;
@property(readonly, nonatomic) _Bool supportsRTZRounding;
@property(readonly, nonatomic) _Bool supportsFloat16InfNanFiltering;
@property(readonly, nonatomic) _Bool supportsFloat16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsForceSeamsOnCubemaps;
@property(readonly, nonatomic) _Bool supportsTexture2DMultisampleArray;
@property(readonly, nonatomic) _Bool supportsDepthClipModeClampExtended;
@property(readonly, nonatomic) _Bool supportsSIMDReduction;
@property(readonly, nonatomic) _Bool supportsMirrorClampToEdgeSamplerMode;
@property(readonly, nonatomic) _Bool supportsBlackOrWhiteSamplerBorderColors;
@property(readonly, nonatomic) _Bool supportsShaderBarycentricCoordinates;
@property(readonly, nonatomic) _Bool supportsPrimitiveMotionBlur;
@property(readonly, nonatomic) _Bool supportsRaytracingFromRender;
@property(readonly, nonatomic) _Bool supportsSharedFunctionTables;
@property(readonly, nonatomic) _Bool supportsFunctionPointersFromRender;
@property(readonly, nonatomic) _Bool supportsRenderDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsStatefulDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsFunctionPointers;
@property(readonly, nonatomic) _Bool supportsIndirectWritableTextures;
@property(readonly, nonatomic) _Bool supportsSparseHeaps;
@property(readonly, nonatomic) _Bool supportsSparseTextures;
@property(readonly, nonatomic) _Bool supportsASTCHDRTextureCompression;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsXR;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsPQ;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats;
@property(readonly, nonatomic) _Bool supportsVariableRateRasterization;
@property(readonly, nonatomic) _Bool supportsWritableArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsSIMDShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsShaderMinLODClamp;
@property(readonly, nonatomic) _Bool supportsSIMDGroup;
@property(readonly, nonatomic) _Bool supportsUnalignedVertexFetch;
@property(readonly, nonatomic) _Bool supportsFP32TessFactors;
@property(readonly, nonatomic) _Bool supportsStencilFeedback;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolveFilter;
@property(readonly, nonatomic) _Bool supportsIndirectTessellation;
@property(readonly, nonatomic) _Bool supportsViewportAndScissorArray;
@property(readonly, nonatomic) _Bool supportsLayeredRendering;
@property(readonly, nonatomic) _Bool supports2DLinearTexArraySPI;
@property(readonly, nonatomic) _Bool supportsSeparateVisibilityAndShadingRate;
@property(readonly, nonatomic) _Bool supportsNonSquareTileShaders;
@property(readonly, nonatomic) _Bool supportsLinearTexture2DArray;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroupsColorAttachment;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroups;
@property(readonly, nonatomic) _Bool supportsRenderPassWithoutRenderTarget;
@property(readonly, nonatomic) _Bool supportsConcurrentComputeDispatch;
@property(readonly, nonatomic) _Bool supportsQuadShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsTextureCubeArray;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureCubeArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArguments;
@property(readonly, nonatomic) _Bool supportsNonUniformThreadgroupSize;
@property(readonly, nonatomic) _Bool supportsMipLevelsSmallerThanBlockSize;
@property(readonly, nonatomic) _Bool supportsPostDepthCoverage;
@property(readonly, nonatomic) _Bool supportsNativeHardwareFP16;
@property(readonly, nonatomic) _Bool supportsImageBlockSampleCoverageControl;
@property(readonly, nonatomic) _Bool supportsTileShaders;
@property(readonly, nonatomic) _Bool supportsImageBlocks;
@property(readonly, nonatomic) _Bool supportsRenderTextureWrites;
@property(readonly, nonatomic) _Bool supportsQuadGroup;
@property(readonly, nonatomic) _Bool supportsMemoryOrderAtomics;
@property(readonly, nonatomic) _Bool supportsAlphaYUVFormats;
@property(readonly, nonatomic) _Bool supportsTextureSwizzle;
@property(readonly, nonatomic) _Bool supportsTextureOutOfBoundsReads;
@property(readonly, nonatomic) _Bool supportsNorm16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsIndirectTextures;
@property(readonly, nonatomic) _Bool supportsIndirectStageInRegion;
@property(readonly, nonatomic) _Bool supportsCMPIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsGFXIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolveFilter;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolve;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolve;
@property(readonly, nonatomic) _Bool supportsSamplerCompareFunction;
@property(readonly, nonatomic) _Bool supportsMutableTier1ArgumentBuffers;
@property(readonly, nonatomic) _Bool supportsCombinedMSAAStoreAndResolveAction;
@property(readonly, nonatomic) _Bool supportsArrayOfSamplers;
@property(readonly, nonatomic) _Bool supportsArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsReadWriteBufferArguments;
@property(readonly, nonatomic) _Bool supportsTessellation;
@property(readonly, nonatomic) _Bool supportsIndirectDrawAndDispatch;
@property(readonly, nonatomic) _Bool supportsBaseVertexInstanceDrawing;
@property(readonly, nonatomic) _Bool supportsCountingOcclusionQuery;
@property(readonly, nonatomic) _Bool supportsFragmentBufferWrites;
@property(readonly, nonatomic) _Bool supportsExtendedXR10Formats;
@property(readonly, nonatomic) _Bool supports3DASTCTextures;
@property(readonly, nonatomic) _Bool supportsPacked32TextureBufferWrites;
@property(readonly, nonatomic) _Bool supportsDepthClipMode;
@property(readonly, nonatomic) _Bool supportsSRGBwrites;
@property(readonly, nonatomic) _Bool supportsPublicXR10Formats;
@property(readonly, nonatomic) _Bool supportsExtendedYUVFormats;
@property(readonly, nonatomic) _Bool supportsASTCTextureCompression;
@property(readonly, nonatomic) _Bool supportsBinaryLibraries;
@property(readonly, nonatomic) _Bool supportsBinaryArchives;
@property(readonly, nonatomic) _Bool supportsIABHashForTools;
@property(readonly, nonatomic) _Bool supportsDynamicControlPointCount;
@property(readonly, nonatomic) _Bool supportsRenderTargetTextureRotation;
@property(readonly, nonatomic) _Bool supportsCompressedTextureViewSPI;
@property(readonly, nonatomic) _Bool supportsGPUStatistics;
@property(readonly, nonatomic) _Bool supportsSeparateDepthStencil;
@property(readonly, nonatomic) _Bool supportsRelaxedTextureViewRequirements;
@property(readonly, nonatomic) _Bool supportsShaderLODAverage;
@property(readonly, nonatomic) _Bool supportsInvariantVertexPosition;
@property(readonly, nonatomic) _Bool supportsFastMathInfNaNPropagation;
@property(readonly, nonatomic) _Bool supportsMemorylessRenderTargets;
@property(readonly, nonatomic) _Bool supportsRenderToLinearTextures;
@property(readonly, nonatomic) _Bool supportsProgrammableBlending;
@property(readonly, nonatomic) _Bool supportsBufferWithIOSurface;
@property(readonly, nonatomic) _Bool supportsFragmentOnlyEncoders;
@property(readonly, nonatomic) _Bool supportsPipelineLibraries;
@property(readonly, nonatomic) _Bool supportsLinearTextureFromSharedBuffer;
@property(readonly, nonatomic) _Bool supportsSharedStorageTextures;
@property(readonly, nonatomic) _Bool supportsSharedStorageHeapResources;
@property(readonly, nonatomic) _Bool supportsNonPrivateMSAATextures;
@property(readonly, nonatomic) _Bool supportsNonPrivateDepthStencilTextures;
@property(readonly, nonatomic) _Bool supportsLimitedYUVFormats;
@property(readonly, nonatomic) _Bool supportsBufferPrefetchStatistics;
@property(readonly, nonatomic) _Bool supportsSharedTextureHandles;
@property(readonly, nonatomic) _Bool supportsNonZeroTextureWriteLOD;
@property(readonly, nonatomic) _Bool supportsLateEvalEvent;
@property(readonly, nonatomic) _Bool supportsFixedLinePointFillDepthGradient;
@property(readonly, nonatomic) _Bool supportsInt64;
@property(readonly, nonatomic) _Bool supportsPullModelInterpolation;
@property(readonly, nonatomic) _Bool supportsOpenCLTextureWriteSwizzles;
@property(readonly, nonatomic) _Bool supportsPlacementHeaps;
@property(readonly, nonatomic) _Bool supportsVertexAmplification;
@property(readonly, nonatomic) _Bool supportsQueryTextureLOD;
@property(readonly, nonatomic) _Bool supports32BitFloatFiltering;
@property(readonly, nonatomic) _Bool supports32BitMSAA;
@property(readonly, nonatomic) _Bool supports32bpcMSAATextures;
@property(readonly, nonatomic) _Bool supportsTLS;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationCompute;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationRender;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocation;
@property(readonly, nonatomic) _Bool supportsPrimitiveRestartOverride;
@property(readonly, nonatomic) _Bool supportsRGBA10A2Gamma;
@property(readonly, nonatomic) _Bool supports3DBCTextures;
@property(readonly, nonatomic) _Bool supportsBCTextureCompression;
@property(readonly, nonatomic) _Bool supportsSamplerAddressModeClampToHalfBorder;
@property(readonly, nonatomic) _Bool supportsCustomBorderColor;
@property(readonly, nonatomic) _Bool supportsLargeFramebufferConfigs;
@property(readonly, nonatomic) _Bool supportsProgrammableSamplePositions;
@property(readonly, nonatomic) _Bool supportsStreamingCodecSignaling;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArgumentsTier2;
@property(readonly, nonatomic) _Bool supportsArgumentBuffersTier2;
@property(readonly, nonatomic) _Bool supportsRenderMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsComputeMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsBufferlessClientStorageTexture;
- (id)newIntersectionFunctionTableWithDescriptor:(id)arg1;	// IMP=0x0000000000025028
- (id)newVisibleFunctionTableWithDescriptor:(id)arg1;	// IMP=0x0000000000024fb6
@property(readonly, getter=isAnisoSampleFixSupported) _Bool AnisoSampleFixSupported;
- (_Bool)supportsTextureWriteFPRoundingMode:(long long)arg1;	// IMP=0x0000000000024f79
@property(readonly) long long defaultTextureWriteRoundingMode;
- (_Bool)supportsTextureWriteRoundingMode:(long long)arg1;	// IMP=0x0000000000024f1d
@property(readonly, getter=isRTZRoundingSupported) _Bool RTZRoundingSupported;
- (id)newAccelerationStructureWithBuffer:(id)arg1 offset:(unsigned long long)arg2;	// IMP=0x0000000000024e66
- (_Bool)isCompatibleWithAccelerationStructure:(CDStruct_1987c1e3)arg1;	// IMP=0x0000000000024e35
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1 resourceIndex:(unsigned long long)arg2;	// IMP=0x0000000000024dba
- (id)newAccelerationStructureWithDescriptor:(id)arg1;	// IMP=0x0000000000024d4e
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1;	// IMP=0x0000000000024ce2
- (CDStruct_14f26992)accelerationStructureSizesWithDescriptor:(id)arg1;	// IMP=0x0000000000024c90
- (_Bool)supportsVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x0000000000024c5f
- (id)newDynamicLibrary:(id)arg1 computeDescriptor:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000024bca
- (id)newDynamicLibrary:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000024b4f
- (id)newDynamicLibraryWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000024add
- (id)newDynamicLibraryWithURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000024a71
- (id)newDynamicLibraryFromURL:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000024a5f
- (id)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000024996
- (id)newBinaryArchiveWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000248e2
@property(readonly) unsigned long long deviceCreationFlags;
- (_Bool)supportsPrimitiveType:(unsigned long long)arg1;	// IMP=0x0000000000024886
- (unsigned long long)getSupportedCommandBufferErrorOptions;	// IMP=0x000000000002485b
@property(nonatomic) unsigned long long commandBufferErrorOptions;
@property(readonly, getter=isPlacementHeapSupported) _Bool placementHeapSupported;
- (id)newCounterSampleBufferWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000024720
- (_Bool)supportsCounterSampling:(unsigned long long)arg1;	// IMP=0x00000000000246ef
- (void)sampleTimestamps:(unsigned long long *)arg1 gpuTimestamp:(unsigned long long *)arg2;	// IMP=0x00000000000246af
@property(readonly) NSArray *counterSets;
- (void)convertSparseTileRegions:(const CDStruct_1e3be3a8 *)arg1 toPixelRegions:(CDStruct_1e3be3a8 *)arg2 withTileSize:(CDStruct_14f26992)arg3 numRegions:(unsigned long long)arg4;	// IMP=0x000000000002463f
- (void)convertSparsePixelRegions:(const CDStruct_1e3be3a8 *)arg1 toTileRegions:(CDStruct_1e3be3a8 *)arg2 withTileSize:(CDStruct_14f26992)arg3 alignmentMode:(unsigned long long)arg4 numRegions:(unsigned long long)arg5;	// IMP=0x00000000000245eb
@property(readonly) unsigned long long sparseTileSizeInBytes;
- (_Bool)setResourcesPurgeableState:(id *)arg1 newState:(unsigned long long)arg2 oldState:(unsigned long long *)arg3 count:(int)arg4;	// IMP=0x0000000000024513
- (void)allowLibrariesFromOtherPlatforms;	// IMP=0x00000000000244e8
@property(readonly) unsigned long long currentAllocatedSize;
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0000000000024461
- (void)setupMPSFunctionTable:(struct MPSFunctionTable *)arg1;	// IMP=0x00000000000243ec
- (id)newTextureLayoutWithDescriptor:(id)arg1 isHeapOrBufferBacked:(_Bool)arg2;	// IMP=0x0000000000024338
- (id)newLateEvalEvent;	// IMP=0x000000000002428f
- (id)newSharedEventWithHandle:(id)arg1;	// IMP=0x0000000000024223
- (id)newSharedEventWithMachPort:(unsigned int)arg1;	// IMP=0x00000000000241b9
- (id)newSharedEvent;	// IMP=0x0000000000024155
- (id)newEvent;	// IMP=0x00000000000240ac
- (id)newTextureWithDescriptor:(id)arg1 iosurface:(struct __IOSurface *)arg2 plane:(unsigned long long)arg3;	// IMP=0x0000000000023fe3
@property(nonatomic) _Bool metalAssertionsEnabled;
- (id)newResourceGroupFromResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000023e99
- (CDStruct_14f26992)sparseTileSizeWithTextureType:(unsigned long long)arg1 pixelFormat:(unsigned long long)arg2 sampleCount:(unsigned long long)arg3;	// IMP=0x0000000000023e33
- (CDStruct_14f26992)tileSizeWithSparsePageSize:(unsigned long long)arg1 textureType:(unsigned long long)arg2 pixelFormat:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4;	// IMP=0x0000000000023dbd
@property(readonly) unsigned long long sparseTexturesSupport;
@property(readonly, getter=isFixedLinePointFillDepthGradientSupported) _Bool FixedLinePointFillDepthGradientSupported;
@property(readonly, getter=isQuadDataSharingSupported) _Bool quadDataSharingSupported;
@property(readonly, getter=isLargeMRTSupported) _Bool largeMRTSupported;
@property(readonly, getter=areBarycentricCoordsSupported) _Bool barycentricCoordsSupported;
@property(readonly, getter=isClampToHalfBorderSupported) _Bool ClampToHalfBorderSupported;
@property(readonly, getter=isCustomBorderColorSupported) _Bool CustomBorderColorSupported;
@property(readonly, getter=isRGB10A2GammaSupported) _Bool RGB10A2GammaSupported;
@property(readonly, getter=isMsaa32bSupported) _Bool msaa32bSupported;
@property(readonly, getter=isBCTextureCompressionSupported) _Bool BCTextureCompressionSupported;
@property(readonly, getter=isFloat32FilteringSupported) _Bool float32FilteringSupported;
@property(readonly, getter=areRasterOrderGroupsSupported) _Bool rasterOrderGroupsSupported;
@property(readonly) unsigned long long argumentBuffersSupport;
@property(readonly) unsigned long long readWriteTextureSupport;
@property(readonly) unsigned long long maxBufferLength;
@property(readonly) unsigned long long maxConstantBufferArguments;
@property(readonly) unsigned long long maxPredicatedNestingDepth;
@property(readonly) unsigned long long maxComputeAttributes;
@property(readonly) unsigned long long maxTextureBufferWidth;
@property(readonly) unsigned long long maxVertexAmplificationCount;
@property(readonly) unsigned long long maxVertexAmplificationFactor;
@property(readonly) unsigned long long maxCustomSamplePositions;
@property(readonly) unsigned long long maxViewportCount;
@property(readonly) unsigned long long maxFenceInstances;
@property(readonly) unsigned long long maxIndirectSamplersPerDevice;
@property(readonly) unsigned long long maxIndirectSamplers;
@property(readonly) unsigned long long maxIndirectTextures;
@property(readonly) unsigned long long maxIndirectBuffers;
@property(readonly) unsigned long long maxTessellationFactor;
@property(readonly) unsigned long long maxInterpolatedComponents;
@property(readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes;
@property(readonly) unsigned long long maxFunctionConstantIndices;
@property(readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long deviceLinearTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceTextureAlignmentBytes;
@property(readonly) unsigned long long linearTextureAlignmentBytes;
@property(readonly) unsigned long long maxTextureLayers;
@property(readonly) unsigned long long maxTextureDimensionCube;
@property(readonly) unsigned long long maxTextureDepth3D;
@property(readonly) unsigned long long maxTextureHeight3D;
@property(readonly) unsigned long long maxTextureWidth3D;
@property(readonly) unsigned long long maxTextureHeight2D;
@property(readonly) unsigned long long maxTextureWidth2D;
@property(readonly) unsigned long long maxTextureWidth1D;
@property(readonly) unsigned long long minBufferNoCopyAlignmentBytes;
@property(readonly) unsigned long long minConstantBufferAlignmentBytes;
@property(readonly) unsigned long long maxVisibilityQueryOffset;
@property(readonly) float maxPointSize;
@property(readonly) float maxLineWidth;
@property(readonly) unsigned long long maxComputeThreadgroupMemory;
@property(readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup;
@property(readonly) unsigned long long maxComputeLocalMemorySizes;
@property(readonly) unsigned long long maxComputeInlineDataSize;
@property(readonly) unsigned long long maxComputeSamplers;
@property(readonly) unsigned long long maxComputeTextures;
@property(readonly) unsigned long long maxComputeBuffers;
@property(readonly) unsigned long long maxFragmentInlineDataSize;
@property(readonly) unsigned long long maxFragmentSamplers;
@property(readonly) unsigned long long maxFragmentTextures;
@property(readonly) unsigned long long maxFragmentBuffers;
@property(readonly) unsigned long long maxInterpolants;
@property(readonly) unsigned long long maxVertexInlineDataSize;
@property(readonly) unsigned long long maxVertexSamplers;
@property(readonly) unsigned long long maxVertexTextures;
@property(readonly) unsigned long long maxVertexBuffers;
@property(readonly) unsigned long long maxVertexAttributes;
@property(readonly) unsigned long long maxColorAttachments;
@property(readonly) unsigned long long minTilePixels;
@property(readonly) unsigned long long maxTileInlineDataSize;
@property(readonly) unsigned long long maxTileSamplers;
@property(readonly) unsigned long long maxTileTextures;
@property(readonly) unsigned long long maxTileBuffers;
@property(readonly) unsigned long long linearTextureArrayAlignmentSlice;
@property(readonly) unsigned long long linearTextureArrayAlignmentBytes;
@property(readonly) unsigned long long maxFramebufferStorageBits;
@property(readonly) _Bool supportPriorityBand;
@property(readonly) const CDStruct_1825b841 *limits;
@property(readonly) unsigned long long featureProfile;
@property(readonly) unsigned long long doubleFPConfig;
@property(readonly) unsigned long long singleFPConfig;
@property(readonly) unsigned long long halfFPConfig;
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long *)arg2 indexCount:(unsigned long long)arg3;	// IMP=0x0000000000022fb2
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)arg1;	// IMP=0x0000000000022f81
- (id)newBufferWithIOSurface:(struct __IOSurface *)arg1;	// IMP=0x0000000000022ed0
- (id)_deviceWrapper;	// IMP=0x0000000000022e8b
- (void)_setDeviceWrapper:(id)arg1;	// IMP=0x0000000000022e77
@property(readonly) unsigned long long maxRasterizationRateLayerCount;
- (id)newRasterizationRateMapWithDescriptor:(id)arg1;	// IMP=0x0000000000022d9b
- (_Bool)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;	// IMP=0x0000000000022d6a
- (void)getDefaultSamplePositions:(CDStruct_b2fbf00d *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000022d2a
@property(readonly, getter=areProgrammableSamplePositionsSupported) _Bool programmableSamplePositionsSupported;
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000022cce
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000022c9d
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000022c6c
- (_Bool)supportsSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000022c3b
- (_Bool)supportsTextureSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000022c0a
- (_Bool)supportsFamily:(long long)arg1;	// IMP=0x0000000000022bd9
- (_Bool)supportsFeatureSet:(unsigned long long)arg1;	// IMP=0x0000000000022ba8
- (_Bool)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;	// IMP=0x0000000000022b77
- (_Bool)deviceSupportsFeatureSet:(unsigned long long)arg1;	// IMP=0x0000000000022b46
- (void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000229f3
- (id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x000000000002280b
- (id)newLibraryWithCIFiltersForComputePipeline:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x00000000000227f9
- (id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x00000000000227e7
- (id)newDagStringWithGraphs:(id)arg1;	// IMP=0x00000000000227b6
- (id)newLibraryWithDescriptorSPI:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000227a4
- (void)newLibraryWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022792
- (id)newLibraryWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000022780
- (id)newLibraryWithStitchedDescriptorSPI:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000226ec
- (void)newLibraryWithStitchedDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000225f3
- (id)newLibraryWithStitchedDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002255f
- (id)newLibraryWithDAG:(id)arg1 functions:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000022374
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;	// IMP=0x00000000000222fa
- (void)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000221ff
- (void)newRenderPipelineStateWithTileDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022115
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000022073
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000021fe8
- (void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000021ee4
- (void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021def
- (id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000021d50
- (id)newComputePipelineStateWithFunction:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000021cc4
- (void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000021bc0
- (void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000021ad6
- (id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000021a35
- (id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000219aa
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000218c0
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000217c5
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000021723
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000021698
- (id)unwrapMTLFunctionDescriptor:(id)arg1;	// IMP=0x000000000002161c
- (id)unwrapMTLStitchedLibraryDescriptor:(id)arg1;	// IMP=0x00000000000215a0
- (id)unwrapMTLRelocations:(id)arg1;	// IMP=0x00000000000212f0
- (id)unwrapMTLCompileOptions:(id)arg1;	// IMP=0x0000000000021126
- (id)unwrapMTLTileRenderPipelineDescriptor:(id)arg1;	// IMP=0x0000000000021057
- (id)unwrapMTLComputePipelineDescriptor:(id)arg1;	// IMP=0x0000000000020c45
- (unsigned long long)debugPipelineOptions:(unsigned long long)arg1 includePipelinePerfStats:(_Bool)arg2;	// IMP=0x0000000000020c29
- (id)unwrapMTLRenderPipelineDescriptor:(id)arg1;	// IMP=0x00000000000206d5
@property(readonly) unsigned long long maxArgumentBufferSamplerCount;
@property(readonly) unsigned long long maxThreadgroupMemoryLength;
- (id)newArgumentEncoderWithArguments:(id)arg1 structType:(id *)arg2;	// IMP=0x00000000000205cb
- (id)newArgumentEncoderWithArguments:(id)arg1;	// IMP=0x000000000002051a
- (id)newArgumentEncoderWithLayout:(id)arg1;	// IMP=0x00000000000204e9
- (id)newIndirectArgumentEncoderWithLayout:(id)arg1;	// IMP=0x00000000000204b8
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;	// IMP=0x0000000000020487
@property(copy, nonatomic) NSDictionary *pluginData;
@property(readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities;
- (id)newFence;	// IMP=0x0000000000020357
- (id)newHeapWithDescriptor:(id)arg1;	// IMP=0x00000000000202a6
- (CDStruct_4bcfbbae)heapBufferSizeAndAlignWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000020266
- (CDStruct_4bcfbbae)heapTextureSizeAndAlignWithDescriptor:(id)arg1;	// IMP=0x0000000000020235
- (id)newStructTypeWithSerializedData:(id)arg1;	// IMP=0x0000000000020204
- (id)serializeStructType:(id)arg1;	// IMP=0x00000000000201d3
- (id)newComputePipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;	// IMP=0x0000000000020193
- (id)newRenderPipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;	// IMP=0x0000000000020153
- (id)serializeRenderPipelineDescriptor:(id)arg1;	// IMP=0x0000000000020122
- (id)newPipelineLibraryWithFilePath:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002006e
- (id)endCollectingPipelineDescriptors;	// IMP=0x0000000000020043
- (void)startCollectingPipelineDescriptors;	// IMP=0x0000000000020018
- (id)newLibraryWithData:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ff64
- (id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001fe62
- (id)newLibraryWithURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001fdae
- (id)newLibraryWithFile:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001fcfa
- (id)newDefaultLibraryWithBundle:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001fc46
- (id)newDefaultLibrary;	// IMP=0x000000000001fb9d
- (id)newSamplerStateWithDescriptor:(id)arg1;	// IMP=0x000000000001fb3f
- (id)newTextureWithDescriptor:(id)arg1;	// IMP=0x000000000001fa8e
- (id)newDepthStencilStateWithDescriptor:(id)arg1;	// IMP=0x000000000001fa30
- (id)newTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 descriptor:(id)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x000000000001f95f
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000001f896
- (id)newIndirectComputeCommandEncoderWithBuffer:(id)arg1;	// IMP=0x000000000001f865
- (id)newIndirectRenderCommandEncoderWithBuffer:(id)arg1;	// IMP=0x000000000001f834
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000001f7ef
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x000000000001f71e
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000001f655
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000001f5a1
- (id)newCommandQueueWithDescriptor:(id)arg1;	// IMP=0x000000000001f4f0
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1;	// IMP=0x000000000001f43f
- (id)newCommandQueue;	// IMP=0x000000000001f396
- (void)compilerPropagatesThreadPriority:(_Bool)arg1;	// IMP=0x000000000001f367
- (void *)getShaderCacheKeys;	// IMP=0x000000000001f33c
- (_Bool)copyShaderCacheToPath:(id)arg1;	// IMP=0x000000000001f30b
- (CDStruct_1987c1e3)pipelineCacheStats;	// IMP=0x000000000001f2e0
- (CDStruct_1987c1e3)libraryCacheStats;	// IMP=0x000000000001f2b5
- (void)unloadShaderCaches;	// IMP=0x000000000001f28a
@property(readonly, getter=isDepth24Stencil8PixelFormatSupported) _Bool depth24Stencil8PixelFormatSupported;
@property(readonly) unsigned long long dedicatedMemorySize;
@property(readonly) unsigned long long sharedMemorySize;
@property(readonly) unsigned long long recommendedMaxWorkingSetSize;
@property(readonly) _Bool hasUnifiedMemory;
@property(readonly, getter=isRemovable) _Bool removable;
@property(readonly, getter=isHeadless) _Bool headless;
@property(readonly, getter=isLowPower) _Bool lowPower;
@property(readonly) CDStruct_14f26992 maxThreadsPerThreadgroup;
- (id)newBufferWithDescriptor:(id)arg1;	// IMP=0x000000000001f034
- (_Bool)reserveGPUAddressRange:(struct _NSRange)arg1;	// IMP=0x000000000001eff4
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4 deallocator:(CDUnknownBlockType)arg5;	// IMP=0x000000000001efa0
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4;	// IMP=0x000000000001ef4c
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 gpuAddress:(unsigned long long)arg3;	// IMP=0x000000000001ef07
@property(getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) _Bool gpuAssertionsEnabled;
- (_Bool)validateDynamicLibraryURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ee6d
- (_Bool)validateDynamicLibrary:(id)arg1 state:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000000001ee28
- (id)loadDynamicLibrariesForFunction:(id)arg1 insertLibraries:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x000000000001eae4
- (id)loadDynamicLibrariesForFunction:(id)arg1 insertLibraries:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001eacc
- (id)loadDynamicLibrariesForComputeDescriptor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000001e8e7
- (id)loadDynamicLibrariesForComputeDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001e8d0
@property(readonly) MTLTargetDeviceArchitecture *targetDeviceArchitecture;
@property(readonly) const struct MTLTargetDeviceArch *targetDeviceInfo;
- (id)productName;	// IMP=0x000000000001e84f
- (id)familyName;	// IMP=0x000000000001e824
- (id)vendorName;	// IMP=0x000000000001e7f9
@property(readonly) unsigned long long registryID;
@property(readonly) NSString *name;
@property(readonly) MTLGPUBVHBuilder *GPUBVHBuilder;
@property(readonly) _Bool requiresRaytracingEmulation;
@property(readonly) _Bool supportsRaytracing;
- (id)reportLeaks;	// IMP=0x000000000001e6f7
- (void)unmapShaderSampleBuffer;	// IMP=0x000000000001e6cc
- (_Bool)mapShaderSampleBufferWithBuffer:(CDStruct_32a7f38a *)arg1 capacity:(unsigned long long)arg2 size:(unsigned long long)arg3;	// IMP=0x000000000001e687
@property _Bool shaderDebugInfoCaching;
- (id)newFunctionWithGLIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x000000000001e5a0
- (id)newFunctionWithGLIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x000000000001e522
- (id)newFunctionWithGLESIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x000000000001e495
- (id)newFunctionWithGLESIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x000000000001e417
- (id)newFunctionWithGLCoreIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;	// IMP=0x000000000001e38a
- (id)newFunctionWithGLCoreIR:(void *)arg1 functionType:(unsigned long long)arg2;	// IMP=0x000000000001e30c
- (void)notifyExternalReferencesNonZeroOnDealloc:(id)arg1;	// IMP=0x000000000001e306
- (void)dealloc;	// IMP=0x000000000001e276
- (id)initWithBaseObject:(id)arg1 parent:(id)arg2;	// IMP=0x000000000001e176

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

