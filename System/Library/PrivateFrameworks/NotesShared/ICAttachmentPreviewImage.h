//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <NotesShared/ICAttachmentPreviewImageUI-Protocol.h>

@class ICAccount, ICAttachment, NSData, NSDate, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface ICAttachmentPreviewImage <ICAttachmentPreviewImageUI>
{
    _Bool suppressFileDeletion;	// 8 = 0x8
    ICAccount *placeholderAccount;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_fileQueue;	// 24 = 0x18
    unsigned long long _imageID;	// 32 = 0x20
}

+ (id)previewImageURLsForIdentifier:(id)arg1 account:(id)arg2;	// IMP=0x000000000018c11c
+ (id)identifierForContentIdentifier:(id)arg1 scale:(double)arg2 width:(double)arg3 height:(double)arg4 appearanceType:(unsigned long long)arg5;	// IMP=0x000000000018b5dd
+ (void)waitUntilAllFileWritesAreFinished;	// IMP=0x00000000001898d5
+ (id)fileQueueGroup;	// IMP=0x0000000000189887
+ (id)fileGlobalQueue;	// IMP=0x0000000000189806
+ (id)concurrentFileLoadLimitSemaphore;	// IMP=0x00000000001897b3
+ (long long)updateFileWriteCounterBy:(long long)arg1 identifier:(id)arg2;	// IMP=0x00000000001895a1
+ (void)purgePreviewImageFilesForIdentifiers:(id)arg1 account:(id)arg2;	// IMP=0x0000000000188f76
+ (void)purgeAllPreviewImageFiles;	// IMP=0x0000000000188840
+ (void)deleteStrandedAttachmentPreviewImagesInContext:(id)arg1;	// IMP=0x000000000018e45e
+ (id)attachmentPreviewImagesMatchingPredicate:(id)arg1 inContext:(id)arg2;	// IMP=0x000000000018e44c
+ (void)enumerateAttachmentPreviewImagesInContext:(id)arg1 batchSize:(unsigned long long)arg2 saveAfterBatch:(_Bool)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000018e419
+ (id)allAttachmentPreviewImagesInContext:(id)arg1;	// IMP=0x000000000018e402
+ (id)attachmentPreviewImageIdentifiersForAccount:(id)arg1;	// IMP=0x000000000018e233
+ (id)attachmentPreviewImageWithIdentifier:(id)arg1 inContext:(id)arg2;	// IMP=0x000000000018e174
+ (void)purgeAllAttachmentPreviewImagesInContext:(id)arg1;	// IMP=0x000000000018dec7
+ (id)newAttachmentPreviewImageWithIdentifier:(id)arg1 attachment:(id)arg2;	// IMP=0x000000000018ddb2
- (void).cxx_destruct;	// IMP=0x000000000018dd83
@property(nonatomic) _Bool suppressFileDeletion; // @synthesize suppressFileDeletion;
@property(nonatomic) unsigned long long imageID; // @synthesize imageID=_imageID;
@property(nonatomic) __weak ICAccount *placeholderAccount; // @synthesize placeholderAccount;
- (void)saveAndClearDecryptedData;	// IMP=0x000000000018dbdc
- (id)_decryptedImageData;	// IMP=0x000000000018d80e
- (id)decryptedImageData;	// IMP=0x000000000018d60f
- (_Bool)writeEncryptedImageFromData:(id)arg1;	// IMP=0x000000000018cc23
- (id)parentEncryptableObject;	// IMP=0x000000000018cc11
- (id)cloudAccount;	// IMP=0x000000000018cb97
- (void)deleteFromLocalDatabase;	// IMP=0x000000000018cb4b
- (_Bool)needsInitialFetchFromCloud;	// IMP=0x000000000018cb43
- (_Bool)needsToBeFetchedFromCloud;	// IMP=0x000000000018cb3b
- (_Bool)needsToBeDeletedFromCloud;	// IMP=0x000000000018cb33
- (_Bool)needsToBePushedToCloud;	// IMP=0x000000000018cb2b
- (void)updateFlagToExcludeFromCloudBackup;	// IMP=0x000000000018c982
- (long long)minimumSupportedNotesVersion;	// IMP=0x000000000018c957
- (id)ic_loggingValues;	// IMP=0x000000000018c64d
- (_Bool)shouldSyncToCloud;	// IMP=0x000000000018c5d9
@property(retain, nonatomic) NSData *metadata; // @dynamic metadata;
- (void)createOrientedPreviewIfNeeded;	// IMP=0x000000000018bc18
- (id)orientedPreviewImageURL;	// IMP=0x000000000018bbea
- (_Bool)hasAnyPNGPreviewImageFiles;	// IMP=0x000000000018ba79
- (id)orientedPreviewImageURLWithoutCreating;	// IMP=0x000000000018b8fa
- (id)encryptedPreviewImageURL;	// IMP=0x000000000018b869
- (id)previewImageURL;	// IMP=0x000000000018b6ef
- (id)previewImagePathExtension;	// IMP=0x000000000018b61d
- (id)containerAccount;	// IMP=0x000000000018b47c
- (_Bool)makeSurePreviewImageDirectoryExists:(id *)arg1;	// IMP=0x000000000018b3ac
- (_Bool)setScaledImageFromImageSrc:(struct CGImageSource *)arg1 typeUTI:(struct __CFString *)arg2;	// IMP=0x000000000018ac85
- (_Bool)setImageData:(id)arg1 withSize:(struct CGSize)arg2 scale:(double)arg3 appearanceType:(unsigned long long)arg4;	// IMP=0x000000000018a51f
- (_Bool)imageIsWriting;	// IMP=0x000000000018a4c2
- (_Bool)imageIsValid;	// IMP=0x000000000018a3d5
- (struct CGAffineTransform)orientedImageTransform;	// IMP=0x000000000018a31e
- (void)invalidateCache;	// IMP=0x000000000018a2ca
- (void)invalidateImage;	// IMP=0x000000000018a29c
- (void)invalidateOrientedImage;	// IMP=0x000000000018a223
- (void)removeItemAtURL:(id)arg1;	// IMP=0x000000000018a0e4
- (void)accountWillChangeToAccount:(id)arg1;	// IMP=0x0000000000189ab9
- (void)willTurnIntoFault;	// IMP=0x0000000000189a78
- (void)prepareForDeletion;	// IMP=0x000000000018992f
- (void)disableFileDeletion;	// IMP=0x0000000000189918
@property(readonly) NSObject<OS_dispatch_queue> *fileQueue; // @synthesize fileQueue=_fileQueue;
- (struct CGSize)size;	// IMP=0x00000000001887fe
- (id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2;	// IMP=0x00000000001887cc

// Remaining properties
@property(nonatomic) short appearanceType; // @dynamic appearanceType;
@property(retain, nonatomic) ICAttachment *attachment; // @dynamic attachment;
@property(retain, nonatomic) NSData *cryptoMetadataInitializationVector; // @dynamic cryptoMetadataInitializationVector;
@property(retain, nonatomic) NSData *cryptoMetadataTag; // @dynamic cryptoMetadataTag;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSData *encryptedMetadata; // @dynamic encryptedMetadata;
@property(readonly) unsigned long long hash;
@property(nonatomic) double height; // @dynamic height;
@property(retain, nonatomic) NSDate *modifiedDate; // @dynamic modifiedDate;
@property(nonatomic) double scale; // @dynamic scale;
@property(nonatomic) _Bool scaleWhenDrawing; // @dynamic scaleWhenDrawing;
@property(readonly) Class superclass;
@property(nonatomic) short version; // @dynamic version;
@property(nonatomic) _Bool versionOutOfDate; // @dynamic versionOutOfDate;
@property(nonatomic) double width; // @dynamic width;

@end

