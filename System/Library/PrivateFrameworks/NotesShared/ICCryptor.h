//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface ICCryptor : NSObject
{
}

+ (id)dataFromHexString:(id)arg1;	// IMP=0x0000000000062838
+ (void)rewrapAndDivergeKeyForObject:(id)arg1 usingPassphrase:(id)arg2;	// IMP=0x000000000006238c
+ (void)cachedKeyClearingTimerDidFire;	// IMP=0x0000000000062333
+ (void)startOrExtendCachedKeyClearingTimerForModes:(id)arg1;	// IMP=0x000000000006232d
+ (void)startOrExtendCachedKeyClearingTimer;	// IMP=0x000000000006229d
+ (double)timeIntervalBeforeClearingCachedKeys;	// IMP=0x0000000000062161
+ (void)rewrapKeyForObject:(id)arg1 newMainKey:(id)arg2 salt:(id)arg3 iterationCount:(unsigned int)arg4 hint:(id)arg5;	// IMP=0x0000000000061e68
+ (void)transferSharedPassphraseFromAccount:(id)arg1 toAccount:(id)arg2;	// IMP=0x0000000000061c53
+ (void)rewrapNote:(id)arg1 newMainKey:(id)arg2 salt:(id)arg3 iterationCount:(unsigned int)arg4 hint:(id)arg5;	// IMP=0x0000000000061824
+ (_Bool)updateAllNotesWithOldPassphrase:(id)arg1 toAccountPassphrase:(id)arg2 fromAccount:(id)arg3 progress:(id)arg4;	// IMP=0x0000000000061216
+ (_Bool)setPassphrase:(id)arg1 hint:(id)arg2 forAccount:(id)arg3;	// IMP=0x0000000000060a35
+ (_Bool)setPassphrase:(id)arg1 hint:(id)arg2 oldPassphrase:(id)arg3 forAccount:(id)arg4;	// IMP=0x00000000000606f4
+ (_Bool)hasAnyCachedMainKeys;	// IMP=0x000000000006066c
+ (void)refaultAllPasswordProtectedObjects;	// IMP=0x00000000000603b6
+ (void)clearAllCachedMainKeys;	// IMP=0x0000000000060265
+ (id)cachedMainKeyForObject:(id)arg1;	// IMP=0x000000000005ff2e
+ (id)allCachedKeys;	// IMP=0x000000000005fe7c
+ (id)cachedMainKeyForIdentifier:(id)arg1;	// IMP=0x000000000005fdbb
+ (void)setCachedMainKey:(id)arg1 forObject:(id)arg2;	// IMP=0x000000000005fc29
+ (void)setCachedMainKey:(id)arg1 forIdentifier:(id)arg2 bioAuthAccountID:(id)arg3;	// IMP=0x000000000005fa28
+ (id)mainKeysByAccountIdentifier;	// IMP=0x000000000005f9c3
+ (void)cacheMainKeyWithPassphrase:(id)arg1 forNote:(id)arg2;	// IMP=0x000000000005f9b1
+ (void)cacheMainKeyWithPassphrase:(id)arg1 forAccount:(id)arg2;	// IMP=0x000000000005f99f
+ (void)cacheMainKeyWithPassphrase:(id)arg1 forObject:(id)arg2;	// IMP=0x000000000005f85a
+ (void)cacheMainKeyWithPassphrase:(id)arg1;	// IMP=0x000000000005f61c
+ (_Bool)key:(id)arg1 decryptsObject:(id)arg2;	// IMP=0x000000000005f4b3
+ (_Bool)isPassphrase:(id)arg1 correctForNote:(id)arg2;	// IMP=0x000000000005f4a1
+ (_Bool)isPassphrase:(id)arg1 correctForAccount:(id)arg2;	// IMP=0x000000000005f48f
+ (_Bool)isPassphrase:(id)arg1 correctForObject:(id)arg2 usingKeysFromObject:(id)arg3;	// IMP=0x000000000005f26f
+ (_Bool)isPassphrase:(id)arg1 correctForObject:(id)arg2;	// IMP=0x000000000005f25a
+ (void)fixDivergedAttachmentsForNote:(id)arg1 usingPassphrase:(id)arg2;	// IMP=0x000000000005ec9f
+ (_Bool)unauthenticatedAttachmentsUsingSamePassphraseExistForNote:(id)arg1 passphrase:(id)arg2;	// IMP=0x000000000005eaf6
+ (void)fixNoteWithDivergedKeyFromAccountPassphrase:(id)arg1 usingPassphrase:(id)arg2;	// IMP=0x000000000005e675
+ (void)fixUpAnyNotesToMatchAccountUsingPassphrase:(id)arg1;	// IMP=0x000000000005de68
+ (void)fixUpAnyNotesToMatchAccountUsingPassphraseIfNecessary:(id)arg1;	// IMP=0x000000000005dd17
+ (_Bool)authenticateWithPassphrase:(id)arg1 forNote:(id)arg2;	// IMP=0x000000000005d8d7
+ (_Bool)authenticateWithPassphrase:(id)arg1 forObject:(id)arg2;	// IMP=0x000000000005d85b
+ (_Bool)authenticateWithPassphrase:(id)arg1 forAccount:(id)arg2;	// IMP=0x000000000005d7df
+ (_Bool)isAuthenticatedForNote:(id)arg1;	// IMP=0x000000000005d7cd
+ (_Bool)isAuthenticatedForAccount:(id)arg1;	// IMP=0x000000000005d7bb
+ (_Bool)isAuthenticatedForObject:(id)arg1;	// IMP=0x000000000005d5c3
+ (_Bool)userHasPassphraseSetForNote:(id)arg1;	// IMP=0x000000000005d5b1
+ (_Bool)userHasPassphraseSetForAccount:(id)arg1;	// IMP=0x000000000005d59f
+ (_Bool)userHasPassphraseSetForObject:(id)arg1;	// IMP=0x000000000005d52d
+ (void)encryptWithMainKeyOfObject:(id)arg1 dataPreparationBlock:(CDUnknownBlockType)arg2 failureHandler:(CDUnknownBlockType)arg3 successHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000005ce30
+ (void)encryptWithMainKeyOfObject:(id)arg1 dataToEncrypt:(id)arg2 failureHandler:(CDUnknownBlockType)arg3 successHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000005cd7f
+ (_Bool)encryptFileFromURL:(id)arg1 toURL:(id)arg2 forObject:(id)arg3;	// IMP=0x000000000005c497
+ (id)decryptedDataFromFileURL:(id)arg1 forObject:(id)arg2;	// IMP=0x000000000005bf26
+ (id)decryptWithMainKeyOfObject:(id)arg1 decryptablePreparationBlock:(CDUnknownBlockType)arg2 fallbackAttemptSuccessCleanupHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005b088
+ (id)decryptWithMainKeyOfObject:(id)arg1 decryptable:(id)arg2 fallbackAttemptSuccessCleanupHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000005afcd
+ (id)decryptData:(id)arg1 forObject:(id)arg2;	// IMP=0x000000000005a918
+ (id)newWrappedKeyForObject:(id)arg1;	// IMP=0x000000000005a69c
+ (id)wrapKey:(id)arg1 withMainKey:(id)arg2;	// IMP=0x000000000005a5f6
+ (id)unwrappedKeyForObject:(id)arg1;	// IMP=0x000000000005a424

@end

