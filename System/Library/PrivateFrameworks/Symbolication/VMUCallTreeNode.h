//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;

@interface VMUCallTreeNode : NSObject
{
    VMUCallTreeNode *_parent;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    unsigned long long _address;	// 24 = 0x18
    unsigned long long _numBytes;	// 32 = 0x20
    unsigned int _count;	// 40 = 0x28
    unsigned int _numChildren;	// 44 = 0x2c
    void *_children;	// 48 = 0x30
}

+ (id)makeFakeRootForNode:(id)arg1;	// IMP=0x0000000000035947
+ (id)nodeWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4;	// IMP=0x0000000000035318
+ (id)rootForSamples:(id)arg1 symbolicator:(struct _CSTypeRef)arg2;	// IMP=0x00000000000352f2
+ (id)rootForSamples:(id)arg1 symbolicator:(struct _CSTypeRef)arg2 sampler:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000003513f
- (void).cxx_destruct;	// IMP=0x0000000000038dec
- (id)pruneMallocSize:(unsigned long long)arg1;	// IMP=0x0000000000038c8e
- (id)pruneCount:(unsigned int)arg1;	// IMP=0x0000000000038b31
- (id)chargeSystemLibrariesToCallersAndKeepBoundaries:(_Bool)arg1;	// IMP=0x0000000000038b28
- (id)chargeLibrariesToCallers:(id)arg1 keepBoundaries:(_Bool)arg2;	// IMP=0x0000000000038a87
- (id)chargeLibrariesInSet:(id)arg1 toCaller:(id)arg2 parentLibrary:(id)arg3;	// IMP=0x00000000000387f1
- (id)filterOutSymbols:(id)arg1;	// IMP=0x000000000003871c
- (id)filterOutSymbols:(id)arg1 required:(id)arg2;	// IMP=0x0000000000038393
- (id)invertedNode;	// IMP=0x0000000000038016
- (void)printCallTree;	// IMP=0x0000000000037ffa
- (void)printCallTreeToFile:(struct __sFILE *)arg1;	// IMP=0x0000000000037fe3
- (void)printCallTreeToFile:(struct __sFILE *)arg1 cumulativeOutput:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000037f3b
- (id)stringFromCallTreeIndentIfNoBranches:(_Bool)arg1;	// IMP=0x0000000000037f24
- (id)stringFromCallTreeIndentIfNoBranches:(_Bool)arg1 showPseudoNodes:(_Bool)arg2;	// IMP=0x0000000000037f07
- (id)stringFromCallTreeWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000037e4c
- (_Bool)callTreeHasBranches;	// IMP=0x0000000000037dc3
- (id)fullOutputWithThreshold:(unsigned int)arg1;	// IMP=0x0000000000037dac
- (id)fullOutputWithThreshold:(unsigned int)arg1 showPseudoNodes:(_Bool)arg2;	// IMP=0x000000000003782a
- (void)countFunctionOccurrencesInTree:(id)arg1;	// IMP=0x0000000000037775
- (void)_printCallTreeToFile:(struct __sFILE *)arg1 cumulativeOutput:(id)arg2 indentString:(id)arg3 branchPointCount:(unsigned int)arg4 topFunctions:(id)arg5 options:(unsigned long long)arg6;	// IMP=0x0000000000036eee
- (id)largestTopOfStackPath;	// IMP=0x0000000000036c05
- (id)sortedChildren;	// IMP=0x0000000000036bf3
- (id)sortedChildrenWithPseudoNode;	// IMP=0x0000000000036b10
- (id)sortedChildrenWithPseudoNode:(id)arg1 withCompare:(SEL)arg2;	// IMP=0x000000000003691b
- (id)pseudoNodeTopOfStackChild;	// IMP=0x0000000000036828
- (long long)comparePuttingMainThreadFirst:(id)arg1;	// IMP=0x00000000000365e2
- (long long)comparePuttingRetainCycleNodesAtTop:(id)arg1;	// IMP=0x000000000003647d
- (long long)compare:(id)arg1;	// IMP=0x00000000000361e2
- (long long)compareSizeAndCount:(id)arg1;	// IMP=0x00000000000361b6
- (id)findOrAddChildWithName:(id)arg1 address:(unsigned long long)arg2;	// IMP=0x000000000003619b
- (id)findOrAddChildWithName:(id)arg1 address:(unsigned long long)arg2 nodeSearchType:(int)arg3 isLeafNode:(_Bool)arg4;	// IMP=0x000000000003607a
- (void)parseNameIntoSymbol:(id *)arg1 library:(id *)arg2 loadAddress:(unsigned long long *)arg3 offset:(unsigned long long *)arg4 address:(unsigned long long *)arg5 suffix:(id *)arg6;	// IMP=0x0000000000035e53
- (id)nameWithStringsForSymbol:(id)arg1 library:(id)arg2 loadAddress:(id)arg3 offset:(id)arg4 address:(id)arg5 suffix:(id)arg6;	// IMP=0x0000000000035ccc
- (id)nameWithoutOffset;	// IMP=0x0000000000035c66
- (_Bool)isMallocBlockContentNode;	// IMP=0x0000000000035c3e
- (_Bool)symbolNameIsUnknown;	// IMP=0x0000000000035c21
- (id)pseudoName;	// IMP=0x0000000000035c13
- (_Bool)isPseudo;	// IMP=0x0000000000035c0b
- (id)browserName;	// IMP=0x0000000000035bd3
- (void)getBrowserName:(id)arg1;	// IMP=0x0000000000035a42
- (id)name;	// IMP=0x0000000000035a34
- (unsigned long long)numBytes;	// IMP=0x0000000000035a2a
- (unsigned int)count;	// IMP=0x0000000000035a21
- (unsigned long long)address;	// IMP=0x0000000000035a17
- (id)parent;	// IMP=0x0000000000035a09
- (id)description;	// IMP=0x00000000000358a2
- (void)dealloc;	// IMP=0x0000000000035862
- (unsigned int)sumOfChildCounts;	// IMP=0x00000000000357b1
- (void)addChild:(id)arg1;	// IMP=0x000000000003570c
- (void)setChildren:(id)arg1;	// IMP=0x0000000000035502
- (id)allChildren;	// IMP=0x0000000000035441
- (id)childAtIndex:(unsigned int)arg1;	// IMP=0x000000000003541e
- (unsigned int)numChildren;	// IMP=0x0000000000035415
- (id)initWithName:(id)arg1 address:(unsigned long long)arg2 count:(unsigned int)arg3 numBytes:(unsigned long long)arg4;	// IMP=0x0000000000035384

@end

