//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSNumber, NSString;

@interface CEMNetworkWiFiDeclaration_EAPClientConfiguration
{
    NSArray *_payloadAcceptEAPTypes;	// 16 = 0x10
    NSString *_payloadUserName;	// 24 = 0x18
    NSString *_payloadUserPassword;	// 32 = 0x20
    NSNumber *_payloadOneTimePassword;	// 40 = 0x28
    NSArray *_payloadPayloadCertificateAnchorUUID;	// 48 = 0x30
    NSArray *_payloadTLSTrustedCertificates;	// 56 = 0x38
    NSArray *_payloadTLSTrustedServerNames;	// 64 = 0x40
    NSNumber *_payloadTLSAllowTrustExceptions;	// 72 = 0x48
    NSNumber *_payloadTLSCertificateIsRequired;	// 80 = 0x50
    NSString *_payloadTTLSInnerAuthentication;	// 88 = 0x58
    NSString *_payloadTLSMinimumVersion;	// 96 = 0x60
    NSString *_payloadTLSMaximumVersion;	// 104 = 0x68
    NSString *_payloadOuterIdentity;	// 112 = 0x70
    NSNumber *_payloadEAPFASTUsePAC;	// 120 = 0x78
    NSNumber *_payloadEAPFASTProvisionPAC;	// 128 = 0x80
    NSNumber *_payloadEAPFASTProvisionPACAnonymously;	// 136 = 0x88
    NSNumber *_payloadEAPSIMNumberOfRANDs;	// 144 = 0x90
    NSString *_payloadSystemModeCredentialsSource;	// 152 = 0x98
    NSNumber *_payloadSystemModeUseOpenDirectoryCredentials;	// 160 = 0xa0
    NSNumber *_payloadOneTimeUserPassword;	// 168 = 0xa8
    NSNumber *_payloadEAPSIMAKAEncryptedIdentityEnabled;	// 176 = 0xb0
}

+ (id)buildRequiredOnlyWithAcceptEAPTypes:(id)arg1;	// IMP=0x000000000008159e
+ (id)buildWithAcceptEAPTypes:(id)arg1 withUserName:(id)arg2 withUserPassword:(id)arg3 withOneTimePassword:(id)arg4 withPayloadCertificateAnchorUUID:(id)arg5 withTLSTrustedCertificates:(id)arg6 withTLSTrustedServerNames:(id)arg7 withTLSAllowTrustExceptions:(id)arg8 withTLSCertificateIsRequired:(id)arg9 withTTLSInnerAuthentication:(id)arg10 withTLSMinimumVersion:(id)arg11 withTLSMaximumVersion:(id)arg12 withOuterIdentity:(id)arg13 withEAPFASTUsePAC:(id)arg14 withEAPFASTProvisionPAC:(id)arg15 withEAPFASTProvisionPACAnonymously:(id)arg16 withEAPSIMNumberOfRANDs:(id)arg17 withSystemModeCredentialsSource:(id)arg18 withSystemModeUseOpenDirectoryCredentials:(id)arg19 withOneTimeUserPassword:(id)arg20 withEAPSIMAKAEncryptedIdentityEnabled:(id)arg21;	// IMP=0x00000000000810f3
+ (id)allowedPayloadKeys;	// IMP=0x0000000000080f5c
- (void).cxx_destruct;	// IMP=0x0000000000082c26
@property(copy, nonatomic) NSNumber *payloadEAPSIMAKAEncryptedIdentityEnabled; // @synthesize payloadEAPSIMAKAEncryptedIdentityEnabled=_payloadEAPSIMAKAEncryptedIdentityEnabled;
@property(copy, nonatomic) NSNumber *payloadOneTimeUserPassword; // @synthesize payloadOneTimeUserPassword=_payloadOneTimeUserPassword;
@property(copy, nonatomic) NSNumber *payloadSystemModeUseOpenDirectoryCredentials; // @synthesize payloadSystemModeUseOpenDirectoryCredentials=_payloadSystemModeUseOpenDirectoryCredentials;
@property(copy, nonatomic) NSString *payloadSystemModeCredentialsSource; // @synthesize payloadSystemModeCredentialsSource=_payloadSystemModeCredentialsSource;
@property(copy, nonatomic) NSNumber *payloadEAPSIMNumberOfRANDs; // @synthesize payloadEAPSIMNumberOfRANDs=_payloadEAPSIMNumberOfRANDs;
@property(copy, nonatomic) NSNumber *payloadEAPFASTProvisionPACAnonymously; // @synthesize payloadEAPFASTProvisionPACAnonymously=_payloadEAPFASTProvisionPACAnonymously;
@property(copy, nonatomic) NSNumber *payloadEAPFASTProvisionPAC; // @synthesize payloadEAPFASTProvisionPAC=_payloadEAPFASTProvisionPAC;
@property(copy, nonatomic) NSNumber *payloadEAPFASTUsePAC; // @synthesize payloadEAPFASTUsePAC=_payloadEAPFASTUsePAC;
@property(copy, nonatomic) NSString *payloadOuterIdentity; // @synthesize payloadOuterIdentity=_payloadOuterIdentity;
@property(copy, nonatomic) NSString *payloadTLSMaximumVersion; // @synthesize payloadTLSMaximumVersion=_payloadTLSMaximumVersion;
@property(copy, nonatomic) NSString *payloadTLSMinimumVersion; // @synthesize payloadTLSMinimumVersion=_payloadTLSMinimumVersion;
@property(copy, nonatomic) NSString *payloadTTLSInnerAuthentication; // @synthesize payloadTTLSInnerAuthentication=_payloadTTLSInnerAuthentication;
@property(copy, nonatomic) NSNumber *payloadTLSCertificateIsRequired; // @synthesize payloadTLSCertificateIsRequired=_payloadTLSCertificateIsRequired;
@property(copy, nonatomic) NSNumber *payloadTLSAllowTrustExceptions; // @synthesize payloadTLSAllowTrustExceptions=_payloadTLSAllowTrustExceptions;
@property(copy, nonatomic) NSArray *payloadTLSTrustedServerNames; // @synthesize payloadTLSTrustedServerNames=_payloadTLSTrustedServerNames;
@property(copy, nonatomic) NSArray *payloadTLSTrustedCertificates; // @synthesize payloadTLSTrustedCertificates=_payloadTLSTrustedCertificates;
@property(copy, nonatomic) NSArray *payloadPayloadCertificateAnchorUUID; // @synthesize payloadPayloadCertificateAnchorUUID=_payloadPayloadCertificateAnchorUUID;
@property(copy, nonatomic) NSNumber *payloadOneTimePassword; // @synthesize payloadOneTimePassword=_payloadOneTimePassword;
@property(copy, nonatomic) NSString *payloadUserPassword; // @synthesize payloadUserPassword=_payloadUserPassword;
@property(copy, nonatomic) NSString *payloadUserName; // @synthesize payloadUserName=_payloadUserName;
@property(copy, nonatomic) NSArray *payloadAcceptEAPTypes; // @synthesize payloadAcceptEAPTypes=_payloadAcceptEAPTypes;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000008265d
- (id)serializePayloadWithAssetProviders:(id)arg1;	// IMP=0x00000000000821f9
- (_Bool)loadPayload:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000815f4

@end

