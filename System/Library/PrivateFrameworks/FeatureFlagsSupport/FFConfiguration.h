//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet;
@protocol FFFileReader, FFFileWriter;

@interface FFConfiguration : NSObject
{
    struct os_unfair_lock_s lock;	// 8 = 0x8
    NSArray *searchPaths;	// 16 = 0x10
    NSMutableSet *_domains;	// 24 = 0x18
    NSMutableDictionary *configByLevel[2][4];	// 32 = 0x20
    NSMutableDictionary *metaByLevel[4];	// 96 = 0x60
    NSMutableSet *disclosuresByLevel[4];	// 128 = 0x80
    id <FFFileWriter> _filewriter;	// 160 = 0xa0
    id <FFFileReader> _filereader;	// 168 = 0xa8
    NSMutableArray *_profilePayloads;	// 176 = 0xb0
}

+ (_Bool)isValidDisclosureName:(id)arg1;	// IMP=0x0000000000005d74
+ (_Bool)isValidName:(id)arg1;	// IMP=0x0000000000005c9f
+ (id)configurationForTestingWithFileWriter:(id)arg1;	// IMP=0x00000000000020d4
+ (id)configurationForTestingWithFileReader:(id)arg1;	// IMP=0x00000000000020c0
+ (id)configurationForTestingWithFileReader:(id)arg1 fileWriter:(id)arg2;	// IMP=0x00000000000020ae
+ (id)_configurationForTestingWithFileReader:(id)arg1 fileWriter:(id)arg2;	// IMP=0x0000000000002010
+ (id)shared;	// IMP=0x0000000000001e65
+ (id)configurationForProfileManagement;	// IMP=0x000000000000682d
- (void).cxx_destruct;	// IMP=0x00000000000062f0
@property(retain, nonatomic) NSMutableArray *profilePayloads; // @synthesize profilePayloads=_profilePayloads;
@property(retain, nonatomic) id <FFFileReader> filereader; // @synthesize filereader=_filereader;
@property(retain, nonatomic) id <FFFileWriter> filewriter; // @synthesize filewriter=_filewriter;
- (_Bool)reset:(id *)arg1;	// IMP=0x00000000000060ad
- (_Bool)resetDomain:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000005e08
- (_Bool)isValidName:(id)arg1;	// IMP=0x0000000000005d5b
- (void)invalidateCache;	// IMP=0x0000000000005c8d
- (_Bool)commitUpdates:(id *)arg1;	// IMP=0x0000000000005c15
- (void)unsetFeaturesMatchingAttribute:(id)arg1 level:(long long)arg2;	// IMP=0x0000000000005bb7
- (void)unsetFeature:(id)arg1 domain:(id)arg2 level:(long long)arg3;	// IMP=0x0000000000005af5
- (void)disableFeaturesMatchingAttribute:(id)arg1 level:(long long)arg2;	// IMP=0x0000000000005a9a
- (void)disableFeature:(id)arg1 domain:(id)arg2 level:(long long)arg3;	// IMP=0x00000000000059db
- (void)enableFeaturesMatchingAttribute:(id)arg1 level:(long long)arg2;	// IMP=0x000000000000597d
- (void)enableFeature:(id)arg1 domain:(id)arg2 level:(long long)arg3;	// IMP=0x00000000000058bb
- (id)defaultStateForFeature:(id)arg1 domain:(id)arg2;	// IMP=0x00000000000057a3
- (id)stateForFeature:(id)arg1 domain:(id)arg2 level:(long long)arg3;	// IMP=0x000000000000568c
- (id)stateForFeature:(id)arg1 domain:(id)arg2;	// IMP=0x0000000000005674
- (id)featuresForDomain:(id)arg1;	// IMP=0x0000000000005311
@property(readonly, nonatomic) NSSet *domains;
- (_Bool)writeDisclosureUpdates:(id *)arg1;	// IMP=0x000000000000509c
- (_Bool)writeDisclosureUpdatesAtlevel:(long long)arg1 error:(id *)arg2;	// IMP=0x0000000000004df0
- (_Bool)writeCombinedUpdates:(id *)arg1;	// IMP=0x0000000000004d77
- (_Bool)writeCombinedUpdatesAtLevel:(long long)arg1 error:(id *)arg2;	// IMP=0x0000000000004a2a
- (_Bool)writeDomainUpdates:(id *)arg1;	// IMP=0x00000000000046a5
- (void)populateDictionary:(id)arg1 withFeatures:(id)arg2;	// IMP=0x0000000000004441
- (void)setFeaturesMatchingAttribute:(id)arg1 level:(long long)arg2 value:(long long)arg3;	// IMP=0x0000000000003f78
- (void)setValue:(long long)arg1 feature:(id)arg2 domain:(id)arg3 level:(long long)arg4;	// IMP=0x0000000000003d64
- (void)createMutableDomainConfig:(id)arg1 level:(long long)arg2;	// IMP=0x0000000000003c5d
- (_Bool)isFeatureHidden:(id)arg1 domain:(id)arg2;	// IMP=0x0000000000003b02
- (id)resolvedStateForFeature:(id)arg1 domain:(id)arg2;	// IMP=0x0000000000003a77
- (_Bool)resolvedStateForDisclosure:(id)arg1;	// IMP=0x0000000000003a22
- (id)effectiveStateForFeature:(id)arg1 domain:(id)arg2 level:(long long)arg3;	// IMP=0x00000000000038d5
- (void)loadAllData;	// IMP=0x00000000000034d1
- (void)loadAllLevelsForDomain:(id)arg1;	// IMP=0x0000000000003457
- (void)loadDomain:(id)arg1 level:(long long)arg2;	// IMP=0x000000000000332d
- (void)addFeaturesForDomain:(id)arg1 pathIndex:(int)arg2 fromURL:(id)arg3;	// IMP=0x00000000000030f9
- (void)loadCombinedDataForLevel:(long long)arg1;	// IMP=0x0000000000002a32
- (id)makeFeatureDictionaryFrom:(id)arg1 forDomain:(id)arg2;	// IMP=0x00000000000024e1
- (id)disclosureFileURLForLevel:(long long)arg1 pathIndex:(int)arg2;	// IMP=0x00000000000023f9
- (id)fileURLForLevel:(long long)arg1 pathIndex:(int)arg2;	// IMP=0x0000000000002311
- (id)fileURLForDomain:(id)arg1 pathIndex:(int)arg2;	// IMP=0x0000000000002203
- (void)validateName:(id)arg1;	// IMP=0x00000000000021a2
- (void)clearCachedData;	// IMP=0x00000000000020eb
- (id)initPrivate;	// IMP=0x0000000000001ecc
- (_Bool)isValidDisclosureName:(id)arg1;	// IMP=0x0000000000006814
- (id)currentDisclosures;	// IMP=0x0000000000006786
- (id)currentDisclosuresAtLevel:(long long)arg1;	// IMP=0x000000000000671f
- (void)removeAllDisclosuresAtLevel:(long long)arg1;	// IMP=0x0000000000006637
- (void)removeDisclosure:(id)arg1 atLevel:(long long)arg2;	// IMP=0x0000000000006517
- (void)addDisclosure:(id)arg1 atLevel:(long long)arg2;	// IMP=0x00000000000063f7
- (id)mutableDisclosureSetAtLevel:(long long)arg1;	// IMP=0x000000000000639d
- (_Bool)commitProfilePayloadsAndReturnError:(id *)arg1;	// IMP=0x000000000000770e
- (_Bool)addProfilePayload:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000006b95
- (void)prepareToAddProfilePayloads;	// IMP=0x0000000000006856

@end

