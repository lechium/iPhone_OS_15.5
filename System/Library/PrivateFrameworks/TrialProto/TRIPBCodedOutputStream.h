//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableData;

@interface TRIPBCodedOutputStream : NSObject
{
    struct TRIPBOutputBufferState state_;	// 8 = 0x8
    NSMutableData *buffer_;	// 40 = 0x28
}

+ (id)streamWithData:(id)arg1;	// IMP=0x0000000000051df3
+ (id)streamWithOutputStream:(id)arg1;	// IMP=0x0000000000051d97
- (void)writeRawLittleEndian64:(long long)arg1;	// IMP=0x0000000000054f57
- (void)writeRawLittleEndian32:(int)arg1;	// IMP=0x0000000000054f47
- (void)writeRawVarint64:(long long)arg1;	// IMP=0x0000000000054f36
- (void)writeRawVarintSizeTAs32:(unsigned long long)arg1;	// IMP=0x0000000000054f26
- (void)writeRawVarint32:(int)arg1;	// IMP=0x0000000000054f16
- (void)writeTag:(unsigned int)arg1 format:(int)arg2;	// IMP=0x0000000000054ef0
- (void)writeRawPtr:(const void *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;	// IMP=0x0000000000054de3
- (void)writeRawData:(id)arg1;	// IMP=0x0000000000054d8f
- (void)writeRawByte:(unsigned char)arg1;	// IMP=0x0000000000054d56
- (void)flush;	// IMP=0x0000000000054cb5
- (void)writeRawMessageSetExtension:(int)arg1 value:(id)arg2;	// IMP=0x0000000000054c3b
- (void)writeMessageSetExtension:(int)arg1 value:(id)arg2;	// IMP=0x0000000000054bc1
- (void)writeUnknownGroupArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054a9e
- (void)writeGroupArray:(int)arg1 values:(id)arg2;	// IMP=0x000000000005497b
- (void)writeBytesArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054858
- (void)writeMessageArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054735
- (void)writeStringArray:(int)arg1 values:(id)arg2;	// IMP=0x0000000000054612
- (void)writeEnumArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000000000543da
- (void)writeBoolArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000054209
- (void)writeSFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000054037
- (void)writeSFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053e63
- (void)writeSInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053c6c
- (void)writeSInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053a24
- (void)writeFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053852
- (void)writeFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000000005367e
- (void)writeUInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053446
- (void)writeInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000000000531f8
- (void)writeInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000053014
- (void)writeUInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052e30
- (void)writeFloatArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052c62
- (void)writeDoubleArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000000052a94
- (void)writeSInt64:(int)arg1 value:(long long)arg2;	// IMP=0x0000000000052a59
- (void)writeSInt64NoTag:(long long)arg1;	// IMP=0x0000000000052a40
- (void)writeSInt32:(int)arg1 value:(int)arg2;	// IMP=0x0000000000052a05
- (void)writeSInt32NoTag:(int)arg1;	// IMP=0x00000000000529ef
- (void)writeSFixed64:(int)arg1 value:(long long)arg2;	// IMP=0x00000000000529b9
- (void)writeSFixed64NoTag:(long long)arg1;	// IMP=0x00000000000529a8
- (void)writeSFixed32:(int)arg1 value:(int)arg2;	// IMP=0x0000000000052972
- (void)writeSFixed32NoTag:(int)arg1;	// IMP=0x0000000000052962
- (void)writeEnum:(int)arg1 value:(int)arg2;	// IMP=0x000000000005292f
- (void)writeEnumNoTag:(int)arg1;	// IMP=0x000000000005291f
- (void)writeUInt32:(int)arg1 value:(unsigned int)arg2;	// IMP=0x00000000000528de
- (void)writeUInt32NoTag:(unsigned int)arg1;	// IMP=0x00000000000528ce
- (void)writeBytes:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052887
- (void)writeBytesNoTag:(id)arg1;	// IMP=0x000000000005283a
- (void)writeMessage:(int)arg1 value:(id)arg2;	// IMP=0x00000000000527f3
- (void)writeMessageNoTag:(id)arg1;	// IMP=0x00000000000527a6
- (void)writeUnknownGroup:(int)arg1 value:(id)arg2;	// IMP=0x000000000005275a
- (void)writeUnknownGroupNoTag:(int)arg1 value:(id)arg2;	// IMP=0x000000000005271b
- (void)writeGroup:(int)arg1 value:(id)arg2;	// IMP=0x00000000000526cf
- (void)writeGroupNoTag:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052690
- (void)writeString:(int)arg1 value:(id)arg2;	// IMP=0x0000000000052649
- (void)writeStringNoTag:(id)arg1;	// IMP=0x0000000000052382
- (void)writeBool:(int)arg1 value:(_Bool)arg2;	// IMP=0x000000000005232a
- (void)writeBoolNoTag:(_Bool)arg1;	// IMP=0x00000000000522f1
- (void)writeFixed32:(int)arg1 value:(unsigned int)arg2;	// IMP=0x00000000000522bb
- (void)writeFixed32NoTag:(unsigned int)arg1;	// IMP=0x00000000000522ab
- (void)writeFixed64:(int)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000000052275
- (void)writeFixed64NoTag:(unsigned long long)arg1;	// IMP=0x0000000000052264
- (void)writeInt32:(int)arg1 value:(int)arg2;	// IMP=0x0000000000052231
- (void)writeInt32NoTag:(int)arg1;	// IMP=0x000000000005220a
- (void)writeInt64:(int)arg1 value:(long long)arg2;	// IMP=0x00000000000521d7
- (void)writeInt64NoTag:(long long)arg1;	// IMP=0x00000000000521c6
- (void)writeUInt64:(int)arg1 value:(unsigned long long)arg2;	// IMP=0x0000000000052193
- (void)writeUInt64NoTag:(unsigned long long)arg1;	// IMP=0x00000000000520f8
- (void)writeFloat:(int)arg1 value:(float)arg2;	// IMP=0x00000000000520b9
- (void)writeFloatNoTag:(float)arg1;	// IMP=0x0000000000051fe6
- (void)writeDouble:(int)arg1 value:(double)arg2;	// IMP=0x0000000000051fa6
- (void)writeDoubleNoTag:(double)arg1;	// IMP=0x0000000000051e22
- (id)initWithOutputStream:(id)arg1 data:(id)arg2;	// IMP=0x0000000000051cf4
- (id)initWithData:(id)arg1;	// IMP=0x0000000000051cdd
- (id)initWithOutputStream:(id)arg1;	// IMP=0x0000000000051c91
- (void)dealloc;	// IMP=0x0000000000051c36

@end

