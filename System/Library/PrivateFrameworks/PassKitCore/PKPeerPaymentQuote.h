//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PassKitCore/NSSecureCoding-Protocol.h>

@class NSArray, NSData, NSDate, NSDecimalNumber, NSString, NSURL, PKCurrencyAmount, PKPeerPaymentQuoteDynamicFraudContent, PKPeerPaymentRecipient;

@interface PKPeerPaymentQuote : NSObject <NSSecureCoding>
{
    NSString *_identifier;	// 8 = 0x8
    NSArray *_items;	// 16 = 0x10
    NSString *_disclosureText;	// 24 = 0x18
    NSURL *_disclosureURL;	// 32 = 0x20
    NSDecimalNumber *_currentBalance;	// 40 = 0x28
    NSString *_currentBalanceCurrency;	// 48 = 0x30
    NSData *_appleHash;	// 56 = 0x38
    NSData *_externalHash;	// 64 = 0x40
    NSDecimalNumber *_totalReceiveAmount;	// 72 = 0x48
    NSString *_totalReceiveAmountCurrency;	// 80 = 0x50
    NSDecimalNumber *_totalFees;	// 88 = 0x58
    NSString *_totalFeesCurrency;	// 96 = 0x60
    NSDate *_validUntil;	// 104 = 0x68
    unsigned long long _riskLevel;	// 112 = 0x70
    PKPeerPaymentQuoteDynamicFraudContent *_dynamicFraudContent;	// 120 = 0x78
    PKPeerPaymentRecipient *_recipient;	// 128 = 0x80
    NSString *_bankName;	// 136 = 0x88
    NSString *_routingNumber;	// 144 = 0x90
    NSString *_accountNumber;	// 152 = 0x98
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000002a2c7e
- (void).cxx_destruct;	// IMP=0x00000000002a3c84
@property(copy, nonatomic) NSString *accountNumber; // @synthesize accountNumber=_accountNumber;
@property(copy, nonatomic) NSString *routingNumber; // @synthesize routingNumber=_routingNumber;
@property(copy, nonatomic) NSString *bankName; // @synthesize bankName=_bankName;
@property(retain, nonatomic) PKPeerPaymentRecipient *recipient; // @synthesize recipient=_recipient;
@property(readonly, copy, nonatomic) PKPeerPaymentQuoteDynamicFraudContent *dynamicFraudContent; // @synthesize dynamicFraudContent=_dynamicFraudContent;
@property(readonly, nonatomic) unsigned long long riskLevel; // @synthesize riskLevel=_riskLevel;
@property(readonly, copy, nonatomic) NSDate *validUntil; // @synthesize validUntil=_validUntil;
@property(readonly, copy, nonatomic) NSString *totalFeesCurrency; // @synthesize totalFeesCurrency=_totalFeesCurrency;
@property(readonly, copy, nonatomic) NSDecimalNumber *totalFees; // @synthesize totalFees=_totalFees;
@property(readonly, copy, nonatomic) NSString *totalReceiveAmountCurrency; // @synthesize totalReceiveAmountCurrency=_totalReceiveAmountCurrency;
@property(readonly, copy, nonatomic) NSDecimalNumber *totalReceiveAmount; // @synthesize totalReceiveAmount=_totalReceiveAmount;
@property(readonly, copy, nonatomic) NSData *externalHash; // @synthesize externalHash=_externalHash;
@property(readonly, copy, nonatomic) NSData *appleHash; // @synthesize appleHash=_appleHash;
@property(readonly, copy, nonatomic) NSString *currentBalanceCurrency; // @synthesize currentBalanceCurrency=_currentBalanceCurrency;
@property(readonly, copy, nonatomic) NSDecimalNumber *currentBalance; // @synthesize currentBalance=_currentBalance;
@property(readonly, copy, nonatomic) NSURL *disclosureURL; // @synthesize disclosureURL=_disclosureURL;
@property(readonly, copy, nonatomic) NSString *disclosureText; // @synthesize disclosureText=_disclosureText;
@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (_Bool)preservesCurrentBalance;	// IMP=0x00000000002a3af9
- (id)firstQuoteItemOfType:(unsigned long long)arg1;	// IMP=0x00000000002a399a
- (_Bool)hasExpired;	// IMP=0x00000000002a393a
- (id)description;	// IMP=0x00000000002a3649
- (unsigned long long)hash;	// IMP=0x00000000002a34fe
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000002a331f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000002a314e
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000002a2c86
- (id)initWithDictionary:(id)arg1;	// IMP=0x00000000002a267a
@property(readonly, nonatomic) PKCurrencyAmount *calculatedTotalAmount;
@property(readonly, nonatomic) double validityDuration;

@end

