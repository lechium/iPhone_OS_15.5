//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PassKitCore/PKPaymentWebServiceTargetDeviceProtocol-Protocol.h>

@class NSString, PKAssertion, PKPassLibrary, PKPassUpgradeController, PKPaymentService;

@interface PKPaymentWebServiceTargetDevice : NSObject <PKPaymentWebServiceTargetDeviceProtocol>
{
    PKPassLibrary *_passLibrary;	// 8 = 0x8
    PKPaymentService *_paymentService;	// 16 = 0x10
    PKAssertion *_provisioningAssertion;	// 24 = 0x18
    _Bool _provisioningAssertionActive;	// 32 = 0x20
    PKAssertion *_verificationAssertion;	// 40 = 0x28
    _Bool _verificationAssertionActive;	// 48 = 0x30
    PKAssertion *_requiringUpgradedPasscodeAssertion;	// 56 = 0x38
    _Bool _requiringUpgradedPasscodeAssertionActive;	// 64 = 0x40
    PKAssertion *_activePasscodeUpgradeFlowAssertion;	// 72 = 0x48
    _Bool _activePasscodeUpgradeFlowAssertionActive;	// 80 = 0x50
    PKPassUpgradeController *_passUpgradeController;	// 88 = 0x58
}

+ (id)localTargetDevice;	// IMP=0x0000000000024d51
- (void).cxx_destruct;	// IMP=0x000000000002c820
- (void)addISO18013Blobs:(id)arg1 cardType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c80a
- (_Bool)areUnifiedAccessPassesSupported;	// IMP=0x000000000002c802
- (void)generateISOEncryptionCertificateForSubCredentialId:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c7ec
- (void)generateSEEncryptionCertificateForSubCredentialId:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c7d6
- (void)signWithFidoKeyForRelyingParty:(id)arg1 relyingPartyAccountHash:(id)arg2 fidoKeyHash:(id)arg3 challenge:(id)arg4 publicKeyIdentifier:(id)arg5 externalizedAuth:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000000002c7c0
- (void)checkFidoKeyPresenceForRelyingParty:(id)arg1 relyingPartyAccountHash:(id)arg2 fidoKeyHash:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000002c7aa
- (void)createFidoKeyForRelyingParty:(id)arg1 relyingPartyAccountHash:(id)arg2 challenge:(id)arg3 externalizedAuth:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000002c794
- (void)availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c77e
- (void)provisionHomeKeyPassForSerialNumbers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c768
- (void)familyMembersWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c752
- (void)_initializeSecureElement:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c73c
- (void)_initializeSecureElementIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c726
- (void)_consistencyCheck;	// IMP=0x000000000002c710
- (_Bool)_willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1;	// IMP=0x000000000002c6fa
- (void)_performProductActionRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c6e4
- (void)_productsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c6ce
- (void)_productsWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c6b8
- (void)_passOwnershipTokenWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c6a2
- (void)_storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x000000000002c68c
- (void)_performDeviceRegistrationForReason:(id)arg1 brokerURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c5e5
- (void)_performDeviceCheckInWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c5cf
- (void)_setDefaultPaymentPassUniqueIdentifier:(id)arg1;	// IMP=0x000000000002c5b9
- (void)_matchingInvitationOnDevice:(id)arg1 withTimeout:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c5a3
- (void)_subcredentialInvitationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c58d
- (void)_credentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c577
- (void)_canAcceptInvitation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c561
- (void)_canAddSecureElementPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c503
- (void)_requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c4ed
- (void)_removeSharingInvitation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c4d7
- (void)_declineRelatedSharingInvitationsIfNecessary:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c4c1
- (void)_addSubcredential:(id)arg1 fromSharingInvitation:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c4ab
- (void)_removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c495
- (void)_addSharingInvitationReceipts:(id)arg1 onCredentialWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c47f
- (void)_updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c469
- (void)_enforceUpgradedPasscodePolicyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c453
- (void)_setAccountAttestationAnonymizationSalt:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c43d
- (void)_accountAttestationAnonymizationSaltWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c427
- (void)_featureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c411
- (void)_cachedFeatureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c317
- (void)_removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2;	// IMP=0x000000000002c301
- (void)_downloadAllPaymentPasses;	// IMP=0x000000000002c2eb
- (void)_removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c2d5
- (id)_upgradeRequestForPass:(id)arg1;	// IMP=0x000000000002c1c1
- (void)_sanitizeExpressPasses;	// IMP=0x000000000002c1ab
- (void)_conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withReferenceExpressState:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c195
- (void)_conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c17f
- (void)_setExpressWithPassInformation:(id)arg1 credential:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c169
- (void)_startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;	// IMP=0x000000000002c153
- (void)_addPass:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002be71
- (void)consistencyCheck;	// IMP=0x000000000002be5f
- (_Bool)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1;	// IMP=0x000000000002be4d
- (void)performProductActionRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002be3b
- (void)availableProductsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002be29
- (void)productsWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002be17
- (void)paymentWebService:(id)arg1 requestPassUpgrade:(id)arg2 pass:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000002bd38
- (void)paymentWebService:(id)arg1 passOwnershipTokenWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002bd20
- (void)paymentWebService:(id)arg1 storePassOwnershipToken:(id)arg2 withIdentifier:(id)arg3;	// IMP=0x000000000002bd08
- (void)performDeviceRegistrationForReason:(id)arg1 brokerURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002bcf6
- (void)performDeviceCheckInWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002bce4
- (void)paymentWebService:(id)arg1 setDefaultPaymentPassUniqueIdentifier:(id)arg2;	// IMP=0x000000000002bccf
- (id)paymentWebService:(id)arg1 supportedRegionFeatureOfType:(long long)arg2;	// IMP=0x000000000002b9da
- (void)paymentWebService:(id)arg1 generateTransactionKeyWithParameters:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b954
- (void)paymentWebService:(id)arg1 credentialWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b93c
- (void)paymentWebService:(id)arg1 matchingInvitationOnDevice:(id)arg2 withTimeout:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000002b921
- (void)paymentWebService:(id)arg1 subcredentialInvitationsWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b90c
- (void)paymentWebService:(id)arg1 canAcceptInvitation:(id)arg2 withCompletionV2:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b8f4
- (void)paymentWebService:(id)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b8dc
- (void)requestBackgroundRegistrationForCredential:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002b7d7
- (void)paymentWebService:(id)arg1 removeSharingInvitation:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b5cc
- (void)paymentWebService:(id)arg1 declineRelatedSharingInvitationsIfNecessary:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002b5b4
- (void)paymentWebService:(id)arg1 addSubcredential:(id)arg2 fromSharingInvitation:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000000002b599
- (void)paymentWebService:(id)arg1 revokeSharedCredentialGroup:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000029d51
- (void)paymentWebService:(id)arg1 removeSharingInvitationReceipts:(id)arg2 onCredential:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000029b13
- (void)paymentWebService:(id)arg1 addSharingInvitationReceipts:(id)arg2 onCredential:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000029a85
- (void)paymentWebService:(id)arg1 updateMetadataOnPass:(id)arg2 withCredential:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000298b1
- (void)endRequiringUpgradedPasscodeIfNecessary;	// IMP=0x000000000002987a
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(_Bool)arg1;	// IMP=0x00000000000295b7
- (void)enforceUpgradedPasscodePolicyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000295a5
- (void)notePasscodeUpgradeFlowDidEnd;	// IMP=0x000000000002956e
- (void)notePasscodeUpgradeFlowWillBeginWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000029119
- (void)paymentWebService:(id)arg1 setAccountAttestationAnonymizationSalt:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000029101
- (void)paymentWebService:(id)arg1 accountAttestationAnonymizationSaltWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000290ec
- (void)paymentWebService:(id)arg1 updateAccountWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000029060
- (void)paymentWebService:(id)arg1 deviceMetadataWithFields:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000028fe8
- (void)deleteApplePayTrustKeyWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028e2c
- (void)createApplePayTrustKeyWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028bff
- (void)applePayTrustKeyForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028a31
- (void)featureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000028996
- (void)cachedFeatureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000288fb
- (void)triggerCloudStoreZoneCreationForAccount:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000028865
- (void)accountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000287cf
- (void)accountsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002870b
- (void)updatedAccountsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000285b0
- (_Bool)paymentWebServiceSupportsAccounts:(id)arg1;	// IMP=0x00000000000283f3
- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)arg1;	// IMP=0x000000000002834c
- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)arg1;	// IMP=0x000000000002808a
- (_Bool)paymentWebServiceSupportsPeerPaymentRegistration:(id)arg1;	// IMP=0x0000000000027e22
- (_Bool)supportsCredentialType:(long long)arg1;	// IMP=0x0000000000027e1a
- (_Bool)supportsExpressForAutomaticSelectionTechnologyType:(long long)arg1;	// IMP=0x0000000000027e01
- (_Bool)secureElementIsAvailable;	// IMP=0x0000000000027df9
- (_Bool)felicaSecureElementIsAvailable;	// IMP=0x0000000000027de9
- (void)paymentWebService:(id)arg1 validateTransferPreconditionsWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000027dd4
- (unsigned long long)secureElementOwnershipStateForCurrentUser;	// IMP=0x0000000000027da1
- (void)claimSecureElementForCurrentUserWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000027d88
- (_Bool)claimSecureElementForCurrentUser;	// IMP=0x0000000000027d39
- (void)paymentWebService:(id)arg1 removePass:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000027caf
- (void)downloadAllPaymentPassesForPaymentWebService:(id)arg1;	// IMP=0x0000000000027c9d
- (void)paymentWebService:(id)arg1 isPassExpressWithUniqueIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000027c81
- (void)removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000027c6f
- (void)_paymentWebService:(id)arg1 pass:(id)arg2 withExpressInfo:(id)arg3 hasDisqualifyingConflicts:(CDUnknownBlockType)arg4;	// IMP=0x00000000000272df
- (void)paymentWebService:(id)arg1 handlePotentialExpressPass:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000262b4
- (void)paymentWebService:(id)arg1 addPaymentPass:(id)arg2 withCompletionHandlerV2:(CDUnknownBlockType)arg3;	// IMP=0x000000000002629c
- (void)paymentWebService:(id)arg1 addPaymentPass:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000260e2
- (void)_validateCommonPreconditionsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002603a
- (void)paymentWebService:(id)arg1 validateAddPreconditionsWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000026025
- (_Bool)paymentWebService:(id)arg1 canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)arg2;	// IMP=0x000000000002600b
- (id)paymentWebService:(id)arg1 passWithUniqueID:(id)arg2;	// IMP=0x0000000000025ff2
- (id)paymentWebService:(id)arg1 passesOfType:(unsigned long long)arg2;	// IMP=0x0000000000025fd9
- (_Bool)paymentWebService:(id)arg1 hasPassesOfType:(unsigned long long)arg2;	// IMP=0x0000000000025fc0
- (void)paymentWebService:(id)arg1 setNewAuthRandom:(CDUnknownBlockType)arg2;	// IMP=0x0000000000025f18
- (void)paymentWebService:(id)arg1 setNewAuthRandomIfNecessaryReturningPairingState:(CDUnknownBlockType)arg2;	// IMP=0x0000000000025e70
- (id)deviceName;	// IMP=0x0000000000025e66
- (id)deviceDescriptionForPaymentWebService:(id)arg1;	// IMP=0x0000000000025e5c
- (id)appleAccountInformation;	// IMP=0x0000000000025e05
- (void)renewAppleAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000025d8f
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x0000000000025d79
- (void)paymentWebService:(id)arg1 deleteApplicationWithAID:(id)arg2;	// IMP=0x0000000000025d07
- (int)registrationSupportedInCurrentRegionForWebService:(id)arg1;	// IMP=0x0000000000025cfa
- (int)paymentSupportedInCurrentRegionForWebService:(id)arg1;	// IMP=0x0000000000025ced
- (id)paymentWebService:(id)arg1 filterVerificationChannels:(id)arg2;	// IMP=0x0000000000025cd7
- (void)paymentWebService:(id)arg1 didRegisterWithRegionMap:(id)arg2 primaryRegionTopic:(id)arg3;	// IMP=0x0000000000025c51
- (void)signatureForAuthToken:(id)arg1 webService:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000025bcb
- (id)trustedDeviceEnrollmentInfoForWebService:(id)arg1;	// IMP=0x0000000000025b78
- (void)paymentWebService:(id)arg1 provisioningDataIncludingDeviceMetadata:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000025b00
- (void)paymentWebService:(id)arg1 signData:(id)arg2 signatureEntanglementMode:(unsigned long long)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000025a72
- (void)paymentWebService:(id)arg1 registrationDataWithAuthToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000259ec
- (void)paymentWebService:(id)arg1 registrationDataWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002591f
- (void)paymentWebService:(id)arg1 configurationDataWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000257cb
- (void)paymentWebService:(id)arg1 queueConnectionToTrustedServiceManagerForPushTopic:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000254b8
- (void)paymentWebServiceDidUpdateConfiguration:(id)arg1;	// IMP=0x00000000000254b2
- (id)secureElementIdentifiers;	// IMP=0x0000000000025499
- (void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;	// IMP=0x0000000000025487
- (void)noteForegroundVerificationObserverActive:(_Bool)arg1;	// IMP=0x0000000000025291
- (id)deviceIDSIdentifier;	// IMP=0x000000000002527f
- (void)setMaximumPaymentCards:(unsigned long long)arg1;	// IMP=0x0000000000025272
- (unsigned long long)maximumPaymentCards;	// IMP=0x0000000000025268
- (void)noteProvisioningUserInterfaceDidDisappear;	// IMP=0x0000000000025207
- (void)noteProvisioningUserInterfaceDidAppear;	// IMP=0x00000000000251a6
- (void)noteProvisioningDidEnd;	// IMP=0x0000000000025116
- (void)noteProvisioningDidBegin;	// IMP=0x0000000000024eef
- (_Bool)supportsAutomaticPassPresentation;	// IMP=0x0000000000024ee2
- (id)cellularNetworkRegion;	// IMP=0x0000000000024ed8
- (id)deviceRegion;	// IMP=0x0000000000024ece
- (id)osVersion;	// IMP=0x0000000000024ec4
- (id)deviceVersion;	// IMP=0x0000000000024eab
- (id)deviceClass;	// IMP=0x0000000000024ea1
- (id)bridgedClientInfo;	// IMP=0x0000000000024e99
- (void)dealloc;	// IMP=0x0000000000024e34
- (id)init;	// IMP=0x0000000000024da6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

