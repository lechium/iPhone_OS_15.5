//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDecimalNumber, NSDecimalNumberHandler, NSString, PKNumericSuggestionLastInput;

@interface PKNumericSuggestionsEnterValueAlgorithm
{
    NSDecimalNumberHandler *_roundingBehavior;	// 8 = 0x8
    NSArray *_valuesToDefaults;	// 16 = 0x10
    NSArray *_defaultSuggestions;	// 24 = 0x18
    unsigned long long _powerOfTenFactor;	// 32 = 0x20
    PKNumericSuggestionLastInput *_lastInput;	// 40 = 0x28
    _Bool _useBuiltInDefaults;	// 48 = 0x30
    _Bool _hasValidDefaultSuggestions;	// 49 = 0x31
    NSDecimalNumber *_cardBalance;	// 56 = 0x38
    NSDecimalNumber *_minBalance;	// 64 = 0x40
    NSDecimalNumber *_maxBalance;	// 72 = 0x48
    NSDecimalNumber *_minLoadAmount;	// 80 = 0x50
    NSDecimalNumber *_maxLoadAmount;	// 88 = 0x58
    NSArray *_defaultValues;	// 96 = 0x60
    long long _decimalPrecision;	// 104 = 0x68
    NSString *_currencyCode;	// 112 = 0x70
}

- (void).cxx_destruct;	// IMP=0x0000000000113299
@property(readonly, nonatomic) _Bool hasValidDefaultSuggestions; // @synthesize hasValidDefaultSuggestions=_hasValidDefaultSuggestions;
@property(copy, nonatomic) NSString *currencyCode; // @synthesize currencyCode=_currencyCode;
@property(nonatomic) long long decimalPrecision; // @synthesize decimalPrecision=_decimalPrecision;
@property(nonatomic) unsigned long long powerOfTenFactor; // @synthesize powerOfTenFactor=_powerOfTenFactor;
@property(copy, nonatomic) NSArray *defaultValues; // @synthesize defaultValues=_defaultValues;
@property(copy, nonatomic) NSDecimalNumber *maxLoadAmount; // @synthesize maxLoadAmount=_maxLoadAmount;
@property(copy, nonatomic) NSDecimalNumber *minLoadAmount; // @synthesize minLoadAmount=_minLoadAmount;
@property(copy, nonatomic) NSDecimalNumber *maxBalance; // @synthesize maxBalance=_maxBalance;
@property(copy, nonatomic) NSDecimalNumber *minBalance; // @synthesize minBalance=_minBalance;
@property(copy, nonatomic) NSDecimalNumber *cardBalance; // @synthesize cardBalance=_cardBalance;
- (id)_generateValuesToDefaults;	// IMP=0x0000000000112dec
- (id)_generateDefaultSuggestions;	// IMP=0x0000000000112a55
- (id)_maxAmountSuggestion;	// IMP=0x000000000011286e
- (id)_useMaxAmountSuggestion;	// IMP=0x000000000011260f
- (void)_generateCalculatedSuggestions;	// IMP=0x000000000011259d
- (id)_possibleValueForAmount:(id)arg1;	// IMP=0x00000000001124a0
- (_Bool)_possibleAmountIsValidWithDefaultValue:(id)arg1 amount:(id)arg2;	// IMP=0x000000000011241c
- (_Bool)_useMaximumAmountSuggestionWithAmount:(id)arg1;	// IMP=0x0000000000112368
- (_Bool)_amountIsValid:(id)arg1;	// IMP=0x000000000011221d
- (void)setUseBuiltInDefaults:(_Bool)arg1;	// IMP=0x00000000001121fa
- (id)suggestionsWithAmount:(id)arg1;	// IMP=0x00000000001111d5
- (_Bool)_lastInputExistsInGeneratedSuggestions:(id)arg1 withLastInput:(id)arg2;	// IMP=0x0000000000111018
- (id)init;	// IMP=0x0000000000111004
- (id)initWithLastInput:(id)arg1;	// IMP=0x0000000000110edb

@end

