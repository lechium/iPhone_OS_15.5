//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

#import <EmailDaemon/NSCopying-Protocol.h>

@interface EDPBMessageHeaders : PBCodable <NSCopying>
{
    CDStruct_5df41632 _bccAddress;	// 8 = 0x8
    CDStruct_5df41632 _bccContactIds;	// 32 = 0x20
    CDStruct_5df41632 _bccDomains;	// 56 = 0x38
    CDStruct_20585598 _bccIsVips;	// 80 = 0x50
    CDStruct_5df41632 _ccAddress;	// 104 = 0x68
    CDStruct_5df41632 _ccContactIds;	// 128 = 0x80
    CDStruct_5df41632 _ccDomains;	// 152 = 0x98
    CDStruct_20585598 _ccIsVips;	// 176 = 0xb0
    CDStruct_5df41632 _references;	// 200 = 0xc8
    CDStruct_5df41632 _subjectWords;	// 224 = 0xe0
    CDStruct_5df41632 _toAddress;	// 248 = 0xf8
    CDStruct_5df41632 _toContactIds;	// 272 = 0x110
    CDStruct_5df41632 _toDomains;	// 296 = 0x128
    CDStruct_20585598 _toIsVips;	// 320 = 0x140
    unsigned long long _dateReceived;	// 344 = 0x158
    long long _listId;	// 352 = 0x160
    long long _sender;	// 360 = 0x168
    long long _senderContactId;	// 368 = 0x170
    long long _senderDomain;	// 376 = 0x178
    _Bool _messageIsForwarded;	// 384 = 0x180
    _Bool _messageIsReply;	// 385 = 0x181
    _Bool _senderIsVip;	// 386 = 0x182
    _Bool _userIsBcc;	// 387 = 0x183
    _Bool _userIsCc;	// 388 = 0x184
    _Bool _userIsSender;	// 389 = 0x185
    _Bool _userIsTo;	// 390 = 0x186
    struct {
        unsigned int dateReceived:1;
        unsigned int listId:1;
        unsigned int sender:1;
        unsigned int senderContactId:1;
        unsigned int senderDomain:1;
        unsigned int messageIsForwarded:1;
        unsigned int messageIsReply:1;
        unsigned int senderIsVip:1;
        unsigned int userIsBcc:1;
        unsigned int userIsCc:1;
        unsigned int userIsSender:1;
        unsigned int userIsTo:1;
    } _has;	// 392 = 0x188
}

@property(nonatomic) long long listId; // @synthesize listId=_listId;
@property(nonatomic) unsigned long long dateReceived; // @synthesize dateReceived=_dateReceived;
@property(nonatomic) _Bool userIsBcc; // @synthesize userIsBcc=_userIsBcc;
@property(nonatomic) _Bool userIsCc; // @synthesize userIsCc=_userIsCc;
@property(nonatomic) _Bool userIsTo; // @synthesize userIsTo=_userIsTo;
@property(nonatomic) _Bool messageIsForwarded; // @synthesize messageIsForwarded=_messageIsForwarded;
@property(nonatomic) _Bool messageIsReply; // @synthesize messageIsReply=_messageIsReply;
@property(nonatomic) _Bool userIsSender; // @synthesize userIsSender=_userIsSender;
@property(nonatomic) long long senderContactId; // @synthesize senderContactId=_senderContactId;
@property(nonatomic) _Bool senderIsVip; // @synthesize senderIsVip=_senderIsVip;
@property(nonatomic) long long senderDomain; // @synthesize senderDomain=_senderDomain;
@property(nonatomic) long long sender; // @synthesize sender=_sender;
- (void)mergeFrom:(id)arg1;	// IMP=0x00000000000c1667
- (unsigned long long)hash;	// IMP=0x00000000000c13a5
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000c0f21
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000c0c48
- (void)copyTo:(id)arg1;	// IMP=0x00000000000c0325
- (void)writeTo:(id)arg1;	// IMP=0x00000000000bfc0e
- (_Bool)readFrom:(id)arg1;	// IMP=0x00000000000bfc00
- (id)dictionaryRepresentation;	// IMP=0x00000000000bd825
- (id)description;	// IMP=0x00000000000bd755
- (void)setBccContactIds:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd73e
- (long long)bccContactIdAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bd64e
- (void)addBccContactId:(long long)arg1;	// IMP=0x00000000000bd63a
- (void)clearBccContactIds;	// IMP=0x00000000000bd629
@property(readonly, nonatomic) long long *bccContactIds;
@property(readonly, nonatomic) unsigned long long bccContactIdsCount;
- (void)setBccIsVips:(_Bool *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd5ef
- (_Bool)bccIsVipAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bd500
- (void)addBccIsVip:(_Bool)arg1;	// IMP=0x00000000000bd4ed
- (void)clearBccIsVips;	// IMP=0x00000000000bd4dc
@property(readonly, nonatomic) _Bool *bccIsVips;
@property(readonly, nonatomic) unsigned long long bccIsVipsCount;
- (void)setBccDomains:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd4a2
- (long long)bccDomainAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bd3b2
- (void)addBccDomain:(long long)arg1;	// IMP=0x00000000000bd39e
- (void)clearBccDomains;	// IMP=0x00000000000bd38d
@property(readonly, nonatomic) long long *bccDomains;
@property(readonly, nonatomic) unsigned long long bccDomainsCount;
- (void)setBccAddress:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd353
- (long long)bccAddressAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bd263
- (void)addBccAddress:(long long)arg1;	// IMP=0x00000000000bd24f
- (void)clearBccAddress;	// IMP=0x00000000000bd23e
@property(readonly, nonatomic) long long *bccAddress;
@property(readonly, nonatomic) unsigned long long bccAddressCount;
- (void)setCcContactIds:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd204
- (long long)ccContactIdAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bd114
- (void)addCcContactId:(long long)arg1;	// IMP=0x00000000000bd100
- (void)clearCcContactIds;	// IMP=0x00000000000bd0ef
@property(readonly, nonatomic) long long *ccContactIds;
@property(readonly, nonatomic) unsigned long long ccContactIdsCount;
- (void)setCcIsVips:(_Bool *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bd0b5
- (_Bool)ccIsVipAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bcfc6
- (void)addCcIsVip:(_Bool)arg1;	// IMP=0x00000000000bcfb3
- (void)clearCcIsVips;	// IMP=0x00000000000bcfa2
@property(readonly, nonatomic) _Bool *ccIsVips;
@property(readonly, nonatomic) unsigned long long ccIsVipsCount;
- (void)setCcDomains:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bcf68
- (long long)ccDomainAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bce78
- (void)addCcDomain:(long long)arg1;	// IMP=0x00000000000bce64
- (void)clearCcDomains;	// IMP=0x00000000000bce53
@property(readonly, nonatomic) long long *ccDomains;
@property(readonly, nonatomic) unsigned long long ccDomainsCount;
- (void)setCcAddress:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bce19
- (long long)ccAddressAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bcd29
- (void)addCcAddress:(long long)arg1;	// IMP=0x00000000000bcd15
- (void)clearCcAddress;	// IMP=0x00000000000bcd04
@property(readonly, nonatomic) long long *ccAddress;
@property(readonly, nonatomic) unsigned long long ccAddressCount;
- (void)setToContactIds:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bccca
- (long long)toContactIdAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bcbda
- (void)addToContactId:(long long)arg1;	// IMP=0x00000000000bcbc6
- (void)clearToContactIds;	// IMP=0x00000000000bcbb5
@property(readonly, nonatomic) long long *toContactIds;
@property(readonly, nonatomic) unsigned long long toContactIdsCount;
- (void)setToIsVips:(_Bool *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bcb7b
- (_Bool)toIsVipAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bca8c
- (void)addToIsVip:(_Bool)arg1;	// IMP=0x00000000000bca79
- (void)clearToIsVips;	// IMP=0x00000000000bca68
@property(readonly, nonatomic) _Bool *toIsVips;
@property(readonly, nonatomic) unsigned long long toIsVipsCount;
- (void)setToDomains:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bca2e
- (long long)toDomainAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bc93e
- (void)addToDomain:(long long)arg1;	// IMP=0x00000000000bc92a
- (void)clearToDomains;	// IMP=0x00000000000bc919
@property(readonly, nonatomic) long long *toDomains;
@property(readonly, nonatomic) unsigned long long toDomainsCount;
- (void)setToAddress:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bc8df
- (long long)toAddressAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bc7ef
- (void)addToAddress:(long long)arg1;	// IMP=0x00000000000bc7db
- (void)clearToAddress;	// IMP=0x00000000000bc7ca
@property(readonly, nonatomic) long long *toAddress;
@property(readonly, nonatomic) unsigned long long toAddressCount;
- (void)setReferences:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bc790
- (long long)referencesAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bc6a0
- (void)addReferences:(long long)arg1;	// IMP=0x00000000000bc68c
- (void)clearReferences;	// IMP=0x00000000000bc67b
@property(readonly, nonatomic) long long *references;
@property(readonly, nonatomic) unsigned long long referencesCount;
@property(nonatomic) _Bool hasListId;
@property(nonatomic) _Bool hasDateReceived;
@property(nonatomic) _Bool hasUserIsBcc;
@property(nonatomic) _Bool hasUserIsCc;
@property(nonatomic) _Bool hasUserIsTo;
@property(nonatomic) _Bool hasMessageIsForwarded;
@property(nonatomic) _Bool hasMessageIsReply;
- (void)setSubjectWords:(long long *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000bc42c
- (long long)subjectWordsAtIndex:(unsigned long long)arg1;	// IMP=0x00000000000bc33c
- (void)addSubjectWords:(long long)arg1;	// IMP=0x00000000000bc328
- (void)clearSubjectWords;	// IMP=0x00000000000bc317
@property(readonly, nonatomic) long long *subjectWords;
@property(readonly, nonatomic) unsigned long long subjectWordsCount;
@property(nonatomic) _Bool hasUserIsSender;
@property(nonatomic) _Bool hasSenderContactId;
@property(nonatomic) _Bool hasSenderIsVip;
@property(nonatomic) _Bool hasSenderDomain;
@property(nonatomic) _Bool hasSender;
- (void)dealloc;	// IMP=0x00000000000bc040

@end

