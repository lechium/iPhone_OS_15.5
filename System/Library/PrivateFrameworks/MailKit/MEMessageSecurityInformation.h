//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MailKit/NSSecureCoding-Protocol.h>

@class NSArray, NSError, NSString;

@interface MEMessageSecurityInformation : NSObject <NSSecureCoding>
{
    _Bool _isEncrypted;	// 8 = 0x8
    _Bool _shouldBlockRemoteContent;	// 9 = 0x9
    NSArray *_signers;	// 16 = 0x10
    NSError *_signingError;	// 24 = 0x18
    NSError *_encryptionError;	// 32 = 0x20
    NSString *_localizedRemoteContentBlockingReason;	// 40 = 0x28
    NSString *_decoderID;	// 48 = 0x30
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000000db36
- (void).cxx_destruct;	// IMP=0x000000000000e2fe
@property(retain, nonatomic) NSString *decoderID; // @synthesize decoderID=_decoderID;
@property(readonly, nonatomic) NSString *localizedRemoteContentBlockingReason; // @synthesize localizedRemoteContentBlockingReason=_localizedRemoteContentBlockingReason;
@property(readonly, nonatomic) _Bool shouldBlockRemoteContent; // @synthesize shouldBlockRemoteContent=_shouldBlockRemoteContent;
@property(readonly, nonatomic) NSError *encryptionError; // @synthesize encryptionError=_encryptionError;
@property(readonly, nonatomic) NSError *signingError; // @synthesize signingError=_signingError;
@property(readonly, nonatomic) _Bool isEncrypted; // @synthesize isEncrypted=_isEncrypted;
@property(readonly, nonatomic) NSArray *signers; // @synthesize signers=_signers;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000e29e
- (unsigned long long)hash;	// IMP=0x000000000000e1fb
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000df0f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000000dd6e
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000000db3e
- (id)initWithSigners:(id)arg1 isEncrypted:(_Bool)arg2 signingError:(id)arg3 encryptionError:(id)arg4 shouldBlockRemoteContent:(_Bool)arg5 localizedRemoteContentBlockingReason:(id)arg6;	// IMP=0x000000000000da20
- (id)initWithSigners:(id)arg1 isEncrypted:(_Bool)arg2 signingError:(id)arg3 encryptionError:(id)arg4;	// IMP=0x000000000000da05

@end

