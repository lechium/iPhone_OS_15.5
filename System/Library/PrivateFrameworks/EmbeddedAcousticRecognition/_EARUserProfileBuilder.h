//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class _EARPeopleSuggesterConfig;

@interface _EARUserProfileBuilder : NSObject
{
    map_03a1181d _userData;	// 8 = 0x8
    struct shared_ptr<quasar::LmeDataFactory> _dataFactory;	// 32 = 0x20
    struct unique_ptr<sdapi::SdapiTokenizer, std::default_delete<sdapi::SdapiTokenizer>> _tokenizer;	// 48 = 0x30
    struct unique_ptr<quasar::G2P, std::default_delete<quasar::G2P>> _g2p;	// 56 = 0x38
    struct shared_ptr<quasar::PronCache<std::string, std::vector<std::string>>> _pronCache;	// 64 = 0x40
    struct BasicTextSanitizer _sanitizer;	// 80 = 0x50
    struct unique_ptr<quasar::PersonalizationRecipe, std::default_delete<quasar::PersonalizationRecipe>> _personalizationRecipe;	// 240 = 0xf0
    struct unique_ptr<quasar::LmeData, std::default_delete<quasar::LmeData>> _quasarLmeData;	// 248 = 0xf8
    struct unique_ptr<quasar::WordPronCache, std::default_delete<quasar::WordPronCache>> _outPronCache;	// 256 = 0x100
    int _outPronCacheHits;	// 264 = 0x108
    int _outPronCacheMisses;	// 268 = 0x10c
    int _wordsRejected;	// 272 = 0x110
    int _wordsAccepted;	// 276 = 0x114
    struct unordered_map<std::string, int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, int>>> _quasarTemplate2Count;	// 280 = 0x118
}

+ (_Bool)isEasyToRecognizeWord:(id)arg1 forLocale:(id)arg2;	// IMP=0x0000000000058b15
+ (void)initialize;	// IMP=0x0000000000058ad5
- (id).cxx_construct;	// IMP=0x000000000005ee90
- (void).cxx_destruct;	// IMP=0x000000000005edd4
@property(readonly, nonatomic) _EARPeopleSuggesterConfig *peopleSuggesterConfig;
- (id)createInlineLmeUserDataForContextData:(id)arg1 speechProfile:(id)arg2;	// IMP=0x000000000005e2a0
- (void)createInlineLmeUserDataForContextStrings:(id)arg1;	// IMP=0x000000000005dcda
- (void)signalEndOfUserData;	// IMP=0x000000000005dcb9
- (id)sanitizedStringWithString:(id)arg1;	// IMP=0x000000000005dbb3
- (id)pronunciationsForOrthography:(id)arg1;	// IMP=0x000000000005cf93
- (void)writeOutUserDataToJson:(id)arg1 withConfig:(id)arg2;	// IMP=0x000000000005cdf3
- (void)addPersonalizationJsonData:(id)arg1;	// IMP=0x000000000005cace
- (void)addPersonalizationData:(id)arg1;	// IMP=0x000000000005c5ea
- (void)readUserProfile:(id)arg1;	// IMP=0x000000000005c30d
- (id)dataProfile;	// IMP=0x000000000005bea1
- (void)removeAllWords;	// IMP=0x000000000005be1e
- (void)addWordWithParts:(id)arg1 templateName:(id)arg2;	// IMP=0x000000000005aaab
- (id)initWithConfiguration:(id)arg1 language:(id)arg2 overrides:(id)arg3 sdapiOverrides:(id)arg4 generalVoc:(id)arg5 emptyVoc:(id)arg6 pgVoc:(id)arg7 lexiconEnh:(id)arg8 tokenEnh:(id)arg9 paramsetHolder:(id)arg10;	// IMP=0x00000000000599ff
- (id)initWithConfiguration:(id)arg1 language:(id)arg2 sdapiOverrides:(id)arg3 generalVoc:(id)arg4 emptyVoc:(id)arg5 pgVoc:(id)arg6 lexiconEnh:(id)arg7 tokenEnh:(id)arg8 paramsetHolder:(id)arg9;	// IMP=0x00000000000599bc
- (id)initWithConfiguration:(id)arg1 withLanguage:(id)arg2 withSdapiOverrides:(id)arg3 withSdapiConfig:(id)arg4;	// IMP=0x0000000000058bef

@end

