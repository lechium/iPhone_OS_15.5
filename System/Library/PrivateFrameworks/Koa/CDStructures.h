//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Allocator;

struct Dataset {
    unsigned char _field1[1];
};

struct DatasetInfo {
    unsigned char _field1[1];
};

struct Field {
    unsigned char _field1[1];
};

struct FlatBufferBuilder {
    struct vector_downward buf_;
    unsigned int num_field_loc;
    unsigned short max_voffset_;
    _Bool nested;
    _Bool finished;
    unsigned long long minalign_;
    _Bool force_defaults_;
    _Bool dedup_vtables_;
    void *string_pool;
};

struct Item {
    unsigned char _field1[1];
};

struct Profile {
    unsigned char _field1[1];
};

struct ProfileInfo {
    unsigned char _field1[1];
};

struct vector<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Dataset>, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Dataset>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Dataset>*, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Dataset>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>*, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<apple::aiml::flatbuffers2::Offset<koa::vocabulary::NestedItem>, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::NestedItem>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<apple::aiml::flatbuffers2::Offset<koa::vocabulary::NestedItem>*, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::NestedItem>>> {
        void *__value_;
    } __end_cap_;
};

struct vector_downward {
    struct Allocator *allocator_;
    _Bool own_allocator_;
    unsigned long long initial_size_;
    unsigned long long buffer_minalign_;
    unsigned long long reserved_;
    char *buf_;
    char *cur_;
    char *scratch_;
};

