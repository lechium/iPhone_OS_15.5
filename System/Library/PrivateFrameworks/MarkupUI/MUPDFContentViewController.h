//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MarkupUI/MUContentViewControllerProtocol-Protocol.h>
#import <MarkupUI/PDFAKControllerDelegateProtocol-Protocol.h>
#import <MarkupUI/PDFDocumentDelegate-Protocol.h>
#import <MarkupUI/PDFThumbnailContextMenuDelegate-Protocol.h>
#import <MarkupUI/PDFViewDelegatePrivate-Protocol.h>
#import <MarkupUI/_UIViewBoundingPathChangeObserver-Protocol.h>

@class MUPDFPageLabelView, NSArray, NSLayoutConstraint, NSString, PDFDocument, PDFPage, PDFThumbnailView, PDFView, UIScrollView, UIView;

@interface MUPDFContentViewController <PDFAKControllerDelegateProtocol, PDFViewDelegatePrivate, _UIViewBoundingPathChangeObserver, PDFDocumentDelegate, PDFThumbnailContextMenuDelegate, MUContentViewControllerProtocol>
{
    PDFDocument *_pdfDocument;	// 8 = 0x8
    MUPDFPageLabelView *_pageLabelView;	// 16 = 0x10
    long long _thumbnailViewStyle;	// 24 = 0x18
    _Bool _allowsThumbnailViewPageReordering;	// 32 = 0x20
    NSLayoutConstraint *pageLabelViewTopConstraint;	// 40 = 0x28
    NSLayoutConstraint *pageLabelViewSideConstraint;	// 48 = 0x30
    _Bool _showsThumbnailView;	// 56 = 0x38
    _Bool _fixedThumbnailView;	// 57 = 0x39
    _Bool _navigationModeHorizontal;	// 58 = 0x3a
    _Bool _forcesPDFViewTopAlignment;	// 59 = 0x3b
    _Bool _constraintsAreHorizontal;	// 60 = 0x3c
    _Bool _viewIsTransitioningBetweenSizes;	// 61 = 0x3d
    _Bool _viewTransitionPreviousAutoscalingState;	// 62 = 0x3e
    _Bool _didSetup;	// 63 = 0x3f
    NSArray *_sourceContentReplacedAnnotationMaps;	// 64 = 0x40
    PDFView *_pdfView;	// 72 = 0x48
    PDFThumbnailView *_thumbnailView;	// 80 = 0x50
    unsigned long long _inkStyle;	// 88 = 0x58
    UIView *_thumbnailViewHolder;	// 96 = 0x60
    UIView *_scrollerBackgroundView;	// 104 = 0x68
    NSArray *_thumbnailViewHolderConstraints;	// 112 = 0x70
    NSLayoutConstraint *_pdfViewLeadingConstraint;	// 120 = 0x78
    NSLayoutConstraint *_thumbnailViewHolderWidthConstraint;	// 128 = 0x80
    NSLayoutConstraint *_thumbnailViewHolderRevealConstraint;	// 136 = 0x88
    NSLayoutConstraint *_thumbnailViewLeadingConstraint;	// 144 = 0x90
    PDFPage *_viewTransitionPageToCenter;	// 152 = 0x98
    double _viewTransitionPreviousScale;	// 160 = 0xa0
    struct CGPoint _viewTransitionPointOnPageToCenter;	// 168 = 0xa8
    struct UIEdgeInsets _edgeInsets;	// 184 = 0xb8
    struct UIEdgeInsets _cachedThumnailViewInsets;	// 216 = 0xd8
}

- (void).cxx_destruct;	// IMP=0x0000000000023b3b
@property(nonatomic) struct UIEdgeInsets cachedThumnailViewInsets; // @synthesize cachedThumnailViewInsets=_cachedThumnailViewInsets;
@property _Bool didSetup; // @synthesize didSetup=_didSetup;
@property _Bool viewTransitionPreviousAutoscalingState; // @synthesize viewTransitionPreviousAutoscalingState=_viewTransitionPreviousAutoscalingState;
@property double viewTransitionPreviousScale; // @synthesize viewTransitionPreviousScale=_viewTransitionPreviousScale;
@property struct CGPoint viewTransitionPointOnPageToCenter; // @synthesize viewTransitionPointOnPageToCenter=_viewTransitionPointOnPageToCenter;
@property __weak PDFPage *viewTransitionPageToCenter; // @synthesize viewTransitionPageToCenter=_viewTransitionPageToCenter;
@property _Bool viewIsTransitioningBetweenSizes; // @synthesize viewIsTransitioningBetweenSizes=_viewIsTransitioningBetweenSizes;
@property(retain) NSLayoutConstraint *thumbnailViewLeadingConstraint; // @synthesize thumbnailViewLeadingConstraint=_thumbnailViewLeadingConstraint;
@property(retain) NSLayoutConstraint *thumbnailViewHolderRevealConstraint; // @synthesize thumbnailViewHolderRevealConstraint=_thumbnailViewHolderRevealConstraint;
@property(retain) NSLayoutConstraint *thumbnailViewHolderWidthConstraint; // @synthesize thumbnailViewHolderWidthConstraint=_thumbnailViewHolderWidthConstraint;
@property(retain) NSLayoutConstraint *pdfViewLeadingConstraint; // @synthesize pdfViewLeadingConstraint=_pdfViewLeadingConstraint;
@property(retain) NSArray *thumbnailViewHolderConstraints; // @synthesize thumbnailViewHolderConstraints=_thumbnailViewHolderConstraints;
@property _Bool constraintsAreHorizontal; // @synthesize constraintsAreHorizontal=_constraintsAreHorizontal;
@property(retain) UIView *scrollerBackgroundView; // @synthesize scrollerBackgroundView=_scrollerBackgroundView;
@property(retain) UIView *thumbnailViewHolder; // @synthesize thumbnailViewHolder=_thumbnailViewHolder;
@property(nonatomic) unsigned long long inkStyle; // @synthesize inkStyle=_inkStyle;
@property(nonatomic) _Bool forcesPDFViewTopAlignment; // @synthesize forcesPDFViewTopAlignment=_forcesPDFViewTopAlignment;
@property(retain) PDFThumbnailView *thumbnailView; // @synthesize thumbnailView=_thumbnailView;
@property(retain) PDFView *pdfView; // @synthesize pdfView=_pdfView;
@property(nonatomic) _Bool navigationModeHorizontal; // @synthesize navigationModeHorizontal=_navigationModeHorizontal;
@property(nonatomic) _Bool fixedThumbnailView; // @synthesize fixedThumbnailView=_fixedThumbnailView;
@property(nonatomic) _Bool showsThumbnailView; // @synthesize showsThumbnailView=_showsThumbnailView;
@property(retain) NSArray *sourceContentReplacedAnnotationMaps; // @synthesize sourceContentReplacedAnnotationMaps=_sourceContentReplacedAnnotationMaps;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(readonly) PDFDocument *pdfDocument; // @synthesize pdfDocument=_pdfDocument;
- (struct CGAffineTransform)_compensatingAffineTransformForPage:(id)arg1;	// IMP=0x00000000000235df
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000000000234e9
- (void)_userChangedScrollViewMagnificationNotification:(id)arg1;	// IMP=0x00000000000233d6
- (void)_updateMinMaxZoomFactor;	// IMP=0x000000000002332f
- (struct CGSize)_medianSizeForCurrentDocumentInPDFViewWithGetter:(CDUnknownBlockType)arg1;	// IMP=0x000000000002314f
- (void)_recoverFromRotation;	// IMP=0x0000000000022e7e
- (void)_prepareToRotate;	// IMP=0x0000000000022e41
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x0000000000022d22
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000022c1f
- (void)highlight:(id)arg1;	// IMP=0x0000000000022ba4
- (id)contentSnapshot;	// IMP=0x00000000000229fe
- (struct CGRect)visibleContentRectInCoordinateSpace:(id)arg1;	// IMP=0x000000000002282b
- (struct CGRect)visibleContentRect;	// IMP=0x00000000000227b1
- (_Bool)isTouchInThumbnailView:(id)arg1;	// IMP=0x0000000000022708
@property(nonatomic) long long thumbnailViewStyle;
@property(readonly, nonatomic) __weak UIView *pageLabelView;
- (void)_updatePageNumberOverlayToPage:(unsigned long long)arg1 animate:(_Bool)arg2;	// IMP=0x000000000002207b
- (void)_removePageLabelViewConstraints;	// IMP=0x0000000000021fce
- (void)pdfDocumentDidUnlock:(id)arg1;	// IMP=0x0000000000021e5a
- (void)pdfViewDidChangeCurrentPage:(id)arg1;	// IMP=0x0000000000021d49
- (void)uninstallAllAnnotationControllerOverlays;	// IMP=0x0000000000021d43
- (void)_teardownPDFViewIfNecessary;	// IMP=0x0000000000021a89
- (void)_createPDFView;	// IMP=0x0000000000021350
@property(readonly, nonatomic) NSString *documentUnlockedWithPassword;
- (void)_updateThumbnailViewAppearance;	// IMP=0x000000000002101c
- (void)_updateThumbnailViewHolderConstraints;	// IMP=0x00000000000205f7
- (void)removeThumbnailViewHolderConstraints;	// IMP=0x0000000000020517
- (void)_updateThumbnailViewHolderBackgroundVisibility;	// IMP=0x00000000000204bf
- (void)_updateThumbnailViewHolderBackgroundColor;	// IMP=0x00000000000201ab
- (_Bool)_updateCachedThumbnailViewInsetsDidChangeLeftOrRight;	// IMP=0x0000000000020043
- (struct CGSize)_thumbnailViewCellSize;	// IMP=0x000000000001ffc0
- (double)_thumbnailViewWidth;	// IMP=0x000000000001ff04
- (void)_boundingPathMayHaveChangedForView:(id)arg1 relativeToBoundsOriginOnly:(_Bool)arg2;	// IMP=0x000000000001fe33
- (void)_updatePDFViewDisplayMode;	// IMP=0x000000000001fd5f
@property(readonly) unsigned long long pageCount;
- (void)controllerWillDismissSignatureManagerView:(id)arg1;	// IMP=0x000000000001f0bc
- (void)controllerWillShowSignatureManagerView:(id)arg1;	// IMP=0x000000000001f04a
- (void)controllerWillDismissSignatureCaptureView:(id)arg1;	// IMP=0x000000000001efd8
- (void)controllerWillShowSignatureCaptureView:(id)arg1;	// IMP=0x000000000001ef66
- (void)penStrokeCompletedForAnnotationController:(id)arg1;	// IMP=0x000000000001eef4
- (void)editCheckpointReachedForAnnotationController:(id)arg1;	// IMP=0x000000000001ee82
- (void)annotationController:(id)arg1 detectedEditOfType:(unsigned long long)arg2;	// IMP=0x000000000001ee0a
- (id)popoverPresentingViewControllerForAnnotationController:(id)arg1;	// IMP=0x000000000001ee01
- (void)positionSketchOverlay:(id)arg1 forAnnotationController:(id)arg2;	// IMP=0x000000000001ed87
- (id)controller:(id)arg1 willSetToolbarItems:(id)arg2;	// IMP=0x000000000001ecf1
- (id)menuElementsForPage:(id)arg1;	// IMP=0x000000000001ec64
- (_Bool)shouldShowAnnotationsOfType:(id)arg1;	// IMP=0x000000000001ebf3
- (_Bool)PDFView:(id)arg1 shouldHandleLink:(id)arg2;	// IMP=0x000000000001eb68
@property(readonly, nonatomic) UIScrollView *contentViewScrollView;
@property(readonly, nonatomic) long long defaultToolTag;
- (struct CGSize)idealContentSizeForScreenSize:(struct CGSize)arg1 windowDecorationSize:(struct CGSize)arg2;	// IMP=0x000000000001e854
- (struct CGSize)contentSize;	// IMP=0x000000000001e71a
- (void)loadContentWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000001e687
- (void)teardown;	// IMP=0x000000000001e5e4
- (void)setup;	// IMP=0x000000000001e5ab
- (void)viewSafeAreaInsetsDidChange;	// IMP=0x000000000001e56a
- (void)viewDidLayoutSubviews;	// IMP=0x000000000001e38e
- (void)viewDidLoad;	// IMP=0x000000000001e2f3
- (_Bool)_canShowWhileLocked;	// IMP=0x000000000001e2eb
- (void)dealloc;	// IMP=0x000000000001e2ad
@property(nonatomic) _Bool allowsThumbnailViewPageReordering;
- (id)initWithPDFDocument:(id)arg1 delegate:(id)arg2;	// IMP=0x000000000001e0e5
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 delegate:(id)arg3;	// IMP=0x000000000001e081

// Remaining properties
@property(nonatomic) _Bool centersIgnoringContentInsets;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

