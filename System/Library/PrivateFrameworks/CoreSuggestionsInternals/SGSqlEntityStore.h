//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreSuggestionsInternals/CSSearchableIndexDelegate-Protocol.h>

@class NSDictionary, NSMutableArray, NSMutableOrderedSet, NSSet, NSString, SGBloomFilter, SGCoalescingDropBox, SGDatabaseJournal, SGJournal, SGKeyValueCacheManager, SGMIFeatureStore, SGSGtoCNContactsCacheUpdateAdapter, SGSpotlightContactsAdapter, SGSqliteDatabase, SGSqliteDatabaseSharedLock, SGSuggestHistory, _PASLock;
@protocol OS_dispatch_queue;

@interface SGSqlEntityStore : NSObject <CSSearchableIndexDelegate>
{
    SGSqliteDatabase *_db;	// 8 = 0x8
    SGSqliteDatabaseSharedLock *_sharedWriteLock;	// 16 = 0x10
    SGSqliteDatabase *_snippetDb;	// 24 = 0x18
    SGDatabaseJournal *_snippetsJournal;	// 32 = 0x20
    SGMIFeatureStore *_sgmiFeatureStore;	// 40 = 0x28
    SGSuggestHistory *_history;	// 48 = 0x30
    _Atomic _Bool _identityStoreDirty;	// 56 = 0x38
    NSDictionary *_entityMigrations;	// 64 = 0x40
    NSDictionary *_snippetsMigrations;	// 72 = 0x48
    unsigned int _entityVersion;	// 80 = 0x50
    unsigned int _snippetsVersion;	// 84 = 0x54
    _Bool _entityMigrationRequiresMergeBlobUpdate;	// 88 = 0x58
    unsigned long long _lostMessageOverflow;	// 96 = 0x60
    NSMutableArray *_deallocNotifications;	// 104 = 0x68
    struct atomic_flag _isClosed;	// 112 = 0x70
    SGJournal *_journal;	// 120 = 0x78
    SGSpotlightContactsAdapter *_spotlightContactsAdapter;	// 128 = 0x80
    SGSGtoCNContactsCacheUpdateAdapter *_sgToCNContactsCacheUpdateAdapter;	// 136 = 0x88
    unsigned long long _parentMessagesLimit;	// 144 = 0x90
    unsigned long long _serializedContactsLimit;	// 152 = 0x98
    _PASLock *_recentlyDeletedEmailKeys;	// 160 = 0xa0
    _Atomic int _spotlightReindexCount;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_spotlightReindexQueue;	// 176 = 0xb0
    NSSet *_prematchedContactIdentifiers;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_precomputationQueue;	// 192 = 0xc0
    SGBloomFilter *_messageRecipients;	// 200 = 0xc8
    CDUnknownBlockType _crLookup;	// 208 = 0xd0
    NSString *_snippetDbPath;	// 216 = 0xd8
    id _lockStateNotificationRegistrationToken;	// 224 = 0xe0
    _Bool _executeJournals;	// 232 = 0xe8
    NSMutableOrderedSet *_otherDetailsWithNoContact;	// 240 = 0xf0
    SGCoalescingDropBox *_cnToSGContactsCachePendingUpdateRequests;	// 248 = 0xf8
    _Bool _isEphemeral;	// 256 = 0x100
    _Bool _waitForMigrations;	// 257 = 0x101
    SGKeyValueCacheManager *_kvCacheManager;	// 264 = 0x108
}

+ (id)likePrefix:(id)arg1;	// IMP=0x00000000001de136
+ (id)escapeLike:(id)arg1;	// IMP=0x00000000001de04e
+ (id)globPrefix:(id)arg1;	// IMP=0x00000000001ddfc6
+ (id)_fieldValuesClassWhitelist;	// IMP=0x00000000001ddf96
+ (_Bool)contactContainsEphemeralId:(id)arg1;	// IMP=0x00000000001dd822
+ (_Bool)isEphemeralIdentifier:(long long)arg1;	// IMP=0x00000000001dd80c
+ (id)_recreateCorruptDatabase:(id)arg1 sharedLock:(id)arg2 withProtection:(_Bool)arg3;	// IMP=0x00000000001dd4e4
+ (void)releaseInstanceAndWaitForDealloc:(id *)arg1;	// IMP=0x00000000001dd42d
+ (void)addPathToFutureDbSchemas:(id)arg1;	// IMP=0x00000000001dd3b1
+ (_Bool)pathHasFutureDbSchema:(id)arg1;	// IMP=0x00000000001dd331
+ (id)initializeDatabase:(id)arg1 withProtection:(_Bool)arg2 sharedLock:(id)arg3 newDatabaseCreated:(_Bool *)arg4;	// IMP=0x00000000001dd17e
+ (id)_initializeDatabaseNolock:(id)arg1 withProtection:(_Bool)arg2 sharedLock:(id)arg3 newDatabaseCreated:(_Bool *)arg4;	// IMP=0x00000000001dccc0
+ (id)sqlStoreWithEntityDbPathNoMigrate:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(_Bool)arg3 executeJournals:(_Bool)arg4;	// IMP=0x00000000001dcbb9
+ (id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(_Bool)arg3 sharedLock:(id)arg4 executeJournals:(_Bool)arg5;	// IMP=0x00000000001dca9c
+ (id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(_Bool)arg3 executeJournals:(_Bool)arg4;	// IMP=0x00000000001dc995
+ (void)deletePreparedSqlStoreInMemory;	// IMP=0x00000000001dc95a
+ (void)prepareSqlStoreInMemoryByClearingExistingStore:(id)arg1;	// IMP=0x00000000001dc8f6
+ (void)prepareSqlStoreInMemory;	// IMP=0x00000000001dc822
+ (id)sqlStoreInMemory;	// IMP=0x00000000001dc739
+ (id)defaultHarvestStore;	// IMP=0x00000000001dc66c
+ (id)defaultStore;	// IMP=0x00000000001dc59c
+ (id)storeWithDefaultLocationAndExecuteJournals:(_Bool)arg1;	// IMP=0x00000000001dc1e3
+ (id)defaultSnippetPath;	// IMP=0x00000000001dc1c3
+ (id)defaultPath;	// IMP=0x00000000001dc1ac
+ (id)defaultPathCreatingSuggestionsDirectoryIfNeeded:(_Bool)arg1;	// IMP=0x00000000001dc18a
+ (id)_deserializeDateComponents:(id)arg1;	// IMP=0x0000000000015394
+ (id)_serializeDate:(id)arg1;	// IMP=0x000000000001532a
+ (void)setCachedVIPEmailAddresses:(id)arg1;	// IMP=0x0000000000168972
+ (id)_cachedVIPEmailAddresses;	// IMP=0x00000000001688e5
+ (_Bool)canStoreEventsForAccountType:(id)arg1;	// IMP=0x00000000001881eb
+ (void)clearMigrationCompletedForPaths;	// IMP=0x0000000000193375
+ (id)cnContactIdentifiersForContact:(id)arg1;	// IMP=0x00000000001c4de6
+ (id)cnContactIdentifiersSpotlightQueryStringForContact:(id)arg1;	// IMP=0x00000000001c2acf
+ (id)journalNameForDbPath:(id)arg1;	// IMP=0x00000000001fdee0
- (void).cxx_destruct;	// IMP=0x00000000001d5b17
@property(readonly) SGKeyValueCacheManager *kvCacheManager; // @synthesize kvCacheManager=_kvCacheManager;
@property(readonly) SGSGtoCNContactsCacheUpdateAdapter *sgToCNContactsCacheUpdateAdapter; // @synthesize sgToCNContactsCacheUpdateAdapter=_sgToCNContactsCacheUpdateAdapter;
@property(readonly) SGSpotlightContactsAdapter *spotlightContactsAdapter; // @synthesize spotlightContactsAdapter=_spotlightContactsAdapter;
@property(readonly, nonatomic) _Bool waitForMigrations; // @synthesize waitForMigrations=_waitForMigrations;
@property(readonly, nonatomic) _Bool isEphemeral; // @synthesize isEphemeral=_isEphemeral;
- (id)sgmiFeatureStore;	// IMP=0x00000000001d5ab5
- (id)dumpTables:(id)arg1 columns:(id)arg2;	// IMP=0x00000000001d57bc
- (unsigned long long)numberOfRowsInTable:(id)arg1;	// IMP=0x00000000001d57a6
- (void)truncateContactDetailTable;	// IMP=0x00000000001d5753
- (void)resolveFullDownloadRequests:(id)arg1;	// IMP=0x00000000001d56ac
- (id)loadFullDownloadRequestBatch:(unsigned long long)arg1;	// IMP=0x00000000001d55b7
- (id)journal;	// IMP=0x00000000001d55a9
- (id)duplicateKeysMatchingInteractionBundleId:(id)arg1 andTags:(id)arg2;	// IMP=0x00000000001d5359
- (id)_hashWithDuplicateKeysMatchingTags:(id)arg1;	// IMP=0x00000000001d5086
- (id)duplicateKeysMatchingAnyReminderHash:(id)arg1;	// IMP=0x00000000001d502f
- (id)duplicateKeysMatchingAnyEventHash:(id)arg1;	// IMP=0x00000000001d4fd8
- (id)duplicateKeysMatchingAnyTag:(id)arg1;	// IMP=0x00000000001d4ced
- (_Bool)reminderAlarmTriggeredForStorageReminder:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4c6d
- (_Bool)rejectStoredReminder:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4bd6
- (_Bool)confirmStoredReminder:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4b3f
- (_Bool)reminderAlarmTriggeredForRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4913
- (_Bool)rejectReminderByKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d46e7
- (_Bool)rejectReminderByRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d44bb
- (_Bool)confirmReminderByRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d428f
- (_Bool)rejectStoredEvent:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d41f7
- (_Bool)rejectContactDetailByRecordID:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4158
- (_Bool)confirmContactDetailByRecordID:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4143
- (_Bool)rejectContactByRecordID:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4083
- (_Bool)confirmContactByRecordID:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d4018
- (_Bool)confirm:(_Bool)arg1 orRejectContactByRecordID:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001d3f7d
- (_Bool)rejectEventByRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3d43
- (_Bool)confirmStoredEvent:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3c56
- (_Bool)confirmEventByRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3a1c
- (_Bool)confirmRealtimeContact:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3751
- (_Bool)rejectRealtimeContact:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3628
- (_Bool)confirmRealtimeEvent:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3458
- (_Bool)rejectRealtimeEvent:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001d3288
- (id)confirmedFieldValuesForEvent:(id)arg1;	// IMP=0x00000000001d301a
- (id)confirmedFieldValuesForEntity:(id)arg1;	// IMP=0x00000000001d2e4b
- (id)rejectFieldValuesForRecordId:(id)arg1;	// IMP=0x00000000001d2d2d
- (void)confirmFieldValues:(id)arg1 forEntity:(id)arg2;	// IMP=0x00000000001d2ad1
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_)arg1 endingAt:(struct SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3 additionalWhereClause:(id)arg4 options:(unsigned int)arg5 onPrep:(CDUnknownBlockType)arg6;	// IMP=0x00000000001d2611
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_)arg1 endingAt:(struct SGUnixTimestamp_)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4;	// IMP=0x00000000001d25f9
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_)arg1 endingAt:(struct SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3;	// IMP=0x00000000001d25e5
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_)arg1 endingAt:(struct SGUnixTimestamp_)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5;	// IMP=0x00000000001d2519
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_)arg1 endingAt:(struct SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4;	// IMP=0x00000000001d24fc
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1;	// IMP=0x00000000001d223b
- (id)_filterOutCancelledEvents:(id)arg1;	// IMP=0x00000000001d21e5
- (_Bool)eventIsCancelled:(id)arg1;	// IMP=0x00000000001d1d96
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1;	// IMP=0x00000000001d1d40
- (id)eventFromSqlResult:(struct sqlite3_stmt *)arg1;	// IMP=0x00000000001d1ce9
- (id)contactIdsMergedWithMasterEntityId:(id)arg1;	// IMP=0x00000000001d1b02
- (void)rebuildContactDetailsCacheWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001d1a18
- (id)suggestContactMatchesByContactDetailTag:(id)arg1 matchType:(long long)arg2;	// IMP=0x00000000001d13dc
- (id)suggestContactMatchesByContactDetailTag:(id)arg1;	// IMP=0x00000000001d13c8
- (long long)entityTypeFromIdentityKeyType:(unsigned long long)arg1;	// IMP=0x00000000001d13ac
- (long long)contactMatchedRecordTypeFromIdentityKeyType:(unsigned long long)arg1;	// IMP=0x00000000001d1390
- (long long)contactMatchedRecordTypeFromEntityType:(long long)arg1;	// IMP=0x00000000001d1376
- (id)suggestContactByRecordId:(id)arg1 withSnippets:(_Bool)arg2 filterConfirmRejectDetails:(_Bool)arg3;	// IMP=0x00000000001d114c
- (id)suggestContactByRecordId:(id)arg1;	// IMP=0x00000000001d112f
- (id)storageContactByRecordId:(id)arg1 withSnippets:(_Bool)arg2;	// IMP=0x00000000001d0f50
- (id)suggestContactByIdentityKey:(id)arg1 parentKey:(id)arg2;	// IMP=0x00000000001d0dbe
- (id)suggestContactByKey:(id)arg1;	// IMP=0x00000000001d0bf2
- (id)storageContactByKey:(id)arg1;	// IMP=0x00000000001d09cb
- (id)suggestContactMatchesBySocialProfile:(id)arg1;	// IMP=0x00000000001d09b1
- (id)suggestContactMatchesBySocialProfile:(id)arg1 isMaybe:(_Bool)arg2 onlySignificant:(_Bool)arg3;	// IMP=0x00000000001d0793
- (id)suggestContactMatchesByEmailAddress:(id)arg1;	// IMP=0x00000000001d0779
- (id)suggestContactMatchesByEmailAddress:(id)arg1 isMaybe:(_Bool)arg2 onlySignificant:(_Bool)arg3;	// IMP=0x00000000001d0710
- (id)suggestContactMatchesByPhoneNumber:(id)arg1;	// IMP=0x00000000001d06f6
- (id)suggestContactMatchesByPhoneNumber:(id)arg1 isMaybe:(_Bool)arg2 onlySignificant:(_Bool)arg3;	// IMP=0x00000000001d068d
- (id)suggestContactMatchesByType:(long long)arg1 searchString:(id)arg2 isMaybe:(_Bool)arg3 onlySignificant:(_Bool)arg4;	// IMP=0x00000000001d0414
- (id)allContactsMasterEntityIdsLimitedTo:(unsigned long long)arg1;	// IMP=0x00000000001d037a
- (id)allContactsWithSnippets:(_Bool)arg1 limitTo:(unsigned long long)arg2;	// IMP=0x00000000001d024e
- (void)enumerateAllContactsWithSnippets:(_Bool)arg1 limitTo:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001d019b
- (id)_queryForAllContactsWithLimit;	// IMP=0x00000000001d018e
- (id)_matchableUTF8TokenRangesInMatchExpression:(id)arg1;	// IMP=0x00000000001cfe84
- (id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2;	// IMP=0x00000000001cf892
- (id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2;	// IMP=0x00000000001cf35c
- (struct _PASDBIterAction_)_processContactMatchWithContacts:(id)arg1 matches:(id)arg2 limit:(long long)arg3 masterEntityId:(id)arg4 detailEntityId:(id)arg5 contactEntityId:(id)arg6 matchinfoData:(id)arg7 tokens:(id)arg8 requireName:(_Bool)arg9;	// IMP=0x00000000001ced7e
- (id)suggestContactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2;	// IMP=0x00000000001ceaa6
- (id)_rankSGContacts:(id)arg1 bySimilarityToContact:(id)arg2;	// IMP=0x00000000001ce808
- (double)_scoreSGContact:(id)arg1 bySimilarityToContact:(id)arg2 cnContactFullname:(id)arg3;	// IMP=0x00000000001ce56d
- (_Bool)historyHasContact:(id)arg1;	// IMP=0x00000000001ce557
- (void)filterOutRejectedDetailsFromContact:(id)arg1;	// IMP=0x00000000001ce16a
- (id)suggestContactsWithContact:(id)arg1 withSnippets:(_Bool)arg2 filterConfirmRejectDetails:(_Bool)arg3 limitTo:(unsigned long long)arg4;	// IMP=0x00000000001ce01f
- (id)_contactIdForInteractionContactIdentifierMatch:(id)arg1;	// IMP=0x00000000001cde84
- (void)_contactIdsForContactNameMatches:(id)arg1 strongNameIds:(id)arg2 weakNameIds:(id)arg3;	// IMP=0x00000000001cdc2e
- (void)_contactIdsForContactDetailMatches:(id)arg1 detailContactIds:(id)arg2 socialProfileContactIds:(id)arg3;	// IMP=0x00000000001cd84c
- (id)suggestContactsWithPrefix:(id)arg1 limitTo:(unsigned long long)arg2;	// IMP=0x00000000001cd71a
- (void)bindCheckContactRow:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x00000000001cd665
- (id)suggestContactsByMasterEntityQuery:(id)arg1 withSnippets:(_Bool)arg2 limit:(unsigned long long)arg3 bindings:(CDUnknownBlockType)arg4;	// IMP=0x00000000001cd592
- (id)suggestContactsByMasterEntityQuery:(id)arg1 limit:(unsigned long long)arg2 bindings:(CDUnknownBlockType)arg3;	// IMP=0x00000000001cd575
- (void)enumerateContactsByMasterEntityQuery:(id)arg1 withSnippets:(_Bool)arg2 limit:(unsigned long long)arg3 bindings:(CDUnknownBlockType)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000000001cd457
- (id)_contactsForMasterEntityIds:(id)arg1 withSnippets:(_Bool)arg2;	// IMP=0x00000000001cd380
- (void)_enumerateContactsForMasterEntityIds:(id)arg1 withSnippets:(_Bool)arg2 filterConfirmRejectDetails:(_Bool)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000001cd0ad
- (void)_enumerateContactsForMasterEntityIds:(id)arg1 withSnippets:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001cd092
- (id)_contactForMasterEntityId:(id)arg1 withSnippets:(_Bool)arg2 filterConfirmRejectDetails:(_Bool)arg3;	// IMP=0x00000000001ccf66
- (id)masterEntityIDsForMasterEntityQuery:(id)arg1 bindings:(CDUnknownBlockType)arg2;	// IMP=0x00000000001cce45
- (id)storageContactByMasterEntityId:(long long)arg1 withSnippets:(_Bool)arg2;	// IMP=0x00000000001cc996
- (_Bool)contactIsDisplayable:(id)arg1;	// IMP=0x00000000001cc754
- (id)parentKeysForDuplicateKey:(id)arg1;	// IMP=0x00000000001cc64d
- (id)mostRecentParentKeyForDuplicateKey:(id)arg1;	// IMP=0x00000000001cc4f6
- (id)emailsPendingVerification;	// IMP=0x00000000001cc183
- (id)nextPendingGeocode;	// IMP=0x00000000001cc071
- (void)clearNoContactsCache;	// IMP=0x00000000001cbf6c
- (_Bool)_isStringInNoContactsCache:(id)arg1;	// IMP=0x00000000001cbde2
- (void)_addStringToNoContactsCache:(id)arg1;	// IMP=0x00000000001cbc5a
- (void)removeStringFromNoContactsCache:(id)arg1;	// IMP=0x00000000001cbb7f
- (void)clearCaches;	// IMP=0x00000000001cbb03
- (void)clearMasterEntityCache;	// IMP=0x00000000001cbab8
- (void)_removeCorruptionMarker;	// IMP=0x00000000001cb9c5
- (_Bool)corruptionMarkerPresent;	// IMP=0x00000000001cb930
- (void)addDeallocNotification:(CDUnknownBlockType)arg1;	// IMP=0x00000000001cb823
- (void)closeDatabases;	// IMP=0x00000000001cb7d4
- (void)dealloc;	// IMP=0x00000000001cb5d2
- (id)initWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(_Bool)arg3 sharedLock:(id)arg4 executeJournals:(_Bool)arg5 noMigrate:(_Bool)arg6;	// IMP=0x00000000001cadf7
- (_Bool)_runInitMigrationTasks:(id)arg1 noMigrate:(_Bool)arg2;	// IMP=0x00000000001ca171
- (id)initForDbStatsOnlyWithError:(id *)arg1;	// IMP=0x00000000001ca019
- (id)initForRawDatabaseAccessWithEntityPath:(id)arg1 snippetsPath:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001c9dc3
- (_Bool)deleteURLsFromBundleIdentifier:(id)arg1 documentIdentifiers:(id)arg2;	// IMP=0x000000000000c999
- (_Bool)deleteURLsFromBundleIdentifier:(id)arg1 groupIdentifierGlobs:(id)arg2;	// IMP=0x000000000000c759
- (_Bool)deleteURLsFromBundleIdentifier:(id)arg1;	// IMP=0x000000000000c60e
- (id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 bundleIdentifier:(id)arg3;	// IMP=0x000000000000c3a1
- (_Bool)deleteURLsOlderThanDate:(id)arg1 deletionCount:(long long *)arg2;	// IMP=0x000000000000c2a5
- (_Bool)trimURLTableDownToLimit:(long long)arg1 deletionCount:(long long *)arg2;	// IMP=0x000000000000c1f0
- (_Bool)trimURLs;	// IMP=0x000000000000c133
- (_Bool)writeURL:(id)arg1;	// IMP=0x000000000000c023
- (struct _PASDBIterAction_)_updateURLs:(id)arg1 stmt:(struct sqlite3_stmt *)arg2;	// IMP=0x000000000000bc36
- (id)_columnList;	// IMP=0x000000000000bc29
- (_Bool)registerURLFeedback:(unsigned char)arg1 absoluteURL:(id)arg2;	// IMP=0x000000000000bb76
- (id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 excludingBundleIdentifiers:(id)arg3 containingSubstring:(id)arg4 flagFilter:(unsigned char)arg5 limit:(long long)arg6;	// IMP=0x000000000000b886
- (id)recentURLsWithLimit:(long long)arg1;	// IMP=0x000000000000b73c
- (long long)reminderPrimaryKeyForEntityId:(id)arg1;	// IMP=0x00000000000142ef
- (id)reminderEntityIdForPrimaryKey:(long long)arg1;	// IMP=0x00000000000141cc
- (id)reminderOriginForPrimaryKey:(long long)arg1;	// IMP=0x0000000000013f9e
- (id)reminderEntityIdForDuplicateKey:(id)arg1;	// IMP=0x0000000000013e47
- (id)reminderDuplicateKeyForEntityId:(id)arg1;	// IMP=0x0000000000013cda
- (id)reminderSourceKeyForDuplicateKey:(id)arg1;	// IMP=0x0000000000013b83
- (long long)commitStorageReminder:(id)arg1;	// IMP=0x0000000000013956
- (id)getReminder:(long long)arg1;	// IMP=0x0000000000013802
- (id)getReminderWithDuplicateKey:(id)arg1;	// IMP=0x0000000000013793
- (id)getReminderWithRecordId:(id)arg1;	// IMP=0x0000000000013762
- (id)getNSDateForKey:(id)arg1;	// IMP=0x000000000001796c
- (void)setNSDate:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000001787b
- (id)getNSStringForKey:(id)arg1;	// IMP=0x0000000000017862
- (void)setNSString:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000177c7
- (id)getDoubleNSNumberForKey:(id)arg1;	// IMP=0x00000000000177ae
- (void)setDoubleNSNumber:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000017713
- (void)incrementInt64NSNumber:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000175c6
- (id)getInt64NSNumberForKey:(id)arg1;	// IMP=0x00000000000175ad
- (void)setInt64NSNumber:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000017512
- (id)getForKey:(id)arg1 binder:(CDUnknownBlockType)arg2;	// IMP=0x0000000000017359
- (void)deleteValueForKey:(id)arg1;	// IMP=0x00000000000172c1
- (void)setValue:(id)arg1 forKey:(id)arg2 binder:(CDUnknownBlockType)arg3;	// IMP=0x0000000000017200
- (void)markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:(id)arg1;	// IMP=0x000000000002c98e
- (void)setMailIntelligenceStagedLogs:(id)arg1 forMessageId:(id)arg2;	// IMP=0x000000000002c8b8
- (id)mailIntelligenceStagedLogsForMessageId:(id)arg1;	// IMP=0x000000000002c50b
- (void)setAllMailIntelligenceAsNotSalient;	// IMP=0x000000000002c4b8
- (void)setAllMailIntelligenceAsSalient;	// IMP=0x000000000002c465
- (void)clearSaliencyTable;	// IMP=0x000000000002c412
- (long long)updateSaliencyCreationTimestampForTesting:(long long)arg1 timestamp:(struct SGUnixTimestamp_)arg2;	// IMP=0x000000000002c2ee
- (long long)commitSaliency:(id)arg1;	// IMP=0x000000000002c201
- (long long)insertSaliency:(id)arg1;	// IMP=0x000000000002c0e1
- (long long)updateSaliency:(long long)arg1 saliency:(id)arg2;	// IMP=0x000000000002bf1d
- (long long)checkExistsSaliencyForMessageId:(id)arg1;	// IMP=0x000000000002bdc7
- (id)topSalienciesForMailboxId:(id)arg1 limit:(long long)arg2;	// IMP=0x000000000002bbd9
- (id)saliencyForMessageId:(id)arg1;	// IMP=0x000000000002ba31
- (id)uniqueIdentifierForMessageId:(id)arg1;	// IMP=0x0000000000032061
- (void)logConfirmPercentAfterContactDetailRejection;	// IMP=0x000000000007ad36
- (void)logConfirmPercentAfterContactDetailConfirmation;	// IMP=0x000000000007acaa
- (void)logConfirmPercentAfterContactRejection;	// IMP=0x000000000007ac21
- (void)logConfirmPercentAfterContactConfirmation;	// IMP=0x000000000007ab95
- (void)_logConfirmPercentWithConfirmCount:(double)arg1 rejectCount:(double)arg2 domain:(id)arg3 suffix:(id)arg4;	// IMP=0x000000000007ab41
- (double)incStatsCounterWithKey:(id)arg1;	// IMP=0x000000000007ab27
- (double)incStatsCounterWithKey:(id)arg1 byValue:(double)arg2;	// IMP=0x000000000007aa1b
- (id)loadStatsCounterWithKey:(id)arg1;	// IMP=0x000000000007a8c4
- (void)storeStatsCounterWithKey:(id)arg1 value:(double)arg2;	// IMP=0x000000000007a81d
- (void)analyzeMergeBlobs:(id)arg1;	// IMP=0x00000000000c78d6
- (_Bool)_analyzeMergeBlobsIncremental:(id)arg1;	// IMP=0x00000000000c7737
- (_Bool)_isBlobAnalysisQueueEmpty;	// IMP=0x00000000000c7688
- (id)_popMergeBlobForAnalysis;	// IMP=0x00000000000c75aa
- (void)_writeMergeBlobSnapshotForAnalysis:(id)arg1;	// IMP=0x00000000000c7512
- (id)makeInterdictsForBlob:(id)arg1 withContactStore:(id)arg2;	// IMP=0x00000000000c6ab4
- (id)_uniqueGoodDetailMatchFrom:(id)arg1 toDetails:(id)arg2 nonUnique:(_Bool *)arg3;	// IMP=0x00000000000c691c
- (id)unmergedCandidatesLimitedTo:(int)arg1;	// IMP=0x00000000000c63b9
- (id)splitBlob:(id)arg1 withInterdicts:(id)arg2 edges:(id)arg3 curatedRecordIds:(id)arg4;	// IMP=0x00000000000c554b
- (id)_makeBlobsFromConnectedComponents:(id)arg1 edges:(id)arg2;	// IMP=0x00000000000c4ef9
- (id)computeBlobs;	// IMP=0x00000000000c4dd2
- (id)_computeBlobsRaw:(id *)arg1;	// IMP=0x00000000000c4d22
- (void)_linkNamelessSocialProfilesIfAppropriate:(struct graph_t *)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle *)arg3 edges:(id)arg4;	// IMP=0x00000000000c44fb
- (void)_linkNamelessPhonesIfAppropriate:(struct graph_t *)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle *)arg3 edges:(id)arg4;	// IMP=0x00000000000c3cd4
- (void)_linkNamelessEmailsIfAppropriate:(struct graph_t *)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle *)arg3 edges:(id)arg4;	// IMP=0x00000000000c34d4
- (id)curatedRecordIds;	// IMP=0x00000000000c343c
- (id)getAllLinks;	// IMP=0x00000000000c33a4
- (void)deleteByRecordId:(id)arg1;	// IMP=0x00000000000c330c
- (void)link:(id)arg1 to:(id)arg2 type:(unsigned int)arg3 strength:(double)arg4;	// IMP=0x00000000000c31ca
- (void)_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;	// IMP=0x00000000000c2d41
- (void)_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;	// IMP=0x00000000000c28b8
- (void)_joinIncompleteIdentityEmailWithOthersOfItsIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;	// IMP=0x00000000000c24c6
- (_Bool)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 socialProfiles:(id)arg4 email:(id)arg5 curated:(_Bool)arg6 isSent:(_Bool)arg7;	// IMP=0x00000000000c132d
- (_Bool)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 socialProfiles:(id)arg4 email:(id)arg5 curated:(_Bool)arg6;	// IMP=0x00000000000c1308
- (_Bool)rebuildIdentityTables;	// IMP=0x00000000000c120b
- (_Bool)processContactEnrichment:(id)arg1 recordId:(id)arg2;	// IMP=0x00000000000c1059
- (_Bool)processPseudoContactEntity:(id)arg1 recordId:(id)arg2;	// IMP=0x00000000000c0d89
- (id)splitNeededFor:(id)arg1 withInterdicts:(id)arg2 curatedRecordIds:(id)arg3;	// IMP=0x00000000000c07fc
- (id)loadInterdicts;	// IMP=0x00000000000c0764
- (void)addInterdictFrom:(id)arg1 with:(id)arg2;	// IMP=0x00000000000c05d7
- (void)forceBlobSync;	// IMP=0x00000000000c0586
- (_Bool)syncNewBlobsIfChanged;	// IMP=0x00000000000c04dc
- (id)getNewBlobsIfChanged;	// IMP=0x00000000000c047b
- (id)batch:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c0456
- (void)_markIdentityStoreClean;	// IMP=0x00000000000c044b
- (void)_markIdentityStoreDirty;	// IMP=0x00000000000c0440
- (_Bool)_isIdentityStoreDirty;	// IMP=0x00000000000c0435
- (id)reimportRequestDBStats;	// IMP=0x00000000001061df
- (void)_deleteOrphanedItems;	// IMP=0x000000000010618c
- (void)deleteCompletedReimportRequests;	// IMP=0x0000000000106139
- (void)deleteAllReimportRequestsOlderThanDate:(id)arg1;	// IMP=0x00000000001060a1
- (_Bool)reimportRequestsContainBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x0000000000105c23
- (id)loadUnseenReimportItemsForRequest:(unsigned long long)arg1;	// IMP=0x0000000000105b1b
- (id)_loadReimportRequestsWithWhereClause:(id)arg1;	// IMP=0x0000000000105a29
- (id)loadAllReimportRequests;	// IMP=0x0000000000105a10
- (id)loadUnexecutedReimportRequests;	// IMP=0x00000000001059f7
- (id)loadUnqueriedReimportRequests;	// IMP=0x00000000001059de
- (void)updateReimportItemUniqueIdForBundleId:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;	// IMP=0x00000000001058f0
- (void)markReimportItemAsSeenByReceiverWithBundleId:(id)arg1 uniqueId:(id)arg2;	// IMP=0x000000000010582f
- (void)markReimportItemsAsSeenByReceiverWithBundleId:(id)arg1 items:(id)arg2;	// IMP=0x000000000010576e
- (void)markReimportRequestAsExecutedWithRequestId:(unsigned long long)arg1;	// IMP=0x0000000000105714
- (void)storeReimportItems:(id)arg1 requestId:(unsigned long long)arg2;	// IMP=0x000000000010563f
- (unsigned long long)storeReimportRequest:(id)arg1;	// IMP=0x000000000010554c
- (long long)commitStorageLocation:(id)arg1 withEventId:(long long)arg2;	// IMP=0x000000000012a424
- (long long)commitStorageLocation:(id)arg1;	// IMP=0x000000000012a40b
- (id)storageLocationWithPrimaryKey:(long long)arg1;	// IMP=0x000000000012a2c2
- (void)deleteInteractionsWithBundleId:(id)arg1 groupIdentifiers:(id)arg2;	// IMP=0x000000000012e54a
- (void)deleteInteractionsWithBundleId:(id)arg1 identifiers:(id)arg2;	// IMP=0x000000000012e403
- (void)deleteInteractionsWithBundleId:(id)arg1;	// IMP=0x000000000012e31c
- (void)deleteItemsWithEntityTag:(id)arg1 preserveEventConfirmationHistory:(_Bool)arg2;	// IMP=0x000000000012e0f9
- (void)deleteItemsWithEntityTag:(id)arg1;	// IMP=0x000000000012e0e2
- (void)deleteInteractionEntitiesExceedingLimit:(id)arg1 withSuspensionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012deea
- (void)deleteMessagesByDuplicateKey:(id)arg1;	// IMP=0x000000000012de77
- (void)deleteEntitiesByDuplicateKey:(id)arg1 preserveEventConfirmationHistory:(_Bool)arg2 emitChangeNotifications:(_Bool)arg3;	// IMP=0x000000000012d681
- (void)deleteEntitiesByDuplicateKey:(id)arg1 emitChangeNotifications:(_Bool)arg2;	// IMP=0x000000000012d667
- (id)_deleteMessageMetadataByDuplicateKeyNoRecurse:(id)arg1;	// IMP=0x000000000012d436
- (void)_deleteEventsByRecordIds:(id)arg1;	// IMP=0x000000000012d27e
- (void)_deleteContactDetailsByRecordIds:(id)arg1;	// IMP=0x000000000012d137
- (void)_deleteRemindersByRecordIds:(id)arg1;	// IMP=0x000000000012cff0
- (id)_deleteEntitiesByDuplicateKeyNoRecurse:(id)arg1;	// IMP=0x000000000012ce55
- (id)_derefChildrenOf:(id)arg1;	// IMP=0x000000000012cba1
- (id)_deleteChildEntitiesByRecordIdsInTable:(id)arg1;	// IMP=0x000000000012c69e
- (void)_recordPseudoContactsWithDeletedDetailsInTable:(id)arg1 deletedChildrenTable:(id)arg2;	// IMP=0x000000000012c511
- (id)childrenFromParentKey:(id)arg1;	// IMP=0x000000000012c3ca
- (void)deleteMessages:(id)arg1;	// IMP=0x000000000012bf8b
- (void)pruneNLEventEntitiesOlderThan:(struct SGUnixTimestamp_)arg1;	// IMP=0x000000000012bd01
- (void)pruneReminders;	// IMP=0x000000000012baf4
- (void)pruneNLEventEntitiesOlderThanTwoWeeks;	// IMP=0x000000000012ba90
- (void)pruneDuplicateEventExtractions:(id)arg1;	// IMP=0x000000000012b696
- (void)clearMailIntelligence;	// IMP=0x000000000012b5c8
- (void)deleteMailIntelligenceForMessageIds:(id)arg1;	// IMP=0x000000000012b530
- (void)pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000012b1f3
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_)arg1 suspensionHandler:(CDUnknownBlockType)arg2 batchSize:(unsigned long long)arg3;	// IMP=0x000000000012aed3
- (void)pruneEntitiesOlderThanOneYearWithSuspensionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000012ae46
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_)arg1 suspensionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012ae2f
- (void)_removeSnippetsForEmails:(id)arg1;	// IMP=0x000000000012acf3
- (void)removeSnippetsForEntities:(id)arg1;	// IMP=0x000000000012abb7
- (void)clearSubModelsTables;	// IMP=0x0000000000131235
- (void)applyCappingPolicy:(id)arg1 byDiscardingTokensCounts:(id)arg2 withMargin:(float)arg3;	// IMP=0x00000000001311c1
- (id)getViolationsToTokenCountsPolicy:(id)arg1;	// IMP=0x00000000001311b4
- (void)deleteTokensForDeletedEmailAddresses:(id)arg1;	// IMP=0x0000000000131142
- (id)getSGMIStoredAddresses;	// IMP=0x00000000001310f2
- (void)purgeTokensWhichLastUpdateWasBefore:(id)arg1;	// IMP=0x000000000013107e
- (id)subModelsStats;	// IMP=0x000000000013102e
- (_Bool)areSubModelsEmpty;	// IMP=0x0000000000130fea
- (void)commitNaiveBayesModel:(id)arg1 probabilityFeatureName:(long long)arg2 updateDate:(id)arg3;	// IMP=0x0000000000130f5c
- (void)commitNaiveBayesModel:(id)arg1 probabilityFeatureName:(long long)arg2;	// IMP=0x0000000000130edb
- (void)deleteNaiveBayesModelForProbabilityFeatureName:(long long)arg1;	// IMP=0x0000000000130e8f
- (id)highlyDiscriminantTokensForFeature:(long long)arg1 minCount:(unsigned long long)arg2 minRatio:(double)arg3;	// IMP=0x0000000000130e19
- (id)naiveBayesModelQueryResultForFeature:(long long)arg1 unigramTokens:(id)arg2 bigramTokens:(id)arg3;	// IMP=0x0000000000130d7a
- (float)_scoreContactDetail:(id)arg1;	// IMP=0x000000000013f5e8
- (id)columnQueryPrefixSelect;	// IMP=0x000000000013f5cc
- (void)selectAuthoritativeDetailsForContactWithId:(long long)arg1;	// IMP=0x000000000013f572
- (_Bool)clearDatabases;	// IMP=0x000000000013f532
- (void)vacuum;	// IMP=0x000000000013f4f7
- (void)clearAllTables;	// IMP=0x000000000013f433
- (void)analyzeDatabase;	// IMP=0x000000000013f418
- (id)dbStats;	// IMP=0x000000000013eb75
- (id)selectEntityQuery:(id)arg1;	// IMP=0x000000000013eadf
- (unsigned long long)entityCount;	// IMP=0x000000000013e9c3
- (id)allPseudoContacts;	// IMP=0x000000000013e9ac
- (id)allContactsWithEntityType:(unsigned long long)arg1;	// IMP=0x000000000013e899
- (id)entityFromSqlResult:(struct sqlite3_stmt *)arg1 withSnippets:(_Bool)arg2;	// IMP=0x000000000013dd60
- (id)entityFromSqlResult:(struct sqlite3_stmt *)arg1;	// IMP=0x000000000013dd49
- (_Bool)databasecheck_contactMergeGroupConsistency;	// IMP=0x00000000001430a4
- (_Bool)databasecheck_BrokenEntityIDReferences;	// IMP=0x0000000000142cd5
- (_Bool)databasecheck_IntegrityCheck;	// IMP=0x0000000000142ad7
- (_Bool)performIntegrityCheckOnly;	// IMP=0x0000000000142a30
- (_Bool)performDatabaseCheck;	// IMP=0x00000000001427a7
- (void)_reportDbStatsBackground;	// IMP=0x0000000000146c82
- (void)reportDbStats;	// IMP=0x0000000000146712
- (void)registerCachePrecomputationWithCTS;	// IMP=0x00000000001465b4
- (void)registerSentTextMessage:(id)arg1;	// IMP=0x0000000000168287
- (_Bool)mayHaveSentMessageToHandle:(id)arg1;	// IMP=0x0000000000168230
- (id)normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:(id)arg1;	// IMP=0x00000000001680fd
- (void)registerSentMailMessage:(id)arg1;	// IMP=0x0000000000168006
- (_Bool)mayHaveSentMessageToEmail:(id)arg1;	// IMP=0x0000000000167fbe
- (_Bool)recentsContainSomeOfEmails:(id)arg1 phoneNumbers:(id)arg2 instantMessageAddresses:(id)arg3;	// IMP=0x00000000001679b6
- (void)setCRLookupForTesting:(CDUnknownBlockType)arg1;	// IMP=0x000000000016798b
- (_Bool)anyHandleIsSignificant:(id)arg1;	// IMP=0x00000000001675a1
- (_Bool)anyEmailAddressIsSignificant:(id)arg1;	// IMP=0x000000000016731e
- (_Bool)realtimeContactIsSignificantOrSignificanceIsDisabled:(id)arg1;	// IMP=0x0000000000167282
- (_Bool)realtimeContactIsSignificant:(id)arg1;	// IMP=0x00000000001671a1
- (_Bool)contactIsSignificantOrSignificanceIsDisabled:(id)arg1 usingCoreRecents:(_Bool)arg2;	// IMP=0x0000000000167105
- (_Bool)contactIsSignificantOrSignificanceIsDisabled:(id)arg1;	// IMP=0x00000000001670ee
- (_Bool)contactIsSignificant:(id)arg1 usingCoreRecents:(_Bool)arg2;	// IMP=0x0000000000166860
- (_Bool)contactIsSignificant:(id)arg1;	// IMP=0x0000000000166849
- (id)loadAllContactDetailsFromTableForRecordId:(id)arg1;	// IMP=0x0000000000177aed
- (id)loadAllContactDetailsFromTableForRecordId:(id)arg1 type:(unsigned long long)arg2;	// IMP=0x0000000000177944
- (id)contactDetailEntityIdForDuplicateKey:(id)arg1;	// IMP=0x00000000001777af
- (long long)contactDetailPrimaryKeyForDuplicateKey:(id)arg1;	// IMP=0x0000000000177682
- (long long)commitContactDetail:(id)arg1;	// IMP=0x0000000000177500
- (void)writeIdentityBlobs:(id)arg1 forceRewrite:(_Bool)arg2;	// IMP=0x0000000000181985
- (void)_writeLabeledBlobs:(id)arg1 deletedMasterEntityIds:(id)arg2;	// IMP=0x00000000001809bc
- (id)_labelIdentityBlobs:(id)arg1;	// IMP=0x0000000000180321
- (id)_loadIdentityBlobs;	// IMP=0x000000000018027e
- (void)_writeFTSTermsForEnrichment:(id)arg1 entityId:(long long)arg2;	// IMP=0x000000000017fc71
- (void)_writeContactEntityToJournal:(id)arg1;	// IMP=0x000000000017fa9e
- (void)_writeEventEntityToJournal:(id)arg1;	// IMP=0x000000000017f9d0
- (void)_writeReminderEntitiesToJournal:(id)arg1;	// IMP=0x000000000017f88a
- (void)_writeEventEntitiesToJournal:(id)arg1;	// IMP=0x000000000017f6ae
- (id)_journalEntryFromReminderEntity:(id)arg1;	// IMP=0x000000000017f648
- (id)_journalEntryFromEntity:(id)arg1;	// IMP=0x000000000017f536
- (void)_writeEntityParentageFor:(id)arg1 entityId:(long long)arg2;	// IMP=0x000000000017f492
- (long long)_writeEnrichmentToDb:(id)arg1;	// IMP=0x000000000017ee38
- (void)_contentWriteEnrichmentToDb:(id)arg1;	// IMP=0x000000000017ed1f
- (long long)_writeOneEntityToDb:(id)arg1;	// IMP=0x000000000017eb83
- (long long)_writeMessageEntityToDb:(id)arg1;	// IMP=0x000000000017e7b5
- (void)markEntityAsDupeByRecordId:(id)arg1;	// IMP=0x000000000017e644
- (void)writeEmailVerificationResultForEmailWithKey:(id)arg1 eventEntities:(id)arg2;	// IMP=0x000000000017e583
- (void)writeEntityGeocodeResultToDb:(id)arg1;	// IMP=0x000000000017e3b2
- (void)_addLocations:(id)arg1 toEntityWriteDictionary:(id)arg2;	// IMP=0x000000000017e2fb
- (void)_addTimeRange:(id)arg1 toEntityWriteDictionary:(id)arg2;	// IMP=0x000000000017e129
- (void)_writeEnrichmentToSnippetsDb:(id)arg1;	// IMP=0x000000000017de41
- (void)_writeMessageEntityToSnippetsDb:(id)arg1;	// IMP=0x000000000017db3a
- (_Bool)entityWantsFullDownload:(id)arg1;	// IMP=0x000000000017da0b
- (id)_computePseudoContactContentHash:(id)arg1 contactDetails:(id)arg2;	// IMP=0x000000000017d62d
- (void)_dumpTable:(id)arg1 columns:(id)arg2 limitTo:(int)arg3;	// IMP=0x000000000017d3d6
- (void)_addIndexingTagsToParent:(id)arg1;	// IMP=0x000000000017d1c4
- (void)_addIndexingTagsTo:(id)arg1;	// IMP=0x000000000017c80c
- (void)_deleteOldInteractionContactDetails:(id)arg1 currentIdentifiers:(id)arg2;	// IMP=0x000000000017c5ea
- (void)_prunePseudoContactGeneratingEmails:(id)arg1;	// IMP=0x000000000017c3d1
- (void)_writeContactDetails:(id)arg1;	// IMP=0x000000000017c343
- (void)_hashAttachedPseudoContacts:(id)arg1;	// IMP=0x000000000017c2b5
- (void)_emitChangeNotifications:(id)arg1;	// IMP=0x000000000017c178
- (void)_emitChangeNotificationForEnrichment:(id)arg1;	// IMP=0x000000000017bae1
- (long long)writeEntity:(id)arg1 withSpotlightReferenceForBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;	// IMP=0x000000000017b94c
- (long long)writeEnrichment:(id)arg1;	// IMP=0x000000000017b8f0
- (long long)writeEntity:(id)arg1;	// IMP=0x000000000017afea
- (void)writeInteractionEventEntities:(id)arg1;	// IMP=0x000000000017a970
- (void)setMalformedEventWhenRangeForTesting;	// IMP=0x0000000000193270
- (struct SGUnixTimestamp_)lastSeenTimestampForKey:(id)arg1;	// IMP=0x0000000000193141
- (void)setParentMessagesLimitForTesting:(unsigned long long)arg1;	// IMP=0x0000000000193134
- (id)historyForTesting;	// IMP=0x0000000000193126
- (id)snippetsDbHandleForTesting;	// IMP=0x0000000000193118
- (id)dbHandleForTesting;	// IMP=0x000000000019310a
- (void)setLostMessageOverflow:(unsigned long long)arg1;	// IMP=0x0000000000193100
- (void)updateSerializedContacts:(id)arg1;	// IMP=0x0000000000194ca2
- (_Bool)_processBatchOfSerializedContactJobs;	// IMP=0x0000000000194bf8
- (long long)_popQueuedSerializedContactId;	// IMP=0x0000000000194b48
- (void)_trimSerializedContacts;	// IMP=0x0000000000194af5
- (id)serializedEntityIds;	// IMP=0x0000000000194a41
- (id)loadAllSerializedContacts;	// IMP=0x0000000000194989
- (id)loadSerializedContactForId:(long long)arg1;	// IMP=0x00000000001947e9
- (void)deleteSerializedContactsForIdSet:(id)arg1;	// IMP=0x0000000000194745
- (void)deleteSerializedContactForId:(long long)arg1;	// IMP=0x00000000001946eb
- (void)writeSerializedContactAndUpdateEntityIDSet:(id)arg1;	// IMP=0x00000000001946d9
- (void)writeSerializedContactPlaceholder:(long long)arg1;	// IMP=0x000000000019467f
- (void)writeSerializedContact:(id)arg1;	// IMP=0x0000000000194523
- (unsigned long long)serializedContactsLimit;	// IMP=0x0000000000194516
- (void)setSerializedContactsLimit:(unsigned long long)arg1;	// IMP=0x0000000000194509
- (id)loadEventsWithInteractionIdentifiers:(id)arg1 fromBundleIdentifier:(id)arg2;	// IMP=0x00000000001a5af7
- (id)allDeliveriesWithLimit:(unsigned long long)arg1;	// IMP=0x00000000001a5a6c
- (id)loadReminderByRecordIdOld:(id)arg1;	// IMP=0x00000000001a5965
- (id)loadReminderByKeyOld:(id)arg1;	// IMP=0x00000000001a5870
- (id)loadReminderByRecordId:(id)arg1;	// IMP=0x00000000001a585e
- (id)loadReminderByKey:(id)arg1;	// IMP=0x00000000001a584c
- (id)allRemindersLimitedTo:(unsigned long long)arg1;	// IMP=0x00000000001a5567
- (id)entityKeyCountsForEntityType:(long long)arg1 startDate:(id)arg2 endDate:(id)arg3;	// IMP=0x00000000001a542d
- (id)loadAllContactDetailsWithWhereClause:(id)arg1 onPrep:(CDUnknownBlockType)arg2 dedupeAgainst:(id)arg3;	// IMP=0x00000000001a4b5e
- (id)loadAllContactDetailsForRecordId:(id)arg1;	// IMP=0x00000000001a485f
- (id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(CDUnknownBlockType)arg2 type:(unsigned long long)arg3 dedupeAgainst:(id)arg4 recordId:(id)arg5;	// IMP=0x00000000001a3fb8
- (id)loadEventByDuplicateKey:(id)arg1;	// IMP=0x00000000001a3e64
- (id)loadEventByKeyForOldCodePathTesting:(id)arg1;	// IMP=0x00000000001a3c67
- (id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned long long)arg2;	// IMP=0x00000000001a3947
- (id)loadStorageContactByRecordId:(id)arg1;	// IMP=0x00000000001a3933
- (id)loadStorageContactByRecordId:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a36c9
- (id)masterEntityIdForContactOrContactDetailRecord:(id)arg1;	// IMP=0x00000000001a3577
- (id)loadContactForStorageContact:(id)arg1 usingSerializedContactCache:(_Bool)arg2;	// IMP=0x00000000001a34be
- (id)loadEventByRecordId:(id)arg1;	// IMP=0x00000000001a34ac
- (id)loadEntitiesBySourceKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(CDUnknownBlockType)arg3;	// IMP=0x00000000001a331d
- (id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(CDUnknownBlockType)arg3;	// IMP=0x00000000001a319f
- (id)loadEntityByKey:(id)arg1;	// IMP=0x00000000001a2f46
- (id)_loadMessageByKey:(id)arg1;	// IMP=0x00000000001a26ed
- (id)loadOriginByRecordId:(id)arg1;	// IMP=0x00000000001a268e
- (id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2 onlyMLExtractions:(_Bool)arg3;	// IMP=0x00000000001a2502
- (id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2;	// IMP=0x00000000001a24ed
- (id)loadEntityByRecordId:(id)arg1;	// IMP=0x00000000001a2247
- (id)loadSourceKeyByRecordId:(id)arg1;	// IMP=0x00000000001a2060
- (id)loadDuplicateKeyByRecordId:(id)arg1;	// IMP=0x00000000001a1e65
- (void)refreshSuggestionsContact:(id)arg1;	// IMP=0x00000000001bfe96
- (void)initRefreshSuggestionsContactDropBox;	// IMP=0x00000000001bfdb1
- (void)_deltaSyncContactsWithChangeHistory:(id)arg1;	// IMP=0x00000000001bfb9a
- (void)syncContactsWithStore:(id)arg1;	// IMP=0x00000000001bf833
- (void)setHasFullSync;	// IMP=0x00000000001bf7e0
- (_Bool)needsFullSync;	// IMP=0x00000000001bf69d
- (void)_fullSyncContactsWithStore:(id)arg1;	// IMP=0x00000000001bf36f
- (void)clearChangeHistory:(id)arg1;	// IMP=0x00000000001bf1f3
- (void)updateCNContactMatches:(id)arg1;	// IMP=0x00000000001bedea
- (void)_enqueueBatchOfCNContactIds:(id)arg1;	// IMP=0x00000000001bec44
- (id)_popBatchOfCNContactIds;	// IMP=0x00000000001be9f1
- (id)_pendingCNContactIdsJobCache;	// IMP=0x00000000001be9b9
- (id)cnContactMatchesForRecordId:(id)arg1 found:(_Bool *)arg2;	// IMP=0x00000000001be79c
- (id)loadAllPrecomputedContactMatches;	// IMP=0x00000000001be639
- (id)prematchedContactIdentifiers;	// IMP=0x00000000001be529
- (void)deleteAllCNContactMatchesForEntityID:(long long)arg1;	// IMP=0x00000000001be484
- (void)deleteAllCNContactMatchesForIdSet:(id)arg1;	// IMP=0x00000000001be21c
- (void)deleteAllCNContactMatches;	// IMP=0x00000000001be1c9
- (void)deleteCNContactMatchForContactId:(id)arg1;	// IMP=0x00000000001be131
- (id)loadCNContactMatchesForContact:(id)arg1 andGetMaxEntityId:(long long *)arg2;	// IMP=0x00000000001bddd4
- (void)writeCNContactMatchAndUpdateSetForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3;	// IMP=0x00000000001bdd03
- (void)writeCNContactMatchForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3;	// IMP=0x00000000001bdc24
- (void)writeCNContactMissForRecordId:(id)arg1;	// IMP=0x00000000001bdb70
- (long long)getMaxEntityId;	// IMP=0x00000000001bdb3f
- (void)stopJournaling;	// IMP=0x00000000001fdeb2
- (void)startJournaling;	// IMP=0x00000000001fdeac
- (void)registerJournalUnlockHandler;	// IMP=0x00000000001fdea6
- (void)handleDeviceLockStateEvent:(int)arg1;	// IMP=0x00000000001fdda4
- (void)tryExecuteSnippetsJournal;	// IMP=0x00000000001fdd9e
- (id)loadExtractionInfoForPrimaryKey:(long long)arg1;	// IMP=0x000000000022e28a
- (unsigned long long)commitExtractionInfo:(id)arg1;	// IMP=0x000000000022e12c
- (long long)migration_deleteNilDateEvents;	// IMP=0x0000000000241c05
- (long long)migration_newEventsSchema;	// IMP=0x00000000002419fd
- (long long)migration_newContactDetailsSchema;	// IMP=0x0000000000241994
- (long long)migration_newRemindersSchema;	// IMP=0x00000000002416cb
- (long long)migration_deleteSerializedContacts;	// IMP=0x000000000024159a
- (long long)migration_deleteInternalExtractionsFromML;	// IMP=0x000000000024158f
- (long long)migration_deleteEmergencyExtractions;	// IMP=0x0000000000241584
- (long long)migration_reimport;	// IMP=0x0000000000241579
- (long long)migration_deleteInteractions;	// IMP=0x00000000002412c8
- (long long)migration_rebuildFTSWithDetailEntityIDDocIDs;	// IMP=0x0000000000240f6c
- (long long)migration_separateMessageSnippets;	// IMP=0x0000000000240e8e
- (long long)migration_separateMessageEntities;	// IMP=0x0000000000240ceb
- (long long)migration_FixupMergeGroups;	// IMP=0x0000000000240c25
- (long long)migration_RemoveEntityReferencesWithoutBundleIdentifier;	// IMP=0x0000000000240c1a
- (long long)migration_DropMessagingTermsWithPhoneExtensions;	// IMP=0x0000000000240b60
- (long long)migration_ConvertContentAndDupKeyHashesToBlobs;	// IMP=0x00000000002408c9
- (long long)migration_DeduplicateIdentityPhones;	// IMP=0x0000000000240819
- (long long)migration_CreateFTSTableWithITS;	// IMP=0x000000000024078a
- (long long)migration_RecreateFTSTableWithITS;	// IMP=0x00000000002406f4
- (long long)migration_RebuildIdentityTables;	// IMP=0x00000000002406c3
- (long long)migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration;	// IMP=0x00000000002402d4
- (long long)migration_AddNewishTablesIfMissing;	// IMP=0x000000000023fe5c
- (long long)migration_AddAuthorColumnIfMissing;	// IMP=0x000000000023fd74
- (long long)migration_MoveContentToSnippets;	// IMP=0x000000000023f9f3
- (long long)migration_deleteLegacyMessages;	// IMP=0x000000000023f9d4
- (long long)migrate;	// IMP=0x000000000023ef9f
- (long long)skipFromZeroSchema;	// IMP=0x000000000023ec4a
- (void)unsafeMigrateToVersionForTesting:(unsigned long long)arg1;	// IMP=0x000000000023e965
- (long long)migrateToVersion:(unsigned long long)arg1;	// IMP=0x000000000023e5b7
- (long long)fixupVersionMismatch;	// IMP=0x000000000023e36a
- (void)updateLanguageForFTSTablesToLanguage:(id)arg1;	// IMP=0x000000000023df0a
- (_Bool)_prepareToCopyFrom:(id)arg1 toNewTableNamed:(id)arg2;	// IMP=0x000000000023ddf1
- (_Bool)_renameTable:(id)arg1 to:(id)arg2;	// IMP=0x000000000023dbe0
- (void)_slowCopyFromTable:(id)arg1 toTable:(id)arg2 startingAtEntityId:(unsigned long long)arg3;	// IMP=0x000000000023d793
- (_Bool)_createEntityFTSTableWithName:(id)arg1;	// IMP=0x000000000023d544
- (id)languageToUpdateEntityFTSTo;	// IMP=0x000000000023d2fb
- (long long)runQueries:(id)arg1 forVersion:(unsigned int)arg2 inTransactionOnDb:(id)arg3;	// IMP=0x000000000023d228
- (long long)runQuery:(id)arg1 onDb:(id)arg2;	// IMP=0x000000000023cfa6
- (_Bool)migrationNeeded;	// IMP=0x000000000023cf66
- (unsigned long long)maxKnownDbVersion;	// IMP=0x000000000023cf50
- (long long)configureMigratorThenMigrateToVersion:(unsigned long long)arg1;	// IMP=0x000000000023ce83
- (long long)clearDatabase:(id)arg1;	// IMP=0x000000000023cd90
- (long long)unmigrateDatabases;	// IMP=0x000000000023cccd
- (id)selectMigrationQueue;	// IMP=0x000000000023cbeb
- (long long)migrateDatabases;	// IMP=0x000000000023ca84
- (void)prepMigrator;	// IMP=0x000000000023c9f6
- (id)initForMigratorTestWithEntityDb:(id)arg1 snippetDb:(id)arg2;	// IMP=0x000000000023c91d
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000025ad84
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000025aca7
- (_Bool)_shouldContinueReindex:(int)arg1;	// IMP=0x000000000025ac96
- (void)reindexSearchableItemsWithMinimumEntityId:(unsigned long long)arg1 searchableIndex:(id)arg2 acknowledgementHandler:(CDUnknownBlockType)arg3 reindexCount:(int)arg4;	// IMP=0x000000000025abaf
- (unsigned long long)_minEntityIdFromMinEntityId:(unsigned long long)arg1 withContactIdentifiers:(id)arg2;	// IMP=0x000000000025aa7b
- (id)contactsWithIdentifiers:(id)arg1;	// IMP=0x000000000025a862
- (id)batchOf:(unsigned long long)arg1 contactsStartingAtEntityId:(unsigned long long)arg2;	// IMP=0x000000000025a6d9
- (_Bool)tombstoneExistsForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 domainIdentifier:(id)arg3;	// IMP=0x000000000025a506
- (void)clearAllTombstonesForSpotlightReferencesIf:(CDUnknownBlockType)arg1;	// IMP=0x000000000025a416
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1;	// IMP=0x000000000025a309
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;	// IMP=0x000000000025a141
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x000000000025a07b
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2;	// IMP=0x0000000000259d18
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifier:(id)arg2;	// IMP=0x0000000000259c86
- (_Bool)_tombstoneExistsForBundleIdentifier:(id)arg1;	// IMP=0x0000000000259b3b
- (id)_selectingDomainsForDomainIdentifier:(id)arg1;	// IMP=0x00000000002599f6
- (void)deleteSpotlightReferencesWithNoBundleIdentifier;	// IMP=0x0000000000259956
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1;	// IMP=0x000000000025986e
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2;	// IMP=0x000000000025976f
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;	// IMP=0x0000000000259675
- (void)markLostSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;	// IMP=0x0000000000259614
- (id)_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;	// IMP=0x000000000025946a
- (_Bool)isRecentlyDeleted:(id)arg1;	// IMP=0x000000000025937e
- (void)_deleteIfNoSpotlightReferences:(id)arg1 addToRecentlyDeletedCache:(_Bool)arg2;	// IMP=0x00000000002590da
- (void)_markRecordsLostIfNoSpotlightReferences:(id)arg1;	// IMP=0x000000000025902f
- (id)_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:(id)arg1;	// IMP=0x0000000000258eb7
- (_Bool)addSpotlightReferenceToEmailIfFullyDownloaded:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;	// IMP=0x0000000000258d18
- (id)recordIdForKey:(id)arg1;	// IMP=0x00000000002589e3
- (id)duplicateKeysFromRecordIds:(id)arg1;	// IMP=0x0000000000258614
- (id)duplicateKeysFromMailMessageKeys:(id)arg1;	// IMP=0x0000000000258372
- (void)addSpotlightReferenceToEmailRecordId:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;	// IMP=0x00000000002581cd
- (_Bool)hasSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x0000000000258065
- (id)domainIdentifierForSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x0000000000257ed8
- (id)displayableEntities:(id)arg1;	// IMP=0x000000000027b6c5
- (id)filterOutUndisplayableEntities:(id)arg1;	// IMP=0x000000000027b48c
- (void)markMessagesFound:(id)arg1;	// IMP=0x000000000027b3ba
- (void)pruneLostMessagesWithSource:(id)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000027b0d1
- (void)markMessagesLost:(id)arg1;	// IMP=0x000000000027adb5
- (void)markMessagesUndisplayablyLost:(id)arg1;	// IMP=0x000000000027acd0
- (void)updateMessages:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x000000000027ac30
- (id)loadMessagesToRefresh;	// IMP=0x000000000027ab6f
- (id)_deserializeRange:(id)arg1;	// IMP=0x000000000027e23f
- (id)_serializeRange:(id)arg1;	// IMP=0x000000000027e082
- (id)loadEventForRecordId:(id)arg1;	// IMP=0x000000000027df2b
- (id)loadEventForDuplicateKey:(id)arg1;	// IMP=0x000000000027dee2
- (long long)checkExistsEventForDuplicateKey:(id)arg1;	// IMP=0x000000000027ddb5
- (id)loadEventForPrimaryKey:(long long)arg1;	// IMP=0x000000000027daad
- (void)insertEventTagsAndLocations:(id)arg1 primaryKey:(long long)arg2;	// IMP=0x000000000027d7ea
- (void)bindStatementsForCommit:(id)arg1 storageEvent:(id)arg2;	// IMP=0x000000000027d4a7
- (long long)insertEvent:(id)arg1;	// IMP=0x000000000027d326
- (long long)updateEvent:(id)arg1 primaryKey:(long long)arg2;	// IMP=0x000000000027d164
- (long long)commitEvent:(id)arg1;	// IMP=0x000000000027d077
- (long long)commitSpotlightMapping:(id)arg1 bundleIdentifier:(id)arg2 domainIdentifier:(id)arg3 uniqueIdentifier:(id)arg4;	// IMP=0x0000000000291cd1
- (id)spotlightUniqueIdentifierForBundleIdentifier:(id)arg1 messageId:(id)arg2;	// IMP=0x0000000000291b27
- (id)messageIdsForBundleIdentifier:(id)arg1 domainIdentifierGlobs:(id)arg2 limit:(unsigned long long)arg3;	// IMP=0x0000000000291835
- (id)messageIdsForBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;	// IMP=0x00000000002916ba
- (id)messageIdsForBundleIdentifier:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x000000000029155f
- (id)messageIdForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x00000000002913b5
- (id)loadTagForPrimaryKey:(long long)arg1;	// IMP=0x00000000002a3814
- (long long)commitTag:(id)arg1;	// IMP=0x00000000002a36b6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

