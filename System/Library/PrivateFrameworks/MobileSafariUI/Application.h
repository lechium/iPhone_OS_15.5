//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MobileSafari/SFBrowserApplication.h>

#import <MobileSafariUI/BKSMousePointerDeviceObserver-Protocol.h>
#import <MobileSafariUI/MCProfileConnectionObserver-Protocol.h>
#import <MobileSafariUI/PageLoadTestRunnerDelegate-Protocol.h>
#import <MobileSafariUI/SFBrowserApplicationProxy-Protocol.h>
#import <MobileSafariUI/SFUIApplicationModifierFlagsProviding-Protocol.h>
#import <MobileSafariUI/SFWebExtensionsControllerDelegate-Protocol.h>
#import <MobileSafariUI/TabSnapshotCacheStressTestRunnerDelegate-Protocol.h>
#import <MobileSafariUI/UIApplicationDelegatePrivate-Protocol.h>
#import <MobileSafariUI/WBDatabaseLockAcquisitorDelegate-Protocol.h>
#import <MobileSafariUI/WBSBrowserTabCompletionProviderSource-Protocol.h>
#import <MobileSafariUI/WBSUnifiedBarAnalyticsRecorderDelegate-Protocol.h>
#import <MobileSafariUI/_SFDownloadDelegate-Protocol.h>
#import <MobileSafariUI/_SFNavigationIntentHandling-Protocol.h>

@class AutomationController, BookmarksDatabaseHealthReporter, BrowserController, BrowserWindowController, ForYouRecommendationMediator, NSArray, NSMutableArray, NSMutableSet, NSString, ReadingListLeadImageCache, SBSAssertion, SafariSettingsSyncEngine, UIScene, WBDatabaseLockAcquisitor, WBSAllowedLegacyTLSHostManager, WBSBrowserTabCompletionProvider, WBSCyclerConnectionManager, WBSForYouRecentParsecResultsManager, WBSFormAutoFillCorrectionsHistoryObserver, WBSParsecABGroupManager, WBSPhishingClassifierController, WBSUnifiedBarAnalyticsRecorder, WBSavedStateManager, WBTabGroupManager;
@protocol BSInvalidatable, WBSCloudHistoryServiceProtocol, WBSPhishingClassifier, WBSUnifiedBarAnalyticsProviding, WBStateProvider;

@interface Application : SFBrowserApplication <PageLoadTestRunnerDelegate, TabSnapshotCacheStressTestRunnerDelegate, MCProfileConnectionObserver, SFBrowserApplicationProxy, SFUIApplicationModifierFlagsProviding, UIApplicationDelegatePrivate, WBDatabaseLockAcquisitorDelegate, WBSBrowserTabCompletionProviderSource, _SFDownloadDelegate, WBSUnifiedBarAnalyticsRecorderDelegate, BKSMousePointerDeviceObserver, SFWebExtensionsControllerDelegate, _SFNavigationIntentHandling>
{
    _Bool _isReadingDefaults;	// 8 = 0x8
    _Bool _shouldReadDefaultsOnResume;	// 9 = 0x9
    _Bool _isRunningShowBookmarksTest;	// 10 = 0xa
    _Bool _startedBookmarksTest;	// 11 = 0xb
    _Bool _isRunningCanvasTest;	// 12 = 0xc
    _Bool _willEnterSuspendedState;	// 13 = 0xd
    NSMutableSet *_pointerDevices;	// 16 = 0x10
    struct os_unfair_lock_s _pointerDeviceLock;	// 24 = 0x18
    id <BSInvalidatable> _pointerDeviceObserverToken;	// 32 = 0x20
    _Bool _finishedLaunching;	// 40 = 0x28
    id <WBSCloudHistoryServiceProtocol> _cloudHistory;	// 48 = 0x30
    _Bool _resigningActive;	// 56 = 0x38
    NSString *_openURLOriginBundleIdentifier;	// 64 = 0x40
    WBSFormAutoFillCorrectionsHistoryObserver *_formAutoFillCorrectionsHistoryObserver;	// 72 = 0x48
    BookmarksDatabaseHealthReporter *_bookmarksDatabaseHealthReporter;	// 80 = 0x50
    unsigned long long _bookmarksDatabaseBackgroundTaskIdentifier;	// 88 = 0x58
    WBDatabaseLockAcquisitor *_bookmarksDatabaseBackgroundTaskLockAcquisitor;	// 96 = 0x60
    SBSAssertion *_wallpaperSuspensionAssertion;	// 104 = 0x68
    WBSCyclerConnectionManager *_cyclerConnectionManager;	// 112 = 0x70
    ReadingListLeadImageCache *_readingListImageCache;	// 120 = 0x78
    NSMutableArray *_activeDownloads;	// 128 = 0x80
    ForYouRecommendationMediator *_forYouRecommendationMediator;	// 136 = 0x88
    WBSForYouRecentParsecResultsManager *_forYouRecentParsecResultsManager;	// 144 = 0x90
    WBSBrowserTabCompletionProvider *_tabCompletionProvider;	// 152 = 0x98
    WBSParsecABGroupManager *_abGroupManager;	// 160 = 0xa0
    WBSPhishingClassifierController *_phishingClassifier;	// 168 = 0xa8
    WBSAllowedLegacyTLSHostManager *_cachedLegacyTLSHostManager;	// 176 = 0xb0
    id <WBStateProvider> _tabCollection;	// 184 = 0xb8
    WBSavedStateManager *_savedStateManager;	// 192 = 0xc0
    WBTabGroupManager *_tabGroupManager;	// 200 = 0xc8
    WBTabGroupManager *_ephemeralTabGroupManager;	// 208 = 0xd0
    WBSUnifiedBarAnalyticsRecorder *_unifiedBarAnalyticsRecorder;	// 216 = 0xd8
    AutomationController *_automationController;	// 224 = 0xe0
    long long _currentKeyboardModifierFlags;	// 232 = 0xe8
    BrowserWindowController *_browserWindowController;	// 240 = 0xf0
    ForYouRecommendationMediator *_existingForYouRecommendationMediator;	// 248 = 0xf8
    SafariSettingsSyncEngine *_settingsSyncEngine;	// 256 = 0x100
}

+ (void)setBrowserControllerUIDelegateProvider:(CDUnknownBlockType)arg1;	// IMP=0x000000000000cf72
+ (CDUnknownBlockType)browserControllerUIDelegateProvider;	// IMP=0x000000000000cefe
+ (id)contextClient;	// IMP=0x000000000000b77e
+ (unsigned long long)systemMemorySize;	// IMP=0x0000000000006619
+ (void)initialize;	// IMP=0x0000000000004f90
+ (id)sharedApplication;	// IMP=0x0000000000004f7c
+ (id)sharedTestRunner;	// IMP=0x000000000001d748
+ (void)commandLineTestOption:(int)arg1 arg:(const char *)arg2;	// IMP=0x00000000000152f6
+ (void)postTestNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;	// IMP=0x0000000000020644
+ (void)postTestNotificationName:(id)arg1 object:(id)arg2;	// IMP=0x000000000002062f
- (void).cxx_destruct;	// IMP=0x000000000000dbc1
@property(readonly, nonatomic) SafariSettingsSyncEngine *settingsSyncEngine; // @synthesize settingsSyncEngine=_settingsSyncEngine;
@property(nonatomic) __weak ForYouRecommendationMediator *existingForYouRecommendationMediator; // @synthesize existingForYouRecommendationMediator=_existingForYouRecommendationMediator;
@property(readonly, nonatomic) BrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
@property(readonly, nonatomic) long long currentKeyboardModifierFlags; // @synthesize currentKeyboardModifierFlags=_currentKeyboardModifierFlags;
- (id)selectedTabInfoForBrowserTabCompletionProvider:(id)arg1;	// IMP=0x000000000000db59
- (id)tabInfosForBrowserTabCompletionProvider:(id)arg1;	// IMP=0x000000000000d770
- (_Bool)isTabActiveWithUUID:(id)arg1;	// IMP=0x000000000000d675
- (id)sceneForTabWithUUID:(id)arg1;	// IMP=0x000000000000d621
- (id)_browserControllerForTabWithUUID:(id)arg1;	// IMP=0x000000000000d4e4
- (void)tabUUIDsMatchingQuery:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d39b
@property(readonly, nonatomic) UIScene *currentScene;
- (void)clearCachedTabCompletionData;	// IMP=0x000000000000d1cf
- (id)proxy;	// IMP=0x000000000000d1c6
@property(readonly, nonatomic) id <WBSUnifiedBarAnalyticsProviding> unifiedBarAnalyticsProvider;
- (void)mousePointerDevicesDidDisconnect:(id)arg1;	// IMP=0x000000000000d067
- (void)mousePointerDevicesDidConnect:(id)arg1;	// IMP=0x000000000000d006
@property(readonly, nonatomic) _Bool hasPointerDevice;
- (void)sfWebExtensionsControllerDidChangeExtensionForPermissionBanner:(id)arg1;	// IMP=0x000000000000ccde
- (void)sfWebExtensionsControllerContentBlockerListDidChange:(id)arg1;	// IMP=0x000000000000cc9a
- (void)sfWebExtensionsControllerCompileContentBlocker:(id)arg1 identifier:(id)arg2 rules:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000000cb99
- (id)sfWebExtensionsControllerLastFocusedWindow:(id)arg1;	// IMP=0x000000000000cb03
- (id)sfWebExtensionsControllerAllWindows:(id)arg1;	// IMP=0x000000000000c933
- (id)sfWebExtensionsController:(id)arg1 navigationIntentUUIDForWindow:(id)arg2;	// IMP=0x000000000000c8e0
- (id)sfWebExtensionsController:(id)arg1 windowForWebView:(id)arg2 extension:(id)arg3;	// IMP=0x000000000000c73e
- (id)sfWebExtensionsController:(id)arg1 windowWithID:(double)arg2;	// IMP=0x000000000000c5da
- (void)sfWebExtensionsController:(id)arg1 captureVisibleTab:(id)arg2 format:(id)arg3 quality:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000000c35f
- (_Bool)sfWebExtensionsController:(id)arg1 canSendMessageFromWebView:(id)arg2;	// IMP=0x000000000000c2d9
- (void)sfWebExtensionsController:(id)arg1 relateParentTab:(id)arg2 toTab:(id)arg3;	// IMP=0x000000000000c1dc
- (id)sfWebExtensionsController:(id)arg1 duplicateTab:(id)arg2;	// IMP=0x000000000000c13e
- (void)sfWebExtensionsController:(id)arg1 createNewTabInWindow:(id)arg2 tabIndex:(id)arg3 url:(id)arg4 makeActive:(_Bool)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x000000000000c103
- (id)sfWebExtensionsController:(id)arg1 tabForWebView:(id)arg2;	// IMP=0x000000000000c033
- (id)sfWebExtensionsController:(id)arg1 reusableTabWithID:(double)arg2;	// IMP=0x000000000000be81
- (id)sfWebExtensionsController:(id)arg1 tabWithID:(double)arg2;	// IMP=0x000000000000bcde
- (void)extensionsController:(id)arg1 closeOpenExtensionTabsWithBaseURI:(id)arg2;	// IMP=0x000000000000b982
- (void)extensionBaseURIMapChangedForExtensionsController:(id)arg1;	// IMP=0x000000000000b8bc
- (void)handleNavigationIntent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b89f
- (void)dispatchNavigationIntent:(id)arg1;	// IMP=0x000000000000b88b
- (void)_getBookmarksDataClassEnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000000b615
- (void)_historyHostnamesWereRemoved:(id)arg1;	// IMP=0x000000000000b51c
- (void)_historyWasCleared:(id)arg1;	// IMP=0x000000000000b4df
@property(readonly, nonatomic) WBSAllowedLegacyTLSHostManager *legacyTLSHostManager;
- (void)_updateCloudFeatureAvailability;	// IMP=0x000000000000afc5
- (void)_resetCloudHistoryAccountIfNeeded;	// IMP=0x000000000000aeea
@property(readonly, nonatomic) _Bool isCloudHistoryEnabled;
- (void)downloadShouldContinueAfterReceivingResponse:(id)arg1 decisionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ad94
- (void)downloadDidReceiveResponse:(id)arg1;	// IMP=0x000000000000acbb
- (void)downloadDidStart:(id)arg1;	// IMP=0x000000000000ac60
- (void)downloadDidFail:(id)arg1;	// IMP=0x000000000000ac05
- (void)downloadDidFinish:(id)arg1;	// IMP=0x000000000000ab26
@property(readonly, nonatomic) WBTabGroupManager *ephemeralTabGroupManager;
@property(readonly, nonatomic) WBTabGroupManager *tabGroupManager;
@property(readonly, nonatomic) WBSavedStateManager *savedStateManager;
- (id)tabCollection;	// IMP=0x000000000000a808
- (void)_didEnableCustomizationSync;	// IMP=0x000000000000a762
@property(readonly, nonatomic) WBSParsecABGroupManager *abGroupManager;
@property(readonly, nonatomic) id <WBSPhishingClassifier> phishingClassifier;
@property(readonly, nonatomic) WBSForYouRecentParsecResultsManager *forYouRecentParsecResultsManager;
- (id)createRecommendationMediatorOrReuseExistingOneIfPossible;	// IMP=0x000000000000a4ba
- (void)_downloadDidStopNotification:(id)arg1;	// IMP=0x000000000000a43f
- (void)_downloadDidStartNotification:(id)arg1;	// IMP=0x000000000000a3b5
- (void)_export30DaysWorthOfHistoryAfterUpgrade;	// IMP=0x000000000000a1b9
@property(readonly, nonatomic) ReadingListLeadImageCache *readingListLeadImageCache;
- (void)_pruneExpiredScenes;	// IMP=0x000000000000a045
- (void)application:(id)arg1 didDiscardSceneSessions:(id)arg2;	// IMP=0x000000000000a033
- (void)applicationWillTerminate;	// IMP=0x0000000000009c69
- (void)_reportLaunchAnalyticsSoon;	// IMP=0x0000000000009602
- (void)_showSearchEngineAlertIfNeeded;	// IMP=0x0000000000009316
- (void)_connectToCyclerIfNecessary;	// IMP=0x00000000000091bd
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;	// IMP=0x0000000000007599
- (void)_handleHIDEvent:(struct __IOHIDEvent *)arg1;	// IMP=0x00000000000074e8
- (void)_prewarmAutomationControllerIfEnabled;	// IMP=0x00000000000074a8
@property(readonly, nonatomic) AutomationController *automationController; // @synthesize automationController=_automationController;
- (void)updateTabCount;	// IMP=0x0000000000007409
- (void)auditTabCount;	// IMP=0x00000000000073d9
- (_Bool)canAddNewTabForPrivateBrowsing:(_Bool)arg1;	// IMP=0x000000000000734a
@property(readonly, nonatomic) unsigned long long maximumTabCount;
- (unsigned long long)_maximumTabCount;	// IMP=0x000000000000724f
- (unsigned long long)_numberOfTabsForPrivateBrowsing:(_Bool)arg1;	// IMP=0x0000000000007124
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000006e6d
- (void)_addDefaultsObserver;	// IMP=0x00000000000068dc
- (void)_managedProfileConfigurationDidUpdate;	// IMP=0x000000000000687e
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000000000686c
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000000000685a
- (void)_appleKeyboardsChanged:(id)arg1;	// IMP=0x0000000000006848
- (void)_reloadSearchEngines;	// IMP=0x00000000000067e3
- (void)userDefaultsDidChange:(id)arg1;	// IMP=0x0000000000006774
- (void)buildMenuWithBuilder:(id)arg1;	// IMP=0x0000000000006693
- (void)handleKeyUIEvent:(id)arg1;	// IMP=0x0000000000006624
- (void)_saveBrowserState;	// IMP=0x00000000000065fc
- (void)didReceiveMemoryWarning;	// IMP=0x0000000000006448
- (void)databaseLockAcquisitor:(id)arg1 acquiredLock:(_Bool)arg2;	// IMP=0x00000000000061d8
- (void)_performBookmarksDatabaseTasksInBackground;	// IMP=0x0000000000005ed0
- (void)_suspendOrResumeWallpaperAnimationIfNeeded;	// IMP=0x0000000000005e34
- (void)_reportBookmarksDatabaseHealth;	// IMP=0x0000000000005deb
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x0000000000005a9a
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000000057ae
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000000005669
@property(readonly, nonatomic) _Bool usesLoweredSearchBar;
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x0000000000005558
- (void)_updateKeyboardCorrectionLearningAllowed;	// IMP=0x000000000000546d
- (void)saveChangesToCloudHistoryStore;	// IMP=0x00000000000053d1
- (void)applicationWillSuspend;	// IMP=0x000000000000538a
- (void)_readDefaults;	// IMP=0x000000000000534b
@property(readonly, nonatomic) _Bool usesPrivateBrowsingModeInAnyWindow;
@property(readonly, nonatomic) _Bool usesDefaultBrowsingModeInAllWindows;
- (id)_browserControllerForExternalNavigation;	// IMP=0x000000000000507e
@property(readonly, nonatomic) BrowserController *primaryBrowserController;
@property(readonly, nonatomic) NSArray *browserControllers;
- (_Bool)runMemoryOrIOTestWithType:(unsigned long long)arg1;	// IMP=0x0000000000020460
- (_Bool)startHistoryLoadTest;	// IMP=0x000000000002030a
- (id)_generateMemoryFootprintResults:(id)arg1;	// IMP=0x000000000001f985
- (_Bool)startHistoryTest;	// IMP=0x000000000001f669
- (_Bool)_resetHistoryWithCompressedDatabaseAtURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001efae
- (void)_doSearchTestOnCVC:(id)arg1 WithTestStrings:(id)arg2 andDispatchGroup:(id)arg3;	// IMP=0x000000000001eba3
- (void)startSearchPerformanceUnifiedFieldKeyTimeTest;	// IMP=0x000000000001e823
- (void)startSearchPerformanceTestWithTestStrings:(id)arg1 perQuery:(_Bool)arg2 withCF:(_Bool)arg3;	// IMP=0x000000000001d9b3
- (void)startSearchPerformanceTestWithTestStrings:(id)arg1;	// IMP=0x000000000001d99c
- (void)startSearchPerformanceDetailedTestWithCF:(_Bool)arg1;	// IMP=0x000000000001d891
- (id)searchParametersWithCFEnabled:(_Bool)arg1;	// IMP=0x000000000001d772
- (void)startSearchPerformanceTest;	// IMP=0x000000000001d759
- (_Bool)didStartBookmarksTest;	// IMP=0x000000000001d735
- (_Bool)isRunningCanvasTest;	// IMP=0x000000000001d722
- (_Bool)isRunningShowBookmarksTest;	// IMP=0x000000000001d70f
- (void)runBookmarksViewTest;	// IMP=0x000000000001d4fd
- (void)_switchToBookmarksCollectionForTestNamed:(id)arg1;	// IMP=0x000000000001d3e0
- (id)_scrollViewForTestNamed:(id)arg1;	// IMP=0x000000000001d1e5
- (void)_populateInMemoryBookmarksDBForTestNamed:(id)arg1;	// IMP=0x000000000001cd3c
- (void)finishedBookmarksTest;	// IMP=0x000000000001cc75
- (void)startBookmarksTest;	// IMP=0x000000000001cbdb
- (_Bool)prepareBookmarksTest;	// IMP=0x000000000001cb43
- (void)_runTabOverviewScrollPerfTest;	// IMP=0x000000000001c924
- (void)_runTabOverviewPresentingAndDismissalTest;	// IMP=0x000000000001c46e
- (void)_runTabOverviewOpenNewTabTest;	// IMP=0x000000000001bf66
- (void)runTabOverviewTest;	// IMP=0x000000000001bcf7
- (void)_runTabBarSwitchTabTest;	// IMP=0x000000000001bb37
- (_Bool)startTabBarTest;	// IMP=0x000000000001b6b1
- (id)_syntheticHTMLString;	// IMP=0x000000000001b6a4
- (void)finishedCanvasTestWithURL:(id)arg1 forTabDocument:(id)arg2;	// IMP=0x000000000001b22b
- (void)_pollCanvasTest:(id)arg1;	// IMP=0x000000000001b10f
- (_Bool)startCanvasTest:(id)arg1;	// IMP=0x000000000001aff7
- (void)failedPurpleTestWithError:(id)arg1;	// IMP=0x000000000001af4f
- (void)finishedPurpleTest:(id)arg1;	// IMP=0x000000000001aebd
- (void)startedPurpleTest;	// IMP=0x000000000001ae5c
- (void)_runSidebarTest;	// IMP=0x000000000001ab55
- (_Bool)startSidebarTest;	// IMP=0x000000000001a9be
- (void)_scrollContentWithTestName:(id)arg1 scrollingBounds:(struct CGRect)arg2 swipes:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001a4c5
- (void)startTabViewScrollTest;	// IMP=0x000000000001a0e1
- (void)_prepareTabViewScrollTest;	// IMP=0x0000000000019f98
- (void)prepareTabViewScrollTest;	// IMP=0x0000000000019f23
- (void)startTabViewRotationTest;	// IMP=0x0000000000019e21
- (void)_prepareTabViewRotationTest;	// IMP=0x0000000000019d7a
- (void)prepareTabViewRotationTest;	// IMP=0x0000000000019d05
- (void)startTabViewCloseTest;	// IMP=0x0000000000019a9f
- (void)_prepareTabViewCloseTest;	// IMP=0x00000000000199f8
- (void)prepareTabViewCloseTest;	// IMP=0x0000000000019983
- (void)startTabViewSelectTest;	// IMP=0x00000000000197b3
- (void)_prepareTabViewSelectTest;	// IMP=0x00000000000192f4
- (void)prepareTabViewSelectTest;	// IMP=0x000000000001927f
- (void)startTabViewOpenTest;	// IMP=0x0000000000019190
- (void)_prepareTabViewOpenTest;	// IMP=0x0000000000018c12
- (void)prepareTabViewOpenTest;	// IMP=0x0000000000018b9d
- (void)startTabViewBringUpTest;	// IMP=0x0000000000018adf
- (void)_prepareTabViewBringUpTest;	// IMP=0x0000000000018558
- (void)prepareTabViewBringUpTest;	// IMP=0x00000000000184e3
- (void)_loadTabsForTesting:(unsigned long long)arg1 presentTabView:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000180b9
- (void)_preparePageLoadTestControllerParameters;	// IMP=0x000000000001803e
- (void)loadTabsForTesting:(unsigned long long)arg1 presentTabView:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000017f8d
- (void)loadTabsForTesting:(unsigned long long)arg1 presentTabView:(_Bool)arg2;	// IMP=0x0000000000017dbc
- (void)runGeneratePasswordTest;	// IMP=0x0000000000017c2a
- (void)runLargeFormTypingTest;	// IMP=0x0000000000017b92
- (void)_runFormTypingTextWithSetupScript:(id)arg1;	// IMP=0x00000000000175e2
- (void)_typeTextInForm:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000017406
- (void)runLargeFormFocusTest;	// IMP=0x0000000000017263
- (void)_loadLargeForm:(CDUnknownBlockType)arg1;	// IMP=0x0000000000017247
- (void)_loadAlternateHTMLString:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016fca
- (void)loadBlankPageforKeyboardTests;	// IMP=0x0000000000016eb7
- (void)startKeyboardRotationTest;	// IMP=0x0000000000016d35
- (void)startKeyboardBringupTest;	// IMP=0x0000000000016b7f
- (void)startKeyboardSplitAndMergeTest;	// IMP=0x0000000000016a68
- (void)_observeNotificationOnce:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001678f
- (_Bool)runTest:(id)arg1 options:(id)arg2;	// IMP=0x0000000000015be2
- (id)_numberOption:(id)arg1;	// IMP=0x0000000000015a11
- (void)checkExtendedLaunchPageLoad:(id)arg1 forTabDocument:(id)arg2;	// IMP=0x0000000000015879
- (id)_extendLaunchTest;	// IMP=0x000000000001585b
- (_Bool)overrideBrowserStateForTestNamed:(id)arg1 browserController:(id)arg2;	// IMP=0x0000000000015583
- (void)startCommandLineTest;	// IMP=0x00000000000154d7
- (id)_browserControllerForApplicationTesting;	// IMP=0x0000000000015265
@property(readonly, nonatomic) _Bool shouldRestoreStateForPPT;
@property(readonly, nonatomic) _Bool isRunningPPT;
- (void)pageLoadTestRunnerFinished:(id)arg1;	// IMP=0x00000000000205ea
- (void)tabSnapshotCacheStressTestRunnerDidFinish:(id)arg1;	// IMP=0x00000000000207c9
- (void)runTabSnapshotCacheStressTest;	// IMP=0x00000000000206fe

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

