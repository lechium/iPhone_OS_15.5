//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AuthenticationServicesCore/NSSecureCoding-Protocol.h>

@class ASCWebAuthenticationExtensionsClientInputs, NSArray, NSData, NSString;

@interface ASCPublicKeyCredentialAssertionOptions : NSObject <NSSecureCoding>
{
    unsigned long long _credentialKind;	// 8 = 0x8
    NSString *_relyingPartyIdentifier;	// 16 = 0x10
    NSData *_challenge;	// 24 = 0x18
    NSData *_clientDataHash;	// 32 = 0x20
    NSString *_userVerificationPreference;	// 40 = 0x28
    ASCWebAuthenticationExtensionsClientInputs *_extensions;	// 48 = 0x30
    NSArray *_allowedCredentials;	// 56 = 0x38
    NSString *_destinationSiteForCrossSiteAssertion;	// 64 = 0x40
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000000e531
- (void).cxx_destruct;	// IMP=0x000000000000e9f2
@property(copy, nonatomic) NSString *destinationSiteForCrossSiteAssertion; // @synthesize destinationSiteForCrossSiteAssertion=_destinationSiteForCrossSiteAssertion;
@property(readonly, copy, nonatomic) NSArray *allowedCredentials; // @synthesize allowedCredentials=_allowedCredentials;
@property(copy, nonatomic) ASCWebAuthenticationExtensionsClientInputs *extensions; // @synthesize extensions=_extensions;
@property(readonly, copy, nonatomic) NSString *userVerificationPreference; // @synthesize userVerificationPreference=_userVerificationPreference;
@property(copy, nonatomic) NSData *clientDataHash; // @synthesize clientDataHash=_clientDataHash;
@property(readonly, copy, nonatomic) NSData *challenge; // @synthesize challenge=_challenge;
@property(readonly, copy, nonatomic) NSString *relyingPartyIdentifier; // @synthesize relyingPartyIdentifier=_relyingPartyIdentifier;
@property(readonly, nonatomic) unsigned long long credentialKind; // @synthesize credentialKind=_credentialKind;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000000e889
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000000e539
- (id)initWithKind:(unsigned long long)arg1 relyingPartyIdentifier:(id)arg2 clientDataHash:(id)arg3 userVerificationPreference:(id)arg4 allowedCredentials:(id)arg5;	// IMP=0x000000000000e410
- (id)initWithKind:(unsigned long long)arg1 relyingPartyIdentifier:(id)arg2 challenge:(id)arg3 userVerificationPreference:(id)arg4 allowedCredentials:(id)arg5;	// IMP=0x000000000000e2ef

@end

