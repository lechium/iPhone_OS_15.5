//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Weather/CLLocationManagerDelegate-Protocol.h>
#import <Weather/SynchronizedDefaultsDelegate-Protocol.h>

@class NSDate, NSString, WFGeocodeRequest, WeatherLocationManager, WeatherPreferences;

@interface WATodayAutoupdatingLocationModel <CLLocationManagerDelegate, SynchronizedDefaultsDelegate>
{
    _Bool _isLocationTrackingEnabled;	// 8 = 0x8
    _Bool _locationServicesActive;	// 9 = 0x9
    _Bool _stopUpdateIfNeeded;	// 10 = 0xa
    WeatherLocationManager *_locationManager;	// 16 = 0x10
    double _minTimeBetweenUpdates;	// 24 = 0x18
    double _minDistanceChangeInMeters;	// 32 = 0x20
    WFGeocodeRequest *_geocodeRequest;	// 40 = 0x28
    unsigned long long _citySource;	// 48 = 0x30
    unsigned long long _fallbackCitySource;	// 56 = 0x38
    NSDate *_lastLocationUpdateDate;	// 64 = 0x40
    WeatherPreferences *_preferences;	// 72 = 0x48
    CDUnknownBlockType _WeatherLocationManagerGenerator;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x0000000000009f1f
@property(copy, nonatomic) CDUnknownBlockType WeatherLocationManagerGenerator; // @synthesize WeatherLocationManagerGenerator=_WeatherLocationManagerGenerator;
@property(retain, nonatomic) WeatherPreferences *preferences; // @synthesize preferences=_preferences;
@property(retain, nonatomic) NSDate *lastLocationUpdateDate; // @synthesize lastLocationUpdateDate=_lastLocationUpdateDate;
@property(nonatomic) _Bool stopUpdateIfNeeded; // @synthesize stopUpdateIfNeeded=_stopUpdateIfNeeded;
@property(nonatomic) unsigned long long fallbackCitySource; // @synthesize fallbackCitySource=_fallbackCitySource;
@property(nonatomic) unsigned long long citySource; // @synthesize citySource=_citySource;
@property(retain, nonatomic) WFGeocodeRequest *geocodeRequest; // @synthesize geocodeRequest=_geocodeRequest;
@property(nonatomic) _Bool locationServicesActive; // @synthesize locationServicesActive=_locationServicesActive;
@property(nonatomic) _Bool isLocationTrackingEnabled; // @synthesize isLocationTrackingEnabled=_isLocationTrackingEnabled;
@property(retain, nonatomic) WeatherLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void)_persistStateWithModel:(id)arg1;	// IMP=0x0000000000009bbb
- (_Bool)_reloadForecastData:(_Bool)arg1;	// IMP=0x0000000000009aa2
- (void)ubiquitousDefaultsDidChange:(id)arg1;	// IMP=0x0000000000009a35
- (void)_executeLocationUpdateForFirstWeatherCityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000009976
- (void)_executeLocationUpdateForLocalWeatherCityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000092f6
- (_Bool)shouldUseNewLocation:(id)arg1 oldLocation:(id)arg2;	// IMP=0x0000000000008f54
- (_Bool)shouldNotUseUpdatedLocation;	// IMP=0x0000000000008c9f
- (void)_willDeliverForecastModel:(id)arg1;	// IMP=0x0000000000008bc1
- (void)_executeLocationUpdateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000008add
- (void)weatherPreferencesWereSynchronized;	// IMP=0x0000000000008a6d
- (_Bool)updateLocationTrackingStatus;	// IMP=0x00000000000089d1
- (void)syncLastUpdateTime;	// IMP=0x00000000000088ed
- (void)_teardownLocationManager;	// IMP=0x0000000000008835
- (void)checkIfNeedsToUpdate;	// IMP=0x00000000000085b7
- (void)_kickstartLocationManager;	// IMP=0x000000000000835f
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;	// IMP=0x0000000000008202
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;	// IMP=0x0000000000008064
- (void)setCitySource:(unsigned long long)arg1 fireNotification:(_Bool)arg2;	// IMP=0x0000000000007fcf
- (id)forecastModel;	// IMP=0x0000000000007f26
- (void)clearLocationUpdateState;	// IMP=0x0000000000007d3f
- (void)dealloc;	// IMP=0x0000000000007ca4
- (void)configureWithInitialCitySource:(unsigned long long)arg1 locationServicesActive:(_Bool)arg2;	// IMP=0x0000000000007c48
- (void)configureWithLocationServicesActive:(_Bool)arg1;	// IMP=0x0000000000007c2f
@property(readonly, nonatomic) double minDistanceChangeInMeters; // @synthesize minDistanceChangeInMeters=_minDistanceChangeInMeters;
@property(readonly, nonatomic) double minTimeBetweenUpdates; // @synthesize minTimeBetweenUpdates=_minTimeBetweenUpdates;
- (id)init;	// IMP=0x0000000000007b89
- (id)initWithPreferences:(id)arg1 effectiveBundleIdentifier:(id)arg2;	// IMP=0x00000000000077e2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

