//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMDEventCounterContext-Protocol.h>

@class NSDate, NSMutableDictionary, NSObject;
@protocol HMDEventCountersStoring, OS_dispatch_queue;

@interface HMDEventCountersManager : HMFObject <HMDEventCounterContext>
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_workQueue;	// 16 = 0x10
    NSMutableDictionary *_counterGroups;	// 24 = 0x18
    NSDate *_lastSaveTime;	// 32 = 0x20
    id <HMDEventCountersStoring> _counterStorage;	// 40 = 0x28
    double _saveInterval;	// 48 = 0x30
}

+ (id)sharedEventCountersManager;	// IMP=0x00000000009f2c12
- (void).cxx_destruct;	// IMP=0x00000000009f2a1c
@property(nonatomic) double saveInterval; // @synthesize saveInterval=_saveInterval;
@property(readonly) id <HMDEventCountersStoring> counterStorage; // @synthesize counterStorage=_counterStorage;
@property(retain, nonatomic) NSDate *lastSaveTime; // @synthesize lastSaveTime=_lastSaveTime;
@property(retain, nonatomic) NSMutableDictionary *counterGroups; // @synthesize counterGroups=_counterGroups;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (id)unarchivedEventCounters;	// IMP=0x00000000009f27d5
- (void)_save;	// IMP=0x00000000009f26d4
- (void)counterChanged;	// IMP=0x00000000009f25ed
- (void)forceSave;	// IMP=0x00000000009f25a0
- (id)_fetchAllEventCounters;	// IMP=0x00000000009f24ca
- (void)resetAllEventCounters;	// IMP=0x00000000009f22ea
- (void)resetEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009f22ad
- (void)resetEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009f2235
- (id)fetchAllEventCounters;	// IMP=0x00000000009f21a0
- (unsigned long long)fetchAggregatedEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009f215c
- (id)fetchEventCountersForRequestGroup:(id)arg1;	// IMP=0x00000000009f210c
- (unsigned long long)fetchEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009f208f
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2;	// IMP=0x00000000009f2017
- (void)incrementEventCounterForEventName:(id)arg1 requestGroup:(id)arg2 withValue:(unsigned long long)arg3;	// IMP=0x00000000009f1f9a
- (void)addObserver:(id)arg1 forEventName:(id)arg2 requestGroup:(id)arg3;	// IMP=0x00000000009f1f0c
- (void)_removeCounterGroupForSpecifier:(id)arg1;	// IMP=0x00000000009f1eb3
- (void)removeCounterGroupsBasedOnPredicate:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f1cd8
- (void)removeCounterGroupForSpecifier:(id)arg1;	// IMP=0x00000000009f1c6a
- (void)removeCounterGroupForName:(id)arg1;	// IMP=0x00000000009f1c17
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x00000000009f1c05
- (id)counterGroupForSpecifier:(id)arg1;	// IMP=0x00000000009f1b34
- (id)counterGroupForName:(id)arg1;	// IMP=0x00000000009f1ace
- (id)initWithEventCountersStorage:(id)arg1 saveInterval:(double)arg2;	// IMP=0x00000000009f1938
- (id)init;	// IMP=0x00000000009f184f

@end

