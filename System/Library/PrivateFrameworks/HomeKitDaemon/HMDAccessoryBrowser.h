//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HAPAccessoryServerBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HAPAccessoryServerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryBrowserHapProtocol-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryBrowserProtocol-Protocol.h>
#import <HomeKitDaemon/HMDAuthServerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDMediaBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWACAccessoryConfigurationDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWACBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWatchSystemStateDelegate-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMFUnfairLock, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HMDAccessoryBrowser : HMFObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol>
{
    HMFUnfairLock *_lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    NSMutableSet *_mediaAccessoryControlConnections;	// 48 = 0x30
    NSMutableSet *_browsingConnections;	// 56 = 0x38
    NSHashTable *_activeAssertions;	// 64 = 0x40
    _Bool _btlePowerState;	// 72 = 0x48
    _Bool _internalDiscoveryRequest;	// 73 = 0x49
    _Bool _remoteBrowsingEnabled;	// 74 = 0x4a
    _Bool _active;	// 75 = 0x4b
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 80 = 0x50
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 88 = 0x58
    NSArray *_browseableLinkTypes;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_workQueue;	// 104 = 0x68
    NSUUID *_uuid;	// 112 = 0x70
    HMFMessageDispatcher *_messageDispatcher;	// 120 = 0x78
    unsigned long long _generationCounter;	// 128 = 0x80
    HMDHomeManager *_homeManager;	// 136 = 0x88
    NSMutableArray *_accessoryServerBrowsers;	// 144 = 0x90
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 152 = 0x98
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 160 = 0xa0
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 168 = 0xa8
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 176 = 0xb0
    HMDHAP2Storage *_hap2Storage;	// 184 = 0xb8
    HMDMediaBrowser *_mediaBrowser;	// 192 = 0xc0
    HMDWACBrowser *_wacBrowser;	// 200 = 0xc8
    HMDAuthServer *_authServer;	// 208 = 0xd0
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 216 = 0xd8
    HMFTimer *_stopReprovisioningTimer;	// 224 = 0xe0
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 232 = 0xe8
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 240 = 0xf0
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 248 = 0xf8
    NSString *_countrycodeForAccessoryReprovisioning;	// 256 = 0x100
    NSMutableArray *_pairedAccessories;	// 264 = 0x108
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 272 = 0x110
    NSMutableArray *_currentlyPairingAccessories;	// 280 = 0x118
    NSMutableArray *_currentlyPairingProgressHandlers;	// 288 = 0x120
    NSHashTable *_tombstonedHAPAccessoryServers;	// 296 = 0x128
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 304 = 0x130
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 312 = 0x138
}

+ (id)logCategory;	// IMP=0x00000000008ffdf1
- (void).cxx_destruct;	// IMP=0x00000000008f5abe
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x00000000008f5453
- (id)dumpUnassociatedAccessories;	// IMP=0x00000000008f5171
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x00000000008f4f3c
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x00000000008f4e34
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x00000000008f4d58
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x00000000008f4c7c
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x00000000008f4bcb
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x00000000008f4b22
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x00000000008f4a71
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x00000000008f49c0
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008f4926
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008f488c
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x00000000008f47a8
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x00000000008f4684
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x00000000008f43af
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x00000000008f3fba
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x00000000008f3dd9
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008f3d2d
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008f3b57
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x00000000008f3a67
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008f37ae
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008f35d4
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x00000000008f3520
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x00000000008f348c
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008f33df
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008f31ad
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000008f30d1
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008f28a9
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x00000000008f259c
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008f2384
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008f1836
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008f166d
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x00000000008f1515
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x00000000008f10cc
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x00000000008f0054
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008efe24
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x00000000008efa1d
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x00000000008efa08
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x00000000008ef9f1
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000008ef9d7
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x00000000008ef9bd
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x00000000008ef76e
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x00000000008ef752
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ef6dd
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x00000000008ef6b7
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x00000000008ef4fc
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x00000000008ef4e5
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x00000000008ef1ba
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x00000000008eeec0
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x00000000008eebdc
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x00000000008eeabd
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x00000000008ee5b1
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x00000000008ee14b
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x00000000008eddfa
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x00000000008edc05
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x00000000008eda54
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x00000000008ed87e
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x00000000008ed7c8
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x00000000008ed5f2
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x00000000008ed5da
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x00000000008ed450
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x00000000008ed19e
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x00000000008ece1d
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x00000000008ecb4d
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;	// IMP=0x00000000008ec97a
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x00000000008ec718
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x00000000008ec46f
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x00000000008ec2de
- (void)_discoverAccessories:(id)arg1;	// IMP=0x00000000008ebf7a
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x00000000008ebc1c
- (void)_tombstoneAccessoryServer:(id)arg1;	// IMP=0x00000000008eba53
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x00000000008eb88d
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x00000000008eb7d9
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x00000000008eb606
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x00000000008eb58f
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x00000000008eb502
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008eb342
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x00000000008eb0cf
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x00000000008eab6d
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008e9bd8
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008e7e97
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x00000000008e7995
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x00000000008e7639
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x00000000008e6fcf
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008e6c5a
- (void)_notifyManagerOfNewAccessory;	// IMP=0x00000000008e6b51
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008e6aa5
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x00000000008e68d2
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x00000000008e683c
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x00000000008e678b
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x00000000008e60e0
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x00000000008e5b47
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x00000000008e5a01
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1;	// IMP=0x00000000008e5513
- (void)_registerForNotifications;	// IMP=0x00000000008e545f
- (void)_registerForMessages;	// IMP=0x00000000008e51f1
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x00000000008e5075
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x00000000008e4fc4
- (void)discoverAccessories:(id)arg1;	// IMP=0x00000000008e4f13
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x00000000008e4b2e
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x00000000008e4abd
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x00000000008e49df
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x00000000008e49c6
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000008e458b
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x00000000008e43d0
- (void)_startDiscoveringMediaAccessories;	// IMP=0x00000000008e432d
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x00000000008e424f
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x00000000008e3f1f
- (void)handleStartDiscoveringAssociatedMediaAccessories:(_Bool)arg1 forTransport:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008e3e3a
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x00000000008e3b0c
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008e3909
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008e33d9
- (void)timerDidFire:(id)arg1;	// IMP=0x00000000008e2bed
- (void)_stopReprovisioningTimerHandler;	// IMP=0x00000000008e2956
- (_Bool)_isBrowsingAllowed;	// IMP=0x00000000008e294e
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x00000000008e2948
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x00000000008e27e7
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x00000000008e21d3
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x00000000008e20f7
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008e2046
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x00000000008e1f8f
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x00000000008e1f48
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x00000000008e1ee9
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008e1dae
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008e1ca4
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x00000000008e1bc8
- (id)discoveredAccessoryServers;	// IMP=0x00000000008e1ad1
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x00000000008e19f5
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x00000000008e17c6
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x00000000008e1193
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008e0343
- (void)_handleWACAccessoryFound;	// IMP=0x00000000008e0129
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008dfeec
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008dfeda
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008dfdff
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008dfd24
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000008dfb76
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x00000000008dfa6b
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008df89b
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008df69e
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008df5c3
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008df4e8
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x00000000008df40d
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x00000000008df1ba
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x00000000008df0e8
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x00000000008df005
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008dee32
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x00000000008debf2
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008dea75
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x00000000008de8f8
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x00000000008de875
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008de66d
- (_Bool)isBrowsingAllowed;	// IMP=0x00000000008de5a3
- (id)acessoryBrowserHapProtocol;	// IMP=0x00000000008de59a
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x00000000008de4e3
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x00000000008de351
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x00000000008de2a0
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008ddddc
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008ddca1
- (void)activate:(_Bool)arg1;	// IMP=0x00000000008ddc25
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ddb3d
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x00000000008dda8c
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x00000000008dda10
- (void)stopDiscoveringMediaAccessories;	// IMP=0x00000000008dd99f
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008dd923
- (void)stopDiscoveringAccessories;	// IMP=0x00000000008dd8b2
- (void)startDiscoveringMediaAccessories;	// IMP=0x00000000008dd841
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008dd7c5
- (void)startDiscoveringAccessories;	// IMP=0x00000000008dd754
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008dd6d8
- (void)startDiscoveringPairedAccessories;	// IMP=0x00000000008dd667
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008dd56a
@property(nonatomic) _Bool remoteBrowsingEnabled; // @synthesize remoteBrowsingEnabled=_remoteBrowsingEnabled;
- (void)_updateBrowsersForDiscoveryRemoteChange;	// IMP=0x00000000008dd2d2
- (void)resetConfiguration;	// IMP=0x00000000008dd261
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x00000000008dcd10
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x00000000008dc084
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x00000000008dbee7
- (void)__inactivate;	// IMP=0x00000000008dbe76
- (void)__activate;	// IMP=0x00000000008dbe05
- (void)endActiveAssertion:(id)arg1;	// IMP=0x00000000008dbbc1
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x00000000008dba3a
- (unsigned long long)numPairedIPAccessories;	// IMP=0x00000000008db9f1
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x00000000008db9a9
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x00000000008db992
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x00000000008db94a
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x00000000008db933
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x00000000008db8eb
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x00000000008db6c1
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x00000000008db59b
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x00000000008db399
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x00000000008db1c6
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x00000000008db0fb
- (void)resetPairedAccessories;	// IMP=0x00000000008db059
- (void)removePairedAccessory:(id)arg1;	// IMP=0x00000000008daf7e
- (void)addPairedAccessory:(id)arg1;	// IMP=0x00000000008daea3
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x00000000008dabf9
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x00000000008da450
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x00000000008d9f88
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x00000000008d9d9a
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x00000000008d9d52
- (void)__resetBrowsingConnections;	// IMP=0x00000000008d9cb0
- (id)browsingConnections;	// IMP=0x00000000008d9b84
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (void)_removeMediaAccessoryControlObserverMatchingConnection:(id)arg1;	// IMP=0x00000000008d988b
- (void)__addMediaAccessoryControlObserver:(id)arg1;	// IMP=0x00000000008d9653
- (void)__removeMediaAccessoryControlObserver:(id)arg1;	// IMP=0x00000000008d93f8
- (_Bool)hasClientRequestedMediaAccessoryControl:(id)arg1;	// IMP=0x00000000008d935d
- (void)resetMediaAccessoryControlConnections;	// IMP=0x00000000008d92bb
- (id)mediaAccessoryControlConnections;	// IMP=0x00000000008d918f
- (id)dumpBrowsingConnections;	// IMP=0x00000000008d8d5a
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x00000000008d89e8
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x00000000008d88b2
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x00000000008d8801
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x00000000008d86be
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x00000000008d860d
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x00000000008d81e2
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x00000000008d7ecf
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x00000000008d7b63
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x00000000008d78ce
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x00000000008d771f
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x00000000008d7123
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x00000000008d6f67
- (void)validateLinkTypes:(id)arg1;	// IMP=0x00000000008d6d61
- (void)dealloc;	// IMP=0x00000000008d6cb9
- (void)updateBroadcastKeyForIdentifer:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x00000000008d6ba2
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x00000000008d6ac6
- (void)retrieveCurrentStateForIdentifer:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x00000000008d6a36
- (void)setQOS:(long long)arg1;	// IMP=0x00000000008d69ba
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x00000000008d68fb
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x00000000008d684a
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x00000000008d604a
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x00000000008d5fe6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

