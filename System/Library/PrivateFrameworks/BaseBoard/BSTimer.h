//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <BaseBoard/BSTimer-Protocol.h>

@class BSDispatchSource, NSString;
@protocol OS_dispatch_queue;

@interface BSTimer : NSObject <BSTimer>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_callOutQueue;	// 16 = 0x10
    CDUnknownBlockType _handler;	// 24 = 0x18
    BSDispatchSource *_source;	// 32 = 0x20
    double _leewayInterval;	// 40 = 0x28
    _Bool _oneShot;	// 48 = 0x30
    _Bool _scheduled;	// 49 = 0x31
    double _startTime;	// 56 = 0x38
    double _fireInterval;	// 64 = 0x40
    double _repeatInterval;	// 72 = 0x48
    unsigned long long _fireCount;	// 80 = 0x50
}

+ (id)scheduledTimerWithFireInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004bf92
- (void).cxx_destruct;	// IMP=0x000000000004cc13
@property(readonly, nonatomic) double repeatInterval; // @synthesize repeatInterval=_repeatInterval;
@property(readonly, nonatomic) double fireInterval; // @synthesize fireInterval=_fireInterval;
@property(readonly, nonatomic) double startTime; // @synthesize startTime=_startTime;
- (void)cancel;	// IMP=0x000000000004cb17
- (void)schedule;	// IMP=0x000000000004c532
@property(readonly, nonatomic) unsigned long long fireCount; // @synthesize fireCount=_fireCount;
@property(readonly, nonatomic, getter=isScheduled) _Bool scheduled; // @synthesize scheduled=_scheduled;
- (void)dealloc;	// IMP=0x000000000004c376
- (id)initWithFireInterval:(double)arg1 repeatInterval:(double)arg2 leewayInterval:(double)arg3 queue:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x000000000004c06c
- (id)initWithFireInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004c04c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

