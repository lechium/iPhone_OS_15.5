//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x000000000000587b
- (double)rotationAngle;	// IMP=0x000000000000704a
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x000000000000703a
- (unsigned int)chunkPosition;	// IMP=0x000000000000702a
- (void)translateObjectYBy:(double)arg1;	// IMP=0x0000000000007011
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x0000000000006ea9
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x0000000000006e99
- (_Bool)shrinksWithChildren;	// IMP=0x0000000000006e89
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x0000000000006e1f
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x0000000000006d98
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x0000000000006cb2
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x0000000000006c30
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x0000000000006b92
- (int)clusterLevelHint;	// IMP=0x0000000000006b8a
- (struct CGSize)advance;	// IMP=0x0000000000006b71
- (float)fontSize;	// IMP=0x0000000000006b68
- (double)bottom;	// IMP=0x0000000000006b1f
- (double)top;	// IMP=0x0000000000006ad6
- (double)center;	// IMP=0x0000000000006a7e
- (double)right;	// IMP=0x0000000000006a35
- (double)left;	// IMP=0x00000000000069ec
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x00000000000069a4
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x0000000000006914
- (long long)compareYDescending:(id)arg1;	// IMP=0x00000000000068bc
- (long long)compareTopDescending:(id)arg1;	// IMP=0x0000000000006864
- (long long)compareYBounds:(id)arg1;	// IMP=0x00000000000067a6
- (long long)compareY:(id)arg1;	// IMP=0x0000000000006737
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x0000000000006641
- (long long)compareXBounds:(id)arg1;	// IMP=0x00000000000065c5
- (long long)compareZDescending:(id)arg1;	// IMP=0x0000000000006577
- (long long)compareZ:(id)arg1;	// IMP=0x000000000000652d
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x00000000000064e3
- (long long)compareX:(id)arg1;	// IMP=0x00000000000064d1
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x0000000000006479
- (long long)compareAnchorX:(id)arg1;	// IMP=0x0000000000006467
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x0000000000006408
- (long long)compareAnchorY:(id)arg1;	// IMP=0x00000000000063a9
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x0000000000006389
- (long long)insertionOrder;	// IMP=0x0000000000006378
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x0000000000006353
- (void)resizeWith:(id)arg1;	// IMP=0x0000000000006241
- (void)fitBoundsToChildren;	// IMP=0x00000000000060d2
- (float)referenceAdvanceWidth;	// IMP=0x0000000000006092
- (float)absoluteGapTo:(id)arg1;	// IMP=0x0000000000005fef
- (float)advanceDeltaAfterSpace;	// IMP=0x0000000000005fe6
- (float)clusterGapTo:(id)arg1;	// IMP=0x0000000000005f6f
- (struct CGPoint)anchor;	// IMP=0x0000000000005f57
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x0000000000005ef7
- (id)describeBounds;	// IMP=0x0000000000005ecb
- (struct CGRect)renderedBounds;	// IMP=0x0000000000005d4a
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x0000000000005cc2
- (struct CGRect)bounds;	// IMP=0x0000000000005c77
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000005c4e
- (void)setChildren:(id)arg1;	// IMP=0x0000000000005b87
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x0000000000005b1f
- (id)newTakeChildren;	// IMP=0x0000000000005ab6
- (void)removeAll;	// IMP=0x0000000000005a4d
- (void)remove:(id)arg1;	// IMP=0x0000000000005a04
- (void)addChildrenOf:(id)arg1;	// IMP=0x00000000000059c3
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x0000000000005953
- (void)add:(id)arg1;	// IMP=0x00000000000058e3
- (float)opticalLeading;	// IMP=0x00000000000058da
- (void)accept:(id)arg1;	// IMP=0x0000000000005860
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x00000000000057b8
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000005789
- (id)init;	// IMP=0x000000000000572c

@end

