//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXPhotoLibraryUIChangeObserver-Protocol.h>
#import <PhotosUICore/PXTouchingUIGestureRecognizerDelegate-Protocol.h>

@class NSError, NSString, NSURL, PHFetchResult, PHMomentShare, PHPhotoLibrary, PXCMMPreviewAsset, PXCMMPreviewUIImageProvider, PXCMMSpecManager, PXCMMStackBubbleView, PXCMMTranscriptBubbleStatusView, PXCMMTranscriptBubbleView, PXMomentShareStatusPresentation;
@protocol PXCMMTranscriptBubbleTouchDelegate, PXUIImageProvider;

@interface PXCMMTranscriptBubbleViewController <PXPhotoLibraryUIChangeObserver, PXChangeObserver, PXTouchingUIGestureRecognizerDelegate>
{
    PHPhotoLibrary *_photoLibrary;	// 8 = 0x8
    PHFetchResult *_backingFetchResult;	// 16 = 0x10
    PHFetchResult *_keyAssetFetch;	// 24 = 0x18
    PXMomentShareStatusPresentation *_momentShareStatusPresentation;	// 32 = 0x20
    long long _saveInProgressTotal;	// 40 = 0x28
    PXCMMTranscriptBubbleView *_bubbleView;	// 48 = 0x30
    PXCMMTranscriptBubbleStatusView *_errorStatusView;	// 56 = 0x38
    PXCMMTranscriptBubbleStatusView *_loadingStatusView;	// 64 = 0x40
    id <PXUIImageProvider> _mediaProvider;	// 72 = 0x48
    PXCMMSpecManager *_specManager;	// 80 = 0x50
    PXCMMPreviewAsset *_previewAsset;	// 88 = 0x58
    PXCMMPreviewUIImageProvider *_previewImageProvider;	// 96 = 0x60
    _Bool _readyForBubbleStateTransitions;	// 104 = 0x68
    _Bool _isExpungingAndRefetching;	// 105 = 0x69
    _Bool _triggeredForcedSync;	// 106 = 0x6a
    _Bool _useStackBubbleView;	// 107 = 0x6b
    PXCMMStackBubbleView *_stackBubbleView;	// 112 = 0x70
    _Bool _isSender;	// 120 = 0x78
    _Bool _isPending;	// 121 = 0x79
    _Bool _highlighted;	// 122 = 0x7a
    NSURL *_url;	// 128 = 0x80
    id <PXCMMTranscriptBubbleTouchDelegate> _touchDelegate;	// 136 = 0x88
    long long _bubbleState;	// 144 = 0x90
    long long _targetState;	// 152 = 0x98
    NSError *_error;	// 160 = 0xa0
}

+ (_Bool)_isPermanentFailureURL:(id)arg1;	// IMP=0x0000000000a16d71
+ (void)_registerPermanentFailureURL:(id)arg1;	// IMP=0x0000000000a16cfd
- (void).cxx_destruct;	// IMP=0x0000000000a163fe
@property(retain, nonatomic) PXMomentShareStatusPresentation *momentShareStatusPresentation; // @synthesize momentShareStatusPresentation=_momentShareStatusPresentation;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long targetState; // @synthesize targetState=_targetState;
@property(nonatomic) long long bubbleState; // @synthesize bubbleState=_bubbleState;
@property(nonatomic) __weak id <PXCMMTranscriptBubbleTouchDelegate> touchDelegate; // @synthesize touchDelegate=_touchDelegate;
@property(readonly, nonatomic) _Bool isPending; // @synthesize isPending=_isPending;
@property(readonly, nonatomic) _Bool isSender; // @synthesize isSender=_isSender;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x0000000000a16281
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;	// IMP=0x0000000000a15a01
- (void)touchingUIGestureRecognizerWillEndTouching:(id)arg1;	// IMP=0x0000000000a159ed
- (void)touchingUIGestureRecognizerWillBeginTouching:(id)arg1;	// IMP=0x0000000000a159d6
- (void)_readyForStateTransition;	// IMP=0x0000000000a159b9
- (void)_ensureBubbleStateTransition;	// IMP=0x0000000000a158b8
- (void)_updateBubbleState;	// IMP=0x0000000000a15721
- (void)_updateMomentShareStatusPresentation;	// IMP=0x0000000000a155ec
- (void)_updateContent;	// IMP=0x0000000000a153c0
- (void)_updateBubbleView;	// IMP=0x0000000000a149c6
- (_Bool)_shouldShowContent;	// IMP=0x0000000000a14974
- (void)_installGestures;	// IMP=0x0000000000a14759
- (void)viewDidLoad;	// IMP=0x0000000000a14516
- (void)_longPressGesture:(id)arg1;	// IMP=0x0000000000a14476
- (void)_doubleTapGesture:(id)arg1;	// IMP=0x0000000000a143d6
- (void)_panGesture:(id)arg1;	// IMP=0x0000000000a14320
- (void)_tapGesture:(id)arg1;	// IMP=0x0000000000a1402a
- (_Bool)_shouldOpenCloudSettings;	// IMP=0x0000000000a13fe0
- (_Bool)_shouldOpenInSafari;	// IMP=0x0000000000a13f96
- (_Bool)_shouldRetryOnTap;	// IMP=0x0000000000a13e5d
- (_Bool)_shouldNavigateToContent;	// IMP=0x0000000000a13e4b
- (void)_retryMomentShareFetch;	// IMP=0x0000000000a13ac9
- (void)_triggerForcedSyncIfNeeded;	// IMP=0x0000000000a139ea
- (void)_acceptMomentShareIfNeeded:(id)arg1;	// IMP=0x0000000000a138ea
- (void)_autoAcceptMomentShareIfNeeded:(id)arg1;	// IMP=0x0000000000a1386b
- (void)_momentShareURL:(id)arg1 fetchDidFailWithError:(id)arg2;	// IMP=0x0000000000a137d8
- (void)_fetchMomentShareFromNetworkURL:(id)arg1;	// IMP=0x0000000000a13685
- (id)_fetchKeyAssetsFromBackingCollection;	// IMP=0x0000000000a135ba
- (_Bool)_canFetchAssetsFromMomentShare:(id)arg1;	// IMP=0x0000000000a1354e
- (id)_debugStatusDescription;	// IMP=0x0000000000a132eb
- (id)_secondaryDescription;	// IMP=0x0000000000a1314d
- (id)_primaryDescription;	// IMP=0x0000000000a130df
@property(readonly, nonatomic) PHMomentShare *momentShare;
- (struct CGSize)workaroundSizeForSize:(struct CGSize)arg1;	// IMP=0x0000000000a12dbb
- (struct CGSize)contentSizeThatFits:(struct CGSize)arg1;	// IMP=0x0000000000a12d69
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0000000000a12adc
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000a12a59
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x0000000000a129c9
- (id)init;	// IMP=0x0000000000a1294f
- (id)initWithURL:(id)arg1 isSender:(_Bool)arg2 isPending:(_Bool)arg3;	// IMP=0x0000000000a1224c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

