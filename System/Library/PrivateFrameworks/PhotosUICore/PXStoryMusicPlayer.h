//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXAudioPlayerAVAudioSessionDelegate-Protocol.h>
#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXMutableStoryMusicPlayer-Protocol.h>
#import <PhotosUICore/PXSettingsKeyObserver-Protocol.h>
#import <PhotosUICore/PXStoryDiagnosticHUDContentProvider-Protocol.h>
#import <PhotosUICore/PXStoryPacingCueSource-Protocol.h>
#import <PhotosUICore/PXStoryQueueParticipant-Protocol.h>

@class NSDate, NSObject, NSString, NSTimer, PXAudioPlayer, PXNumberAnimator, PXStoryModel, PXUpdater;
@protocol OS_dispatch_queue, PXAudioAsset, PXAudioCueProvider, PXAudioCueSource, PXStorySongResource;

@interface PXStoryMusicPlayer <PXStoryQueueParticipant, PXChangeObserver, PXStoryDiagnosticHUDContentProvider, PXMutableStoryMusicPlayer, PXSettingsKeyObserver, PXAudioPlayerAVAudioSessionDelegate, PXStoryPacingCueSource>
{
    _Bool _isActive;	// 8 = 0x8
    _Bool _shouldDuckForCurrentTouch;	// 9 = 0x9
    _Bool _isDucked;	// 10 = 0xa
    float _duckedVolume;	// 12 = 0xc
    NSObject<OS_dispatch_queue> *_storyQueue;	// 16 = 0x10
    PXStoryModel *_model;	// 24 = 0x18
    long long _readinessStatus;	// 32 = 0x20
    long long _actionAtEnd;	// 40 = 0x28
    PXAudioPlayer *_player;	// 48 = 0x30
    PXUpdater *_updater;	// 56 = 0x38
    long long _cueRequestID;	// 64 = 0x40
    PXNumberAnimator *_duckingVolumeAnimator;	// 72 = 0x48
    PXNumberAnimator *_focusVolumeAnimator;	// 80 = 0x50
    PXNumberAnimator *_fadeOutVolumeAnimator;	// 88 = 0x58
    id <PXAudioAsset> _currentAudioAsset;	// 96 = 0x60
    id <PXAudioCueSource> _cueSource;	// 104 = 0x68
    long long _desiredPlayState;	// 112 = 0x70
    long long _cuesVersion;	// 120 = 0x78
    NSString *_pauseReason;	// 128 = 0x80
    NSString *_duckingReason;	// 136 = 0x88
    NSDate *_touchingBeganDate;	// 144 = 0x90
    long long _bufferingEvents;	// 152 = 0x98
    long long _currentSongResourceRequestID;	// 160 = 0xa0
    NSTimer *_playbackTimer;	// 168 = 0xa8
    id <PXStorySongResource> _currentSongResource;	// 176 = 0xb0
    long long _audioDesiredPlayState;	// 184 = 0xb8
    id <PXAudioCueProvider> _cueProvider;	// 192 = 0xc0
    CDStruct_1b6d18a9 _targetDuration;	// 200 = 0xc8
}

- (void).cxx_destruct;	// IMP=0x000000000092771d
@property(retain, nonatomic) id <PXAudioCueProvider> cueProvider; // @synthesize cueProvider=_cueProvider;
@property(readonly, nonatomic) long long audioDesiredPlayState; // @synthesize audioDesiredPlayState=_audioDesiredPlayState;
@property(readonly, nonatomic) id <PXStorySongResource> currentSongResource; // @synthesize currentSongResource=_currentSongResource;
@property(nonatomic) float duckedVolume; // @synthesize duckedVolume=_duckedVolume;
@property(nonatomic) _Bool isDucked; // @synthesize isDucked=_isDucked;
@property(retain, nonatomic) NSTimer *playbackTimer; // @synthesize playbackTimer=_playbackTimer;
@property(nonatomic) long long currentSongResourceRequestID; // @synthesize currentSongResourceRequestID=_currentSongResourceRequestID;
@property(nonatomic) long long bufferingEvents; // @synthesize bufferingEvents=_bufferingEvents;
@property(nonatomic) _Bool shouldDuckForCurrentTouch; // @synthesize shouldDuckForCurrentTouch=_shouldDuckForCurrentTouch;
@property(retain, nonatomic) NSDate *touchingBeganDate; // @synthesize touchingBeganDate=_touchingBeganDate;
@property(copy, nonatomic) NSString *duckingReason; // @synthesize duckingReason=_duckingReason;
@property(copy, nonatomic) NSString *pauseReason; // @synthesize pauseReason=_pauseReason;
@property(nonatomic) long long cuesVersion; // @synthesize cuesVersion=_cuesVersion;
@property(nonatomic) CDStruct_1b6d18a9 targetDuration; // @synthesize targetDuration=_targetDuration;
@property(nonatomic) long long desiredPlayState; // @synthesize desiredPlayState=_desiredPlayState;
@property(retain, nonatomic) id <PXAudioCueSource> cueSource; // @synthesize cueSource=_cueSource;
@property(retain, nonatomic) id <PXAudioAsset> currentAudioAsset; // @synthesize currentAudioAsset=_currentAudioAsset;
@property(readonly, nonatomic) PXNumberAnimator *fadeOutVolumeAnimator; // @synthesize fadeOutVolumeAnimator=_fadeOutVolumeAnimator;
@property(readonly, nonatomic) PXNumberAnimator *focusVolumeAnimator; // @synthesize focusVolumeAnimator=_focusVolumeAnimator;
@property(readonly, nonatomic) PXNumberAnimator *duckingVolumeAnimator; // @synthesize duckingVolumeAnimator=_duckingVolumeAnimator;
@property(nonatomic) long long cueRequestID; // @synthesize cueRequestID=_cueRequestID;
@property(readonly, nonatomic) PXUpdater *updater; // @synthesize updater=_updater;
@property(readonly, nonatomic) PXAudioPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long actionAtEnd; // @synthesize actionAtEnd=_actionAtEnd;
@property(nonatomic) long long readinessStatus; // @synthesize readinessStatus=_readinessStatus;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(readonly, nonatomic) PXStoryModel *model; // @synthesize model=_model;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *storyQueue; // @synthesize storyQueue=_storyQueue;
- (void)_handlePlaybackTimerFired:(id)arg1;	// IMP=0x0000000000927424
- (void)setAudioDesiredPlayState:(long long)arg1;	// IMP=0x00000000009273e0
- (void)_handlePlaybackFailureIfNeeded;	// IMP=0x00000000009271a4
- (void)_handleDuckingDelayPassedForTouchingBeganDate:(id)arg1;	// IMP=0x00000000009270c4
- (void)_replayIfNeeded;	// IMP=0x0000000000926e2e
- (void)_handlePlayerChangedIsAtEnd;	// IMP=0x0000000000926d9a
- (CDStruct_1b6d18a9)playbackStartTimeForIncomingSong:(id)arg1;	// IMP=0x0000000000926c65
- (id)AVAudioSessionForPlayer:(id)arg1;	// IMP=0x0000000000926c15
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;	// IMP=0x0000000000926b63
- (id)diagnosticErrorsByComponentForHUDType:(long long)arg1;	// IMP=0x0000000000926aa4
- (id)diagnosticTextForHUDType:(long long)arg1 displaySize:(struct CGSize)arg2;	// IMP=0x00000000009263bc
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;	// IMP=0x0000000000926364
- (void)didPerformChanges;	// IMP=0x00000000009262fa
- (void)performChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000000009262cb
- (id)diagnosticCueStringForSize:(struct CGSize)arg1 withIndicatorTime:(CDStruct_1b6d18a9)arg2 rangeIndicatorTimeRange:(CDStruct_e83c9415)arg3;	// IMP=0x00000000009261a1
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
@property(readonly, nonatomic) id <PXAudioCueSource> audioCueSource;
- (void)_updateError;	// IMP=0x0000000000925ff5
- (void)_invalidateError;	// IMP=0x0000000000925fb1
- (void)_updateFocusVolumeAnimator;	// IMP=0x0000000000925dd2
- (void)_invalidateFocusVolumeAnimator;	// IMP=0x0000000000925d8e
- (void)_updateDuckingVolumeAnimator;	// IMP=0x0000000000925c9f
- (void)_invalidateDuckingVolumeAnimator;	// IMP=0x0000000000925c5b
- (void)_updateFadeOutVolumeAnimator;	// IMP=0x0000000000925aab
- (void)_invalidateFadeOutVolumeAnimator;	// IMP=0x0000000000925a67
- (void)_updateDucked;	// IMP=0x00000000009258e7
- (void)_invalidateDucked;	// IMP=0x00000000009258a3
- (void)_updateTouchingBeganDate;	// IMP=0x000000000092580e
- (void)_invalidateTouchingBeganDate;	// IMP=0x00000000009257ca
- (void)_updatePlayerVolume;	// IMP=0x00000000009254fc
- (void)_invalidatePlayerVolume;	// IMP=0x00000000009254b8
- (void)_updateModelProperties;	// IMP=0x00000000009253ef
- (void)_invalidateModelProprties;	// IMP=0x00000000009253ab
- (void)_updateReadinessStatus;	// IMP=0x0000000000925301
- (void)_invalidateReadinessStatus;	// IMP=0x00000000009252bd
- (void)_updatePlaybackTimer;	// IMP=0x00000000009251db
- (void)_invalidatePlaybackTimer;	// IMP=0x0000000000925197
- (void)_updatePlayerDesiredPlayState;	// IMP=0x00000000009250eb
- (void)_invalidatePlayerDesiredPlayState;	// IMP=0x00000000009250a7
- (void)_updateDesiredPlayState;	// IMP=0x0000000000924f5d
- (void)_invalidateDesiredPlayState;	// IMP=0x0000000000924f19
- (void)_updatePlayerCurrentAsset;	// IMP=0x0000000000924e1f
- (void)_invalidatePlayerCurrentAsset;	// IMP=0x0000000000924ddb
- (void)_handleAudioCues:(id)arg1 asset:(id)arg2 error:(id)arg3 requestID:(long long)arg4;	// IMP=0x0000000000924cc2
- (void)_updateCueSource;	// IMP=0x0000000000924b6c
- (void)_invalidateCueSource;	// IMP=0x0000000000924b16
- (void)_updateCurrentAudioAsset;	// IMP=0x0000000000924aa7
- (void)_invalidateCurrentAudioAsset;	// IMP=0x0000000000924a63
- (void)_handleTargetDurationFlexAsset:(id)arg1 requestID:(long long)arg2;	// IMP=0x000000000092496e
- (void)_updateCurrentSongResource;	// IMP=0x00000000009245a4
- (void)_invalidateCurrentSongResource;	// IMP=0x0000000000924560
- (void)_updateTargetDuration;	// IMP=0x00000000009244a6
- (void)_invalidateTargetDuration;	// IMP=0x0000000000924462
@property(readonly, copy) NSString *description;
- (void)replay;	// IMP=0x000000000092429f
- (id)diagnosticTextForHUDType:(long long)arg1;	// IMP=0x0000000000924210
- (void)setCurrentSongResource:(id)arg1 requestID:(long long)arg2;	// IMP=0x0000000000923b8f
- (void)setIsActive:(_Bool)arg1;	// IMP=0x000000000092363e
- (id)initWithModel:(id)arg1;	// IMP=0x0000000000923001
- (id)init;	// IMP=0x0000000000922f87

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

