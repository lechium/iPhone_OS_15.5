//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PhotosUICore/PXDiagnosticsEnvironment-Protocol.h>
#import <PhotosUICore/PXReusableObjectPoolDelegate-Protocol.h>
#import <PhotosUICore/PXScrollViewControllerObserver-Protocol.h>
#import <PhotosUICore/PXTilingControllerPreheatHandler-Protocol.h>
#import <PhotosUICore/PXTilingControllerZoomAnimationCoordinatorDelegate-Protocol.h>
#import <PhotosUICore/PXUIWidget-Protocol.h>
#import <PhotosUICore/UIGestureRecognizerDelegate-Protocol.h>

@class NSMutableSet, NSObject, NSString, PXAssetActionManager, PXOneUpPresentation, PXPhotoKitUIMediaProvider, PXPhotosDetailsContext, PXReusableObjectPool, PXSectionedSelectionManager, PXTilingController, PXTouchingUIGestureRecognizer, PXUITapGestureRecognizer, PXWidgetSpec, _PXUIRelatedPreviewOrbContext;
@protocol PXAnonymousView, PXWidgetDelegate, PXWidgetEditingDelegate, PXWidgetInteractionDelegate, PXWidgetUnlockDelegate;

@interface PXUIRelatedWidget <PXReusableObjectPoolDelegate, UIGestureRecognizerDelegate, PXScrollViewControllerObserver, PXTilingControllerZoomAnimationCoordinatorDelegate, PXTilingControllerPreheatHandler, PXUIWidget, PXDiagnosticsEnvironment>
{
    PXUITapGestureRecognizer *_tapGestureRecognizer;	// 8 = 0x8
    PXUITapGestureRecognizer *_pressGestureRecognizer;	// 16 = 0x10
    PXTouchingUIGestureRecognizer *_touchGestureRecognizer;	// 24 = 0x18
    _Bool _userInteractionEnabled;	// 32 = 0x20
    PXReusableObjectPool *__tileReusePool;	// 40 = 0x28
    NSMutableSet *__tilesInUse;	// 48 = 0x30
    PXPhotoKitUIMediaProvider *__mediaProvider;	// 56 = 0x38
    _PXUIRelatedPreviewOrbContext *__previewOrbContext;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000013c224
@property(retain, nonatomic, setter=_setPreviewOrbContext:) _PXUIRelatedPreviewOrbContext *_previewOrbContext; // @synthesize _previewOrbContext=__previewOrbContext;
@property(readonly, nonatomic) PXPhotoKitUIMediaProvider *_mediaProvider; // @synthesize _mediaProvider=__mediaProvider;
@property(readonly, nonatomic) NSMutableSet *_tilesInUse; // @synthesize _tilesInUse=__tilesInUse;
@property(readonly, nonatomic) PXReusableObjectPool *_tileReusePool; // @synthesize _tileReusePool=__tileReusePool;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled; // @synthesize userInteractionEnabled=_userInteractionEnabled;
- (id)_assetsBySizeWithTileIdentifiers:(const struct PXTileIdentifier *)arg1 withGeometries:(const struct PXTileGeometry *)arg2 count:(unsigned long long)arg3;	// IMP=0x000000000013bce4
- (void)stopPreheatingTilesForIdentifiers:(const struct PXTileIdentifier *)arg1 withGeometries:(const struct PXTileGeometry *)arg2 count:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x000000000013bc0a
- (void)startPreheatingTilesForIdentifiers:(const struct PXTileIdentifier *)arg1 withGeometries:(const struct PXTileGeometry *)arg2 count:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x000000000013bb30
- (void)scrollViewControllerDidBeginScrolling:(id)arg1;	// IMP=0x000000000013bb1c
- (id)px_diagnosticsItemProvidersForPoint:(struct CGPoint)arg1 inCoordinateSpace:(id)arg2;	// IMP=0x000000000013b8d4
- (void)tilingControllerZoomAnimationCoordinator:(id)arg1 enumerateTilesToAnimateInLayerWithType:(long long)arg2 layout:(id)arg3 zoomAnimationContext:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x000000000013b622
- (void)prepareForInteractiveTransition:(id)arg1;	// IMP=0x000000000013b3e0
- (_Bool)containsPoint:(struct CGPoint)arg1 forCoordinateSpace:(id)arg2;	// IMP=0x000000000013b3ad
- (id)zoomAnimationCoordinatorForContext:(id)arg1;	// IMP=0x000000000013b312
- (id)regionOfInterestForContext:(id)arg1;	// IMP=0x000000000013b0c5
- (void)environmentDidUpdateFocusInContext:(id)arg1;	// IMP=0x000000000013af91
- (void)loadContentData;	// IMP=0x000000000013af23
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000013af04
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000013ae75
- (void)reusableObjectPool:(id)arg1 didEvictReusableObject:(id)arg2;	// IMP=0x000000000013ae35
- (void)reusableObjectPool:(id)arg1 objectPreparedForReuse:(id)arg2;	// IMP=0x000000000013adf3
- (void)reusableObjectPool:(id)arg1 objectBecameReusable:(id)arg2;	// IMP=0x000000000013adae
- (void)reusableObjectPool:(id)arg1 didCreateReusableObject:(id)arg2;	// IMP=0x000000000013ad3c
- (void)checkInTile:(void *)arg1 withIdentifier:(struct PXTileIdentifier)arg2;	// IMP=0x000000000013ac9c
- (void)_getImageRequester:(id *)arg1 title:(id *)arg2 subtitle:(id *)arg3 forRelatedEntry:(id)arg4 mediaProvider:(id)arg5;	// IMP=0x000000000013ab6c
- (void *)checkOutTileForIdentifier:(struct PXTileIdentifier)arg1 layout:(id)arg2;	// IMP=0x000000000013a59b
- (struct PXSimpleIndexPath)_assetIndexPathAtLocation:(struct CGPoint)arg1 padding:(struct UIEdgeInsets)arg2;	// IMP=0x000000000013a40e
- (id)imageViewBasicTileForPreviewingAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000013a14e
- (id)_relatedEntryAtPoint:(struct CGPoint)arg1 inCoordinateSpace:(id)arg2;	// IMP=0x000000000013a033
- (id)_relatedEntryAtLocationOfGestureRecognizer:(id)arg1;	// IMP=0x0000000000139f89
- (void)_handleTouchGestureRecognizer:(id)arg1;	// IMP=0x0000000000139de2
- (id)_photosDetailsViewControllerForRelatedEntry:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000139cb3
- (void)_handleTapGestureRecognizer:(id)arg1;	// IMP=0x0000000000139b97
- (id)_scrollViewController;	// IMP=0x0000000000139b36
- (void)commitPreviewViewController:(id)arg1;	// IMP=0x000000000013989f
- (id)previewViewControllerAtLocation:(struct CGPoint)arg1 fromSourceView:(id)arg2;	// IMP=0x0000000000139712
- (void)_registerTileClass:(Class)arg1 forReuseIdentifier:(long long)arg2;	// IMP=0x000000000013968a
- (id)extendedTraitCollection;	// IMP=0x000000000013960a
- (id)createTileAnimator;	// IMP=0x00000000001395f1
- (void)installGestureRecognizers;	// IMP=0x00000000001393d3
- (id)init;	// IMP=0x0000000000139244

// Remaining properties
@property(readonly, nonatomic) _Bool allowUserInteractionWithSubtitle;
@property(readonly, nonatomic) PXAssetActionManager *assetActionManager;
@property(readonly, nonatomic) long long contentLayoutStyle;
@property(readonly, nonatomic) PXTilingController *contentTilingController;
@property(readonly, nonatomic) NSObject<PXAnonymousView> *contentView;
@property(readonly, nonatomic) long long contentViewAnchoringType;
@property(retain, nonatomic) PXPhotosDetailsContext *context;
@property(readonly, nonatomic) _Bool cursorInteractionEnabled;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) double extraSpaceNeededAtContentBottom;
@property(nonatomic, getter=isFaceModeEnabled) _Bool faceModeEnabled;
@property(readonly, nonatomic) _Bool hasContentForCurrentInput;
@property(readonly, nonatomic) _Bool hasLoadedContentData;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isInEditMode;
@property(readonly, nonatomic) NSString *localizedCaption;
@property(readonly, nonatomic) NSString *localizedDisclosureTitle;
@property(readonly, nonatomic) NSString *localizedSubtitle;
@property(readonly, nonatomic) NSString *localizedTitle;
@property(nonatomic) struct CGSize maxVisibleSizeInEditMode;
@property(retain, nonatomic) PXOneUpPresentation *oneUpPresentation;
@property(nonatomic, getter=isSelecting) _Bool selecting;
@property(readonly, nonatomic) PXSectionedSelectionManager *selectionManager;
@property(readonly, nonatomic) NSString *snappableWidgetIdentifier;
@property(retain, nonatomic) PXWidgetSpec *spec;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsFaceMode;
@property(readonly, nonatomic) _Bool supportsSelection;
@property(readonly, nonatomic) _Bool wantsFocus;
@property(nonatomic) __weak id <PXWidgetDelegate> widgetDelegate;
@property(nonatomic) __weak id <PXWidgetEditingDelegate> widgetEditingDelegate;
@property(nonatomic) __weak id <PXWidgetInteractionDelegate> widgetInteractionDelegate;
@property(nonatomic) __weak id <PXWidgetUnlockDelegate> widgetUnlockDelegate;

@end

