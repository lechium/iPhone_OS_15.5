//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SPOwner/NSCopying-Protocol.h>
#import <SPOwner/NSSecureCoding-Protocol.h>

@class NSDate, NSDictionary, NSSet, NSString, NSUUID, SPBeaconRole, SPDiscoveredAccessoryProductInformation, SPHandle, SPLostModeInfo;

@interface SPBeacon : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _accepted;	// 8 = 0x8
    _Bool _isZeus;	// 9 = 0x9
    _Bool _connected;	// 10 = 0xa
    _Bool _canBeLeashedByHost;	// 11 = 0xb
    _Bool _connectionAllowed;	// 12 = 0xc
    _Bool _isAppleAudioAccessory;	// 13 = 0xd
    NSUUID *_identifier;	// 16 = 0x10
    NSUUID *_groupIdentifier;	// 24 = 0x18
    long long _partIdentifier;	// 32 = 0x20
    SPHandle *_owner;	// 40 = 0x28
    NSString *_name;	// 48 = 0x30
    NSString *_model;	// 56 = 0x38
    SPBeaconRole *_role;	// 64 = 0x40
    SPLostModeInfo *_lostModeInfo;	// 72 = 0x48
    NSSet *_shares;	// 80 = 0x50
    NSDictionary *_taskInformation;	// 88 = 0x58
    NSString *_systemVersion;	// 96 = 0x60
    long long _vendorId;	// 104 = 0x68
    long long _productId;	// 112 = 0x70
    NSString *_type;	// 120 = 0x78
    long long _batteryLevel;	// 128 = 0x80
    long long _connectableDeviceCount;	// 136 = 0x88
    NSString *_separationState;	// 144 = 0x90
    long long _beaconSeparationState;	// 152 = 0x98
    NSSet *_safeLocations;	// 160 = 0xa0
    NSSet *_locationProviders;	// 168 = 0xa8
    SPDiscoveredAccessoryProductInformation *_accessoryProductInfo;	// 176 = 0xb0
    NSString *_stableIdentifier;	// 184 = 0xb8
    NSDate *_pairingDate;	// 192 = 0xc0
    NSString *_correlationIdentifier;	// 200 = 0xc8
    NSDate *_connectedStateExpiryDate;	// 208 = 0xd0
    NSString *_serialNumber;	// 216 = 0xd8
    unsigned long long _keySyncLastObservedIndex;	// 224 = 0xe0
    NSDate *_keySyncLastIndexObservationDate;	// 232 = 0xe8
    unsigned long long _keySyncWildIndexFallback;	// 240 = 0xf0
    unsigned long long _keyAlignmentLastObservedIndex;	// 248 = 0xf8
    NSDate *_keyAlignmentLastIndexObservationDate;	// 256 = 0x100
}

+ (id)SPOwner;	// IMP=0x000000000000f74c
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000000f744
- (void).cxx_destruct;	// IMP=0x0000000000011271
@property(nonatomic) _Bool isAppleAudioAccessory; // @synthesize isAppleAudioAccessory=_isAppleAudioAccessory;
@property(copy, nonatomic) NSDate *keyAlignmentLastIndexObservationDate; // @synthesize keyAlignmentLastIndexObservationDate=_keyAlignmentLastIndexObservationDate;
@property(nonatomic) unsigned long long keyAlignmentLastObservedIndex; // @synthesize keyAlignmentLastObservedIndex=_keyAlignmentLastObservedIndex;
@property(nonatomic) unsigned long long keySyncWildIndexFallback; // @synthesize keySyncWildIndexFallback=_keySyncWildIndexFallback;
@property(copy, nonatomic) NSDate *keySyncLastIndexObservationDate; // @synthesize keySyncLastIndexObservationDate=_keySyncLastIndexObservationDate;
@property(nonatomic) unsigned long long keySyncLastObservedIndex; // @synthesize keySyncLastObservedIndex=_keySyncLastObservedIndex;
@property(copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property(copy, nonatomic) NSDate *connectedStateExpiryDate; // @synthesize connectedStateExpiryDate=_connectedStateExpiryDate;
@property(copy, nonatomic) NSString *correlationIdentifier; // @synthesize correlationIdentifier=_correlationIdentifier;
@property(copy, nonatomic) NSDate *pairingDate; // @synthesize pairingDate=_pairingDate;
@property(copy, nonatomic) NSString *stableIdentifier; // @synthesize stableIdentifier=_stableIdentifier;
@property(copy, nonatomic) SPDiscoveredAccessoryProductInformation *accessoryProductInfo; // @synthesize accessoryProductInfo=_accessoryProductInfo;
@property(copy, nonatomic) NSSet *locationProviders; // @synthesize locationProviders=_locationProviders;
@property(copy, nonatomic) NSSet *safeLocations; // @synthesize safeLocations=_safeLocations;
@property(nonatomic) long long beaconSeparationState; // @synthesize beaconSeparationState=_beaconSeparationState;
@property(copy, nonatomic) NSString *separationState; // @synthesize separationState=_separationState;
@property(nonatomic) long long connectableDeviceCount; // @synthesize connectableDeviceCount=_connectableDeviceCount;
@property(nonatomic) _Bool connectionAllowed; // @synthesize connectionAllowed=_connectionAllowed;
@property(nonatomic) _Bool canBeLeashedByHost; // @synthesize canBeLeashedByHost=_canBeLeashedByHost;
@property(nonatomic) _Bool connected; // @synthesize connected=_connected;
@property(nonatomic) _Bool isZeus; // @synthesize isZeus=_isZeus;
@property(nonatomic) long long batteryLevel; // @synthesize batteryLevel=_batteryLevel;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(nonatomic) long long productId; // @synthesize productId=_productId;
@property(nonatomic) long long vendorId; // @synthesize vendorId=_vendorId;
@property(copy, nonatomic) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(copy, nonatomic) NSDictionary *taskInformation; // @synthesize taskInformation=_taskInformation;
@property(copy, nonatomic) NSSet *shares; // @synthesize shares=_shares;
@property(copy, nonatomic) SPLostModeInfo *lostModeInfo; // @synthesize lostModeInfo=_lostModeInfo;
@property(copy, nonatomic) SPBeaconRole *role; // @synthesize role=_role;
@property(copy, nonatomic) NSString *model; // @synthesize model=_model;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) _Bool accepted; // @synthesize accepted=_accepted;
@property(copy, nonatomic) SPHandle *owner; // @synthesize owner=_owner;
@property(nonatomic) long long partIdentifier; // @synthesize partIdentifier=_partIdentifier;
@property(copy, nonatomic) NSUUID *groupIdentifier; // @synthesize groupIdentifier=_groupIdentifier;
@property(copy, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
- (id)debugDescription;	// IMP=0x0000000000010dcb
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000010514
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000001006e
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000f883
- (unsigned long long)hash;	// IMP=0x000000000000f83f
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000f76c

@end

