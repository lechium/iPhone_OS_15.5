//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSSet, NSString;
@protocol OS_dispatch_queue, PFLoggerBackend;

@interface PFLogger : NSObject
{
    _Bool _shouldLogToCrashReporter;	// 8 = 0x8
    _Bool _backendAllowsConcurrentAccess;	// 9 = 0x9
    int _logLevel;	// 12 = 0xc
    NSObject<PFLoggerBackend> *_backend;	// 16 = 0x10
    NSArray *_tracedSubsystems;	// 24 = 0x18
    NSArray *_debuggedSubsystems;	// 32 = 0x20
    NSString *_facilityPrefix;	// 40 = 0x28
    NSDictionary *_options;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_backendAccessSerializationQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_recordedSubsystemsQueue;	// 64 = 0x40
    NSSet *_recordedSubsystems;	// 72 = 0x48
}

+ (_Bool)traceEnabledForSubsystem:(id)arg1;	// IMP=0x000000000001e3c9
+ (void)logCrashReporterMessageFromCodeLocation:(CDStruct_98c8119d)arg1 format:(id)arg2;	// IMP=0x000000000001e238
+ (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;	// IMP=0x000000000001e170
+ (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4;	// IMP=0x000000000001e0b9
+ (void)setupCrashReporter;	// IMP=0x000000000001e04f
+ (void)logCrashReporterMessage:(id)arg1 fromCodeLocation:(CDStruct_98c8119d)arg2;	// IMP=0x000000000001de79
+ (_Bool)enabledForSubsystem:(id)arg1 level:(int)arg2;	// IMP=0x000000000001dda3
+ (id)backendsFromUserDefaultsWithLogLevel:(int)arg1;	// IMP=0x000000000001db7f
+ (id)createDefaultLogger;	// IMP=0x000000000001d722
+ (int)defaultLoggerLogLevel;	// IMP=0x000000000001d6c4
+ (void)recreateDefaultLogger;	// IMP=0x000000000001d678
+ (void)setDefaultLogger:(id)arg1;	// IMP=0x000000000001d5f3
+ (void)flushDefaultLoggerIfPresent;	// IMP=0x000000000001d5d3
+ (id)defaultLogger;	// IMP=0x000000000001d570
+ (id)loggerWithBackend:(id)arg1 logLevel:(int)arg2 options:(id)arg3;	// IMP=0x000000000001d4f5
+ (void)initialize;	// IMP=0x000000000001d479
- (void).cxx_destruct;	// IMP=0x000000000001d27c
@property(retain) NSSet *recordedSubsystems; // @synthesize recordedSubsystems=_recordedSubsystems;
@property(retain) NSObject<OS_dispatch_queue> *recordedSubsystemsQueue; // @synthesize recordedSubsystemsQueue=_recordedSubsystemsQueue;
@property _Bool backendAllowsConcurrentAccess; // @synthesize backendAllowsConcurrentAccess=_backendAllowsConcurrentAccess;
@property(retain) NSObject<OS_dispatch_queue> *backendAccessSerializationQueue; // @synthesize backendAccessSerializationQueue=_backendAccessSerializationQueue;
@property(retain) NSDictionary *options; // @synthesize options=_options;
@property(retain) NSString *facilityPrefix; // @synthesize facilityPrefix=_facilityPrefix;
@property(retain) NSArray *debuggedSubsystems; // @synthesize debuggedSubsystems=_debuggedSubsystems;
@property(retain) NSArray *tracedSubsystems; // @synthesize tracedSubsystems=_tracedSubsystems;
@property(retain) NSObject<PFLoggerBackend> *backend; // @synthesize backend=_backend;
@property _Bool shouldLogToCrashReporter; // @synthesize shouldLogToCrashReporter=_shouldLogToCrashReporter;
@property int logLevel; // @synthesize logLevel=_logLevel;
- (void)_recordSubsystem:(id)arg1;	// IMP=0x000000000001d062
- (id)description;	// IMP=0x000000000001cfa4
- (void)flush;	// IMP=0x000000000001cee1
- (_Bool)enabledForSubsystem:(id)arg1 subsystems:(id)arg2;	// IMP=0x000000000001cde4
- (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;	// IMP=0x000000000001c9df
- (void)logFromCodeLocation:(CDStruct_98c8119d)arg1 subsystem:(id)arg2 level:(int)arg3 format:(id)arg4;	// IMP=0x000000000001c928
- (void)processOptions;	// IMP=0x000000000001c867
- (id)initWithBackend:(id)arg1 logLevel:(int)arg2 options:(id)arg3;	// IMP=0x000000000001c72e

@end

