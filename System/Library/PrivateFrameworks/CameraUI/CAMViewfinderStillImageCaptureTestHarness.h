//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CameraUI/CAMViewfinderActionIntervalometerDelegate-Protocol.h>
#import <CameraUI/CAMViewfinderViewControllerStillImageCaptureRequestTestingDelegate-Protocol.h>

@class CAMViewfinderActionIntervalometer, CAMViewfinderViewController, NSCountedSet, NSString;

@interface CAMViewfinderStillImageCaptureTestHarness <CAMViewfinderViewControllerStillImageCaptureRequestTestingDelegate, CAMViewfinderActionIntervalometerDelegate>
{
    _Bool __performWarmupCapture;	// 8 = 0x8
    _Bool __waitingOnWarmupCapture;	// 9 = 0x9
    _Bool __capturesOnTouchDown;	// 10 = 0xa
    CAMViewfinderActionIntervalometer *_testIntervalometer;	// 16 = 0x10
    NSString *__finalRequestPersistenceUUID;	// 24 = 0x18
    NSString *__lastReceivedPersistenceUUID;	// 32 = 0x20
    long long __mode;	// 40 = 0x28
    NSCountedSet *__requestIDs;	// 48 = 0x30
    unsigned long long __expectedNumberOfResponsesPerRequest;	// 56 = 0x38
    double __delayBetweenCaptures;	// 64 = 0x40
    double __lastCaptureCompletionTime;	// 72 = 0x48
    CAMViewfinderViewController *__viewfinderViewController;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x00000000000a3ae9
@property(nonatomic) _Bool _capturesOnTouchDown; // @synthesize _capturesOnTouchDown=__capturesOnTouchDown;
@property(retain, nonatomic) CAMViewfinderViewController *_viewfinderViewController; // @synthesize _viewfinderViewController=__viewfinderViewController;
@property(nonatomic) double _lastCaptureCompletionTime; // @synthesize _lastCaptureCompletionTime=__lastCaptureCompletionTime;
@property(nonatomic) double _delayBetweenCaptures; // @synthesize _delayBetweenCaptures=__delayBetweenCaptures;
@property(nonatomic) unsigned long long _expectedNumberOfResponsesPerRequest; // @synthesize _expectedNumberOfResponsesPerRequest=__expectedNumberOfResponsesPerRequest;
@property(retain, nonatomic) NSCountedSet *_requestIDs; // @synthesize _requestIDs=__requestIDs;
@property(nonatomic) long long _mode; // @synthesize _mode=__mode;
@property(retain, nonatomic) NSString *_lastReceivedPersistenceUUID; // @synthesize _lastReceivedPersistenceUUID=__lastReceivedPersistenceUUID;
@property(retain, nonatomic) NSString *_finalRequestPersistenceUUID; // @synthesize _finalRequestPersistenceUUID=__finalRequestPersistenceUUID;
@property(nonatomic) _Bool _waitingOnWarmupCapture; // @synthesize _waitingOnWarmupCapture=__waitingOnWarmupCapture;
@property(nonatomic) _Bool _performWarmupCapture; // @synthesize _performWarmupCapture=__performWarmupCapture;
@property(retain, nonatomic) CAMViewfinderActionIntervalometer *testIntervalometer; // @synthesize testIntervalometer=_testIntervalometer;
- (_Bool)shouldAttemptAction;	// IMP=0x00000000000a386d
- (_Bool)_allowOverlappingCaptures;	// IMP=0x00000000000a384f
- (void)intervalometerDidReachMaximumCount:(id)arg1;	// IMP=0x00000000000a3803
- (void)viewfinderViewController:(id)arg1 didGenerateCaptureRequest:(id)arg2;	// IMP=0x00000000000a3737
- (void)viewfinderViewController:(id)arg1 didReceiveStillImageRequestDidCompleteCapture:(id)arg2 error:(id)arg3;	// IMP=0x00000000000a3565
- (void)viewfinderViewController:(id)arg1 didReceiveStillImageRequestDidCompleteStillImageCapture:(id)arg2 withResponse:(id)arg3 error:(id)arg4;	// IMP=0x00000000000a340a
- (void)viewfinderViewController:(id)arg1 didReceiveStillImageRequestDidStopCapturingStillImage:(id)arg2;	// IMP=0x00000000000a33e9
- (void)failedTestWithReason:(id)arg1;	// IMP=0x00000000000a3316
- (void)stopTesting;	// IMP=0x00000000000a326b
- (void)startTesting;	// IMP=0x00000000000a31e3
- (id)initWithTestName:(id)arg1 expectedNumberOfCapturesPerRequest:(unsigned long long)arg2 viewfinderViewController:(id)arg3 performingWarmupCapture:(_Bool)arg4 forCaptureMode:(long long)arg5 delayBetweenCaptures:(double)arg6 capturesOnTouchDown:(_Bool)arg7;	// IMP=0x00000000000a30f5

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

