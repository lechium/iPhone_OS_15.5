//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CameraUI/CAMNebulaDaemonTimelapseProtocol-Protocol.h>
#import <CameraUI/CAMPersistenceResultDelegate-Protocol.h>
#import <CameraUI/CAMVideoCaptureRequestDelegate-Protocol.h>

@class BKSApplicationStateMonitor, CAMNebulaKeepAliveController, CAMPersistenceController, CAMTimelapseState, NSMutableArray, NSMutableDictionary, NSString;
@protocol CAMTimelapseMovieWriterProtocol, OS_dispatch_queue;

@interface CAMTimelapseBackendController : NSObject <CAMVideoCaptureRequestDelegate, CAMNebulaDaemonTimelapseProtocol, CAMPersistenceResultDelegate>
{
    _Bool __writingMovie;	// 8 = 0x8
    _Bool __capturing;	// 9 = 0x9
    _Bool __oldMovieWriterEnabled;	// 10 = 0xa
    int __notifyRegisterTokenSuspendIO;	// 12 = 0xc
    int __notifyRegisterTokenResumeIO;	// 16 = 0x10
    NSMutableArray *__sessionContexts;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *__workQueue;	// 32 = 0x20
    id <CAMTimelapseMovieWriterProtocol> __movieWriter;	// 40 = 0x28
    CAMTimelapseState *__currentState;	// 48 = 0x30
    CAMNebulaKeepAliveController *__keepAliveController;	// 56 = 0x38
    CAMPersistenceController *__persistenceController;	// 64 = 0x40
    NSMutableDictionary *__transactionForPersistenceUUID;	// 72 = 0x48
    BKSApplicationStateMonitor *__applicationStateMonitor;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x00000000001e07ed
@property(readonly, nonatomic) BKSApplicationStateMonitor *_applicationStateMonitor; // @synthesize _applicationStateMonitor=__applicationStateMonitor;
@property(readonly, nonatomic) int _notifyRegisterTokenResumeIO; // @synthesize _notifyRegisterTokenResumeIO=__notifyRegisterTokenResumeIO;
@property(readonly, nonatomic) int _notifyRegisterTokenSuspendIO; // @synthesize _notifyRegisterTokenSuspendIO=__notifyRegisterTokenSuspendIO;
@property(readonly, nonatomic) NSMutableDictionary *_transactionForPersistenceUUID; // @synthesize _transactionForPersistenceUUID=__transactionForPersistenceUUID;
@property(readonly, nonatomic) _Bool _oldMovieWriterEnabled; // @synthesize _oldMovieWriterEnabled=__oldMovieWriterEnabled;
@property(readonly, nonatomic) CAMPersistenceController *_persistenceController; // @synthesize _persistenceController=__persistenceController;
@property(readonly, nonatomic) CAMNebulaKeepAliveController *_keepAliveController; // @synthesize _keepAliveController=__keepAliveController;
@property(nonatomic, getter=_isCapturing, setter=_setCapturing:) _Bool _capturing; // @synthesize _capturing=__capturing;
@property(retain, nonatomic, setter=_setCurrentState:) CAMTimelapseState *_currentState; // @synthesize _currentState=__currentState;
@property(readonly, nonatomic) id <CAMTimelapseMovieWriterProtocol> _movieWriter; // @synthesize _movieWriter=__movieWriter;
@property(readonly, nonatomic) _Bool _writingMovie; // @synthesize _writingMovie=__writingMovie;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *_workQueue; // @synthesize _workQueue=__workQueue;
@property(readonly, nonatomic) NSMutableArray *_sessionContexts; // @synthesize _sessionContexts=__sessionContexts;
- (void)persistenceController:(id)arg1 didGenerateVideoLocalPersistenceResult:(id)arg2 forCaptureResult:(id)arg3 fromRequest:(id)arg4;	// IMP=0x00000000001e076a
- (void)_workQueue_destroyApplicationStateMonitor;	// IMP=0x00000000001e0704
- (void)_workQueue_setupCameraProcessMonitoringIfNecessary;	// IMP=0x00000000001e0463
- (_Bool)_isCameraRunning;	// IMP=0x00000000001e0444
- (int)_pidForApplication:(id)arg1;	// IMP=0x00000000001e0287
- (void)handleClientDisconnection;	// IMP=0x00000000001e0264
- (void)handleClientConnection:(id)arg1;	// IMP=0x00000000001e01b4
- (struct CGAffineTransform)_frameTransformForState:(id)arg1;	// IMP=0x00000000001dffa5
- (void)videoRequestDidCompleteRemotePersistence:(id)arg1 withResponse:(id)arg2 error:(id)arg3;	// IMP=0x00000000001dfede
- (void)_notifyAssetsdOfIncomingMovieAtPath:(id)arg1 duration:(CDStruct_1b6d18a9)arg2 metadata:(id)arg3 state:(id)arg4;	// IMP=0x00000000001dfbee
- (void)_saveTimelapseDirectoryForDebuggingTimelapseUUID:(id)arg1;	// IMP=0x00000000001df943
- (_Bool)_shouldSaveLastTimelapseDataForDebugging;	// IMP=0x00000000001df90c
- (void)_movieWrittenToFilePath:(id)arg1 duration:(CDStruct_1b6d18a9)arg2 metadata:(id)arg3 state:(id)arg4;	// IMP=0x00000000001df570
- (void)_createPlaceholderAssetForState:(id)arg1;	// IMP=0x00000000001df47c
- (void)_reserveDummyFileForTimelapseUUID:(id)arg1 firstImageFilePath:(id)arg2 useHEVC:(_Bool)arg3;	// IMP=0x00000000001df3b4
- (void)_writeMovieForSessionContext:(id)arg1;	// IMP=0x00000000001de6ec
- (_Bool)_deleteItemAtPath:(id)arg1;	// IMP=0x00000000001de5f2
- (_Bool)_scheduleDelayedMovieWriteIfNeededForTimelapseUUID:(id)arg1;	// IMP=0x00000000001de3b2
- (void)_permanentlyFailTimelapseUUID:(id)arg1 withState:(id)arg2;	// IMP=0x00000000001de0f4
- (void)_performPendingWork;	// IMP=0x00000000001dd738
- (id)_getOrCreateSessionContextForTimelapseUUID:(id)arg1;	// IMP=0x00000000001dd508
- (void)_updateSessionContext:(id)arg1 withState:(id)arg2;	// IMP=0x00000000001dd086
- (void)_updatePendingWorkFromDiskForceEndLastSession:(_Bool)arg1;	// IMP=0x00000000001dc8a3
- (void)updatePendingWorkFromDiskForceEndLastSession:(_Bool)arg1;	// IMP=0x00000000001dc834
- (void)stopTimelapseWithUUID:(id)arg1;	// IMP=0x00000000001dc811
- (void)finishCaptureForTimelapseWithUUID:(id)arg1;	// IMP=0x00000000001dc7ee
- (void)updateTimelapseWithUUID:(id)arg1;	// IMP=0x00000000001dc66f
- (void)resumeTimelapseWithUUID:(id)arg1;	// IMP=0x00000000001dc5da
- (void)startTimelapseWithUUID:(id)arg1;	// IMP=0x00000000001dc534
- (void)_dispatchToMainQueueWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001dc44e
- (void)_dispatchToWorkQueueAfterDelay:(double)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001dc344
- (void)_dispatchToWorkQueueWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000001dc23d
- (void)dealloc;	// IMP=0x00000000001dc075
- (id)init;	// IMP=0x00000000001dc040
- (id)initWithPersistenceController:(id)arg1 keepAliveController:(id)arg2;	// IMP=0x00000000001db9a8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

