//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <CameraUI/CAMExposureDelegate-Protocol.h>
#import <CameraUI/CAMFacesDelegate-Protocol.h>
#import <CameraUI/CAMFocusDelegate-Protocol.h>
#import <CameraUI/CAMFocusIndicatorViewDelegate-Protocol.h>
#import <CameraUI/UIGestureRecognizerDelegate-Protocol.h>

@class CAMBurstIndicatorView, CAMCaptureGraphConfiguration, CAMExposureResult, CAMFocusIndicatorView, CAMFocusResult, CAMMachineReadableCodeIndicatorView, CAMMachineReadableCodeResult, CAMMotionController, CAMPreviewView, CAMStageLightOverlayView, CAMTextRegionResult, CAMTimelapseController, CEKSubjectIndicatorView, CUCaptureController, NSArray, NSDate, NSMapTable, NSMutableDictionary, NSString, UIImage, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer;
@protocol CAMPreviewViewControllerDelegate;

@interface CAMPreviewViewController : UIViewController <UIGestureRecognizerDelegate, CAMFocusDelegate, CAMExposureDelegate, CAMFocusIndicatorViewDelegate, CAMFacesDelegate>
{
    _Bool __changingGraphConfiguration;	// 8 = 0x8
    _Bool __userLockedFocusAndExposure;	// 9 = 0x9
    _Bool __cinematicSubjectIsTrackingLocked;	// 10 = 0xa
    _Bool __cinematicIsFixedFocusLocked;	// 11 = 0xb
    _Bool __shouldSuppressExistingFaceIndicators;	// 12 = 0xc
    _Bool _showingStandardControls;	// 13 = 0xd
    float _baselineExposureBias;	// 16 = 0x10
    float _cachedExposureTargetBias;	// 20 = 0x14
    float __exposureBiasPanStartValue;	// 24 = 0x18
    id <CAMPreviewViewControllerDelegate> _delegate;	// 32 = 0x20
    long long _layoutStyle;	// 40 = 0x28
    long long _shallowDepthOfFieldStatus;	// 48 = 0x30
    long long _stagePreviewStatus;	// 56 = 0x38
    CAMMachineReadableCodeResult *_cachedSignificantMRCResult;	// 64 = 0x40
    NSArray *_cachedMRCResults;	// 72 = 0x48
    NSString *_significantMRCTitle;	// 80 = 0x50
    UIImage *_significantMRCIcon;	// 88 = 0x58
    CAMTextRegionResult *_cachedSignificantTextRegionResult;	// 96 = 0x60
    NSArray *_cachedTextRegionResults;	// 104 = 0x68
    long long _lightingType;	// 112 = 0x70
    CUCaptureController *__captureController;	// 120 = 0x78
    CAMTimelapseController *__timelapseController;	// 128 = 0x80
    CAMCaptureGraphConfiguration *__graphConfiguration;	// 136 = 0x88
    CAMBurstIndicatorView *__burstIndicator;	// 144 = 0x90
    CAMFocusIndicatorView *__continuousIndicator;	// 152 = 0x98
    CAMFocusIndicatorView *__pointIndicator;	// 160 = 0xa0
    NSMutableDictionary *__indicatorViewsByType;	// 168 = 0xa8
    NSMapTable *__metadataObjectsForView;	// 176 = 0xb0
    NSDate *__lastFocusIndictorStartTime;	// 184 = 0xb8
    CAMFocusResult *__lastFocusResult;	// 192 = 0xc0
    CAMExposureResult *__lastExposureResult;	// 200 = 0xc8
    NSDate *__lastTapToFocusTime;	// 208 = 0xd0
    unsigned long long __currentFacesCount;	// 216 = 0xd8
    UITapGestureRecognizer *__tapToFocusAndExposeGestureRecognizer;	// 224 = 0xe0
    UILongPressGestureRecognizer *__longPressToLockGestureRecognizer;	// 232 = 0xe8
    UIPanGestureRecognizer *__exposureBiasPanGestureRecognizer;	// 240 = 0xf0
    UITapGestureRecognizer *__aspectRatioToggleDoubleTapGestureRecognizer;	// 248 = 0xf8
    double __exposureBiasVirtualSliderExponent;	// 256 = 0x100
    double __exposureBiasVirtualSliderPointsForFirstStop;	// 264 = 0x108
    NSDate *__lastExposureBiasModificationTime;	// 272 = 0x110
    CEKSubjectIndicatorView *__portraitModeCenteredIndicatorView;	// 280 = 0x118
    CAMStageLightOverlayView *__stageLightOverlayView;	// 288 = 0x120
    CAMMotionController *__motionController;	// 296 = 0x128
}

- (void).cxx_destruct;	// IMP=0x00000000001b6d54
@property(nonatomic, getter=isShowingStandardControls) _Bool showingStandardControls; // @synthesize showingStandardControls=_showingStandardControls;
@property(readonly, nonatomic) CAMMotionController *_motionController; // @synthesize _motionController=__motionController;
@property(readonly, nonatomic) CAMStageLightOverlayView *_stageLightOverlayView; // @synthesize _stageLightOverlayView=__stageLightOverlayView;
@property(readonly, nonatomic) CEKSubjectIndicatorView *_portraitModeCenteredIndicatorView; // @synthesize _portraitModeCenteredIndicatorView=__portraitModeCenteredIndicatorView;
@property(retain, nonatomic, setter=_setLastExposureBiasModifiedTime:) NSDate *_lastExposureBiasModificationTime; // @synthesize _lastExposureBiasModificationTime=__lastExposureBiasModificationTime;
@property(nonatomic, setter=_setExposureBiasVirtualSliderPointsForFirstStop:) double _exposureBiasVirtualSliderPointsForFirstStop; // @synthesize _exposureBiasVirtualSliderPointsForFirstStop=__exposureBiasVirtualSliderPointsForFirstStop;
@property(nonatomic, setter=_setExposureBiasVirtualSliderExponent:) double _exposureBiasVirtualSliderExponent; // @synthesize _exposureBiasVirtualSliderExponent=__exposureBiasVirtualSliderExponent;
@property(readonly, nonatomic) float _exposureBiasPanStartValue; // @synthesize _exposureBiasPanStartValue=__exposureBiasPanStartValue;
@property(readonly, nonatomic) UITapGestureRecognizer *_aspectRatioToggleDoubleTapGestureRecognizer; // @synthesize _aspectRatioToggleDoubleTapGestureRecognizer=__aspectRatioToggleDoubleTapGestureRecognizer;
@property(readonly, nonatomic) UIPanGestureRecognizer *_exposureBiasPanGestureRecognizer; // @synthesize _exposureBiasPanGestureRecognizer=__exposureBiasPanGestureRecognizer;
@property(readonly, nonatomic) UILongPressGestureRecognizer *_longPressToLockGestureRecognizer; // @synthesize _longPressToLockGestureRecognizer=__longPressToLockGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *_tapToFocusAndExposeGestureRecognizer; // @synthesize _tapToFocusAndExposeGestureRecognizer=__tapToFocusAndExposeGestureRecognizer;
@property(nonatomic, setter=_setShouldSuppressExistingFaceIndicators:) _Bool _shouldSuppressExistingFaceIndicators; // @synthesize _shouldSuppressExistingFaceIndicators=__shouldSuppressExistingFaceIndicators;
@property(nonatomic, setter=_setCurrentFacesCount:) unsigned long long _currentFacesCount; // @synthesize _currentFacesCount=__currentFacesCount;
@property(retain, nonatomic, setter=_setLastTapToFocusTime:) NSDate *_lastTapToFocusTime; // @synthesize _lastTapToFocusTime=__lastTapToFocusTime;
@property(retain, nonatomic, setter=_setLastExposureResult:) CAMExposureResult *_lastExposureResult; // @synthesize _lastExposureResult=__lastExposureResult;
@property(retain, nonatomic, setter=_setLastFocusResult:) CAMFocusResult *_lastFocusResult; // @synthesize _lastFocusResult=__lastFocusResult;
@property(nonatomic, setter=_setCinematicIsFixedFocusLocked:) _Bool _cinematicIsFixedFocusLocked; // @synthesize _cinematicIsFixedFocusLocked=__cinematicIsFixedFocusLocked;
@property(nonatomic, setter=_setCinematicSubjectIsTrackingLocked:) _Bool _cinematicSubjectIsTrackingLocked; // @synthesize _cinematicSubjectIsTrackingLocked=__cinematicSubjectIsTrackingLocked;
@property(nonatomic, setter=_setUserLockedFocusAndExposure:) _Bool _userLockedFocusAndExposure; // @synthesize _userLockedFocusAndExposure=__userLockedFocusAndExposure;
@property(retain, nonatomic, setter=_setLastFocusIndictorStartTime:) NSDate *_lastFocusIndictorStartTime; // @synthesize _lastFocusIndictorStartTime=__lastFocusIndictorStartTime;
@property(readonly, nonatomic) NSMapTable *_metadataObjectsForView; // @synthesize _metadataObjectsForView=__metadataObjectsForView;
@property(readonly, nonatomic) NSMutableDictionary *_indicatorViewsByType; // @synthesize _indicatorViewsByType=__indicatorViewsByType;
@property(readonly, nonatomic) CAMFocusIndicatorView *_pointIndicator; // @synthesize _pointIndicator=__pointIndicator;
@property(readonly, nonatomic) CAMFocusIndicatorView *_continuousIndicator; // @synthesize _continuousIndicator=__continuousIndicator;
@property(readonly, nonatomic) CAMBurstIndicatorView *_burstIndicator; // @synthesize _burstIndicator=__burstIndicator;
@property(nonatomic, getter=_isChangingGraphConfiguration, setter=_setChangingGraphConfiguration:) _Bool _changingGraphConfiguration; // @synthesize _changingGraphConfiguration=__changingGraphConfiguration;
@property(retain, nonatomic, setter=_setGraphConfiguration:) CAMCaptureGraphConfiguration *_graphConfiguration; // @synthesize _graphConfiguration=__graphConfiguration;
@property(readonly, nonatomic) __weak CAMTimelapseController *_timelapseController; // @synthesize _timelapseController=__timelapseController;
@property(readonly, nonatomic) CUCaptureController *_captureController; // @synthesize _captureController=__captureController;
@property(nonatomic) long long lightingType; // @synthesize lightingType=_lightingType;
@property(retain, nonatomic) NSArray *cachedTextRegionResults; // @synthesize cachedTextRegionResults=_cachedTextRegionResults;
@property(retain, nonatomic) CAMTextRegionResult *cachedSignificantTextRegionResult; // @synthesize cachedSignificantTextRegionResult=_cachedSignificantTextRegionResult;
@property(readonly, nonatomic) UIImage *significantMRCIcon; // @synthesize significantMRCIcon=_significantMRCIcon;
@property(readonly, copy, nonatomic) NSString *significantMRCTitle; // @synthesize significantMRCTitle=_significantMRCTitle;
@property(retain, nonatomic) NSArray *cachedMRCResults; // @synthesize cachedMRCResults=_cachedMRCResults;
@property(retain, nonatomic) CAMMachineReadableCodeResult *cachedSignificantMRCResult; // @synthesize cachedSignificantMRCResult=_cachedSignificantMRCResult;
@property(nonatomic) long long stagePreviewStatus; // @synthesize stagePreviewStatus=_stagePreviewStatus;
@property(nonatomic) long long shallowDepthOfFieldStatus; // @synthesize shallowDepthOfFieldStatus=_shallowDepthOfFieldStatus;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(nonatomic, setter=setCachedExposureTargetBias:) float cachedExposureTargetBias; // @synthesize cachedExposureTargetBias=_cachedExposureTargetBias;
@property(nonatomic) float baselineExposureBias; // @synthesize baselineExposureBias=_baselineExposureBias;
@property(nonatomic) __weak id <CAMPreviewViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_shouldShowIndicatorsAsInactive;	// IMP=0x000000000002ea7b
- (_Bool)_isPortraitEffectActive;	// IMP=0x000000000002eafd
- (void)_updatePortraitModeViewsAnimated:(_Bool)arg1;	// IMP=0x000000000002e434
- (_Bool)_shouldSuppressNewPortraitModeTrackedSubjectIndicators;	// IMP=0x00000000001b6963
- (_Bool)_shouldShowPortraitModeTrackedSubjectIndicatorsForLightingType:(long long)arg1;	// IMP=0x00000000001b6952
- (_Bool)_shouldShowStageLightOverlayActive;	// IMP=0x00000000001b6940
- (_Bool)_shouldShowStageLightOverlayViewForMode:(long long)arg1 device:(long long)arg2 lightingType:(long long)arg3 shallowDepthOfFieldStatus:(long long)arg4 stagePreviewStatus:(long long)arg5;	// IMP=0x00000000001b68a1
- (_Bool)_shouldShowPortraitModeIndicatorViews;	// IMP=0x000000000002eaba
- (void)_createPortraitModeCenteredIndicatorViewIfNecessary;	// IMP=0x00000000001b67d0
- (void)setShallowDepthOfFieldStatus:(long long)arg1 stagePreviewStatus:(long long)arg2;	// IMP=0x00000000001b6795
- (void)focusOnNormalizedPoint:(struct CGPoint)arg1;	// IMP=0x00000000001b665a
- (void)_applicationDidEnterBackground;	// IMP=0x0000000000067fae
- (void)notifyCaptureSessionDidStopRunning;	// IMP=0x0000000000068ea3
- (void)notifyDidStopCapture;	// IMP=0x000000000005837c
- (void)notifyWillStartCapturing;	// IMP=0x0000000000057ca5
- (void)notifyShutterButtonPressed;	// IMP=0x00000000000514b8
- (void)_updateExposureBiasSideAnimated:(_Bool)arg1;	// IMP=0x00000000001b647a
- (void)_captureOrientationChanged:(id)arg1;	// IMP=0x00000000001b6420
- (void)_handleAspectRatioToggleDoubleTap:(id)arg1;	// IMP=0x00000000001b630e
- (_Bool)_shouldDisableAspectRatioToggle;	// IMP=0x00000000001b628b
- (void)_updatePreviewViewAspectMode;	// IMP=0x000000000002ec69
- (id)focusIndicatorViewBoundingViewForClippingFocusIndicatorView:(id)arg1;	// IMP=0x00000000001b6277
- (double)captureControllerDelayBeforeResettingFocusAndExposureAfterCapture:(id)arg1;	// IMP=0x0000000000058320
- (_Bool)_isFullyAutomaticFocus:(id)arg1 andExposure:(id)arg2;	// IMP=0x0000000000050c3a
- (_Bool)_isFullyAutomaticFocusAndExposure;	// IMP=0x0000000000050c12
- (void)_validateUserLockedFocusAndExposure;	// IMP=0x00000000000443e4
- (void)_validateLastExposureBiasModificationTime;	// IMP=0x000000000004435e
- (void)_validateExposureTargetBiasFromExposureResult:(id)arg1;	// IMP=0x00000000000442cb
- (void)_validateInternalProperties;	// IMP=0x000000000004424f
- (void)_updateCaptureControllerExposureTargetBias;	// IMP=0x00000000001b6218
@property(readonly, nonatomic) float totalExposureBias;
- (_Bool)_isExposureTargetBiasAtBaseline:(float)arg1;	// IMP=0x00000000001b6136
- (_Bool)_shouldDisableFocusUI;	// IMP=0x0000000000046195
@property(readonly, nonatomic, getter=isExposureLockedByUser) _Bool exposureLockedByUser;
@property(readonly, nonatomic, getter=isFocusLockedByUser) _Bool focusLockedByUser;
- (void)_setUserLockedFocusAndExposure:(_Bool)arg1 shouldAnimate:(_Bool)arg2;	// IMP=0x00000000000680e1
- (void)_setCinematicIsFixedFocusLocked:(_Bool)arg1 shouldAnimate:(_Bool)arg2;	// IMP=0x00000000001b608c
@property(readonly, nonatomic, getter=isFocusLockedOnCinematicSubject) _Bool focusLockedOnCinematicSubject;
- (void)_setCinematicSubjectIsTrackingLocked:(_Bool)arg1 shouldAnimate:(_Bool)arg2;	// IMP=0x00000000001b5fd7
- (void)_hideAllCinematicIndicatorsAnimated:(_Bool)arg1;	// IMP=0x00000000001b5f77
- (float)baselineExposureValueForCaptureController:(id)arg1;	// IMP=0x00000000001b5f46
- (_Bool)captureControllerUserHasAdjustedExposureTargetBiasFromBaseline:(id)arg1;	// IMP=0x00000000001b5f24
- (void)captureController:(id)arg1 didOutputExposureResult:(id)arg2;	// IMP=0x0000000000044054
- (void)captureController:(id)arg1 didOutputFocusResult:(id)arg2;	// IMP=0x0000000000044476
- (_Bool)_shouldResetFocusAndExposureForSubjectAreaDidChange;	// IMP=0x00000000001b5d76
- (_Bool)captureController:(id)arg1 shouldResetFocusAndExposureForReason:(long long)arg2;	// IMP=0x0000000000061224
- (void)captureControllerWillResetFocusAndExposure:(id)arg1;	// IMP=0x0000000000045e5e
- (double)_exposureBiasForVirtualSliderPosition:(double)arg1;	// IMP=0x00000000001b5cb2
- (double)_virtualSliderPositionForExposureBias:(double)arg1;	// IMP=0x00000000001b5c06
- (void)_initializeExposureBiasSliderParameters;	// IMP=0x000000000000af14
- (double)_effectiveExposureBiasMovementForTranslation:(struct CGPoint)arg1;	// IMP=0x00000000001b5b96
- (void)_handleExposureBiasPan:(id)arg1;	// IMP=0x00000000001b5920
- (_Bool)_isPanningExposureBias;	// IMP=0x00000000001b58ef
- (void)_updateExposureBiasPanGestureRecognizerForOrientation;	// IMP=0x000000000000dd3b
- (id)_focusIndicatorViewsWithExposureBiasSliders;	// IMP=0x00000000001b588e
- (void)_updateExposureBiasViews:(id)arg1;	// IMP=0x00000000001b560c
- (void)_updateExposureBiasViews;	// IMP=0x00000000001b55c0
- (void)_initializeExposureBiasParametersForFocusIndicatorView:(id)arg1;	// IMP=0x00000000001b54fb
- (int)_exposureBiasSide;	// IMP=0x00000000001b54cf
- (float)_exposureTargetBiasMaximum;	// IMP=0x00000000001b5430
- (float)_exposureTargetBiasMinimum;	// IMP=0x00000000001b5416
- (_Bool)_showExposureBiasSliderForPointView;	// IMP=0x00000000001b53af
- (_Bool)_canModifyExposureBias;	// IMP=0x0000000000050b33
@property(readonly, nonatomic) UIPanGestureRecognizer *activeExposureBiasPanGestureRecognizer;
- (void)_lockFocusAndExposure;	// IMP=0x00000000001b52b2
- (void)_cancelDelayedFocusAndExposureLock;	// IMP=0x00000000001b5281
- (void)_lockFocusAndExposureAfterDelay:(double)arg1;	// IMP=0x00000000001b5238
- (void)_handleLongPressToLock:(id)arg1;	// IMP=0x00000000001b4fd3
- (void)_handleTapToFocusAndExpose:(id)arg1;	// IMP=0x00000000001b4da3
- (void)_setCinematicFocusForMetadataObject:(id)arg1 atPoint:(struct CGPoint)arg2 useFixedOpticalFocus:(_Bool)arg3 useHardFocus:(_Bool)arg4;	// IMP=0x00000000001b489d
- (void)_focusOnPoint:(struct CGPoint)arg1 shouldShowFocusAndExposureIndicator:(_Bool)arg2;	// IMP=0x00000000001b45ac
- (_Bool)_allowUserToChangeFocusAndExposure;	// IMP=0x00000000001b456a
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x00000000001b44a8
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000001b431a
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000001b3ff4
- (void)_updateTextRegionIndicators;	// IMP=0x00000000001b3822
- (_Bool)_shouldAllowTextRegionIndicators;	// IMP=0x00000000001b37ab
- (void)_updateTextRegionIndicatorsIfNecessary;	// IMP=0x00000000001b372d
- (_Bool)_mrcIndicatorButtonContainsTouch:(id)arg1;	// IMP=0x00000000001b3538
- (void)_handleSignificantMRCIndicatorButtonTapped:(id)arg1;	// IMP=0x00000000001b34c7
- (void)setSignificantMRCTitle:(id)arg1 icon:(id)arg2;	// IMP=0x00000000001b33da
- (void)_updateMRCIndicatorsAnimated:(_Bool)arg1;	// IMP=0x00000000001b2bab
- (void)_updateMRCIndicatorsIfNecessaryAnimated:(_Bool)arg1;	// IMP=0x00000000001b2b26
- (_Bool)_shouldAllowMRCIndicators;	// IMP=0x00000000001b2b0a
@property(readonly, nonatomic) CAMMachineReadableCodeIndicatorView *significantMRCIndicatorView;
- (void)_hidePortraitModeTrackedSubjectIndicatorsAnimated:(_Bool)arg1;	// IMP=0x00000000001b291d
- (_Bool)_shouldUpdateIndicatorSizeFrom:(struct CGSize)arg1 to:(struct CGSize)arg2 minimumAreaChangeThreshold:(double)arg3 minimumAreaFractionChangeThreshold:(double)arg4;	// IMP=0x00000000001b28b6
- (void)_resetFaceTracking;	// IMP=0x000000000000afa1
- (void)_updatePortraitModeViewsForResults:(id)arg1;	// IMP=0x00000000001b257b
- (void)_updateCinematicModeViewsForTrackingChange;	// IMP=0x00000000001b1d9e
- (id)_cinematicModeIndicatorViewAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000001b191e
- (id)_groupIDForMetadataObject:(id)arg1;	// IMP=0x00000000001b177f
- (void)_subjectGroupResultsFromMetadataObjects:(id)arg1 nonFixedFocusResults:(id *)arg2 fixedFocusResults:(id *)arg3;	// IMP=0x00000000001b1338
- (void)_updateCinematicModeViewsForResults:(id)arg1;	// IMP=0x00000000001b101e
- (_Bool)_shouldShowCinematicModeIndicatorViews;	// IMP=0x00000000001b0fdb
- (_Bool)_shouldAllowFaceIndicators;	// IMP=0x00000000001b0fc1
- (void)_updateFaceIndicatorsForResults:(id)arg1;	// IMP=0x00000000001b0d12
- (void)captureController:(id)arg1 didOutputFaceResults:(id)arg2 headResults:(id)arg3 bodyResults:(id)arg4 salientObjectResults:(id)arg5;	// IMP=0x00000000001b0b06
- (_Bool)_shouldSuppressNewFaces;	// IMP=0x00000000001b0a97
- (void)_hideIndicatorsOfViewType:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001b0a00
- (void)_fadeOutIndicatorsOfViewType:(id)arg1;	// IMP=0x00000000001b09e9
- (void)_cancelDelayedFadeOutOfViewType:(id)arg1;	// IMP=0x00000000001b09a1
- (void)_fadeOutIndicatorsOfViewType:(id)arg1 afterDelay:(double)arg2;	// IMP=0x00000000001b0933
- (_Bool)_isShowingIndicatorsOfType:(id)arg1;	// IMP=0x00000000001b089c
- (void)_updateIndicatorsForMetadataObjectResults:(id)arg1 viewType:(id)arg2 viewClass:(Class)arg3 geometryCallback:(CDUnknownBlockType)arg4 minimumAreaChangeThreshold:(double)arg5 minimumAreaFractionChangeThreshold:(double)arg6;	// IMP=0x00000000001afe28
- (void)_fadeOutAndRemoveIndicatorViewsOfType:(id)arg1 withDuration:(double)arg2;	// IMP=0x00000000001afcf5
- (void)_fadeOutAndRemoveIndicatorView:(id)arg1 forType:(id)arg2 identifier:(id)arg3 withDuration:(double)arg4;	// IMP=0x00000000001afb6e
- (void)_removeIndicatorViewForType:(id)arg1 identifier:(id)arg2;	// IMP=0x00000000001afa2c
- (void)_addIndicatorView:(id)arg1 forType:(id)arg2 identifier:(id)arg3 underlyingMetadataObject:(id)arg4;	// IMP=0x00000000001af759
- (void)_updatePreviewIndicatorClippingStyleForGraphConfiguration:(id)arg1;	// IMP=0x00000000001af681
- (void)_animateView:(id)arg1 type:(id)arg2 withCenter:(struct CGPoint)arg3 bounds:(struct CGRect)arg4 transform:(struct CGAffineTransform)arg5;	// IMP=0x00000000001af322
- (double)_boundsAnimationDurationForViewType:(id)arg1;	// IMP=0x00000000001af2ef
- (double)_centerAnimationDurationForViewType:(id)arg1;	// IMP=0x00000000001af2bc
- (void)_fadeOutView:(id)arg1 withDuration:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001af195
- (void)_fadeInView:(id)arg1 withDuration:(double)arg2;	// IMP=0x00000000001af0d3
- (void)_scaleDownLockedPointOfInterest;	// IMP=0x00000000001aefa2
- (void)_finishFocusingLockedPointOfInterestIndicator;	// IMP=0x00000000001aef41
- (void)_showLockedAtPointOfInterest:(struct CGPoint)arg1;	// IMP=0x00000000001aebf2
- (long long)_largeStyleForPointIndicator;	// IMP=0x00000000001aebd0
- (long long)_styleForPointIndicator;	// IMP=0x00000000001aebad
- (void)_showIndicatorAtPointOfInterest:(struct CGPoint)arg1;	// IMP=0x00000000001ae821
@property(readonly, nonatomic) struct CGPoint pointOfInterestInNormalizedCaptureDeviceSpace;
- (void)_deactivateFocusIndicator:(id)arg1;	// IMP=0x00000000001ae5f8
- (void)_deactivateFocusIndicator:(id)arg1 afterDelay:(double)arg2;	// IMP=0x00000000001ae55e
- (void)_activateFocusIndicator:(id)arg1;	// IMP=0x00000000001ae46c
@property(readonly, nonatomic, getter=_isShowingPointIndicator) _Bool _showingPointIndicator;
@property(readonly, nonatomic, getter=_isShowingContinuousIndicator) _Bool _showingContinuousIndicator;
- (_Bool)_isShowingFocusIndicator:(id)arg1;	// IMP=0x00000000001ae3a5
- (void)_hideAllFocusIndicatorsAnimated:(_Bool)arg1;	// IMP=0x0000000000067fe3
- (void)_cancelDelayedHideOrDeactivateForFocusIndicator:(id)arg1;	// IMP=0x0000000000046ae6
- (void)_hideFocusIndicator:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000004e80d
- (void)_hideFocusIndicator:(id)arg1;	// IMP=0x000000000004f26e
- (void)_hideFocusIndicator:(id)arg1 afterDelay:(double)arg2;	// IMP=0x00000000000471b0
- (void)_hideAllFocusIndicatorsExceptForIndicator:(id)arg1;	// IMP=0x000000000004620d
- (void)_scalePortraitModeFocusIndicators;	// IMP=0x00000000001ae15f
- (void)_setFocusIndicatorsPulsing:(_Bool)arg1;	// IMP=0x000000000004e969
- (void)_updateUIForCenteredContrastBasedFocusDidEnd;	// IMP=0x000000000004f170
- (void)_showUIForResetFocusAndExposure;	// IMP=0x0000000000045f97
- (_Bool)_shouldShowContinuousIndicator;	// IMP=0x00000000000462b7
- (long long)_interfaceOrientation;	// IMP=0x000000000000dd9b
- (void)_updateForOrientationAnimated:(_Bool)arg1;	// IMP=0x00000000001ae010
- (void)_createAspectRatioToggleDoubleTapGestureRecognizerIfNecessary;	// IMP=0x00000000001adf23
- (void)_createExposureBiasPanGestureRecognizerIfNecessary;	// IMP=0x000000000000dc31
- (void)_createLongPressToLockGestureRecognizersIfNecessary;	// IMP=0x000000000000db41
- (void)_createTapToFocusAndExposeGestureRecognizerIfNecessary;	// IMP=0x000000000000da61
- (void)_createCommonGestureRecognizersIfNecessary;	// IMP=0x000000000000da0a
- (void)_resetCachedTimes;	// IMP=0x00000000001adee1
- (void)setLightingType:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002e20a
- (void)_didChangeGraphConfigurationAnimated:(_Bool)arg1;	// IMP=0x00000000001ade9f
- (void)_willChangeGraphConfiguration;	// IMP=0x00000000001ade50
- (void)didChangeToGraphConfiguration:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001add5d
- (void)willChangeToGraphConfiguration:(id)arg1;	// IMP=0x00000000001add2f
@property(readonly, nonatomic) long long _devicePosition;
@property(readonly, nonatomic) long long _device;
@property(readonly, nonatomic) long long _mode;
- (void)_createStageLightOverlayViewIfNeededWillAnimate:(_Bool)arg1;	// IMP=0x00000000001adc0f
- (void)_createPointIndicatorIfNecessary;	// IMP=0x00000000001adb3e
- (void)_createContinuousIndicatorIfNecessary;	// IMP=0x000000000004636c
@property(readonly, nonatomic) CAMPreviewView *previewView;
- (void)_cancelDelayedActions;	// IMP=0x00000000001ada99
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x00000000001ada58
- (void)viewDidLoad;	// IMP=0x000000000000d97a
- (void)loadView;	// IMP=0x000000000000d3ed
- (_Bool)_canShowWhileLocked;	// IMP=0x00000000001ada4d
- (void)dealloc;	// IMP=0x00000000001ad984
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000001ad94c
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x00000000001ad914
- (id)initWithCaptureController:(id)arg1 motionController:(id)arg2 timelapseController:(id)arg3;	// IMP=0x000000000000acfc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

