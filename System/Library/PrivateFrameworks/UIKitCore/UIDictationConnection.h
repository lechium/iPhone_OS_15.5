//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/AFDictationDelegate-Protocol.h>

@class AFDictationConnection, AFDictationOptions, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol;

__attribute__((visibility("hidden")))
@interface UIDictationConnection : NSObject <AFDictationDelegate>
{
    _Bool _receivedMultilingualResultsCommand;	// 8 = 0x8
    _Bool _offlineOnly;	// 9 = 0x9
    _Bool _lowConfidenceAboutLanguageDetection;	// 10 = 0xa
    unsigned int _charBeforeInsertionPointOnDictationStart;	// 12 = 0xc
    unsigned int _charAfterInsertionPointOnDictationStart;	// 16 = 0x10
    id <UIDictationConnectionDelegate> _delegate;	// 24 = 0x18
    id <UIDictationConnectionTokenFilterProtocol> _tokenFilter;	// 32 = 0x20
    AFDictationOptions *_dictationOptions;	// 40 = 0x28
    AFDictationConnection *_connection;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_analyticsQueue;	// 56 = 0x38
    NSString *_lastUsedPrimaryLanguage;	// 64 = 0x40
    NSString *_lastUsedDetectedLanguage;	// 72 = 0x48
    NSMutableArray *_lastUsedTopLanguages;	// 80 = 0x50
    NSMutableDictionary *_lastReceivedPartials;	// 88 = 0x58
}

+ (id)interpretationFromSpeechTokens:(id)arg1 startIndex:(unsigned long long)arg2 filterBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000009e69fd
+ (void)_updateFromGlobalOptions:(id)arg1;	// IMP=0x00000000009e3b20
+ (void)afDelegate:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;	// IMP=0x00000000009e3b09
+ (_Bool)dictationRestricted;	// IMP=0x00000000009e39e4
+ (void)cacheSupportedDictationLanguages;	// IMP=0x00000000009e3953
+ (_Bool)dictationIsSupportedForLanguageCode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000009e377d
+ (_Bool)isDictationAvailable;	// IMP=0x00000000009e371c
+ (id)analytics;	// IMP=0x00000000009e3126
- (void).cxx_destruct;	// IMP=0x00000000009ea18a
@property(retain, nonatomic) NSMutableDictionary *lastReceivedPartials; // @synthesize lastReceivedPartials=_lastReceivedPartials;
@property(nonatomic) unsigned int charAfterInsertionPointOnDictationStart; // @synthesize charAfterInsertionPointOnDictationStart=_charAfterInsertionPointOnDictationStart;
@property(nonatomic) unsigned int charBeforeInsertionPointOnDictationStart; // @synthesize charBeforeInsertionPointOnDictationStart=_charBeforeInsertionPointOnDictationStart;
@property(nonatomic) _Bool lowConfidenceAboutLanguageDetection; // @synthesize lowConfidenceAboutLanguageDetection=_lowConfidenceAboutLanguageDetection;
@property(retain, nonatomic) NSMutableArray *lastUsedTopLanguages; // @synthesize lastUsedTopLanguages=_lastUsedTopLanguages;
@property(copy, nonatomic) NSString *lastUsedDetectedLanguage; // @synthesize lastUsedDetectedLanguage=_lastUsedDetectedLanguage;
@property(copy, nonatomic) NSString *lastUsedPrimaryLanguage; // @synthesize lastUsedPrimaryLanguage=_lastUsedPrimaryLanguage;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *analyticsQueue; // @synthesize analyticsQueue=_analyticsQueue;
@property(nonatomic) _Bool offlineOnly; // @synthesize offlineOnly=_offlineOnly;
@property(retain, nonatomic) AFDictationConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) AFDictationOptions *dictationOptions; // @synthesize dictationOptions=_dictationOptions;
@property(nonatomic) _Bool receivedMultilingualResultsCommand; // @synthesize receivedMultilingualResultsCommand=_receivedMultilingualResultsCommand;
@property(nonatomic) __weak id <UIDictationConnectionTokenFilterProtocol> tokenFilter; // @synthesize tokenFilter=_tokenFilter;
@property(nonatomic) __weak id <UIDictationConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;	// IMP=0x00000000009e9f89
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;	// IMP=0x00000000009e9f48
- (void)dictationConnectionSpeechRecognitionDidSucceed:(id)arg1;	// IMP=0x00000000009e9edd
- (void)dictationConnection:(id)arg1 didRecognizeMultilingualSpeech:(id)arg2;	// IMP=0x00000000009e8e8c
- (void)dictationConnection:(id)arg1 didRecognizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4;	// IMP=0x00000000009e87b8
- (void)dictationConnection:(id)arg1 didRecognizePartialResult:(id)arg2;	// IMP=0x00000000009e7e38
- (void)dictationConnection:(id)arg1 didRecognizeTokens:(id)arg2 languageModel:(id)arg3;	// IMP=0x00000000009e7793
- (void)dictationConnectionSpeechRecordingDidCancel:(id)arg1;	// IMP=0x00000000009e7728
- (void)dictationConnectionSpeechRecordingDidEnd:(id)arg1;	// IMP=0x00000000009e76e7
- (void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;	// IMP=0x00000000009e74c9
- (void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2;	// IMP=0x00000000009e738f
- (void)dictationConnection:(id)arg1 didBeginLocalRecognitionWithModelInfo:(id)arg2;	// IMP=0x00000000009e7322
- (void)dictationConnection:(id)arg1 speechRecordingDidBeginWithOptions:(id)arg2;	// IMP=0x00000000009e72b5
- (void)dictationConnectionSpeechRecordingDidBegin:(id)arg1;	// IMP=0x00000000009e7274
- (void)dictationConnectionSpeechRecordingWillBegin:(id)arg1;	// IMP=0x00000000009e7233
- (void)dictationConnection:(id)arg1 languageDetectorFailedWithError:(id)arg2;	// IMP=0x00000000009e71e9
- (void)dictationConnection:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(_Bool)arg4;	// IMP=0x00000000009e6bdd
- (void)preheat;	// IMP=0x00000000009e69c0
- (void)logDidAcceptReplacement:(id)arg1 replacementLanguageCode:(id)arg2 originalText:(id)arg3 correctionIdentifier:(id)arg4 interactionIdentifier:(id)arg5;	// IMP=0x00000000009e6607
- (void)logDidAcceptDictationResult:(id)arg1 reason:(id)arg2 result:(id)arg3 correctionIdentifier:(id)arg4;	// IMP=0x00000000009e5f84
- (void)logDidSelectAlternative:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;	// IMP=0x00000000009e5d09
- (void)logDidShowAlternatives:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;	// IMP=0x00000000009e5a8e
- (void)cancelSpeech;	// IMP=0x00000000009e574b
- (void)stopSpeech:(id)arg1 activationType:(unsigned long long)arg2 result:(id)arg3 suppressAlert:(_Bool)arg4;	// IMP=0x00000000009e548d
- (void)_startWithOptions:(id)arg1;	// IMP=0x00000000009e4ca2
- (id)_initializeWithOptions:(id)arg1;	// IMP=0x00000000009e4c39
- (void)startForFileAtURL:(id)arg1 forLanguage:(id)arg2;	// IMP=0x00000000009e4b1d
- (void)start;	// IMP=0x00000000009e49e3
- (id)_createConnectionOptions;	// IMP=0x00000000009e488a
- (id)_speechOptions:(id)arg1;	// IMP=0x00000000009e46a6
- (long long)speechEventTypeForDictationActivationType:(unsigned long long)arg1;	// IMP=0x00000000009e468c
- (id)_dictationOptions:(id)arg1;	// IMP=0x00000000009e40fc
- (id)languageDetectionUserContext;	// IMP=0x00000000009e3c51
- (void)endSession;	// IMP=0x00000000009e39a7
- (float)averagePower;	// IMP=0x00000000009e372d
- (void)sendSpeechCorrection:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x00000000009e35b5
- (void)sendSpeechCorrection:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x00000000009e33f1
- (_Bool)dictationIsAvailableForLanguage:(id)arg1;	// IMP=0x00000000009e3342
- (void)restartDictation;	// IMP=0x00000000009e32a8
- (void)cancelAvailabilityMonitoring;	// IMP=0x00000000009e326b
- (void)beginAvailabilityMonitoring;	// IMP=0x00000000009e322e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

