//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIGestureRecognizerDelegate-Protocol.h>

@class NSString, UIBezierPath, UIColor, UIFont, UIImage, UIImageView, UILabel, UIPanGestureRecognizer, UIView, _UIActionSliderKnob, _UIBackdropView, _UIVibrantSettings;
@protocol _UIActionSliderDelegate, _UIActionSliderLabel;

@interface _UIActionSlider <UIGestureRecognizerDelegate>
{
    UIView *_contentView;	// 120 = 0x78
    UIView *_trackDodgeView;	// 128 = 0x80
    UIView *_trackBackgroundView;	// 136 = 0x88
    _UIBackdropView *_trackBlurView;	// 144 = 0x90
    UIView *_trackSolidView;	// 152 = 0x98
    _UIActionSliderKnob *_knobView;	// 160 = 0xa0
    UIImageView *_knobImageView;	// 168 = 0xa8
    UIView<_UIActionSliderLabel> *_trackLabel;	// 176 = 0xb0
    UIPanGestureRecognizer *_slideGestureRecognizer;	// 184 = 0xb8
    struct CGPoint _slideGestureInitialPoint;	// 192 = 0xc0
    double _knobPosition;	// 208 = 0xd0
    double _trackWidthProportion;	// 216 = 0xd8
    _Bool _showingTrackLabel;	// 224 = 0xe0
    _Bool _animating;	// 225 = 0xe1
    long long _style;	// 232 = 0xe8
    long long _textStyle;	// 240 = 0xf0
    NSString *_trackText;	// 248 = 0xf8
    UIFont *_trackFont;	// 256 = 0x100
    double _trackTextBaselineFromBottom;	// 264 = 0x108
    id <_UIActionSliderDelegate> _delegate;	// 272 = 0x110
    double _knobWidth;	// 280 = 0x118
    double _cachedTrackMaskWidth;	// 288 = 0x120
    _UIVibrantSettings *_vibrantSettings;	// 296 = 0x128
    struct CGSize _knobImageOffset;	// 304 = 0x130
    struct CGSize _trackSize;	// 320 = 0x140
    struct UIEdgeInsets _knobInsets;	// 336 = 0x150
}

- (void).cxx_destruct;	// IMP=0x00000000005ab041
@property(retain, nonatomic) _UIVibrantSettings *vibrantSettings; // @synthesize vibrantSettings=_vibrantSettings;
@property(readonly, nonatomic, getter=_knobView) UIView *knobView; // @synthesize knobView=_knobView;
@property(nonatomic) double cachedTrackMaskWidth; // @synthesize cachedTrackMaskWidth=_cachedTrackMaskWidth;
@property(nonatomic, getter=isAnimating) _Bool animating; // @synthesize animating=_animating;
@property(nonatomic, getter=isShowingTrackLabel) _Bool showingTrackLabel; // @synthesize showingTrackLabel=_showingTrackLabel;
@property(nonatomic) double trackWidthProportion; // @synthesize trackWidthProportion=_trackWidthProportion;
@property(nonatomic) struct UIEdgeInsets knobInsets; // @synthesize knobInsets=_knobInsets;
@property(nonatomic) double knobWidth; // @synthesize knobWidth=_knobWidth;
@property(nonatomic) double knobPosition; // @synthesize knobPosition=_knobPosition;
@property(nonatomic) __weak id <_UIActionSliderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIPanGestureRecognizer *slideGestureRecognizer; // @synthesize slideGestureRecognizer=_slideGestureRecognizer;
@property(nonatomic) double trackTextBaselineFromBottom; // @synthesize trackTextBaselineFromBottom=_trackTextBaselineFromBottom;
@property(nonatomic) struct CGSize trackSize; // @synthesize trackSize=_trackSize;
@property(retain, nonatomic) UIFont *trackFont; // @synthesize trackFont=_trackFont;
@property(copy, nonatomic) NSString *trackText; // @synthesize trackText=_trackText;
@property(nonatomic) struct CGSize knobImageOffset; // @synthesize knobImageOffset=_knobImageOffset;
@property(nonatomic) long long textStyle; // @synthesize textStyle=_textStyle;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void)_knobPanGesture:(id)arg1;	// IMP=0x00000000005aaabc
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000005aaa08
- (void)_slideCompleted:(_Bool)arg1;	// IMP=0x00000000005aa77a
- (void)_hideTrackLabel:(_Bool)arg1;	// IMP=0x00000000005aa658
- (void)_showTrackLabel;	// IMP=0x00000000005aa553
- (void)setMaskFromImage:(id)arg1 onView:(id)arg2;	// IMP=0x00000000005aa31d
- (void)setMaskPath:(struct CGPath *)arg1 onView:(id)arg2;	// IMP=0x00000000005aa19b
- (void)updateAllTrackMasks;	// IMP=0x00000000005a9f73
- (id)trackMaskPath;	// IMP=0x00000000005a9e18
- (id)trackMaskImage;	// IMP=0x00000000005a9b72
- (void)layoutSubviews;	// IMP=0x00000000005a94e1
- (void)_makeTrackLabel;	// IMP=0x00000000005a92b3
- (void)didMoveToWindow;	// IMP=0x00000000005a925a
- (void)didMoveToSuperview;	// IMP=0x00000000005a91c5
- (_Bool)shouldHideTrackLabelForXPoint:(double)arg1;	// IMP=0x00000000005a917d
- (_Bool)xPointIsWithinTrack:(double)arg1;	// IMP=0x00000000005a9135
- (double)_knobAvailableX;	// IMP=0x00000000005a90e6
- (double)_knobRightMostX;	// IMP=0x00000000005a905f
- (double)_knobLeftMostX;	// IMP=0x00000000005a8fff
- (double)_knobMaxX;	// IMP=0x00000000005a8fd2
- (double)_knobMinX;	// IMP=0x00000000005a8fa5
- (double)_knobHorizontalPosition;	// IMP=0x00000000005a8f43
- (double)_knobVerticalInset;	// IMP=0x00000000005a8f15
- (double)_knobMaxXInset;	// IMP=0x00000000005a8eea
- (double)_knobMinXInset;	// IMP=0x00000000005a8ebf
- (double)_knobWidth;	// IMP=0x00000000005a8ead
- (struct CGRect)_trackFrame;	// IMP=0x00000000005a8e02
- (id)backgroundColor;	// IMP=0x00000000005a8de5
- (void)setBackgroundColor:(id)arg1;	// IMP=0x00000000005a8dc8
- (void)closeTrackAnimated:(_Bool)arg1;	// IMP=0x00000000005a8bd6
- (void)openTrackAnimated:(_Bool)arg1;	// IMP=0x00000000005a88c8
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000005a87c0
@property(readonly, nonatomic) struct CGRect trackTextRect;
@property(readonly, nonatomic) struct CGRect knobRect;
@property(readonly, retain, nonatomic) UILabel *trackLabel;
@property(retain, nonatomic) UIColor *knobColor;
@property(retain, nonatomic) UIImage *knobImage;
@property(readonly, nonatomic) UIBezierPath *knobMaskPath;
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000005a7c31
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000005a7c1d
- (id)initWithFrame:(struct CGRect)arg1 vibrantSettings:(id)arg2;	// IMP=0x00000000005a7640

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

