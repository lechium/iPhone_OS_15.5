//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIGestureRecognizerDelegate-Protocol.h>
#import <UIKitCore/UIPDFAnnotationControllerDelegate-Protocol.h>
#import <UIKitCore/UIPDFPageViewDelegate-Protocol.h>
#import <UIKitCore/UIPopoverControllerDelegate-Protocol.h>
#import <UIKitCore/WebPDFViewPlaceholderDelegate-Protocol.h>

@class NSArray, NSData, NSMutableArray, NSObject, NSString, NSURL, UIColor, UIPDFDocument, UITapGestureRecognizer, WebPDFViewPlaceholder;
@protocol UIWebPDFViewDelegate;

@interface UIWebPDFView <UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate>
{
    NSMutableArray *_backingLayerImageViews;	// 120 = 0x78
    struct CGPDFDocument *_cgPDFDocument;	// 128 = 0x80
    UIPDFDocument *_document;	// 136 = 0x88
    _Bool _hasScheduledCacheUpdate;	// 144 = 0x90
    struct CGRect _documentBounds;	// 152 = 0x98
    NSObject<UIWebPDFViewDelegate> *_pdfDelegate;	// 184 = 0xb8
    _Bool _delegateRespondsToDidScroll;	// 192 = 0xc0
    UITapGestureRecognizer *_tapGestureRecognizer;	// 200 = 0xc8
    NSURL *_documentURL;	// 208 = 0xd0
    _Bool _rotating;	// 216 = 0xd8
    _Bool _zooming;	// 217 = 0xd9
    double _initialZoomScale;	// 224 = 0xe0
    struct CGAffineTransform _documentTransform;	// 232 = 0xe8
    double _documentScale;	// 280 = 0x118
    long long _ignoreContentOffsetChanges;	// 288 = 0x120
    struct CGPoint _contentOffsetAtScrollStart;	// 296 = 0x128
    NSMutableArray *_pageViews;	// 312 = 0x138
    NSArray *_pageMinYs;	// 320 = 0x140
    _Bool hidePageViewsUntilReadyToRender;	// 328 = 0x148
    _Bool hideActivityIndicatorForUnRenderedContent;	// 329 = 0x149
    _Bool readyForSnapshot;	// 330 = 0x14a
    WebPDFViewPlaceholder *pdfPlaceHolderView;	// 336 = 0x150
    UIColor *backgroundColorForUnRenderedContent;	// 344 = 0x158
    NSString *documentPassword;	// 352 = 0x160
    NSArray *pageRects;	// 360 = 0x168
}

+ (void)setAsPDFDocRepAndView;	// IMP=0x0000000001326a56
+ (void)initialize;	// IMP=0x000000000132691e
@property(retain, nonatomic) NSArray *pageMinYs; // @synthesize pageMinYs=_pageMinYs;
@property(nonatomic) _Bool readyForSnapshot; // @synthesize readyForSnapshot;
@property(retain, nonatomic) NSArray *pageRects; // @synthesize pageRects;
@property(retain, nonatomic) NSString *documentPassword; // @synthesize documentPassword;
@property(nonatomic) _Bool hideActivityIndicatorForUnRenderedContent; // @synthesize hideActivityIndicatorForUnRenderedContent;
@property(retain, nonatomic) UIColor *backgroundColorForUnRenderedContent; // @synthesize backgroundColorForUnRenderedContent;
@property(nonatomic) _Bool hidePageViewsUntilReadyToRender; // @synthesize hidePageViewsUntilReadyToRender;
@property(nonatomic) long long ignoreContentOffsetChanges; // @synthesize ignoreContentOffsetChanges=_ignoreContentOffsetChanges;
@property WebPDFViewPlaceholder *pdfPlaceHolderView; // @synthesize pdfPlaceHolderView;
@property(readonly, nonatomic) double documentScale; // @synthesize documentScale=_documentScale;
@property(nonatomic) struct CGAffineTransform documentTransform; // @synthesize documentTransform=_documentTransform;
@property(nonatomic) double initialZoomScale; // @synthesize initialZoomScale=_initialZoomScale;
@property(readonly, nonatomic) struct CGRect documentBounds; // @synthesize documentBounds=_documentBounds;
@property(nonatomic) NSObject<UIWebPDFViewDelegate> *pdfDelegate; // @synthesize pdfDelegate=_pdfDelegate;
@property(retain, nonatomic) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (id)imageForContactRect:(struct CGRect)arg1 onPageInViewRect:(struct CGRect)arg2 destinationRect:(struct CGRect)arg3;	// IMP=0x000000000132a613
- (unsigned long long)_pageNumberForRect:(struct CGRect)arg1;	// IMP=0x000000000132a4a4
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000132a47c
- (void)_tapGestureRecognized:(id)arg1;	// IMP=0x000000000132a45b
- (void)_share:(id)arg1;	// IMP=0x000000000132a2e5
- (void)_translate:(id)arg1;	// IMP=0x000000000132a16f
- (void)_define:(id)arg1;	// IMP=0x0000000001329ff9
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000001329ebf
- (id)_selection;	// IMP=0x0000000001329e88
- (id)_pageWithSelection;	// IMP=0x0000000001329cf6
- (void)clearSelection;	// IMP=0x0000000001329cd2
- (void)annotation:(id)arg1 isBeingPressedAtPoint:(struct CGPoint)arg2 controller:(id)arg3;	// IMP=0x0000000001329b86
- (void)annotation:(id)arg1 wasTouchedAtPoint:(struct CGPoint)arg2 controller:(id)arg3;	// IMP=0x000000000132997d
- (void)_didLongPress:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4;	// IMP=0x0000000001329827
- (void)_didLongPress:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToURL:(id)arg4;	// IMP=0x00000000013296e1
- (void)_didTouch:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4;	// IMP=0x000000000132960b
- (void)_didTouch:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToURL:(id)arg4;	// IMP=0x0000000001329551
- (void)resetZoom:(id)arg1;	// IMP=0x0000000001329501
- (void)zoom:(id)arg1 to:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 kind:(int)arg4;	// IMP=0x000000000132940c
- (void)didCompleteLayout;	// IMP=0x00000000013291fc
- (void)_recreateUIPDFDocument;	// IMP=0x0000000001329038
- (_Bool)_checkIfDocumentNeedsUnlock;	// IMP=0x0000000001328f1f
- (_Bool)_tryToUnlockDocumentWithPassword:(id)arg1;	// IMP=0x0000000001328e79
- (void)viewWillClose;	// IMP=0x0000000001328e65
- (void)snapshotComplete;	// IMP=0x0000000001328d09
- (void)prepareForSnapshot:(_Bool)arg1;	// IMP=0x0000000001328942
- (unsigned long long)firstVisiblePageNumber;	// IMP=0x0000000001328588
- (void)didZoom:(id)arg1;	// IMP=0x0000000001328566
- (void)willZoom:(id)arg1;	// IMP=0x00000000013284d9
- (void)didRotate:(id)arg1;	// IMP=0x0000000001328472
- (void)willRotate:(id)arg1;	// IMP=0x00000000013283e5
- (void)didReceiveMemoryWarning:(id)arg1;	// IMP=0x0000000001328377
- (void)_didScroll;	// IMP=0x00000000013282e5
- (void)willScroll:(id)arg1;	// IMP=0x000000000132828e
- (void)ensureCorrectPagesAreInstalled:(_Bool)arg1;	// IMP=0x00000000013281f0
- (void)_scheduleRemovePageViewsNotInViewCoordsRect;	// IMP=0x0000000001328184
- (void)_removePageViewsNotInCurrentViewCoordsRect;	// IMP=0x000000000132812b
- (void)_removePageViewsNotInViewCoordsRect:(struct CGRect)arg1;	// IMP=0x0000000001327ee2
- (id)_addPageAtIndex:(unsigned long long)arg1;	// IMP=0x0000000001327e35
- (void)_addSubViewsInViewCoordsBounds:(struct CGRect)arg1 force:(_Bool)arg2;	// IMP=0x0000000001327a56
- (id)_installViewAtIndex:(long long)arg1 inFrame:(struct CGRect)arg2;	// IMP=0x00000000013275c8
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000001327322
- (struct CGRect)_viewCachingBoundsInUIViewCoords;	// IMP=0x000000000132724d
- (struct CGRect)_viewportBoundsInUIViewCoords;	// IMP=0x0000000001327200
- (struct CGRect)_viewportBoundsInUIVIewCoordsWithView:(id)arg1;	// IMP=0x0000000001327180
- (id)viewportView;	// IMP=0x0000000001327141
- (id)viewAtIndex:(long long)arg1;	// IMP=0x0000000001327009
- (void)dealloc;	// IMP=0x0000000001326d2c
- (void)_removeBackgroundImageObserverIfNeeded:(id)arg1;	// IMP=0x0000000001326cd0
- (id)initWithWebPDFViewPlaceholder:(id)arg1;	// IMP=0x0000000001326a6f
@property(readonly, nonatomic) NSData *documentData;
@property(readonly, nonatomic) UIPDFDocument *document;
- (id)uiPDFDocument;	// IMP=0x0000000001326a00
@property(readonly, nonatomic) struct CGPDFDocument *cgPDFDocument;
- (_Bool)_hasPageRects;	// IMP=0x00000000013269cb
@property(readonly, nonatomic) unsigned long long totalPages;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

