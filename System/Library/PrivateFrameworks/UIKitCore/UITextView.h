//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIContentSizeCategoryAdjusting-Protocol.h>
#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UITextAutoscrolling-Protocol.h>
#import <UIKitCore/UITextDragSupporting-Protocol.h>
#import <UIKitCore/UITextDraggable-Protocol.h>
#import <UIKitCore/UITextDropSupporting-Protocol.h>
#import <UIKitCore/UITextDroppable-Protocol.h>
#import <UIKitCore/UITextInput-Protocol.h>
#import <UIKitCore/UITextInputControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputTraits_Private-Protocol.h>
#import <UIKitCore/UITextPasteConfigurationSupporting-Protocol.h>
#import <UIKitCore/UITextPasteConfigurationSupporting_Internal-Protocol.h>
#import <UIKitCore/UIViewGhostedRangeSupporting-Protocol.h>
#import <UIKitCore/_UILayoutBaselineUpdating-Protocol.h>
#import <UIKitCore/_UIMultilineTextContentSizing-Protocol.h>
#import <UIKitCore/_UITextContainerViewDelegate-Protocol.h>
#import <UIKitCore/_UITextContent-Protocol.h>
#import <UIKitCore/_UITextItemDiscoverable-Protocol.h>
#import <UIKitCore/_UITextItemInteracting-Protocol.h>
#import <UIKitCore/_UITextViewContentPaddingDelegate-Protocol.h>
#import <UIKitCore/_UIViewBaselineSpacing-Protocol.h>

@class CUICatalog, NSAttributedString, NSDictionary, NSIndexSet, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, UIAutoscroll, UIColor, UIDragInteraction, UIDropInteraction, UIFont, UIImage, UIInputContextHistory, UILabel, UIPasteConfiguration, UITextInputController, UITextInputPasswordRules, UITextInputTraits, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, _UICharacterStreamingManager, _UISupplementalLexicon, _UITextContainerView, _UITextItemDiscoverer, _UITextLayoutController, _UITextLayoutView, _UITextSizeCache, _UITextStorageDraggableGeometry, _UITextViewContentPadding, _UITextViewRestorableScrollPosition, _UITextViewVisualStyle;
@protocol UICoordinateSpace, UITextDragDelegate, UITextDragDropSupport, UITextDropDelegate, UITextInputDelegate, UITextInputTokenizer, UITextPasteDelegate, UITextViewDelegate;

@interface UITextView <_UIViewBaselineSpacing, _UITextContainerViewDelegate, _UITextViewContentPaddingDelegate, UITextInputControllerDelegate, UITextAutoscrolling, UIKeyboardInput, _UITextContent, UITextInputTraits_Private, _UIMultilineTextContentSizing, _UILayoutBaselineUpdating, UIViewGhostedRangeSupporting, _UITextItemInteracting, UITextPasteConfigurationSupporting_Internal, UITextDragSupporting, UITextDropSupporting, _UITextItemDiscoverable, UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting, UITextInput, UIContentSizeCategoryAdjusting>
{
    NSTextStorage *_textStorage;	// 128 = 0x80
    NSTextContainer *_textContainer;	// 136 = 0x88
    _UITextContainerView *_containerView;	// 144 = 0x90
    _UITextLayoutView *_layoutView;	// 152 = 0x98
    id _inputDelegate;	// 160 = 0xa0
    id <UITextInputTokenizer> _tokenizer;	// 168 = 0xa8
    UITextInputController *_inputController;	// 176 = 0xb0
    UITextInteractionAssistant *_interactionAssistant;	// 184 = 0xb8
    UITextInputTraits *_textInputTraits;	// 192 = 0xc0
    UIAutoscroll *_autoscroll;	// 200 = 0xc8
    struct {
        unsigned int needsScrollToSelectionAfterLayout:1;
        unsigned int editable:1;
        unsigned int reentrancyGuard:1;
        unsigned int usesExplicitPreferredMaxLayoutWidth:1;
        unsigned int interactiveSelectionDisabled:1;
        unsigned int selectable:1;
        unsigned int shouldPresentSheetsInAWindowLayeredAboveTheKeyboard:1;
        unsigned int shouldAutoscrollAboveBottom:1;
        unsigned int containerViewSizeInvalid:1;
        unsigned int isAnimatingPaste:1;
        unsigned int textSizeCacheEnabled:1;
        unsigned int showsEditMenu:1;
    } _tvFlags;	// 208 = 0xd0
    long long _contentSizeUpdateSeqNo;	// 216 = 0xd8
    _UITextViewRestorableScrollPosition *_scrollTarget;	// 224 = 0xe0
    unsigned long long _scrollPositionDontRecordCount;	// 232 = 0xe8
    _UITextViewRestorableScrollPosition *_scrollPosition;	// 240 = 0xf0
    double _offsetFromScrollPosition;	// 248 = 0xf8
    unsigned long long _dataDetectorTypes;	// 256 = 0x100
    double _preferredMaxLayoutWidth;	// 264 = 0x108
    UILabel *_placeholderLabel;	// 272 = 0x110
    NSAttributedString *_overriddenPlaceholder;	// 280 = 0x118
    long long _overriddenPlaceholderAlignment;	// 288 = 0x120
    UIView *_inputAccessoryView;	// 296 = 0x128
    NSDictionary *_linkTextAttributes;	// 304 = 0x130
    _UICharacterStreamingManager *_characterStreamingManager;	// 312 = 0x138
    NSDictionary *_siriParameters;	// 320 = 0x140
    double _firstBaselineOffsetFromTop;	// 328 = 0x148
    double _lastBaselineOffsetFromBottom;	// 336 = 0x150
    _UITextSizeCache *_intrinsicSizeCache;	// 344 = 0x158
    CUICatalog *_cuiCatalog;	// 352 = 0x160
    struct UIEdgeInsets _beforeFreezingTextContainerInset;	// 360 = 0x168
    struct UIEdgeInsets _duringFreezingTextContainerInset;	// 392 = 0x188
    struct CGSize _beforeFreezingFrameSize;	// 424 = 0x1a8
    _Bool _unfreezingTextContainerSize;	// 440 = 0x1b8
    struct CGRect _frameOfTrailingWhitespace;	// 448 = 0x1c0
    id <UITextDragDropSupport> _textDragDropSupport;	// 480 = 0x1e0
    _UITextStorageDraggableGeometry *_geometry;	// 488 = 0x1e8
    long long _defaultTextPreviewOptions;	// 496 = 0x1f0
    _UITextItemDiscoverer *_textItemDiscoverer;	// 504 = 0x1f8
    _UITextViewContentPadding *_topContentPadding;	// 512 = 0x200
    _UITextViewContentPadding *_bottomContentPadding;	// 520 = 0x208
    struct CGPoint _scrollEndDraggingVelocity;	// 528 = 0x210
    _Bool _adjustsFontForContentSizeCategory;	// 544 = 0x220
    _Bool _clearsOnInsertion;	// 545 = 0x221
    id <UITextPasteDelegate> _pasteDelegate;	// 552 = 0x228
    _UITextLayoutController *_textLayoutController;	// 560 = 0x230
    double _multilineContextWidth;	// 568 = 0x238
    long long _textDragOptions;	// 576 = 0x240
    id <UITextDragDelegate> _textDragDelegate;	// 584 = 0x248
    id <UITextDropDelegate> _textDropDelegate;	// 592 = 0x250
    UIView *_inputView;	// 600 = 0x258
    _UITextViewVisualStyle *_visualStyle;	// 608 = 0x260
}

+ (id)_defaultTextColor;	// IMP=0x00000000010b4951
- (void).cxx_destruct;	// IMP=0x00000000010ba928
@property(retain, nonatomic) _UITextViewVisualStyle *visualStyle; // @synthesize visualStyle=_visualStyle;
@property(readonly, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly, nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain) UIView *inputView; // @synthesize inputView=_inputView;
@property(nonatomic) __weak id <UITextDropDelegate> textDropDelegate; // @synthesize textDropDelegate=_textDropDelegate;
@property(nonatomic) __weak id <UITextDragDelegate> textDragDelegate; // @synthesize textDragDelegate=_textDragDelegate;
@property(nonatomic) long long textDragOptions; // @synthesize textDragOptions=_textDragOptions;
- (void)_setMultilineContextWidth:(double)arg1;	// IMP=0x00000000010ba82c
- (double)_multilineContextWidth;	// IMP=0x00000000010ba81a
@property(readonly, nonatomic) _UITextLayoutController *textLayoutController; // @synthesize textLayoutController=_textLayoutController;
@property(nonatomic) __weak id <UITextPasteDelegate> pasteDelegate; // @synthesize pasteDelegate=_pasteDelegate;
@property(nonatomic) _Bool adjustsFontForContentSizeCategory; // @synthesize adjustsFontForContentSizeCategory=_adjustsFontForContentSizeCategory;
- (id)_getDelegateZoomView;	// IMP=0x00000000010ba776
- (void)droppingFinished;	// IMP=0x00000000010ba72f
- (void)droppingStarted;	// IMP=0x00000000010ba6f8
@property(nonatomic) struct CGPoint contentOffsetForSameViewDrops;
- (_Bool)allowsDraggingAttachments;	// IMP=0x00000000010ba6cc
- (void)resignDropResponderWithDropPerformed:(_Bool)arg1;	// IMP=0x00000000010ba6ba
- (void)becomeDropResponder;	// IMP=0x00000000010ba6b4
- (_Bool)canBecomeDropResponder;	// IMP=0x00000000010ba6ac
- (void)draggingFinished:(id)arg1;	// IMP=0x00000000010ba609
- (void)draggingStarted;	// IMP=0x00000000010ba603
@property(readonly, nonatomic, getter=isTextDropActive) _Bool textDropActive;
@property(readonly, nonatomic, getter=isTextDragActive) _Bool textDragActive;
- (void)invalidateDropCaret;	// IMP=0x00000000010ba5ac
@property(readonly, nonatomic) UIDropInteraction *textDropInteraction;
@property(readonly, nonatomic) UIDragInteraction *textDragInteraction;
- (_Bool)_allowHighlightForTextInteractableItem:(id)arg1;	// IMP=0x00000000010ba392
- (_Bool)_interactionPossibleWithAttachment:(id)arg1;	// IMP=0x00000000010ba31a
- (id)_textInteractableItemAtPoint:(struct CGPoint)arg1 precision:(unsigned long long)arg2;	// IMP=0x00000000010b9a21
- (id)_anyTextItemConstrainedToLineAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b99b5
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b99af
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b99a9
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b996a
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b9935
- (_Bool)_mightHaveInteractableItems;	// IMP=0x00000000010b992d
- (_Bool)_allowInteraction:(long long)arg1 forTextInteractableItem:(id)arg2;	// IMP=0x00000000010b969d
- (_Bool)_delegatesAllowingTextItemInteractions;	// IMP=0x00000000010b961f
- (void)_setDefaultTextPreviewOptions:(long long)arg1;	// IMP=0x00000000010b960e
- (long long)_defaultTextPreviewOptions;	// IMP=0x00000000010b95fd
- (id)_targetedPreviewForTextInteractableItem:(id)arg1 dismissing:(_Bool)arg2;	// IMP=0x00000000010b9503
- (void)_applyOptionsToGeometry;	// IMP=0x00000000010b94b0
- (id)_textGeometry;	// IMP=0x00000000010b949b
- (void)_updateSelectionGestures;	// IMP=0x00000000010b9262
- (void)_resetDataDetectorsResults;	// IMP=0x00000000010b91f3
- (void)_startDataDetectors;	// IMP=0x00000000010b9188
- (void)_startDataDetectorsIfNeeded;	// IMP=0x00000000010b9151
- (void)_cancelDataDetectors;	// IMP=0x00000000010b90f6
- (_Bool)_shouldStartDataDetectors;	// IMP=0x00000000010b90a8
- (unsigned long long)_effectiveDataDetectorTypes;	// IMP=0x00000000010b9064
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x00000000010b9003
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x00000000010b8fa8
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x00000000010b8f21
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x00000000010b8eaf
- (id)_textInputTraits;	// IMP=0x00000000010b8dc5
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
- (_Bool)_shouldObscureInput;	// IMP=0x00000000010b8c6e
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
- (id)metadataDictionariesForDictationResults;	// IMP=0x00000000010b8b53
- (void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2;	// IMP=0x00000000010b8ade
- (void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000010b8948
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000010b8887
- (void)textInputDidAnimatePaste:(id)arg1;	// IMP=0x00000000010b8875
- (void)textInputWillAnimatePaste:(id)arg1;	// IMP=0x00000000010b8863
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x00000000010b87b8
- (id)automaticallySelectedOverlay;	// IMP=0x00000000010b86a2
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x00000000010b8626
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x00000000010b85a9
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x00000000010b84aa
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x00000000010b83b7
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x00000000010b8319
- (void)validateCommand:(id)arg1;	// IMP=0x00000000010b82bc
- (void)captureTextFromCamera:(id)arg1;	// IMP=0x00000000010b825f
- (void)alignRight:(id)arg1;	// IMP=0x00000000010b8202
- (void)alignJustified:(id)arg1;	// IMP=0x00000000010b81a5
- (void)alignCenter:(id)arg1;	// IMP=0x00000000010b8148
- (void)alignLeft:(id)arg1;	// IMP=0x00000000010b80eb
- (void)_transliterateChinese:(id)arg1;	// IMP=0x00000000010b808e
- (void)_promptForReplace:(id)arg1;	// IMP=0x00000000010b8031
- (void)replace:(id)arg1;	// IMP=0x00000000010b7fd4
- (void)updateTextAttributesWithConversionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000010b7f77
- (void)decreaseSize:(id)arg1;	// IMP=0x00000000010b7f3b
- (void)increaseSize:(id)arg1;	// IMP=0x00000000010b7eff
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x00000000010b7ea2
- (void)toggleUnderline:(id)arg1;	// IMP=0x00000000010b7e45
- (void)toggleItalics:(id)arg1;	// IMP=0x00000000010b7de8
- (void)toggleBoldface:(id)arg1;	// IMP=0x00000000010b7d8b
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x00000000010b7d2e
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x00000000010b7cd1
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x00000000010b7c74
- (void)selectAll:(id)arg1;	// IMP=0x00000000010b7c02
- (void)select:(id)arg1;	// IMP=0x00000000010b7bc5
- (id)_implicitPasteConfigurationClasses;	// IMP=0x00000000010b7abb
- (id)_effectivePasteConfiguration;	// IMP=0x00000000010b7a1f
- (void)pasteItemProviders:(id)arg1;	// IMP=0x00000000010b79c2
- (id)_attributedStringForInsertionOfAttributedString:(id)arg1;	// IMP=0x00000000010b7955
- (void)_pasteAttributedString:(id)arg1 pasteAsRichText:(_Bool)arg2;	// IMP=0x00000000010b78f2
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x00000000010b7895
- (void)paste:(id)arg1;	// IMP=0x00000000010b7838
- (_Bool)_isDisplayingShortcutViewController;	// IMP=0x00000000010b77fe
- (void)_addShortcut:(id)arg1;	// IMP=0x00000000010b77a1
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;	// IMP=0x00000000010b7744
- (void)_selectionMayChange:(id)arg1;	// IMP=0x00000000010b76e7
- (_Bool)_isDisplayingLookupViewController;	// IMP=0x00000000010b76ad
- (_Bool)_isDisplayingShareViewController;	// IMP=0x00000000010b7673
- (_Bool)_isDisplayingTextService;	// IMP=0x00000000010b7639
- (void)_share:(id)arg1;	// IMP=0x00000000010b75dc
- (_Bool)_isDisplayingReferenceLibraryViewController;	// IMP=0x00000000010b75a2
- (void)_translate:(id)arg1;	// IMP=0x00000000010b7545
- (void)_define:(id)arg1;	// IMP=0x00000000010b74e8
- (void)copy:(id)arg1;	// IMP=0x00000000010b7433
- (void)cut:(id)arg1;	// IMP=0x00000000010b73cb
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000010b72f8
- (void)_adjustFontForAccessibilityTraits:(_Bool)arg1;	// IMP=0x00000000010b6ec1
- (void)cancelAutoscroll;	// IMP=0x00000000010b6e4d
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x00000000010b6b6e
- (id)textContainerView:(id)arg1 cuiCatalogForTextEffectName:(id)arg2;	// IMP=0x00000000010b6ae7
- (void)updateSelectionForTextContainerView:(id)arg1;	// IMP=0x00000000010b6ad5
- (struct _NSRange)selectedRangeForTextContainerView:(id)arg1;	// IMP=0x00000000010b6ac3
- (_Bool)isEditableForTextContainerView:(id)arg1;	// IMP=0x00000000010b6ab1
- (id)textContainerView:(id)arg1 linkTextAttributesForLink:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;	// IMP=0x00000000010b6a99
- (id)linkTextAttributesForTextContainerView:(id)arg1;	// IMP=0x00000000010b6a87
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x00000000010b6a73
- (void)_unconstrainTiledRendering;	// IMP=0x00000000010b6a6d
- (void)_constrainTiledRenderingToRect:(struct CGRect)arg1;	// IMP=0x00000000010b6a67
- (void)_setFreezeTextContainerSize:(_Bool)arg1;	// IMP=0x00000000010b690d
- (_Bool)_freezeTextContainerSize;	// IMP=0x00000000010b68f0
- (void)_updateTextEffectsConfigurationIfNeeded;	// IMP=0x00000000010b6726
- (id)_cuiStyleEffectConfiguration;	// IMP=0x00000000010b66d6
- (void)_setCuiStyleEffectConfiguration:(id)arg1;	// IMP=0x00000000010b6540
- (void)_setupDefaultStyleEffectConfiguration;	// IMP=0x00000000010b6456
- (id)_cuiCatalog;	// IMP=0x00000000010b6441
- (void)_setCuiCatalog:(id)arg1;	// IMP=0x00000000010b63e0
- (void)setShouldPreserveVisualFontSizeFidelity:(_Bool)arg1;	// IMP=0x00000000010b63ce
- (_Bool)shouldPreserveVisualFontSizeFidelity;	// IMP=0x00000000010b63bc
@property(nonatomic) _Bool usesStandardTextScaling;
- (id)_allowedTypingAttributes;	// IMP=0x00000000010b633c
- (void)_setAllowedTypingAttributes:(id)arg1;	// IMP=0x00000000010b62df
- (id)_whitelistedTypingAttributes;	// IMP=0x00000000010b62cd
- (void)_setWhitelistedTypingAttributes:(id)arg1;	// IMP=0x00000000010b62bb
- (void)setContentMode:(long long)arg1;	// IMP=0x00000000010b6246
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000010b61dd
- (id)_linkTextAttributesForLink:(id)arg1 forCharacterAtIndex:(unsigned long long)arg2;	// IMP=0x00000000010b5deb
@property(copy, nonatomic) NSDictionary *linkTextAttributes;
- (double)lineHeight;	// IMP=0x00000000010b59df
- (void)setLineHeight:(double)arg1;	// IMP=0x00000000010b5862
- (struct CGRect)visibleTextRect;	// IMP=0x00000000010b5843
- (struct CGRect)visibleRect;	// IMP=0x00000000010b5789
- (struct CGRect)visibleRectIgnoringKeyboard;	// IMP=0x00000000010b571c
@property(nonatomic) struct UIEdgeInsets textContainerInset;
- (void)setMarginTop:(unsigned long long)arg1;	// IMP=0x00000000010b5478
- (unsigned long long)marginTop;	// IMP=0x00000000010b5410
- (void)updateAutoscrollAboveBottom;	// IMP=0x00000000010b5397
- (void)setShouldAutoscrollAboveBottom:(_Bool)arg1;	// IMP=0x00000000010b536d
- (_Bool)shouldAutoscrollAboveBottom;	// IMP=0x00000000010b535a
- (void)setContentToHTMLString:(id)arg1;	// IMP=0x00000000010b523d
- (id)webView;	// IMP=0x00000000010b5235
@property(nonatomic) unsigned long long dataDetectorTypes;
- (void)disableClearsOnInsertion;	// IMP=0x00000000010b51ba
@property(nonatomic) _Bool clearsOnInsertion; // @synthesize clearsOnInsertion=_clearsOnInsertion;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;	// IMP=0x00000000010b5027
- (_Bool)_shouldBecomeEditableUponBecomingTargetOfKeyboardEventDeferringEnvironment;	// IMP=0x00000000010b501f
- (_Bool)_shouldBecomeEditableUponFocus;	// IMP=0x00000000010b5017
- (_Bool)becomesEditableWithGestures;	// IMP=0x00000000010b500f
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIColor *textColor;
- (void)_setTextColor:(id)arg1;	// IMP=0x00000000010b49e4
- (_Bool)_shouldAppendTextInViewDescription;	// IMP=0x00000000010b493c
@property(readonly, copy) NSString *debugDescription;
@property(copy, nonatomic) NSString *text;
- (id)_currentDefaultAttributes;	// IMP=0x00000000010b4661
- (_Bool)allowsAttachments;	// IMP=0x00000000010b4659
@property(retain, nonatomic) UIFont *font;
- (id)initWithFrame:(struct CGRect)arg1 font:(id)arg2;	// IMP=0x00000000010b4466
- (void)textInputDidChangeSelection:(id)arg1;	// IMP=0x00000000010b43f9
- (_Bool)textInputShouldExtendCaretHeight:(id)arg1;	// IMP=0x00000000010b43b0
- (void)textInputDidChange:(id)arg1;	// IMP=0x00000000010b42d4
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x00000000010b429b
- (void)_setTypingAttributesTextColor:(id)arg1;	// IMP=0x00000000010b4218
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (void)_syncTypingAttributesToTextContainerAttributesForExtraLineFragment;	// IMP=0x00000000010b3fa7
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;	// IMP=0x00000000010b3f34
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x00000000010b3ed1
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x00000000010b3e5b
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x00000000010b3db8
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x00000000010b3d56
- (_Bool)_isSystemAttachment:(id)arg1;	// IMP=0x00000000010b3cf5
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x00000000010b3ced
- (void)_updateSelectableInteractions;	// IMP=0x00000000010b3acb
- (_Bool)_showsEditMenu;	// IMP=0x00000000010b3ab5
- (void)_setShowsEditMenu:(_Bool)arg1;	// IMP=0x00000000010b3a97
@property(nonatomic, getter=isSelectable) _Bool selectable;
@property(nonatomic, getter=isEditable) _Bool editable;
- (_Bool)_mightHaveSelection;	// IMP=0x00000000010b38bc
- (_Bool)isEditing;	// IMP=0x00000000010b3883
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b3821
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x00000000010b3798
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b3736
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x00000000010b36c9
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010b3656
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x00000000010b35e0
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x00000000010b356a
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x00000000010b3507
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010b34a0
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (id)undoManager;	// IMP=0x00000000010b3371
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x00000000010b32fe
- (id)_textInputViewForAddingGestureRecognizers;	// IMP=0x00000000010b32f5
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x00000000010b326d
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010b31ea
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010b3167
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x00000000010b30ee
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x00000000010b307b
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x00000000010b2fec
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x00000000010b2f2c
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000010b2ec4
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000010b2e5c
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(nonatomic) long long selectionAffinity;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x00000000010b2b71
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x00000000010b2afc
- (id)attributedTextInRange:(id)arg1;	// IMP=0x00000000010b2a8f
- (void)insertAttributedText:(id)arg1;	// IMP=0x00000000010b2a32
- (id)textInRange:(id)arg1;	// IMP=0x00000000010b29c5
- (id)selectedText;	// IMP=0x00000000010b2962
- (struct CGRect)_rectToScrollToVisibleInCellInWindow:(id)arg1;	// IMP=0x00000000010b24bd
- (struct CGPoint)_contentOffsetForScrollingToRect:(struct CGRect)arg1;	// IMP=0x00000000010b2350
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x00000000010b22df
- (void)scrollRangeToVisible:(struct _NSRange)arg1;	// IMP=0x00000000010b227d
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;	// IMP=0x00000000010b2225
- (id)_restorableScrollPositionForStateRestoration;	// IMP=0x00000000010b2209
- (id)_restorableScrollPosition;	// IMP=0x00000000010b21ed
- (void)_restoreScrollPosition:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000010b211f
- (struct CGPoint)_lastGlyphBaselineLeftPointWithLayoutManager:(id)arg1;	// IMP=0x00000000010b1e38
- (struct CGPoint)_firstGlyphBaselineRightPointWithLayoutManager:(id)arg1;	// IMP=0x00000000010b1b5f
- (struct CGPoint)_lastGlyphBaselineRightPointWithLayoutManager:(id)arg1;	// IMP=0x00000000010b176f
- (struct CGPoint)_firstGlyphBaselineLeftPointWithLayoutManager:(id)arg1;	// IMP=0x00000000010b1471
- (void)_ensureCleanedUp;	// IMP=0x00000000010b146b
- (void)_didFinishSpeechRecognition;	// IMP=0x00000000010b1418
- (void)_didRecognizeSpeechStrings:(id)arg1;	// IMP=0x00000000010b1246
- (void)_didRecognizeSpeechTokens:(id)arg1;	// IMP=0x00000000010b11fa
- (id)extractWordArrayFromTokensArray:(id)arg1;	// IMP=0x00000000010b0e6a
- (void)_setSiriAnimationDictationStyleWithCharacterInsertionRate:(double)arg1 minimumDurationBetweenHypotheses:(double)arg2;	// IMP=0x00000000010b0d69
- (void)_enableSiriAnimationDictationStyle;	// IMP=0x00000000010b0d63
- (_Bool)hasTextItemsOfType:(long long)arg1 inTextRange:(id)arg2;	// IMP=0x00000000010b0ce6
- (id)textItemsOfType:(long long)arg1 inTextRange:(id)arg2;	// IMP=0x00000000010b0c5d
- (id)visibleTextRange;	// IMP=0x00000000010b0c0d
@property(readonly, nonatomic) id <UICoordinateSpace> textItemCoordinateSpace;
- (id)_textItemDiscoverer;	// IMP=0x00000000010b0b69
- (struct CGRect)_boundingRectForRange:(id)arg1;	// IMP=0x00000000010b0b2b
- (id)_previewRendererForRange:(id)arg1 unifyRects:(_Bool)arg2;	// IMP=0x00000000010b0b0e
- (struct _NSRange)_visibleRangeWithLayout:(_Bool)arg1;	// IMP=0x00000000010b09dc
- (struct CGPoint)_contentOffsetForScrollToVisible:(struct _NSRange)arg1;	// IMP=0x00000000010b0925
- (struct CGRect)_rectForScrollToVisible:(struct _NSRange)arg1;	// IMP=0x00000000010b04b6
- (void)_diagnoseFocusabilityForReport:(id)arg1;	// IMP=0x00000000010b0433
- (id)_systemDefaultFocusGroupIdentifier;	// IMP=0x00000000010b0429
- (struct CGRect)accessibilityFrame;	// IMP=0x00000000010b03c7
- (_Bool)_wantsFocusRing;	// IMP=0x00000000010b03bf
- (_Bool)canBecomeFocused;	// IMP=0x00000000010b036c
- (void)endFloatingCursor;	// IMP=0x00000000010b032f
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;	// IMP=0x00000000010b02c2
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b0269
- (void)beginFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000010b0210
- (_Bool)_restoreFirstResponder;	// IMP=0x00000000010b0188
- (id)interactionAssistant;	// IMP=0x00000000010b0173
- (id)selectionView;	// IMP=0x00000000010b0123
- (void)updateSelectionImmediately;	// IMP=0x00000000010b00b9
- (void)updateSelection;	// IMP=0x00000000010b004f
- (void)endSelectionChange;	// IMP=0x00000000010b001b
- (void)beginSelectionChange;	// IMP=0x00000000010affe7
- (void)_deleteBackwardAndNotify:(_Bool)arg1;	// IMP=0x00000000010aff20
- (void)deleteBackward;	// IMP=0x00000000010afeec
- (void)insertText:(id)arg1 style:(long long)arg2 alternatives:(id)arg3;	// IMP=0x00000000010afed1
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x00000000010afdfd
- (void)insertText:(id)arg1;	// IMP=0x00000000010afda0
@property(readonly, nonatomic) _Bool hasText;
- (void)_updatePlaceholderVisibility;	// IMP=0x00000000010afca6
- (void)_layoutPlaceholder;	// IMP=0x00000000010af984
- (_Bool)_isTextSizeCacheEnabled;	// IMP=0x00000000010af96e
- (void)_setTextSizeCacheEnabled:(_Bool)arg1;	// IMP=0x00000000010af91e
- (void)_setOverridePlaceholder:(id)arg1 alignment:(long long)arg2;	// IMP=0x00000000010af79e
- (id)attributedPlaceholder;	// IMP=0x00000000010af756
- (void)setAttributedPlaceholder:(id)arg1;	// IMP=0x00000000010af5bf
- (void)setShouldPresentSheetsInAWindowLayeredAboveTheKeyboard:(_Bool)arg1;	// IMP=0x00000000010af5a3
- (_Bool)_shouldShowEditMenu;	// IMP=0x00000000010af591
- (_Bool)shouldPresentSheetsInAWindowLayeredAboveTheKeyboard;	// IMP=0x00000000010af57c
- (_Bool)_isInteractiveTextSelectionDisabled;	// IMP=0x00000000010af567
- (void)_setInteractiveTextSelectionDisabled:(_Bool)arg1;	// IMP=0x00000000010af4f0
- (void)_updateContainerTileAndSizingFlags;	// IMP=0x00000000010af361
- (void)setScrollEnabled:(_Bool)arg1;	// IMP=0x00000000010af2c6
- (void)removeInvisibleRange:(id)arg1;	// IMP=0x00000000010af22d
- (void)addInvisibleRange:(id)arg1;	// IMP=0x00000000010af194
- (void)removeAllGhostedRanges;	// IMP=0x00000000010af177
- (void)addGhostedRange:(id)arg1;	// IMP=0x00000000010af135
- (void)setTiledViewsDrawAsynchronously:(_Bool)arg1;	// IMP=0x00000000010af0bb
- (_Bool)tiledViewsDrawAsynchronously;	// IMP=0x00000000010af042
- (void)setMaxTileHeight:(double)arg1;	// IMP=0x00000000010af025
- (double)maxTileHeight;	// IMP=0x00000000010af008
- (void)_disableTiledViews;	// IMP=0x00000000010aefe9
- (void)setUsesTiledViews:(_Bool)arg1;	// IMP=0x00000000010aef17
- (_Bool)usesTiledViews;	// IMP=0x00000000010aeefa
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (void)_notifyDidEndEditing;	// IMP=0x00000000010aedeb
- (void)_notifyDidBeginEditing;	// IMP=0x00000000010aed4f
- (_Bool)resignFirstResponder;	// IMP=0x00000000010aebcf
- (_Bool)canResignFirstResponder;	// IMP=0x00000000010aeb5f
- (void)tintColorDidChange;	// IMP=0x00000000010aea81
- (_Bool)becomeFirstResponder;	// IMP=0x00000000010ae641
- (_Bool)canBecomeFirstResponder;	// IMP=0x00000000010ae590
- (_Bool)_shouldScrollEnclosingScrollView;	// IMP=0x00000000010ae508
- (void)_keyboardDidShow:(id)arg1;	// IMP=0x00000000010ae4ac
- (void)_scrollSelectionToVisibleInContainingScrollView;	// IMP=0x00000000010ae498
- (void)_scrollSelectionToVisibleInContainingScrollView:(_Bool)arg1;	// IMP=0x00000000010ae41b
- (void)_scrollRect:(struct CGRect)arg1 toVisibleInContainingScrollView:(_Bool)arg2;	// IMP=0x00000000010ae322
- (void)_updateBaselineInformationDependentOnBounds;	// IMP=0x00000000010ae0fa
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;	// IMP=0x00000000010ae07b
- (void)_prepareForFirstIntrinsicContentSizeCalculation;	// IMP=0x00000000010ae03d
- (void)invalidateIntrinsicContentSize;	// IMP=0x00000000010adff2
- (_Bool)_wantsBaselineUpdatingFollowingConstraintsPass;	// IMP=0x00000000010adfca
- (_Bool)_needsDoubleUpdateConstraintsPass;	// IMP=0x00000000010adf88
- (double)_currentPreferredMaxLayoutWidth;	// IMP=0x00000000010adf57
- (id)_layoutDebuggingTitle;	// IMP=0x00000000010adee6
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000010adce6
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;	// IMP=0x00000000010adb81
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000000010ada57
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000010ada45
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;	// IMP=0x00000000010ad57e
- (struct CGSize)_containerSizeForBoundsSize:(struct CGSize)arg1 allowingOverflow:(_Bool)arg2;	// IMP=0x00000000010ad415
- (void)_performLayoutCalculation:(CDUnknownBlockType)arg1 inSize:(struct CGSize)arg2;	// IMP=0x00000000010ad0a0
- (CDStruct_c3b9c2ee)_baselineOffsetsAtSize:(struct CGSize)arg1;	// IMP=0x00000000010acd01
- (_Bool)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize)arg1 oldSize:(struct CGSize)arg2;	// IMP=0x00000000010accf9
- (_Bool)_hasBaseline;	// IMP=0x00000000010accf1
- (double)_baselineOffsetFromBottom;	// IMP=0x00000000010acc56
- (double)_firstBaselineOffsetFromTop;	// IMP=0x00000000010acbbb
- (double)_preferredMaxLayoutWidth;	// IMP=0x00000000010acba9
- (void)_setPreferredMaxLayoutWidth:(double)arg1;	// IMP=0x00000000010acb03
- (void)_resetUsesExplicitPreferredMaxLayoutWidth;	// IMP=0x00000000010acaab
- (struct CGRect)_frameOfTrailingWhitespace;	// IMP=0x00000000010aca8b
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x00000000010ac8d0
- (void)setNeedsDisplay;	// IMP=0x00000000010ac73d
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000010ac651
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000010ac565
- (void)_setFrameOrBounds:(struct CGRect)arg1 fromOldRect:(struct CGRect)arg2 settingAction:(CDUnknownBlockType)arg3;	// IMP=0x00000000010ac11b
- (void)_updateContentSize;	// IMP=0x00000000010abaef
- (void)_updateFrameOfTrailingWhitespace:(struct CGSize)arg1;	// IMP=0x00000000010ab9e9
- (void)_textContainerSizeDidChange:(id)arg1;	// IMP=0x00000000010ab9bb
- (void)_scrollToSelectionIfNeeded;	// IMP=0x00000000010ab8e9
- (void)_scrollToCaretIfNeeded;	// IMP=0x00000000010ab51d
- (void)_invalidateContainerViewSize;	// IMP=0x00000000010ab4ff
- (void)_updateContentContainerView;	// IMP=0x00000000010ab4f9
- (void)layoutSubviews;	// IMP=0x00000000010ab4a3
- (void)_layoutText;	// IMP=0x00000000010ab430
- (void)_setNeedsTextLayout;	// IMP=0x00000000010ab3c1
- (void)setNeedsLayout;	// IMP=0x00000000010ab380
- (void)adjustedContentInsetDidChange;	// IMP=0x00000000010ab33a
- (void)_resyncContainerFrameForNonAutolayoutDeferringSizeToFit:(_Bool)arg1;	// IMP=0x00000000010aae16
- (void)_resyncContainerFrameForNonAutolayout;	// IMP=0x00000000010aae02
- (void)_updateTextContainerSizeAndSizeToFit;	// IMP=0x00000000010aad4b
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;	// IMP=0x00000000010aabc3
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;	// IMP=0x00000000010aaa43
- (void)_scrollViewWillEndDraggingWithVelocity:(struct CGPoint)arg1 targetContentOffset:(struct CGPoint *)arg2;	// IMP=0x00000000010aaa2b
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x00000000010aa9b0
- (void)_textViewContentPaddingDidChange:(id)arg1;	// IMP=0x00000000010aa98f
- (id)bottomContentPadding;	// IMP=0x00000000010aa97a
- (id)topContentPadding;	// IMP=0x00000000010aa965
- (void)_setContentOffsetWithoutRecordingScrollPosition:(struct CGPoint)arg1;	// IMP=0x00000000010aa93a
- (void)_observedTextViewDidChange:(id)arg1;	// IMP=0x00000000010aa8ff
- (unsigned long long)_totalNumberOfTextViewsInLayoutManager;	// IMP=0x00000000010aa789
- (void)_textStorageDidProcessEditing:(id)arg1;	// IMP=0x00000000010aa704
- (id)_canvasView;	// IMP=0x00000000010aa6e7
- (id)_containerView;	// IMP=0x00000000010aa6d2
- (id)_contentView;	// IMP=0x00000000010aa6c9
@property(copy) NSAttributedString *attributedText;
- (void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(struct _NSRange)arg2;	// IMP=0x00000000010aa11b
- (_Bool)_ownsInputAccessoryView;	// IMP=0x00000000010aa04e
@property(retain) UIView *inputAccessoryView;
- (id)_inputController;	// IMP=0x00000000010a9f8b
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (void)dealloc;	// IMP=0x00000000010a9edf
- (void)_populateArchivedSubviews:(id)arg1;	// IMP=0x00000000010a9cd1
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000010a961e
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000010a909c
- (id)initReadonlyAndUnselectableWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;	// IMP=0x00000000010a8ffd
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;	// IMP=0x00000000010a8f6f
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000010a8f5b
- (void)_commonInitWithTextContainer:(id)arg1 isDecoding:(_Bool)arg2 isEditable:(_Bool)arg3 isSelectable:(_Bool)arg4 isDraggable:(_Bool)arg5;	// IMP=0x00000000010a8642
- (id)_activityItemsConfigurationAtLocation:(struct CGPoint)arg1;	// IMP=0x00000000010a856c
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;	// IMP=0x000000000000aad9
- (_Bool)isAccessibilityElementByDefault;	// IMP=0x000000000000aad1
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;	// IMP=0x0000000000c7352f
- (Class)_printFormatterClass;	// IMP=0x0000000000c7351e
- (id)largeContentTitle;	// IMP=0x0000000000c80d60
- (void)endSnapshotSeparation;	// IMP=0x000000000104b260
- (void)addSnapshotSeparation:(double)arg1 withAffinity:(long long)arg2;	// IMP=0x000000000104b15e
- (double)beginSnapshotSeparationOfHeight:(double)arg1 atYOffset:(double)arg2;	// IMP=0x000000000104a7fb
- (struct CGRect)rectInTextContainerForRect:(struct CGRect)arg1;	// IMP=0x000000000104a79b
@property(retain, nonatomic) UIView *uiss_snapshotView;
@property(nonatomic, setter=_setDrawsDebugBaselines:) _Bool _drawsDebugBaselines;
- (void)decodeRestorableStateWithCoder:(id)arg1;	// IMP=0x00000000010bb3b4
- (void)decodeRestorableStateWithCoder:(id)arg1 includingSelectedTextAndDisplayedViewControllers:(_Bool)arg2;	// IMP=0x00000000010baec0
- (void)encodeRestorableStateWithCoder:(id)arg1;	// IMP=0x00000000010baea9
- (void)encodeRestorableStateWithCoder:(id)arg1 includingSelectedTextAndDisplayedViewControllers:(_Bool)arg2;	// IMP=0x00000000010babe2
@property(copy, nonatomic, setter=_setInteractionState:) id _interactionState;
@property(copy, nonatomic) id interactionState;
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 nextToNeighbor:(id)arg3 edge:(int)arg4 attribute:(long long)arg5 multiplier:(double)arg6;	// IMP=0x00000000011ac212
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(_Bool)arg4;	// IMP=0x00000000011ac1a3
- (_Bool)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)arg1;	// IMP=0x00000000011ac194
- (id)_fontInfoForBaselineSpacing;	// IMP=0x00000000011ac182
- (_Bool)_hasFontInfoForVerticalBaselineSpacing;	// IMP=0x00000000011ac16d

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic) __weak id <UITextViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(readonly, nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(copy, nonatomic) UIPasteConfiguration *pasteConfiguration; // @dynamic pasteConfiguration;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

