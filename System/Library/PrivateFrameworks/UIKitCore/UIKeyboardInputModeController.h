//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString, UIKeyboardInputMode, UITextInputMode;
@protocol UIKeyboardInputModeControllerDelegate;

@interface UIKeyboardInputModeController : NSObject
{
    UIKeyboardInputMode *_currentInputMode;	// 8 = 0x8
    NSArray *_inputModesWithoutHardwareSupport;	// 16 = 0x10
    NSArray *_allExtensions;	// 24 = 0x18
    NSArray *_allowedExtensions;	// 32 = 0x20
    _Bool _skipExtensionInputModes;	// 40 = 0x28
    _Bool _excludeExtensionInputModes;	// 41 = 0x29
    _Bool _cacheNeedsRefresh;	// 42 = 0x2a
    int _notifyPasscodeChangedToken;	// 44 = 0x2c
    struct __CFUserNotification *_userNotification;	// 48 = 0x30
    struct __CFRunLoopSource *_userNotificationRunLoopSource;	// 56 = 0x38
    NSString *_newModeForUserNotification;	// 64 = 0x40
    NSObject *_keyboardTagForUserNotification;	// 72 = 0x48
    _Bool _suppressCurrentPublicInputMode;	// 80 = 0x50
    _Bool disableFloatingKeyboardFilter;	// 81 = 0x51
    _Bool _shouldRunContinuousDiscovery;	// 82 = 0x52
    _Bool _disablesUpdateLastUsedInputModeTimer;	// 83 = 0x53
    _Bool _lastInputModeSwitchTriggeredByASCIIToggle;	// 84 = 0x54
    UITextInputMode *_documentInputMode;	// 88 = 0x58
    NSArray *keyboardInputModes;	// 96 = 0x60
    NSArray *keyboardInputModeIdentifiers;	// 104 = 0x68
    NSArray *enabledInputModes;	// 112 = 0x70
    NSArray *normalizedInputModes;	// 120 = 0x78
    NSArray *defaultKeyboardInputModes;	// 128 = 0x80
    NSArray *defaultRawInputModes;	// 136 = 0x88
    NSArray *defaultInputModes;	// 144 = 0x90
    NSArray *defaultNormalizedInputModes;	// 152 = 0x98
    NSArray *suggestedInputModesForSiriLanguage;	// 160 = 0xa0
    UIKeyboardInputMode *_lastUsedInputMode;	// 168 = 0xa8
    NSString *_inputModeContextIdentifier;	// 176 = 0xb0
    NSArray *_additionalTextInputLocales;	// 184 = 0xb8
    id <UIKeyboardInputModeControllerDelegate> _delegate;	// 192 = 0xc0
    NSArray *_userSelectableKeyboardInputModes;	// 200 = 0xc8
    NSArray *_userSelectableKeyboardInputModeIdentifiers;	// 208 = 0xd0
    UIKeyboardInputMode *_nextInputModeToUse;	// 216 = 0xd8
    UIKeyboardInputMode *_currentUsedInputMode;	// 224 = 0xe0
    id _extensionMatchingContext;	// 232 = 0xe8
}

+ (id)ASCIICapableInputModeIdentifierForPreferredLanguages;	// IMP=0x00000000008dc528
+ (id)inputModeIdentifierForPreferredLanguages:(id)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00000000008dc2e0
+ (_Bool)dictationInputModeIsFunctional;	// IMP=0x00000000008d7049
+ (id)disallowedDictationLanguagesForDeviceLanguage;	// IMP=0x00000000008d65d1
+ (id)sharedInputModeController;	// IMP=0x00000000008d3cd5
@property(retain, nonatomic) id extensionMatchingContext; // @synthesize extensionMatchingContext=_extensionMatchingContext;
@property(retain, nonatomic) UIKeyboardInputMode *currentUsedInputMode; // @synthesize currentUsedInputMode=_currentUsedInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *nextInputModeToUse; // @synthesize nextInputModeToUse=_nextInputModeToUse;
@property(retain) NSArray *userSelectableKeyboardInputModeIdentifiers; // @synthesize userSelectableKeyboardInputModeIdentifiers=_userSelectableKeyboardInputModeIdentifiers;
@property(retain) NSArray *userSelectableKeyboardInputModes; // @synthesize userSelectableKeyboardInputModes=_userSelectableKeyboardInputModes;
@property(nonatomic) _Bool lastInputModeSwitchTriggeredByASCIIToggle; // @synthesize lastInputModeSwitchTriggeredByASCIIToggle=_lastInputModeSwitchTriggeredByASCIIToggle;
@property(nonatomic) _Bool disablesUpdateLastUsedInputModeTimer; // @synthesize disablesUpdateLastUsedInputModeTimer=_disablesUpdateLastUsedInputModeTimer;
@property(nonatomic) id <UIKeyboardInputModeControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldRunContinuousDiscovery; // @synthesize shouldRunContinuousDiscovery=_shouldRunContinuousDiscovery;
@property(copy, nonatomic) NSArray *additionalTextInputLocales; // @synthesize additionalTextInputLocales=_additionalTextInputLocales;
@property(copy, nonatomic) NSString *inputModeContextIdentifier; // @synthesize inputModeContextIdentifier=_inputModeContextIdentifier;
@property(retain, nonatomic) UIKeyboardInputMode *lastUsedInputMode; // @synthesize lastUsedInputMode=_lastUsedInputMode;
@property(nonatomic) _Bool disableFloatingKeyboardFilter; // @synthesize disableFloatingKeyboardFilter;
@property(retain) NSArray *suggestedInputModesForSiriLanguage; // @synthesize suggestedInputModesForSiriLanguage;
@property(readonly, nonatomic) NSArray *allowedExtensions; // @synthesize allowedExtensions=_allowedExtensions;
@property(retain) NSArray *defaultNormalizedInputModes; // @synthesize defaultNormalizedInputModes;
@property(retain) NSArray *defaultInputModes; // @synthesize defaultInputModes;
@property(copy, nonatomic) NSArray *defaultRawInputModes; // @synthesize defaultRawInputModes;
@property(retain) NSArray *defaultKeyboardInputModes; // @synthesize defaultKeyboardInputModes;
@property(retain) NSArray *normalizedInputModes; // @synthesize normalizedInputModes;
@property(retain) NSArray *enabledInputModes; // @synthesize enabledInputModes;
@property(retain) NSArray *keyboardInputModeIdentifiers; // @synthesize keyboardInputModeIdentifiers;
@property(retain) NSArray *keyboardInputModes; // @synthesize keyboardInputModes;
@property(retain, nonatomic) UITextInputMode *documentInputMode; // @synthesize documentInputMode=_documentInputMode;
- (id)supportedFullModesForHardwareKeyboard:(id)arg1 countryCode:(id)arg2 activeModes:(id)arg3 matchedMode:(id *)arg4;	// IMP=0x00000000008de92b
- (void)handleSpecificHardwareKeyboard:(id)arg1;	// IMP=0x00000000008de493
- (void)getHardwareKeyboardLanguage:(id *)arg1 countryCode:(id *)arg2;	// IMP=0x00000000008de3d4
- (void)releaseAddKeyboardNotification;	// IMP=0x00000000008de37b
- (void)didAcceptAddKeyboardInputMode;	// IMP=0x00000000008de228
- (void)showAddKeyboardAlertForInputModeIdentifier:(id)arg1;	// IMP=0x00000000008dddcf
- (id)fullInputModeFromIdentifier:(id)arg1 hardwareKeyboardLanguage:(id)arg2;	// IMP=0x00000000008ddd2b
- (id)inputModeToAddForKeyboardLanguage:(id)arg1 countryCode:(id)arg2 activeModes:(id)arg3;	// IMP=0x00000000008dd992
- (id)hardwareLayoutToUseForInputMode:(id)arg1 hardwareKeyboardLanguage:(id)arg2 countryCode:(id)arg3;	// IMP=0x00000000008dd7e4
- (id)hardwareLayoutToUseForInputMode:(id)arg1;	// IMP=0x00000000008dd747
- (void)handleLastUsedInputMode:(id)arg1 withNewInputMode:(id)arg2;	// IMP=0x00000000008dd5f8
- (id)supportedInputModesFromArray:(id)arg1;	// IMP=0x00000000008dd475
- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000008dd463
- (void)startDictationConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000008dd353
- (void)performWithForcedExtensionInputModes:(CDUnknownBlockType)arg1;	// IMP=0x00000000008dd332
- (void)performWithoutExtensionInputModes:(CDUnknownBlockType)arg1;	// IMP=0x00000000008dd301
- (void)forceDictationReturnToKeyboardInputMode;	// IMP=0x00000000008dd2cf
- (void)stopDictationAndResignFirstResponder;	// IMP=0x00000000008dd29d
- (void)switchToDictationInputModeWithOptions:(id)arg1;	// IMP=0x00000000008dd190
- (void)stopDictation;	// IMP=0x00000000008dd13f
- (void)switchToDictationInputMode;	// IMP=0x00000000008dd12b
- (void)switchToCurrentSystemInputMode;	// IMP=0x00000000008dd0f5
- (void)updateCurrentAndNextInputModes;	// IMP=0x00000000008dcfa3
- (void)updateLastUsedInputMode:(id)arg1;	// IMP=0x00000000008dcde7
- (id)inputModeForASCIIToggleWithTraits:(id)arg1;	// IMP=0x00000000008dcce1
- (id)inputModeLastUsedForLanguage:(id)arg1 includingExtensions:(_Bool)arg2;	// IMP=0x00000000008dccac
- (id)inputModeLastUsedForLanguage:(id)arg1;	// IMP=0x00000000008dcc95
- (id)inputModeIdentifierLastUsedForLanguage:(id)arg1 includingExtensions:(_Bool)arg2;	// IMP=0x00000000008dc5c2
- (id)inputModeIdentifierLastUsedForLanguage:(id)arg1;	// IMP=0x00000000008dc5ab
- (id)nextInputModeInPreferenceListForTraits:(id)arg1;	// IMP=0x00000000008dc2c9
- (id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(_Bool)arg2 skipEmoji:(_Bool)arg3;	// IMP=0x00000000008dc134
- (id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(_Bool)arg2;	// IMP=0x00000000008dc11f
- (id)nextInputModeToUseForTraits:(id)arg1;	// IMP=0x00000000008dc108
- (void)clearNextInputModeToUse;	// IMP=0x00000000008dc0f4
- (id)nextInputModeToUseForTraits:(id)arg1 updatePreference:(_Bool)arg2;	// IMP=0x00000000008dbf8f
- (void)_setCurrentAndNextInputModePreference;	// IMP=0x00000000008dbe68
- (id)nextInputModeFromList:(id)arg1 withFilter:(unsigned long long)arg2 withTraits:(id)arg3;	// IMP=0x00000000008db858
- (id)extensionInputModes;	// IMP=0x00000000008db68d
- (_Bool)isLockscreenPasscodeKeyboard;	// IMP=0x00000000008db603
- (_Bool)verifyKeyboardExtensionsWithApp;	// IMP=0x00000000008db599
- (_Bool)deviceStateIsLocked;	// IMP=0x00000000008db591
- (id)_MCFilteredExtensionIdentifiers;	// IMP=0x00000000008db46a
- (void)_removeInputModes:(id)arg1;	// IMP=0x00000000008db203
- (_Bool)_mayContainExtensionInputModes;	// IMP=0x00000000008db1c5
- (void)_beginContinuousDiscoveryIfNeeded;	// IMP=0x00000000008dace5
- (id)_allExtensionsFromMatchingExtensions:(id)arg1;	// IMP=0x00000000008da97b
- (void)_clearAllExtensionsIfNeeded;	// IMP=0x00000000008da8d0
- (void)_clearAllExtensions;	// IMP=0x00000000008da776
- (void)didEnterBackground:(id)arg1;	// IMP=0x00000000008da6ea
- (void)keyboardsPreferencesChanged:(id)arg1;	// IMP=0x00000000008da6d8
- (void)willEnterForeground:(id)arg1;	// IMP=0x00000000008da6aa
- (void)loadSuggestedInputModesForSiriLanguage;	// IMP=0x00000000008da31c
- (id)suggestedInputModesForPreferredLanguages;	// IMP=0x00000000008d9fd5
- (id)suggestedInputModesForLocales:(id)arg1;	// IMP=0x00000000008d97dc
- (id)suggestedInputModesForCurrentLocale;	// IMP=0x00000000008d9332
- (id)suggestedInputModesForCurrentHardwareKeyboardAndSuggestedInputModes:(id)arg1;	// IMP=0x00000000008d9020
- (id)suggestedInputModesForHardwareKeyboardLanguage:(id)arg1 countryCode:(id)arg2 inputModes:(id)arg3;	// IMP=0x00000000008d8f70
- (id)suggestedInputModesForCurrentLocale:(_Bool)arg1 fallbackToDefaultInputModes:(_Bool)arg2;	// IMP=0x00000000008d8e62
- (id)defaultEnabledInputModesForCurrentLocale:(_Bool)arg1;	// IMP=0x00000000008d8aa7
- (id)appendPasscodeInputModes:(id)arg1;	// IMP=0x00000000008d87c9
- (void)updateDefaultInputModesIfNecessaryForIdiom;	// IMP=0x00000000008d85e2
- (id)fallbackCurrentInputModeForFilteredInputModeIdentifier:(id)arg1 fromInputModeIdentifiers:(id)arg2;	// IMP=0x00000000008d8533
- (id)fallbackCurrentInputModeForFilteredInputMode:(id)arg1 fromInputModes:(id)arg2;	// IMP=0x00000000008d83ab
- (id)filteredPadInputModesFromInputModes:(id)arg1 withRules:(id)arg2;	// IMP=0x00000000008d7ff8
- (id)inputModeByReplacingSoftwareLayoutWithSoftwareLayout:(id)arg1 inInputMode:(id)arg2;	// IMP=0x00000000008d7f61
- (id)filteredTVInputModesFromInputModes:(id)arg1;	// IMP=0x00000000008d7b4d
- (id)filteredInputModesForSiriLanguageFromInputModes:(id)arg1;	// IMP=0x00000000008d7864
- (_Bool)currentLocaleRequiresExtendedSetup;	// IMP=0x00000000008d77c5
- (void)updateCurrentInputMode:(id)arg1;	// IMP=0x00000000008d768e
- (void)_setCurrentInputMode:(id)arg1 force:(_Bool)arg2;	// IMP=0x00000000008d75a1
@property(retain) UIKeyboardInputMode *currentInputMode;
- (id)getDictationSLSLanguagesEnabled;	// IMP=0x00000000008d755a
- (void)setDictationSLSLanguagesEnabled:(id)arg1;	// IMP=0x00000000008d7464
@property(readonly, nonatomic) _Bool containsDictationSupportedInputMode;
@property(readonly, nonatomic) _Bool containsEmojiInputMode;
- (void)changePreferredEmojiSearchInputModeForInputDelegate:(id)arg1;	// IMP=0x00000000008d7062
- (void)updateEnabledDictationAndSLSLanguagesWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000008d668b
- (id)updateEnabledDictationLanguages:(_Bool)arg1;	// IMP=0x00000000008d63ab
- (_Bool)isDictationLanguageEnabled:(id)arg1;	// IMP=0x00000000008d62ae
@property(readonly, nonatomic) NSArray *enabledDictationLanguages;
@property(readonly, nonatomic) NSArray *activeDictationLanguages;
- (id)keyboardLanguageForDictationLanguage:(id)arg1;	// IMP=0x00000000008d5c36
- (id)defaultDictationLanguages:(id)arg1;	// IMP=0x00000000008d5bc6
- (id)suggestedDictationLanguagesForDeviceLanguage;	// IMP=0x00000000008d58a2
@property(readonly, nonatomic) NSArray *activeDictationSupportedInputModeIdentifiers;
@property(readonly, nonatomic) UIKeyboardInputMode *lastUsedInputModeForCurrentContext;
@property(readonly, nonatomic) UIKeyboardInputMode *currentLinguisticInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *currentPublicInputMode;
- (id)textInputModeForResponder:(id)arg1;	// IMP=0x00000000008d5518
- (void)_inputModeChangedWhileContextTracked;	// IMP=0x00000000008d5249
- (void)_trackInputModeIfNecessary:(id)arg1;	// IMP=0x00000000008d4f86
- (id)lastUsedInputModeForTextInputMode:(id)arg1;	// IMP=0x00000000008d4bb8
- (id)currentSystemInputModeExcludingEmoji:(_Bool)arg1;	// IMP=0x00000000008d488f
@property(readonly, nonatomic) UIKeyboardInputMode *currentSystemInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *hardwareInputMode;
- (id)_systemInputModePassingLanguageTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000008d44a4
- (id)_systemInputModePassingTest:(CDUnknownBlockType)arg1;	// IMP=0x00000000008d42e2
@property(nonatomic) UIKeyboardInputMode *currentInputModeInPreference;
@property(readonly) NSArray *activeUserSelectableInputModeIdentifiers;
- (id)activeUserSelectableInputModes;	// IMP=0x00000000008d3fe9
@property(readonly) NSArray *activeInputModeIdentifiers;
- (id)activeInputModes;	// IMP=0x00000000008d3f8d
- (id)inputModeWithIdentifier:(id)arg1;	// IMP=0x00000000008d3f74
- (id)init;	// IMP=0x00000000008d3d1a
- (void)dealloc;	// IMP=0x00000000008d3a80
- (_Bool)identifierIsValidSystemInputMode:(id)arg1;	// IMP=0x00000000008e0ab8
- (id)inputModesFromIdentifiers:(id)arg1;	// IMP=0x00000000008e0947
- (id)identifiersFromInputModes:(id)arg1;	// IMP=0x00000000008e07e6
@property(readonly) NSArray *enabledInputModeLanguages;
@property(readonly) NSArray *normalizedEnabledInputModeIdentifiers;
@property(readonly) NSArray *enabledInputModeIdentifiers;
- (void)updateUserSelectableInputModes;	// IMP=0x00000000008e0438
- (id)userSelectableInputModeIdentifiersFromInputModeIdentifiers:(id)arg1;	// IMP=0x00000000008e029f
- (id)userSelectableInputModesFromInputModes:(id)arg1;	// IMP=0x00000000008dff7f
- (id)enabledInputModeIdentifiers:(_Bool)arg1;	// IMP=0x00000000008df63c
- (id)inputModesByAppendingApplicationLanguagesToInputModes:(id)arg1;	// IMP=0x00000000008df1fb
- (void)saveDeviceUnlockPasscodeInputModes;	// IMP=0x00000000008df19e
@property(readonly) NSArray *inputModesWithoutHardwareSupport;
@property(readonly) NSArray *supportedInputModeIdentifiers;

@end

