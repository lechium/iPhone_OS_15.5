//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDate, NSDateComponents, NSNumberFormatter, NSString, UIColor, UIFont, _UIDatePickerView;

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode : NSObject
{
    NSDateComponents *_selectedDateComponents;	// 8 = 0x8
    NSDateComponents *_baseDateComponents;	// 16 = 0x10
    unsigned long long *_elements;	// 24 = 0x18
    long long _yearsSinceBaseDate;	// 32 = 0x20
    struct _NSRange _maxDayRange;	// 40 = 0x28
    struct _NSRange _maxMonthRange;	// 56 = 0x38
    NSString *_localizedFormatString;	// 72 = 0x48
    NSArray *_dateFormatters;	// 80 = 0x50
    UIColor *_todayTextColor;	// 88 = 0x58
    UIFont *_amPmFont;	// 96 = 0x60
    UIFont *_font;	// 104 = 0x68
    UIFont *_defaultTimeFont;	// 112 = 0x70
    NSString *_amString;	// 120 = 0x78
    NSString *_pmString;	// 128 = 0x80
    NSDateComponents *_todayDateComponents;	// 136 = 0x88
    NSNumberFormatter *_formatter;	// 144 = 0x90
    _UIDatePickerView *_datePickerView;	// 152 = 0x98
    _Bool _isUsingJapaneseCalendar;	// 160 = 0xa0
    long long _minuteInterval;	// 168 = 0xa8
    double _todaySinceReferenceDate;	// 176 = 0xb0
    NSDate *_minimumDate;	// 184 = 0xb8
    NSDateComponents *_minimumDateComponents;	// 192 = 0xc0
    NSDate *_maximumDate;	// 200 = 0xc8
    NSDateComponents *_maximumDateComponents;	// 208 = 0xd0
    unsigned long long _numberOfComponents;	// 216 = 0xd8
    NSDate *_baseDate;	// 224 = 0xe0
    NSDate *_originatingDate;	// 232 = 0xe8
}

+ (unsigned long long)extractableCalendarUnits;	// IMP=0x0000000000c4cc4f
+ (id)_datePickerModeWithFormatString:(id)arg1 datePickerView:(id)arg2;	// IMP=0x0000000000c4b584
+ (id)_datePickerModeWithMode:(long long)arg1 datePickerView:(id)arg2;	// IMP=0x0000000000c4b490
+ (long long)datePickerMode;	// IMP=0x0000000000c4b410
+ (id)newDateFromGregorianYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 timeZone:(id)arg4;	// IMP=0x0000000000c4b314
+ (void)initialize;	// IMP=0x0000000000c4b298
- (void).cxx_destruct;	// IMP=0x0000000000c50073
@property(retain, nonatomic) NSDateComponents *selectedDateComponents; // @synthesize selectedDateComponents=_selectedDateComponents;
@property(retain, nonatomic) NSDate *originatingDate; // @synthesize originatingDate=_originatingDate;
@property(nonatomic) long long yearsSinceBaseDate; // @synthesize yearsSinceBaseDate=_yearsSinceBaseDate;
@property(retain, nonatomic) NSDate *baseDate; // @synthesize baseDate=_baseDate;
@property(retain, nonatomic) NSString *localizedFormatString; // @synthesize localizedFormatString=_localizedFormatString;
@property(nonatomic) unsigned long long numberOfComponents; // @synthesize numberOfComponents=_numberOfComponents;
@property(nonatomic) __weak _UIDatePickerView *datePickerView; // @synthesize datePickerView=_datePickerView;
@property(readonly, nonatomic) NSDateComponents *maximumDateComponents; // @synthesize maximumDateComponents=_maximumDateComponents;
@property(readonly, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_maximumDate;
@property(readonly, nonatomic) NSDateComponents *minimumDateComponents; // @synthesize minimumDateComponents=_minimumDateComponents;
@property(readonly, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_minimumDate;
@property(nonatomic) double todaySinceReferenceDate; // @synthesize todaySinceReferenceDate=_todaySinceReferenceDate;
@property(nonatomic) long long minuteInterval; // @synthesize minuteInterval=_minuteInterval;
- (void)updateEnabledStateOfViewForRow:(long long)arg1 inComponent:(long long)arg2;	// IMP=0x0000000000c4fea8
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;	// IMP=0x0000000000c4fe28
- (_Bool)_shouldEnableValueForRow:(long long)arg1 column:(long long)arg2;	// IMP=0x0000000000c4fd37
- (_Bool)_scrollingAnyColumnExcept:(int)arg1;	// IMP=0x0000000000c4fcc0
- (_Bool)_isComponentScrolling:(long long)arg1;	// IMP=0x0000000000c4fc38
- (_Bool)areValidDateComponents:(id)arg1 comparingUnits:(long long)arg2;	// IMP=0x0000000000c4fad0
- (id)viewForRow:(long long)arg1 inComponent:(long long)arg2 reusingView:(id)arg3;	// IMP=0x0000000000c4f64c
- (void)updateDateForNewDateRange;	// IMP=0x0000000000c4f315
- (id)dateComponentsByRestrictingSelectedComponents:(id)arg1 withLastManipulatedColumn:(long long)arg2;	// IMP=0x0000000000c4ef16
- (_Bool)_monthExists:(long long)arg1 inYear:(long long)arg2;	// IMP=0x0000000000c4edf1
- (long long)_numberOfDaysInDateComponents:(id)arg1;	// IMP=0x0000000000c4ec83
- (void)_updateSelectedDateComponentsWithNewValueInComponent:(long long)arg1 usingSelectionBarValue:(_Bool)arg2;	// IMP=0x0000000000c4e705
- (void)resetSelectedDateComponentsWithValuesUnderSelectionBars;	// IMP=0x0000000000c4e6e4
- (void)updateSelectedDateComponentsWithNewValueInComponent:(long long)arg1;	// IMP=0x0000000000c4e6d0
- (void)loadDate:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000c4e3b8
- (long long)validateValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2;	// IMP=0x0000000000c4e3af
- (long long)rowForValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2 currentRow:(long long)arg3;	// IMP=0x0000000000c4e259
- (long long)valueForDate:(id)arg1 dateComponents:(id)arg2 calendarUnit:(unsigned long long)arg3;	// IMP=0x0000000000c4e1fa
- (long long)rowForDate:(id)arg1 dateComponents:(id)arg2 component:(long long)arg3 currentRow:(long long)arg4;	// IMP=0x0000000000c4e153
- (struct _NSRange)rangeForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4e0d0
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4e064
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;	// IMP=0x0000000000c4deed
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4de6d
- (id)dateForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;	// IMP=0x0000000000c4ddf3
- (long long)valueForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;	// IMP=0x0000000000c4dcbb
- (long long)eraForYearRow:(long long)arg1;	// IMP=0x0000000000c4dc1b
- (long long)yearForRow:(long long)arg1;	// IMP=0x0000000000c4db7b
- (long long)monthForRow:(long long)arg1;	// IMP=0x0000000000c4db65
- (long long)dayForRow:(long long)arg1;	// IMP=0x0000000000c4db4f
- (long long)hourForRow:(long long)arg1;	// IMP=0x0000000000c4db0f
- (long long)minuteForRow:(long long)arg1;	// IMP=0x0000000000c4dab4
- (long long)secondForRow:(long long)arg1;	// IMP=0x0000000000c4da59
- (id)_dateForYearRow:(long long)arg1;	// IMP=0x0000000000c4d99f
- (id)_dateByEnsuringValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2;	// IMP=0x0000000000c4d5e1
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4d559
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4d4d1
- (long long)_incrementForStaggeredTimeIntervals;	// IMP=0x0000000000c4d460
- (double)totalComponentWidthWithFont:(id)arg1;	// IMP=0x0000000000c4d398
@property(readonly, nonatomic) double totalComponentWidth; // @dynamic totalComponentWidth;
- (void)resetComponentWidths;	// IMP=0x0000000000c4d2c4
- (void)noteCalendarChanged;	// IMP=0x0000000000c4d104
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4d084
- (long long)numberOfRowsInComponent:(long long)arg1;	// IMP=0x0000000000c4d053
- (long long)componentForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4cfe8
- (unsigned long long)calendarUnitForComponent:(long long)arg1;	// IMP=0x0000000000c4cfac
@property(readonly, nonatomic) long long displayedCalendarUnits;
- (void)fixUpElementsForRTL;	// IMP=0x0000000000c4cdca
@property(nonatomic) unsigned long long *elements;
@property(readonly, nonatomic, getter=isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;	// IMP=0x0000000000c4cbce
- (double)widthForComponent:(long long)arg1 maxWidth:(double)arg2;	// IMP=0x0000000000c4cac1
@property(readonly, nonatomic) UIColor *todayTextColor;
@property(readonly, nonatomic) double rowHeight;
@property(readonly, nonatomic) UIFont *amPmFont;
@property(readonly, nonatomic) UIFont *defaultTimeFont;
@property(readonly, nonatomic) UIFont *sizedFont;
@property(readonly, nonatomic) UIFont *font;
- (id)fontForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4c764
@property(readonly, nonatomic) NSString *pmString;
@property(readonly, nonatomic) NSString *amString;
@property(retain, nonatomic) NSDateComponents *baseDateComponents;
- (void)clearBaseDate;	// IMP=0x0000000000c4c35c
@property(retain, nonatomic) NSDateComponents *todayDateComponents;
- (id)dateFormatterForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000c4bdf3
@property(readonly, nonatomic) long long datePickerMode;
@property(readonly, nonatomic, getter=is24Hour) _Bool is24Hour; // @dynamic is24Hour;
- (double)componentWidthForTwoDigitCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;	// IMP=0x0000000000c4bb17
- (void)_shouldReset:(id)arg1;	// IMP=0x0000000000c4ba8d
- (id)timeZone;	// IMP=0x0000000000c4ba13
- (id)locale;	// IMP=0x0000000000c4b999
- (id)calendarForFormatters;	// IMP=0x0000000000c4b91f
- (id)calendar;	// IMP=0x0000000000c4b8a5
- (long long)_yearlessYearForMonth:(long long)arg1;	// IMP=0x0000000000c4b800
- (void)dealloc;	// IMP=0x0000000000c4b76b
- (id)init;	// IMP=0x0000000000c4b60e

@end

