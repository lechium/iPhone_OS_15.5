//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/UIAdaptivePresentationControllerDelegate-Protocol.h>
#import <UIKitCore/UIDictationConnectionDelegate-Protocol.h>
#import <UIKitCore/UIDictationConnectionTokenFilterProtocol-Protocol.h>
#import <UIKitCore/_UIDictationPrivacySheetControllerDelegate-Protocol.h>
#import <UIKitCore/_UITouchPhaseChangeDelegate-Protocol.h>

@class AFAnalyticsTurnBasedInstrumentationContext, CADisplayLink, NSArray, NSDictionary, NSMutableArray, NSNumber, NSString, NSTimer, UIDictationConnection, UIDictationConnectionPreferences, UIDictationInputModeOptions, UIDictationStreamingOperations, UIKeyboardInputMode, UIWindow, _UIDictationPrivacySheetController, _UIDictationTelephonyMonitor, _UITapTapHoldGestureRecognizer, _UIVoiceCommandButtonTapGestureRecognizer;

__attribute__((visibility("hidden")))
@interface UIDictationController : NSObject <UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol, UIAdaptivePresentationControllerDelegate, _UIDictationPrivacySheetControllerDelegate, _UITouchPhaseChangeDelegate>
{
    UIDictationConnection *_dictationConnection;	// 8 = 0x8
    UIDictationConnectionPreferences *_preferences;	// 16 = 0x10
    NSTimer *_recordingLimitTimer;	// 24 = 0x18
    _Bool _connectionWasAlreadyAliveForStatisticsLogging;	// 32 = 0x20
    UIDictationStreamingOperations *_streamingOperations;	// 40 = 0x28
    NSString *_language;	// 48 = 0x30
    _Bool _recievingResults;	// 56 = 0x38
    _Bool _streamingAnimationActive;	// 57 = 0x39
    double _lastAnimationUpdateTimeStamp;	// 64 = 0x40
    CDUnknownBlockType _finalResultsOperation;	// 72 = 0x48
    CADisplayLink *_streamingAnimationDisplayLink;	// 80 = 0x50
    _Bool cancelledByWaitingForLocalResults;	// 88 = 0x58
    long long _updatingDocument;	// 96 = 0x60
    _Bool _deferredCancellationRequested;	// 104 = 0x68
    _Bool _isOfflineMetricsSessionActive;	// 105 = 0x69
    _Bool _didUseOfflineDictation;	// 106 = 0x6a
    long long _lastOfflineDictationMetricEvent;	// 112 = 0x70
    _UIDictationTelephonyMonitor *_monitor;	// 120 = 0x78
    NSString *_prefixTextForStart;	// 128 = 0x80
    NSString *_selectionTextForStart;	// 136 = 0x88
    NSString *_postfixTextForStart;	// 144 = 0x90
    _Bool _hasDictated;	// 152 = 0x98
    NSDictionary *_selectedAttributesForDictation;	// 160 = 0xa0
    CDUnknownBlockType _privacySheetDismissalHandler;	// 168 = 0xa8
    int _dictationInputModeNotifierToken;	// 176 = 0xb0
    long long _currentShortcutType;	// 184 = 0xb8
    _UITapTapHoldGestureRecognizer *_hardwareShortcutRecognizer;	// 192 = 0xc0
    _UIVoiceCommandButtonTapGestureRecognizer *_hardwareVoiceCommandKeyRecognizer;	// 200 = 0xc8
    _Bool _prevForceDisplayOverridePlaceholder;	// 208 = 0xd0
    struct _NSRange _relativeRangeBefore;	// 216 = 0xd8
    _Bool _performingStreamingEditingOperation;	// 232 = 0xe8
    _Bool _discardNextHypothesis;	// 233 = 0xe9
    _Bool _hasPreheated;	// 234 = 0xea
    _Bool _logAppEnterBackground;	// 235 = 0xeb
    _Bool _shouldStayInDictationInputMode;	// 236 = 0xec
    _Bool _sendButtonPressedDuringDictation;	// 237 = 0xed
    _Bool _hasInsertedAtLeastOneSerializedDictationResult;	// 238 = 0xee
    _Bool _didToggleSoftwareKeyboardVisibleForDictation;	// 239 = 0xef
    _Bool _wantsAvailabilityMonitoringWhenAppActive;	// 240 = 0xf0
    _Bool _selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 241 = 0xf1
    _Bool _selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;	// 242 = 0xf2
    _Bool _localSpeechRecognitionForced;	// 243 = 0xf3
    _Bool _secureOfflineOnlySpeechRecognition;	// 244 = 0xf4
    _Bool _ignoreFinalizePhrases;	// 245 = 0xf5
    _Bool _detectingUtterances;	// 246 = 0xf6
    _Bool _finalizingRecognizedUtterance;	// 247 = 0xf7
    _Bool _hasCheckedForLeadingSpaceOnce;	// 248 = 0xf8
    _Bool _selectionStartIsStartOfParagraph;	// 249 = 0xf9
    unsigned short _initialPreviousCharacterForAsyncDelegate;	// 250 = 0xfa
    unsigned short _initialCharacterAfterSelectionForAsyncDelegate;	// 252 = 0xfc
    unsigned short _previousCharacter;	// 254 = 0xfe
    NSString *_activationIdentifier;	// 256 = 0x100
    NSString *_smartLanguageSelectionOverrideLanguage;	// 264 = 0x108
    NSMutableArray *_pendingEdits;	// 272 = 0x110
    NSString *_previousHypothesis;	// 280 = 0x118
    NSString *_lastHypothesis;	// 288 = 0x120
    NSString *_targetHypothesis;	// 296 = 0x128
    UIWindow *_dictationPresenterWindow;	// 304 = 0x130
    unsigned long long _reasonType;	// 312 = 0x138
    NSString *_lastRecognitionText;	// 320 = 0x140
    id _lastCorrectionIdentifier;	// 328 = 0x148
    NSString *_interactionIdentifier;	// 336 = 0x150
    NSString *_lastMessageKeyboardLanguage;	// 344 = 0x158
    UIKeyboardInputMode *_currentInputModeForDictation;	// 352 = 0x160
    UIKeyboardInputMode *_keyboardInputModeToReturn;	// 360 = 0x168
    NSTimer *_idleTimerResetTimer;	// 368 = 0x170
    _UIDictationPrivacySheetController *_dictationPrivacySheetController;	// 376 = 0x178
    UIDictationInputModeOptions *_inputModeOptions;	// 384 = 0x180
    NSString *_detectedLanguage;	// 392 = 0x188
    NSArray *_dictationLanguages;	// 400 = 0x190
    NSString *_initialDictationLanguage;	// 408 = 0x198
    NSString *_fallbackDictationLanguage;	// 416 = 0x1a0
    unsigned long long _dictationSourceType;	// 424 = 0x1a8
    NSString *_currentKeyboardPrimaryLanguage;	// 432 = 0x1b0
    unsigned long long _stateHandler;	// 440 = 0x1b8
    NSString *_modelInfo;	// 448 = 0x1c0
    AFAnalyticsTurnBasedInstrumentationContext *_currentInstrumentationContext;	// 456 = 0x1c8
    struct _NSRange _insertionRange;	// 464 = 0x1d0
}

+ (unsigned long long)specificReasonTypeMicButtonOnKeyboardWithInputSwitcher;	// IMP=0x0000000000a03dd5
+ (unsigned long long)specificReasonTypeMicButtonOnKeyboard;	// IMP=0x0000000000a03d93
+ (_Bool)isInputDelegateSafariAddressBar;	// IMP=0x0000000000a038f7
+ (_Bool)shouldPreferOnDeviceRecognition;	// IMP=0x0000000000a037ff
+ (_Bool)shouldPreferOnlineRecognition;	// IMP=0x0000000000a0378a
+ (void)instrumentationDictationAlternativeSelectedWithInstrumentationContext:(id)arg1 originalText:(id)arg2 replacementText:(id)arg3 replacementIndex:(unsigned long long)arg4 alternativesAvailableCount:(unsigned long long)arg5 dictationLanguage:(id)arg6;	// IMP=0x0000000000a03548
+ (void)instrumentationDictationAlternativesViewedWithInstrumentationContext:(id)arg1 alternatives:(id)arg2 dictationLanguage:(id)arg3;	// IMP=0x0000000000a032d5
+ (int)UIDictationStartStopReasonToInstrumentationDictationEndPointType:(unsigned long long)arg1;	// IMP=0x0000000000a032b8
+ (int)UIDictationStartStopReasonToInstrumentationInvocationSourceType:(unsigned long long)arg1;	// IMP=0x0000000000a0329b
+ (id)UIDictationInstrumentaionLocalIdentifierWithLocalString:(id)arg1;	// IMP=0x0000000000a0315b
+ (id)activeSLSDictationLanguages;	// IMP=0x0000000000a01929
+ (id)whitelistedDictationDictionariesFromMetadataDictionaries:(id)arg1;	// IMP=0x0000000000a0168d
+ (id)removeTextIfNeeded:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000a0160c
+ (id)removeTextIfNeeded:(id)arg1;	// IMP=0x0000000000a015a7
+ (_Bool)shouldRemoveTextEntries;	// IMP=0x0000000000a01592
+ (_Bool)canShareDictationData;	// IMP=0x0000000000a014b1
+ (_Bool)shouldRemoveTextEntries:(id)arg1;	// IMP=0x0000000000a01412
+ (id)whitelistedDictationDictionaryFromMetadata:(id)arg1;	// IMP=0x0000000000a011f1
+ (id)whitelistedDictationMetadataKeys;	// IMP=0x0000000000a0110d
+ (id)dictionaryWithTextEntriesRemoved:(id)arg1;	// IMP=0x0000000000a00f13
+ (id)arrayWithTextEntriesRemoved:(id)arg1;	// IMP=0x0000000000a00ce4
+ (id)textRelatedMetadataKeys;	// IMP=0x0000000000a00c49
+ (_Bool)isDictationSearchBarButtonVisible;	// IMP=0x0000000000a00b93
+ (void)poppedLastStreamingOperation;	// IMP=0x00000000009ff6a0
+ (_Bool)usingTypeAndTalk;	// IMP=0x00000000009ff698
+ (id)stringForViewMode:(int)arg1;	// IMP=0x00000000009ff614
+ (id)stringForState:(int)arg1;	// IMP=0x00000000009ff59b
+ (void)logDictationString:(id)arg1;	// IMP=0x00000000009ff595
+ (void)didBeginEditingInTextView:(id)arg1;	// IMP=0x00000000009ff4ea
+ (id)streamingHypothesisForPhrases:(id)arg1;	// IMP=0x00000000009f9bc8
+ (_Bool)dictationInfoIsOnScreen;	// IMP=0x00000000009f608a
+ (id)slsDictationLanguages;	// IMP=0x00000000009f3f6e
+ (_Bool)_applicationIsActive;	// IMP=0x00000000009f3e5d
+ (id)activeConnection;	// IMP=0x00000000009f337a
+ (int)viewMode;	// IMP=0x00000000009f0d87
+ (_Bool)starkScreenExists;	// IMP=0x00000000009f0d0d
+ (_Bool)remoteCanDictateCurrentInputMode;	// IMP=0x00000000009f0c4a
+ (void)updateLandingView;	// IMP=0x00000000009f0b50
+ (void)performOperations:(CDUnknownBlockType)arg1 keyboardShifted:(_Bool)arg2;	// IMP=0x00000000009f0b2b
+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4 useServerCapitalization:(_Bool)arg5;	// IMP=0x00000000009f0808
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;	// IMP=0x00000000009f0633
+ (void)remoteMicrophoneCapabilityChanged;	// IMP=0x00000000009f05dc
+ (void)siriPreferencesChanged;	// IMP=0x00000000009f054b
+ (void)applicationDidEnterBackgroundNotification;	// IMP=0x00000000009f02f1
+ (void)viewServiceWillResignActive;	// IMP=0x00000000009f02df
+ (void)applicationWillResignActive;	// IMP=0x00000000009f02cd
+ (void)onWillResignActive;	// IMP=0x00000000009f019c
+ (void)applicationDidBecomeActive;	// IMP=0x00000000009f018a
+ (void)viewServiceDidBecomeActive;	// IMP=0x00000000009f0178
+ (void)onDidBecomeActive;	// IMP=0x00000000009f007e
+ (id)bestInterpretationForDictationResult:(id)arg1;	// IMP=0x00000000009f0003
+ (id)serializedDictationPhrases:(id)arg1;	// IMP=0x00000000009effac
+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00000000009efeec
+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00000000009efded
+ (_Bool)takesPressesEnded:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000009efd20
+ (_Bool)takesPressesChanged:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000009efd18
+ (_Bool)takesPressesBegan:(id)arg1 forTextView:(id)arg2;	// IMP=0x00000000009efca9
+ (_Bool)shouldHideCursorForTextView:(id)arg1;	// IMP=0x00000000009efbb2
+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;	// IMP=0x00000000009efb7d
+ (_Bool)isTextViewOnStarkScreen:(id)arg1;	// IMP=0x00000000009efad0
+ (void)keyboardDidUpdateOnScreenStatus;	// IMP=0x00000000009ef91b
+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2;	// IMP=0x00000000009ef405
+ (id)UIDictationLanguageSourceType:(unsigned long long)arg1;	// IMP=0x00000000009ef264
+ (id)UIDictationStartStopReasonTypeDescription:(unsigned long long)arg1;	// IMP=0x00000000009ef111
+ (void)logCorrectionStatisticsForDelegate:(id)arg1 reason:(unsigned long long)arg2;	// IMP=0x00000000009ee460
+ (_Bool)canPerformDictation;	// IMP=0x00000000009ee3eb
+ (_Bool)dictationIsFunctional;	// IMP=0x00000000009ee1f0
+ (_Bool)fetchCurrentInputModeSupportsDictation;	// IMP=0x00000000009ee084
+ (_Bool)checkTraitsSupportDictation:(id)arg1;	// IMP=0x00000000009ee025
+ (_Bool)_checkTraitsSupportDictation:(id)arg1;	// IMP=0x00000000009edf72
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 autocapitalization:(long long)arg3 capitalization:(unsigned long long)arg4;	// IMP=0x00000000009ed8b0
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 capitalization:(unsigned long long)arg3;	// IMP=0x00000000009ed7da
+ (_Bool)isRunning;	// IMP=0x00000000009ed687
+ (_Bool)skipUndo;	// IMP=0x00000000009ed67b
+ (id)sharedInstance;	// IMP=0x00000000009ed635
+ (id)activeInstance;	// IMP=0x00000000009ed624
+ (double)serverManualEndpointingThreshold;	// IMP=0x00000000009ed0ca
+ (_Bool)usingServerManualEndpointingThreshold;	// IMP=0x00000000009ed080
+ (id)_dictationLog;	// IMP=0x00000000009ed006
- (void).cxx_destruct;	// IMP=0x0000000000a0432b
@property(retain, nonatomic) AFAnalyticsTurnBasedInstrumentationContext *currentInstrumentationContext; // @synthesize currentInstrumentationContext=_currentInstrumentationContext;
@property(nonatomic) _Bool selectionStartIsStartOfParagraph; // @synthesize selectionStartIsStartOfParagraph=_selectionStartIsStartOfParagraph;
@property(nonatomic) unsigned short previousCharacter; // @synthesize previousCharacter=_previousCharacter;
@property(nonatomic) _Bool hasCheckedForLeadingSpaceOnce; // @synthesize hasCheckedForLeadingSpaceOnce=_hasCheckedForLeadingSpaceOnce;
@property(nonatomic, getter=isFinalizingRecognizedUtterance) _Bool finalizingRecognizedUtterance; // @synthesize finalizingRecognizedUtterance=_finalizingRecognizedUtterance;
@property(nonatomic, getter=isDetectingUtterances) _Bool detectingUtterances; // @synthesize detectingUtterances=_detectingUtterances;
@property(nonatomic) _Bool ignoreFinalizePhrases; // @synthesize ignoreFinalizePhrases=_ignoreFinalizePhrases;
@property(copy, nonatomic) NSString *modelInfo; // @synthesize modelInfo=_modelInfo;
@property(nonatomic) _Bool secureOfflineOnlySpeechRecognition; // @synthesize secureOfflineOnlySpeechRecognition=_secureOfflineOnlySpeechRecognition;
@property(nonatomic) _Bool localSpeechRecognitionForced; // @synthesize localSpeechRecognitionForced=_localSpeechRecognitionForced;
@property(nonatomic) unsigned long long stateHandler; // @synthesize stateHandler=_stateHandler;
@property(nonatomic) unsigned short initialCharacterAfterSelectionForAsyncDelegate; // @synthesize initialCharacterAfterSelectionForAsyncDelegate=_initialCharacterAfterSelectionForAsyncDelegate;
@property(nonatomic) unsigned short initialPreviousCharacterForAsyncDelegate; // @synthesize initialPreviousCharacterForAsyncDelegate=_initialPreviousCharacterForAsyncDelegate;
@property(nonatomic) _Bool selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionStartWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(nonatomic) _Bool selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate; // @synthesize selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate=_selectionEndWasInitiallyAtParagraphBoundaryForAsyncDelegate;
@property(copy, nonatomic) NSString *currentKeyboardPrimaryLanguage; // @synthesize currentKeyboardPrimaryLanguage=_currentKeyboardPrimaryLanguage;
@property(nonatomic) unsigned long long dictationSourceType; // @synthesize dictationSourceType=_dictationSourceType;
@property(copy, nonatomic) NSString *fallbackDictationLanguage; // @synthesize fallbackDictationLanguage=_fallbackDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
@property(retain, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *detectedLanguage; // @synthesize detectedLanguage=_detectedLanguage;
@property(nonatomic) _Bool wantsAvailabilityMonitoringWhenAppActive; // @synthesize wantsAvailabilityMonitoringWhenAppActive=_wantsAvailabilityMonitoringWhenAppActive;
@property(retain, nonatomic) UIDictationInputModeOptions *inputModeOptions; // @synthesize inputModeOptions=_inputModeOptions;
@property(nonatomic) _Bool didToggleSoftwareKeyboardVisibleForDictation; // @synthesize didToggleSoftwareKeyboardVisibleForDictation=_didToggleSoftwareKeyboardVisibleForDictation;
@property(retain, nonatomic) _UIDictationPrivacySheetController *dictationPrivacySheetController; // @synthesize dictationPrivacySheetController=_dictationPrivacySheetController;
@property(retain, nonatomic) NSTimer *idleTimerResetTimer; // @synthesize idleTimerResetTimer=_idleTimerResetTimer;
@property(nonatomic) _Bool hasInsertedAtLeastOneSerializedDictationResult; // @synthesize hasInsertedAtLeastOneSerializedDictationResult=_hasInsertedAtLeastOneSerializedDictationResult;
@property(nonatomic, getter=isSendButtonPressedDuringDictation) _Bool sendButtonPressedDuringDictation; // @synthesize sendButtonPressedDuringDictation=_sendButtonPressedDuringDictation;
@property(nonatomic) _Bool shouldStayInDictationInputMode; // @synthesize shouldStayInDictationInputMode=_shouldStayInDictationInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *keyboardInputModeToReturn; // @synthesize keyboardInputModeToReturn=_keyboardInputModeToReturn;
@property(retain, nonatomic) UIKeyboardInputMode *currentInputModeForDictation; // @synthesize currentInputModeForDictation=_currentInputModeForDictation;
@property(nonatomic) _Bool logAppEnterBackground; // @synthesize logAppEnterBackground=_logAppEnterBackground;
@property(copy, nonatomic) NSString *lastMessageKeyboardLanguage; // @synthesize lastMessageKeyboardLanguage=_lastMessageKeyboardLanguage;
@property(copy, nonatomic) NSString *interactionIdentifier; // @synthesize interactionIdentifier=_interactionIdentifier;
@property(copy, nonatomic) id lastCorrectionIdentifier; // @synthesize lastCorrectionIdentifier=_lastCorrectionIdentifier;
@property(copy, nonatomic) NSString *lastRecognitionText; // @synthesize lastRecognitionText=_lastRecognitionText;
@property(nonatomic) unsigned long long reasonType; // @synthesize reasonType=_reasonType;
@property(retain, nonatomic) UIWindow *dictationPresenterWindow; // @synthesize dictationPresenterWindow=_dictationPresenterWindow;
@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;
@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;
@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
@property(nonatomic) _Bool performingStreamingEditingOperation; // @synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(copy) NSString *smartLanguageSelectionOverrideLanguage; // @synthesize smartLanguageSelectionOverrideLanguage=_smartLanguageSelectionOverrideLanguage;
@property(copy, nonatomic) NSString *activationIdentifier; // @synthesize activationIdentifier=_activationIdentifier;
- (unsigned long long)specificReasonTypeFromApplicationDuringDictation;	// IMP=0x0000000000a03d75
- (void)sendButtonPressedInMessages:(id)arg1;	// IMP=0x0000000000a03b46
- (void)keyboardInputModeChanged:(id)arg1;	// IMP=0x0000000000a039b4
- (void)instrumentationDictationTranscriptionMetadataEmitInstrumentationWithDictationResult:(id)arg1;	// IMP=0x0000000000a02a92
- (void)instrumentationDictationContextEmitInstrumentation;	// IMP=0x0000000000a024a3
- (id)dictationUIState;	// IMP=0x0000000000a0204e
- (void)keyboardDidHide:(id)arg1;	// IMP=0x0000000000a00ab1
- (void)keyboardWillHide:(id)arg1;	// IMP=0x0000000000a00a9f
- (_Bool)smartLanguageSelectionOverridden;	// IMP=0x0000000000a00a6c
- (void)endSmartLanguageSelectionOverride;	// IMP=0x0000000000a009dd
- (void)overrideSmartLanguageSelection:(id)arg1;	// IMP=0x0000000000a0082c
- (void)markKeyboardDidReset;	// IMP=0x0000000000a00814
- (void)markKeyboardDeleteMetricEvent;	// IMP=0x0000000000a007a8
- (void)markKeyboardInputMetricEvent;	// IMP=0x0000000000a0073c
- (void)_markOfflineDictationInputMetricEvent;	// IMP=0x0000000000a00724
- (id)_currentLanguageForOfflineDictationMetrics;	// IMP=0x0000000000a006a4
- (id)_assistantCompatibleLanguageCodeForInputMode:(id)arg1;	// IMP=0x0000000000a005b4
- (void)_endOfflineMetricsSession;	// IMP=0x0000000000a00455
- (void)_beginOfflineMetricsSession;	// IMP=0x0000000000a0043b
- (void)preferencesChanged:(id)arg1;	// IMP=0x0000000000a00309
- (void)voiceCommandSingleTapKey:(id)arg1;	// IMP=0x0000000000a0015d
- (void)dictationShortCutKey:(id)arg1;	// IMP=0x0000000000a0000d
- (void)handleHardwareKeyboardGesture;	// IMP=0x00000000009fff0f
- (void)updateDoubleTapShortcutWithPreference:(long long)arg1;	// IMP=0x00000000009ffe57
- (void)removeStartDictationKeyboardGestures;	// IMP=0x00000000009ffd77
- (void)prepareStartDictationKeyboardGesturesForDelegate:(id)arg1;	// IMP=0x00000000009ffcd5
- (void)prepareVoiceCommandSingleTapGesture:(id)arg1;	// IMP=0x00000000009ffb14
- (void)prepareDoubleTapShortcutGesture:(id)arg1;	// IMP=0x00000000009ff92b
- (void)prepareStartDictationKeyboardGestures;	// IMP=0x00000000009ff855
- (void)setLanguage:(id)arg1;	// IMP=0x00000000009ff80a
- (id)language;	// IMP=0x00000000009ff7b6
- (void)preheatIfNecessary;	// IMP=0x00000000009ff73a
- (_Bool)isRecievingResults;	// IMP=0x00000000009ff731
- (void)dictationConnectionDidFinish:(id)arg1;	// IMP=0x00000000009ff31d
- (void)dictationConnectionDidCancel:(id)arg1;	// IMP=0x00000000009ff2cd
- (void)dictationConnection:(id)arg1 didDetectLanguage:(id)arg2;	// IMP=0x00000000009ff2b8
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;	// IMP=0x00000000009ff26b
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;	// IMP=0x00000000009ff118
- (id)_containingSearchBarForView:(id)arg1;	// IMP=0x00000000009ff076
- (void)dictationConnectionDidCancelIncompatibleLocalRecognizer:(id)arg1;	// IMP=0x00000000009ff043
- (void)dictationConnection:(id)arg1 didBeginLocalRecognitionWithModelInfo:(id)arg2;	// IMP=0x00000000009feff9
- (void)dictationConnection:(id)arg1 didFailRecognitionWithError:(id)arg2;	// IMP=0x00000000009fe730
- (void)dictationConnection:(id)arg1 didFailRecordingWithError:(id)arg2;	// IMP=0x00000000009fe54e
- (void)dictationConnectionDidCancelRecording:(id)arg1;	// IMP=0x00000000009fe525
- (void)dictationConnectionDidEndRecording:(id)arg1;	// IMP=0x00000000009fe49f
- (void)dictationConnection:(id)arg1 didStartRecordingWithOptions:(id)arg2;	// IMP=0x00000000009fe294
- (void)dictationConnectionDidStartRecording:(id)arg1;	// IMP=0x00000000009fe287
- (void)dictationConnectionWillStartRecording:(id)arg1;	// IMP=0x00000000009fe09b
- (void)dictationConnection:(id)arg1 didFilterTokensWithFilterState:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000009fdfeb
- (void)dictationConnection:(id)arg1 filterState:(id)arg2 processFilteredToken:(id)arg3 forFinalize:(_Bool)arg4;	// IMP=0x00000000009fdee2
- (_Bool)dictationConnection:(id)arg1 filterState:(id)arg2 shouldCheckpointAtToken:(id)arg3;	// IMP=0x00000000009fde4c
- (CDUnknownBlockType)dictationBlockForToken:(id)arg1;	// IMP=0x00000000009fdc95
- (id)dictationConnection:(id)arg1 willFilterTokensWithLanguageModel:(id)arg2 forFinalize:(_Bool)arg3;	// IMP=0x00000000009fdc26
- (void)dictationConnection:(id)arg1 receivedInterpretation:(id)arg2 languageModel:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000009fd837
- (void)setupToInsertResultForNewHypothesis:(id)arg1;	// IMP=0x00000000009fd6fc
- (void)_updateFromSelectedTextRange:(id)arg1 withNewHypothesis:(id)arg2;	// IMP=0x00000000009fd0a5
- (id)_getBestHypothesisRangeGivenHintRange:(id)arg1 inputDelegate:(id)arg2 hypothesisRange:(struct _NSRange *)arg3 documentTextInRange:(id *)arg4;	// IMP=0x00000000009fc95a
- (id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2;	// IMP=0x00000000009fc7d7
- (id)_rangeByExtendingRange:(id)arg1 backward:(long long)arg2 forward:(long long)arg3 inputDelegate:(id)arg4;	// IMP=0x00000000009fc613
- (void)_displayLinkFired:(id)arg1;	// IMP=0x00000000009fb9ce
- (void)_startStreamingAnimations;	// IMP=0x00000000009fb8e9
- (void)_stopStreamingAnimation;	// IMP=0x00000000009fb8b2
- (void)dictationConnection:(id)arg1 finalizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 secureInput:(_Bool)arg5;	// IMP=0x00000000009fb619
- (void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4;	// IMP=0x00000000009fb0c5
- (void)finalizeDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4 finalResult:(_Bool)arg5;	// IMP=0x00000000009fa816
- (void)_clearExistingText;	// IMP=0x00000000009fa6ee
- (void)_deleteBackwardIntoText;	// IMP=0x00000000009fa653
- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x00000000009fa0ee
- (id)resultWithTrailingSpace:(id)arg1;	// IMP=0x00000000009fa0d2
- (void)logAlternativeSelected:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;	// IMP=0x00000000009fa038
- (void)didShowAlternatives:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3 instrumentationContext:(id)arg4 dictationLanguage:(id)arg5;	// IMP=0x00000000009f9f3d
- (void)logDidAcceptReplacement:(id)arg1 replacementLanguageCode:(id)arg2 originalText:(id)arg3 correctionIdentifier:(id)arg4 interactionIdentifier:(id)arg5;	// IMP=0x00000000009f9e5a
- (void)logDidAcceptDictationResult:(id)arg1 reasonType:(unsigned long long)arg2;	// IMP=0x00000000009f9db1
- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;	// IMP=0x00000000009f9c43
- (void)restartDictationForTypeAndTalk;	// IMP=0x00000000009f9b5d
- (_Bool)dictationIsModifyingText;	// IMP=0x00000000009f9b4b
- (void)performIgnoringDocumentChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f9b2d
- (_Bool)isIgnoringDocumentChanges;	// IMP=0x00000000009f9b1f
- (void)forceDictationReturnToKeyboardInputMode;	// IMP=0x00000000009f9a3d
- (void)stopDictationAndResignFirstResponder;	// IMP=0x00000000009f9943
- (void)stopDictation;	// IMP=0x00000000009f992c
- (void)stopAndCancelDictationIfNeededWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000009f9832
- (void)stopAndCancelDictationWithReasonType:(unsigned long long)arg1;	// IMP=0x00000000009f9763
- (void)stopDictationIgnoreFinalizePhrases;	// IMP=0x00000000009f955f
- (void)stopDictation:(_Bool)arg1;	// IMP=0x00000000009f8d72
- (void)cancelDictationForTextStoreChangesInResponder:(id)arg1;	// IMP=0x00000000009f8c9e
- (void)cancelDictation;	// IMP=0x00000000009f812f
- (struct _NSRange)_getRangeOfString:(id)arg1 inDocumentText:(id)arg2;	// IMP=0x00000000009f7e7f
- (void)switchToDictationInputModeWithOptions:(id)arg1;	// IMP=0x00000000009f7e68
- (void)switchToDictationInputMode;	// IMP=0x00000000009f7e52
- (void)_touchPhaseChangedForTouch:(id)arg1;	// IMP=0x00000000009f7d8a
- (void)_handleDataSharingSheetDecision;	// IMP=0x00000000009f7d16
- (void)_handlePrivacySheetDismissal;	// IMP=0x00000000009f7b7c
- (void)dictationPrivacySheetControllerDidFinish:(id)arg1;	// IMP=0x00000000009f7a5a
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x00000000009f7a48
- (void)_presentPrivacySheetForType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009f778e
- (void)_presentAlertForDictationInputModeOfType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000009f767c
- (void)_presentDataSharingOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f74cb
- (void)_presentOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f72d0
- (_Bool)shouldPresentOptInAlert;	// IMP=0x00000000009f7286
- (void)presentAlertOfType:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009f6af7
- (void)_endEnableDictationPromptAnimated:(_Bool)arg1;	// IMP=0x00000000009f6a45
- (void)_beginEnableDictationPrompt;	// IMP=0x00000000009f63cc
- (void)_createDictationPresenterWindowIfNecessary;	// IMP=0x00000000009f613c
- (void)setDictationInfoOnScreenNotifyKey:(_Bool)arg1;	// IMP=0x00000000009f60d1
- (void)stopHelpMessageDisplay;	// IMP=0x00000000009f5fe6
- (_Bool)_systemLanguageSupportsDictation;	// IMP=0x00000000009f5f57
- (void)startHelpMessageDisplay;	// IMP=0x00000000009f5f51
- (void)restoreTextFieldPlaceholder;	// IMP=0x00000000009f5e5c
- (void)clearTextFieldPlaceholder;	// IMP=0x00000000009f5d2a
- (void)_displaySecureContentsAsPlainText:(_Bool)arg1 afterDelay:(double)arg2;	// IMP=0x00000000009f5c4e
- (void)dismissSoftwareKeyboardIfNeeded;	// IMP=0x00000000009f5b9a
- (void)showSoftwareKeyboardIfNeeded;	// IMP=0x00000000009f5ae1
- (void)switchToDictationInputModeWithTouch:(id)arg1 options:(id)arg2;	// IMP=0x00000000009f5a2f
- (void)switchToDictationInputModeWithTouch:(id)arg1;	// IMP=0x00000000009f5992
- (void)switchToDictationInputModeWithTouch:(id)arg1 withKeyboardInputMode:(id)arg2 options:(id)arg3;	// IMP=0x00000000009f5701
- (void)switchToDictationLanguage:(id)arg1;	// IMP=0x00000000009f5173
- (void)startDictation;	// IMP=0x00000000009f43f1
- (_Bool)isFallingBackToMonolingualDictation;	// IMP=0x00000000009f42dc
- (void)_startDictation;	// IMP=0x00000000009f3e69
- (void)setupForDictationStart;	// IMP=0x00000000009f3a3a
- (void)setupForStreamingDictationStart;	// IMP=0x00000000009f3972
- (void)dismissDictationView:(id)arg1;	// IMP=0x00000000009f395e
- (_Bool)dictationSearchFieldUISupportsTraitCollection:(id)arg1;	// IMP=0x00000000009f3902
- (_Bool)_allowsMicsInSearchFieldForLanguageIdentifiers:(id)arg1;	// IMP=0x00000000009f386b
- (_Bool)dictationSearchFieldUIEnabled;	// IMP=0x00000000009f36de
- (_Bool)currentViewModeSupportsDictationMics;	// IMP=0x00000000009f36b7
- (_Bool)dataSharingDecided;	// IMP=0x00000000009f36af
- (_Bool)dictationEnabled;	// IMP=0x00000000009f34b0
- (id)connectionForStatisticsLogging;	// IMP=0x00000000009f3493
- (void)releaseConnectionAfterStatisticsLogging;	// IMP=0x00000000009f348d
- (void)releaseConnectionAfterDictationRequest;	// IMP=0x00000000009f3487
- (void)releaseConnection;	// IMP=0x00000000009f3442
- (id)dictationConnection;	// IMP=0x00000000009f33d1
- (void)stopIdleTimerResetTimer;	// IMP=0x00000000009f3333
- (void)resetIdleTimer;	// IMP=0x00000000009f3254
- (void)startRecordingLimitTimer;	// IMP=0x00000000009f3173
- (void)stopDictationByTimer;	// IMP=0x00000000009f30b1
- (void)cancelRecordingLimitTimer;	// IMP=0x00000000009f306a
- (void)dealloc;	// IMP=0x00000000009f2f9d
- (int)state;	// IMP=0x00000000009f2f91
- (void)errorAnimationDidFinish;	// IMP=0x00000000009f2f4c
- (void)setState:(int)arg1;	// IMP=0x00000000009f29e8
- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;	// IMP=0x00000000009f2967
- (void)_runFinalizeOperation:(_Bool)arg1;	// IMP=0x00000000009f28de
- (void)_runFinalizeOperation;	// IMP=0x00000000009f28ca
- (void)_setupHypothesisAsFinalResults;	// IMP=0x00000000009f2705
- (void)_setFinalResultHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f2637
- (void)_completeStartDictationWithContinuation:(CDUnknownBlockType)arg1;	// IMP=0x00000000009f22cb
- (void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000009f2203
- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;	// IMP=0x00000000009f2127
- (void)startConnection;	// IMP=0x00000000009f20ab
- (void)completeStartConnection;	// IMP=0x00000000009f2056
- (void)dictationConnection:(id)arg1 updateOptions:(id)arg2;	// IMP=0x00000000009f1bf4
- (id)selectedTextForInputDelegate:(id)arg1;	// IMP=0x00000000009f1ada
- (id)postfixTextForInputDelegate:(id)arg1;	// IMP=0x00000000009f189c
- (id)prefixTextForInputDelegate:(id)arg1;	// IMP=0x00000000009f165b
- (id)fieldIdentifierInputDelegate:(id)arg1;	// IMP=0x00000000009f147b
@property(readonly, retain, nonatomic) NSNumber *dictationRequestOrigin;
- (_Bool)shouldOverrideManualEndpointing;	// IMP=0x00000000009f1410
- (_Bool)shouldUseDictationSearchFieldBehavior;	// IMP=0x00000000009f1378
- (float)audioLevel;	// IMP=0x00000000009f1328
- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000009f1141
- (_Bool)supportsDictationLanguage:(id)arg1 error:(id *)arg2;	// IMP=0x00000000009f10e5
- (id)languageCodeForAssistantLanguageCode:(id)arg1;	// IMP=0x00000000009f0f42
- (_Bool)remoteHasMicrophone;	// IMP=0x00000000009f0bff
- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;	// IMP=0x00000000009efe89
- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;	// IMP=0x00000000009efd73
- (void)_restartDictation;	// IMP=0x00000000009efd28
- (void)setDictationInputMode:(id)arg1;	// IMP=0x00000000009ef2bc
- (_Bool)_resolvedIsDictationPossible;	// IMP=0x00000000009ed697
- (_Bool)dictationDisabledDueToTelephonyActivity;	// IMP=0x00000000009ed60e
- (id)streamingOperations;	// IMP=0x00000000009ed5d3
- (id)init;	// IMP=0x00000000009ed14f
- (float)maxRecordingLength;	// IMP=0x00000000009ed062

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

