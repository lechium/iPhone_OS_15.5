//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIDragInteractionDelegate_Private-Protocol.h>
#import <UIKitCore/UIDropInteractionDelegate_Private-Protocol.h>
#import <UIKitCore/UITextInput-Protocol.h>
#import <UIKitCore/UITextInputTraits-Protocol.h>
#import <UIKitCore/UITextLinkInteraction-Protocol.h>
#import <UIKitCore/UIWebDraggingDelegate-Protocol.h>
#import <UIKitCore/WebEditingDelegate-Protocol.h>
#import <UIKitCore/WebPolicyDelegate-Protocol.h>

@class DOMHTMLElement, NSAttributedString, NSDictionary, NSString, UIColor, UIDragInteraction, UIDropInteraction, UIFont, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWebDocumentView, WebFrame;
@protocol UITextContentViewDelegate, UITextInputDelegate, UITextInputTokenizer;

@interface UITextContentView <WebPolicyDelegate, WebEditingDelegate, UIWebDraggingDelegate, UIDragInteractionDelegate_Private, UIDropInteractionDelegate_Private, UITextInput, UITextLinkInteraction, UITextInputTraits>
{
    id m_delegate;	// 120 = 0x78
    WebFrame *m_frame;	// 128 = 0x80
    DOMHTMLElement *m_body;	// 136 = 0x88
    int m_marginTop;	// 144 = 0x90
    struct UIEdgeInsets m_selectionInset;	// 152 = 0x98
    double m_bottomBufferHeight;	// 184 = 0xb8
    _Bool m_editable;	// 192 = 0xc0
    _Bool m_editing;	// 193 = 0xc1
    _Bool m_becomesEditableWithGestures;	// 194 = 0xc2
    _Bool m_becomingFirstResponder;	// 195 = 0xc3
    _Bool m_reentrancyGuard;	// 196 = 0xc4
    _Bool m_scrollsSelectionOnWebDocumentChanges;	// 197 = 0xc5
    _Bool m_hasExplicitTextAlignment;	// 198 = 0xc6
    _Bool m_allowsEditingTextAttributes;	// 199 = 0xc7
    _Bool m_usesAttributedText;	// 200 = 0xc8
    UITextInteractionAssistant *m_interactionAssistant;	// 208 = 0xd0
    UIWebDocumentView *m_webView;	// 216 = 0xd8
    UIFont *m_font;	// 224 = 0xe0
    UIColor *m_textColor;	// 232 = 0xe8
    long long m_textAlignment;	// 240 = 0xf0
    UIDragInteraction *m_dragInteraction;	// 248 = 0xf8
    UIDropInteraction *m_dropInteraction;	// 256 = 0x100
    _Bool _dragInteractionEnabled;	// 264 = 0x108
}

+ (id)excludedElementsForHTML;	// IMP=0x0000000000fd5f75
- (void).cxx_destruct;	// IMP=0x0000000000fd82cf
@property(nonatomic, getter=isDragInteractionEnabled) _Bool dragInteractionEnabled; // @synthesize dragInteractionEnabled=_dragInteractionEnabled;
@property(nonatomic) __weak id <UITextContentViewDelegate> delegate; // @synthesize delegate=m_delegate;
@property(nonatomic) _Bool scrollsSelectionOnWebDocumentChanges; // @synthesize scrollsSelectionOnWebDocumentChanges=m_scrollsSelectionOnWebDocumentChanges;
@property(nonatomic) struct UIEdgeInsets selectionInset; // @synthesize selectionInset=m_selectionInset;
- (void)setSelectionGranularity:(long long)arg1;	// IMP=0x0000000000fd8217
- (long long)selectionGranularity;	// IMP=0x0000000000fd81fa
@property(nonatomic) long long selectionAffinity;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd817a
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x0000000000fd80e9
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd80a3
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000fd8003
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x0000000000fd7f63
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x0000000000fd7f46
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000fd7f29
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000fd7f0c
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000000fd7eef
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000fd7e7b
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000fd7e5e
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x0000000000fd7e41
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x0000000000fd7e24
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000000fd7e07
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x0000000000fd7db0
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000fd7d93
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000fd7c3a
- (id)textInRange:(id)arg1;	// IMP=0x0000000000fd7c1d
- (id)metadataDictionariesForDictationResults;	// IMP=0x0000000000fd7c00
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x0000000000fd7ba7
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x0000000000fd7b3a
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x0000000000fd7afc
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x0000000000fd7adf
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x0000000000fd79ed
- (void)insertText:(id)arg1;	// IMP=0x0000000000fd79d0
- (void)deleteBackward;	// IMP=0x0000000000fd79b3
- (id)_proxyTextInput;	// IMP=0x0000000000fd791f
- (struct CGPoint)offset;	// IMP=0x0000000000fd7909
- (void)setOffset:(struct CGPoint)arg1;	// IMP=0x0000000000fd7903
- (void)displayScrollerIndicators;	// IMP=0x0000000000fd78fd
- (double)bottomBufferHeight;	// IMP=0x0000000000fd78e4
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x0000000000fd78cc
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;	// IMP=0x0000000000fd772a
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x0000000000fd76bb
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x0000000000fd761b
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x0000000000fd75a2
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x0000000000fd750e
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x0000000000fd7479
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd745c
- (_Bool)isInteractingWithLink;	// IMP=0x0000000000fd743f
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd7422
- (void)cancelInteractionWithLink;	// IMP=0x0000000000fd7405
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd73e8
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd73cb
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd73ae
- (void)tapLinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd7391
- (unsigned long long)_allowedLinkTypes;	// IMP=0x0000000000fd7369
- (_Bool)mightHaveLinks;	// IMP=0x0000000000fd7350
- (void)setDataDetectorTypes:(unsigned long long)arg1;	// IMP=0x0000000000fd7286
- (unsigned long long)dataDetectorTypes;	// IMP=0x0000000000fd7269
- (void)resetDataDetectorsResultsWithWebLock;	// IMP=0x0000000000fd71f2
- (void)startDataDetectorsWithWebLock;	// IMP=0x0000000000fd7175
- (void)cancelDataDetectorsWithWebLock;	// IMP=0x0000000000fd7112
- (_Bool)shouldStartDataDetectors;	// IMP=0x0000000000fd70da
- (void)scrollRangeToVisible:(struct _NSRange)arg1;	// IMP=0x0000000000fd6fe8
- (void)_didScroll;	// IMP=0x0000000000fd6fcb
- (id)webView;	// IMP=0x0000000000fd6fb6
- (struct CGRect)visibleTextRect;	// IMP=0x0000000000fd6eed
- (struct CGRect)visibleRect;	// IMP=0x0000000000fd6d20
- (void)setMarginTop:(int)arg1;	// IMP=0x0000000000fd6cfd
- (int)marginTop;	// IMP=0x0000000000fd6ced
- (void)setBecomesEditableWithGestures:(_Bool)arg1;	// IMP=0x0000000000fd6cdd
- (_Bool)becomesEditableWithGestures;	// IMP=0x0000000000fd6ccd
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=m_editing;
@property(nonatomic, getter=isEditable) _Bool editable;
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(copy, nonatomic) NSString *text;
@property(readonly, nonatomic) _Bool hasText;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *font;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)_removeTextViewPropertiesFromText:(id)arg1;	// IMP=0x0000000000fd5e6f
- (void)_removeAttribute:(id)arg1 fromString:(id)arg2 andSetPropertyWith:(SEL)arg3 usingValueClass:(Class)arg4;	// IMP=0x0000000000fd5d9d
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0000000000fd5b01
- (void)forwardInvocation:(id)arg1;	// IMP=0x0000000000fd5a4f
- (id)textInputTraits;	// IMP=0x0000000000fd5a32
- (id)contentAsAttributedString;	// IMP=0x0000000000fd593a
- (void)setContentToAttributedString:(id)arg1;	// IMP=0x0000000000fd5874
- (id)contentAsHTMLString;	// IMP=0x0000000000fd5848
- (void)setContentToHTMLString:(id)arg1;	// IMP=0x0000000000fd5660
- (struct CGRect)rectForScrollToVisible;	// IMP=0x0000000000fd558e
- (void)performScrollSelectionToVisible:(_Bool)arg1;	// IMP=0x0000000000fd546f
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x0000000000fd545d
- (struct CGRect)rectForSelection:(struct _NSRange)arg1;	// IMP=0x0000000000fd5384
- (void)setSelectionToEnd;	// IMP=0x0000000000fd528e
- (void)setSelectionToStart;	// IMP=0x0000000000fd5193
- (void)setSelectionWithPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd515d
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000fd50c1
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000fd5025
- (void)_sizeChanged;	// IMP=0x0000000000fd4eaf
- (void)performBecomeEditableTasks;	// IMP=0x0000000000fd4df3
- (void)webViewDidChange:(id)arg1;	// IMP=0x0000000000fd4ac4
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000fd498b
- (id)documentFragmentForPasteboardItemAtIndex:(long long)arg1;	// IMP=0x0000000000fd4917
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x0000000000fd47c3
- (void)selectAll;	// IMP=0x0000000000fd47a6
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000fd472f
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x0000000000fd4712
- (void)toggleUnderline:(id)arg1;	// IMP=0x0000000000fd46f5
- (void)toggleItalics:(id)arg1;	// IMP=0x0000000000fd46d8
- (void)toggleBoldface:(id)arg1;	// IMP=0x0000000000fd46bb
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000fd469e
- (void)_addShortcut:(id)arg1;	// IMP=0x0000000000fd4681
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;	// IMP=0x0000000000fd4664
- (void)_share:(id)arg1;	// IMP=0x0000000000fd4647
- (void)_translate:(id)arg1;	// IMP=0x0000000000fd462a
- (void)_define:(id)arg1;	// IMP=0x0000000000fd460d
- (void)_transliterateChinese:(id)arg1;	// IMP=0x0000000000fd45d0
- (void)_promptForReplace:(id)arg1;	// IMP=0x0000000000fd4593
- (void)replace:(id)arg1;	// IMP=0x0000000000fd4576
- (void)decreaseSize:(id)arg1;	// IMP=0x0000000000fd4556
- (void)increaseSize:(id)arg1;	// IMP=0x0000000000fd4536
- (void)selectAll:(id)arg1;	// IMP=0x0000000000fd44c4
- (void)select:(id)arg1;	// IMP=0x0000000000fd4487
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000fd43ab
- (void)paste:(id)arg1;	// IMP=0x0000000000fd42cf
- (void)copy:(id)arg1;	// IMP=0x0000000000fd41f3
- (void)cut:(id)arg1;	// IMP=0x0000000000fd4117
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x0000000000fd40fa
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x0000000000fd40dd
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x0000000000fd40c0
- (id)undoManager;	// IMP=0x0000000000fd4056
- (id)undoManagerForWebView:(id)arg1;	// IMP=0x0000000000fd4044
- (void)_hideSelectionCommands;	// IMP=0x0000000000fd3fda
- (id)fontForCaretSelection;	// IMP=0x0000000000fd3fbd
- (struct _NSRange)selectionRange;	// IMP=0x0000000000fd3fa0
- (_Bool)hasMarkedText;	// IMP=0x0000000000fd3f62
- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;	// IMP=0x0000000000fd3f45
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd3ee6
- (id)selectedText;	// IMP=0x0000000000fd3e7c
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000fd3b21
- (struct CGRect)caretRectForVisiblePosition:(id)arg1;	// IMP=0x0000000000fd3a97
- (struct CGRect)_selectionClipRect;	// IMP=0x0000000000fd3a20
- (_Bool)_restoreFirstResponder;	// IMP=0x0000000000fd3998
- (id)interactionAssistant;	// IMP=0x0000000000fd3983
- (id)selectionView;	// IMP=0x0000000000fd3933
- (void)cancelAutoscroll;	// IMP=0x0000000000fd3916
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x0000000000fd38f9
- (_Bool)hasSelection;	// IMP=0x0000000000fd38dc
- (void)endSelectionChange;	// IMP=0x0000000000fd38bf
- (void)updateSelection;	// IMP=0x0000000000fd3855
- (void)beginSelectionChange;	// IMP=0x0000000000fd3838
- (void)_scrollViewDidEndDecelerating;	// IMP=0x0000000000fd3832
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;	// IMP=0x0000000000fd382c
- (void)_scrollViewWillBeginDragging;	// IMP=0x0000000000fd3826
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000fd37f7
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000fd378e
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x0000000000fd3771
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;	// IMP=0x0000000000fd3665
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;	// IMP=0x0000000000fd3648
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x0000000000fd362b
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;	// IMP=0x0000000000fd360e
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;	// IMP=0x0000000000fd35f1
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;	// IMP=0x0000000000fd35d4
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;	// IMP=0x0000000000fd35b7
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;	// IMP=0x0000000000fd359a
- (long long)_dragInteraction:(id)arg1 dataOwnerForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3;	// IMP=0x0000000000fd357d
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x0000000000fd3560
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;	// IMP=0x0000000000fd3543
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x0000000000fd3526
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;	// IMP=0x0000000000fd3509
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;	// IMP=0x0000000000fd34ec
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;	// IMP=0x0000000000fd34cf
- (_Bool)dragInteractionEnabled;	// IMP=0x0000000000fd3483
- (id)automaticallySelectedOverlay;	// IMP=0x0000000000fd33ee
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;	// IMP=0x0000000000fd3319
- (void)ensureSelection;	// IMP=0x0000000000fd32a4
- (_Bool)isFirstResponder;	// IMP=0x0000000000fd3250
- (_Bool)canResignFirstResponder;	// IMP=0x0000000000fd31e0
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000fd3170
- (_Bool)resignFirstResponder;	// IMP=0x0000000000fd301d
- (_Bool)becomeFirstResponder;	// IMP=0x0000000000fd2c75
- (id)_keyboardResponder;	// IMP=0x0000000000fd2c60
- (void)setSelectionChangeCallbacksDisabled:(_Bool)arg1;	// IMP=0x0000000000fd2bcc
- (void)didMoveToSuperview;	// IMP=0x0000000000fd2b45
- (void)recalculateStyle;	// IMP=0x0000000000fd2ac9
- (id)styleString;	// IMP=0x0000000000fd2919
- (void)keyboardDidShow:(id)arg1;	// IMP=0x0000000000fd286f
- (void)removeFromSuperview;	// IMP=0x0000000000fd27ed
- (void)dealloc;	// IMP=0x0000000000fd263f
- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(_Bool)arg2;	// IMP=0x0000000000fd1fc8
- (void)updateContentEditableAttribute:(_Bool)arg1;	// IMP=0x0000000000fd1f32
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000fd1d3e
- (void)_populateArchivedSubviews:(id)arg1;	// IMP=0x0000000000fd1cd1
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000fd1a84
- (id)initWithFrame:(struct CGRect)arg1 webView:(id)arg2;	// IMP=0x0000000000fd1a09
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000fd19a8

// Remaining properties
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(readonly, nonatomic) UIView *textInputView;

@end

