//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIBarPositioning-Protocol.h>
#import <UIKitCore/UIScribbleInteractionDelegate-Protocol.h>
#import <UIKitCore/UITextInputTraits-Protocol.h>
#import <UIKitCore/UITextInputTraits_Private-Protocol.h>
#import <UIKitCore/_UIBarPositioningInternal-Protocol.h>
#import <UIKitCore/_UINavigationBarAugmentedTitleView-Protocol.h>
#import <UIKitCore/_UISearchBarVisualProvidingDelegate-Protocol.h>

@class NSArray, NSIndexSet, NSString, UIButton, UIColor, UIImage, UIInputContextHistory, UIKeyCommand, UISearchBarTextField, UISearchController, UISearchTextField, UITapGestureRecognizer, UITextInputAssistantItem, UITextInputPasswordRules, UITextInputTraits, UITextRange, UIView, _UINavigationControllerPalette, _UISupplementalLexicon;
@protocol UISearchBarDelegate, UISearchBarDelegate><UISearchBarDelegate_Private, _UISearchBarSearchContainerLayoutCustomizationDelegate, _UISearchBarVisualProviding;

@interface UISearchBar <_UISearchBarVisualProvidingDelegate, UIScribbleInteractionDelegate, UITextInputTraits_Private, _UIBarPositioningInternal, _UINavigationBarAugmentedTitleView, UIBarPositioning, UITextInputTraits>
{
    id <UISearchBarDelegate><UISearchBarDelegate_Private> _delegate;	// 120 = 0x78
    UITapGestureRecognizer *_tapToActivateGestureRecognizer;	// 128 = 0x80
    UITextInputTraits *_textInputTraits;	// 136 = 0x88
    _Bool _didAddScribbleInteraction;	// 144 = 0x90
    _Bool _forceLegacyVisual;	// 145 = 0x91
    UIKeyCommand *_cancelKeyCommand;	// 152 = 0x98
    _Bool __supportsDynamicType;	// 160 = 0xa0
    _Bool __forceCenteredPlaceholderLayout;	// 161 = 0xa1
    _Bool __transplanting;	// 162 = 0xa2
    UIView *_inputAccessoryView;	// 168 = 0xa8
    id <_UISearchBarVisualProviding> _visualProvider;	// 176 = 0xb0
    id <_UISearchBarSearchContainerLayoutCustomizationDelegate> _searchFieldContainerLayoutCustomizationDelegate;	// 184 = 0xb8
    Class _classForSearchTextField;	// 192 = 0xc0
    UISearchController *__searchController;	// 200 = 0xc8
}

+ (void)_initializeForIdiom:(long long)arg1;	// IMP=0x00000000001c45f1
- (void).cxx_destruct;	// IMP=0x00000000001caed9
@property(nonatomic, setter=_setTransplanting:) _Bool _transplanting; // @synthesize _transplanting=__transplanting;
@property(nonatomic, setter=_setSearchController:) UISearchController *_searchController; // @synthesize _searchController=__searchController;
@property(nonatomic) _Bool _forceCenteredPlaceholderLayout; // @synthesize _forceCenteredPlaceholderLayout=__forceCenteredPlaceholderLayout;
@property(nonatomic, setter=_setSupportsDynamicType:) _Bool _supportsDynamicType; // @synthesize _supportsDynamicType=__supportsDynamicType;
@property(nonatomic, setter=_setSearchFieldContainerLayoutCustomizationDelegate:) __weak id <_UISearchBarSearchContainerLayoutCustomizationDelegate> _searchFieldContainerLayoutCustomizationDelegate; // @synthesize _searchFieldContainerLayoutCustomizationDelegate;
@property(readonly, nonatomic) id <_UISearchBarVisualProviding> _visualProvider; // @synthesize _visualProvider;
@property(retain, nonatomic) UIView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(nonatomic) __weak id <UISearchBarDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_uiktest_placeholderLabelColor;	// IMP=0x00000000001cada7
- (void)_setCancelButtonWantsLetterpress;	// IMP=0x00000000001cad85
- (_Bool)_shouldUseNavigationBarHeight;	// IMP=0x00000000001cad68
- (long long)_barMetricsForOrientation:(long long)arg1;	// IMP=0x00000000001cad4b
- (void)setSearchFieldLeftViewMode:(long long)arg1;	// IMP=0x00000000001cad2e
- (long long)searchFieldLeftViewMode;	// IMP=0x00000000001cad11
- (void)_updateInsetsForCurrentContainerViewAndBarPosition;	// IMP=0x00000000001cacff
- (void)_updateInsetsForTableView:(id)arg1;	// IMP=0x00000000001caca2
- (void)tappedSearchBar:(id)arg1;	// IMP=0x00000000001cac6b
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000001cab85
- (void)_allowCursorToAppear:(_Bool)arg1;	// IMP=0x00000000001cab68
- (id)_textColor;	// IMP=0x00000000001cab4b
- (id)_colorForComponent:(unsigned long long)arg1 disabled:(_Bool)arg2;	// IMP=0x00000000001cab2e
- (_Bool)_hasDarkUIAppearance;	// IMP=0x00000000001caaa6
- (_Bool)centerPlaceholder;	// IMP=0x00000000001caa89
- (void)setCenterPlaceholder:(_Bool)arg1;	// IMP=0x00000000001caa6c
- (id)_presentationBackgroundBlurEffectForTraitCollection:(id)arg1;	// IMP=0x00000000001ca9b8
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;	// IMP=0x00000000001ca92b
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000000001ca7b2
- (unsigned long long)_backdropStyle;	// IMP=0x00000000001ca795
- (void)_setBackdropStyle:(unsigned long long)arg1;	// IMP=0x00000000001ca778
@property(nonatomic) unsigned long long searchBarStyle;
- (void)_setBackgroundLayoutNeedsUpdate;	// IMP=0x00000000001ca721
- (_Bool)_containedInNavigationPalette;	// IMP=0x00000000001ca704
- (void)setCenter:(struct CGPoint)arg1;	// IMP=0x00000000001ca6a3
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000001ca5eb
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000001ca533
- (id)_animatedAppearanceBarButtonItem;	// IMP=0x00000000001ca516
- (id)_searchDisplayControllerNavigationItem;	// IMP=0x00000000001ca4f9
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItem;
- (_Bool)_ownsInputAccessoryView;	// IMP=0x00000000001ca46a
- (struct UIOffset)positionAdjustmentForSearchBarIcon:(long long)arg1;	// IMP=0x00000000001ca37c
- (void)setPositionAdjustment:(struct UIOffset)arg1 forSearchBarIcon:(long long)arg2;	// IMP=0x00000000001ca2d7
@property(nonatomic) struct UIOffset searchTextPositionAdjustment;
@property(nonatomic) struct UIOffset searchFieldBackgroundPositionAdjustment;
- (id)scopeBarButtonTitleTextAttributesForState:(unsigned long long)arg1;	// IMP=0x00000000001ca10d
- (void)setScopeBarButtonTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000001ca075
- (id)scopeBarButtonDividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;	// IMP=0x00000000001ca003
- (void)setScopeBarButtonDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;	// IMP=0x00000000001c9f5e
- (id)scopeBarButtonBackgroundImageForState:(unsigned long long)arg1;	// IMP=0x00000000001c9ef2
- (void)setScopeBarButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000001c9e57
@property(retain, nonatomic) UIImage *scopeBarBackgroundImage;
- (id)imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;	// IMP=0x00000000001c9e00
- (void)setImage:(id)arg1 forSearchBarIcon:(long long)arg2 state:(unsigned long long)arg3;	// IMP=0x00000000001c9de3
- (id)searchFieldBackgroundImageForState:(unsigned long long)arg1;	// IMP=0x00000000001c9dc6
- (void)setSearchFieldBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000001c9da9
- (void)_setSeparatorImage:(id)arg1;	// IMP=0x00000000001c9d8c
- (id)_separatorImage;	// IMP=0x00000000001c9d6f
@property(retain, nonatomic) UIImage *backgroundImage;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;	// IMP=0x00000000001c9bfa
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;	// IMP=0x00000000001c9aea
- (void)setBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;	// IMP=0x00000000001c9a65
@property(retain, nonatomic) UIColor *barTintColor;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (id)focusGroupIdentifier;	// IMP=0x00000000001c9947
- (void)setFocusGroupIdentifier:(id)arg1;	// IMP=0x00000000001c98d5
- (void)_setDisableFocus:(_Bool)arg1;	// IMP=0x00000000001c987e
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x00000000001c964c
- (id)preferredFocusedView;	// IMP=0x00000000001c962f
- (id)preferredFocusEnvironments;	// IMP=0x00000000001c953c
- (void)_updateNavigationBarLayoutInsertDataForSearchBar:(id)arg1 collapsibleScopeBar:(id)arg2 forLayoutState:(long long)arg3;	// IMP=0x00000000001c951f
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;	// IMP=0x00000000001c93ab
- (void)_scopeChanged:(id)arg1;	// IMP=0x00000000001c92a1
@property(nonatomic) _Bool showsScopeBar;
- (void)setShowsScopeBar:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001c925e
- (void)_setShowsScopeBar:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001c924c
- (void)_setShowsScopeBar:(_Bool)arg1 animateOpacity:(_Bool)arg2;	// IMP=0x00000000001c922f
- (void)_dismissScopeBarIfNecessary;	// IMP=0x00000000001c90ba
- (void)_presentScopeBarIfNecessary;	// IMP=0x00000000001c8f42
@property(nonatomic, setter=_setScopeBarPosition:) unsigned long long _scopeBarPosition;
- (void)_setScopeBarHidden:(_Bool)arg1;	// IMP=0x00000000001c8e34
@property(nonatomic) long long selectedScopeButtonIndex;
@property(copy, nonatomic) NSArray *scopeButtonTitles;
- (struct UIEdgeInsets)_scopeBarInsets;	// IMP=0x00000000001c8d28
- (_Bool)_scopeBarIsVisible;	// IMP=0x00000000001c8d0b
@property(readonly, nonatomic) struct UIEdgeInsets _effectiveContentInset;
- (void)_updateEffectiveContentInset;	// IMP=0x00000000001c8cb0
- (void)_containerSafeAreaInsetsDidChange:(id)arg1;	// IMP=0x00000000001c8c09
- (void)safeAreaInsetsDidChange;	// IMP=0x00000000001c8bc8
- (void)layoutMarginsDidChange;	// IMP=0x00000000001c8b57
- (void)_getOverrideContentInsets:(struct UIEdgeInsets *)arg1 overriddenEdges:(unsigned long long *)arg2;	// IMP=0x00000000001c8b3a
- (void)_setOverrideContentInsets:(struct UIEdgeInsets)arg1 forRectEdges:(unsigned long long)arg2;	// IMP=0x00000000001c8b1d
- (struct UIEdgeInsets)contentInset;	// IMP=0x00000000001c8adf
- (void)setContentInset:(struct UIEdgeInsets)arg1;	// IMP=0x00000000001c8995
- (void)_setShadowVisibleIfNecessary:(_Bool)arg1;	// IMP=0x00000000001c8978
- (id)_makeShadowView;	// IMP=0x00000000001c8900
- (void)layoutSubviews;	// IMP=0x00000000001c88e3
- (void)setNeedsLayout;	// IMP=0x00000000001c889a
- (double)_scopeBarHeight;	// IMP=0x00000000001c887d
- (void)sendSubviewToBack:(id)arg1;	// IMP=0x00000000001c87e7
- (void)bringSubviewToFront:(id)arg1;	// IMP=0x00000000001c8751
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;	// IMP=0x00000000001c8692
- (void)_setShowsSeparator:(_Bool)arg1;	// IMP=0x00000000001c8675
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000001c8658
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;	// IMP=0x00000000001c8650
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000001c8633
- (double)_defaultHeightForOrientation:(long long)arg1;	// IMP=0x00000000001c8616
- (double)_defaultHeight;	// IMP=0x00000000001c85e5
- (double)_barHeightForBarMetrics:(long long)arg1 barPosition:(long long)arg2;	// IMP=0x00000000001c85c8
- (double)_barHeightForBarMetrics:(long long)arg1;	// IMP=0x00000000001c85ab
- (void)_navigationBarSlideTransitionDidEnd;	// IMP=0x00000000001c857c
- (void)_navigationBarSlideTransitionWillBegin;	// IMP=0x00000000001c854d
- (void)_cancelTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c850f
- (void)_completeTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c84d1
- (void)_animateTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c8493
- (void)_freezeForAnimatedTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c8454
- (void)_prepareForTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c8416
- (void)_driveTransitionToSearchLayoutState:(long long)arg1;	// IMP=0x00000000001c8327
- (id)_traitCollectionOverridesForNavigationBarTraitCollection:(id)arg1;	// IMP=0x00000000001c8292
- (void)_navigationBarTraitCollectionDidChangeTo:(id)arg1 from:(id)arg2;	// IMP=0x00000000001c828c
- (void)_navigationBarTransitionCompleted:(long long)arg1 willBeDisplayed:(_Bool)arg2;	// IMP=0x00000000001c826f
- (void)_performNavigationBarTransition:(long long)arg1 willBeDisplayed:(_Bool)arg2;	// IMP=0x00000000001c824c
- (void)_navigationBarTransitionWillBegin:(long long)arg1 willBeDisplayed:(_Bool)arg2;	// IMP=0x00000000001c822f
- (_Bool)_wantsTwoPartTransition;	// IMP=0x00000000001c8227
- (void)_contentDidChange;	// IMP=0x00000000001c8215
- (long long)_preferredContentSizeForSize:(long long)arg1;	// IMP=0x00000000001c820c
@property(readonly, nonatomic) double _navigationBarTrailingBarButtonsAlpha;
@property(readonly, nonatomic) double _navigationBarLeadingBarButtonsAlpha;
@property(readonly, nonatomic) double _navigationBarBackButtonAlpha;
@property(readonly, nonatomic) _Bool _hideNavigationBarTrailingBarButtons;
@property(readonly, nonatomic) _Bool _hideNavigationBarStandardTitle;
@property(readonly, nonatomic) _Bool _hideNavigationBarLeadingBarButtons;
@property(readonly, nonatomic) _Bool _hideNavigationBarBackButton;
@property(readonly, nonatomic) double _navigationBarBackButtonMaximumWidth;
@property(readonly, nonatomic) double _navigationBarContentHeight;
@property(readonly, nonatomic) _Bool _underlayNavigationBarContent;
- (void)_setDataSource:(id)arg1 navigationItem:(id)arg2 titleLocation:(long long)arg3;	// IMP=0x00000000001c814c
@property(readonly, nonatomic) long long _preferredAlignment;
- (_Bool)_searchBarTextFieldShouldChangeCharactersInRange:(struct _NSRange)arg1 replacementString:(id)arg2;	// IMP=0x00000000001c80ac
- (_Bool)_searchBarTextFieldShouldClear;	// IMP=0x00000000001c804c
- (_Bool)_searchBarTextFieldShouldScrollToVisibleWhenBecomingFirstResponder;	// IMP=0x00000000001c7fee
- (_Bool)_searchBarTextFieldShouldEndEditing;	// IMP=0x00000000001c7f8e
- (_Bool)_searchBarTextFieldShouldBeginEditing;	// IMP=0x00000000001c7f2e
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x00000000001c7e47
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x00000000001c7de6
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x00000000001c7d5f
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x00000000001c7ced
- (id)textInputTraits;	// IMP=0x00000000001c7c96
@property(readonly, retain, nonatomic) UIButton *_leftButton;
- (id)cancelButton;	// IMP=0x00000000001c7c5c
- (void)setCancelButton:(id)arg1;	// IMP=0x00000000001c7c3f
- (_Bool)usesEmbeddedAppearance;	// IMP=0x00000000001c7c22
- (void)setUsesEmbeddedAppearance:(_Bool)arg1;	// IMP=0x00000000001c7c05
- (_Bool)_wouldCombineLandscapeBarsForSize:(struct CGSize)arg1;	// IMP=0x00000000001c7be8
- (_Bool)_shouldCombineLandscapeBarsForOrientation:(long long)arg1;	// IMP=0x00000000001c7bcb
- (_Bool)_shouldCombineLandscapeBars;	// IMP=0x00000000001c7b92
@property(readonly, nonatomic) long long _expectedInterfaceOrientation;
@property(nonatomic, setter=_setAllowsInlineScopeBar:) _Bool _allowsInlineScopeBar;
@property(nonatomic, getter=_isHostedByNavigationBar, setter=_setHostedByNavigationBar:) _Bool _hostedByNavigationBar;
- (void)_resetIfNecessaryForNavigationBarHosting:(_Bool)arg1;	// IMP=0x00000000001c7985
@property(nonatomic, setter=_setReliesOnNavigationBarBackdrop:) _Bool _reliesOnNavigationBarBackdrop;
- (_Bool)drawsBackgroundInPalette;	// IMP=0x00000000001c78e8
- (void)setDrawsBackgroundInPalette:(_Bool)arg1;	// IMP=0x00000000001c78cb
- (_Bool)drawsBackground;	// IMP=0x00000000001c78ae
- (void)setDrawsBackground:(_Bool)arg1;	// IMP=0x00000000001c7891
- (void)_setShowsCancelButton:(_Bool)arg1;	// IMP=0x00000000001c7874
- (_Bool)_showingDictationButton;	// IMP=0x00000000001c7857
- (void)_setDisableDictationButton:(_Bool)arg1;	// IMP=0x00000000001c783a
@property(nonatomic) _Bool showsCancelButton;
- (void)setShowsCancelButton:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001c7800
@property(nonatomic) _Bool showsBookmarkButton;
@property(nonatomic, getter=isSearchResultsButtonSelected) _Bool searchResultsButtonSelected;
@property(nonatomic) _Bool showsSearchResultsButton;
- (id)_defaultPromptString;	// IMP=0x00000000001c772c
@property(copy, nonatomic) NSString *placeholder;
@property(copy, nonatomic) NSString *prompt;
@property(copy, nonatomic) NSString *text;
@property(readonly, nonatomic) UISearchTextField *searchTextField;
@property(retain, nonatomic, setter=_setClassForSearchTextField:) Class _classForSearchTextField; // @synthesize _classForSearchTextField;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
@property(nonatomic) long long barStyle;
- (void)didMoveToSuperview;	// IMP=0x00000000001c6e8c
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x00000000001c6e1d
@property(readonly, nonatomic) _UINavigationControllerPalette *_containingNavigationPalette;
- (void)_identifyBarContainer;	// IMP=0x00000000001c6b69
- (void)didMoveToWindow;	// IMP=0x00000000001c6af3
- (void)willMoveToWindow:(id)arg1;	// IMP=0x00000000001c6aed
- (id)_scopeBar;	// IMP=0x00000000001c6ad0
- (void)_didUpdateEffectivelySupportsDynamicType;	// IMP=0x00000000001c6ab3
@property(readonly, nonatomic) _Bool _effectivelySupportsDynamicType;
@property(readonly, nonatomic, getter=_searchBarTextField) UISearchBarTextField *searchBarTextField;
- (id)searchField;	// IMP=0x00000000001c6949
- (id)keyCommands;	// IMP=0x00000000001c687a
- (id)_cancelButtonText;	// IMP=0x00000000001c6824
- (void)set_cancelButtonText:(id)arg1;	// IMP=0x00000000001c67b0
- (id)_cancelButton;	// IMP=0x00000000001c675a
- (id)_searchField;	// IMP=0x00000000001c6704
- (id)controller;	// IMP=0x00000000001c66e7
- (void)setController:(id)arg1;	// IMP=0x00000000001c66ca
- (void)dealloc;	// IMP=0x00000000001c6681
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000001c5d72
- (void)_populateArchivedSubviews:(id)arg1;	// IMP=0x00000000001c5bfa
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000001c511b
@property(nonatomic, setter=_setAdditionalPaddingForSearchFieldAtLeadingEdge:) double _additionalPaddingForSearchFieldAtLeadingEdge;
@property(nonatomic, setter=_setAdditionalPaddingForCancelButtonAtLeadingEdge:) double _additionalPaddingForCancelButtonAtLeadingEdge;
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000001c4aaa
- (id)init;	// IMP=0x00000000001c4a78
@property(readonly, copy) NSString *description;
- (void)setSemanticContentAttribute:(long long)arg1;	// IMP=0x00000000001c49af
@property(readonly, nonatomic) UIView *_viewForChildViews;
- (void)_setMaskBounds:(struct CGRect)arg1;	// IMP=0x00000000001c4942
- (void)_setMaskActive:(_Bool)arg1;	// IMP=0x00000000001c4925
- (void)_commonInit;	// IMP=0x00000000001c4879
- (void)_setUpVisualProvider;	// IMP=0x00000000001c4799
- (_Bool)_supportsLayoutStates;	// IMP=0x00000000001c4779
- (_Bool)_usesLegacyVisualProvider;	// IMP=0x00000000001c475c
- (void)_setRequiresLegacyVisualProvider;	// IMP=0x00000000001c46b3
@property(readonly, nonatomic) long long barPosition;
- (long long)_barPosition;	// IMP=0x00000000001c45c2
- (void)_setBarPosition:(long long)arg1;	// IMP=0x00000000001c45a5
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;	// IMP=0x000000000000aa81
- (void)_updateBackgroundToBackdropStyle:(long long)arg1;	// IMP=0x00000000001cbbaa
- (id)_scopeBarContainerView;	// IMP=0x00000000001cbb8d
- (long long)_textInputSource;	// IMP=0x00000000001cbb3e
- (id)_backgroundView;	// IMP=0x00000000001cbb21
- (void)_setEnabled:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001cbb04
- (void)_setEnabled:(_Bool)arg1;	// IMP=0x00000000001cbae7
- (_Bool)_isEnabled;	// IMP=0x00000000001cbaca
- (_Bool)isFirstResponder;	// IMP=0x00000000001cba86
- (_Bool)resignFirstResponder;	// IMP=0x00000000001cba42
- (_Bool)canResignFirstResponder;	// IMP=0x00000000001cb9fe
- (_Bool)becomeFirstResponder;	// IMP=0x00000000001cb9ba
- (_Bool)canBecomeFirstResponder;	// IMP=0x00000000001cb976
- (void)reloadInputViews;	// IMP=0x00000000001cb939
- (_Bool)_enableAutomaticKeyboardPressDone;	// IMP=0x00000000001cb8f0
- (_Bool)_disableAutomaticKeyboardUI;	// IMP=0x00000000001cb8a7
- (void)insertTextSuggestion:(id)arg1;	// IMP=0x00000000001cb744
- (void)_searchFieldTokensChanged;	// IMP=0x00000000001cb724
- (void)_searchFieldSelectionChanged;	// IMP=0x00000000001cb6cd
- (void)_searchFieldEditingChanged;	// IMP=0x00000000001cb6b9
- (void)_searchFieldTextChanged:(_Bool)arg1;	// IMP=0x00000000001cb555
- (void)_searchFieldReturnPressed;	// IMP=0x00000000001cb49f
- (void)_searchFieldEndEditing;	// IMP=0x00000000001cb3eb
- (void)_searchFieldBeginEditing;	// IMP=0x00000000001cb2fd
- (void)_resultsListButtonPressed;	// IMP=0x00000000001cb25f
- (void)_bookmarkButtonPressed;	// IMP=0x00000000001cb208
- (void)_cancelOperation:(id)arg1;	// IMP=0x00000000001cb1b4
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000001cb145
- (void)_cancelButtonPressed;	// IMP=0x00000000001cb08f
- (void)_destroyCancelButton;	// IMP=0x00000000001cb072
- (void)_setupCancelButtonWithAppearance:(id)arg1;	// IMP=0x00000000001cb055
- (void)_setupCancelButton;	// IMP=0x00000000001cb036
- (void)_setAutoDisableCancelButton:(_Bool)arg1;	// IMP=0x00000000001cb019
- (void)_setCancelButtonText:(id)arg1;	// IMP=0x00000000001caffc
- (void)_deleteButtonPressed;	// IMP=0x00000000001cafb4
- (void)_setShowsDeleteButton:(_Bool)arg1;	// IMP=0x00000000001caf97
- (_Bool)_isInBarButNotHosted;	// IMP=0x00000000001caf7a
- (void)setPretendsIsInBar:(_Bool)arg1;	// IMP=0x00000000001caf74
- (_Bool)pretendsIsInBar;	// IMP=0x00000000001caf6c
- (void)_setHelperPlaceholderHidden:(_Bool)arg1;	// IMP=0x00000000001cbc09
- (void)_setHelperPlaceholderOverride:(id)arg1;	// IMP=0x00000000001cbbec
- (void)_setHelperPlaceholder:(id)arg1;	// IMP=0x00000000001cbbcf
- (_Bool)_showsHelperPlaceholder;	// IMP=0x00000000001cbbc7
@property(nonatomic, setter=_setForceLegacyVisual:) _Bool _forceLegacyVisual;
- (_Bool)scribbleInteractionShouldDelayFocus:(id)arg1;	// IMP=0x00000000001cbf93
- (id)_selectedTokens;	// IMP=0x00000000001cbf16
- (void)_setTokenBackgroundColor:(id)arg1;	// IMP=0x00000000001cbea4
- (void)_replaceSearchTextWithToken:(id)arg1;	// IMP=0x00000000001cbdc9
- (void)_removeTokenAtIndex:(unsigned long long)arg1;	// IMP=0x00000000001cbd67
- (void)_insertToken:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000001cbcdd
- (id)_tokens;	// IMP=0x00000000001cbc8d
- (id)_searchTextField;	// IMP=0x00000000001cbfa8
- (double)_defaultAutolayoutSpacing;	// IMP=0x00000000011ab798
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(_Bool)arg4;	// IMP=0x00000000011ab75b
- (_Bool)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)arg1;	// IMP=0x00000000011ab753

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

