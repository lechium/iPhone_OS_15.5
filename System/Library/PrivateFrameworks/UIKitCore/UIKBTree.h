//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSCopying-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString;

@interface UIKBTree : NSObject <NSCopying>
{
    int type;	// 8 = 0x8
    NSString *name;	// 16 = 0x10
    NSMutableDictionary *properties;	// 24 = 0x18
    NSMutableArray *subtrees;	// 32 = 0x20
    NSMutableDictionary *cache;	// 40 = 0x28
    NSString *layoutTag;	// 48 = 0x30
    _Bool _isFloating;	// 56 = 0x38
    NSString *effectiveLayoutTag;	// 64 = 0x40
}

+ (id)keyboard;	// IMP=0x0000000000941786
+ (id)key;	// IMP=0x0000000000941726
+ (id)shapesForControlKeyShapes:(id)arg1 options:(int)arg2;	// IMP=0x000000000093d5ae
+ (id)mergeStringForKeyName:(id)arg1;	// IMP=0x000000000093d50f
+ (_Bool)shouldSkipCacheString:(id)arg1;	// IMP=0x0000000000936a30
+ (id)stringForType:(int)arg1;	// IMP=0x000000000092f798
+ (id)treeOfType:(int)arg1;	// IMP=0x000000000092e8e2
+ (id)uniqueName;	// IMP=0x000000000092e39c
+ (_Bool)typeIsPersistent:(int)arg1;	// IMP=0x000000000092e390
@property(nonatomic) _Bool isFloating; // @synthesize isFloating=_isFloating;
@property(retain, nonatomic) NSString *effectiveLayoutTag; // @synthesize effectiveLayoutTag;
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag;
@property(retain, nonatomic) NSMutableDictionary *cache; // @synthesize cache;
@property(retain, nonatomic) NSMutableArray *subtrees; // @synthesize subtrees;
@property(retain, nonatomic) NSMutableDictionary *properties; // @synthesize properties;
@property(retain, nonatomic) NSString *name; // @synthesize name;
@property(nonatomic) int type; // @synthesize type;
- (id)keysForDisplayRowAtIndex:(unsigned long long)arg1;	// IMP=0x00000000009417e6
- (_Bool)renderKeyInKeyplane:(id)arg1;	// IMP=0x00000000009413d3
- (_Bool)_renderAsStringKey;	// IMP=0x0000000000941381
- (id)cacheSecondaryDisplayString;	// IMP=0x00000000009412e7
- (id)cacheDisplayString;	// IMP=0x000000000094129a
- (_Bool)shouldCacheKey;	// IMP=0x0000000000940f67
- (void)setLayoutTag:(id)arg1 passingKeyTest:(CDUnknownBlockType)arg2;	// IMP=0x0000000000940d44
- (_Bool)containsKeyThatIgnoresHandBias;	// IMP=0x0000000000940c0e
- (_Bool)hasLayoutTag:(id)arg1;	// IMP=0x0000000000940be9
- (id)variantDisplayString;	// IMP=0x00000000009409f6
- (void)orderVariantKeys:(_Bool)arg1;	// IMP=0x0000000000940492
- (void)setPreventPaddle:(_Bool)arg1;	// IMP=0x0000000000940450
- (_Bool)preventPaddle;	// IMP=0x000000000094041b
- (void)setGroupNeighbor:(unsigned long long)arg1;	// IMP=0x00000000009403d2
- (unsigned long long)groupNeighbor;	// IMP=0x000000000094039a
- (_Bool)containsDividerVariant;	// IMP=0x0000000000940280
- (_Bool)isRightToLeftSensitive;	// IMP=0x0000000000940203
- (_Bool)disablesEdgeSwipe;	// IMP=0x00000000009401ac
- (_Bool)behavesAsShiftKey;	// IMP=0x000000000094015a
- (_Bool)avoidAutoDeactivation;	// IMP=0x000000000094012c
- (_Bool)dynamicDisplayTypeHint;	// IMP=0x00000000009400e0
- (_Bool)modifiesKeyplane;	// IMP=0x0000000000940084
- (_Bool)avoidsLanguageIndicator;	// IMP=0x000000000093ffa7
- (_Bool)allowRetestAfterCommittingDownActions;	// IMP=0x000000000093ff8e
- (_Bool)allowsDelayedTapForContinuousPathDisambiguation;	// IMP=0x000000000093ff6d
- (_Bool)allowsStartingContinuousPath;	// IMP=0x000000000093ff3e
- (_Bool)isExemptFromInputManagerHitTesting;	// IMP=0x000000000093fea0
- (_Bool)isExemptFromInputManagerLayout;	// IMP=0x000000000093fe56
- (void)setParentKey:(id)arg1;	// IMP=0x000000000093fe3a
- (id)parentKey;	// IMP=0x000000000093fe1e
- (void)setMergeAsMoreKey:(_Bool)arg1;	// IMP=0x000000000093fdc5
- (_Bool)mergeAsMoreKey;	// IMP=0x000000000093fd84
- (void)setForceMultitap:(_Bool)arg1;	// IMP=0x000000000093fd33
- (_Bool)forceMultitap;	// IMP=0x000000000093fd17
- (void)setClipCorners:(unsigned long long)arg1;	// IMP=0x000000000093fcce
- (unsigned long long)clipCorners;	// IMP=0x000000000093fcb2
- (void)setSplitMode:(int)arg1;	// IMP=0x000000000093fc70
- (int)splitMode;	// IMP=0x000000000093fc54
- (void)setDisabled:(_Bool)arg1;	// IMP=0x000000000093fc39
- (_Bool)disabled;	// IMP=0x000000000093fc20
- (void)setPopupDirection:(long long)arg1;	// IMP=0x000000000093fbd7
- (long long)popupDirection;	// IMP=0x000000000093fb9c
- (void)setFlickDirection:(long long)arg1;	// IMP=0x000000000093fb52
- (long long)flickDirection;	// IMP=0x000000000093fb15
- (id)variantPopupBias;	// IMP=0x000000000093faf9
- (void)setVariantPopupBias:(id)arg1;	// IMP=0x000000000093fadd
- (void)setGhost:(_Bool)arg1;	// IMP=0x000000000093fa90
- (_Bool)ghost;	// IMP=0x000000000093f9f8
- (void)setVisible:(_Bool)arg1;	// IMP=0x000000000093f9ae
- (_Bool)visible;	// IMP=0x000000000093f979
- (void)setOverrideDisplayString:(id)arg1;	// IMP=0x000000000093f95d
- (id)overrideDisplayString;	// IMP=0x000000000093f8dd
- (void)setRendering:(int)arg1;	// IMP=0x000000000093f89b
- (int)rendering;	// IMP=0x000000000093f87f
- (void)setDisplayRowHint:(int)arg1;	// IMP=0x000000000093f83d
- (int)displayRowHint;	// IMP=0x000000000093f805
- (void)setTextAlignment:(long long)arg1;	// IMP=0x000000000093f7c3
- (long long)textAlignment;	// IMP=0x000000000093f788
- (void)setSelectedVariantIndex:(long long)arg1;	// IMP=0x000000000093f735
- (long long)highlightedVariantIndex;	// IMP=0x000000000093f723
- (long long)selectedVariantIndex;	// IMP=0x000000000093f6e6
- (void)setDisplayTypeHint:(int)arg1;	// IMP=0x000000000093f6a4
- (int)displayTypeHint;	// IMP=0x000000000093f688
- (void)setVariantType:(int)arg1;	// IMP=0x000000000093f646
- (int)variantType;	// IMP=0x000000000093f60c
- (void)setInteractionType:(int)arg1;	// IMP=0x000000000093f5ca
- (int)interactionType;	// IMP=0x000000000093f5ae
- (void)setDisplayType:(int)arg1;	// IMP=0x000000000093f56c
- (int)displayType;	// IMP=0x000000000093f550
- (void)setLocalizationKey:(id)arg1;	// IMP=0x000000000093f534
- (id)localizationKey;	// IMP=0x000000000093f518
- (void)setSelectedVariantIndices:(id)arg1;	// IMP=0x000000000093f4fc
- (id)selectedVariantIndices;	// IMP=0x000000000093f4e0
- (void)setHighlightedVariantsList:(id)arg1;	// IMP=0x000000000093f4c4
- (id)highlightedVariantsList;	// IMP=0x000000000093f4a8
- (void)setSecondaryRepresentedStrings:(id)arg1;	// IMP=0x000000000093f48c
- (id)secondaryRepresentedStrings;	// IMP=0x000000000093f470
- (void)setSecondaryDisplayStrings:(id)arg1;	// IMP=0x000000000093f454
- (id)secondaryDisplayStrings;	// IMP=0x000000000093f438
- (void)setCachedGestureLayout:(id)arg1;	// IMP=0x000000000093f41c
- (id)cachedGestureLayout;	// IMP=0x000000000093f400
- (void)setGestureKey:(id)arg1;	// IMP=0x000000000093f3e4
- (id)gestureKey;	// IMP=0x000000000093f3c8
- (void)setDisplayString:(id)arg1;	// IMP=0x000000000093f3ac
- (id)displayString;	// IMP=0x000000000093f390
- (id)fullRepresentedString;	// IMP=0x000000000093f35b
- (void)setRepresentedString:(id)arg1;	// IMP=0x000000000093f33f
- (id)representedString;	// IMP=0x000000000093f263
- (void)updateVariantTypeForActions:(unsigned int)arg1;	// IMP=0x000000000093f1f9
- (int)_variantType;	// IMP=0x000000000093f1dd
- (void)setState:(int)arg1;	// IMP=0x000000000093f195
- (int)state;	// IMP=0x000000000093f179
- (id)activeShapesFromOutputShapes:(id)arg1 inputShapes:(id)arg2;	// IMP=0x000000000093ee38
- (void)setActiveGeometriesList:(id)arg1;	// IMP=0x000000000093ee1c
- (id)activeGeometriesList;	// IMP=0x000000000093ede7
- (void)setGeometriesList:(id)arg1;	// IMP=0x000000000093edcb
- (id)geometriesList;	// IMP=0x000000000093ed96
- (id)shapesForKeys:(id)arg1;	// IMP=0x000000000093ecbc
- (id)listShapes;	// IMP=0x000000000093eb26
- (void)centerKeyplaneInRect:(struct CGRect)arg1 scale:(double)arg2;	// IMP=0x000000000093e5d1
- (id)supplementaryKeyList;	// IMP=0x000000000093e426
- (id)attributeSet:(_Bool)arg1;	// IMP=0x000000000093e246
- (id)geometrySet:(_Bool)arg1;	// IMP=0x000000000093e066
- (id)keySet;	// IMP=0x000000000093df39
- (void)updateMoreAndInternationalKeysWithOptions:(int)arg1;	// IMP=0x000000000093db65
- (void)shiftRowAndResizeLeadingControlKey:(id)arg1 toSize:(struct CGSize)arg2 scale:(double)arg3;	// IMP=0x000000000093d433
- (void)replaceKey:(id)arg1 withKey:(id)arg2;	// IMP=0x000000000093d067
- (void)removeKey:(id)arg1 andShiftKeys:(id)arg2 scale:(double)arg3;	// IMP=0x000000000093ce07
- (void)insertKey:(id)arg1 withFrame:(struct CGRect)arg2 andShiftKeys:(id)arg3 scale:(double)arg4;	// IMP=0x000000000093c8d7
- (void)removeKey:(id)arg1;	// IMP=0x000000000093c5f0
- (void)scaleKeys:(id)arg1 withFactor:(struct CGSize)arg2 scale:(double)arg3;	// IMP=0x000000000093c579
- (void)insetKeys:(id)arg1 withInsets:(struct UIEdgeInsets)arg2 scale:(double)arg3;	// IMP=0x000000000093c4ef
- (void)resizeKeys:(id)arg1 withOffset:(struct CGPoint)arg2 scale:(double)arg3;	// IMP=0x000000000093c478
- (void)repositionKeys:(id)arg1 withOffset:(struct CGPoint)arg2 scale:(double)arg3;	// IMP=0x000000000093c401
- (void)centerVerticallyWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000093c377
- (void)centerHorizontallyWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000093c2ed
- (void)centerWhilePreservingLayoutWithKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000093c263
- (void)centerKeys:(id)arg1 inRect:(struct CGRect)arg2 scale:(double)arg3;	// IMP=0x000000000093c1d9
- (id)_horizontallyCoincidentKeysWithKey:(id)arg1;	// IMP=0x000000000093bf7e
- (void)_mutateKeys:(id)arg1 scale:(double)arg2 withShapeOperation:(CDUnknownBlockType)arg3;	// IMP=0x000000000093bd7a
- (_Bool)addMessagesWriteboardKeyOrRomanSwitch:(_Bool)arg1;	// IMP=0x000000000093bd0f
- (void)addRomanSwitchToCachedKeyListWithShape:(id)arg1 rendering:(int)arg2;	// IMP=0x000000000093bb1f
- (void)addWriteboardKeyToCachedKeyListWithShape:(id)arg1 rendering:(int)arg2;	// IMP=0x000000000093b940
- (_Bool)addMessagesWriteboardKeyOrRomanSwitchIfNoDismissKey:(_Bool)arg1;	// IMP=0x000000000093b113
- (_Bool)addMessagesWriteboardKeyOrRomanSwitchIfDismissKey:(_Bool)arg1;	// IMP=0x0000000000939948
- (id)shapeFromFrame:(struct CGRect)arg1 leftPadding:(double)arg2 rightPadding:(double)arg3;	// IMP=0x00000000009398c8
- (id)keysetCanContainWriteboardKey;	// IMP=0x0000000000939387
- (void)clearManualAddedKey;	// IMP=0x000000000093914a
- (id)rightSpaceKey;	// IMP=0x0000000000939048
- (id)mergeKeyNames:(id)arg1;	// IMP=0x0000000000938860
- (void)subsumeDisappearingKeyName:(id)arg1 intoKeyName:(id)arg2 factors:(id)arg3;	// IMP=0x00000000009387ba
- (id)keysForMergeConditions;	// IMP=0x0000000000938492
- (void)updateDictationKeyOnNumberPads:(_Bool)arg1;	// IMP=0x00000000009381b4
- (id)findLeftMoreKey;	// IMP=0x0000000000937fd0
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000937f79
- (_Bool)looksLike:(id)arg1;	// IMP=0x0000000000937f00
- (_Bool)supportsType:(long long)arg1;	// IMP=0x0000000000937ccc
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000937cb0
- (id)autolocalizedKeyCacheIterator;	// IMP=0x0000000000937c5e
- (int)dragThreshold;	// IMP=0x0000000000937c42
- (double)primaryKeylayoutOffset;	// IMP=0x0000000000937c03
- (double)primaryKeylayoutWidthRatio;	// IMP=0x0000000000937b7f
- (_Bool)isSplit;	// IMP=0x0000000000937b4d
- (void)cacheNativeIdiomIfNecessaryForScreenTraits:(id)arg1;	// IMP=0x0000000000937a88
- (long long)nativeIdiom;	// IMP=0x0000000000937a51
- (void)setResizingOffset:(double)arg1;	// IMP=0x00000000009379f6
- (double)resizingOffset;	// IMP=0x00000000009379c2
- (void)setIsGenerated:(_Bool)arg1;	// IMP=0x0000000000937968
- (_Bool)isGenerated;	// IMP=0x000000000093794f
- (_Bool)isLetters;	// IMP=0x000000000093784d
- (_Bool)looksExactlyLikeShiftAlternate;	// IMP=0x0000000000937829
- (_Bool)looksLikeShiftAlternate;	// IMP=0x00000000009377ce
- (_Bool)usesKeyCharging;	// IMP=0x00000000009377b2
- (_Bool)usesAdaptiveKeys;	// IMP=0x0000000000937796
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x000000000093777a
- (_Bool)noLanguageIndicator;	// IMP=0x000000000093775e
- (_Bool)notUseCandidateSelection;	// IMP=0x0000000000937742
- (_Bool)shouldSuppressDragRetest;	// IMP=0x0000000000937726
- (_Bool)shouldSkipCandidateSelectionForVariants;	// IMP=0x000000000093770a
- (_Bool)shouldSkipCandidateSelection;	// IMP=0x00000000009376ee
- (_Bool)diacriticForwardCompose;	// IMP=0x00000000009376d2
- (_Bool)isKanaPlane;	// IMP=0x00000000009375cb
- (_Bool)isAlphabeticPlane;	// IMP=0x00000000009375af
- (_Bool)isShiftKeyplane;	// IMP=0x0000000000937593
- (id)shiftAlternateKeyplaneName;	// IMP=0x0000000000937505
- (id)gestureKeyplaneName;	// IMP=0x00000000009374e9
- (id)alternateKeyplaneName;	// IMP=0x000000000093745b
- (_Bool)usesAutoShift;	// IMP=0x000000000093743f
- (id)keysExcludingEmptyKeys;	// IMP=0x00000000009373a9
- (id)keysWithString:(id)arg1;	// IMP=0x00000000009371da
- (id)keysByKeyName:(id)arg1;	// IMP=0x000000000093700e
- (id)geometriesOrderedByPosition;	// IMP=0x0000000000936fda
- (id)keysOrderedByPositionRTL;	// IMP=0x0000000000936fa1
- (id)keysOrderedByPosition;	// IMP=0x0000000000936f8f
- (id)keysOrderedByPositionWithoutZip;	// IMP=0x0000000000936bd0
- (void)clearTransientCaches;	// IMP=0x0000000000936ac5
- (id)keyAttributes;	// IMP=0x0000000000936756
- (id)geometries;	// IMP=0x000000000093647c
- (void)removeKeyFromAllCachedLists:(id)arg1;	// IMP=0x00000000009361cd
- (void)removeKeyFromCachedKeyList:(id)arg1;	// IMP=0x0000000000935ff9
- (void)addkeyToCachedKeyList:(id)arg1;	// IMP=0x0000000000935e82
- (id)keys;	// IMP=0x0000000000935ce3
- (void)_addKeylayoutKeys:(id)arg1;	// IMP=0x0000000000935b76
- (void)setAttributes:(id)arg1;	// IMP=0x00000000009359ea
- (id)keyplaneForKey:(id)arg1;	// IMP=0x000000000093573a
- (id)keyForString:(id)arg1;	// IMP=0x000000000093549d
- (void)precacheLayoutName:(id)arg1;	// IMP=0x0000000000935465
- (id)layoutName;	// IMP=0x00000000009353e0
- (void)cacheKey:(id)arg1;	// IMP=0x000000000093516f
- (id)_cacheRootNameForKey:(id)arg1;	// IMP=0x0000000000934dd0
- (unsigned long long)numberOfRows;	// IMP=0x0000000000934b29
- (id)scriptSwitchKey;	// IMP=0x000000000093496a
- (id)keyplaneSwitchKeysWithoutCurrentKeyplane:(id)arg1;	// IMP=0x00000000009345a5
- (id)keyplaneSwitchKeys;	// IMP=0x000000000093440f
- (id)firstKeyplaneSwitchKey;	// IMP=0x00000000009342a0
- (id)firstCachedKeyWithName:(id)arg1;	// IMP=0x0000000000934260
- (id)cachedKeysByKeyName:(id)arg1;	// IMP=0x000000000093422f
- (void)setVisualStyling:(CDStruct_227bb23d)arg1;	// IMP=0x00000000009341ec
- (CDStruct_227bb23d)visualStyling;	// IMP=0x0000000000934194
- (CDStruct_227bb23d)visualStylingForScreenTraits:(id)arg1;	// IMP=0x0000000000933ecb
- (CDStruct_227bb23d)stylingFromVisualStyle;	// IMP=0x0000000000933eb7
- (void)setVisualStyle:(int)arg1;	// IMP=0x0000000000933e75
- (int)visualStyle;	// IMP=0x0000000000933e59
- (struct CGRect)keyUnionPaddedFrame;	// IMP=0x0000000000933e21
- (struct CGRect)keyUnionFrame;	// IMP=0x0000000000933dec
- (struct CGRect)keyUnionFramePadded:(_Bool)arg1;	// IMP=0x0000000000933a8f
- (struct CGPoint)navigationPointOfKey;	// IMP=0x000000000093397a
- (void)setPaddedFrame:(struct CGRect)arg1;	// IMP=0x000000000093392c
- (struct CGRect)paddedFrame;	// IMP=0x00000000009338af
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000933861
- (struct CGRect)originalFrame;	// IMP=0x000000000093378b
- (struct CGRect)frame;	// IMP=0x00000000009336dc
- (struct CGRect)_originalKeyplaneFrame;	// IMP=0x0000000000933456
- (struct CGRect)_keyplaneFrame;	// IMP=0x00000000009331d0
- (void)setGeometry:(id)arg1;	// IMP=0x000000000093317f
- (id)geometry;	// IMP=0x000000000093312f
- (void)setShape:(id)arg1;	// IMP=0x000000000093310f
- (id)shape;	// IMP=0x00000000009330ef
- (_Bool)subtreesAreOrdered;	// IMP=0x00000000009330d6
- (_Bool)isLeafType;	// IMP=0x00000000009330b7
- (void)elaborateLayoutWithSize:(struct CGSize)arg1 scale:(double)arg2 origin:(struct CGPoint)arg3;	// IMP=0x000000000093209d
- (void)elaborateLayoutWithSize:(struct CGSize)arg1 scale:(double)arg2;	// IMP=0x0000000000932078
- (long long)_keyCountOnNamedRow:(id)arg1;	// IMP=0x0000000000931eef
- (void)zipAttributes;	// IMP=0x0000000000931ed6
- (void)zipOnlyGeometrySet;	// IMP=0x0000000000931ebd
- (void)zipGeometrySet;	// IMP=0x0000000000931ea1
- (void)zipGeometries:(_Bool)arg1 attributes:(_Bool)arg2;	// IMP=0x00000000009315e8
- (void)updateFlickKeycapOnKeys;	// IMP=0x0000000000930886
- (void)mergeReturnKey:(id)arg1 withReturnKey:(id)arg2;	// IMP=0x000000000093001f
- (_Bool)_needsScaling;	// IMP=0x000000000092ffcd
- (int)indexOfSubtree:(id)arg1;	// IMP=0x000000000092ff71
- (id)subtreesWithProperty:(id)arg1 value:(id)arg2;	// IMP=0x000000000092fd79
- (id)subtreeWithName:(id)arg1 rows:(id)arg2;	// IMP=0x000000000092fbf4
- (id)subtreeWithName:(id)arg1;	// IMP=0x000000000092f9c2
- (id)subtreeWithType:(int)arg1;	// IMP=0x000000000092f860
- (id)recursiveDescription;	// IMP=0x000000000092f617
- (id)description;	// IMP=0x000000000092f539
- (id)numberForProperty:(id)arg1;	// IMP=0x000000000092f527
- (_Bool)boolForProperty:(id)arg1;	// IMP=0x000000000092f496
- (long long)intForProperty:(id)arg1;	// IMP=0x000000000092f466
- (id)stringForProperty:(id)arg1;	// IMP=0x000000000092f454
- (id)objectForProperty:(id)arg1;	// IMP=0x000000000092f3d5
- (_Bool)setObject:(id)arg1 forProperty:(id)arg2;	// IMP=0x000000000092f31b
- (_Bool)isDuplicateOfTree:(id)arg1;	// IMP=0x000000000092f1da
- (_Bool)isEqualToTree:(id)arg1;	// IMP=0x000000000092f174
- (_Bool)isSameAsTree:(id)arg1;	// IMP=0x000000000092ec5b
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000092ea22
- (void)dealloc;	// IMP=0x000000000092e9bc
- (id)initWithType:(int)arg1 withName:(id)arg2 withProperties:(id)arg3 withSubtrees:(id)arg4 withCache:(id)arg5;	// IMP=0x000000000092e916
- (id)initWithType:(int)arg1;	// IMP=0x000000000092e7e6
- (_Bool)isHashed;	// IMP=0x000000000092e73b
- (id)componentName;	// IMP=0x000000000092e6e2
- (id)unhashedName;	// IMP=0x000000000092e6c8
- (id)nameFromAttributes;	// IMP=0x000000000092e3cd

@end

