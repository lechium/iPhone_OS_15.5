//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/NSLayoutManagerDelegate-Protocol.h>
#import <UIKitCore/NSUITextViewCommonMethods-Protocol.h>
#import <UIKitCore/UIAutoscrollContainer-Protocol.h>
#import <UIKitCore/UIKeyInputPrivate-Protocol.h>
#import <UIKitCore/UIKeyboardInput-Protocol.h>
#import <UIKitCore/UITextAutoscrolling-Protocol.h>
#import <UIKitCore/UITextFieldContent-Protocol.h>
#import <UIKitCore/UITextInput-Protocol.h>
#import <UIKitCore/UITextInputControllerDelegate-Protocol.h>
#import <UIKitCore/UITextInputPrivate-Protocol.h>

@class NSAttributedString, NSDictionary, NSIndexSet, NSLayoutManager, NSString, NSTextContainer, NSTextStorage, NSTimer, RTIInputSystemSourceSession, UIAutoscroll, UIColor, UIImage, UIInputContextHistory, UITextField, UITextInputController, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, _UICascadingTextStorage, _UISupplementalLexicon, _UITextLayoutController;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, _UITextCanvas;

@interface UIFieldEditor <UITextInputControllerDelegate, NSLayoutManagerDelegate, UIKeyInputPrivate, UITextFieldContent, NSUITextViewCommonMethods, UIAutoscrollContainer, UITextInput, UITextInputPrivate, UITextAutoscrolling, UIKeyboardInput>
{
    UITextField *_textField;	// 128 = 0x80
    _Bool _active;	// 136 = 0x88
    UIAutoscroll *_autoscroll;	// 144 = 0x90
    NSAttributedString *_originalAttributedString;	// 152 = 0x98
    NSDictionary *_originalDefaultAttributes;	// 160 = 0xa0
    struct UIEdgeInsets _contentInsetsFromFonts;	// 168 = 0xa8
    UITextInputController *__textInputController;	// 200 = 0xc8
    NSTextContainer *__textContainer;	// 208 = 0xd0
    _UITextLayoutController *__textLayoutController;	// 216 = 0xd8
    _UICascadingTextStorage *__textStorage;	// 224 = 0xe0
    struct {
        unsigned int delegateRespondsToFieldEditorDidChange:1;
        unsigned int delegateRespondsToFieldEditorDidChangeSelection:1;
        unsigned int delegateRespondsToShouldInsertText:1;
        unsigned int delegateRespondsToShouldReplaceWithText:1;
        unsigned int suppressScrollToSelection:1;
        unsigned int clearOnNextEdit:1;
        unsigned int needsInvalidationAfterObscuredRangeChange:1;
        unsigned int isAnimatingPaste:1;
        unsigned int contentInsetsFromFontsValid:1;
    } _feFlags;	// 232 = 0xe8
    struct UIEdgeInsets _padding;	// 240 = 0xf0
    unsigned long long _obscuredSecureLength;	// 272 = 0x110
    NSTimer *_obscureAllTextTimer;	// 280 = 0x118
    double _desiredContentWidth;	// 288 = 0x120
    UIView<_UITextCanvas> *_contentView;	// 296 = 0x128
    _Bool _allowsAttachments;	// 304 = 0x130
    _Bool __shouldObscureNextInput;	// 305 = 0x131
    CDUnknownBlockType _scrollAnimationEndedAction;	// 312 = 0x138
    struct CGPoint _autoscrollContentOffset;	// 320 = 0x140
}

+ (id)excludedElementsForHTML;	// IMP=0x0000000001060236
+ (id)activeFieldEditor;	// IMP=0x000000000105be92
+ (id)sharedFieldEditor;	// IMP=0x000000000105be8a
- (void).cxx_destruct;	// IMP=0x0000000001063c33
@property(nonatomic) _Bool _shouldObscureNextInput; // @synthesize _shouldObscureNextInput=__shouldObscureNextInput;
@property(nonatomic) struct CGPoint autoscrollContentOffset; // @synthesize autoscrollContentOffset=_autoscrollContentOffset;
@property(copy, nonatomic, setter=_setScrollAnimationEndedAction:) CDUnknownBlockType _scrollAnimationEndedAction; // @synthesize _scrollAnimationEndedAction;
@property(nonatomic) _Bool allowsAttachments; // @synthesize allowsAttachments=_allowsAttachments;
@property(nonatomic) struct UIEdgeInsets padding; // @synthesize padding=_padding;
- (_Bool)_shouldIgnoreAutofillSave;	// IMP=0x0000000001063b79
- (_Bool)_hasDictationPlaceholder;	// IMP=0x0000000001063b35
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0000000001063ad4
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0000000001063a79
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x00000000010639f2
- (id)_textInputTraits;	// IMP=0x0000000001063946
- (_Bool)_shouldObscureInput;	// IMP=0x00000000010638ae
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
- (id)attributedSubstringForMarkedRange;	// IMP=0x00000000010636f0
@property(nonatomic) struct _NSRange markedRange;
- (id)linkTextAttributes;	// IMP=0x0000000001063657
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;	// IMP=0x0000000001063651
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;	// IMP=0x0000000001063609
- (_Bool)isHorizontallyResizable;	// IMP=0x0000000001063601
- (struct CGSize)minSize;	// IMP=0x00000000010635d1
- (void)invalidateTextContainerOrigin;	// IMP=0x00000000010635cb
- (void)setConstrainedFrameSize:(struct CGSize)arg1;	// IMP=0x0000000001063560
- (void)textContainerUsageDidChangeToBounds:(struct CGRect)arg1;	// IMP=0x000000000106352b
- (struct UIEdgeInsets)textContainerInset;	// IMP=0x00000000010634f0
- (struct CGPoint)textContainerOrigin;	// IMP=0x0000000001063403
- (struct CGPoint)textContainerOriginForTextAlignment:(long long)arg1;	// IMP=0x00000000010630e0
- (struct CGRect)visibleRect;	// IMP=0x0000000001063082
- (void)setLayoutOrientation:(long long)arg1;	// IMP=0x000000000106307c
@property(readonly, nonatomic) long long layoutOrientation;
- (void)setTextContainer:(id)arg1;	// IMP=0x0000000001062f46
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(_Bool)arg3;	// IMP=0x0000000001062f27
- (struct CGRect)layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;	// IMP=0x0000000001062e58
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;	// IMP=0x0000000001062cf1
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange)arg6;	// IMP=0x0000000001062a98
- (void)endSelectionChange;	// IMP=0x0000000001062a42
- (void)beginSelectionChange;	// IMP=0x00000000010629fa
- (id)_inputController;	// IMP=0x00000000010629e8
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)metadataDictionariesForDictationResults;	// IMP=0x0000000001062952
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;	// IMP=0x00000000010628c9
- (void)removeTextPlaceholder:(id)arg1;	// IMP=0x0000000001062857
- (id)insertTextPlaceholderWithSize:(struct CGSize)arg1;	// IMP=0x00000000010627eb
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;	// IMP=0x0000000001062773
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;	// IMP=0x00000000010626f4
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;	// IMP=0x000000000106261e
- (_Bool)isEditing;	// IMP=0x00000000010625e4
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000001062578
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x00000000010624de
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x0000000001062472
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x00000000010623ef
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x000000000106229e
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x000000000106221f
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x00000000010620ed
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000001062070
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000001061ed5
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x0000000001061e33
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000001061da8
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000001061d1d
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x0000000001061c8f
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x0000000001061c06
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x0000000001061b6f
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x0000000001061a92
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000010619df
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x00000000010618b9
- (void)setMarkedTextStyle:(id)arg1;	// IMP=0x0000000001061847
@property(readonly, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)clearText;	// IMP=0x0000000001061568
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x00000000010614e2
- (void)replaceRange:(id)arg1 withAttributedText:(id)arg2;	// IMP=0x000000000106145c
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x00000000010613d6
- (id)attributedTextInRange:(id)arg1;	// IMP=0x0000000001061353
- (void)insertAttributedText:(id)arg1;	// IMP=0x00000000010612e1
- (id)textInRange:(id)arg1;	// IMP=0x000000000106125e
- (void)deleteBackward;	// IMP=0x00000000010611d2
- (void)_invalidateAfterObscuredRangeChangeIfNeeded;	// IMP=0x00000000010610bb
- (void)_setNeedsInvalidateAfterObscuredRangeChange;	// IMP=0x000000000106104a
- (void)_unobscureAllText;	// IMP=0x0000000001060fb8
- (void)_obscureAllText;	// IMP=0x0000000001060f51
- (void)_ephemerallyUnobscureTextInRange:(struct _NSRange)arg1;	// IMP=0x0000000001060ec5
- (void)_ephemerallyUnobscureCharacterAtIndex:(unsigned long long)arg1;	// IMP=0x0000000001060e18
- (void)_unobscureTextInRange:(struct _NSRange)arg1 settingTimerToReobscure:(_Bool)arg2;	// IMP=0x0000000001060cd3
- (void)_cancelObscureAllTextTimer;	// IMP=0x0000000001060c91
- (struct _NSRange)insertFilteredText:(id)arg1;	// IMP=0x00000000010608bb
- (void)insertText:(id)arg1;	// IMP=0x00000000010608a9
@property(readonly, nonatomic) _Bool hasText;
- (_Bool)_clearOnEditIfNeeded;	// IMP=0x00000000010607e1
- (double)_passcodeStyleAlpha;	// IMP=0x00000000010607a2
@property(readonly, nonatomic) NSTextStorage *textStorage;
@property(readonly, nonatomic) NSTextContainer *textContainer;
- (void)setNonEditingLinebreakMode:(long long)arg1;	// IMP=0x0000000001060732
- (long long)nonEditingLinebreakMode;	// IMP=0x00000000010606ee
- (id)undoManager;	// IMP=0x000000000106069e
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x000000000106062a
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x00000000010605ab
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x000000000106054b
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;	// IMP=0x000000000106039c
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;	// IMP=0x0000000001060340
- (void)_performWhileSuppressingDelegateNotifications:(CDUnknownBlockType)arg1;	// IMP=0x00000000010601c4
- (_Bool)hasMarkedText;	// IMP=0x00000000010601bc
- (void)setSelection:(struct _NSRange)arg1;	// IMP=0x000000000106013a
- (struct _NSRange)selectionRange;	// IMP=0x00000000010600e7
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2 adjustForPurpleCaret:(_Bool)arg3;	// IMP=0x00000000010600b1
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2;	// IMP=0x0000000001060099
- (int)scrollYOffset;	// IMP=0x0000000001060082
- (int)scrollXOffset;	// IMP=0x000000000106006b
- (void)setAttributedTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;	// IMP=0x0000000001060053
- (void)setAttributedText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;	// IMP=0x000000000105ffca
- (void)setAttributedText:(id)arg1;	// IMP=0x000000000105ff4a
- (id)attributedText;	// IMP=0x000000000105fefa
- (void)_setAttributedTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(_Bool)arg3;	// IMP=0x000000000105f9d4
- (void)addTextAlternativesDisplayStyle:(long long)arg1 toRange:(struct _NSRange)arg2;	// IMP=0x000000000105f8bf
- (void)setTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;	// IMP=0x000000000105f8a7
- (void)setText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;	// IMP=0x000000000105f81e
- (void)setText:(id)arg1;	// IMP=0x000000000105f79e
- (id)text;	// IMP=0x000000000105f6ce
- (void)_setTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2 andSetCaretSelectionAfterText:(_Bool)arg3;	// IMP=0x000000000105f5db
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (id)font;	// IMP=0x000000000105f3d2
- (void)setFont:(id)arg1;	// IMP=0x000000000105f3b6
- (id)textColor;	// IMP=0x000000000105f34c
- (void)setTextColor:(id)arg1;	// IMP=0x000000000105f330
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;	// IMP=0x000000000105f289
- (struct _NSRange)_unobscuredSecureRange;	// IMP=0x000000000105f209
- (void)_setValue:(id)arg1 forTextAttribute:(id)arg2;	// IMP=0x000000000105f0be
- (void)drawRect:(struct CGRect)arg1;	// IMP=0x000000000105f0b8
- (void)_handleObscuredTextAfterActivationChange;	// IMP=0x000000000105f07a
- (void)_deactivateSelectionView;	// IMP=0x000000000105f002
- (void)_resetTypingAttributes;	// IMP=0x000000000105efb6
- (void)deactivateEditorDiscardingEdits:(_Bool)arg1;	// IMP=0x000000000105eda8
- (void)_updateLayoutManagerStyleEffectConfiguration;	// IMP=0x000000000105ed1e
- (void)activateEditor;	// IMP=0x000000000105e6d9
- (void)_tvUpdateTextColor;	// IMP=0x000000000105e61b
- (struct CGRect)contentFrameForView:(id)arg1;	// IMP=0x000000000105e5fd
- (void)cancelAutoscroll;	// IMP=0x000000000105e5e0
- (void)updateAutoscroll:(id)arg1;	// IMP=0x000000000105e0d4
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x000000000105df33
- (struct CGRect)_selectionClipRect;	// IMP=0x000000000105df14
- (id)textField;	// IMP=0x000000000105defb
- (id)textColorForCaretSelection;	// IMP=0x000000000105de5b
- (id)textInputTraits;	// IMP=0x000000000105ddb5
- (id)_textSelectingContainer;	// IMP=0x000000000105dd76
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;	// IMP=0x000000000105dc47
- (_Bool)isFirstResponder;	// IMP=0x000000000105dc0d
- (id)_responderForBecomeFirstResponder;	// IMP=0x000000000105dbf4
- (void)selectAll;	// IMP=0x000000000105dbc0
- (_Bool)textInputShouldExtendCaretHeight:(id)arg1;	// IMP=0x000000000105db31
- (void)textInputDidAnimatePaste:(id)arg1;	// IMP=0x000000000105db20
- (void)textInputWillAnimatePaste:(id)arg1;	// IMP=0x000000000105db0f
- (void)textInput:(id)arg1 prepareAttributedTextForInsertion:(id)arg2;	// IMP=0x000000000105da88
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x000000000105da0c
- (struct _NSRange)textInput:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;	// IMP=0x000000000105d99f
- (void)textInputDidChangeSelection:(id)arg1;	// IMP=0x000000000105d902
- (void)textInputDidChange:(id)arg1;	// IMP=0x000000000105d8b4
- (void)keyboardInputChangedSelection:(id)arg1;	// IMP=0x000000000105d827
- (_Bool)keyboardInputChanged:(id)arg1;	// IMP=0x000000000105d78f
- (_Bool)keyboardInputShouldDelete:(id)arg1;	// IMP=0x000000000105d6f7
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;	// IMP=0x000000000105d62e
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;	// IMP=0x000000000105d56c
- (void)layoutSubviews;	// IMP=0x000000000105cfbf
- (_Bool)setUpClippingWithMaskForBounds:(struct CGRect)arg1 contentFrame:(struct CGRect)arg2;	// IMP=0x000000000105cc30
- (struct UIEdgeInsets)_contentInsetsFromFonts;	// IMP=0x000000000105cbd9
- (struct UIEdgeInsets)_fullContentInsetsFromFonts;	// IMP=0x000000000105ca6f
- (void)_applyCorrectTextContainerSize:(id)arg1;	// IMP=0x000000000105c7cf
- (void)_applyCorrectTextContainerSize;	// IMP=0x000000000105c74b
- (void)_textStorageDidProcessEditing:(id)arg1;	// IMP=0x000000000105c66f
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000105c5fc
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (id)_textCanvasView;	// IMP=0x000000000105c529
- (id)_textInputController;	// IMP=0x000000000105c494
- (id)_textStorage;	// IMP=0x000000000105c34e
- (id)_textContainer;	// IMP=0x000000000105c273
- (id)_textLayoutController;	// IMP=0x000000000105c192
@property(readonly, nonatomic) _UITextLayoutController *textLayoutController;
- (void)dealloc;	// IMP=0x000000000105c0c1
- (id)initWithTextField:(id)arg1;	// IMP=0x000000000105beae
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000105be9a
- (void)_deleteBackwardAndNotify:(_Bool)arg1;	// IMP=0x0000000000b73d2e

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, nonatomic) long long cursorBehavior;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(readonly, nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) long long selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool shouldAutoscroll;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType; // @dynamic smartDashesType;
@property(nonatomic) long long smartInsertDeleteType; // @dynamic smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType; // @dynamic smartQuotesType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(readonly, nonatomic) _Bool supportsImagePaste;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType; // @dynamic textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

