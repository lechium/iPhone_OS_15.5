//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/_UIKBRTRecognizerDelegate-Protocol.h>
#import <UIKitCore/_UIKBRTTouchDriftingDelegate-Protocol.h>
#import <UIKitCore/_UIScreenEdgePanRecognizerDelegate-Protocol.h>
#import <UIKitCore/_UIViewRepresentingKeyboardLayout-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSUUID, UIEvent, UIKBCadenceMonitor, UIKBScreenTraits, UIKBTextEditingTraits, UIKeyboardTaskQueue, UIKeyboardTypingStyleEstimator, UITextInputTraits, _UIKBRTFingerDetection, _UIKBRTRecognizer, _UIKBRTTouchDrifting, _UIKBRTTouchVelocities, _UIScreenEdgePanRecognizer;
@protocol OS_dispatch_queue, UIKeyboardLayoutSizeDelegate;

@interface UIKeyboardLayout <_UIKBRTRecognizerDelegate, _UIKBRTTouchDriftingDelegate, _UIViewRepresentingKeyboardLayout, _UIScreenEdgePanRecognizerDelegate>
{
    UITextInputTraits *_inputTraits;	// 8 = 0x8
    UIKBScreenTraits *_screenTraits;	// 16 = 0x10
    UIKBTextEditingTraits *_textEditingTraits;	// 24 = 0x18
    NSMutableArray *_uncommittedTouchUUIDs;	// 32 = 0x20
    NSUUID *_activeTouchUUID;	// 40 = 0x28
    NSUUID *_shiftKeyTouchUUID;	// 48 = 0x30
    unsigned long long _cursorLocation;	// 56 = 0x38
    _Bool _disableInteraction;	// 64 = 0x40
    UIKeyboardTaskQueue *_taskQueue;	// 72 = 0x48
    UIKeyboardTypingStyleEstimator *_typingStyleEstimator;	// 80 = 0x50
    UIEvent *_currentTouchDownEvent;	// 88 = 0x58
    _Bool hideKeysUnderIndicator;	// 96 = 0x60
    _Bool _ignoringKeyplaneChange;	// 97 = 0x61
    _Bool _hasPreferredHeight;	// 98 = 0x62
    _Bool _isExecutingDeferredTouchTasks;	// 99 = 0x63
    _Bool _listeningForWillChange;	// 100 = 0x64
    _Bool _listeningForDidChange;	// 101 = 0x65
    double _preferredHeight;	// 104 = 0x68
    _UIScreenEdgePanRecognizer *_screenEdgePanRecognizer;	// 112 = 0x70
    CDUnknownBlockType _deferredTouchDownTask;	// 120 = 0x78
    CDUnknownBlockType _deferredTouchMovedTask;	// 128 = 0x80
    _UIKBRTRecognizer *_handRestRecognizer;	// 136 = 0x88
    _UIKBRTFingerDetection *_fingerDetection;	// 144 = 0x90
    UIKBCadenceMonitor *_cadenceMonitor;	// 152 = 0x98
    _UIKBRTTouchVelocities *_touchVelocities;	// 160 = 0xa0
    double lastTouchUpTime;	// 168 = 0xa8
    id <UIKeyboardLayoutSizeDelegate> _sizeDelegate;	// 176 = 0xb0
    double _timestampOfLastTouchesEnded;	// 184 = 0xb8
    CDUnknownBlockType _deferredTaskForActiveTouch;	// 192 = 0xc0
    _UIKBRTTouchDrifting *_touchDrifting;	// 200 = 0xc8
    NSMutableDictionary *_deferredTouchTaskLists;	// 208 = 0xd0
    NSObject<OS_dispatch_queue> *_deferredTouchTaskListsQueue;	// 216 = 0xd8
    NSMutableSet *_touchIgnoredUUIDSet;	// 224 = 0xe0
}

+ (_Bool)_showSmallDisplayKeyplane;	// IMP=0x0000000000abb808
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0000000000abb7f2
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x0000000000abb7e9
@property(nonatomic) _Bool listeningForDidChange; // @synthesize listeningForDidChange=_listeningForDidChange;
@property(nonatomic) _Bool listeningForWillChange; // @synthesize listeningForWillChange=_listeningForWillChange;
@property(nonatomic) _Bool isExecutingDeferredTouchTasks; // @synthesize isExecutingDeferredTouchTasks=_isExecutingDeferredTouchTasks;
@property(retain, nonatomic) NSMutableSet *touchIgnoredUUIDSet; // @synthesize touchIgnoredUUIDSet=_touchIgnoredUUIDSet;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *deferredTouchTaskListsQueue; // @synthesize deferredTouchTaskListsQueue=_deferredTouchTaskListsQueue;
@property(retain, nonatomic) NSMutableDictionary *deferredTouchTaskLists; // @synthesize deferredTouchTaskLists=_deferredTouchTaskLists;
@property(retain, nonatomic) _UIKBRTTouchDrifting *touchDrifting; // @synthesize touchDrifting=_touchDrifting;
@property(readonly, nonatomic) _Bool hasPreferredHeight; // @synthesize hasPreferredHeight=_hasPreferredHeight;
@property(nonatomic) _Bool ignoringKeyplaneChange; // @synthesize ignoringKeyplaneChange=_ignoringKeyplaneChange;
@property(copy, nonatomic) CDUnknownBlockType deferredTaskForActiveTouch; // @synthesize deferredTaskForActiveTouch=_deferredTaskForActiveTouch;
@property(readonly, nonatomic) double timestampOfLastTouchesEnded; // @synthesize timestampOfLastTouchesEnded=_timestampOfLastTouchesEnded;
@property(retain, nonatomic) UIKBScreenTraits *screenTraits; // @synthesize screenTraits=_screenTraits;
@property(nonatomic) id <UIKeyboardLayoutSizeDelegate> sizeDelegate; // @synthesize sizeDelegate=_sizeDelegate;
@property(nonatomic) double lastTouchUpTime; // @synthesize lastTouchUpTime;
@property(retain, nonatomic) _UIKBRTTouchVelocities *touchVelocities; // @synthesize touchVelocities=_touchVelocities;
@property(retain, nonatomic) UIKBCadenceMonitor *cadenceMonitor; // @synthesize cadenceMonitor=_cadenceMonitor;
@property(retain, nonatomic) _UIKBRTFingerDetection *fingerDetection; // @synthesize fingerDetection=_fingerDetection;
@property(retain, nonatomic) _UIKBRTRecognizer *handRestRecognizer; // @synthesize handRestRecognizer=_handRestRecognizer;
@property(copy, nonatomic) CDUnknownBlockType deferredTouchMovedTask; // @synthesize deferredTouchMovedTask=_deferredTouchMovedTask;
@property(copy, nonatomic) CDUnknownBlockType deferredTouchDownTask; // @synthesize deferredTouchDownTask=_deferredTouchDownTask;
@property(retain, nonatomic) _UIScreenEdgePanRecognizer *screenEdgePanRecognizer; // @synthesize screenEdgePanRecognizer=_screenEdgePanRecognizer;
@property(nonatomic) _Bool hideKeysUnderIndicator; // @synthesize hideKeysUnderIndicator;
@property(nonatomic) double preferredHeight; // @synthesize preferredHeight=_preferredHeight;
@property(nonatomic) _Bool disableInteraction; // @synthesize disableInteraction=_disableInteraction;
@property(nonatomic) unsigned long long cursorLocation; // @synthesize cursorLocation=_cursorLocation;
@property(retain, nonatomic) NSUUID *shiftKeyTouchUUID; // @synthesize shiftKeyTouchUUID=_shiftKeyTouchUUID;
@property(retain, nonatomic) NSUUID *activeTouchUUID; // @synthesize activeTouchUUID=_activeTouchUUID;
- (id)getRomanAccentVariantsForString:(id)arg1 inputMode:(id)arg2 keyboardVariantIndludes:(int)arg3;	// IMP=0x0000000000ac619e
- (_Bool)isHandwritingPlane;	// IMP=0x0000000000ac6196
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x0000000000ac618e
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x0000000000ac6181
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x0000000000ac6174
- (void)changeToKeyplane:(id)arg1;	// IMP=0x0000000000ac616e
- (id)keyplaneNamed:(id)arg1;	// IMP=0x0000000000ac6166
- (id)keyplaneForKey:(id)arg1;	// IMP=0x0000000000ac615e
- (id)baseKeyForString:(id)arg1;	// IMP=0x0000000000ac6156
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x0000000000ac614e
- (struct CGSize)stretchFactor;	// IMP=0x0000000000ac613d
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x0000000000ac6137
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x0000000000ac5a45
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000ac5a3d
- (void)updateUndoKeyState;	// IMP=0x0000000000ac5a37
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x0000000000ac5a2f
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x0000000000ac5a27
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x0000000000ac5a21
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x0000000000ac5a1b
- (_Bool)isPossibleToTypeFast;	// IMP=0x0000000000ac5a13
- (_Bool)isResized;	// IMP=0x0000000000ac5a0b
- (_Bool)isResizing;	// IMP=0x0000000000ac5a03
- (_Bool)supportsEmoji;	// IMP=0x0000000000ac59fb
- (_Bool)isEmojiKeyplane;	// IMP=0x0000000000ac59f3
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x0000000000ac59eb
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x0000000000ac59e3
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x0000000000ac59dd
- (_Bool)_allowContinuousPathUI;	// IMP=0x0000000000ac59d5
- (id)currentKeyplane;	// IMP=0x0000000000ac59cd
- (void)traitCollectionDidChange;	// IMP=0x0000000000ac59c7
- (double)biasedKeyboardWidthRatio;	// IMP=0x0000000000ac59b9
- (long long)currentHandBias;	// IMP=0x0000000000ac59b1
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000ac55b1
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000ac5573
- (void)willBeginIndirectSelectionGesture;	// IMP=0x0000000000ac5535
- (void)setDisableTouchInput:(_Bool)arg1;	// IMP=0x0000000000ac552f
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000ac5529
- (_Bool)shouldFadeToLayout;	// IMP=0x0000000000ac5521
- (_Bool)shouldFadeFromLayout;	// IMP=0x0000000000ac5519
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x0000000000ac5504
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x0000000000ac54fc
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x0000000000ac54de
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x0000000000ac53d9
- (double)flickDistance;	// IMP=0x0000000000ac5390
- (double)hitBuffer;	// IMP=0x0000000000ac5387
- (_Bool)canHandleEvent:(id)arg1;	// IMP=0x0000000000ac532c
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000ac5324
- (unsigned long long)fingerIDForTouchUUID:(id)arg1;	// IMP=0x0000000000ac52bb
- (struct CGPoint)_uikbrtTouchDrifting:(id)arg1 touchCenterForFingerID:(unsigned long long)arg2;	// IMP=0x0000000000ac5255
- (id)_uikbrtTouchDrifting:(id)arg1 touchIdentifiersForFingerID:(unsigned long long)arg2;	// IMP=0x0000000000ac51f3
- (unsigned long long)_uikbrtTouchDrifting:(id)arg1 fingerIDFortouchIdentifier:(id)arg2;	// IMP=0x0000000000ac5191
- (void)_uikbrtTouchDriftingStateChanged:(id)arg1;	// IMP=0x0000000000ac5159
- (struct CGPoint)rightVirtualDriftOffset;	// IMP=0x0000000000ac50fd
- (struct CGPoint)leftVirtualDriftOffset;	// IMP=0x0000000000ac50a1
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x0000000000ac509b
- (_Bool)supportsVirtualDrift;	// IMP=0x0000000000ac5082
- (_Bool)isReachableDevice;	// IMP=0x0000000000ac505e
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x0000000000ac5056
- (_Bool)_hasRelatedTouchesForTouchState:(id)arg1;	// IMP=0x0000000000ac4ffa
- (void)_ignoreTouchState:(id)arg1;	// IMP=0x0000000000ac4f95
- (void)_updateTouchState:(id)arg1 errorVector:(struct CGPoint)arg2 rowOffsetFromHomeRow:(long long)arg3;	// IMP=0x0000000000ac4f04
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000ac4efc
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000ac4ee6
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000ac4ed0
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000ac4ebb
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000ac4eb3
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x0000000000ac4ea7
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000ac4e9f
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000ac4e97
- (void)screenEdgePanRecognizerStateDidChange:(id)arg1;	// IMP=0x0000000000ac4e2b
- (_Bool)_canAddTouchesToScreenGestureRecognizer:(id)arg1;	// IMP=0x0000000000ac4d2f
- (void)resetTouchProcessingForKeyboardChange;	// IMP=0x0000000000ac4d1d
- (void)updateTouchProcessingForKeyplaneChange;	// IMP=0x0000000000ac48e8
- (void)updateTouchProcessingForKeyboardChange;	// IMP=0x0000000000ac41a0
- (void)reloadKeyboardGestureRecognition;	// IMP=0x0000000000ac3fec
- (void)didMoveToWindow;	// IMP=0x0000000000ac3f56
- (void)_resetFingerDetectionFromLayout;	// IMP=0x0000000000ac3da1
- (_Bool)_shouldAllowKeyboardHandlingForTouchesEndedOrCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ac3d3b
- (_Bool)_shouldAllowKeyboardHandlingForTouchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ac3b3a
- (_Bool)_shouldAllowKeyboardHandlingForTouchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ac3922
- (void)assertSavedLocation:(struct CGPoint)arg1 onTouch:(id)arg2 inWindow:(id)arg3 resetPrevious:(_Bool)arg4;	// IMP=0x0000000000ac3882
- (void)_addTouchToScreenEdgePanRecognizer:(id)arg1;	// IMP=0x0000000000ac3788
- (void)_executeDeferredTouchTasks;	// IMP=0x0000000000ac36cb
- (void)_clearDeferredTouchTasks;	// IMP=0x0000000000ac3699
- (_Bool)_shouldAllowKeyboardHandlingIfNecessaryForTouch:(id)arg1 phase:(long long)arg2 withTouchState:(id)arg3 task:(CDUnknownBlockType)arg4;	// IMP=0x0000000000ac300b
- (void)resetHRRLayoutState;	// IMP=0x0000000000ac2b60
- (void)recognizer:(id)arg1 cancelTouchOnLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;	// IMP=0x0000000000ac208d
- (void)recognizer:(id)arg1 releaseTouchToLayoutWithId:(id)arg2 startPoint:(struct CGPoint)arg3 endPoint:(struct CGPoint)arg4 whenReady:(CDUnknownBlockType)arg5;	// IMP=0x0000000000ac17f7
- (void)recognizer:(id)arg1 continueTrackingIgnoredTouchWithId:(id)arg2 currentPoint:(struct CGPoint)arg3 whenReady:(CDUnknownBlockType)arg4;	// IMP=0x0000000000ac12b7
- (void)recognizer:(id)arg1 willIgnoreTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenReady:(CDUnknownBlockType)arg6;	// IMP=0x0000000000ac0b2a
- (_Bool)queryShouldNeverIgnoreTouchStateWithIdentifier:(id)arg1 touchState:(id)arg2 startPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4;	// IMP=0x0000000000ac080f
- (void)recognizer:(id)arg1 shouldContinueTrackingTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 forContinueState:(unsigned long long)arg6 whenStateReady:(CDUnknownBlockType)arg7;	// IMP=0x0000000000ac0325
- (void)recognizer:(id)arg1 restartTouchDownForTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(struct CGPoint)arg4 currentPoint:(struct CGPoint)arg5 whenStateReady:(CDUnknownBlockType)arg6;	// IMP=0x0000000000abfa89
- (void)recognizer:(id)arg1 beginTouchDownForTouchWithId:(id)arg2 atPoint:(struct CGPoint)arg3 forBeginState:(unsigned long long)arg4 whenStateReady:(CDUnknownBlockType)arg5;	// IMP=0x0000000000abf0e1
- (void)recognizerBlockUntilTaskQueueReadyForceUsingDeferredTask:(_Bool)arg1;	// IMP=0x0000000000abef97
- (void)_enumerateDeferredTouchUUIDs:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000abecb9
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x0000000000abecb1
- (void)commitTouches:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abeaac
- (void)forceUpdatesForCommittedTouch;	// IMP=0x0000000000abea7a
- (void)commitTouchUUIDs:(id)arg1;	// IMP=0x0000000000abea66
- (void)commitTouchUUIDs:(id)arg1 cancelInsteadOfUp:(_Bool)arg2;	// IMP=0x0000000000abe8ed
- (id)touchUUIDsToCommitBeforeTouchUUID:(id)arg1;	// IMP=0x0000000000abe7b8
- (void)_removeTouchesFromProcessing:(id)arg1;	// IMP=0x0000000000abe46b
- (void)touchesEstimatedPropertiesUpdated:(id)arg1;	// IMP=0x0000000000abe346
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000abde56
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000abdc8d
- (void)clearShiftIfNecessaryForEndedTouchState:(id)arg1;	// IMP=0x0000000000abdbf2
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000abdaa8
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000abd766
- (void)touchChanged:(id)arg1;	// IMP=0x0000000000abd705
- (CDUnknownBlockType)touchChangedTaskForTouchState:(id)arg1;	// IMP=0x0000000000abd61e
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abd609
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x0000000000abd5f4
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abd5dd
- (void)touchCancelled:(id)arg1;	// IMP=0x0000000000abd53c
- (CDUnknownBlockType)touchCancelledTaskForTouchState:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000abd3a9
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abd394
- (void)didCommitTouchState:(id)arg1;	// IMP=0x0000000000abd240
- (void)touchUp:(id)arg1;	// IMP=0x0000000000abcfea
- (CDUnknownBlockType)touchUpTaskForTouchState:(id)arg1;	// IMP=0x0000000000abce19
- (void)_touchEndedProcessingForTouches:(id)arg1;	// IMP=0x0000000000abcb81
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abcb6c
- (void)touchDragged:(id)arg1;	// IMP=0x0000000000abc916
- (CDUnknownBlockType)touchDraggedTaskForTouchState:(id)arg1;	// IMP=0x0000000000abc7ef
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000abc7da
- (void)touchDown:(id)arg1;	// IMP=0x0000000000abc587
- (CDUnknownBlockType)touchDownTaskForTouchState:(id)arg1;	// IMP=0x0000000000abc359
- (void)_setRequiresExclusiveTouch:(_Bool)arg1;	// IMP=0x0000000000abc32a
- (_Bool)canProduceString:(id)arg1;	// IMP=0x0000000000abc322
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000abc31a
- (id)activationIndicatorView;	// IMP=0x0000000000abc312
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x0000000000abc30c
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000abc306
- (void)restoreDefaultsForAllKeys;	// IMP=0x0000000000abc300
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x0000000000abc2fa
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000abc2f4
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x0000000000abc2ee
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000abc2e8
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000abc2e2
@property(retain, nonatomic) NSString *layoutTag;
- (void)setRenderConfig:(id)arg1;	// IMP=0x0000000000abc2ce
- (void)updateBackgroundCorners;	// IMP=0x0000000000abc2c8
- (_Bool)canMultitap;	// IMP=0x0000000000abc2c0
- (_Bool)hasAccentKey;	// IMP=0x0000000000abc2b8
- (_Bool)hasCandidateKeys;	// IMP=0x0000000000abc2b0
- (id)candidateList;	// IMP=0x0000000000abc2a8
- (_Bool)performSpaceAction;	// IMP=0x0000000000abc2a0
- (_Bool)performReturnAction;	// IMP=0x0000000000abc298
- (void)didClearInput;	// IMP=0x0000000000abc292
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x0000000000abc28a
- (id)_keyboardLayoutView;	// IMP=0x0000000000abc281
- (void)longPressAction;	// IMP=0x0000000000abc27b
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x0000000000abc273
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x0000000000abc26b
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x0000000000abc263
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x0000000000abc25d
- (void)setShift:(_Bool)arg1;	// IMP=0x0000000000abc257
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000abc24f
- (_Bool)isKanaPlane;	// IMP=0x0000000000abc247
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000abc23f
- (_Bool)ignoresShiftState;	// IMP=0x0000000000abc237
- (_Bool)usesAutoShift;	// IMP=0x0000000000abc22f
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000abc229
- (void)deactivateActiveKeys;	// IMP=0x0000000000abbe45
- (void)clearTransientState;	// IMP=0x0000000000abbe3f
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000abbe39
- (void)setRecentInputs:(id)arg1;	// IMP=0x0000000000abbe33
- (void)acceptRecentInputIfNecessary;	// IMP=0x0000000000abbe2d
- (unsigned long long)textEditingKeyMask;	// IMP=0x0000000000abbe25
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x0000000000abbdec
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000abbd89
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000abbd77
@property(readonly, nonatomic) _Bool isFloating;
@property(readonly, nonatomic) long long idiom;
@property(readonly, nonatomic) long long orientation;
@property(retain, nonatomic) UIKeyboardTaskQueue *taskQueue;
@property(readonly, nonatomic) UIEvent *currentTouchDownEvent;
@property(readonly, nonatomic) UIKeyboardTypingStyleEstimator *typingStyleEstimator;
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000abbab8
- (void)dealloc;	// IMP=0x0000000000abb8f6
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000abb818

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

