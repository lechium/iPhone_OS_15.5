//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/_UIDatePickerCalendarDateViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarHeaderViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarMonthYearSelectorDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerCalendarTimeViewDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerViewComponent-Protocol.h>

@class NSLayoutConstraint, NSString, UIColor, UIDatePicker, UIStackView, _UIDatePickerCalendarDateView, _UIDatePickerCalendarHeaderView, _UIDatePickerCalendarMonthYearSelector, _UIDatePickerCalendarTimeView, _UIDatePickerDataModel, _UIDatePickerDateRange;

__attribute__((visibility("hidden")))
@interface _UIDatePickerCalendarView <_UIDatePickerCalendarHeaderViewDelegate, _UIDatePickerCalendarDateViewDelegate, _UIDatePickerCalendarTimeViewDelegate, _UIDatePickerCalendarMonthYearSelectorDelegate, _UIDatePickerViewComponent>
{
    struct {
        unsigned int needsUpdateDate:1;
        unsigned int isEnabled:1;
    } _flags;	// 8 = 0x8
    UIStackView *_contentView;	// 16 = 0x10
    _UIDatePickerCalendarHeaderView *_headerView;	// 24 = 0x18
    _UIDatePickerCalendarDateView *_dateView;	// 32 = 0x20
    _UIDatePickerCalendarTimeView *_timeView;	// 40 = 0x28
    _UIDatePickerDateRange *_dateRange;	// 48 = 0x30
    long long _viewState;	// 56 = 0x38
    _UIDatePickerCalendarMonthYearSelector *_monthYearSelector;	// 64 = 0x40
    NSLayoutConstraint *_minimumWidthConstraint;	// 72 = 0x48
    NSLayoutConstraint *_maximumWidthConstraint;	// 80 = 0x50
    struct CGSize _lastSize;	// 88 = 0x58
    unsigned long long _stateUpdatesInFlight;	// 104 = 0x68
    UIDatePicker *_datePicker;	// 112 = 0x70
    _UIDatePickerDataModel *_data;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x00000000000be9be
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (id)primaryFirstResponder;	// IMP=0x00000000000be8cc
- (void)_setEnabled:(_Bool)arg1;	// IMP=0x00000000000be8a6
- (_Bool)hasDefaultSize;	// IMP=0x00000000000be89e
- (struct CGSize)defaultSize;	// IMP=0x00000000000be888
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000000be872
- (_Bool)usesAutoLayout;	// IMP=0x00000000000be86a
- (struct UIEdgeInsets)_appliedInsetsToEdgeOfContent;	// IMP=0x00000000000be716
- (void)_setHidesLabels:(_Bool)arg1;	// IMP=0x00000000000be710
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode;
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
- (void)didChangeCustomFontDescriptor;	// IMP=0x00000000000be6da
- (void)didChangeToday;	// IMP=0x00000000000be6c8
- (void)didReset;	// IMP=0x00000000000be6b6
- (void)didChangeRoundsToMinuteInterval;	// IMP=0x00000000000be672
- (void)didChangeMinuteInterval;	// IMP=0x00000000000be62e
- (void)didChangeMaximumDate;	// IMP=0x00000000000be61c
- (void)didChangeMinimumDate;	// IMP=0x00000000000be60a
- (void)displaySelectedDateAnimated:(_Bool)arg1;	// IMP=0x00000000000be581
- (void)didChangeDateFrom:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000be56f
- (void)didChangeCalendar;	// IMP=0x00000000000be55d
- (void)didChangeTimeZone;	// IMP=0x00000000000be54b
- (void)didChangeLocale;	// IMP=0x00000000000be539
- (void)didChangeMode;	// IMP=0x00000000000be4d2
@property(readonly, nonatomic) long long datePickerStyle;
- (void)monthYearSelector:(id)arg1 didSelectMonth:(id)arg2;	// IMP=0x00000000000be3f9
- (id)createDatePickerForTimeView:(id)arg1;	// IMP=0x00000000000be360
- (void)timeViewDidEndEditing:(id)arg1;	// IMP=0x00000000000be313
- (void)timeViewDidBeginEditing:(id)arg1;	// IMP=0x00000000000be2d6
- (void)timeViewWillBecomeFirstResponder:(id)arg1;	// IMP=0x00000000000be2c4
- (void)timeView:(id)arg1 didSelectTime:(id)arg2;	// IMP=0x00000000000be2aa
- (void)dateView:(id)arg1 didShowMonth:(id)arg2;	// IMP=0x00000000000be290
- (void)dateView:(id)arg1 didSelectDate:(id)arg2;	// IMP=0x00000000000be273
- (void)headerViewDidSelect:(id)arg1;	// IMP=0x00000000000be24b
- (void)headerViewDidStepBackward:(id)arg1;	// IMP=0x00000000000be1c8
- (void)headerViewDidStepForward:(id)arg1;	// IMP=0x00000000000be145
- (void)_headerViewWantsToMoveToMonth:(id)arg1;	// IMP=0x00000000000be12e
- (void)_updateVisibleMonth:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000be0a7
- (void)_updateDateViewForVisibleMonth:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000be08a
- (_Bool)_shouldUpdateDateViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000be015
- (void)_updateHeaderViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000bdff8
- (_Bool)_shouldUpdateHeaderViewForVisibleMonth:(id)arg1;	// IMP=0x00000000000bdf83
- (void)_updateSelectedDayToDayInMonth:(id)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;	// IMP=0x00000000000bde02
- (void)_updateSelectedTime:(id)arg1 notify:(_Bool)arg2;	// IMP=0x00000000000bdd7a
- (void)_updateSelectedDay:(id)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;	// IMP=0x00000000000bdced
- (void)_updateSelectedDay:(id)arg1 time:(id)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;	// IMP=0x00000000000bd891
- (void)_updateTimeViewForSelectedDate:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000bd874
- (_Bool)_shouldUpdateTimeViewForSelectedTime:(id)arg1;	// IMP=0x00000000000bd7ff
- (void)_updateMonthYearSelectorForSelectedDay:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000bd7a3
- (_Bool)_shouldUpdateMonthYearSelectorForSelectedDay:(id)arg1;	// IMP=0x00000000000bd6fc
- (void)_updateDateViewForSelectedDay:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000bd6df
- (_Bool)_shouldUpdateDateViewForSelectedDay:(id)arg1;	// IMP=0x00000000000bd66a
- (void)_updateHeaderViewForSelectedDay:(id)arg1;	// IMP=0x00000000000bd64d
- (_Bool)_shouldUpdateHeaderViewForSelectedDay:(id)arg1;	// IMP=0x00000000000bd5d8
- (void)_updateDataForComponents:(id)arg1;	// IMP=0x00000000000bd572
- (_Bool)_shouldUpdateDataForComponents:(id)arg1 date:(id)arg2;	// IMP=0x00000000000bd4fd
- (void)_updateCustomFonts;	// IMP=0x00000000000bd474
- (void)_updateModuleVisibility;	// IMP=0x00000000000bcf93
- (void)_updateEnabledStyling;	// IMP=0x00000000000bcee3
- (void)_reload;	// IMP=0x00000000000bcd2b
- (void)_reloadMonthYearSelector;	// IMP=0x00000000000bcbbb
- (void)_reloadTimeView;	// IMP=0x00000000000bcb02
- (void)_reloadDateView;	// IMP=0x00000000000bc96b
- (void)_reloadHeaderView;	// IMP=0x00000000000bc7df
- (void)_reloadDateRange;	// IMP=0x00000000000bc6c9
- (void)_updateDate;	// IMP=0x00000000000bc55a
- (void)_updateDateIfNeeded;	// IMP=0x00000000000bc539
- (void)_setNeedsUpdateDate;	// IMP=0x00000000000bc51c
- (void)_destroyMonthYearSelector;	// IMP=0x00000000000bc4e4
- (void)_setupMonthYearSelector;	// IMP=0x00000000000bc19b
- (void)_updateViewState:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000bbe84
- (void)_updateContentSizeLimitations;	// IMP=0x00000000000bbd97
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000000bbd05
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x00000000000bbb0b
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000000bba9f
- (void)layoutSubviews;	// IMP=0x00000000000bba5e
- (void)layoutMarginsDidChange;	// IMP=0x00000000000bba1d
- (void)_updateLayoutMargins;	// IMP=0x00000000000bb98b
- (void)_workaround66574039_datePickerDidUpdateLayoutMargins;	// IMP=0x00000000000bb7af
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000baf30

// Remaining properties
@property(readonly, nonatomic) double contentWidth;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property(nonatomic) double timeInterval;

@end

