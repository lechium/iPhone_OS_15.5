//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MobileTimer/MTTimerManagerIntentSupport-Protocol.h>
#import <MobileTimer/MTTimerManagerProviding-Protocol.h>
#import <MobileTimer/MTUserDefaultNotificationObserver-Protocol.h>

@class MTMetrics, MTTimerCache, MTTimerManagerExportedObject, MTXPCConnectionProvider, NSNotificationCenter, NSString;
@protocol MTTimerManagerIntentSupport;

@interface MTTimerManager : NSObject <MTTimerManagerIntentSupport, MTTimerManagerProviding, MTUserDefaultNotificationObserver>
{
    MTTimerManagerExportedObject *_exportedObject;	// 8 = 0x8
    MTXPCConnectionProvider *_connectionProvider;	// 16 = 0x10
    MTMetrics *_metrics;	// 24 = 0x18
    MTTimerCache *_cache;	// 32 = 0x20
    NSNotificationCenter *_notificationCenter;	// 40 = 0x28
}

+ (void)setDefaultDuration:(double)arg1;	// IMP=0x00000000000669fb
+ (double)defaultDuration;	// IMP=0x0000000000066953
+ (void)warmUp;	// IMP=0x00000000000668a2
- (void).cxx_destruct;	// IMP=0x0000000000069a03
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) MTTimerCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) MTMetrics *metrics; // @synthesize metrics=_metrics;
@property(readonly, nonatomic) MTXPCConnectionProvider *connectionProvider; // @synthesize connectionProvider=_connectionProvider;
@property(retain, nonatomic) MTTimerManagerExportedObject *exportedObject; // @synthesize exportedObject=_exportedObject;
- (_Bool)resumeCurrentTimerSync;	// IMP=0x0000000000069976
- (_Bool)pauseCurrentTimerSync;	// IMP=0x000000000006995f
- (_Bool)stopCurrentTimerSync;	// IMP=0x0000000000069948
- (_Bool)_updateCurrentTimerWithStateSync:(unsigned long long)arg1;	// IMP=0x0000000000069711
- (_Bool)startCurrentTimerWithDurationSync:(double)arg1;	// IMP=0x00000000000694f4
- (id)getCurrentTimerSync;	// IMP=0x000000000006949d
- (id)startCurrentTimerWithDuration:(double)arg1;	// IMP=0x0000000000069325
- (id)_runningTimerFromCurrentTimer:(id)arg1 withDuration:(double)arg2;	// IMP=0x00000000000692ca
- (id)_validateCanStartTimer:(id)arg1;	// IMP=0x0000000000069140
- (id)resumeCurrentTimer;	// IMP=0x0000000000069129
- (id)pauseCurrentTimer;	// IMP=0x0000000000069112
- (id)stopCurrentTimer;	// IMP=0x00000000000690fb
- (id)_updateCurrentTimerWithState:(unsigned long long)arg1;	// IMP=0x0000000000068f89
- (id)currentTimer;	// IMP=0x0000000000068ed1
- (id)repeatTimerWithIdentifier:(id)arg1;	// IMP=0x0000000000068b74
- (id)dismissTimerWithIdentifier:(id)arg1;	// IMP=0x0000000000068817
- (id)removeTimer:(id)arg1;	// IMP=0x0000000000068493
- (id)updateTimer:(id)arg1;	// IMP=0x000000000006847f
- (id)_updateTimer:(id)arg1 doSynchronous:(_Bool)arg2;	// IMP=0x0000000000068074
- (id)addTimer:(id)arg1;	// IMP=0x0000000000067c79
- (id)nextTimersForDate:(id)arg1 maxCount:(unsigned long long)arg2;	// IMP=0x000000000006789b
- (id)timersSync;	// IMP=0x0000000000067702
- (id)nextTimer;	// IMP=0x0000000000067623
- (id)timers;	// IMP=0x0000000000067559
- (void)_getCachedTimersWithFuture:(id)arg1 finishBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000674b8
- (void)reconnect;	// IMP=0x0000000000067421
- (void)checkIn;	// IMP=0x000000000006740f
- (void)dealloc;	// IMP=0x000000000006734d
- (id)_initWithConnectionProvidingBlock:(CDUnknownBlockType)arg1 metrics:(id)arg2 notificationCenter:(id)arg3;	// IMP=0x0000000000066f39
- (id)_initWithConnectionProvidingBlock:(CDUnknownBlockType)arg1 metrics:(id)arg2;	// IMP=0x0000000000066ea2
- (id)initWithConnectionProvider:(id)arg1 metrics:(id)arg2 notificationCenter:(id)arg3;	// IMP=0x0000000000066df3
- (id)initWithConnectionProvider:(id)arg1 metrics:(id)arg2;	// IMP=0x0000000000066d47
- (id)initWithMetrics:(id)arg1;	// IMP=0x0000000000066b57
- (id)init;	// IMP=0x0000000000066b17
@property(readonly, nonatomic) id notificationObject;
@property(readonly, nonatomic) id <MTTimerManagerIntentSupport> timerManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

