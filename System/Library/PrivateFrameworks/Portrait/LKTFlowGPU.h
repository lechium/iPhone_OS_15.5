//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, PTMTLDropHints;
@protocol MTLBuffer, MTLComputePipelineState, MTLDevice, MTLTexture;

@interface LKTFlowGPU : NSObject
{
    id <MTLDevice> _device;	// 8 = 0x8
    id <MTLComputePipelineState> _computePipelines[12];	// 16 = 0x10
    unsigned long long _maxThreadExecutionWidth;	// 112 = 0x70
    struct CGSize _ref_pyr_size[10];	// 120 = 0x78
    struct CGSize _aux_pyr_size[10];	// 280 = 0x118
    id <MTLTexture> _I_tex[2][10];	// 440 = 0x1b8
    id <MTLTexture> _I_u32_alias_tex[2][10];	// 600 = 0x258
    id <MTLTexture> _G0_tex[10];	// 760 = 0x2f8
    id <MTLTexture> _G1_tex[10];	// 840 = 0x348
    id <MTLTexture> _C0_tex[10];	// 920 = 0x398
    id <MTLTexture> _C1_tex[10];	// 1000 = 0x3e8
    id <MTLBuffer> _Adiagb_buf[2];	// 1080 = 0x438
    id <MTLBuffer> _Ixy_buf[2];	// 1096 = 0x448
    id <MTLBuffer> _idt_buf;	// 1112 = 0x458
    id <MTLTexture> _w_tex[10];	// 1120 = 0x460
    id <MTLTexture> _uv_fwd_tex[2][10];	// 1200 = 0x4b0
    id <MTLTexture> _uv_bwd_tex[2][10];	// 1360 = 0x550
    id <MTLTexture> _uv_fwd_u32_alias_tex[2][10];	// 1520 = 0x5f0
    id <MTLTexture> _uv_bwd_u32_alias_tex[2][10];	// 1680 = 0x690
    int _current_frame_index;	// 1840 = 0x730
    int _streamFrameCount;	// 1844 = 0x734
    _Bool _indexUpdated[2];	// 1848 = 0x738
    id <MTLTexture> _uv_fwd_tex_user_ref;	// 1856 = 0x740
    id <MTLTexture> _uv_bwd_tex_user_ref;	// 1864 = 0x748
    id <MTLBuffer> _kpt_buf;	// 1872 = 0x750
    PTMTLDropHints *_dropHints;	// 1880 = 0x758
    _Bool _isValid;	// 1888 = 0x760
    _Bool _needConversionBGRA2YUVA;	// 1889 = 0x761
    _Bool _useNonLocalRegularization;	// 1890 = 0x762
    _Bool _isBidirectional;	// 1891 = 0x763
    _Bool _isInverse;	// 1892 = 0x764
    int _nscales;	// 1896 = 0x768
    int _nwarpings;	// 1900 = 0x76c
    int _nlreg_radius;	// 1904 = 0x770
    int _nlreg_padding;	// 1908 = 0x774
    float _nlreg_sigma_l;	// 1912 = 0x778
    float _nlreg_sigma_c;	// 1916 = 0x77c
    float _nlreg_sigma_w;	// 1920 = 0x780
    struct CGSize _ref_size;	// 1928 = 0x788
    struct CGSize _aux_size;	// 1944 = 0x798
}

+ (void)_computeScalingFactor:(id)arg1 dst_tex:(id)arg2 scale_xy_inv:(MISSING_TYPE **)arg3 coeff:(float *)arg4;	// IMP=0x00000000000252d6
- (void).cxx_destruct;	// IMP=0x00000000000255e8
@property(nonatomic) _Bool isInverse; // @synthesize isInverse=_isInverse;
@property(nonatomic) _Bool isBidirectional; // @synthesize isBidirectional=_isBidirectional;
@property(nonatomic) float nlreg_sigma_w; // @synthesize nlreg_sigma_w=_nlreg_sigma_w;
@property(nonatomic) float nlreg_sigma_c; // @synthesize nlreg_sigma_c=_nlreg_sigma_c;
@property(nonatomic) float nlreg_sigma_l; // @synthesize nlreg_sigma_l=_nlreg_sigma_l;
@property(nonatomic) int nlreg_padding; // @synthesize nlreg_padding=_nlreg_padding;
@property(nonatomic) int nlreg_radius; // @synthesize nlreg_radius=_nlreg_radius;
@property(nonatomic) _Bool useNonLocalRegularization; // @synthesize useNonLocalRegularization=_useNonLocalRegularization;
@property(nonatomic) int nwarpings; // @synthesize nwarpings=_nwarpings;
@property(readonly, nonatomic) int streamFrameCount; // @synthesize streamFrameCount=_streamFrameCount;
@property(readonly, nonatomic) int nscales; // @synthesize nscales=_nscales;
@property(readonly, nonatomic) struct CGSize aux_size; // @synthesize aux_size=_aux_size;
@property(readonly, nonatomic) struct CGSize ref_size; // @synthesize ref_size=_ref_size;
@property(nonatomic) _Bool needConversionBGRA2YUVA; // @synthesize needConversionBGRA2YUVA=_needConversionBGRA2YUVA;
@property(readonly, nonatomic) _Bool isValid; // @synthesize isValid=_isValid;
- (int)_doNLRegularizationWithCommandBuffer:(id)arg1 in_uv_tex:(id)arg2 join_tex:(id)arg3 w_tex:(id)arg4 out_uv_tex:(id)arg5;	// IMP=0x0000000000025097
- (int)_enqueueKeypointsFromFlowWithCommandBuffer:(id)arg1 in_uv_fwd_tex:(id)arg2 in_uv_bwd_tex:(id)arg3 out_kpt_buf:(id)arg4 block_size:(int)arg5 bidirectional_error:(float)arg6 out_num_keypoints:(unsigned short *)arg7;	// IMP=0x0000000000024ea4
- (int)_enqueueFlowConsistencyWithCommandBuffer:(id)arg1 in_uv0_tex:(id)arg2 in_uv1_tex:(id)arg3 out_uv_tex:(id)arg4;	// IMP=0x0000000000024c0a
- (int)_doSolverWithCommandBuffer:(id)arg1 scale:(int)arg2 in_uv_tex:(id)arg3 in_G0_tex:(id)arg4 in_G1_tex:(id)arg5 in_C0_tex:(id)arg6 in_C1_tex:(id)arg7 out_uv_tex:(id)arg8 out_w_tex:(id)arg9;	// IMP=0x000000000002465c
- (int)_computeFeaturesDerivativesWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;	// IMP=0x0000000000024520
- (int)_computeFeaturesWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;	// IMP=0x00000000000243e4
- (int)_downscale2XWithCommandBuffer:(id)arg1 in_tex:(id)arg2 out_tex:(id)arg3;	// IMP=0x000000000002429e
- (int)_zeroFlowWithCommandBuffer:(id)arg1 uv_tex:(id)arg2;	// IMP=0x0000000000024188
- (int)_createImagePyramidWithCommandBuffer:(id)arg1 in_tex:(id)arg2 I_idx:(int)arg3;	// IMP=0x0000000000023eac
- (int)_computeOpticalFlowBidirectional:(id)arg1;	// IMP=0x0000000000023969
- (int)_computeOpticalFlow:(id)arg1 computeFeatureI0:(_Bool)arg2 computeFeatureI1:(_Bool)arg3;	// IMP=0x00000000000235b7
- (int)_setupBuffer;	// IMP=0x0000000000022758
- (void)_setupPipelines;	// IMP=0x000000000002251a
- (void)_initMemory:(int)arg1 height:(int)arg2 nscales:(int)arg3;	// IMP=0x00000000000223af
- (void)_setDefaultParameters;	// IMP=0x000000000002236c
- (int)computeKeypointsFromTexForwardFlow:(id)arg1 backwardFlow:(id)arg2 bidirectionalError:(float)arg3 blockSize:(int)arg4 outNumKeypoints:(unsigned short *)arg5 commandBuffer:(id)arg6;	// IMP=0x00000000000222b1
- (int)estimateFlowStreamTex:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x000000000002213e
- (int)estimateFlowStreamTex:(id)arg1 index:(int)arg2 doOpticalFlow:(_Bool)arg3 commandBuffer:(id)arg4;	// IMP=0x0000000000021fd3
- (int)estimateFlowFromTexReference:(id)arg1 target:(id)arg2 commandBuffer:(id)arg3;	// IMP=0x0000000000021e4f
- (int)setOutputTexUVForward:(id)arg1 backward:(id)arg2;	// IMP=0x0000000000021dcc
- (int)setOutputTexUV:(id)arg1;	// IMP=0x0000000000021db8
- (void)setPreset:(long long)arg1;	// IMP=0x0000000000021cd0
- (id)newBufferWithPixelFormat:(unsigned long long)arg1 width:(int)arg2 data:(const void *)arg3;	// IMP=0x0000000000021ad4
@property(readonly, nonatomic) id <MTLBuffer> keypoints;
- (void)reset;	// IMP=0x0000000000021a98
- (id)initWithDevice:(id)arg1 width:(int)arg2 height:(int)arg3 nscales:(int)arg4;	// IMP=0x0000000000021930

@end

