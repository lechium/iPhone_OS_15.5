//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CTTelephonyNetworkInfo, NSDictionary, NSLock, NSMutableDictionary, NSRegularExpression, _NBMetadataHelper, _NBRegExMatcher;

__attribute__((visibility("hidden")))
@interface _NBPhoneNumberUtil : NSObject
{
    NSLock *_entireStringCacheLock;	// 8 = 0x8
    NSMutableDictionary *_entireStringRegexCache;	// 16 = 0x10
    NSLock *_lockPatternCache;	// 24 = 0x18
    NSMutableDictionary *_regexPatternCache;	// 32 = 0x20
    NSRegularExpression *_CAPTURING_DIGIT_PATTERN;	// 40 = 0x28
    NSRegularExpression *_VALID_ALPHA_PHONE_PATTERN;	// 48 = 0x30
    _NBMetadataHelper *_helper;	// 56 = 0x38
    _NBRegExMatcher *_matcher;	// 64 = 0x40
}

+ (void)initialize;	// IMP=0x00000000000500bb
+ (id)sharedInstance;	// IMP=0x000000000004edec
- (void).cxx_destruct;	// IMP=0x000000000005bcb3
@property(retain, nonatomic) _NBRegExMatcher *matcher; // @synthesize matcher=_matcher;
@property(retain, nonatomic) _NBMetadataHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) NSRegularExpression *VALID_ALPHA_PHONE_PATTERN; // @synthesize VALID_ALPHA_PHONE_PATTERN=_VALID_ALPHA_PHONE_PATTERN;
@property(retain, nonatomic) NSRegularExpression *CAPTURING_DIGIT_PATTERN; // @synthesize CAPTURING_DIGIT_PATTERN=_CAPTURING_DIGIT_PATTERN;
@property(retain, nonatomic) NSMutableDictionary *regexPatternCache; // @synthesize regexPatternCache=_regexPatternCache;
@property(retain, nonatomic) NSLock *lockPatternCache; // @synthesize lockPatternCache=_lockPatternCache;
@property(retain, nonatomic) NSMutableDictionary *entireStringRegexCache; // @synthesize entireStringRegexCache=_entireStringRegexCache;
@property(retain, nonatomic) NSLock *entireStringCacheLock; // @synthesize entireStringCacheLock=_entireStringCacheLock;
- (_Bool)matchesEntirely:(id)arg1 string:(id)arg2;	// IMP=0x000000000005ba9d
- (_Bool)canBeInternationallyDialled:(id)arg1;	// IMP=0x000000000005b970
- (_Bool)canBeInternationallyDialled:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005b824
- (_Bool)isNationalNumberSuffixOfTheOther:(id)arg1 second:(id)arg2;	// IMP=0x000000000005b705
- (long long)isNumberMatch:(id)arg1 second:(id)arg2;	// IMP=0x000000000005af57
- (long long)isNumberMatch:(id)arg1 second:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005ade7
- (void)buildNationalNumberForParsing:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x000000000005ab05
- (id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(_Bool)arg3 checkRegion:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000059e49
- (void)setItalianLeadingZerosForPhoneNumber:(id)arg1 phoneNumber:(id)arg2;	// IMP=0x0000000000059cd7
- (id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000059b4b
- (id)countryCodeByCarrier;	// IMP=0x0000000000059a9a
@property(readonly, nonatomic) CTTelephonyNetworkInfo *telephonyNetworkInfo;
- (id)parseWithPhoneCarrierRegion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000059927
- (id)parse:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000059820
- (_Bool)checkRegionForParsing:(id)arg1 defaultRegion:(id)arg2;	// IMP=0x000000000005979b
- (id)maybeStripExtension:(id *)arg1;	// IMP=0x0000000000059590
- (_Bool)maybeStripNationalPrefixAndCarrierCode:(id *)arg1 metadata:(id)arg2 carrierCode:(id *)arg3;	// IMP=0x0000000000059072
- (long long)maybeStripInternationalPrefixAndNormalize:(id *)arg1 possibleIddPrefix:(id)arg2;	// IMP=0x0000000000058f3d
- (_Bool)parsePrefixAsIdd:(id)arg1 sourceString:(id *)arg2;	// IMP=0x0000000000058c75
- (_Bool)descHasPossibleNumberData:(id)arg1;	// IMP=0x0000000000058ba6
- (id)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id *)arg3 keepRawInput:(_Bool)arg4 phoneNumber:(id *)arg5 error:(id *)arg6;	// IMP=0x0000000000058551
- (id)getSupportedRegions;	// IMP=0x0000000000058497
- (id)extractCountryCode:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x00000000000581dc
- (_Bool)truncateTooLongNumber:(id)arg1;	// IMP=0x000000000005802f
- (_Bool)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000057f78
- (long long)isPossibleNumberWithReason:(id)arg1;	// IMP=0x0000000000057e4a
- (long long)isPossibleNumberWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000057cfc
- (long long)testNumberLength:(id)arg1 desc:(id)arg2;	// IMP=0x0000000000057ab4
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2 type:(long long)arg3;	// IMP=0x000000000005755d
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2;	// IMP=0x0000000000057544
- (_Bool)isPossibleNumber:(id)arg1;	// IMP=0x000000000005752a
- (_Bool)isPossibleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000573de
- (_Bool)isAlphaNumber:(id)arg1;	// IMP=0x00000000000572e5
- (_Bool)isLeadingZeroPossible:(id)arg1;	// IMP=0x0000000000057243
- (_Bool)isNANPACountry:(id)arg1;	// IMP=0x0000000000057011
- (id)getNddPrefixForRegion:(id)arg1 stripNonDigits:(_Bool)arg2;	// IMP=0x0000000000056ef6
- (id)getCountryCodeForValidRegion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000056da0
- (id)getCountryCodeForRegion:(id)arg1;	// IMP=0x0000000000056cf3
- (id)getRegionCodesForCountryCode:(id)arg1;	// IMP=0x0000000000056cda
- (id)getRegionCodeForCountryCode:(id)arg1;	// IMP=0x0000000000056c6b
- (id)getRegionCodeForNumberFromRegionList:(id)arg1 regionCodes:(id)arg2;	// IMP=0x0000000000056a68
- (id)getRegionCodeForNumber:(id)arg1;	// IMP=0x000000000005695c
- (_Bool)isValidNumberForRegion:(id)arg1 regionCode:(id)arg2;	// IMP=0x0000000000056754
- (_Bool)isValidNumber:(id)arg1;	// IMP=0x00000000000566e0
- (_Bool)isNumberMatchingDesc:(id)arg1 numberDesc:(id)arg2;	// IMP=0x0000000000056585
- (long long)getNumberTypeHelper:(id)arg1 metadata:(id)arg2;	// IMP=0x00000000000560f5
- (long long)getNumberType:(id)arg1;	// IMP=0x0000000000055ff8
- (id)getNumberDescByType:(id)arg1 type:(long long)arg2;	// IMP=0x0000000000055ee6
- (id)maybeGetFormattedExtension:(id)arg1 metadata:(id)arg2 numberFormat:(long long)arg3;	// IMP=0x0000000000055cdd
- (id)getExampleNumberForNonGeoEntity:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005586a
- (id)getExampleNumberForType:(id)arg1 type:(long long)arg2 error:(id *)arg3;	// IMP=0x00000000000556e7
- (id)getExampleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000556d0
- (id)formatNsnUsingPattern:(id)arg1 formattingPattern:(id)arg2 numberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x000000000005534c
- (id)chooseFormattingPatternForNumber:(id)arg1 nationalNumber:(id)arg2;	// IMP=0x0000000000055078
- (id)formatNsn:(id)arg1 metadata:(id)arg2 phoneNumberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x0000000000054f1b
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x000000000005499d
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000054821
- (_Bool)hasFormattingPatternForNumber:(id)arg1;	// IMP=0x00000000000546e6
- (_Bool)hasUnexpectedItalianLeadingZero:(id)arg1;	// IMP=0x0000000000054665
- (_Bool)rawInputContainsNationalPrefix:(id)arg1 nationalPrefix:(id)arg2 regionCode:(id)arg3;	// IMP=0x000000000005452b
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000053e82
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000053d06
- (id)prefixNumberWithCountryCallingCode:(id)arg1 phoneNumberFormat:(long long)arg2 formattedNationalNumber:(id)arg3 formattedExtension:(id)arg4;	// IMP=0x0000000000053bf3
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000053735
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000535b9
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3;	// IMP=0x00000000000531e0
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000053057
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2;	// IMP=0x0000000000052f8a
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000052e0e
- (id)getMetadataForRegionOrCallingCode:(id)arg1 regionCode:(id)arg2;	// IMP=0x0000000000052d37
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2;	// IMP=0x0000000000052b90
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000052a14
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3;	// IMP=0x000000000005265a
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3 error:(id *)arg4;	// IMP=0x00000000000524d1
- (id)format:(id)arg1 numberFormat:(long long)arg2;	// IMP=0x000000000005220e
- (id)format:(id)arg1 numberFormat:(long long)arg2 error:(id *)arg3;	// IMP=0x00000000000520ae
- (_Bool)hasValidCountryCallingCode:(id)arg1;	// IMP=0x0000000000052074
- (_Bool)isValidRegionCode:(id)arg1;	// IMP=0x0000000000051f37
- (_Bool)isNumberGeographical:(id)arg1;	// IMP=0x0000000000051e91
- (_Bool)formattingRuleHasFirstGroupOnly:(id)arg1;	// IMP=0x0000000000051e25
- (id)normalizeHelper:(id)arg1 normalizationReplacements:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000051cb5
- (id)getCountryMobileTokenFromCountryCode:(long long)arg1;	// IMP=0x0000000000051c28
- (int)getLengthOfNationalDestinationCode:(id)arg1;	// IMP=0x000000000005184e
- (int)getLengthOfNationalDestinationCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000051702
- (int)getLengthOfGeographicalAreaCode:(id)arg1;	// IMP=0x00000000000515ed
- (int)getLengthOfGeographicalAreaCode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000514a1
- (id)convertAlphaCharactersInNumber:(id)arg1;	// IMP=0x0000000000051424
- (id)normalizeDiallableCharsOnly:(id)arg1;	// IMP=0x00000000000513a4
- (id)normalizeDigitsOnly:(id)arg1;	// IMP=0x0000000000051307
- (void)normalizeSB:(id *)arg1;	// IMP=0x00000000000512cf
- (id)normalize:(id)arg1;	// IMP=0x0000000000051232
- (_Bool)isViablePhoneNumber:(id)arg1;	// IMP=0x00000000000511a9
- (id)extractPossibleNumber:(id)arg1;	// IMP=0x000000000005108f
- (void)initNormalizationMappings;	// IMP=0x00000000000507c1
@property(readonly, nonatomic) NSDictionary *DIGIT_MAPPINGS;
- (void)initRegularExpressionSet;	// IMP=0x00000000000501cd
- (id)init;	// IMP=0x0000000000050105
- (id)getNationalSignificantNumber:(id)arg1;	// IMP=0x000000000004ff20
- (_Bool)isAllDigits:(id)arg1;	// IMP=0x000000000004fe78
- (id)stringByReplacingOccurrencesString:(id)arg1 withMap:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x000000000004fd1c
- (_Bool)isStartingStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004fb1a
- (id)matchedStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f90f
- (id)matchesByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f850
- (id)matchFirstByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f751
- (id)replaceStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004f55a
- (id)replaceFirstStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000004f401
- (int)indexOfStringByString:(id)arg1 target:(id)arg2;	// IMP=0x000000000004f3e9
- (int)stringPositionByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f270
- (id)componentsSeparatedByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000004f1d4
- (id)regularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004f0ad
- (id)entireRegularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000004ef13
- (id)errorWithObject:(id)arg1 withDomain:(id)arg2;	// IMP=0x000000000004ee71

@end

