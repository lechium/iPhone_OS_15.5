//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Metal/_MTLDevice.h>

#import <MTLSimDriver/MTLDeviceSPI-Protocol.h>

@class MTLGPUBVHBuilder, MTLResourceListPool, MTLSerializer, MTLTargetDeviceArchitecture, NSArray, NSDictionary, NSObject, NSString;
@protocol MTLDeviceSPI, OS_dispatch_queue, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface MTLSimDevice : _MTLDevice <MTLDeviceSPI>
{
    struct MTLSimConnection _mainConnection;	// 432 = 0x1b0
    struct MTLSimConnection _resourceConnection;	// 448 = 0x1c0
    struct MTLSimConnection _compilerConnection;	// 464 = 0x1d0
    MTLSerializer *_serializer;	// 480 = 0x1e0
    unsigned long long _processRef;	// 488 = 0x1e8
    unsigned int _deserializerVersion;	// 496 = 0x1f0
    unsigned long long _registryID;	// 504 = 0x1f8
    NSObject<OS_dispatch_queue> *_commandBufferQueue;	// 512 = 0x200
    struct unordered_map<unsigned int, MTLSimCommandBuffer *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MTLSimCommandBuffer *>>> _commandBuffers;	// 520 = 0x208
    MTLResourceListPool *_resourceListPool;	// 560 = 0x230
    id <MTLDeviceSPI> _deviceWrapper;	// 568 = 0x238
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _notificationMutex;	// 576 = 0x240
    void *_notifications;	// 640 = 0x280
    CDStruct_da2e99ad _maxThreadsPerThreadgroup;	// 648 = 0x288
    unsigned long long _maxThreadgroupMemoryLength;	// 672 = 0x2a0
    _Bool headless;	// 680 = 0x2a8
    _Bool lowPower;	// 681 = 0x2a9
    _Bool hasUnifiedMemory;	// 682 = 0x2aa
    _Bool removable;	// 683 = 0x2ab
    _Bool programmableSamplePositionsSupported;	// 684 = 0x2ac
    _Bool depth24Stencil8PixelFormatSupported;	// 685 = 0x2ad
    _Bool supportPriorityBand;	// 686 = 0x2ae
    _Bool metalAssertionsEnabled;	// 687 = 0x2af
    unsigned long long currentAllocatedSize;	// 688 = 0x2b0
    unsigned long long singleFPConfig;	// 696 = 0x2b8
    unsigned long long sharedMemorySize;	// 704 = 0x2c0
    unsigned long long halfFPConfig;	// 712 = 0x2c8
    unsigned long long doubleFPConfig;	// 720 = 0x2d0
    unsigned long long dedicatedMemorySize;	// 728 = 0x2d8
    unsigned long long recommendedMaxWorkingSetSize;	// 736 = 0x2e0
}

+ (void)registerDevices;	// IMP=0x0000000000006bb1
- (id).cxx_construct;	// IMP=0x0000000000007b0d
- (void).cxx_destruct;	// IMP=0x0000000000007afc
@property(readonly) unsigned long long recommendedMaxWorkingSetSize; // @synthesize recommendedMaxWorkingSetSize;
@property(readonly) unsigned long long dedicatedMemorySize; // @synthesize dedicatedMemorySize;
@property(readonly) unsigned long long doubleFPConfig; // @synthesize doubleFPConfig;
@property(readonly) unsigned long long halfFPConfig; // @synthesize halfFPConfig;
@property(nonatomic) _Bool metalAssertionsEnabled; // @synthesize metalAssertionsEnabled;
@property(readonly) unsigned long long sharedMemorySize; // @synthesize sharedMemorySize;
@property(readonly) unsigned long long singleFPConfig; // @synthesize singleFPConfig;
@property(readonly) _Bool supportPriorityBand; // @synthesize supportPriorityBand;
@property(readonly, getter=isDepth24Stencil8PixelFormatSupported) _Bool depth24Stencil8PixelFormatSupported; // @synthesize depth24Stencil8PixelFormatSupported;
@property(readonly) unsigned long long currentAllocatedSize; // @synthesize currentAllocatedSize;
@property(readonly) unsigned long long registryID; // @synthesize registryID=_registryID;
@property(readonly) MTLResourceListPool *resourceListPool; // @synthesize resourceListPool=_resourceListPool;
@property(readonly, getter=areProgrammableSamplePositionsSupported) _Bool programmableSamplePositionsSupported; // @synthesize programmableSamplePositionsSupported;
@property(readonly, getter=isRemovable) _Bool removable; // @synthesize removable;
@property(readonly) _Bool hasUnifiedMemory; // @synthesize hasUnifiedMemory;
@property(readonly, getter=isLowPower) _Bool lowPower; // @synthesize lowPower;
@property(readonly, getter=isHeadless) _Bool headless; // @synthesize headless;
@property(readonly) MTLSerializer *serializer; // @synthesize serializer=_serializer;
@property(readonly) unsigned long long maxBufferLength;
@property(readonly) unsigned long long featureProfile;
@property(readonly) unsigned long long maxThreadgroupMemoryLength;
@property(readonly) CDStruct_da2e99ad maxThreadsPerThreadgroup;
- (id)newSharedEventWithMachPort:(unsigned int)arg1;	// IMP=0x0000000000007699
- (id)newSharedEventWithHandle:(id)arg1;	// IMP=0x0000000000007380
- (id)newSharedEvent;	// IMP=0x0000000000007168
- (id)newEvent;	// IMP=0x0000000000007156
@property(readonly) _Bool deserializerSupportsSharedEvents;
@property(readonly) unsigned long long maxRasterizationRateLayerCount;
- (id)newRasterizationRateMapWithDescriptor:(id)arg1;	// IMP=0x0000000000007132
- (_Bool)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;	// IMP=0x000000000000712a
- (id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;	// IMP=0x0000000000007106
- (void)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000070e5
- (unsigned long long)minimumTextureBufferAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000006f67
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;	// IMP=0x0000000000006d8e
- (id)newBufferWithIOSurface:(struct __IOSurface *)arg1;	// IMP=0x0000000000006d68
- (_Bool)setResourcesPurgeableState:(id *)arg1 newState:(unsigned long long)arg2 oldState:(unsigned long long *)arg3 count:(int)arg4;	// IMP=0x0000000000006d60
- (id)newCommandQueueWithDescriptor:(id)arg1;	// IMP=0x0000000000006bda
- (id)vendorName;	// IMP=0x0000000000006bcd
- (_Bool)supportsSampleCount:(unsigned long long)arg1;	// IMP=0x0000000000006bb7
- (int)llvmVersion;	// IMP=0x0000000000006ba6
- (id)productName;	// IMP=0x0000000000006b99
- (id)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 descriptor:(id)arg3 offset:(unsigned long long)arg4 bytesPerRow:(unsigned long long)arg5;	// IMP=0x0000000000006b75
- (id)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3 descriptor:(id)arg4 offset:(unsigned long long)arg5 bytesPerRow:(unsigned long long)arg6;	// IMP=0x0000000000006b51
- (id)newIndirectRenderCommandEncoderWithBuffer:(id)arg1;	// IMP=0x0000000000006b2d
- (id)newIndirectComputeCommandEncoderWithBuffer:(id)arg1;	// IMP=0x0000000000006b09
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000006ae5
- (id)newArgumentEncoderWithLayout:(id)arg1;	// IMP=0x000000000000686a
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;	// IMP=0x000000000000661c
- (id)familyName;	// IMP=0x000000000000660f
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2 errorMessage:(id *)arg3;	// IMP=0x0000000000006331
- (id)newComputeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;	// IMP=0x000000000000631a
- (id)wrapComputeState:(id)arg1 descriptor:(id)arg2;	// IMP=0x00000000000062f6
- (id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1 compileTimeOutput:(id)arg2;	// IMP=0x0000000000006287
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 vertexCompileTimeOutput:(id)arg3 fragmentCompileTimeOutput:(id)arg4;	// IMP=0x000000000000616e
- (CDStruct_04792461)pipelineFlagsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;	// IMP=0x0000000000006166
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 errorMessage:(id *)arg4;	// IMP=0x0000000000005ee6
- (id)newVertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;	// IMP=0x0000000000005ecf
- (id)newFragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;	// IMP=0x0000000000005eb8
- (id)newFunctionVariantWithCompilerOutput:(id)arg1 functionType:(unsigned long long)arg2;	// IMP=0x0000000000005bd8
- (id)reportLeaks;	// IMP=0x0000000000005af5
- (void)freeVertexFunctionKey:(void *)arg1 vertexKeySize:(unsigned long long)arg2;	// IMP=0x0000000000005aef
- (void)freeFragmentFunctionKey:(void *)arg1 fragmentKeySize:(unsigned long long)arg2;	// IMP=0x0000000000005ae9
- (void *)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 nextStageVariant:(id)arg3 vertexKeySize:(unsigned long long *)arg4;	// IMP=0x0000000000005ada
- (void *)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 previousStateVariant:(id)arg3 fragmentKeySize:(unsigned long long *)arg4;	// IMP=0x0000000000005acb
- (id)wrapRenderState:(id)arg1 descriptor:(id)arg2;	// IMP=0x0000000000005aa7
- (void)registerViewTexture:(id)arg1 baseTextureView:(id)arg2;	// IMP=0x0000000000005aa1
@property(readonly) _Bool deserializerSupportsSharedTextures;
- (id)newTextureWithDescriptor:(id)arg1 iosurface:(struct __IOSurface *)arg2 plane:(unsigned long long)arg3;	// IMP=0x000000000000567c
- (id)newTextureWithDescriptor:(id)arg1;	// IMP=0x00000000000053ae
- (id)newSamplerStateWithDescriptor:(id)arg1;	// IMP=0x0000000000005266
- (void)dispatchNotificationWithReference:(unsigned int)arg1;	// IMP=0x0000000000005145
- (void)registerEventNotification:(unsigned int)arg1 listener:(id)arg2 event:(id)arg3 value:(unsigned long long)arg4 block:(CDUnknownBlockType)arg5;	// IMP=0x0000000000005064
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x0000000000005040
- (id)newHeapWithDescriptor:(id)arg1;	// IMP=0x0000000000004d26
- (id)newFence;	// IMP=0x0000000000004a8b
- (id)newDepthStencilStateWithDescriptor:(id)arg1;	// IMP=0x0000000000004943
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000000491a
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x00000000000048ec
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x00000000000048b7
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 pointer:(void *)arg3 copyBytes:(_Bool)arg4 deallocator:(CDUnknownBlockType)arg5;	// IMP=0x00000000000045fc
- (void)releaseCommandBufferRef:(unsigned int)arg1;	// IMP=0x0000000000004547
- (unsigned int)registerCommandBuffer:(id)arg1;	// IMP=0x00000000000043b4
- (id)commandBufferForReference:(unsigned int)arg1;	// IMP=0x0000000000004247
- (CDStruct_4bcfbbae)heapTextureSizeAndAlignWithDescriptor:(id)arg1;	// IMP=0x0000000000003fb8
- (CDStruct_da2e99ad)sparseTileSizeWithTextureType:(unsigned long long)arg1 pixelFormat:(unsigned long long)arg2 sampleCount:(unsigned long long)arg3;	// IMP=0x0000000000003f7b
- (CDStruct_4bcfbbae)heapBufferSizeAndAlignWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000003de5
- (unsigned int)getNewResourceID;	// IMP=0x0000000000003dd2
- (id)compiler;	// IMP=0x0000000000003ca9
- (id)_deviceWrapper;	// IMP=0x0000000000003c7f
- (void)_setDeviceWrapper:(id)arg1;	// IMP=0x0000000000003c6e
- (void)dealloc;	// IMP=0x0000000000003b76
- (id)init;	// IMP=0x00000000000032f3
@property(readonly) NSObject<OS_xpc_object> *compilerConnection;
@property(readonly) NSObject<OS_xpc_object> *resourceConnection;
@property(readonly) NSObject<OS_xpc_object> *mainConnection;
- (_Bool)supportsVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x0000000000002f76

// Remaining properties
@property(readonly, getter=isAnisoSampleFixSupported) _Bool AnisoSampleFixSupported;
@property(readonly, getter=isBCTextureCompressionSupported) _Bool BCTextureCompressionSupported;
@property(readonly, getter=isClampToHalfBorderSupported) _Bool ClampToHalfBorderSupported;
@property(readonly, getter=isCustomBorderColorSupported) _Bool CustomBorderColorSupported;
@property(readonly, getter=isFixedLinePointFillDepthGradientSupported) _Bool FixedLinePointFillDepthGradientSupported;
@property(readonly) MTLGPUBVHBuilder *GPUBVHBuilder;
@property(readonly, getter=isRGB10A2GammaSupported) _Bool RGB10A2GammaSupported;
@property(readonly, getter=isRTZRoundingSupported) _Bool RTZRoundingSupported;
@property(readonly) unsigned long long argumentBuffersSupport;
@property(readonly, getter=areBarycentricCoordsSupported) _Bool barycentricCoordsSupported;
@property(nonatomic) unsigned long long commandBufferErrorOptions;
@property(readonly) NSArray *counterSets;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) long long defaultTextureWriteRoundingMode;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long deviceCreationFlags;
@property(readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long deviceLinearTextureAlignmentBytes;
@property(readonly, getter=isFloat32FilteringSupported) _Bool float32FilteringSupported;
@property(getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) _Bool gpuAssertionsEnabled;
@property(readonly) unsigned long long hash;
@property(readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities;
@property(readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceTextureAlignmentBytes;
@property(readonly, getter=isLargeMRTSupported) _Bool largeMRTSupported;
@property(readonly) const CDStruct_1825b841 *limits;
@property(readonly) unsigned long long linearTextureAlignmentBytes;
@property(readonly) unsigned long long linearTextureArrayAlignmentBytes;
@property(readonly) unsigned long long linearTextureArrayAlignmentSlice;
@property(readonly) unsigned long long maxArgumentBufferSamplerCount;
@property(readonly) unsigned long long maxColorAttachments;
@property(readonly) unsigned long long maxComputeAttributes;
@property(readonly) unsigned long long maxComputeBuffers;
@property(readonly) unsigned long long maxComputeInlineDataSize;
@property(readonly) unsigned long long maxComputeLocalMemorySizes;
@property(readonly) unsigned long long maxComputeSamplers;
@property(readonly) unsigned long long maxComputeTextures;
@property(readonly) unsigned long long maxComputeThreadgroupMemory;
@property(readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes;
@property(readonly) unsigned long long maxConstantBufferArguments;
@property(readonly) unsigned long long maxCustomSamplePositions;
@property(readonly) unsigned long long maxFenceInstances;
@property(readonly) unsigned long long maxFragmentBuffers;
@property(readonly) unsigned long long maxFragmentInlineDataSize;
@property(readonly) unsigned long long maxFragmentSamplers;
@property(readonly) unsigned long long maxFragmentTextures;
@property(readonly) unsigned long long maxFramebufferStorageBits;
@property(readonly) unsigned long long maxFunctionConstantIndices;
@property(readonly) unsigned long long maxIndirectBuffers;
@property(readonly) unsigned long long maxIndirectSamplers;
@property(readonly) unsigned long long maxIndirectSamplersPerDevice;
@property(readonly) unsigned long long maxIndirectTextures;
@property(readonly) unsigned long long maxInterpolants;
@property(readonly) unsigned long long maxInterpolatedComponents;
@property(readonly) float maxLineWidth;
@property(readonly) float maxPointSize;
@property(readonly) unsigned long long maxPredicatedNestingDepth;
@property(readonly) unsigned long long maxTessellationFactor;
@property(readonly) unsigned long long maxTextureBufferWidth;
@property(readonly) unsigned long long maxTextureDepth3D;
@property(readonly) unsigned long long maxTextureDimensionCube;
@property(readonly) unsigned long long maxTextureHeight2D;
@property(readonly) unsigned long long maxTextureHeight3D;
@property(readonly) unsigned long long maxTextureLayers;
@property(readonly) unsigned long long maxTextureWidth1D;
@property(readonly) unsigned long long maxTextureWidth2D;
@property(readonly) unsigned long long maxTextureWidth3D;
@property(readonly) unsigned long long maxTileBuffers;
@property(readonly) unsigned long long maxTileInlineDataSize;
@property(readonly) unsigned long long maxTileSamplers;
@property(readonly) unsigned long long maxTileTextures;
@property(readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup;
@property(readonly) unsigned long long maxVertexAmplificationCount;
@property(readonly) unsigned long long maxVertexAmplificationFactor;
@property(readonly) unsigned long long maxVertexAttributes;
@property(readonly) unsigned long long maxVertexBuffers;
@property(readonly) unsigned long long maxVertexInlineDataSize;
@property(readonly) unsigned long long maxVertexSamplers;
@property(readonly) unsigned long long maxVertexTextures;
@property(readonly) unsigned long long maxViewportCount;
@property(readonly) unsigned long long maxVisibilityQueryOffset;
@property(readonly) unsigned long long minBufferNoCopyAlignmentBytes;
@property(readonly) unsigned long long minConstantBufferAlignmentBytes;
@property(readonly) unsigned long long minTilePixels;
@property(readonly, getter=isMsaa32bSupported) _Bool msaa32bSupported;
@property(readonly) NSString *name;
@property(readonly, getter=isPlacementHeapSupported) _Bool placementHeapSupported;
@property(copy, nonatomic) NSDictionary *pluginData;
@property(readonly, getter=isQuadDataSharingSupported) _Bool quadDataSharingSupported;
@property(readonly, getter=areRasterOrderGroupsSupported) _Bool rasterOrderGroupsSupported;
@property(readonly) unsigned long long readWriteTextureSupport;
@property(readonly) _Bool requiresRaytracingEmulation;
@property _Bool shaderDebugInfoCaching;
@property(readonly) unsigned long long sparseTexturesSupport;
@property(readonly) unsigned long long sparseTileSizeInBytes;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supports2DLinearTexArraySPI;
@property(readonly, nonatomic) _Bool supports32BitFloatFiltering;
@property(readonly, nonatomic) _Bool supports32BitMSAA;
@property(readonly, nonatomic) _Bool supports32bpcMSAATextures;
@property(readonly, nonatomic) _Bool supports3DASTCTextures;
@property(readonly, nonatomic) _Bool supports3DBCTextures;
@property(readonly, nonatomic) _Bool supportsASTCHDRTextureCompression;
@property(readonly, nonatomic) _Bool supportsASTCTextureCompression;
@property(readonly, nonatomic) _Bool supportsAlphaYUVFormats;
@property(readonly, nonatomic) _Bool supportsAnisoSampleFix;
@property(readonly, nonatomic) _Bool supportsArgumentBuffersTier2;
@property(readonly, nonatomic) _Bool supportsArrayOfSamplers;
@property(readonly, nonatomic) _Bool supportsArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsAtomicUlongVoidMinMax;
@property(readonly, nonatomic) _Bool supportsBCTextureCompression;
@property(readonly, nonatomic) _Bool supportsBaseVertexInstanceDrawing;
@property(readonly, nonatomic) _Bool supportsBfloat16Format;
@property(readonly, nonatomic) _Bool supportsBinaryArchives;
@property(readonly, nonatomic) _Bool supportsBinaryLibraries;
@property(readonly, nonatomic) _Bool supportsBlackOrWhiteSamplerBorderColors;
@property(readonly, nonatomic) _Bool supportsBufferBoundsChecking;
@property(readonly, nonatomic) _Bool supportsBufferPrefetchStatistics;
@property(readonly, nonatomic) _Bool supportsBufferWithIOSurface;
@property(readonly, nonatomic) _Bool supportsBufferlessClientStorageTexture;
@property(readonly, nonatomic) _Bool supportsCMPIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsCombinedMSAAStoreAndResolveAction;
@property(readonly, nonatomic) _Bool supportsCommandBufferJump;
@property(readonly, nonatomic) _Bool supportsCompressedTextureViewSPI;
@property(readonly, nonatomic) _Bool supportsComputeCompressedTextureWrite;
@property(readonly, nonatomic) _Bool supportsComputeMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsConcurrentComputeDispatch;
@property(readonly, nonatomic) _Bool supportsCountingOcclusionQuery;
@property(readonly, nonatomic) _Bool supportsCustomBorderColor;
@property(readonly, nonatomic) _Bool supportsDepthClipMode;
@property(readonly, nonatomic) _Bool supportsDepthClipModeClampExtended;
@property(readonly, nonatomic) _Bool supportsDevicePartitioning;
@property(readonly, nonatomic) _Bool supportsDynamicControlPointCount;
@property(readonly, nonatomic) _Bool supportsDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsExtendedXR10Formats;
@property(readonly, nonatomic) _Bool supportsExtendedYUVFormats;
@property(readonly, nonatomic) _Bool supportsFP32TessFactors;
@property(readonly, nonatomic) _Bool supportsFastMathInfNaNPropagation;
@property(readonly, nonatomic) _Bool supportsFixedLinePointFillDepthGradient;
@property(readonly, nonatomic) _Bool supportsFloat16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsFloat16InfNanFiltering;
@property(readonly, nonatomic) _Bool supportsForceSeamsOnCubemaps;
@property(readonly, nonatomic) _Bool supportsForkJoin;
@property(readonly, nonatomic) _Bool supportsFragmentBufferWrites;
@property(readonly, nonatomic) _Bool supportsFragmentOnlyEncoders;
@property(readonly, nonatomic) _Bool supportsFunctionPointers;
@property(readonly, nonatomic) _Bool supportsFunctionPointersFromRender;
@property(readonly, nonatomic) _Bool supportsGFXIndirectCommandBuffers;
@property(readonly, nonatomic) _Bool supportsGPUStatistics;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocation;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationCompute;
@property(readonly, nonatomic) _Bool supportsGlobalVariableRelocationRender;
@property(readonly, nonatomic) _Bool supportsIABHashForTools;
@property(readonly, nonatomic) _Bool supportsImageBlockSampleCoverageControl;
@property(readonly, nonatomic) _Bool supportsImageBlocks;
@property(readonly, nonatomic) _Bool supportsIndirectDrawAndDispatch;
@property(readonly, nonatomic) _Bool supportsIndirectStageInRegion;
@property(readonly, nonatomic) _Bool supportsIndirectTessellation;
@property(readonly, nonatomic) _Bool supportsIndirectTextures;
@property(readonly, nonatomic) _Bool supportsIndirectWritableTextures;
@property(readonly, nonatomic) _Bool supportsInt64;
@property(readonly, nonatomic) _Bool supportsInterchangeTiled;
@property(readonly, nonatomic) _Bool supportsInvariantVertexPosition;
@property(readonly, nonatomic) _Bool supportsLargeFramebufferConfigs;
@property(readonly, nonatomic) _Bool supportsLateEvalEvent;
@property(readonly, nonatomic) _Bool supportsLayeredRendering;
@property(readonly, nonatomic) _Bool supportsLimitedYUVFormats;
@property(readonly, nonatomic) _Bool supportsLinearTexture2DArray;
@property(readonly, nonatomic) _Bool supportsLinearTextureFromSharedBuffer;
@property(readonly, nonatomic) _Bool supportsLossyCompression;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolve;
@property(readonly, nonatomic) _Bool supportsMSAADepthResolveFilter;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolve;
@property(readonly, nonatomic) _Bool supportsMSAAStencilResolveFilter;
@property(readonly, nonatomic) _Bool supportsMemoryOrderAtomics;
@property(readonly, nonatomic) _Bool supportsMemorylessRenderTargets;
@property(readonly, nonatomic) _Bool supportsMipLevelsSmallerThanBlockSize;
@property(readonly, nonatomic) _Bool supportsMirrorClampToEdgeSamplerMode;
@property(readonly, nonatomic) _Bool supportsMutableTier1ArgumentBuffers;
@property(readonly, nonatomic) _Bool supportsNativeHardwareFP16;
@property(readonly, nonatomic) _Bool supportsNonPrivateDepthStencilTextures;
@property(readonly, nonatomic) _Bool supportsNonPrivateMSAATextures;
@property(readonly, nonatomic) _Bool supportsNonSquareTileShaders;
@property(readonly, nonatomic) _Bool supportsNonUniformThreadgroupSize;
@property(readonly, nonatomic) _Bool supportsNonZeroTextureWriteLOD;
@property(readonly, nonatomic) _Bool supportsNorm16BCubicFiltering;
@property(readonly, nonatomic) _Bool supportsOpenCLTextureWriteSwizzles;
@property(readonly, nonatomic) _Bool supportsPacked32TextureBufferWrites;
@property(readonly, nonatomic) _Bool supportsPipelineLibraries;
@property(readonly, nonatomic) _Bool supportsPlacementHeaps;
@property(readonly, nonatomic) _Bool supportsPostDepthCoverage;
@property(readonly, nonatomic) _Bool supportsPrimitiveMotionBlur;
@property(readonly, nonatomic) _Bool supportsPrimitiveRestartOverride;
@property(readonly, nonatomic) _Bool supportsProgrammableBlending;
@property(readonly, nonatomic) _Bool supportsProgrammableSamplePositions;
@property(readonly, nonatomic) _Bool supportsPublicXR10Formats;
@property(readonly, nonatomic) _Bool supportsPullModelInterpolation;
@property(readonly, nonatomic) _Bool supportsQuadGroup;
@property(readonly, nonatomic) _Bool supportsQuadReduction;
@property(readonly, nonatomic) _Bool supportsQuadShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsQueryTextureLOD;
@property(readonly, nonatomic) _Bool supportsRGBA10A2Gamma;
@property(readonly, nonatomic) _Bool supportsRTZRounding;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroups;
@property(readonly, nonatomic) _Bool supportsRasterOrderGroupsColorAttachment;
@property(readonly) _Bool supportsRaytracing;
@property(readonly, nonatomic) _Bool supportsRaytracingFromRender;
@property(readonly, nonatomic) _Bool supportsReadWriteBufferArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArguments;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureArgumentsTier2;
@property(readonly, nonatomic) _Bool supportsReadWriteTextureCubeArguments;
@property(readonly, nonatomic) _Bool supportsRelaxedTextureViewRequirements;
@property(readonly, nonatomic) _Bool supportsRenderDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsRenderMemoryBarrier;
@property(readonly, nonatomic) _Bool supportsRenderPassWithoutRenderTarget;
@property(readonly, nonatomic) _Bool supportsRenderTargetTextureRotation;
@property(readonly, nonatomic) _Bool supportsRenderTextureWrites;
@property(readonly, nonatomic) _Bool supportsRenderToLinearTextures;
@property(readonly, nonatomic) _Bool supportsSIMDGroup;
@property(readonly, nonatomic) _Bool supportsSIMDGroupMatrix;
@property(readonly, nonatomic) _Bool supportsSIMDReduction;
@property(readonly, nonatomic) _Bool supportsSIMDShuffleAndFill;
@property(readonly, nonatomic) _Bool supportsSIMDShufflesAndBroadcast;
@property(readonly, nonatomic) _Bool supportsSRGBwrites;
@property(readonly, nonatomic) _Bool supportsSamplerAddressModeClampToHalfBorder;
@property(readonly, nonatomic) _Bool supportsSamplerCompareFunction;
@property(readonly, nonatomic) _Bool supportsSeparateDepthStencil;
@property(readonly, nonatomic) _Bool supportsSeparateVisibilityAndShadingRate;
@property(readonly, nonatomic) _Bool supportsShaderBarycentricCoordinates;
@property(readonly, nonatomic) _Bool supportsShaderLODAverage;
@property(readonly, nonatomic) _Bool supportsShaderMinLODClamp;
@property(readonly, nonatomic) _Bool supportsSharedFunctionTables;
@property(readonly, nonatomic) _Bool supportsSharedStorageHeapResources;
@property(readonly, nonatomic) _Bool supportsSharedStorageTextures;
@property(readonly, nonatomic) _Bool supportsSharedTextureHandles;
@property(readonly, nonatomic) _Bool supportsSparseDepthAttachments;
@property(readonly, nonatomic) _Bool supportsSparseHeaps;
@property(readonly, nonatomic) _Bool supportsSparseTextures;
@property(readonly, nonatomic) _Bool supportsStackOverflowErrorCode;
@property(readonly, nonatomic) _Bool supportsStatefulDynamicLibraries;
@property(readonly, nonatomic) _Bool supportsStencilFeedback;
@property(readonly, nonatomic) _Bool supportsStreamingCodecSignaling;
@property(readonly, nonatomic) _Bool supportsTLS;
@property(readonly, nonatomic) _Bool supportsTessellation;
@property(readonly, nonatomic) _Bool supportsTexture2DMultisampleArray;
@property(readonly, nonatomic) _Bool supportsTextureCubeArray;
@property(readonly, nonatomic) _Bool supportsTextureOutOfBoundsReads;
@property(readonly, nonatomic) _Bool supportsTextureSwizzle;
@property(readonly, nonatomic) _Bool supportsTileShaders;
@property(readonly, nonatomic) _Bool supportsUnalignedVertexFetch;
@property(readonly, nonatomic) _Bool supportsVariableRateRasterization;
@property(readonly, nonatomic) _Bool supportsVertexAmplification;
@property(readonly, nonatomic) _Bool supportsViewportAndScissorArray;
@property(readonly, nonatomic) _Bool supportsWritableArrayOfTextures;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats;
@property(readonly, nonatomic) _Bool supportsYCBCRFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsPQ;
@property(readonly, nonatomic) _Bool supportsYCBCRFormatsXR;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormats12;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsPQ;
@property(readonly, nonatomic) _Bool supportsYCBCRPackedFormatsXR;
@property(readonly) MTLTargetDeviceArchitecture *targetDeviceArchitecture;
@property(readonly) const struct MTLTargetDeviceArch *targetDeviceInfo;

@end

