//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PBBridgeSupport/IDSServiceDelegate-Protocol.h>
#import <PBBridgeSupport/NSURLConnectionDelegate-Protocol.h>
#import <PBBridgeSupport/PBBridgeCompanionProtocol-Protocol.h>
#import <PBBridgeSupport/RUILoaderDelegate-Protocol.h>

@class NSDictionary, NSMutableData, NSMutableDictionary, NSMutableURLRequest, NSObject, NSString, NSURLConnection, RUILoader, RUIStyle;
@protocol OS_dispatch_queue, OS_dispatch_source, PBBridgeConnectionDelegate, RUILoaderDelegate;

@interface PBBridgeCompanionController <IDSServiceDelegate, NSURLConnectionDelegate, RUILoaderDelegate, PBBridgeCompanionProtocol>
{
    NSObject<OS_dispatch_queue> *_timeoutTrackerQueue;	// 8 = 0x8
    _Bool _nonSilentActivation;	// 16 = 0x10
    _Bool _connectionFailed;	// 17 = 0x11
    _Bool _awaitingCustomResponse;	// 18 = 0x12
    _Bool _isEstablishingPairing;	// 19 = 0x13
    _Bool _allowAnyHTTPSCertificate;	// 20 = 0x14
    _Bool _sentSessionRequest;	// 21 = 0x15
    _Bool _sentActivationRequest;	// 22 = 0x16
    _Bool _passcodeSet;	// 23 = 0x17
    _Bool _selectedPairedUnlock;	// 24 = 0x18
    unsigned short _granularActivationState;	// 26 = 0x1a
    int _activationState;	// 28 = 0x1c
    int _activationRetries;	// 32 = 0x20
    RUIStyle *_remoteUIStyle;	// 40 = 0x28
    id <RUILoaderDelegate> _ruiDelegate;	// 48 = 0x30
    id <PBBridgeConnectionDelegate> _delegate;	// 56 = 0x38
    NSURLConnection *_activationConnection;	// 64 = 0x40
    NSMutableURLRequest *_activationRequest;	// 72 = 0x48
    NSMutableData *_activationData;	// 80 = 0x50
    RUILoader *_ruiLoader;	// 88 = 0x58
    NSString *_contentType;	// 96 = 0x60
    NSDictionary *_allHeaders;	// 104 = 0x68
    NSObject<OS_dispatch_source> *_activationTimeout;	// 112 = 0x70
    NSString *_internalLastSendMessageID;	// 120 = 0x78
    NSString *_remoteActivationUserAgent;	// 128 = 0x80
    CDUnknownBlockType _lockedOnAnimationCompletion;	// 136 = 0x88
    CDUnknownBlockType _initialSyncPrepCompletion;	// 144 = 0x90
    CDUnknownBlockType _languageLocaleCompletion;	// 152 = 0x98
    CDUnknownBlockType _prepareWatchForForcedSUCompletion;	// 160 = 0xa0
    CDUnknownBlockType _remoteAccountForDeviceCompletion;	// 168 = 0xa8
    CDUnknownBlockType _tinkerCredentialsIngestedCompletion;	// 176 = 0xb0
    CDUnknownBlockType _tinkerWiFiCredentialsIngestedCompletion;	// 184 = 0xb8
    CDUnknownBlockType _buysOnWatchCredentialsIngestedCompletion;	// 192 = 0xc0
    NSMutableDictionary *_reportMapping;	// 200 = 0xc8
    CDUnknownBlockType _appViewListImageCompletion;	// 208 = 0xd0
}

+ (id)displayNameWithFirstName:(id)arg1 lastName:(id)arg2;	// IMP=0x000000000003d149
+ (void)iCloudFirstName:(id *)arg1 lastName:(id *)arg2;	// IMP=0x000000000003d0a4
+ (void)meCardFirstName:(id *)arg1 lastName:(id *)arg2;	// IMP=0x000000000003ce56
- (void).cxx_destruct;	// IMP=0x000000000003ea91
@property(nonatomic) int activationRetries; // @synthesize activationRetries=_activationRetries;
@property(nonatomic) _Bool selectedPairedUnlock; // @synthesize selectedPairedUnlock=_selectedPairedUnlock;
@property(nonatomic) _Bool passcodeSet; // @synthesize passcodeSet=_passcodeSet;
@property(copy, nonatomic) CDUnknownBlockType appViewListImageCompletion; // @synthesize appViewListImageCompletion=_appViewListImageCompletion;
@property(retain, nonatomic) NSMutableDictionary *reportMapping; // @synthesize reportMapping=_reportMapping;
@property(nonatomic) _Bool sentActivationRequest; // @synthesize sentActivationRequest=_sentActivationRequest;
@property(nonatomic) _Bool sentSessionRequest; // @synthesize sentSessionRequest=_sentSessionRequest;
@property(copy, nonatomic) CDUnknownBlockType buysOnWatchCredentialsIngestedCompletion; // @synthesize buysOnWatchCredentialsIngestedCompletion=_buysOnWatchCredentialsIngestedCompletion;
@property(copy, nonatomic) CDUnknownBlockType tinkerWiFiCredentialsIngestedCompletion; // @synthesize tinkerWiFiCredentialsIngestedCompletion=_tinkerWiFiCredentialsIngestedCompletion;
@property(copy, nonatomic) CDUnknownBlockType tinkerCredentialsIngestedCompletion; // @synthesize tinkerCredentialsIngestedCompletion=_tinkerCredentialsIngestedCompletion;
@property(copy, nonatomic) CDUnknownBlockType remoteAccountForDeviceCompletion; // @synthesize remoteAccountForDeviceCompletion=_remoteAccountForDeviceCompletion;
@property(copy, nonatomic) CDUnknownBlockType prepareWatchForForcedSUCompletion; // @synthesize prepareWatchForForcedSUCompletion=_prepareWatchForForcedSUCompletion;
@property(copy, nonatomic) CDUnknownBlockType languageLocaleCompletion; // @synthesize languageLocaleCompletion=_languageLocaleCompletion;
@property(copy, nonatomic) CDUnknownBlockType initialSyncPrepCompletion; // @synthesize initialSyncPrepCompletion=_initialSyncPrepCompletion;
@property(copy, nonatomic) CDUnknownBlockType lockedOnAnimationCompletion; // @synthesize lockedOnAnimationCompletion=_lockedOnAnimationCompletion;
@property(copy, nonatomic) NSString *remoteActivationUserAgent; // @synthesize remoteActivationUserAgent=_remoteActivationUserAgent;
@property(nonatomic) _Bool allowAnyHTTPSCertificate; // @synthesize allowAnyHTTPSCertificate=_allowAnyHTTPSCertificate;
@property(retain, nonatomic) NSString *internalLastSendMessageID; // @synthesize internalLastSendMessageID=_internalLastSendMessageID;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *activationTimeout; // @synthesize activationTimeout=_activationTimeout;
@property(nonatomic) unsigned short granularActivationState; // @synthesize granularActivationState=_granularActivationState;
@property(nonatomic) _Bool isEstablishingPairing; // @synthesize isEstablishingPairing=_isEstablishingPairing;
@property(nonatomic) int activationState; // @synthesize activationState=_activationState;
@property(nonatomic) _Bool awaitingCustomResponse; // @synthesize awaitingCustomResponse=_awaitingCustomResponse;
@property(nonatomic) _Bool connectionFailed; // @synthesize connectionFailed=_connectionFailed;
@property(nonatomic) _Bool nonSilentActivation; // @synthesize nonSilentActivation=_nonSilentActivation;
@property(retain, nonatomic) NSDictionary *allHeaders; // @synthesize allHeaders=_allHeaders;
@property(copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) RUILoader *ruiLoader; // @synthesize ruiLoader=_ruiLoader;
@property(retain, nonatomic) NSMutableData *activationData; // @synthesize activationData=_activationData;
@property(retain, nonatomic) NSMutableURLRequest *activationRequest; // @synthesize activationRequest=_activationRequest;
@property(retain, nonatomic) NSURLConnection *activationConnection; // @synthesize activationConnection=_activationConnection;
@property(nonatomic) __weak id <PBBridgeConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <RUILoaderDelegate> ruiDelegate; // @synthesize ruiDelegate=_ruiDelegate;
@property(retain, nonatomic) RUIStyle *remoteUIStyle; // @synthesize remoteUIStyle=_remoteUIStyle;
- (void)acknowledgeBuysOnWatchCredentialIngestion:(id)arg1;	// IMP=0x000000000003e3ea
- (void)tinkerFinishedHealthSharingOptIn:(id)arg1;	// IMP=0x000000000003e2ef
- (void)tinkerWatchIngestedCredentials:(id)arg1;	// IMP=0x000000000003e026
- (void)sendTinkerAccountCredentialsWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003db6d
- (void)sendComputedTimeZoneToGizmo;	// IMP=0x000000000003da59
- (void)returnedRemoteAccountForDevice:(id)arg1;	// IMP=0x000000000003d8c9
- (void)requestProxiedDeviceForWatchWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d7f3
- (void)sendBuysOnWatchUsername:(id)arg1 andPassword:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000000003d6a0
- (id)reporterForConnection:(id)arg1;	// IMP=0x000000000003d632
- (void)setReporter:(id)arg1 forConnection:(id)arg2;	// IMP=0x000000000003d5a9
- (void)watchDidPrepareForForcedSU:(id)arg1;	// IMP=0x000000000003d4ef
- (void)tellWatchToPrepareForForcedSUWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003d3f6
- (void)watchDidIngestWirelessCredentials:(id)arg1;	// IMP=0x000000000003d3f0
- (id)currentWiFiNetworkName;	// IMP=0x000000000003d3e8
- (void)sendAllTinkerWirelessCredentials:(_Bool)arg1;	// IMP=0x000000000003d3e2
- (void)sendDemoWatchWirelessCredentials;	// IMP=0x000000000003d3dc
- (void)tellWatchToChangeDeviceNameFor:(id)arg1;	// IMP=0x000000000003d216
- (void)transportBecameUnreachable;	// IMP=0x000000000003ccc7
- (void)transportBecameReachable;	// IMP=0x000000000003cb38
- (void)handleOfflineTermsResponse:(id)arg1;	// IMP=0x000000000003c24b
- (void)queryGizmoForOfflineTerms;	// IMP=0x000000000003c192
- (void)watchDidPrepareForInitialSync:(id)arg1;	// IMP=0x000000000003c0cb
- (void)tellGizmoToPrepareForInitialSyncWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003bfe8
- (void)handleWarrantySentinelResponse:(id)arg1;	// IMP=0x000000000003bc60
- (void)tellGizmoToDeleteWarrantySentinel;	// IMP=0x000000000003bba2
- (void)queryGizmoForShowWarrantySentinelAndRestoreDeviceName:(id)arg1;	// IMP=0x000000000003b824
- (void)handleRemoteActivationDetails:(id)arg1;	// IMP=0x000000000003b66e
- (void)tellGizmoToKeepAliveForActivationEvent;	// IMP=0x000000000003b5b0
- (void)activationTimedOut;	// IMP=0x000000000003b2fc
- (void)refreshTimeoutTimerWithNewActivationGranularState:(unsigned short)arg1;	// IMP=0x000000000003ade8
- (void)invalidateTimeoutTimerWithNewActivationGranularState:(unsigned short)arg1;	// IMP=0x000000000003abff
- (void)tellGizmoToRetryActivation;	// IMP=0x000000000003ab3f
- (void)tellGizmoToBeginActivation;	// IMP=0x000000000003a9fc
- (void)startEstablishingPairing;	// IMP=0x000000000003a9eb
- (void)tellGizmoToUpdateSyncProgressTo:(double)arg1 withState:(long long)arg2;	// IMP=0x000000000003a892
- (void)tellGizmoToSeCrownOrientationRight:(_Bool)arg1;	// IMP=0x000000000003a76c
- (void)tellGizmoToShowLockedOnAnimationTimeToFlash:(double)arg1 animationCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003a4e0
- (void)tellGizmoToPopToControllerType:(unsigned long long)arg1;	// IMP=0x000000000003a3a9
- (void)tellGizmoToPushControllerType:(unsigned long long)arg1;	// IMP=0x000000000003a272
- (void)handleAppViewListImageResponse:(id)arg1;	// IMP=0x000000000003a0a3
- (void)retrieveAppViewListImageFromGizmo:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000039e6e
- (void)tellWatchToSetLauncherViewMode:(long long)arg1;	// IMP=0x0000000000039db9
- (void)tellGizmoToSetMessagesinCloudEnabled:(_Bool)arg1;	// IMP=0x0000000000039d04
- (void)tellWatchToSetSiriEnabled:(_Bool)arg1;	// IMP=0x0000000000039c4f
- (void)tellGizmoToSetFitnessRouteTrackingEnabled:(_Bool)arg1;	// IMP=0x0000000000039b9a
- (void)tellGizmoToSetLocationEnabled:(_Bool)arg1;	// IMP=0x0000000000039ae5
- (void)tellGizmoToSetDiagnosticsEnabled:(_Bool)arg1;	// IMP=0x0000000000039a30
- (void)sendGizmoPasscodeRestrictions;	// IMP=0x00000000000395f4
- (void)gizmoDidEndUnlockPairing:(id)arg1;	// IMP=0x00000000000393b4
- (void)gizmoDidBeginUnlockPairing:(id)arg1;	// IMP=0x0000000000039319
- (void)gizmoDidEndPasscodeChange:(id)arg1;	// IMP=0x0000000000038f9c
- (void)gizmoFailedToCreatePasscode:(id)arg1;	// IMP=0x0000000000038e92
- (void)gizmoDidEndPasscodeCreation:(id)arg1;	// IMP=0x0000000000038b15
- (void)objectModel:(id)arg1 pressedButton:(id)arg2 attributes:(id)arg3;	// IMP=0x0000000000038a15
- (void)_cleanup;	// IMP=0x0000000000038981
- (void)_processActivationData;	// IMP=0x00000000000385b9
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x000000000003845a
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;	// IMP=0x0000000000037e05
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;	// IMP=0x0000000000037b9b
- (void)connection:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x000000000003788f
- (void)loader:(id)arg1 didReceiveHTTPResponse:(id)arg2;	// IMP=0x000000000003781a
- (void)loader:(id)arg1 receivedObjectModel:(id)arg2 actionSignal:(unsigned long long)arg3;	// IMP=0x0000000000037796
- (void)loader:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00000000000376a8
- (id)viewControllerForAlertPresentation;	// IMP=0x0000000000037662
- (void)connectionDidFinishLoading:(id)arg1;	// IMP=0x000000000003765c
- (unsigned short)_testActivationResponseType;	// IMP=0x0000000000037493
- (void)sendProxyActivationWithCustomRequest:(id)arg1;	// IMP=0x0000000000036f74
- (_Bool)_dumpActivationResquests;	// IMP=0x0000000000036f54
- (void)sendProxyActivationRequest:(id)arg1;	// IMP=0x00000000000361ed
- (id)_connectionWithRequest:(id)arg1;	// IMP=0x0000000000035ff4
- (void)handlePerformanceResults:(id)arg1;	// IMP=0x0000000000035ae6
- (void)gizmoActivationFailed:(id)arg1;	// IMP=0x000000000003587b
- (void)gizmoDidFinishActivating:(id)arg1;	// IMP=0x0000000000035695
- (void)gizmoDidBeginActivating:(id)arg1;	// IMP=0x00000000000354e7
- (void)beganWaitingForUserResponseToActivationEvent;	// IMP=0x000000000003541d
- (void)beganWaitingForPresentationOfActivationEvent;	// IMP=0x0000000000035353
- (id)customDescriptionOfMessageType:(unsigned short)arg1;	// IMP=0x0000000000035347
- (void)watchDidRespondWithLanguageAndLocaleStatus:(id)arg1;	// IMP=0x000000000003517e
- (void)tellWatchLanguagesAndLocaleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000034e63
- (void)enableSiriForGizmo:(id)arg1;	// IMP=0x0000000000034d77
- (void)getSiriState:(id)arg1;	// IMP=0x0000000000034c7c
- (void)gizmoBecameAvailableWantsConfirmation:(id)arg1;	// IMP=0x0000000000034a38
- (void)getCompanionRegion:(id)arg1;	// IMP=0x000000000003491a
- (void)getCompanionLanguage:(id)arg1;	// IMP=0x00000000000347de
- (_Bool)_sendResponseToMessage:(id)arg1 withResponseMessageID:(unsigned short)arg2 withArguments:(id)arg3;	// IMP=0x00000000000345c0
- (_Bool)_sendRemoteCommandWithMessageID:(unsigned short)arg1 withArguments:(id)arg2;	// IMP=0x0000000000032d01
- (double)offsetEventTime;	// IMP=0x0000000000032cce
- (id)serviceIdentifier;	// IMP=0x0000000000032cc1
- (void)endSetupTransaction;	// IMP=0x0000000000032b75
- (void)beginSetupTransaction;	// IMP=0x0000000000032b32
- (void)setupServiceMessageSelectorMappings;	// IMP=0x0000000000032597
- (id)init;	// IMP=0x000000000003248c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

