//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreMediaStream/MSReauthorizationProtocolDelegate-Protocol.h>
#import <CoreMediaStream/MSSubscribeStorageProtocolDelegate-Protocol.h>
#import <CoreMediaStream/MSSubscribeStreamsProtocolDelegate-Protocol.h>
#import <CoreMediaStream/MSSubscriber-Protocol.h>

@class MSMediaStreamDaemon, MSObjectQueue, MSReauthorizationProtocol, MSSubscribeStreamsProtocol, NSMutableArray, NSMutableDictionary, NSString;
@protocol MSSubscribeStorageProtocol, MSSubscriberDelegate;

@interface MSSubscriber <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate>
{
    id <MSSubscriberDelegate> _delegate;	// 48 = 0x30
    MSMediaStreamDaemon *_daemon;	// 56 = 0x38
    _Bool _checkOneMoreTime;	// 64 = 0x40
    int _state;	// 68 = 0x44
    MSSubscribeStreamsProtocol *_protocol;	// 72 = 0x48
    NSMutableDictionary *_newSubscriptionsByStreamID;	// 80 = 0x50
    int _retrievalState;	// 88 = 0x58
    id <MSSubscribeStorageProtocol> _storageProtocol;	// 96 = 0x60
    MSReauthorizationProtocol *_reauthProtocol;	// 104 = 0x68
    MSObjectQueue *_retrievalQueue;	// 112 = 0x70
    NSMutableArray *_assetsBeingRetrieved;	// 120 = 0x78
    long long _targetRetrievalByteCount;	// 128 = 0x80
    int _retrievalBatchSize;	// 136 = 0x88
    long long _maxErrorCount;	// 144 = 0x90
}

+ (id)_descriptionForRetrievalState:(int)arg1;	// IMP=0x0000000000018be7
+ (id)_descriptionForState:(int)arg1;	// IMP=0x0000000000018bb1
+ (_Bool)isInRetryState;	// IMP=0x0000000000018a71
+ (void)stopAllActivities;	// IMP=0x000000000001893d
+ (id)personIDsWithOutstandingActivities;	// IMP=0x00000000000188f6
+ (id)nextActivityDateForPersonID:(id)arg1;	// IMP=0x000000000001888e
+ (id)nextActivityDate;	// IMP=0x00000000000186e3
+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;	// IMP=0x00000000000185bf
+ (void)forgetPersonID:(id)arg1;	// IMP=0x000000000001853b
+ (id)_clearInstantiatedSubscribersByPersonID;	// IMP=0x000000000001851f
+ (id)existingSubscriberForPersonID:(id)arg1;	// IMP=0x0000000000018506
+ (id)subscriberForPersonID:(id)arg1;	// IMP=0x00000000000183e7
- (void).cxx_destruct;	// IMP=0x0000000000018269
@property(nonatomic) int retrievalBatchSize; // @synthesize retrievalBatchSize=_retrievalBatchSize;
@property(nonatomic) long long targetRetrievalByteCount; // @synthesize targetRetrievalByteCount=_targetRetrievalByteCount;
@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;
@property(nonatomic) id <MSSubscriberDelegate> delegate; // @synthesize delegate=_delegate;
- (void)reauthorizationProtocol:(id)arg1 reauthorizedAssets:(id)arg2 rejectedAssets:(id)arg3 error:(id)arg4;	// IMP=0x00000000000179d7
- (void)reauthorizationProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;	// IMP=0x0000000000017835
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)arg1;	// IMP=0x000000000001690b
- (void)subscribeStorageProtocol:(id)arg1 didFinishRetrievingAsset:(id)arg2 error:(id)arg3;	// IMP=0x0000000000016739
- (void)_finishedRetrievingAsset:(id)arg1;	// IMP=0x00000000000165d4
- (_Bool)_isInRetryState;	// IMP=0x00000000000165ac
- (void)_forget;	// IMP=0x0000000000016553
- (void)abort;	// IMP=0x0000000000016541
- (void)_abort;	// IMP=0x00000000000161b3
- (void)stop;	// IMP=0x000000000001619d
- (void)_stopOutSubscriberState:(int *)arg1 outRetrievalState:(int *)arg2;	// IMP=0x0000000000016052
- (void)_reauthorizeAssets;	// IMP=0x0000000000015ea5
- (void)_retrieveNextAssets;	// IMP=0x00000000000159cc
- (void)_retrieveAssets;	// IMP=0x000000000001573a
- (void)checkForOutstandingActivities;	// IMP=0x00000000000155ee
- (void)retrieveAssets:(id)arg1;	// IMP=0x0000000000014fb0
- (void)subscribeStreamsProtocol:(id)arg1 didFindTemporarilyUnavailableSubscriptionForPersonID:(id)arg2;	// IMP=0x0000000000014eaf
- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;	// IMP=0x0000000000014e9a
- (void)_didReceiveAuthenticationError:(id)arg1;	// IMP=0x0000000000014cf8
- (void)subscribeStreamsProtocol:(id)arg1 didFinishError:(id)arg2;	// IMP=0x0000000000014962
- (void)subscribeStreamsProtocol:(id)arg1 didFindDisappearedSubscriptionForPersonID:(id)arg2;	// IMP=0x00000000000147fb
- (void)subscribeStreamsProtocol:(id)arg1 didFinishReceivingUpdatesForPersonID:(id)arg2 ctag:(id)arg3;	// IMP=0x0000000000014469
- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAssetCollections:(id)arg2 forPersonID:(id)arg3;	// IMP=0x0000000000014025
- (void)subscribeStreamsProtocol:(id)arg1 willReceiveUpdatesForPersonID:(id)arg2 wasReset:(_Bool)arg3 metadata:(id)arg4;	// IMP=0x0000000000013c80
- (void)_didFinishRetrievingSubscriptionUpdate;	// IMP=0x0000000000013b60
- (void)_checkForNewAssetCollections;	// IMP=0x0000000000013857
- (void)checkForNewAssetCollections;	// IMP=0x000000000001366a
- (void)checkForNewAssetCollectionsIfMissingCtag;	// IMP=0x000000000001341b
- (_Bool)_isAllowedToDownload;	// IMP=0x0000000000013227
- (void)resetSync;	// IMP=0x00000000000130f6
- (void)_setSubscriptionsByStreamID:(id)arg1;	// IMP=0x0000000000013070
- (id)_subscriptionsByStreamID;	// IMP=0x0000000000012fc9
- (void)_setHasOutstandingPoll:(_Bool)arg1;	// IMP=0x0000000000012e56
- (_Bool)_hasOutstandingPoll;	// IMP=0x0000000000012de1
- (void)_updateMasterManifest;	// IMP=0x0000000000012d03
- (void)_serverSideConfigurationDidChange:(id)arg1;	// IMP=0x0000000000012ae1
- (void)_refreshServerSideConfigurationParameters;	// IMP=0x00000000000129cb
- (void)_changeRetrievalStateTo:(int)arg1;	// IMP=0x000000000001287a
- (void)_changeStateTo:(int)arg1;	// IMP=0x0000000000012729
- (void)dealloc;	// IMP=0x00000000000126eb
- (void)deactivate;	// IMP=0x00000000000125b7
- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;	// IMP=0x0000000000012396
- (id)ownSubscribedStream;	// IMP=0x0000000000012316
- (id)subscribedStreams;	// IMP=0x0000000000012132

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

