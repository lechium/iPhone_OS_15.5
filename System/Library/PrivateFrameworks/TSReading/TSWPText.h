//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/TSWPColumnMetrics-Protocol.h>
#import <TSReading/TSWPLayoutOwner-Protocol.h>
#import <TSReading/TSWPLayoutTarget-Protocol.h>

@class NSMutableArray, NSString, TSDCanvas, TSDLayout, TSPObject, TSUColor, TSWPColumnStyle, TSWPListStyle, TSWPPadding, TSWPParagraphStyle, TSWPStorage;
@protocol TSDHint, TSWPFootnoteHeightMeasurer, TSWPFootnoteMarkProvider, TSWPOffscreenColumn, TSWPStyleProvider, TSWPTextDelegate;

@interface TSWPText : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPParagraphStyle *_paragraphStyle;	// 8 = 0x8
    TSWPListStyle *_listStyle;	// 16 = 0x10
    TSWPColumnStyle *_columnStyle;	// 24 = 0x18
    TSUColor *_textColorOverride;	// 32 = 0x20
    TSWPStorage *_storage;	// 40 = 0x28
    NSMutableArray *_columns;	// 48 = 0x30
    struct CGSize _minSize;	// 56 = 0x38
    struct CGSize _maxSize;	// 72 = 0x48
    unsigned long long _pageNumber;	// 88 = 0x58
    unsigned long long _pageCount;	// 96 = 0x60
    int _flags;	// 104 = 0x68
    struct CGPoint _anchor;	// 112 = 0x70
    unsigned int _naturalAlignment;	// 128 = 0x80
    int _naturalDirection;	// 132 = 0x84
    NSObject<TSWPTextDelegate> *_delegate;	// 136 = 0x88
    _Bool _allowsLastLineTruncation;	// 144 = 0x90
    unsigned int _maxLineCount;	// 148 = 0x94
    id <TSWPStyleProvider> _styleProvider;	// 152 = 0x98
    double _reservedWidthWhenTruncating;	// 160 = 0xa0
}

+ (void)renderColumns:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(_Bool)arg4 viewScale:(double)arg5;	// IMP=0x00000000002b68da
+ (void)renderColumn:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(_Bool)arg4 viewScale:(double)arg5;	// IMP=0x00000000002b66cb
@property(nonatomic) double reservedWidthWhenTruncating; // @synthesize reservedWidthWhenTruncating=_reservedWidthWhenTruncating;
@property(nonatomic) _Bool allowsLastLineTruncation; // @synthesize allowsLastLineTruncation=_allowsLastLineTruncation;
@property(nonatomic) unsigned int maxLineCount; // @synthesize maxLineCount=_maxLineCount;
@property(retain, nonatomic) TSUColor *textColorOverride; // @synthesize textColorOverride=_textColorOverride;
@property(readonly, nonatomic) int naturalDirection; // @synthesize naturalDirection=_naturalDirection;
@property(readonly, nonatomic) unsigned int naturalAlignment; // @synthesize naturalAlignment=_naturalAlignment;
@property(retain, nonatomic) id <TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(nonatomic) NSObject<TSWPTextDelegate> *delegate; // @synthesize delegate=_delegate;
- (_Bool)forceWesternLineBreaking;	// IMP=0x00000000002b7179
- (id)lineHintsForTarget:(id)arg1;	// IMP=0x00000000002b7171
- (id)textWrapper;	// IMP=0x00000000002b7169
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;	// IMP=0x00000000002b7163
- (void)layoutManagerNeedsLayout:(id)arg1;	// IMP=0x00000000002b715d
- (_Bool)caresAboutStorageChanges;	// IMP=0x00000000002b7155
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)adjustColumnOriginForAlignment;	// IMP=0x00000000002b70e8
- (_Bool)isLayoutOffscreen;	// IMP=0x00000000002b70e0
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;	// IMP=0x00000000002b7079
- (void)addAttachmentLayout:(id)arg1;	// IMP=0x00000000002b6ff4
- (id)currentInlineDrawableLayouts;	// IMP=0x00000000002b6fec
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;	// IMP=0x00000000002b6fe4
- (_Bool)shouldPositionAttachmentsIteratively;	// IMP=0x00000000002b6fdc
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;	// IMP=0x00000000002b6f57
- (id)layoutForInlineDrawable:(id)arg1;	// IMP=0x00000000002b6f4f
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;	// IMP=0x00000000002b6f31
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;	// IMP=0x00000000002b6f2b
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) unsigned int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;	// IMP=0x00000000002b6d91
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const void *nextTargetTopicNumbers;
@property(readonly, nonatomic) const void *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;	// IMP=0x00000000002b6d50
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;	// IMP=0x00000000002b6b6d
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;	// IMP=0x00000000002b6b57
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;	// IMP=0x00000000002b6b41
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (void)drawText:(id)arg1 inContext:(struct CGContext *)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6 viewScale:(double)arg7;	// IMP=0x00000000002b6a1d
- (void)drawColumn:(id)arg1 inContext:(struct CGContext *)arg2 isFlipped:(_Bool)arg3 viewScale:(double)arg4;	// IMP=0x00000000002b66ae
- (void)drawColumn:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(_Bool)arg4 viewScale:(double)arg5;	// IMP=0x00000000002b648c
- (struct CGSize)measureStorage:(id)arg1;	// IMP=0x00000000002b640d
- (struct CGSize)measureText:(id)arg1;	// IMP=0x00000000002b638e
- (id)layoutText:(id)arg1 kind:(int)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6;	// IMP=0x00000000002b5f71
- (id)layoutText:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;	// IMP=0x00000000002b5f54
- (id)layoutMultiColumnTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 pageNumber:(unsigned long long)arg5 pageCount:(unsigned long long)arg6 flags:(int)arg7;	// IMP=0x00000000002b5cb9
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 pageNumber:(unsigned long long)arg5 pageCount:(unsigned long long)arg6 flags:(int)arg7;	// IMP=0x00000000002b5bed
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;	// IMP=0x00000000002b5bc8
- (void)dealloc;	// IMP=0x00000000002b5b32
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2;	// IMP=0x00000000002b5b0a
- (id)initWithParagraphStyle:(id)arg1;	// IMP=0x00000000002b5ae0
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2;	// IMP=0x00000000002b5ab6
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3;	// IMP=0x00000000002b5a91
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2 alignmentForNaturalAlignment:(unsigned int)arg3 naturalDirection:(int)arg4;	// IMP=0x00000000002b5a67
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3 alignmentForNaturalAlignment:(unsigned int)arg4 naturalDirection:(int)arg5;	// IMP=0x00000000002b598a

// Remaining properties
@property(readonly, nonatomic) _Bool allowsDescendersToClip;
@property(readonly, nonatomic) _Bool alwaysAllowWordSplit;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool ignoresEquationAlignment;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool pushAscendersIntoColumn;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

