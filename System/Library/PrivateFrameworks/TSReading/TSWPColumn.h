//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/TSWPOffscreenColumn-Protocol.h>

@class NSString, TSWPStorage;
@protocol TSWPStyleProvider;

@interface TSWPColumn : NSObject <TSWPOffscreenColumn>
{
    TSWPStorage *_storage;	// 8 = 0x8
    struct CGRect _frameBounds;	// 16 = 0x10
    struct CGAffineTransform _transform;	// 48 = 0x30
    unsigned long long _startCharIndex;	// 96 = 0x60
    unsigned long long _characterCount;	// 104 = 0x68
    unsigned long long _startAnchoredCharIndex;	// 112 = 0x70
    unsigned long long _anchoredCharCount;	// 120 = 0x78
    unsigned long long _nextWidowPullsDownFromCharIndex;	// 128 = 0x80
    double _contentBottom;	// 136 = 0x88
    double _erasableContentBottom;	// 144 = 0x90
    int _layoutResultFlags;	// 152 = 0x98
    unsigned long long _columnIndex;	// 160 = 0xa0
    unsigned long long _pageNumber;	// 168 = 0xa8
    unsigned long long _scaleTextPercent;	// 176 = 0xb0
    id <TSWPStyleProvider> _styleProvider;	// 184 = 0xb8
    struct shared_ptr<TSWPLineFragmentArray> _lineFragmentArray;	// 192 = 0xc0
    void *_paragraphAdornments;	// 208 = 0xd0
    _Bool _textIsVertical;	// 216 = 0xd8
}

+ (struct CGColor *)computeSingleColorWithColumns:(id)arg1;	// IMP=0x00000000002c8bf7
+ (id)columnForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 withColumns:(id)arg3;	// IMP=0x00000000002c136a
+ (struct CGRect)boundsRectForSelection:(id)arg1 columnArray:(id)arg2 includeRuby:(_Bool)arg3;	// IMP=0x00000000002c1025
+ (id)pathForHighlightWithRange:(struct _NSRange)arg1 columnArray:(id)arg2 pathStyle:(int)arg3;	// IMP=0x00000000002c0c55
+ (id)footnoteReferenceAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00000000002c0b36
+ (id)footnoteMarkAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00000000002c0a16
+ (id)smartFieldWithAttributeKind:(unsigned int)arg1 inColumnArray:(id)arg2 atPoint:(struct CGPoint)arg3;	// IMP=0x00000000002c092b
+ (unsigned long long)charIndexForTopicDragAtPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2;	// IMP=0x00000000002c0225
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7;	// IMP=0x00000000002c0152
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;	// IMP=0x00000000002c012e
+ (id)closestColumnInColumnsArray:(id)arg1 forPoint:(struct CGPoint)arg2 ignoreEmptyColumns:(_Bool)arg3 ignoreDrawableOnlyColumns:(_Bool)arg4;	// IMP=0x00000000002bfe42
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2 useParagraphModeRects:(_Bool)arg3;	// IMP=0x00000000002bf6b6
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2;	// IMP=0x00000000002bf67d
+ (struct CGRect)caretRectForInsertionPoint:(id)arg1 withColumns:(id)arg2;	// IMP=0x00000000002bf410
- (id).cxx_construct;	// IMP=0x00000000002c902b
- (void).cxx_destruct;	// IMP=0x00000000002c901a
@property(nonatomic) _Bool textIsVertical; // @synthesize textIsVertical=_textIsVertical;
@property(retain, nonatomic) id <TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) unsigned long long scaleTextPercent; // @synthesize scaleTextPercent=_scaleTextPercent;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(nonatomic) unsigned long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) int layoutResultFlags; // @synthesize layoutResultFlags=_layoutResultFlags;
@property(nonatomic) double erasableContentBottom; // @synthesize erasableContentBottom=_erasableContentBottom;
@property(nonatomic) double contentBottom; // @synthesize contentBottom=_contentBottom;
@property(nonatomic) unsigned long long nextWidowPullsDownFromCharIndex; // @synthesize nextWidowPullsDownFromCharIndex=_nextWidowPullsDownFromCharIndex;
@property(nonatomic) unsigned long long anchoredCharCount; // @synthesize anchoredCharCount=_anchoredCharCount;
@property(nonatomic) unsigned long long startAnchoredCharIndex; // @synthesize startAnchoredCharIndex=_startAnchoredCharIndex;
@property(nonatomic) unsigned long long characterCount; // @synthesize characterCount=_characterCount;
@property(nonatomic) unsigned long long startCharIndex; // @synthesize startCharIndex=_startCharIndex;
@property(nonatomic) struct CGAffineTransform transformFromWP; // @synthesize transformFromWP=_transform;
@property(nonatomic) struct CGRect wpBounds; // @synthesize wpBounds=_frameBounds;
@property(readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (_Bool)onlyHasAnchoredDrawable;	// IMP=0x00000000002c8bb6
- (id)singleLinePartitionedInfoAtStart:(_Bool)arg1;	// IMP=0x00000000002c8b41
- (id)partitionedLayoutForInfo:(id)arg1;	// IMP=0x00000000002c8add
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(unsigned int)arg2;	// IMP=0x00000000002c8a9a
- (void)renderWithRenderer:(id)arg1 currentSelection:(id)arg2 limitSelection:(id)arg3 listRange:(struct _NSRange)arg4 rubyGlyphRange:(struct _NSRange)arg5 isCanvasInteractive:(_Bool)arg6 spellChecker:(id)arg7 suppressedMisspellingRange:(struct _NSRange)arg8 blackAndWhite:(_Bool)arg9 dictationInterpretations:(const void *)arg10 autocorrections:(const void *)arg11 markedRange:(struct _NSRange)arg12 markedText:(id)arg13 renderMode:(int)arg14 pageCount:(unsigned long long)arg15 suppressInvisibles:(_Bool)arg16 currentCanvasSelection:(id)arg17;	// IMP=0x00000000002c82ec
- (void)renderWithRenderer:(id)arg1 pageCount:(unsigned long long)arg2;	// IMP=0x00000000002c8233
- (struct _TSWPCharIndexAndPosition)calcAttachmentPositionForDrawable:(id)arg1 atPoint:(struct CGPoint)arg2 inTextLayoutTarget:(id)arg3 tlBoundsInfluencingWrap:(struct CGPoint)arg4 wrapOutset:(struct CGSize)arg5 wrapMargin:(double)arg6 makeInline:(_Bool)arg7;	// IMP=0x00000000002c7c96
- (unsigned long long)charIndexFromWPPoint:(struct CGPoint)arg1 pastCenterGoesToNextChar:(_Bool)arg2 allowNotFound:(_Bool)arg3 outFragment:(const struct TSWPLineFragment **)arg4 leadingEdge:(_Bool *)arg5;	// IMP=0x00000000002c7841
- (unsigned long long)charIndexForSelectionFromPoint:(struct CGPoint)arg1 isTail:(_Bool)arg2;	// IMP=0x00000000002c725b
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 outFragment:(const struct TSWPLineFragment **)arg6 leadingEdge:(_Bool *)arg7;	// IMP=0x00000000002c7000
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;	// IMP=0x00000000002c6fe4
- (id)drawableIntersectionRectsForSelection:(id)arg1 inTarget:(id)arg2;	// IMP=0x00000000002c6936
- (struct CGRect)erasableRectForSelectionRange:(struct _NSRange)arg1;	// IMP=0x00000000002c685c
- (id)rectsForSelection:(id)arg1 ranges:(id *)arg2;	// IMP=0x00000000002c67e6
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7;	// IMP=0x00000000002c6796
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3 includeRuby:(_Bool)arg4;	// IMP=0x00000000002c674f
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3;	// IMP=0x00000000002c6710
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2;	// IMP=0x00000000002c66fb
- (id)rectsForSelectionRanges:(id)arg1 selectionType:(int)arg2;	// IMP=0x00000000002c6515
- (id)pMutableRectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7 inranges:(id)arg8 outranges:(id *)arg9;	// IMP=0x00000000002c51d0
- (const void *)pColumnEndingPartitionedLineFragmentInSelectionRange:(struct _NSRange)arg1;	// IMP=0x00000000002c5160
- (id)rectsForSelectionRange:(struct _NSRange)arg1;	// IMP=0x00000000002c514b
- (id)rectsForSelection:(id)arg1;	// IMP=0x00000000002c5069
- (struct CGRect)firstRectForSelection:(id)arg1 includeSpaceAfter:(_Bool)arg2 includeSpaceBefore:(_Bool)arg3 includeLeading:(_Bool)arg4;	// IMP=0x00000000002c4f61
- (id)lineSelectionsForSelection:(id)arg1;	// IMP=0x00000000002c4d4d
@property(readonly, nonatomic) struct CGRect typographicBoundsForCell;
@property(readonly, nonatomic) struct CGRect typographicBounds;
- (double)topOfLineAtCharIndex:(unsigned long long)arg1;	// IMP=0x00000000002c47ae
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;	// IMP=0x00000000002c45c5
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;	// IMP=0x00000000002c456b
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;	// IMP=0x00000000002c44ed
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;	// IMP=0x00000000002c3947
- (struct CGRect)caretRectForSelection:(id)arg1;	// IMP=0x00000000002c322d
- (unsigned long long)lineIndexForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2;	// IMP=0x00000000002c305e
- (const void *)lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(int)arg3;	// IMP=0x00000000002c2e89
- (const void *)lineFragmentClosestToPoint:(struct CGPoint)arg1 knobTag:(unsigned long long)arg2;	// IMP=0x00000000002c2d28
- (double)horizontalOffsetForCharIndex:(unsigned long long)arg1 lineFragmentIndex:(unsigned long long)arg2 bumpPastHyphen:(_Bool)arg3 allowPastLineBounds:(_Bool)arg4;	// IMP=0x00000000002c2ce8
- (CDStruct_50f584da)lineMetricsAtCharIndex:(unsigned long long)arg1 allowEndOfLine:(_Bool)arg2;	// IMP=0x00000000002c2a4e
- (double)baselineOfLineFragmentAtCharIndex:(unsigned long long)arg1;	// IMP=0x00000000002c2a10
- (double)baselineOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c29f1
- (CDStruct_7660b417)heightInfoOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c29a7
- (unsigned long long)truncatedCharIndexForLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c298b
- (struct _NSRange)rangeOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c296c
- (_Bool)isDropCapFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c2950
- (_Bool)isEmptyLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c2933
- (_Bool)isTruncatedLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c2918
- (double)typographicGlyphExtentOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c28fb
- (struct CGRect)labelBoundsOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c28ce
- (struct CGRect)typographicBoundsOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c279b
- (struct CGRect)boundsOfLineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c276a
- (void)makeEmpty:(unsigned long long)arg1 layoutResultFlags:(int)arg2;	// IMP=0x00000000002c2716
- (unsigned long long)lineFragmentCountForBaseline:(double)arg1;	// IMP=0x00000000002c2705
- (void)offsetLineFragmentsByPoint:(struct CGPoint)arg1;	// IMP=0x00000000002c26b4
- (void)normalizeLineFragmentOrigins:(struct CGPoint)arg1;	// IMP=0x00000000002c2639
- (const void *)lineFragmentAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c2625
- (void)setLineFragmentArray:(const void *)arg1;	// IMP=0x00000000002c25c4
- (const void *)lineFragmentArray;	// IMP=0x00000000002c25b7
- (double)topOfCapForLogicalLineIndex:(unsigned long long)arg1;	// IMP=0x00000000002c25a3
- (struct _NSRange)lineFragmentRangeForLogicalLineIndex:(unsigned long long)arg1;	// IMP=0x00000000002c258f
- (unsigned long long)logicalLineCount;	// IMP=0x00000000002c257e
@property(readonly, nonatomic) unsigned long long countLines;
@property(readonly, nonatomic) struct CGAffineTransform transformToWP;
@property(readonly, nonatomic) struct CGRect frameBounds;
- (void)clearAdornments;	// IMP=0x00000000002c24e0
- (void)addAdornmentRect:(const struct TSWPAdornmentRect *)arg1;	// IMP=0x00000000002c24b9
- (_Bool)requiresGlyphVectorsForHeightMeasurement;	// IMP=0x00000000002c2438
- (double)textHeight;	// IMP=0x00000000002c23f1
@property(readonly, nonatomic) double textBottom;
- (struct CGRect)erasableBounds:(unsigned int)arg1;	// IMP=0x00000000002c22d0
- (double)minimumHeightForLayoutOnPage;	// IMP=0x00000000002c2205
- (void)trimFromCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 layoutChore:(void *)arg3;	// IMP=0x00000000002c1e6b
- (double)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2;	// IMP=0x00000000002c1b15
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 removeAutoNumberFootnoteCount:(unsigned long long)arg3;	// IMP=0x00000000002c1b03
- (struct CGSize)maxSize;	// IMP=0x00000000002c1af3
- (void)setStorage:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x00000000002c1a1e
- (void)incrementRanges:(long long)arg1;	// IMP=0x00000000002c18d1
@property(nonatomic) struct _NSRange anchoredRange;
@property(nonatomic) struct _NSRange range;
- (double)logicalBoundsBottom;	// IMP=0x00000000002c1817
- (double)logicalBoundsTop;	// IMP=0x00000000002c17f3
- (void)dealloc;	// IMP=0x00000000002c16fe
- (id)initWithStorage:(id)arg1 frameBounds:(struct CGRect)arg2;	// IMP=0x00000000002c15c6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

