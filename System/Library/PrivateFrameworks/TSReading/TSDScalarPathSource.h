//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSReading/TSDMixing-Protocol.h>
#import <TSReading/TSDSmartPathSource-Protocol.h>

@interface TSDScalarPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;	// 12 = 0xc
    double mScalar;	// 16 = 0x10
    struct CGSize mNaturalSize;	// 24 = 0x18
}

+ (id)pathSourceWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;	// IMP=0x0000000000114548
+ (id)chevronWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;	// IMP=0x00000000001144f4
+ (id)regularPolygonWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;	// IMP=0x00000000001144a0
+ (id)roundedRectangleWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;	// IMP=0x000000000011444f
+ (id)rectangleWithNaturalSize:(struct CGSize)arg1;	// IMP=0x000000000011442d
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property(nonatomic) double scalar; // @synthesize scalar=mScalar;
@property(nonatomic) int type; // @synthesize type=mType;
- (struct CGPoint)p_getControlKnobPointForChevron;	// IMP=0x0000000000115b42
- (void)p_setControlKnobPointForChevron:(struct CGPoint)arg1;	// IMP=0x0000000000115aed
- (struct CGPoint)p_getControlKnobPointForRegularPolygon;	// IMP=0x00000000001159d3
- (void)p_setControlKnobPointForRegularPolygon:(struct CGPoint)arg1;	// IMP=0x0000000000115828
- (struct CGPoint)p_getControlKnobPointForRoundedRect;	// IMP=0x0000000000115766
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;	// IMP=0x00000000001156bf
- (struct CGPath *)p_newChevronPath;	// IMP=0x000000000011554c
- (struct CGPath *)p_newRegularPolygonPath;	// IMP=0x00000000001153ac
- (struct CGPath *)p_newRoundedRectPath;	// IMP=0x00000000001152a8
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;	// IMP=0x0000000000115162
- (long long)mixingTypeWithObject:(id)arg1;	// IMP=0x0000000000114f4e
- (struct CGSize)scaleFactorForInscribedRectangle;	// IMP=0x0000000000114e22
- (_Bool)isCircular;	// IMP=0x0000000000114e1a
- (_Bool)isRectangular;	// IMP=0x0000000000114dd4
- (id)bezierPathWithoutFlips;	// IMP=0x0000000000114d6e
- (id)valueForSetSelector:(SEL)arg1;	// IMP=0x0000000000114cfd
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;	// IMP=0x0000000000114bcf
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;	// IMP=0x0000000000114b27
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0000000000114acf
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;	// IMP=0x0000000000114a70
@property(readonly) unsigned long long numberOfControlKnobs;
@property(readonly, nonatomic) double maxScalar;
- (void)setScalarValue:(id)arg1;	// IMP=0x000000000011495f
- (void)scaleToNaturalSize:(struct CGSize)arg1;	// IMP=0x00000000001148ea
- (id)description;	// IMP=0x000000000011481f
- (unsigned long long)hash;	// IMP=0x00000000001147fd
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000001146f0
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000011465a
- (id)init;	// IMP=0x0000000000114633
- (id)initWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;	// IMP=0x000000000011459d

@end

