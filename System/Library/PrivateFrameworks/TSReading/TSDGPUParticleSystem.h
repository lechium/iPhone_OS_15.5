//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/TSDMTLParticleSystem-Protocol.h>

@class NSArray, NSMutableSet, NSString, TSDGPUDataBuffer, TSDGPUDataBufferAttribute, TSDMetalContext;
@protocol MTLTexture;

@interface TSDGPUParticleSystem : NSObject <TSDMTLParticleSystem>
{
    _Bool *_visibilities;	// 8 = 0x8
    _Bool _isInitialized;	// 16 = 0x10
    _Bool _isDataBufferInitialized;	// 17 = 0x11
    unsigned long long _textureCount;	// 24 = 0x18
    _Bool _hasParticleTexture;	// 32 = 0x20
    NSMutableSet *_attributesInShader;	// 40 = 0x28
    _Bool _shouldDraw;	// 48 = 0x30
    id _randomGenerator;	// 56 = 0x38
    TSDMetalContext *_metalContext;	// 64 = 0x40
    id <MTLTexture> _vertexColorTexture;	// 72 = 0x48
    unsigned long long _particleCount;	// 80 = 0x50
    unsigned long long _visibleParticleCount;	// 88 = 0x58
    unsigned long long _particlesWide;	// 96 = 0x60
    unsigned long long _particlesHigh;	// 104 = 0x68
    double _duration;	// 112 = 0x70
    unsigned long long _direction;	// 120 = 0x78
    TSDGPUDataBufferAttribute *_positionAttribute;	// 128 = 0x80
    TSDGPUDataBufferAttribute *_centerAttribute;	// 136 = 0x88
    TSDGPUDataBufferAttribute *_texCoordAttribute;	// 144 = 0x90
    TSDGPUDataBufferAttribute *_particleTexCoordAttribute;	// 152 = 0x98
    TSDGPUDataBufferAttribute *_colorAttribute;	// 160 = 0xa0
    TSDGPUDataBufferAttribute *_lifeSpanAttribute;	// 168 = 0xa8
    TSDGPUDataBufferAttribute *_speedAttribute;	// 176 = 0xb0
    TSDGPUDataBufferAttribute *_rotationAttribute;	// 184 = 0xb8
    TSDGPUDataBufferAttribute *_scaleAttribute;	// 192 = 0xc0
    TSDGPUDataBufferAttribute *_colorTexCoordAttribute;	// 200 = 0xc8
    TSDGPUDataBuffer *_dataBuffer;	// 208 = 0xd0
    struct CGSize _vertexTextureSize;	// 216 = 0xd8
    struct CGSize _particleSize;	// 232 = 0xe8
    struct CGSize _objectSize;	// 248 = 0xf8
    struct CGSize _slideSize;	// 264 = 0x108
}

+ (_Bool)willOverrideColorTexCoords;	// IMP=0x0000000000215a69
+ (_Bool)willOverrideVisibilities;	// IMP=0x00000000002159dc
+ (_Bool)shouldDrawInvisibleParticles;	// IMP=0x00000000002159d4
+ (_Bool)willOverrideColors;	// IMP=0x00000000002158cf
+ (_Bool)willOverrideStartingPoints;	// IMP=0x000000000021545f
+ (_Bool)willOverrideGeometry;	// IMP=0x000000000021533b
+ (unsigned long long)numberOfVerticesPerParticle;	// IMP=0x0000000000215330
+ (id)newParticleSystemWithParticleSize:(struct CGSize)arg1 particleSystemSize:(struct CGSize)arg2 objectSize:(struct CGSize)arg3 slideSize:(struct CGSize)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 randomGenerator:(id)arg7 shader:(id)arg8 metalContext:(id)arg9;	// IMP=0x0000000000214748
+ (id)newParticleSystemWithNumberOfParticles:(unsigned long long)arg1 objectSize:(struct CGSize)arg2 slideSize:(struct CGSize)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 randomGenerator:(id)arg6 shader:(id)arg7 metalContext:(id)arg8;	// IMP=0x00000000002145c4
+ (id)newDataBufferAttributeWithName:(id)arg1;	// IMP=0x00000000002145bc
+ (struct CGSize)p_particleSystemSizeWithRequestedNumber:(unsigned long long)arg1 objectSize:(struct CGSize)arg2;	// IMP=0x0000000000218e00
@property(readonly, nonatomic) _Bool shouldDraw; // @synthesize shouldDraw=_shouldDraw;
@property(readonly, nonatomic) TSDGPUDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *colorTexCoordAttribute; // @synthesize colorTexCoordAttribute=_colorTexCoordAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *scaleAttribute; // @synthesize scaleAttribute=_scaleAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *rotationAttribute; // @synthesize rotationAttribute=_rotationAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *speedAttribute; // @synthesize speedAttribute=_speedAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *lifeSpanAttribute; // @synthesize lifeSpanAttribute=_lifeSpanAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *colorAttribute; // @synthesize colorAttribute=_colorAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *particleTexCoordAttribute; // @synthesize particleTexCoordAttribute=_particleTexCoordAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *texCoordAttribute; // @synthesize texCoordAttribute=_texCoordAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *centerAttribute; // @synthesize centerAttribute=_centerAttribute;
@property(readonly, nonatomic) TSDGPUDataBufferAttribute *positionAttribute; // @synthesize positionAttribute=_positionAttribute;
@property(readonly, nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) struct CGSize slideSize; // @synthesize slideSize=_slideSize;
@property(readonly, nonatomic) struct CGSize objectSize; // @synthesize objectSize=_objectSize;
@property(readonly, nonatomic) struct CGSize particleSize; // @synthesize particleSize=_particleSize;
@property(readonly, nonatomic) unsigned long long particlesHigh; // @synthesize particlesHigh=_particlesHigh;
@property(readonly, nonatomic) unsigned long long particlesWide; // @synthesize particlesWide=_particlesWide;
@property(readonly, nonatomic) unsigned long long visibleParticleCount; // @synthesize visibleParticleCount=_visibleParticleCount;
@property(readonly, nonatomic) unsigned long long particleCount; // @synthesize particleCount=_particleCount;
@property(readonly, nonatomic) struct CGSize vertexTextureSize; // @synthesize vertexTextureSize=_vertexTextureSize;
@property(readonly, nonatomic) id <MTLTexture> vertexColorTexture; // @synthesize vertexColorTexture=_vertexColorTexture;
@property(readonly, nonatomic) TSDMetalContext *metalContext; // @synthesize metalContext=_metalContext;
- (void)drawMetalWithEncoder:(id)arg1;	// IMP=0x0000000000215e1e
- (void)setupMetalWithShader:(id)arg1;	// IMP=0x0000000000215aff
- (CDStruct_6e3f967a)colorTexCoordAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x0000000000215a71
- (_Bool)visibilityAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x00000000002159e4
- (CDStruct_83984b6f)colorAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x00000000002158d7
- (CDStruct_6e3f967a)lifeSpanAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x0000000000215845
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x00000000002157bc
- (double)rotationMax;	// IMP=0x0000000000215731
- (CDStruct_869f9c67)rotationAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x0000000000215646
- (double)speedMax;	// IMP=0x00000000002155bb
- (CDStruct_869f9c67)speedAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x00000000002154fa
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x0000000000215467
- (CDStruct_6e3f967a)centerAtIndexPoint:(struct CGPoint)arg1;	// IMP=0x00000000002153d1
- (CDStruct_6e3f967a)vertexPositionAtVertexIndex:(unsigned long long)arg1 particleIndexPoint:(struct CGPoint)arg2;	// IMP=0x0000000000215343
- (struct CGContext *)newContextFromTexture:(id)arg1;	// IMP=0x0000000000215244
@property(readonly, nonatomic) NSArray *dataBufferAttributes;
- (struct CGPoint)indexPointFromIndex:(unsigned long long)arg1;	// IMP=0x00000000002150a5
- (unsigned long long)indexFromPoint:(struct CGPoint)arg1;	// IMP=0x000000000021503e
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id randomGenerator; // @synthesize randomGenerator=_randomGenerator;
- (void)setupWithTexture:(id)arg1 particleTextureSize:(struct CGSize)arg2 reverseDrawOrder:(_Bool)arg3 capabilities:(id)arg4;	// IMP=0x0000000000214dbd
- (void)setupWithTexture:(id)arg1 particleTextureSize:(struct CGSize)arg2 reverseDrawOrder:(_Bool)arg3;	// IMP=0x0000000000214da5
- (void)p_setupParticleSystemWithParticleSize:(struct CGSize)arg1 particleSystemSize:(struct CGSize)arg2 objectSize:(struct CGSize)arg3 slideSize:(struct CGSize)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 randomGenerator:(id)arg7;	// IMP=0x0000000000214b7e
- (void)dealloc;	// IMP=0x0000000000214a07
- (id)initWithParticleSize:(struct CGSize)arg1 particleSystemSize:(struct CGSize)arg2 objectSize:(struct CGSize)arg3 slideSize:(struct CGSize)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 randomGenerator:(id)arg7 shader:(id)arg8 metalContext:(id)arg9;	// IMP=0x00000000002147e4
- (void)p_logParticleInformation;	// IMP=0x00000000002191cc
- (void)p_reverseParticleDataDrawOrder;	// IMP=0x0000000000218d61
- (struct CGSize)p_resizeSystemToFitWithinMaxVerticesWithSystemSize:(struct CGSize)arg1;	// IMP=0x0000000000218ca9
- (void)p_setupVertexData;	// IMP=0x000000000021896a
- (void)p_setupParticleDataWithTexture:(id)arg1;	// IMP=0x0000000000216776
- (void)p_setupDataBufferWithParticleCount:(unsigned long long)arg1 visibleParticleCount:(unsigned long long)arg2;	// IMP=0x0000000000216427
- (void)p_setDataBufferAttribute:(id *)arg1 withName:(id)arg2 defaultDataType:(long long)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;	// IMP=0x0000000000216377
- (void)p_setupParticleTextureDataWithTexture:(id)arg1 capabilities:(id)arg2;	// IMP=0x0000000000215ff2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

