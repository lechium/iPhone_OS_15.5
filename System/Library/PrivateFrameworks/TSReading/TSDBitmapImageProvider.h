//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject;
@protocol OS_dispatch_semaphore;

@interface TSDBitmapImageProvider
{
    struct CGImageSource *mImageSource;	// 40 = 0x28
    struct CGImage *mImage;	// 48 = 0x30
    unsigned long long mImageGamut;	// 56 = 0x38
    struct CGSize mNaturalSize;	// 64 = 0x40
    long long mOrientation;	// 80 = 0x50
    _Bool mIsOpaque;	// 88 = 0x58
    _Bool mIsValid;	// 89 = 0x59
    unsigned long long mDPI;	// 96 = 0x60
    NSObject<OS_dispatch_semaphore> *mImageLock;	// 104 = 0x68
    long long mCheckIfValidToken;	// 112 = 0x70
    struct CGImage *mHalfSizeImage;	// 120 = 0x78
    struct CGImage *mQuarterSizeImage;	// 128 = 0x80
}

+ (struct CGImageSource *)p_newImageSourceFromFilePath:(id)arg1;	// IMP=0x000000000018d8d5
+ (struct CGImageSource *)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2;	// IMP=0x000000000018d812
+ (void)clearCacheForData:(id)arg1;	// IMP=0x000000000018d6e7
+ (id)p_cacheStringForData:(id)arg1;	// IMP=0x000000000018d6df
+ (void)initialize;	// IMP=0x000000000018c362
+ (struct CGSize)naturalSizeForImageData:(id)arg1;	// IMP=0x000000000018c2dc
+ (id)TSUImageForImageData:(id)arg1;	// IMP=0x000000000018c2aa
+ (struct CGImageSource *)temporaryCGImageSourceForImageData:(id)arg1;	// IMP=0x000000000018c23a
+ (struct CGImage *)temporaryCGImageForImageData:(id)arg1;	// IMP=0x000000000018c1ca
+ (struct CGImage *)CGImageForImageData:(id)arg1;	// IMP=0x000000000018c15d
- (struct CGImageSource *)CGImageSource;	// IMP=0x000000000018dcf1
- (struct CGImageSource *)p_newImageOfSize:(struct CGSize)arg1 andWriteToCacheWithSuffix:(id)arg2;	// IMP=0x000000000018d9a3
- (struct CGImageSource *)p_newCGImageSourceForTemporaryUse;	// IMP=0x000000000018d968
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource *)arg1 andImage:(struct CGImage *)arg2;	// IMP=0x000000000018d4d8
- (struct CGImage *)p_newImageFromSource:(struct CGImageSource *)arg1;	// IMP=0x000000000018d46c
- (struct CGImageSource *)p_newCGImageSource;	// IMP=0x000000000018d441
- (void)p_loadSourceRefIfNecessary;	// IMP=0x000000000018d385
- (void)p_loadFullSizedImageIfNecessary;	// IMP=0x000000000018d277
- (void)p_loadImageMetadata;	// IMP=0x000000000018d265
- (void)flush;	// IMP=0x000000000018d1a3
- (_Bool)hasFlushableContent;	// IMP=0x000000000018d162
- (struct CGSize)dpiAdjustedNaturalSize;	// IMP=0x000000000018d067
- (struct CGSize)dpiAdjustedFillSize;	// IMP=0x000000000018cfef
- (unsigned long long)imageDPI;	// IMP=0x000000000018cf47
- (unsigned long long)imageGamut;	// IMP=0x000000000018cedb
- (_Bool)isOpaque;	// IMP=0x000000000018ceb4
- (long long)orientation;	// IMP=0x000000000018ce8c
- (struct CGImage *)p_resampledImageOfSizeType:(int)arg1;	// IMP=0x000000000018cd34
- (struct CGImage *)p_loadOrCreateResampledImageWithScale:(unsigned long long)arg1 andCGImage:(struct CGImage **)arg2;	// IMP=0x000000000018cbcf
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 lowQuality:(_Bool)arg2;	// IMP=0x000000000018ca81
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;	// IMP=0x000000000018c7d5
- (struct CGImage *)CGImageForNaturalSize;	// IMP=0x000000000018c7ad
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;	// IMP=0x000000000018c5ed
- (_Bool)isValid;	// IMP=0x000000000018c4f8
- (struct CGSize)naturalSize;	// IMP=0x000000000018c4c9
- (void)dealloc;	// IMP=0x000000000018c43e
- (void)i_commonInit;	// IMP=0x000000000018c368

@end

