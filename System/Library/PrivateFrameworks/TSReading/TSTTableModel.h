//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSString, TSDFill, TSDStroke, TSKDocumentRoot, TSTCell, TSTCellDictionary, TSTCellStyle, TSTTableDataStore, TSTTableStyle, TSWPParagraphStyle, TSWPShapeStyle, TSWPStorage;

@interface TSTTableModel
{
    TSTTableDataStore *mDataStore;	// 8 = 0x8
    struct __CFUUID *mTableID;	// 16 = 0x10
    struct __CFUUID *mFromTableID;	// 24 = 0x18
    unsigned short mNumberOfRows;	// 32 = 0x20
    unsigned short mNumberOfColumns;	// 34 = 0x22
    unsigned short mNumberOfHeaderRows;	// 36 = 0x24
    unsigned short mNumberOfHeaderColumns;	// 38 = 0x26
    unsigned short mNumberOfFooterRows;	// 40 = 0x28
    _Bool mHeaderRowsFrozen;	// 42 = 0x2a
    _Bool mHeaderColumnsFrozen;	// 43 = 0x2b
    unsigned short mNumberOfHiddenRows;	// 44 = 0x2c
    unsigned short mNumberOfHiddenColumns;	// 46 = 0x2e
    unsigned short mNumberOfUserHiddenRows;	// 48 = 0x30
    unsigned short mNumberOfUserHiddenColumns;	// 50 = 0x32
    unsigned short mNumberOfFilteredRows;	// 52 = 0x34
    double mDefaultRowHeight;	// 56 = 0x38
    double mDefaultColumnWidth;	// 64 = 0x40
    NSString *mTableName;	// 72 = 0x48
    _Bool mTableNameEnabled;	// 80 = 0x50
    double mTableNameHeight;	// 88 = 0x58
    _Bool mTableNameBorderEnabled;	// 96 = 0x60
    _Bool mRepeatingHeaderRowsEnabled;	// 97 = 0x61
    _Bool mRepeatingHeaderColumnsEnabled;	// 98 = 0x62
    unsigned long long mPresetIndex;	// 104 = 0x68
    _Bool mStyleApplyClearsAll;	// 112 = 0x70
    struct {
        TSTTableStyle *tableStyle;
        TSTCellStyle *bodyCellStyle;
        TSTCellStyle *headerRowCellStyle;
        TSTCellStyle *headerColumnCellStyle;
        TSTCellStyle *footerRowCellStyle;
        TSWPParagraphStyle *bodyTextStyle;
        TSWPParagraphStyle *headerRowTextStyle;
        TSWPParagraphStyle *headerColumnTextStyle;
        TSWPParagraphStyle *footerRowTextStyle;
        TSWPParagraphStyle *tableNameStyle;
        TSWPShapeStyle *tableNameShapeStyle;
    } mStyles;	// 120 = 0x78
    struct _TSTDefaultCellBlock mDefaultCells;	// 208 = 0xd0
    TSTCellDictionary *mCellsPendingWrite;	// 240 = 0xf0
    TSWPStorage *mDeprecatedProvider;	// 248 = 0xf8
    _Bool mWasUnarchivedFromAProvidedTable;	// 256 = 0x100
}

+ (CDStruct_5f1f7aa9)cellRangeForTableArea:(unsigned int)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;	// IMP=0x0000000000372a9f
+ (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;	// IMP=0x0000000000372a3f
+ (id)unnamedTableString;	// IMP=0x00000000003709a8
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=mCellsPendingWrite;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=mWasUnarchivedFromAProvidedTable;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns; // @synthesize numberOfUserHiddenColumns=mNumberOfUserHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows; // @synthesize numberOfUserHiddenRows=mNumberOfUserHiddenRows;
@property(readonly, nonatomic) unsigned short numberOfHiddenColumns; // @synthesize numberOfHiddenColumns=mNumberOfHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfHiddenRows; // @synthesize numberOfHiddenRows=mNumberOfHiddenRows;
- (id)allRichTextPayloadStorages;	// IMP=0x000000000037b573
- (void)upgradeFromPreUFF;	// IMP=0x000000000037aa3d
- (void)transformStrokes:(struct CGAffineTransform)arg1 transformedObjects:(id)arg2 inBounds:(struct CGRect)arg3;	// IMP=0x000000000037a6e9
- (void)p_scaleStrokesOnCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2 transformedObjects:(id)arg3 scale:(double)arg4;	// IMP=0x000000000037a4f9
- (void)p_scaleStrokeFromProperty:(int)arg1 style:(id)arg2 pmap:(id)arg3 scale:(double)arg4;	// IMP=0x000000000037a462
- (CDStruct_5f1f7aa9)minPopulatedCellRange;	// IMP=0x000000000037a011
- (void)validate;	// IMP=0x000000000037a00b
- (void)private_validateMergeCellsPedantically;	// IMP=0x000000000037a005
- (void)validateStyles;	// IMP=0x0000000000379efb
- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID *)arg1 sourceRange:(CDStruct_5f1f7aa9)arg2 sourceOffset:(CDStruct_79c71658)arg3;	// IMP=0x0000000000379ef5
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;	// IMP=0x0000000000379a90
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;	// IMP=0x00000000003797d6
- (id)cellRegionWithConditionalStyleMatchingCell:(CDStruct_0441cfb5)arg1;	// IMP=0x0000000000379443
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalColumns:(unsigned short)arg5 totalRows:(unsigned short)arg6 tableArea:(unsigned int)arg7 outTopStroke:(id *)arg8 outLeftStroke:(id *)arg9 outBottomStroke:(id *)arg10 outRightStroke:(id *)arg11;	// IMP=0x000000000037905b
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 outTopStroke:(id *)arg2 outLeftStroke:(id *)arg3 outBottomStroke:(id *)arg4 outRightStroke:(id *)arg5;	// IMP=0x0000000000378f8c
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *parentBorderStroke;
@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDFill *footerRowsFill;
@property(readonly, nonatomic) TSDFill *headerRowsFill;
@property(readonly, nonatomic) TSDFill *headerColumnsFill;
@property(readonly, nonatomic) TSDFill *bodyFill;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (id)mergedGridIndicesForDirection:(int)arg1;	// IMP=0x0000000000377a8e
- (_Bool)hasMergeRanges;	// IMP=0x0000000000377a4f
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
- (int)hidingStateForColumn:(unsigned char)arg1;	// IMP=0x000000000037717b
- (int)hidingStateForRow:(unsigned short)arg1;	// IMP=0x000000000037716f
- (_Bool)isColumnHidden:(unsigned char)arg1 forAction:(int)arg2;	// IMP=0x0000000000377154
- (_Bool)isRowHidden:(unsigned short)arg1 forAction:(int)arg2;	// IMP=0x0000000000377139
- (CDStruct_5f1f7aa9)footerRowRange;	// IMP=0x0000000000375da2
- (CDStruct_5f1f7aa9)headerColumnRange;	// IMP=0x0000000000375d5f
- (CDStruct_5f1f7aa9)headerRowRange;	// IMP=0x0000000000375d22
- (CDStruct_5f1f7aa9)bodyRowRange;	// IMP=0x0000000000375cd3
- (CDStruct_5f1f7aa9)bodyColumnRange;	// IMP=0x0000000000375c7c
- (CDStruct_5f1f7aa9)bodyRange;	// IMP=0x0000000000375c06
- (CDStruct_5f1f7aa9)range;	// IMP=0x0000000000375bd5
@property NSArray *rowHeights;
@property NSArray *columnWidths;
- (void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2;	// IMP=0x0000000000375851
- (void)setHeight:(double)arg1 ofRow:(unsigned short)arg2;	// IMP=0x0000000000375845
- (id)defaultTextStyleForTableArea:(unsigned int)arg1;	// IMP=0x0000000000374395
- (id)defaultCellStyleForTableArea:(unsigned int)arg1;	// IMP=0x0000000000374201
- (void)p_fetchCellHoldingReadLock:(void *)arg1 returnCode:(void *)arg2;	// IMP=0x00000000003735b2
- (int)defaultCell:(id)arg1 forTableArea:(unsigned int)arg2;	// IMP=0x0000000000372eac
- (id)defaultCellForTableArea:(unsigned int)arg1;	// IMP=0x0000000000372db8
- (CDStruct_5f1f7aa9)cellRangeForTableArea:(unsigned int)arg1;	// IMP=0x0000000000372bf4
- (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003729e9
- (void)setStorageParentToInfo:(id)arg1;	// IMP=0x0000000000372999
- (id)bandedFillObject;	// IMP=0x0000000000372969
- (_Bool)useBandedFill;	// IMP=0x0000000000372936
@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property(readonly, nonatomic) TSTCell *defaultBodyCell;
@property(readonly, nonatomic) struct __CFUUID *fromTableID;
- (void)setTableID:(struct __CFUUID *)arg1;	// IMP=0x000000000037289a
@property(readonly, nonatomic) struct __CFUUID *tableID;
- (id)dataStore;	// IMP=0x0000000000372878
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
- (void)setTableNameShapeStyle:(id)arg1;	// IMP=0x000000000037279a
@property(readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
- (void)setTableNameStyle:(id)arg1;	// IMP=0x0000000000372740
@property(readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setFooterRowTextStyle:(id)arg1;	// IMP=0x00000000003726e6
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;	// IMP=0x000000000037268c
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setHeaderRowTextStyle:(id)arg1;	// IMP=0x0000000000372632
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setBodyTextStyle:(id)arg1;	// IMP=0x00000000003725d8
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setFooterRowCellStyle:(id)arg1;	// IMP=0x000000000037257e
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;	// IMP=0x0000000000372524
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setHeaderRowCellStyle:(id)arg1;	// IMP=0x00000000003724ca
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setBodyCellStyle:(id)arg1;	// IMP=0x0000000000372470
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
- (void)setTableStyle:(id)arg1;	// IMP=0x0000000000372418
@property(readonly, nonatomic) TSTTableStyle *tableStyle;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(nonatomic) unsigned long long presetIndex;
@property(nonatomic) unsigned short numberOfHeaderColumns;
@property(nonatomic) unsigned short numberOfFooterRows;
@property(nonatomic) unsigned short numberOfHeaderRows;
@property(nonatomic) unsigned short numberOfColumns;
@property(nonatomic) unsigned short numberOfRows;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;	// IMP=0x000000000037203f
- (void)dealloc;	// IMP=0x0000000000371f72
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4;	// IMP=0x00000000003712af
- (id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 tableInfo:(id)arg5;	// IMP=0x000000000037108e
- (void)setupDefaultCells;	// IMP=0x0000000000370d23
- (void)resetStyles:(id)arg1;	// IMP=0x0000000000370b9c
- (void)p_releaseExistingDefaultStyles;	// IMP=0x0000000000370ae7
- (id)init;	// IMP=0x0000000000370a62

@end

