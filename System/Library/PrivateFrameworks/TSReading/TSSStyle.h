//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSReading/NSCopying-Protocol.h>
#import <TSReading/TSKModel-Protocol.h>
#import <TSReading/TSKTransformableObject-Protocol.h>
#import <TSReading/TSSPropertySource-Protocol.h>
#import <TSReading/TSSPropertyValueValidator-Protocol.h>
#import <TSReading/TSSStyleClient-Protocol.h>
#import <TSReading/TSSStyleObject-Protocol.h>
#import <TSReading/TSSThemeAsset-Protocol.h>

@class NSSet, NSString, TSSPropertyMap, TSSStylesheet;

@interface TSSStyle <NSCopying, TSSPropertyValueValidator, TSSStyleObject, TSSThemeAsset, TSSPropertySource, TSSStyleClient, TSKModel, TSKTransformableObject>
{
    TSSPropertyMap *mOverridePropertyMap;	// 8 = 0x8
    NSString *mName;	// 16 = 0x10
    NSString *mStyleIdentifier;	// 24 = 0x18
    TSSStyle *mParent;	// 32 = 0x20
    _Bool mIsVariation;	// 40 = 0x28
    TSSStylesheet *mStylesheet;	// 48 = 0x30
}

+ (double)fontSizeForFontSize:(double)arg1 scalingFactor:(double)arg2;	// IMP=0x00000000000b6590
+ (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;	// IMP=0x00000000000b63f7
+ (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b63d9
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b63bc
+ (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b6393
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;	// IMP=0x00000000000b6366
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b634f
+ (id)propertiesAllowingNSNull;	// IMP=0x00000000000b6347
+ (id)defaultPropertyMap;	// IMP=0x00000000000b3da6
+ (id)defaultStyleWithContext:(id)arg1;	// IMP=0x00000000000b3d67
+ (double)defaultDoubleValueForProperty:(int)arg1;	// IMP=0x00000000000b3d59
+ (float)defaultFloatValueForProperty:(int)arg1;	// IMP=0x00000000000b3d4b
+ (int)defaultIntValueForProperty:(int)arg1;	// IMP=0x00000000000b3d40
+ (id)defaultValueForProperty:(int)arg1;	// IMP=0x00000000000b3d38
+ (id)boxedDefaultValueForProperty:(int)arg1;	// IMP=0x00000000000b3bc7
+ (id)description;	// IMP=0x00000000000b3967
+ (id)properties;	// IMP=0x00000000000b3895
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
@property(readonly, nonatomic) _Bool isVariation; // @synthesize isVariation=mIsVariation;
@property(readonly, nonatomic) TSSStyle *parent; // @synthesize parent=mParent;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000b6725
- (id)referencedStyles;	// IMP=0x00000000000b6658
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;	// IMP=0x00000000000b65bf
- (_Bool)transformsFontSizes;	// IMP=0x00000000000b6588
- (SEL)mapThemeAssetSelector;	// IMP=0x00000000000b657b
- (_Bool)isThemeEquivalent:(id)arg1;	// IMP=0x00000000000b656f
- (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;	// IMP=0x00000000000b6534
- (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b6508
- (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b64dc
- (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b64b0
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;	// IMP=0x00000000000b6470
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b6444
- (_Bool)isAncestorOf:(id)arg1;	// IMP=0x00000000000b62d4
- (_Bool)isDescendentOf:(id)arg1;	// IMP=0x00000000000b62a5
- (_Bool)isParentOf:(id)arg1;	// IMP=0x00000000000b627f
- (_Bool)isChildOf:(id)arg1;	// IMP=0x00000000000b626b
@property(readonly, nonatomic) NSSet *children;
- (void)setParent:(id)arg1;	// IMP=0x00000000000b614d
@property(readonly, nonatomic) TSSStyle *rootIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *firstIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *baseStyleForVariation;
@property(readonly, nonatomic) TSSStyle *rootAncestor;
- (_Bool)overridePropertyMapIsEqualTo:(id)arg1;	// IMP=0x00000000000b5fc7
- (void)setOverridePropertyMap:(id)arg1;	// IMP=0x00000000000b5f76
@property(readonly, nonatomic) TSSPropertyMap *overridePropertyMap;
- (_Bool)hasEqualValues:(id)arg1 forProperties:(id)arg2;	// IMP=0x00000000000b5de4
- (_Bool)hasEqualValuesToPropertyMap:(id)arg1 forProperties:(id)arg2;	// IMP=0x00000000000b5c88
- (_Bool)p_hasEqualValuesTo:(id)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b5a88
- (_Bool)hasEqualPropertyValues:(id)arg1;	// IMP=0x00000000000b5a3d
- (id)newOverridePropertyMapWithPropertyMap:(id)arg1;	// IMP=0x00000000000b5867
- (id)overridePropertyMapWithPropertyMap:(id)arg1 overridePropertyMap:(id)arg2 collapseSourceOverrides:(_Bool)arg3;	// IMP=0x00000000000b564c
- (id)fullPropertyMap;	// IMP=0x00000000000b5555
- (id)copyPropertyMap;	// IMP=0x00000000000b54c4
- (id)propertyMapIgnoringStyle:(id)arg1;	// IMP=0x00000000000b5420
- (id)propertyMap;	// IMP=0x00000000000b5387
- (double)overrideCGFloatValueForProperty:(int)arg1;	// IMP=0x00000000000b535b
- (double)overrideDoubleValueForProperty:(int)arg1;	// IMP=0x00000000000b532f
- (float)overrideFloatValueForProperty:(int)arg1;	// IMP=0x00000000000b5303
- (int)overrideIntValueForProperty:(int)arg1;	// IMP=0x00000000000b52da
- (id)overrideValueForProperty:(int)arg1;	// IMP=0x00000000000b52b4
- (id)boxedOverrideValueForProperty:(int)arg1;	// IMP=0x00000000000b5140
- (unsigned long long)overrideCount;	// IMP=0x00000000000b511a
- (id)overriddenProperties;	// IMP=0x00000000000b50fd
- (_Bool)overridesAnyProperty;	// IMP=0x00000000000b50d0
- (_Bool)overridesProperty:(int)arg1;	// IMP=0x00000000000b50b3
- (_Bool)containsProperty:(int)arg1;	// IMP=0x00000000000b50a1
- (_Bool)definesProperty:(int)arg1;	// IMP=0x00000000000b5052
@property(readonly, nonatomic) _Bool isIdentified;
@property(readonly, nonatomic) _Bool isNamed;
- (void)removeAllValues;	// IMP=0x00000000000b4ff3
- (void)removeValueForProperty:(int)arg1;	// IMP=0x00000000000b4eec
- (void)setValuesForProperties:(id)arg1;	// IMP=0x00000000000b4e81
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b4d89
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b4c91
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b4b9a
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b4ab8
- (void)setValue:(id)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b49af
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;	// IMP=0x00000000000b48a6
- (id)valuesForProperties:(id)arg1;	// IMP=0x00000000000b4863
- (double)CGFloatValueForProperty:(int)arg1;	// IMP=0x00000000000b47b6
- (double)doubleValueForProperty:(int)arg1;	// IMP=0x00000000000b4742
- (float)floatValueForProperty:(int)arg1;	// IMP=0x00000000000b46cf
- (int)intValueForProperty:(int)arg1;	// IMP=0x00000000000b465e
- (id)objectForProperty:(int)arg1;	// IMP=0x00000000000b464c
- (id)valueForProperty:(int)arg1;	// IMP=0x00000000000b45dd
- (id)boxedObjectForProperty:(int)arg1;	// IMP=0x00000000000b45cb
- (id)boxedValueForProperty:(int)arg1;	// IMP=0x00000000000b455c
- (id)copyWithContext:(id)arg1;	// IMP=0x00000000000b4545
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000b4505
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;	// IMP=0x00000000000b4499
- (id)copyFlattenedWithContext:(id)arg1;	// IMP=0x00000000000b442d
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000b421b
@property(readonly) unsigned long long hash;
- (void)dealloc;	// IMP=0x00000000000b418d
- (id)init;	// IMP=0x00000000000b40f3
- (id)initWithContext:(id)arg1;	// IMP=0x00000000000b40d9
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;	// IMP=0x00000000000b3e7c
- (void)setStylesheet:(id)arg1;	// IMP=0x00000000000b3884
- (void)setStyleIdentifier:(id)arg1;	// IMP=0x00000000000b3833
@property(readonly, nonatomic) NSString *styleIdentifier;
@property(copy, nonatomic) NSString *name;
- (id)constrainShapeStyleForContext:(id)arg1;	// IMP=0x0000000000243afe
- (void)constrainStrokeForSwatchGeneration;	// IMP=0x00000000002439fc
- (void)constrainShadowForSwatchGeneration;	// IMP=0x00000000002439a1
- (void)fadeReflectionForSwatchGeneration;	// IMP=0x000000000024391b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

