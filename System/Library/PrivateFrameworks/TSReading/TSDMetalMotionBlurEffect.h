//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MTLRenderPassDescriptor, TSDMetalContext, TSDMetalShader;
@protocol MTLCommandBuffer, MTLTexture, TSDAnimationRandomGenerator, TSDMTLDataBuffer;

@interface TSDMetalMotionBlurEffect : NSObject
{
    struct CGSize _framebufferSize;	// 8 = 0x8
    struct CGSize _slideSize;	// 24 = 0x18
    id <MTLTexture> _combinedTextureColor1;	// 40 = 0x28
    id <MTLTexture> _combinedTextureColor2;	// 48 = 0x30
    id <MTLTexture> _combinedTextureVelocity;	// 56 = 0x38
    TSDMetalShader *_defaultTextureShader;	// 64 = 0x40
    TSDMetalShader *_colorAndVelocityShader;	// 72 = 0x48
    TSDMetalShader *_colorAndVelocityBlendingShader;	// 80 = 0x50
    TSDMetalShader *_velocityVisualizerShader;	// 88 = 0x58
    TSDMetalShader *_velocityCollectionShader;	// 96 = 0x60
    TSDMetalShader *_velocityTileMaxVerticalShader;	// 104 = 0x68
    TSDMetalShader *_velocityTileMaxHorizontalShader;	// 112 = 0x70
    TSDMetalShader *_velocityNeighborMaxHorizontalShader;	// 120 = 0x78
    TSDMetalShader *_velocityNeighborMaxVerticalShader;	// 128 = 0x80
    id <MTLTexture> _colorTexture1;	// 136 = 0x88
    id <MTLTexture> _colorTexture2;	// 144 = 0x90
    id <TSDMTLDataBuffer> _colorFBODataBuffer;	// 152 = 0x98
    id <MTLTexture> _velocityTexture1;	// 160 = 0xa0
    id <MTLTexture> _velocityTexture2;	// 168 = 0xa8
    id <MTLTexture> _velocityTextureSquashed;	// 176 = 0xb0
    id <TSDMTLDataBuffer> _velocityFBODataBuffer;	// 184 = 0xb8
    id <TSDMTLDataBuffer> _velocitySquashedFBODataBuffer;	// 192 = 0xc0
    id <TSDMTLDataBuffer> _FBODataBuffer;	// 200 = 0xc8
    id <TSDMTLDataBuffer> _FBODataBufferFlipped;	// 208 = 0xd0
    MTLRenderPassDescriptor *_colorAndVelocityPassDescriptor;	// 216 = 0xd8
    MTLRenderPassDescriptor *_tileHorizontalPassDescriptor;	// 224 = 0xe0
    MTLRenderPassDescriptor *_tileVerticalPassDescriptor;	// 232 = 0xe8
    MTLRenderPassDescriptor *_neighborHorizontalPassDescriptor;	// 240 = 0xf0
    MTLRenderPassDescriptor *_neighborVerticalPassDescriptor;	// 248 = 0xf8
    MTLRenderPassDescriptor *_combined1PassDescriptor;	// 256 = 0x100
    id <TSDAnimationRandomGenerator> _randomGenerator;	// 264 = 0x108
    id <MTLCommandBuffer> _currentCommandBuffer;	// 272 = 0x110
    TSDMetalContext *_metalContext;	// 280 = 0x118
    _Bool _isSingleObject;	// 288 = 0x120
    double _motionBlurStrength;	// 296 = 0x128
    long long _debugDrawMode;	// 304 = 0x130
    double _framebufferScale;	// 312 = 0x138
}

- (void).cxx_destruct;	// IMP=0x00000000001cadb2
@property(nonatomic) double framebufferScale; // @synthesize framebufferScale=_framebufferScale;
@property(nonatomic) long long debugDrawMode; // @synthesize debugDrawMode=_debugDrawMode;
@property(nonatomic) double motionBlurStrength; // @synthesize motionBlurStrength=_motionBlurStrength;
@property(nonatomic) _Bool isSingleObject; // @synthesize isSingleObject=_isSingleObject;
- (void)p_setupRenderPasses;	// IMP=0x00000000001ca11b
- (void)p_setupBuffers;	// IMP=0x00000000001c9f10
- (void)p_setupTextures;	// IMP=0x00000000001c994b
- (void)p_setupShaders;	// IMP=0x00000000001c965f
- (void)setupMotionBlurEffectIfNecessary;	// IMP=0x00000000001c9617
- (void)p_drawWithEncoder:(id)arg1 opacity:(double)arg2;	// IMP=0x00000000001c8e3f
- (void)p_dilateVelocityTexture;	// IMP=0x00000000001c8b25
- (void)p_blitIntoVelocityTexture;	// IMP=0x00000000001c852e
- (void)p_blitIntoColorFramebuffer;	// IMP=0x00000000001c8528
- (void)p_debugDrawModeVelocityBufferDilatedWithEncoder:(id)arg1;	// IMP=0x00000000001c83e5
- (void)p_debugDrawModeVelocityBufferWithEncoder:(id)arg1;	// IMP=0x00000000001c82a5
- (void)p_debugDrawModeColorBufferWithEncoder:(id)arg1;	// IMP=0x00000000001c8125
- (struct CGSize)p_squashedVelocityFramebufferSize;	// IMP=0x00000000001c8103
- (struct CGSize)p_velocityFramebufferTextureScale;	// IMP=0x00000000001c80b4
- (struct CGSize)p_velocityFramebufferSize;	// IMP=0x00000000001c8094
- (void)drawResultWithWorkingRenderEncoder:(id)arg1 destinationRenderEncoder:(id)arg2 opacity:(double)arg3;	// IMP=0x00000000001c7d61
- (void)drawResultWithWorkingRenderEncoder:(id)arg1 destinationRenderEncoder:(id)arg2;	// IMP=0x00000000001c7d47
- (id)colorAndVelocityBlendingShader;	// IMP=0x00000000001c7d16
- (id)colorAndVelocityShader;	// IMP=0x00000000001c7ce5
- (id)bindColorAndVelocityWithMetalContext:(id)arg1 shouldFillBackground:(_Bool)arg2;	// IMP=0x00000000001c7b07
- (struct CATransform3D)adjustTransformForMotionBlurBuffer:(struct CATransform3D)arg1;	// IMP=0x00000000001c78c8
- (struct CGSize)p_updateMaxVelocityInShadersWithScale:(double)arg1 isColorFBO:(_Bool)arg2;	// IMP=0x00000000001c784f
- (struct CGSize)velocityScale;	// IMP=0x00000000001c781e
- (struct CGSize)velocityScaleForColorFBO:(_Bool)arg1;	// IMP=0x00000000001c780d
- (id)initWithFramebufferSize:(struct CGSize)arg1 slideSize:(struct CGSize)arg2 randomGenerator:(id)arg3 metalContext:(id)arg4;	// IMP=0x00000000001c73a8

@end

