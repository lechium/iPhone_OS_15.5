//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/NSCoding-Protocol.h>
#import <TSReading/TSDBackgroundLayoutAndRenderStateDelegate-Protocol.h>
#import <TSReading/TSDCanvasDelegate-Protocol.h>
#import <TSReading/TSDErrorPresenter-Protocol.h>
#import <TSReading/TSDModalOperationPresenter-Protocol.h>
#import <TSReading/TSDRepTrackerDelegateCreation-Protocol.h>
#import <TSReading/TSDTilingLayerDelegate-Protocol.h>
#import <TSReading/TSKChangeSourceObserver-Protocol.h>
#import <TSReading/TSKScrollViewDelegate-Protocol.h>

@class CALayer, NSArray, NSFormatter, NSMutableArray, NSMutableSet, NSRecursiveLock, NSSet, NSString, TSDBackgroundLayoutAndRenderState, TSDCanvas, TSDCanvasAnimation, TSDCanvasLayer, TSDCanvasView, TSDContainerRep, TSDDisplayLinkDispatch, TSDDynamicOperationController, TSDEditorController, TSDGestureDispatcher, TSDGuideController, TSDGuideStorage, TSDLayoutController, TSDTextInputResponder, TSDTileStorage, TSDTrackerManipulatorCoordinator, TSDTrackingController, TSKAccessController, TSKChangeNotifier, TSKDocumentRoot, TSPObjectContext;
@protocol TSDAnnotationHosting, TSDAnnotationPopoverController, TSDCanvasEditor, TSDCanvasLayerHosting, TSDEditor, TSDImageHUDController, TSDInteractiveCanvasControllerDelegate, TSDRepDirectLayerHostProvider, TSDRulerController, TSKDocumentRootProvider;

@interface TSDInteractiveCanvasController : NSObject <TSDCanvasDelegate, TSDErrorPresenter, TSDModalOperationPresenter, TSKChangeSourceObserver, NSCoding, TSKScrollViewDelegate, TSDBackgroundLayoutAndRenderStateDelegate, TSDRepTrackerDelegateCreation, TSDTilingLayerDelegate>
{
    id <TSDInteractiveCanvasControllerDelegate> mDelegate;	// 8 = 0x8
    TSDCanvas *mCanvas;	// 16 = 0x10
    id <TSDCanvasLayerHosting> mLayerHost;	// 24 = 0x18
    struct __CFDictionary *mContainerLayersByRep;	// 32 = 0x20
    struct __CFDictionary *mRepLayersByRep;	// 40 = 0x28
    struct __CFDictionary *mRepsByRepLayer;	// 48 = 0x30
    struct __CFDictionary *mRepsByContainerLayer;	// 56 = 0x38
    struct __CFDictionary *mDirectLayerHostsByRep;	// 64 = 0x40
    CALayer *mRepContainerLayer;	// 72 = 0x48
    TSDEditorController *mEditorController;	// 80 = 0x50
    TSDGuideController *mGuideController;	// 88 = 0x58
    NSObject<TSDCanvasEditor> *mCanvasEditor;	// 96 = 0x60
    _Bool mHasBeenTornDown;	// 104 = 0x68
    _Bool mHadLayerHost;	// 105 = 0x69
    _Bool mLayerHostHasBeenTornDown;	// 106 = 0x6a
    TSDTextInputResponder *mTextInputResponder;	// 112 = 0x70
    TSDInteractiveCanvasController *mTextInputResponderSource;	// 120 = 0x78
    unsigned long long mTextInputResponderShareCount;	// 128 = 0x80
    NSFormatter *mUnitFormatter;	// 136 = 0x88
    _Bool mResizeCanvasOnLayout;	// 144 = 0x90
    _Bool mCreateRepsForOffscreenLayouts;	// 145 = 0x91
    _Bool mShouldAutoscrollToSelectionAfterLayout;	// 146 = 0x92
    _Bool mSuppressAutozoomToSelectionAfterLayout;	// 147 = 0x93
    _Bool mShouldAnimateAutoscroll;	// 148 = 0x94
    _Bool mShouldCenterSelectionWhenAutoscrolling;	// 149 = 0x95
    CALayer *mOverlayLayer;	// 152 = 0x98
    _Bool mOverlayLayerSuppressed;	// 160 = 0xa0
    CALayer *mPopoutLayer;	// 168 = 0xa8
    NSMutableArray *mDecorators;	// 176 = 0xb0
    _Bool mShowGrayOverlay;	// 184 = 0xb8
    _Bool mInDynamicOperation;	// 185 = 0xb9
    int mDynamicOperationCounter;	// 188 = 0xbc
    _Bool mInReadMode;	// 192 = 0xc0
    _Bool mInVersionBrowsingMode;	// 193 = 0xc1
    struct CGColor *mSelectionHighlightColor;	// 200 = 0xc8
    _Bool mShowInvisibleObjects;	// 208 = 0xd0
    TSDCanvasAnimation *mCurrentAnimation;	// 216 = 0xd8
    TSDTrackerManipulatorCoordinator *mTMCoordinator;	// 224 = 0xe0
    TSDDynamicOperationController *mDynOpController;	// 232 = 0xe8
    NSObject<TSDRulerController> *mRulerController;	// 240 = 0xf0
    TSDGestureDispatcher *mGestureDispatcher;	// 248 = 0xf8
    _Bool mInspectorModeEnabled;	// 256 = 0x100
    NSMutableArray *mInspectorGestureRecognizersToReenable;	// 264 = 0x108
    CDUnknownBlockType mInspectorSingleTapBlock;	// 272 = 0x110
    struct CGPoint mLastTapPoint;	// 280 = 0x118
    struct CGRect mVisibleBoundsRectForTiling;	// 296 = 0x128
    struct CGRect mVisibleUnscaledRect;	// 328 = 0x148
    struct CGRect mUnobscuredScrollViewFrame;	// 360 = 0x168
    TSDBackgroundLayoutAndRenderState *mBackgroundLayoutAndRenderState;	// 392 = 0x188
    _Bool mStaticLayoutAndRenderOnThread;	// 400 = 0x190
    _Bool mLayoutAndRenderOnThreadDuringScroll;	// 401 = 0x191
    _Bool mNestedCanvasAllowLayoutAndRenderOnThread;	// 402 = 0x192
    _Bool mTemporarilyDisabledLayoutAndRenderOnThreadDuringScroll;	// 403 = 0x193
    _Bool mCurrentlyScrolling;	// 404 = 0x194
    _Bool mAnimatingScroll;	// 405 = 0x195
    _Bool mSuppressedAutozoom;	// 406 = 0x196
    _Bool mTextGesturesInFlight;	// 407 = 0x197
    id <TSDEditor> mSelectionChangeNotificationDeferredEditor;	// 408 = 0x198
    _Bool mShouldAutoscrollToSelectionAfterGestures;	// 416 = 0x1a0
    _Bool mSuspendedLowPriorityThreadDispatcher;	// 417 = 0x1a1
    _Bool mCurrentlyWaitingOnThreadedLayoutAndRender;	// 418 = 0x1a2
    int mDisableThreadedLayoutAndRender;	// 420 = 0x1a4
    unsigned int mEmbeddedCanvasScrolling;	// 424 = 0x1a8
    NSMutableArray *mHiddenTopLevelLayers;	// 432 = 0x1b0
    _Bool mShouldSuppressRendering;	// 440 = 0x1b8
    _Bool mSupportsBackgroundTileRendering;	// 441 = 0x1b9
    NSMutableSet *mNotificationsToPostWithValidLayouts;	// 448 = 0x1c0
    NSArray *mLayersWithZoomFadeAnimation;	// 456 = 0x1c8
    _Bool mDynamicallyZooming;	// 464 = 0x1d0
    double mDynamicViewScale;	// 472 = 0x1d8
    _Bool mUsesAlternateDrawableSelectionHighlight;	// 480 = 0x1e0
    double mTargetPointSize;	// 488 = 0x1e8
    _Bool mAnimatingViewScale;	// 496 = 0x1f0
    _Bool mSuppressingKeyboard;	// 497 = 0x1f1
    NSObject<TSDImageHUDController> *mImageHUDController;	// 504 = 0x1f8
    long long mImageHUDLock;	// 512 = 0x200
    NSObject<TSDImageHUDController> *mIAHUDController;	// 520 = 0x208
    long long mIAHUDLock;	// 528 = 0x210
    _Bool mIgnoreContentOffsetChanges;	// 536 = 0x218
    TSDTileStorage *mTileStorage;	// 544 = 0x220
    struct CGPoint mZoomCenterInBounds;	// 552 = 0x228
    NSMutableArray *mBackgroundRenderingObjects;	// 568 = 0x238
    id <TSDAnnotationHosting> mDisplayedAnnotation;	// 576 = 0x240
    id <TSDAnnotationPopoverController> mAnnotationPopoverController;	// 584 = 0x248
    _Bool mShouldClipThemeContentToCanvas;	// 592 = 0x250
    NSMutableArray *mNextLayoutBlocks;	// 600 = 0x258
    _Bool mShowUserDefinedGuides;	// 608 = 0x260
    _Bool mTeardownOnBackgroundThread;	// 609 = 0x261
    TSDDisplayLinkDispatch *mDisplayLinkDispatch;	// 616 = 0x268
    _Bool mRepViewsNeedUpdating;	// 624 = 0x270
    NSRecursiveLock *mSelfSync;	// 632 = 0x278
    _Bool mPreventSettingNilEditorOnTextResponder;	// 640 = 0x280
    _Bool mForceTilingLayoutOnThreadWhenScrolling;	// 641 = 0x281
    id <TSDRepDirectLayerHostProvider> _directLayerHostProvider;	// 648 = 0x288
    TSDTrackingController *mTrackingController;	// 656 = 0x290
    NSSet *mCachedTopLevelTilingLayers;	// 664 = 0x298
}

+ (double)smallRepOutsetForHitTesting;	// IMP=0x00000000000c9a28
+ (id)keyPathsForValuesAffectingCurrentViewScale;	// IMP=0x00000000000c4b0e
+ (id)keyPathsForValuesAffectingViewScale;	// IMP=0x00000000000c4a6d
+ (id)keyPathsForValuesAffectingEditorController;	// IMP=0x00000000000c212b
+ (id)keyPathsForValuesAffectingDocumentRoot;	// IMP=0x00000000000c17fd
+ (_Bool)selectorIsActionMethod:(SEL)arg1;	// IMP=0x00000000000c0ad1
@property(copy) NSSet *p_cachedTopLevelTilingLayers; // @synthesize p_cachedTopLevelTilingLayers=mCachedTopLevelTilingLayers;
@property(nonatomic) _Bool supportsBackgroundTileRendering; // @synthesize supportsBackgroundTileRendering=mSupportsBackgroundTileRendering;
@property(retain, nonatomic) TSDTrackingController *trackingController; // @synthesize trackingController=mTrackingController;
@property(nonatomic) _Bool showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) _Bool inReadMode; // @synthesize inReadMode=mInReadMode;
@property(nonatomic) _Bool inVersionBrowsingMode; // @synthesize inVersionBrowsingMode=mInVersionBrowsingMode;
@property(nonatomic) _Bool showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) _Bool overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property(readonly, nonatomic) CALayer *overlayLayer; // @synthesize overlayLayer=mOverlayLayer;
@property(readonly, nonatomic) CALayer *repContainerLayer; // @synthesize repContainerLayer=mRepContainerLayer;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(nonatomic) _Bool shouldClipThemeContentToCanvas; // @synthesize shouldClipThemeContentToCanvas=mShouldClipThemeContentToCanvas;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(nonatomic) _Bool suppressAutozoomToSelectionAfterLayout; // @synthesize suppressAutozoomToSelectionAfterLayout=mSuppressAutozoomToSelectionAfterLayout;
@property(nonatomic) _Bool shouldAutoscrollToSelectionAfterLayout; // @synthesize shouldAutoscrollToSelectionAfterLayout=mShouldAutoscrollToSelectionAfterLayout;
@property(readonly, nonatomic) _Bool currentlyWaitingOnThreadedLayoutAndRender; // @synthesize currentlyWaitingOnThreadedLayoutAndRender=mCurrentlyWaitingOnThreadedLayoutAndRender;
@property(nonatomic) _Bool forceTilingLayoutOnThreadWhenScrolling; // @synthesize forceTilingLayoutOnThreadWhenScrolling=mForceTilingLayoutOnThreadWhenScrolling;
@property(nonatomic) _Bool nestedCanvasAllowLayoutAndRenderOnThread; // @synthesize nestedCanvasAllowLayoutAndRenderOnThread=mNestedCanvasAllowLayoutAndRenderOnThread;
@property(nonatomic) _Bool staticLayoutAndRenderOnThread; // @synthesize staticLayoutAndRenderOnThread=mStaticLayoutAndRenderOnThread;
@property(nonatomic) _Bool allowLayoutAndRenderOnThread; // @synthesize allowLayoutAndRenderOnThread=mLayoutAndRenderOnThreadDuringScroll;
@property(nonatomic) _Bool createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(nonatomic) _Bool preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(retain, nonatomic) NSObject<TSDCanvasEditor> *canvasEditor; // @synthesize canvasEditor=mCanvasEditor;
@property(nonatomic) _Bool resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(retain, nonatomic) id <TSDRepDirectLayerHostProvider> directLayerHostProvider; // @synthesize directLayerHostProvider=_directLayerHostProvider;
@property(nonatomic) NSObject<TSDRulerController> *rulerController; // @synthesize rulerController=mRulerController;
@property(nonatomic) _Bool textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(readonly, nonatomic) _Bool animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) _Bool shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(readonly, nonatomic) _Bool inspectorModeEnabled; // @synthesize inspectorModeEnabled=mInspectorModeEnabled;
@property(nonatomic) id <TSDInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) struct CGPoint lastTapPoint; // @synthesize lastTapPoint=mLastTapPoint;
@property(nonatomic) id <TSDCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
@property(readonly, nonatomic) id canvasReferenceController;
- (id)viewWithTransferredLayers;	// IMP=0x00000000000d6903
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000d68ac
- (void)p_applyViewScale:(double)arg1 andContentOffset:(struct CGPoint)arg2;	// IMP=0x00000000000d6852
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 forceAnimation:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000d5c44
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000d5c2a
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3;	// IMP=0x00000000000d5c13
- (void)i_syncWithLayoutThread;	// IMP=0x00000000000d5bb6
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4 scrollImmediately:(_Bool)arg5 skipZoom:(_Bool)arg6;	// IMP=0x00000000000d4dd7
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4;	// IMP=0x00000000000d4da0
- (struct CGRect)p_outsetSelectionRect:(struct CGRect)arg1;	// IMP=0x00000000000d4cb3
- (_Bool)p_centerOnInitialSelection;	// IMP=0x00000000000d4c81
- (void)p_setTargetPointSize:(double)arg1;	// IMP=0x00000000000d4c33
- (double)p_targetPointSize;	// IMP=0x00000000000d4bb1
- (void)p_editorDoneChangingSelection:(id)arg1 withFlags:(unsigned long long)arg2;	// IMP=0x00000000000d49df
- (void)p_editorDoneChangingSelection:(id)arg1;	// IMP=0x00000000000d49cb
- (void)p_editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2;	// IMP=0x00000000000d4908
- (void)p_textGesturesDidEndNotification:(id)arg1;	// IMP=0x00000000000d4727
- (void)p_textGesturesWillBeginNotification:(id)arg1;	// IMP=0x00000000000d471a
- (void)p_guideColorChanged:(id)arg1;	// IMP=0x00000000000d4708
- (void)p_rulerUnitsDidChangeNotification:(id)arg1;	// IMP=0x00000000000d46e0
- (void)p_invalidateTilingLayers;	// IMP=0x00000000000d4638
- (void)p_invalidateForBackgroundLayout;	// IMP=0x00000000000d4545
- (void)p_viewScrollingEnded;	// IMP=0x00000000000d443b
- (_Bool)p_shouldLayoutAndRenderOnThreadForcePendingLayout:(_Bool)arg1;	// IMP=0x00000000000d4382
- (_Bool)p_shouldLayoutAndRenderOnThread;	// IMP=0x00000000000d436b
- (_Bool)i_temporarilyDisabledLayoutAndRenderOnThreadDuringScroll;	// IMP=0x00000000000d435f
- (void)enableThreadedLayoutAndRender;	// IMP=0x00000000000d4352
- (void)disableThreadedLayoutAndRender;	// IMP=0x00000000000d4345
- (id)p_backgroundLayoutAndRenderState;	// IMP=0x00000000000d4303
- (_Bool)p_endEditingToBeginEditingRep:(id)arg1;	// IMP=0x00000000000d420d
- (void)i_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;	// IMP=0x00000000000d4094
- (void)p_drawLayerWithReadLock:(id)arg1;	// IMP=0x00000000000d3eff
- (id)p_overlayLayerForReps:(id)arg1;	// IMP=0x00000000000d395f
- (void)p_setupPopoutLayerForReps:(id)arg1;	// IMP=0x00000000000d31a9
- (void)p_discardLayer:(id)arg1 forRep:(id)arg2;	// IMP=0x00000000000d3145
- (void)p_recursivelyUpdateLayerEdgeAntialiasingForLayer:(id)arg1;	// IMP=0x00000000000d2fc2
- (void)p_discardContainerLayer:(id)arg1 forRep:(id)arg2;	// IMP=0x00000000000d2f26
- (void)p_recursivelyUpdateLayerForRep:(id)arg1 accumulatingLayers:(id)arg2 andReps:(id)arg3;	// IMP=0x00000000000d2368
- (void)p_updateLayersFromReps;	// IMP=0x00000000000d1767
- (void)p_updateViewsFromRepsForceUpdate:(_Bool)arg1;	// IMP=0x00000000000d1598
- (_Bool)p_allowUpdateViewsFromReps;	// IMP=0x00000000000d1546
- (void)p_updateViewsFromReps;	// IMP=0x00000000000d1532
- (void)p_updateCanvasSizeFromLayouts;	// IMP=0x00000000000d1375
- (void)p_postNotificationOnMainThreadWithValidLayouts:(id)arg1;	// IMP=0x00000000000d1211
- (id)i_topLevelLayersForTiling;	// IMP=0x00000000000d10d1
- (struct CGRect)i_clippingBoundsForScrollViewEnclosingCanvas;	// IMP=0x00000000000d0ff8
- (id)i_descriptionForViewScale:(double)arg1;	// IMP=0x00000000000d0f63
- (id)i_currentAnimation;	// IMP=0x00000000000d0f56
- (_Bool)i_inPrintPreviewMode;	// IMP=0x00000000000d0ef4
- (id)i_tileStorage;	// IMP=0x00000000000d0ee7
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x00000000000d0e5a
- (void)i_repNeedsDisplay:(id)arg1;	// IMP=0x00000000000d0e2c
- (void)i_recordUserViewScale;	// IMP=0x00000000000d0d6a
- (void)i_viewScrollingEnded;	// IMP=0x00000000000d0b18
- (void)i_viewScrollWillChange;	// IMP=0x00000000000d097e
- (void)i_viewScrollDidChange;	// IMP=0x00000000000d07be
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2;	// IMP=0x00000000000d0729
- (double)i_adjustViewScale:(double)arg1;	// IMP=0x00000000000d06d4
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;	// IMP=0x00000000000d0673
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;	// IMP=0x00000000000d0617
- (void)i_viewScaleDidChange;	// IMP=0x00000000000d0436
- (void)i_canvasWideGamutValueDidChange;	// IMP=0x00000000000d02d5
- (void)i_canvasContentsScaleDidChange;	// IMP=0x00000000000d00b2
- (void)viewDidEndZooming;	// IMP=0x00000000000cfeef
- (void)i_viewDidZoomToViewScale:(double)arg1;	// IMP=0x00000000000cfe20
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000cfe0a
- (void)i_viewWillBeginZooming;	// IMP=0x00000000000cfbff
- (void)p_layoutWithReadLock;	// IMP=0x00000000000cfbe9
- (void)i_layout;	// IMP=0x00000000000cf8f0
- (_Bool)i_needsLayout;	// IMP=0x00000000000cf8da
- (void)i_layoutUnregistered:(id)arg1;	// IMP=0x00000000000cf834
- (void)i_layoutRegistered:(id)arg1;	// IMP=0x00000000000cf78e
- (void)setAnimationUseRepFiltering:(_Bool)arg1;	// IMP=0x00000000000cf775
- (void)setAnimationFilterBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cf75c
- (void)setAnimationCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cf743
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;	// IMP=0x00000000000cf72a
- (void)setAnimationRepeatAutoreverses:(_Bool)arg1;	// IMP=0x00000000000cf711
- (void)setAnimationRepeatCount:(float)arg1;	// IMP=0x00000000000cf6f8
- (void)setAnimationTimingFunction:(id)arg1;	// IMP=0x00000000000cf6df
- (void)setAnimationStartDate:(id)arg1;	// IMP=0x00000000000cf6c6
- (void)setAnimationDelay:(double)arg1;	// IMP=0x00000000000cf6ad
- (double)animationBeginTime;	// IMP=0x00000000000cf694
- (double)animationDuration;	// IMP=0x00000000000cf67b
- (void)setAnimationDuration:(double)arg1;	// IMP=0x00000000000cf662
- (void)setAnimationDidStopSelector:(SEL)arg1;	// IMP=0x00000000000cf649
- (void)setAnimationWillStartSelector:(SEL)arg1;	// IMP=0x00000000000cf630
- (void)setAnimationDelegate:(id)arg1;	// IMP=0x00000000000cf617
- (void)commitAnimations;	// IMP=0x00000000000cf552
- (void)beginAnimations:(id)arg1 context:(void *)arg2;	// IMP=0x00000000000cf457
- (void)p_maybeSetTextResponderEditorTo:(id)arg1;	// IMP=0x00000000000cf3bb
- (void)changeFirstResponderIfNecessary;	// IMP=0x00000000000cf3a5
- (_Bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000000cf2ee
- (_Bool)shouldResampleImages;	// IMP=0x00000000000cf2b2
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00000000000cf1cf
- (void)deselectAll:(id)arg1;	// IMP=0x00000000000cf12f
- (void)p_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cef59
- (void)p_willEnterForeground:(id)arg1;	// IMP=0x00000000000cee2c
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x00000000000cecc3
- (struct CGPoint)scrollView:(id)arg1 restrictContentOffset:(struct CGPoint)arg2;	// IMP=0x00000000000cec01
- (_Bool)selectionContainsOnlyInfosOnCanvas:(id)arg1 model:(id)arg2;	// IMP=0x00000000000cebf9
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x00000000000ceb90
- (void)p_scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x00000000000ceabc
- (void)scrollViewDidScrollToTop:(id)arg1;	// IMP=0x00000000000cea96
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x00000000000cea70
- (void)scrollView:(id)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;	// IMP=0x00000000000ce83a
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x00000000000ce821
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x00000000000ce802
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;	// IMP=0x00000000000ce753
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x00000000000ce643
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x00000000000ce0d0
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(id)arg1;	// IMP=0x00000000000cde0d
- (_Bool)backgroundLayoutAndRenderState:(id)arg1 shouldDispatchBackgroundWork:(CDUnknownBlockType)arg2;	// IMP=0x00000000000cdd21
- (void)backgroundLayoutAndRenderState:(id)arg1 performWorkInBackgroundTilingOnly:(_Bool)arg2;	// IMP=0x00000000000cd61f
- (void)didLayoutAndRenderOnThread;	// IMP=0x00000000000cd619
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;	// IMP=0x00000000000cd5bd
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;	// IMP=0x00000000000cd593
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;	// IMP=0x00000000000cd585
- (_Bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;	// IMP=0x00000000000cd531
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;	// IMP=0x00000000000cd4e0
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;	// IMP=0x00000000000cd300
- (_Bool)shouldLayoutTilingLayer:(id)arg1;	// IMP=0x00000000000cd275
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00000000000cd0fd
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000cd016
- (id)gestureTargetStack:(id)arg1;	// IMP=0x00000000000cccc3
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000ccb1b
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000cca23
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000cc969
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;	// IMP=0x00000000000cc963
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x00000000000cc77f
- (id)hitRepChromeAtUnscaledPoint:(struct CGPoint)arg1;	// IMP=0x00000000000cc777
@property(readonly, retain, nonatomic) TSDGestureDispatcher *gestureDispatcher;
@property(readonly, retain, nonatomic) TSDTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) TSDDynamicOperationController *dynamicOperationController;
- (void)p_endZoomingOperation;	// IMP=0x00000000000cc32f
- (void)p_beginZoomingOperation;	// IMP=0x00000000000cc072
- (void)endScrollingOperation;	// IMP=0x00000000000cbf41
- (void)beginScrollingOperation;	// IMP=0x00000000000cbe10
- (void)i_invalidateSelectionHighlightLayers;	// IMP=0x00000000000cbcc8
@property(nonatomic) _Bool usesAlternateDrawableSelectionHighlight;
- (_Bool)isInInspectorDynamicOperation;	// IMP=0x00000000000cb899
- (void)endPossiblyParallelInspectorDynamicOperation;	// IMP=0x00000000000cb7fb
- (void)beginPossiblyParallelInspectorDynamicOperation;	// IMP=0x00000000000cb7ee
- (_Bool)isInDynamicOperation;	// IMP=0x00000000000cb7d3
- (void)endDynamicOperation;	// IMP=0x00000000000cb523
- (void)beginDynamicOperation;	// IMP=0x00000000000cb28b
- (void)actionGhostKnobHitForRep:(id)arg1;	// IMP=0x00000000000cb285
- (void)toggleHyperlinkUIForRep:(id)arg1;	// IMP=0x00000000000cb27f
- (_Bool)hasAnnotations;	// IMP=0x00000000000cb254
- (id)annotationController;	// IMP=0x00000000000cb24c
- (_Bool)attachedCommentsAllowedForDrawable:(id)arg1;	// IMP=0x00000000000cb237
- (void)invalidateComments;	// IMP=0x00000000000caffb
- (_Bool)shouldDisplayCommentUIForInfo:(id)arg1;	// IMP=0x00000000000cafc2
@property(nonatomic) _Bool showsComments;
- (void)showOrHideComments:(id)arg1;	// IMP=0x00000000000caf81
- (id)p_decorators;	// IMP=0x00000000000caf60
- (void)removeDecorator:(id)arg1;	// IMP=0x00000000000cae6d
- (void)addDecorator:(id)arg1;	// IMP=0x00000000000cad5c
- (void)closeOverlays;	// IMP=0x00000000000cad4a
- (_Bool)shouldPopKnobsOutsideEnclosingScrollView;	// IMP=0x00000000000cacea
- (id)actionGhostKnobForRep:(id)arg1;	// IMP=0x00000000000cace2
- (_Bool)shouldShowOnRepHyperlinkUI;	// IMP=0x00000000000cacda
- (int)defaultKnobTypeForRep:(id)arg1;	// IMP=0x00000000000cacd2
- (_Bool)shouldShowPathHighlightOnUnselectedInvisibleShapes;	// IMP=0x00000000000cacca
- (_Bool)shouldEverShowPathHighlightOnInvisibleShapes;	// IMP=0x00000000000cacc2
@property(readonly, nonatomic) NSArray *additionalLayersOverRepLayers;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
- (void)performBlockAfterNextLayout:(CDUnknownBlockType)arg1;	// IMP=0x00000000000cab9f
- (void)layoutIfNeeded;	// IMP=0x00000000000cab1d
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelection:(id)arg2;	// IMP=0x00000000000ca7f1
- (id)layoutForInfoNearestVisibleRect:(id)arg1;	// IMP=0x00000000000ca532
- (id)layoutsForInfo:(id)arg1 intersectingSelection:(id)arg2;	// IMP=0x00000000000ca461
- (id)layoutForModel:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000ca436
- (id)layoutForInfo:(id)arg1;	// IMP=0x00000000000ca405
- (id)layoutsForModel:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000ca3c8
- (id)layoutsForInfo:(id)arg1;	// IMP=0x00000000000ca397
- (id)validatedLayoutForInfo:(id)arg1;	// IMP=0x00000000000ca31d
@property(readonly, nonatomic) TSDLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 returningRep:(id *)arg2;	// IMP=0x00000000000ca15c
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inRep:(id)arg2 minDistance:(double *)arg3 hitKnob:(id *)arg4 hitRep:(id *)arg5;	// IMP=0x00000000000c9d8f
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;	// IMP=0x00000000000c9bbb
- (id)hitRep:(struct CGPoint)arg1;	// IMP=0x00000000000c9ac8
- (id)hitRep:(struct CGPoint)arg1 withGesture:(id)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c9a36
- (id)topLevelRepsForHitTesting;	// IMP=0x00000000000c99ea
- (id)topLevelRepsForDragSelecting;	// IMP=0x00000000000c99d8
@property(readonly, nonatomic) TSDContainerRep *topLevelContainerRepForEditing;
- (void)performBlockNextFrame:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c9950
- (id)ancestorRepOfRep:(id)arg1 orDelegateConformingToProtocol:(id)arg2;	// IMP=0x00000000000c9859
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;	// IMP=0x00000000000c9751
- (id)unitStringForAngle:(double)arg1;	// IMP=0x00000000000c96d6
- (id)unitStringForNumber:(double)arg1;	// IMP=0x00000000000c95ef
- (id)unitStringForSize:(struct CGSize)arg1;	// IMP=0x00000000000c94a3
- (id)unitStringForPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c930b
- (id)unitFormatter;	// IMP=0x00000000000c92b7
- (struct CGSize)growUnscaledCanvasLayerSize:(struct CGSize)arg1;	// IMP=0x00000000000c92b1
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;	// IMP=0x00000000000c9272
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;	// IMP=0x00000000000c923c
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c91fd
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;	// IMP=0x00000000000c91c7
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;	// IMP=0x00000000000c9117
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;	// IMP=0x00000000000c9079
- (_Bool)allowNegativeAutoscroll;	// IMP=0x00000000000c9071
- (_Bool)allowAutoscroll;	// IMP=0x00000000000c9069
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectValidWhileZooming;
- (struct CGRect)p_calculateVisibleUnscaledRect;	// IMP=0x00000000000c8f5f
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;	// IMP=0x00000000000c8e40
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectClippedToWindow;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(_Bool)arg1;	// IMP=0x00000000000c8636
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
- (void)discardRepForClassChange:(id)arg1;	// IMP=0x00000000000c840f
- (void)recreateAllLayoutsAndReps;	// IMP=0x00000000000c837c
- (id)repForContainerLayer:(id)arg1;	// IMP=0x00000000000c82cc
- (id)repForLayer:(id)arg1;	// IMP=0x00000000000c821c
- (id)containerLayerForRep:(id)arg1;	// IMP=0x00000000000c816c
- (id)layerForRep:(id)arg1;	// IMP=0x00000000000c80bc
- (id)repForLayout:(id)arg1;	// IMP=0x00000000000c80a8
- (id)p_repForLayout:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x00000000000c8042
- (id)repForInfo:(id)arg1;	// IMP=0x00000000000c802e
- (id)repForInfo:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x00000000000c7df3
- (id)repsForInfo:(id)arg1;	// IMP=0x00000000000c7c55
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;	// IMP=0x00000000000c7a48
@property(copy, nonatomic) NSArray *infosToDisplay;
- (id)localizedPercentStringForAlignmentGuide:(id)arg1;	// IMP=0x00000000000c77c6
- (id)provideUserDefinedGuides;	// IMP=0x00000000000c77be
- (id)provideDynamicGuides;	// IMP=0x00000000000c77b6
- (struct CGRect)boundingRectForActiveGuidesForRect:(struct CGRect)arg1;	// IMP=0x00000000000c7798
- (id)infosForGuides;	// IMP=0x00000000000c7786
@property(readonly, nonatomic) TSDGuideStorage *guideStorage;
- (void)makeUserDefinedGuidesVisible;	// IMP=0x00000000000c7765
- (void)toggleShouldShowUserDefinedGuides;	// IMP=0x00000000000c7732
- (void)forceBackgroundLayout;	// IMP=0x00000000000c7720
- (void)forceStopScrolling;	// IMP=0x00000000000c75de
- (void)embeddedCanvasDidEndScrolling;	// IMP=0x00000000000c7525
- (void)embeddedCanvasWillBeginScrolling;	// IMP=0x00000000000c7478
- (void)popThreadedLayoutAndRenderDisabled;	// IMP=0x00000000000c73cd
- (void)pushThreadedLayoutAndRenderDisabled;	// IMP=0x00000000000c7381
@property(nonatomic) _Bool shouldShowUserDefinedGuides;
- (_Bool)shouldShowInstructionalText;	// IMP=0x00000000000c7326
- (_Bool)shouldShowTextOverflowGlyphs;	// IMP=0x00000000000c72e8
- (_Bool)isPrinting;	// IMP=0x00000000000c72aa
- (_Bool)isCanvasInteractive;	// IMP=0x00000000000c726c
- (_Bool)spellCheckingSuppressed;	// IMP=0x00000000000c7214
- (_Bool)spellCheckingSupported;	// IMP=0x00000000000c71c5
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForCanvasUI;
- (struct CGImage *)textImageFromRect:(struct CGRect)arg1;	// IMP=0x00000000000c7149
- (id)replaceImageController;	// IMP=0x00000000000c70e4
- (void)hideRuler;	// IMP=0x00000000000c70b9
- (void)displayRulerForRect:(struct CGRect)arg1;	// IMP=0x00000000000c708e
- (void)displayRulerWithSlowFade:(_Bool)arg1;	// IMP=0x00000000000c7063
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (struct CGColor *)newDefaultSelectionHighlightColor;	// IMP=0x00000000000c6fcd
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;	// IMP=0x00000000000c6f03
- (void)setNeedsDisplayOnLayer:(id)arg1;	// IMP=0x00000000000c6e39
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
- (_Bool)zoomToFitRect:(struct CGRect)arg1 outset:(_Bool)arg2 fitWidthOnly:(_Bool)arg3 centerHorizontally:(_Bool)arg4 centerVertically:(_Bool)arg5 animated:(_Bool)arg6;	// IMP=0x00000000000c698e
- (double)viewScaleForZoomToFitRect:(struct CGRect)arg1 outset:(_Bool)arg2 fitWidthOnly:(_Bool)arg3;	// IMP=0x00000000000c67ec
- (struct CGPoint)contentOffset;	// IMP=0x00000000000c6763
- (void)setContentOffset:(struct CGPoint)arg1 clamp:(_Bool)arg2 animated:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000c6684
- (void)setContentOffset:(struct CGPoint)arg1 clamp:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000000000c666c
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000c6656
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000c65de
- (void)scrollRectToVisibleCenter:(struct CGRect)arg1 animated:(_Bool)arg2 onlyScrollNecessaryAxes:(_Bool)arg3;	// IMP=0x00000000000c6353
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000c57de
- (void)unobscuredFrameDidChange;	// IMP=0x00000000000c54ca
- (_Bool)wantsUpdatedScrollIndicatorInsets;	// IMP=0x00000000000c54c2
- (struct CGRect)unobscuredFrameOfView:(id)arg1;	// IMP=0x00000000000c521a
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x00000000000c516e
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000000000c5119
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2 scrollViewBoundsSize:(struct CGSize)arg3;	// IMP=0x00000000000c4f3a
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;	// IMP=0x00000000000c4e9b
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animationDuration:(double)arg4 forceAnimation:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000000c4dcc
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animationDuration:(double)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000c4db2
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 clampOffset:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000000000c4d23
- (struct CGRect)canvasViewBoundsWithBounds:(struct CGRect)arg1;	// IMP=0x00000000000c4c94
- (_Bool)shouldResizeCanvasToScrollView;	// IMP=0x00000000000c4c56
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) double defaultViewScale;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
- (_Bool)canvasViewShouldBecomeFirstResponder:(id)arg1;	// IMP=0x00000000000c49ca
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1;	// IMP=0x00000000000c4907
- (void)p_editorControllerSelectionDidChange:(id)arg1;	// IMP=0x00000000000c4820
- (_Bool)p_shouldSuppressAutozoomForEditor:(id)arg1;	// IMP=0x00000000000c47ac
- (void)p_editorControllerDidChangeCurrentEditors:(id)arg1;	// IMP=0x00000000000c47a6
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;	// IMP=0x00000000000c467f
- (void)resumeEditing;	// IMP=0x00000000000c45ad
- (void)reuseTextInputResponderFrom:(id)arg1;	// IMP=0x00000000000c4430
- (void)setKeyboardSuppressedAndTextInputEditorIgnoresFirstResponderChanges:(_Bool)arg1;	// IMP=0x00000000000c43a7
- (_Bool)keyboardSuppressedAndTextInputEditorIgnoresFirstResponderChanges;	// IMP=0x00000000000c439b
- (_Bool)p_currentlyScrollingIncludeEmbeddedCanvasScrolling:(_Bool)arg1;	// IMP=0x00000000000c4341
- (_Bool)p_currentlyScrolling;	// IMP=0x00000000000c432a
@property(readonly, nonatomic) _Bool currentlyScrolling;
- (void)setShouldSuppressRendering:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000c3e45
- (void)invalidateLayers;	// IMP=0x00000000000c3dd4
- (void)invalidateVisibleBounds;	// IMP=0x00000000000c3d5d
- (void)invalidateVisibleBoundsInBackground;	// IMP=0x00000000000c3c98
- (void)invalidateLayoutInBackground:(id)arg1;	// IMP=0x00000000000c3bc3
- (void)invalidateRepsInBackground;	// IMP=0x00000000000c3afe
- (void)invalidateRepsIfSynced;	// IMP=0x00000000000c3aad
- (void)invalidateReps;	// IMP=0x00000000000c3a53
- (void)layoutInvalidated;	// IMP=0x00000000000c39e9
- (void)scrollToPrimarySelection;	// IMP=0x00000000000c39ab
- (void)scrollToPrimarySelectionForEditor:(id)arg1;	// IMP=0x00000000000c3997
- (void)p_scrollToPrimarySelectionForEditor:(id)arg1 skipZoom:(_Bool)arg2;	// IMP=0x00000000000c383e
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2 scrollImmediately:(_Bool)arg3;	// IMP=0x00000000000c376f
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2;	// IMP=0x00000000000c375a
- (struct CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000c373c
- (void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3;	// IMP=0x00000000000c3197
- (void)p_scrollModelToVisible:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000c2fa5
- (void)scrollSearchReferenceToVisible:(id)arg1;	// IMP=0x00000000000c2f2c
- (void)scrollCurrentSelectionToVisible;	// IMP=0x00000000000c2e4c
- (id)infoToScrollToForModel:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000c2dd6
- (id)infoForModel:(id)arg1 withSelection:(id)arg2;	// IMP=0x00000000000c2d70
- (id)p_setSelection:(id)arg1 onInfo:(id)arg2 withFlags:(unsigned long long)arg3;	// IMP=0x00000000000c2c42
- (_Bool)shouldZoomOnSelectionChange;	// IMP=0x00000000000c2bdd
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;	// IMP=0x00000000000c2a70
- (void)zoomToCurrentSelection;	// IMP=0x00000000000c27d4
- (struct CGPoint)smartZoomCenterForNoSelection;	// IMP=0x00000000000c2787
- (_Bool)canZoomToCurrentSelection;	// IMP=0x00000000000c274c
- (void)endEditing;	// IMP=0x00000000000c2738
- (id)beginEditingRep:(id)arg1;	// IMP=0x00000000000c2651
- (id)beginEditingRep:(id)arg1 clearingSelection:(_Bool)arg2 withEditorProvider:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c2465
- (id)beginEditingRepForInfo:(id)arg1;	// IMP=0x00000000000c2405
- (id)newCanvasEditor;	// IMP=0x00000000000c238b
@property(readonly, nonatomic) TSDTextInputResponder *textInputResponder; // @synthesize textInputResponder=mTextInputResponder;
@property(readonly, nonatomic) TSDEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000c20e6
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c20a6
- (id)canvas:(id)arg1 layoutGeometryProviderForLayout:(id)arg2;	// IMP=0x00000000000c2055
- (void)canvas:(id)arg1 createdRep:(id)arg2;	// IMP=0x00000000000c2024
- (void)canvas:(id)arg1 willLayoutRep:(id)arg2;	// IMP=0x00000000000c1fd5
- (id)additionalVisibleInfosForCanvas:(id)arg1;	// IMP=0x00000000000c1def
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;	// IMP=0x00000000000c1d2e
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;	// IMP=0x00000000000c1d15
- (void)canvasDidUpdateRepsFromLayouts:(id)arg1;	// IMP=0x00000000000c1c35
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;	// IMP=0x00000000000c1bfe
- (void)canvasDidLayout:(id)arg1;	// IMP=0x00000000000c1a41
- (void)canvasDidValidateLayouts:(id)arg1;	// IMP=0x00000000000c1a07
- (void)canvasWillLayout:(id)arg1;	// IMP=0x00000000000c19cd
- (void)canvasDidUpdateVisibleBounds:(id)arg1;	// IMP=0x00000000000c1969
- (void)canvasLayoutInvalidated:(id)arg1;	// IMP=0x00000000000c18e6
- (_Bool)isPrintingCanvas;	// IMP=0x00000000000c18d4
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) id <TSKDocumentRootProvider> documentRootProvider;
- (void)removeBackgroundRenderingObject:(id)arg1;	// IMP=0x00000000000c16e9
- (void)addBackgroundRenderingObject:(id)arg1;	// IMP=0x00000000000c1673
- (void)teardownBackgroundRendering;	// IMP=0x00000000000c1457
- (void)p_iccWillResignFirstResponderNotification:(id)arg1;	// IMP=0x00000000000c13f4
- (void)p_iccWillBecomeFirstResponderNotification:(id)arg1;	// IMP=0x00000000000c1360
- (void)i_cvcWillResignFirstResponder;	// IMP=0x00000000000c131e
- (void)i_cvcWillBecomeFirstResponder;	// IMP=0x00000000000c12b2
- (void)i_layerHostHasBeenTornDown;	// IMP=0x00000000000c1295
- (void)p_recursivelyClearLayerDelegate:(id)arg1;	// IMP=0x00000000000c115b
- (void)teardown;	// IMP=0x00000000000c0daa
- (void)teardownCanvasEditor;	// IMP=0x00000000000c0d07
- (void)forwardInvocation:(id)arg1;	// IMP=0x00000000000c0bc5
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x00000000000c0b36
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x00000000000c0968
- (void)dealloc;	// IMP=0x00000000000c059c
- (void)p_commonInit;	// IMP=0x00000000000c03f8
- (void)removeCommonObservers;	// IMP=0x00000000000c0308
- (void)addCommonObservers;	// IMP=0x00000000000c01ee
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000c01e8
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000c01d6
- (id)init;	// IMP=0x00000000000c0187
- (CDStruct_499be82c)contentPlacementForPoint:(struct CGPoint)arg1 inView:(id)arg2;	// IMP=0x000000000021fa4d
- (struct CGPoint)clampedCenterPointForPoint:(struct CGPoint)arg1 withPlacement:(CDStruct_499be82c)arg2 viewScale:(double)arg3;	// IMP=0x000000000021fa22
- (id)clampedCenterContentLocationForPoint:(struct CGPoint)arg1 withPlacement:(CDStruct_499be82c)arg2 viewScale:(double)arg3;	// IMP=0x000000000021f997
- (id)convertContentLocation:(id)arg1 fromPlacement:(CDStruct_499be82c)arg2 toPlacement:(CDStruct_499be82c)arg3;	// IMP=0x000000000021f7f8
- (id)clampContentLocation:(id)arg1 forPlacement:(CDStruct_499be82c)arg2;	// IMP=0x000000000021f732
@property(readonly, nonatomic) CDStruct_499be82c centerPlusMovementContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c touchContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c screenBottomContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c screenTopContentPlacement;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

