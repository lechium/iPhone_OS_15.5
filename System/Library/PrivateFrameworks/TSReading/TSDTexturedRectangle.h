//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/NSCopying-Protocol.h>

@class CALayer, NSMutableArray, NSMutableDictionary, NSString, TSDTextureSet, TSUColor;
@protocol MTLTexture;

@interface TSDTexturedRectangle : NSObject <NSCopying>
{
    struct CGPoint mOffset;	// 8 = 0x8
    struct CGPoint mOriginalPosition;	// 24 = 0x18
    struct CGSize mSize;	// 40 = 0x28
    struct CGRect mContentRect;	// 56 = 0x38
    struct CGRect mOriginalFrame;	// 88 = 0x58
    CALayer *mLayer;	// 120 = 0x78
    CDUnknownBlockType mRenderBlock;	// 128 = 0x80
    struct CGImage *mSourceImage;	// 136 = 0x88
    struct CGImage *mBakedImage;	// 144 = 0x90
    int mTextureType;	// 152 = 0x98
    double mTextureOpacity;	// 160 = 0xa0
    unsigned int mSingleTextureName;	// 168 = 0xa8
    _Bool mSingleTextureContainsMipmaps;	// 172 = 0xac
    _Bool mIsFlattened;	// 173 = 0xad
    NSMutableDictionary *mAttributes;	// 176 = 0xb0
    NSMutableArray *mTags;	// 184 = 0xb8
    struct CGColorSpace *mColorSpace;	// 192 = 0xc0
    _Bool _shouldUseDisplayLinkPresentationTime;	// 200 = 0xc8
    _Bool mShouldGenerateMipmap;	// 201 = 0xc9
    _Bool _isVerticalText;	// 202 = 0xca
    TSDTextureSet *mParent;	// 208 = 0xd0
    NSString *_text;	// 216 = 0xd8
    double _textBaseline;	// 224 = 0xe0
    TSUColor *_textColor;	// 232 = 0xe8
    double _textXHeight;	// 240 = 0xf0
    TSUColor *_backgroundColor;	// 248 = 0xf8
    double _bakedScale;	// 256 = 0x100
    id <MTLTexture> _metalTexture;	// 264 = 0x108
    struct _NSRange _textRange;	// 272 = 0x110
    struct CGRect mFrameOnCanvas;	// 288 = 0x120
}

+ (id)setupMetalShaderForContext:(id)arg1;	// IMP=0x00000000001a3819
- (void).cxx_destruct;	// IMP=0x00000000001a3f0f
@property(readonly, nonatomic) id <MTLTexture> metalTexture; // @synthesize metalTexture=_metalTexture;
@property(nonatomic) _Bool isVerticalText; // @synthesize isVerticalText=_isVerticalText;
@property(readonly, nonatomic) double bakedScale; // @synthesize bakedScale=_bakedScale;
@property(copy, nonatomic) TSUColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) double textXHeight; // @synthesize textXHeight=_textXHeight;
@property(nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property(copy, nonatomic) TSUColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double textBaseline; // @synthesize textBaseline=_textBaseline;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) _Bool shouldGenerateMipmap; // @synthesize shouldGenerateMipmap=mShouldGenerateMipmap;
@property(nonatomic) _Bool shouldUseDisplayLinkPresentationTime; // @synthesize shouldUseDisplayLinkPresentationTime=_shouldUseDisplayLinkPresentationTime;
@property(nonatomic) struct CGRect frameOnCanvas; // @synthesize frameOnCanvas=mFrameOnCanvas;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=mTags;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) int textureType; // @synthesize textureType=mTextureType;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) __weak TSDTextureSet *parent; // @synthesize parent=mParent;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(nonatomic) _Bool isFlattened; // @synthesize isFlattened=mIsFlattened;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=mLayer;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(nonatomic) struct CGRect contentRect; // @synthesize contentRect=mContentRect;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=mAttributes;
- (_Bool)hasLiveTexturedRectangleSource;	// IMP=0x00000000001a3cb0
- (void)setLiveTexturedRectangleSourceProxy:(id)arg1;	// IMP=0x00000000001a3caa
- (void)setLiveTexturedRectangleSource:(id)arg1;	// IMP=0x00000000001a3ca4
- (id)p_latestTextureNotAfterLayerTime:(double)arg1;	// IMP=0x00000000001a3b78
- (id)p_allocateMetalTextureForDevice:(id)arg1 renderTarget:(_Bool)arg2 writable:(_Bool)arg3 private:(_Bool)arg4 maxSize:(struct CGSize)arg5;	// IMP=0x00000000001a3b70
- (struct CGSize)p_textureSizeWithDevice:(id)arg1 maxSize:(struct CGSize)arg2;	// IMP=0x00000000001a395c
- (id)metalTextureWithContext:(id)arg1;	// IMP=0x00000000001a3827
- (void)drawFrameAtLayerTime:(double)arg1 context:(id)arg2;	// IMP=0x00000000001a3821
- (void)setupMetalTextureForDevice:(id)arg1;	// IMP=0x00000000001a3813
- (id)p_allocateMetalTextureForDevice:(id)arg1;	// IMP=0x00000000001a380b
- (void)releaseMetalTexture;	// IMP=0x00000000001a37eb
- (_Bool)isMetalTextureSetup;	// IMP=0x00000000001a37da
- (char *)p_setupTextureDataWithSize:(struct CGSize)arg1 isBGRA:(_Bool)arg2;	// IMP=0x00000000001a3322
@property(readonly, nonatomic) CALayer *parentLayer;
- (struct CGRect)boundingRectForStage:(long long)arg1 isBuildIn:(_Bool)arg2;	// IMP=0x00000000001a2eeb
@property(readonly, nonatomic) _Bool isBackgroundTexture;
- (void)renderIntoContext:(struct CGContext *)arg1;	// IMP=0x00000000001a29f4
- (void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2;	// IMP=0x00000000001a25cf
@property(readonly, nonatomic) struct CGImage *image;
@property(readonly, nonatomic) double singleTextureOpacity;
- (void)releaseSingleTexture;	// IMP=0x00000000001a23be
@property(readonly, nonatomic) unsigned int singleTextureTarget;
@property(readonly, nonatomic) unsigned int singleTextureName;
- (void)setupSingleTexture;	// IMP=0x00000000001a237c
- (void)setupSingleTextureAndGenerateMipMaps:(_Bool)arg1;	// IMP=0x00000000001a2036
- (void)renderLayerContentsIfNeeded;	// IMP=0x00000000001a1dee
@property(readonly, nonatomic) _Bool isRenderable;
- (void)resetToSourceImage;	// IMP=0x00000000001a1d2f
- (struct CGImage *)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(struct CGPoint)arg3;	// IMP=0x00000000001a1770
- (struct CGColorSpace *)p_colorSpace;	// IMP=0x00000000001a16de
- (void)resetAnchorPoint;	// IMP=0x00000000001a1586
- (void)adjustAnchorRelativeToParentsCenterOfRotation:(struct CGPoint)arg1 isMagicMove:(_Bool)arg2;	// IMP=0x00000000001a129b
@property(readonly, nonatomic) struct CGRect frame;
@property(nonatomic) struct CGPoint offset;
@property(readonly, nonatomic) struct CATransform3D transformFromAttributes;
@property(readonly, nonatomic) float opacityFromAttributes;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001a0df7
- (id)description;	// IMP=0x00000000001a0ca2
- (void)dealloc;	// IMP=0x00000000001a0c42
- (void)teardown;	// IMP=0x00000000001a0c0b
- (id)initWithCGImage:(struct CGImage *)arg1;	// IMP=0x00000000001a092e
- (id)initWithSize:(struct CGSize)arg1 image:(struct CGImage *)arg2;	// IMP=0x00000000001a08f5
- (id)initWithLayer:(id)arg1;	// IMP=0x00000000001a06e6
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 renderBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001a0534

@end

