//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/TSKChangeSourceObserver-Protocol.h>

@class NSIndexSet, NSLock, NSMutableArray, NSMutableSet, NSRecursiveLock, NSString, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTDupContentCache, TSTHiddenRowsColumnsCache, TSTLayout, TSTLayoutDynamicResizeInfo, TSTLayoutTask, TSTMergeRangeSortedSet, TSTTableInfo, TSTTableModel, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUReadWriteQueue, TSURetainedPointerKeyDictionary, TSWPEditingController;
@protocol OS_dispatch_group, OS_dispatch_semaphore, TSTLayoutDynamicColumnSwapProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowSwapProtocol;

@interface TSTMasterLayout : NSObject <TSKChangeSourceObserver>
{
    TSKChangeNotifier *mChangeNotifier;	// 8 = 0x8
    int mReferenceCount;	// 16 = 0x10
    TSTTableInfo *mTableInfo;	// 24 = 0x18
    TSTWPColumnCache *mCellIDToWPColumnCache;	// 32 = 0x20
    TSTDupContentCache *mDupContentCache;	// 40 = 0x28
    TSTWPColumnCache *mTempWPColumnCache;	// 48 = 0x30
    TSTWidthHeightCache *mWidthHeightCache;	// 56 = 0x38
    TSUReadWriteQueue *mWHCacheQueue;	// 64 = 0x40
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;	// 72 = 0x48
    NSMutableArray *mChangeDescriptors;	// 80 = 0x50
    NSObject<OS_dispatch_group> *mLayoutInFlight;	// 88 = 0x58
    TSTLayoutTask *mCurrentLayoutTask;	// 96 = 0x60
    NSObject<OS_dispatch_semaphore> *mLayoutSemaphore;	// 104 = 0x68
    unsigned int mMaxConcurrentTasks;	// 112 = 0x70
    unsigned int mNumCellsPerTask;	// 116 = 0x74
    _Bool mHeaderColumnsFrozen;	// 120 = 0x78
    _Bool mHeaderRowsFrozen;	// 121 = 0x79
    _Bool mHeaderColumnsRepeat;	// 122 = 0x7a
    _Bool mHeaderRowsRepeat;	// 123 = 0x7b
    _Bool mTableNameEnabled;	// 124 = 0x7c
    struct CGRect mTableNameBounds;	// 128 = 0x80
    double mCachedTableNameHeight;	// 160 = 0xa0
    unsigned short mCachedNumberOfHeaderColumns;	// 168 = 0xa8
    unsigned long long mCachedMaxNumberOfColumns;	// 176 = 0xb0
    unsigned short mCachedNumberOfHeaderRows;	// 184 = 0xb8
    unsigned short mCachedNumberOfFooterRows;	// 186 = 0xba
    unsigned long long mCachedMaxNumberOfRows;	// 192 = 0xc0
    struct TSTTableStrokeDefaults *mDefaultStrokes;	// 200 = 0xc8
    NSMutableArray *mTopRowStrokes;	// 208 = 0xd0
    NSMutableArray *mBottomRowStrokes;	// 216 = 0xd8
    NSMutableArray *mLeftColumnStrokes;	// 224 = 0xe0
    NSMutableArray *mRightColumnStrokes;	// 232 = 0xe8
    NSRecursiveLock *mStrokesLock;	// 240 = 0xf0
    TSURetainedPointerKeyDictionary *mParaStyleToHeightCache;	// 248 = 0xf8
    NSLock *mLock;	// 256 = 0x100
    _Bool mBandedFillIsValid;	// 264 = 0x108
    _Bool mUseBandedFill;	// 265 = 0x109
    TSDFill *mBandedFillObject;	// 272 = 0x110
    int mTableEnvironment;	// 280 = 0x118
    int mTableRowsBehavior;	// 284 = 0x11c
    _Bool mTableDefaultFontHeightsAreValid;	// 288 = 0x120
    double mTableDefaultFontHeightForArea[4];	// 296 = 0x128
    _Bool mInDynamicLayoutMode;	// 328 = 0x148
    NSMutableSet *mDynamicLayouts;	// 336 = 0x150
    double mDynamicAddOrRemoveColumnElementSize;	// 344 = 0x158
    double mDynamicAddOrRemoveRowElementSize;	// 352 = 0x160
    _Bool mDynamicBandedFill;	// 360 = 0x168
    _Bool mDynamicBandedFillSetting;	// 361 = 0x169
    int mDynamicColumnAdjustment;	// 364 = 0x16c
    id <TSTLayoutDynamicColumnSwapProtocol> mDynamicColumnSwapDelegate;	// 368 = 0x170
    double mDynamicColumnTabSize;	// 376 = 0x178
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;	// 384 = 0x180
    TSUColor *mDynamicFontColor;	// 392 = 0x188
    CDStruct_5f1f7aa9 mDynamicFontColorCellRange;	// 400 = 0x190
    CDStruct_5f1f7aa9 mDynamicHidingRowsCols;	// 408 = 0x198
    int mDynamicHidingRowsColsDirection;	// 416 = 0x1a0
    CDStruct_5f1f7aa9 mDynamicHidingContent;	// 420 = 0x1a4
    CDStruct_5f1f7aa9 mDynamicHidingText;	// 428 = 0x1ac
    TSDInfoGeometry *mDynamicInfoGeometry;	// 440 = 0x1b8
    _Bool mDynamicRepResize;	// 448 = 0x1c0
    _Bool mDynamicRepressFrozenHeader;	// 449 = 0x1c1
    _Bool mDynamicResizingColumns;	// 450 = 0x1c2
    CDStruct_5f1f7aa9 mDynamicResizingColumnRange;	// 452 = 0x1c4
    double mDynamicResizingColumnAdjustment;	// 464 = 0x1d0
    _Bool mDynamicResizingRows;	// 472 = 0x1d8
    CDStruct_5f1f7aa9 mDynamicResizingRowRange;	// 474 = 0x1da
    double mDynamicResizingRowAdjustment;	// 488 = 0x1e8
    CDStruct_5f1f7aa9 mDynamicRevealingRowsCols;	// 496 = 0x1f0
    int mDynamicRevealingRowsColsDirection;	// 504 = 0x1f8
    int mDynamicRowAdjustment;	// 508 = 0x1fc
    id <TSTLayoutDynamicRowSwapProtocol> mDynamicRowSwapDelegate;	// 512 = 0x200
    double mDynamicRowTabSize;	// 520 = 0x208
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;	// 528 = 0x210
    TSTCellRegion *mDynamicSelectionRegion;	// 536 = 0x218
    double mDynamicWidthResize;	// 544 = 0x220
    double mDynamicHeightResize;	// 552 = 0x228
    double mDynamicTableNameResize;	// 560 = 0x230
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;	// 568 = 0x238
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;	// 576 = 0x240
    TSWPEditingController *mContainedTextEditor;	// 584 = 0x248
    TSTMergeRangeSortedSet *mMergeRanges;	// 592 = 0x250
    _Bool mProcessHiddenRowsForExport;	// 600 = 0x258
    _Bool mEmptyFilteredTable;	// 601 = 0x259
    struct CGSize mMaximumPartitionSize;	// 608 = 0x260
}

+ (double)effectiveTableNameHeightForModel:(id)arg1;	// IMP=0x0000000000396142
+ (struct CGSize)tableNameTextSize:(id)arg1;	// IMP=0x0000000000396016
+ (id)tableNameTextEngine:(id)arg1;	// IMP=0x0000000000395f1c
@property(retain, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=mChangeNotifier;
@property(nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=mMaximumPartitionSize;
@property(nonatomic) _Bool processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=mProcessHiddenRowsForExport;
@property(retain, nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=mMergeRanges;
@property(readonly, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=mChangeDescriptors;
@property(nonatomic) TSWPEditingController *containedTextEditor; // @synthesize containedTextEditor=mContainedTextEditor;
@property(readonly, nonatomic) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=mDynamicSuppressingConditionalStylesCellID;
@property(readonly, nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=mDynamicTableNameResize;
@property(readonly, nonatomic) TSTCellRegion *dynamicSelectionRegion; // @synthesize dynamicSelectionRegion=mDynamicSelectionRegion;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=mDynamicSavedLayoutGeometry;
@property(readonly, nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=mDynamicRowTabSize;
@property(readonly, nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=mDynamicRowAdjustment;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=mDynamicResizingRowRange;
@property(readonly, nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=mDynamicResizingRowAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingRows; // @synthesize dynamicResizingRows=mDynamicResizingRows;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=mDynamicResizingColumnRange;
@property(readonly, nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=mDynamicResizingColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingColumns; // @synthesize dynamicResizingColumns=mDynamicResizingColumns;
@property(nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=mDynamicWidthResize;
@property(nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=mDynamicHeightResize;
@property(readonly, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=mDynamicInfoGeometry;
@property(nonatomic) _Bool dynamicRepResize; // @synthesize dynamicRepResize=mDynamicRepResize;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=mDynamicFontColorCellRange;
@property(readonly, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=mDynamicFontColor;
@property(readonly, nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=mDynamicColumnTabSize;
@property(readonly, nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=mDynamicColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=mDynamicBandedFillSetting;
@property(readonly, nonatomic) _Bool dynamicBandedFill; // @synthesize dynamicBandedFill=mDynamicBandedFill;
@property(readonly, nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=mDynamicAddOrRemoveRowElementSize;
@property(readonly, nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=mDynamicAddOrRemoveColumnElementSize;
@property(readonly, nonatomic) NSMutableSet *dynamicLayouts; // @synthesize dynamicLayouts=mDynamicLayouts;
@property(readonly, nonatomic) _Bool inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=mInDynamicLayoutMode;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=mNumCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=mMaxConcurrentTasks;
@property(readonly, nonatomic) TSUReadWriteQueue *whCacheQueue; // @synthesize whCacheQueue=mWHCacheQueue;
@property(readonly, nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=mTableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=mTableEnvironment;
@property(readonly, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=mBandedFillObject;
@property(readonly, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=mHiddenRowsColumnsCache;
@property(readonly, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=mWidthHeightCache;
@property(readonly, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=mTempWPColumnCache;
@property(readonly, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=mDupContentCache;
@property(readonly, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=mCellIDToWPColumnCache;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (double)fontHeightOfParagraphStyle:(id)arg1;	// IMP=0x00000000003a0e86
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003a0e01
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003a0d4a
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;	// IMP=0x00000000003a0c92
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;	// IMP=0x00000000003a0a6d
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;	// IMP=0x00000000003a05ee
- (void)waitForLayoutToComplete;	// IMP=0x00000000003a0553
- (void)processLayoutTask:(id)arg1;	// IMP=0x00000000003a03df
- (void)measureTextForLayoutState:(id)arg1;	// IMP=0x000000000039fd80
- (void)queueCellForValidation:(CDStruct_5f1f7aa9)arg1 cell:(id)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 prop:(_Bool)arg7 layoutCacheFlags:(int)arg8;	// IMP=0x000000000039f962
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(unsigned int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;	// IMP=0x000000000039f0a8
- (void)validateFittingWidthsForRegion:(id)arg1;	// IMP=0x000000000039e68a
- (id)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;	// IMP=0x000000000039ded8
- (void)p_validateFittingInfoForCellID:(CDStruct_0441cfb5)arg1 inMergeRange:(CDStruct_5f1f7aa9)arg2;	// IMP=0x000000000039de38
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(CDStruct_5f1f7aa9)arg3;	// IMP=0x000000000039dbbe
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2;	// IMP=0x000000000039da32
- (void)validateFittingInfoWithCellRange:(CDStruct_5f1f7aa9)arg1;	// IMP=0x000000000039d42e
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 setFitting:(_Bool)arg4;	// IMP=0x000000000039cd71
- (void)validateRowVisibility:(id)arg1;	// IMP=0x000000000039cd6b
- (void)updateWHCForMergeRanges;	// IMP=0x000000000039cb3f
- (void)validateChangeDescriptorQueue;	// IMP=0x000000000039c8e1
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;	// IMP=0x000000000039c733
- (void)validate;	// IMP=0x000000000039c112
- (void)wasRemovedFromDocumentRoot;	// IMP=0x000000000039c0ce
- (void)willBeAddedToDocumentRoot:(id)arg1;	// IMP=0x000000000039c09a
- (void)addChangeDescriptor:(id)arg1;	// IMP=0x000000000039bfc1
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2 andStrokeRange:(CDStruct_5f1f7aa9)arg3;	// IMP=0x000000000039bf89
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;	// IMP=0x000000000039bf71
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x000000000039bdd1
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x000000000039ba99
@property(readonly, nonatomic) _Bool isGrouped;
- (void)validateDynamicResizeInfo;	// IMP=0x000000000039ba4e
- (void)invalidateDynamicResizeInfo;	// IMP=0x000000000039ba35
- (void)updateDynamicResizeInfo:(id)arg1;	// IMP=0x000000000039b9fb
- (void)captureDynamicResizeInfo;	// IMP=0x000000000039b9f5
- (_Bool)isDynamicallySwappingColumns;	// IMP=0x000000000039b4aa
@property(readonly, nonatomic) id <TSTLayoutDynamicColumnSwapProtocol> dynamicColumnSwapDelegate; // @synthesize dynamicColumnSwapDelegate=mDynamicColumnSwapDelegate;
- (_Bool)isDynamicallySwappingRows;	// IMP=0x000000000039b48c
@property(readonly, nonatomic) id <TSTLayoutDynamicRowSwapProtocol> dynamicRowSwapDelegate; // @synthesize dynamicRowSwapDelegate=mDynamicRowSwapDelegate;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039b420
- (_Bool)isDynamicallyChangingContent;	// IMP=0x000000000039b3df
@property(readonly, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=mDynamicContentDelegate;
- (void)updateDynamicSuppressingConditionalStylesCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039b3c6
- (void)updateDynamicColumnSwapDelegate:(id)arg1;	// IMP=0x000000000039b382
- (void)updateDynamicRowSwapDelegate:(id)arg1;	// IMP=0x000000000039b33e
- (void)updateDynamicFontColor:(id)arg1 andRange:(CDStruct_5f1f7aa9)arg2;	// IMP=0x000000000039b2e7
- (void)updateDynamicContentDelegate:(id)arg1;	// IMP=0x000000000039b29e
- (void)updateDynamicRevealingRowsCols:(int)arg1 revealingCellRange:(CDStruct_5f1f7aa9)arg2;	// IMP=0x000000000039b198
- (void)updateDynamicInfoGeometry:(id)arg1;	// IMP=0x000000000039b162
- (void)updateDynamicHidingText:(CDStruct_5f1f7aa9)arg1;	// IMP=0x000000000039b155
- (void)updateDynamicHidingContent:(CDStruct_5f1f7aa9)arg1;	// IMP=0x000000000039b148
- (void)updateDynamicHidingRowsCols:(int)arg1 hidingCellRange:(CDStruct_5f1f7aa9)arg2;	// IMP=0x000000000039b042
- (void)updateDynamicRepressFrozenHeader:(_Bool)arg1;	// IMP=0x000000000039b036
- (void)updateDynamicBandedFill:(_Bool)arg1 setting:(_Bool)arg2;	// IMP=0x000000000039b024
- (void)updateDynamicRowTabSize:(double)arg1;	// IMP=0x000000000039b016
- (void)updateDynamicColumnTabSize:(double)arg1;	// IMP=0x000000000039b008
- (_Bool)updateDynamicChangeRowOrColumnCount:(int)arg1 count:(int)arg2 newlyAddedElementSize:(double)arg3;	// IMP=0x000000000039ac9d
- (_Bool)isDynamicallyRepressingFrozenHeaders;	// IMP=0x000000000039ac91
- (_Bool)isDynamicallySettingBandedFill;	// IMP=0x000000000039ac85
- (_Bool)isDynamicallyRowTabResizing;	// IMP=0x000000000039ac6a
- (_Bool)isDynamicallyColumnTabResizing;	// IMP=0x000000000039ac4f
- (_Bool)isDynamicallyChangingSelection;	// IMP=0x000000000039ac3e
- (void)updateDynamicSelectionRegion:(id)arg1;	// IMP=0x000000000039abfa
- (_Bool)isDynamicallyChangingRowOrColumnCount;	// IMP=0x000000000039abc1
- (_Bool)isDynamicallyChangingColumnCount;	// IMP=0x000000000039ab99
- (_Bool)isDynamicallyChangingRowCount;	// IMP=0x000000000039ab71
- (_Bool)isDynamicallyResizingTableName;	// IMP=0x000000000039ab56
- (void)updateDynamicTableNameSize:(double)arg1;	// IMP=0x000000000039ab48
- (_Bool)isDynamicallyRevealingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;	// IMP=0x000000000039aacc
- (_Bool)isDynamicallyRevealingRowsCols;	// IMP=0x000000000039aa8e
- (void)updateDynamicResize:(int)arg1 resizingRange:(CDStruct_5f1f7aa9)arg2 resizeAdjustment:(double)arg3;	// IMP=0x000000000039a7d1
- (_Bool)isDynamicallyChangingInfoGeometry;	// IMP=0x000000000039a7c0
- (_Bool)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039a75b
- (_Bool)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039a6f6
- (_Bool)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039a691
- (_Bool)isDynamicallyHidingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;	// IMP=0x000000000039a615
- (_Bool)isDynamicallyHidingRowsCols;	// IMP=0x000000000039a5d7
@property(readonly, nonatomic) TSTLayout *dynamicLayout;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (_Bool)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039a096
- (_Bool)isDynamicallyResizing:(int)arg1 rowColIndex:(unsigned short)arg2;	// IMP=0x000000000039a00a
- (_Bool)isDynamicallyResizing:(int)arg1;	// IMP=0x0000000000399fa9
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x0000000000399db4
- (CDStruct_0441cfb5)modelCellIDForStrokesOfLayoutCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x0000000000399ba2
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x0000000000399a71
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;	// IMP=0x000000000039999c
- (void)removeDynamicLayoutEndIfNecessary:(id)arg1;	// IMP=0x0000000000399917
- (void)addDynamicLayoutBeginIfNecessary:(id)arg1;	// IMP=0x00000000003998c9
- (void)endDynamicMode;	// IMP=0x00000000003997e4
- (void)cancelDynamicModeChanges;	// IMP=0x00000000003996d4
- (void)p_cancelDynamicRowColCountChanges;	// IMP=0x000000000039966f
- (void)beginDynamicMode:(id)arg1;	// IMP=0x0000000000399606
- (void)calculateRawTableSize:(struct CGSize *)arg1 andStrokeDelta:(struct CGSize *)arg2;	// IMP=0x0000000000399326
- (void)validateDefaultFontHeights;	// IMP=0x0000000000398fa1
- (void)invalidateDefaultFontHeights;	// IMP=0x0000000000398f94
- (void)validateTableRowsBehavior;	// IMP=0x0000000000398efb
- (void)validateBandedFill;	// IMP=0x0000000000398e8f
- (void)invalidateBandedFill;	// IMP=0x0000000000398e82
- (_Bool)shouldRowUseBandedFill:(unsigned short)arg1;	// IMP=0x0000000000398e0f
@property(readonly, nonatomic) _Bool useBandedFill;
- (void)validateStrokesForRegion:(id)arg1 regionAlreadyValidated:(id)arg2;	// IMP=0x00000000003988b5
- (id)regionForStrokeValidationFromChangeDescriptors:(id)arg1;	// IMP=0x0000000000398576
- (unsigned int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x000000000039644f
- (void)invalidateTableNameHeight;	// IMP=0x0000000000396293
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;	// IMP=0x00000000003961dc
- (double)calculatedTableNameHeight;	// IMP=0x00000000003961c5
- (double)tableNameHeight;	// IMP=0x00000000003961a8
- (struct CGSize)tableNameTextSize;	// IMP=0x0000000000395ed0
- (id)tableNameTextEngine;	// IMP=0x0000000000395e9b
- (void)clearModelHeightWidthCacheForCellRange:(CDStruct_5f1f7aa9)arg1;	// IMP=0x0000000000395dce
- (void)resetModelHeightWidthCache;	// IMP=0x0000000000395da3
- (void)validateLayoutHint:(id)arg1;	// IMP=0x0000000000395a31
- (_Bool)hintIsValid:(id)arg1;	// IMP=0x0000000000394979
- (id)newLayoutHint;	// IMP=0x00000000003948ce
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000003945e7
- (id)initWithInfo:(id)arg1;	// IMP=0x0000000000394144
@property(readonly, nonatomic) _Bool emptyFilteredTable; // @synthesize emptyFilteredTable=mEmptyFilteredTable;
@property(readonly, nonatomic) TSTTableModel *tableModel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

