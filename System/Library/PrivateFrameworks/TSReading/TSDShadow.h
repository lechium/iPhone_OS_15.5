//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <TSReading/NSCopying-Protocol.h>
#import <TSReading/NSMutableCopying-Protocol.h>
#import <TSReading/TSDMixing-Protocol.h>
#import <TSReading/TSSPreset-Protocol.h>
#import <TSReading/TSSPresetSource-Protocol.h>

@class NSString, TSUColor;

@interface TSDShadow : NSObject <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    double mAngle;	// 8 = 0x8
    double mOffset;	// 16 = 0x10
    double mRadius;	// 24 = 0x18
    double mOpacity;	// 32 = 0x20
    struct CGColor *mColor;	// 40 = 0x28
    _Bool mEnabled;	// 48 = 0x30
}

+ (id)mixableObjectClasses;	// IMP=0x000000000018731d
+ (_Bool)canMixWithNilObjects;	// IMP=0x0000000000187315
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;	// IMP=0x0000000000186f6d
+ (id)presetKinds;	// IMP=0x0000000000186f4a
+ (_Bool)automaticallyNotifiesObserversOfTSUColor;	// IMP=0x00000000001869b7
+ (id)keyPathsForValuesAffectingTSUColor;	// IMP=0x0000000000186997
+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;	// IMP=0x00000000001864c2
+ (id)shadowWithNSShadow:(id)arg1;	// IMP=0x00000000001863ab
+ (id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;	// IMP=0x0000000000186340
+ (id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;	// IMP=0x00000000001862d5
+ (id)defaultDisabledShadow;	// IMP=0x00000000001862c1
+ (id)defaultShadow;	// IMP=0x00000000001862aa
+ (id)p_defaultShadowEnabled:(_Bool)arg1;	// IMP=0x0000000000186228
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=mEnabled;
@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) double radius; // @synthesize radius=mRadius;
@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
- (id)NSShadow;	// IMP=0x0000000000187582
- (id)shadowByTransformingByTransform:(struct CGAffineTransform)arg1;	// IMP=0x00000000001874d4
- (id)mixedBaseObjectWithObject:(id)arg1;	// IMP=0x00000000001874ac
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;	// IMP=0x0000000000187427
- (long long)mixingTypeWithObject:(id)arg1;	// IMP=0x000000000018739f
- (SEL)mapThemeAssetSelector;	// IMP=0x0000000000187308
- (_Bool)isThemeEquivalent:(id)arg1;	// IMP=0x00000000001872f6
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)differenceRequiresRebuilding:(id)arg1;	// IMP=0x0000000000186e72
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalAngle:(double)arg2;	// IMP=0x0000000000186de7
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;	// IMP=0x0000000000186d7c
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;	// IMP=0x0000000000186c28
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;	// IMP=0x0000000000186c20
- (struct CGRect)boundsForRep:(id)arg1;	// IMP=0x0000000000186c02
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;	// IMP=0x0000000000186be4
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3 extraOffset:(struct CGSize)arg4;	// IMP=0x0000000000186a40
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3;	// IMP=0x0000000000186a1b
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2;	// IMP=0x00000000001869f4
@property(readonly, nonatomic) TSUColor *TSUColor;
@property(readonly, nonatomic) struct CGPoint offsetDelta;
- (id)typeDescription;	// IMP=0x00000000001868c8
- (id)description;	// IMP=0x00000000001867f9
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000018666d
- (unsigned long long)shadowType;	// IMP=0x0000000000186665
- (_Bool)showForEditingText;	// IMP=0x000000000018665d
- (_Bool)isCurvedShadow;	// IMP=0x0000000000186643
- (_Bool)isDropShadow;	// IMP=0x0000000000186629
- (_Bool)isContactShadow;	// IMP=0x000000000018660f
- (unsigned long long)hash;	// IMP=0x0000000000186601
- (void)dealloc;	// IMP=0x00000000001865c7
- (id)newShadowClampedForSwatches;	// IMP=0x00000000001865bf
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001865b7
- (id)mutableCopy;	// IMP=0x0000000000186586
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000018657b
- (double)clampOpacity:(double)arg1;	// IMP=0x0000000000186566
- (double)clampRadius:(double)arg1;	// IMP=0x0000000000186551
- (double)clampOffset:(double)arg1;	// IMP=0x0000000000186537
- (struct CGImage *)i_newEmptyImageWithSize:(struct CGSize)arg1;	// IMP=0x0000000000257932
- (id)i_initWithOpacity:(double)arg1 color:(struct CGColor *)arg2 enabled:(_Bool)arg3;	// IMP=0x00000000002577fd

@end

