//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class TSTCoordinateArray, TSTLayout, TSTLayoutSpaceBundle, TSTMasterLayout;

@interface TSTLayoutSpace : NSObject
{
    TSTLayoutSpaceBundle *mBundle;	// 8 = 0x8
    int mLayoutSpaceType;	// 16 = 0x10
    struct {
        _Bool coordinates;
        _Bool tableOffset;
    } mInvalidFlags;	// 20 = 0x14
    CDStruct_58eae27c mGridRange;	// 24 = 0x18
    _Bool mHeaderColumnsRepeat;	// 40 = 0x28
    _Bool mHeaderRowsRepeat;	// 41 = 0x29
    double mViewScale;	// 48 = 0x30
    struct CGAffineTransform mTransformToCanvas;	// 56 = 0x38
    struct CGAffineTransform mTransformFromCanvas;	// 104 = 0x68
    struct CGAffineTransform mTransformToDevice;	// 152 = 0x98
    struct CGAffineTransform mTransformFromDevice;	// 200 = 0xc8
    _Bool mDrawBlackAndWhite;	// 248 = 0xf8
    _Bool mDrawPreventAntialias;	// 249 = 0xf9
    struct CGPoint mTableOffset;	// 256 = 0x100
    TSTCoordinateArray *mHeaderRowColumnCoordinates;	// 272 = 0x110
    TSTCoordinateArray *mBodyColumnCoordinates;	// 280 = 0x118
    TSTCoordinateArray *mHeaderColumnRowCoordinates;	// 288 = 0x120
    TSTCoordinateArray *mBodyRowCoordinates;	// 296 = 0x128
    struct CGRect mCachedFrame;	// 304 = 0x130
    struct CGRect mCachedAlignedFrame;	// 336 = 0x150
    struct CGRect mCachedStrokeFrame;	// 368 = 0x170
    struct CGRect mCachedAlignedStrokeFrame;	// 400 = 0x190
    _Bool mLayoutDirectionIsLeftToRight;	// 432 = 0x1b0
    struct _opaque_pthread_rwlock_t mLock;	// 440 = 0x1b8
}

@property(nonatomic) struct CGPoint tableOffset; // @synthesize tableOffset=mTableOffset;
@property(nonatomic) _Bool drawPreventAntialias; // @synthesize drawPreventAntialias=mDrawPreventAntialias;
@property(nonatomic) _Bool drawBlackAndWhite; // @synthesize drawBlackAndWhite=mDrawBlackAndWhite;
@property(nonatomic) struct CGAffineTransform transformFromDevice; // @synthesize transformFromDevice=mTransformFromDevice;
@property(nonatomic) struct CGAffineTransform transformToDevice; // @synthesize transformToDevice=mTransformToDevice;
@property(nonatomic) struct CGAffineTransform transformFromCanvas; // @synthesize transformFromCanvas=mTransformFromCanvas;
@property(nonatomic) struct CGAffineTransform transformToCanvas; // @synthesize transformToCanvas=mTransformToCanvas;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) _Bool headerRowsRepeat; // @synthesize headerRowsRepeat=mHeaderRowsRepeat;
@property(nonatomic) _Bool headerColumnsRepeat; // @synthesize headerColumnsRepeat=mHeaderColumnsRepeat;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(readonly, nonatomic) int layoutSpaceType; // @synthesize layoutSpaceType=mLayoutSpaceType;
@property(readonly, nonatomic) TSTLayoutSpaceBundle *bundle; // @synthesize bundle=mBundle;
- (int)validateCoordinateCache:(id)arg1;	// IMP=0x00000000003b9b05
- (void)validateCachedFrames;	// IMP=0x00000000003b9a98
- (int)validateTableOffset:(id)arg1;	// IMP=0x00000000003b0ccf
- (int)validate:(id)arg1;	// IMP=0x00000000003b0b73
- (void)invalidateTableOffset;	// IMP=0x00000000003b0b41
- (void)invalidateCoordinates;	// IMP=0x00000000003b0b0f
- (void)unlock;	// IMP=0x00000000003b0a6e
- (void)lockForWrite;	// IMP=0x00000000003b09cd
- (void)lockForRead;	// IMP=0x00000000003b092c
- (id)description;	// IMP=0x00000000003b06d4
- (void)dealloc;	// IMP=0x00000000003b0641
- (id)initWithLayoutSpaceBundle:(id)arg1 type:(int)arg2;	// IMP=0x00000000003b041f
@property(readonly, nonatomic) _Bool isCorner;
@property(readonly, nonatomic) _Bool isRows;
@property(readonly, nonatomic) _Bool isColumns;
@property(readonly, nonatomic) _Bool isRepeat;
@property(readonly, nonatomic) _Bool isFrozen;
@property(readonly, nonatomic) _Bool isMain;
- (_Bool)p_getLayoutDirectionLeftToRight;	// IMP=0x00000000003b035e
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *layout;

@end

