//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <TSReading/TSDCanvasLayerHosting-Protocol.h>
#import <TSReading/TSDCanvasZoomTrackerDelegate-Protocol.h>
#import <TSReading/UIGestureRecognizerDelegate-Protocol.h>

@class CALayer, NSArray, NSMutableArray, NSSet, NSString, TSDAllTouchesDoneGestureRecognizer, TSDCanvasLayer, TSDCanvasSubviewsController, TSDCanvasView, TSDCanvasZoomPinchGestureRecognizer, TSDCanvasZoomTracker, TSDEditMenuTapGestureRecognizer, TSDGuidedPanController, TSDInteractiveCanvasController, TSDKnobDragGestureRecognizer, TSDMultiSelectGestureRecognizer, TSDNudgeGestureRecognizer, TSDPreventScrollGestureRecognizer, TSDRepDragGestureRecognizer, TSDRepRotateGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol TSDiOSCanvasViewControllerDelegate;

@interface TSDiOSCanvasViewController : UIViewController <TSDCanvasLayerHosting, TSDCanvasZoomTrackerDelegate, UIGestureRecognizerDelegate>
{
    TSDInteractiveCanvasController *mICC;	// 8 = 0x8
    id <TSDiOSCanvasViewControllerDelegate> mDelegate;	// 16 = 0x10
    _Bool mContextMenuMightBeDisplayed;	// 24 = 0x18
    UITapGestureRecognizer *mSingleTapGestureRecognizer;	// 32 = 0x20
    UITapGestureRecognizer *mDoubleTapGestureRecognizer;	// 40 = 0x28
    TSDEditMenuTapGestureRecognizer *mEditMenuTapGestureRecognizer;	// 48 = 0x30
    TSDKnobDragGestureRecognizer *mKnobDragGestureRecognizer;	// 56 = 0x38
    TSDMultiSelectGestureRecognizer *mMultiSelectGestureRecognizer;	// 64 = 0x40
    TSDRepDragGestureRecognizer *mRepDragGestureRecognizer;	// 72 = 0x48
    TSDRepRotateGestureRecognizer *mRepRotateGestureRecognizer;	// 80 = 0x50
    TSDCanvasZoomPinchGestureRecognizer *mZoomGestureRecognizer;	// 88 = 0x58
    TSDNudgeGestureRecognizer *mNudgeGestureRecognizer;	// 96 = 0x60
    TSDAllTouchesDoneGestureRecognizer *mAllTouchesDoneGestureRecognizer;	// 104 = 0x68
    TSDPreventScrollGestureRecognizer *mPreventScrollGestureRecognizer;	// 112 = 0x70
    UIPanGestureRecognizer *mGuidedPanGestureRecognizer;	// 120 = 0x78
    TSDGuidedPanController *mGuidedPanController;	// 128 = 0x80
    _Bool mHasBeenTornDown;	// 136 = 0x88
    _Bool mIsPopoverGestureInFlight;	// 137 = 0x89
    _Bool mInspectorModeEnabled;	// 138 = 0x8a
    NSMutableArray *mInspectorGestureRecognizersToReenable;	// 144 = 0x90
    CDUnknownBlockType mInspectorSingleTapBlock;	// 152 = 0x98
    _Bool mCurrentlyScrolling;	// 160 = 0xa0
    _Bool mRotating;	// 161 = 0xa1
    TSDCanvasZoomTracker *mCanvasZoomTracker;	// 168 = 0xa8
    struct CGPoint mLastZoomHUDLocation;	// 176 = 0xb0
    _Bool _isRotating;	// 192 = 0xc0
    TSDCanvasSubviewsController *mSubviewsController;	// 200 = 0xc8
}

@property(readonly, retain, nonatomic) TSDCanvasSubviewsController *subviewsController; // @synthesize subviewsController=mSubviewsController;
@property(readonly, nonatomic) _Bool isRotating; // @synthesize isRotating=_isRotating;
@property(nonatomic) _Bool contextMenuMightBeDisplayed; // @synthesize contextMenuMightBeDisplayed=mContextMenuMightBeDisplayed;
@property(readonly, nonatomic) _Bool isPopoverGestureInFlight; // @synthesize isPopoverGestureInFlight=mIsPopoverGestureInFlight;
@property(readonly, retain, nonatomic) UIPanGestureRecognizer *guidedPanGestureRecognizer; // @synthesize guidedPanGestureRecognizer=mGuidedPanGestureRecognizer;
@property(readonly, retain, nonatomic) TSDPreventScrollGestureRecognizer *preventScrollGestureRecognizer; // @synthesize preventScrollGestureRecognizer=mPreventScrollGestureRecognizer;
@property(retain, nonatomic) TSDAllTouchesDoneGestureRecognizer *allTouchesDoneGestureRecognizer; // @synthesize allTouchesDoneGestureRecognizer=mAllTouchesDoneGestureRecognizer;
@property(retain, nonatomic) TSDNudgeGestureRecognizer *nudgeGestureRecognizer; // @synthesize nudgeGestureRecognizer=mNudgeGestureRecognizer;
@property(retain, nonatomic) UIPinchGestureRecognizer *zoomGestureRecognizer; // @synthesize zoomGestureRecognizer=mZoomGestureRecognizer;
@property(retain, nonatomic) TSDRepRotateGestureRecognizer *repRotateGestureRecognizer; // @synthesize repRotateGestureRecognizer=mRepRotateGestureRecognizer;
@property(retain, nonatomic) TSDRepDragGestureRecognizer *repDragGestureRecognizer; // @synthesize repDragGestureRecognizer=mRepDragGestureRecognizer;
@property(retain, nonatomic) TSDMultiSelectGestureRecognizer *multiSelectGestureRecognizer; // @synthesize multiSelectGestureRecognizer=mMultiSelectGestureRecognizer;
@property(retain, nonatomic) TSDKnobDragGestureRecognizer *knobDragGestureRecognizer; // @synthesize knobDragGestureRecognizer=mKnobDragGestureRecognizer;
@property(retain, nonatomic) TSDEditMenuTapGestureRecognizer *editMenuTapGestureRecognizer; // @synthesize editMenuTapGestureRecognizer=mEditMenuTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=mDoubleTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer; // @synthesize singleTapGestureRecognizer=mSingleTapGestureRecognizer;
@property(nonatomic) id <TSDiOSCanvasViewControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
- (id)topLevelReps;	// IMP=0x000000000022aa8c
@property(readonly, retain, nonatomic) UIViewController *containerViewController;
@property(readonly, retain, nonatomic) UIView *containerView;
@property(readonly, retain, nonatomic) CALayer *containerLayer;
@property(readonly, retain, nonatomic) CALayer *topLevelTilingLayer;
- (Class)audioInspectorPaneClass;	// IMP=0x000000000022aa45
- (Class)movieInspectorPaneClass;	// IMP=0x000000000022aa3d
- (id)newAudioPlaybackHUDWithFrame:(struct CGRect)arg1 audioRep:(id)arg2 delegate:(id)arg3;	// IMP=0x000000000022aa35
- (void)hideMoviePlaybackHUD;	// IMP=0x000000000022aa2f
- (void)showMoviePlaybackHUD:(id)arg1 withFrame:(struct CGRect)arg2;	// IMP=0x000000000022aa29
- (id)newMoviePlaybackHUDWithFrame:(struct CGRect)arg1 playerController:(id)arg2 movieRep:(id)arg3;	// IMP=0x000000000022aa21
- (void)presentMovieCompatibilityAlertForUnplayableMoviePasteboardDrawableProviders:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000022aa0b
- (void)presentMovieCompatibilityAlertForUnplayableMovieURLs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000022a9f5
- (void)endModalOperation;	// IMP=0x000000000022a935
- (void)beginModalOperationWithLocalizedMessage:(id)arg1 progress:(id)arg2 cancelHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000022a875
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000022a741
- (void)p_didPresentErrorWithRecovery:(_Bool)arg1 completionHandler:(void *)arg2;	// IMP=0x000000000022a714
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000022a4f1
- (id)p_willPresentError:(id)arg1;	// IMP=0x000000000022a3ac
- (void)p_editMenuDidHide:(id)arg1;	// IMP=0x000000000022a389
- (void)p_guidedPanWithGesture:(id)arg1;	// IMP=0x000000000022a186
@property(readonly, nonatomic) _Bool isDraggingViaGuidedPan;
- (void)canvasZoomTrackerDidFinish:(id)arg1;	// IMP=0x000000000022a123
- (void)canvasZoomTrackerDidEndFinalZoomAnimation:(id)arg1;	// IMP=0x000000000022a0f1
- (void)canvasZoomTrackerWillBeginFinalZoomAnimation:(id)arg1;	// IMP=0x000000000022a0bf
- (void)canvasZoomTrackerDidEndViewScaleFeedback:(id)arg1;	// IMP=0x000000000022a0b9
- (void)canvasZoomTracker:(id)arg1 willUpdateViewScaleFeedbackWithScale:(double)arg2;	// IMP=0x000000000022a0b3
- (void)canvasZoomTracker:(id)arg1 willBeginViewScaleFeedbackWithFastPinch:(_Bool)arg2;	// IMP=0x0000000000229ec8
- (void)p_zoomWithGesture:(id)arg1;	// IMP=0x0000000000229bad
- (void)p_handleSingleTapGesture:(id)arg1;	// IMP=0x0000000000229acf
- (void)addInspectorPanZoomModeGRsToArray:(id)arg1;	// IMP=0x0000000000229a77
- (void)endInspectorPanZoomMode;	// IMP=0x000000000022981f
- (void)beginInspectorPanZoomModeWithSingleTapBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002294b2
- (void)forceStopScrolling;	// IMP=0x0000000000229369
- (void)stopScrolling;	// IMP=0x0000000000229281
- (void)unlock:(id)arg1;	// IMP=0x00000000002291b3
- (void)cut:(id)arg1;	// IMP=0x000000000022914d
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000229091
- (_Bool)canBecomeFirstResponder;	// IMP=0x000000000022907d
- (id)extraMenuItems;	// IMP=0x0000000000229006
- (id)itemsToAddToEditMenuForRep:(id)arg1;	// IMP=0x0000000000228ffe
- (void)hideEditMenu;	// IMP=0x0000000000228fbf
- (void)toggleEditMenuForCurrentSelection;	// IMP=0x0000000000228f55
- (void)showEditMenu:(id)arg1;	// IMP=0x0000000000228ebe
- (void)p_buildMenuItems:(id)arg1 forSelection:(id)arg2;	// IMP=0x0000000000228751
- (void)showEditMenuForSelection:(id)arg1;	// IMP=0x00000000002283a0
- (struct CGRect)targetRectForEditMenu:(id)arg1;	// IMP=0x0000000000227bc2
- (id)viewForGestureRecognizer:(id)arg1;	// IMP=0x0000000000227b63
- (_Bool)repDragGestureRecognizer:(id)arg1 shouldBeginTapHoldTrackingAtScaledPoint:(struct CGPoint)arg2;	// IMP=0x0000000000227af5
- (_Bool)allowTouchOutsideCanvasView:(id)arg1 forGesture:(id)arg2;	// IMP=0x0000000000227a8e
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x00000000002276a2
- (_Bool)shouldIgnoreTextGestures;	// IMP=0x000000000022764e
- (_Bool)shouldSelectAndShowEditMenuOnFirstTapForRep:(id)arg1;	// IMP=0x0000000000227646
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0000000000227515
- (void)p_handleTapForEditMenu:(id)arg1;	// IMP=0x000000000022731a
- (void)p_allTouchesDone:(id)arg1;	// IMP=0x00000000002272d8
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;	// IMP=0x000000000022717d
- (void)handleDoubleTap:(id)arg1;	// IMP=0x000000000022709f
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;	// IMP=0x0000000000226f32
- (void)i_updateZoomGestureRecognizer;	// IMP=0x0000000000226eda
- (void)resetGesturesForContextSwitch;	// IMP=0x0000000000226cfc
- (void)setUpGestureRecognizers;	// IMP=0x00000000002268a1
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000002267d9
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000002266e3
@property(readonly, nonatomic) NSSet *panGestureRecognizers;
@property(readonly, nonatomic) NSArray *commonGestureRecognizers;
- (id)hitKnobWithTouch:(id)arg1 returningRep:(id *)arg2;	// IMP=0x000000000022643b
- (id)hitRepWithTouch:(id)arg1;	// IMP=0x0000000000226268
- (void)canvasDidUpdateRepsFromLayouts;	// IMP=0x0000000000226262
- (_Bool)isInFocusedContainer;	// IMP=0x000000000022625a
- (id)viewController;	// IMP=0x0000000000226251
- (id)asiOSCVC;	// IMP=0x0000000000226248
@property(readonly, nonatomic) CALayer *clippingLayer;
@property(readonly, nonatomic) CALayer *layer;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
- (_Bool)becomeFirstResponder;	// IMP=0x0000000000226113
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x00000000002260a1
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000000226060
- (void)p_updateWideGamut;	// IMP=0x0000000000225fcd
- (_Bool)p_shouldUseWideGamut;	// IMP=0x0000000000225f32
- (void)viewDidLoad;	// IMP=0x0000000000225be1
- (void)loadView;	// IMP=0x0000000000225bab
- (void)teardown;	// IMP=0x0000000000225a31
- (void)dealloc;	// IMP=0x000000000022584a
- (void)forwardInvocation:(id)arg1;	// IMP=0x0000000000225819
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x000000000022579d
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x00000000002256d0
@property(readonly, nonatomic) CDStruct_499be82c centerPlusMovementContentPlacement;
@property(readonly, nonatomic) CDStruct_499be82c touchContentPlacement;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

