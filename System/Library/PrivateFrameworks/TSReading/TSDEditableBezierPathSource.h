//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSReading/TSDMixing-Protocol.h>
#import <TSReading/TSDRealignablePathSource-Protocol.h>

@class NSArray, NSMutableArray, TSDBezierNode;

@interface TSDEditableBezierPathSource <TSDRealignablePathSource, TSDMixing>
{
    NSMutableArray *mSubpaths;	// 16 = 0x10
    unsigned long long mActiveSubpath;	// 24 = 0x18
    _Bool mHasLockedFlipTransform;	// 32 = 0x20
    struct CGAffineTransform mLockedFlipTransform;	// 40 = 0x28
}

+ (id)editableBezierPathSourceWithBezierPath:(id)arg1;	// IMP=0x000000000025f482
+ (id)editableBezierPathSourceWithPathSource:(id)arg1;	// IMP=0x000000000025f44e
+ (id)editableBezierPathSource;	// IMP=0x000000000025f435
@property(retain, nonatomic) NSMutableArray *subpaths; // @synthesize subpaths=mSubpaths;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;	// IMP=0x0000000000264d98
- (long long)mixingTypeWithObject:(id)arg1;	// IMP=0x0000000000264ca4
- (void)closePath;	// IMP=0x0000000000264add
- (void)smoothCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000264a7c
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x000000000026491d
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000264817
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002646d3
@property(retain, nonatomic) NSArray *nodeTypes;
@property(readonly, nonatomic) struct CGPath *subpathForSelection;
- (void)cutAtSelectedNodes;	// IMP=0x0000000000263ae4
- (_Bool)canCutAtSelectedNodes;	// IMP=0x00000000002638d6
- (void)splitSelectedNodes;	// IMP=0x00000000002635d4
- (void)splitSelectedEdges;	// IMP=0x00000000002634a8
- (id)splitEdge:(long long)arg1 at:(double)arg2 fromSubpath:(long long)arg3;	// IMP=0x000000000026313f
- (void)deleteSelectedEdges;	// IMP=0x0000000000262bb0
- (void)closeSelectedNodes;	// IMP=0x0000000000262959
- (_Bool)canCloseSelectedNodes;	// IMP=0x0000000000262762
- (void)connectSelectedNodes;	// IMP=0x000000000026259b
- (_Bool)canConnectSelectedNodes;	// IMP=0x000000000026256c
- (id)subpathsForConnectingUsingFirstSubpathFirstNode:(_Bool *)arg1 andSecondPathFirstNode:(_Bool *)arg2;	// IMP=0x00000000002622ef
- (void)selectSubpathForNode:(id)arg1 toggle:(_Bool)arg2;	// IMP=0x0000000000262225
@property(nonatomic, getter=isClosed) _Bool closed;
@property(readonly, nonatomic) _Bool isOpen;
- (void)smoothAllNodes;	// IMP=0x0000000000261f5b
- (void)smoothNode:(id)arg1;	// IMP=0x0000000000261eb9
- (void)sharpenAllNodes;	// IMP=0x0000000000261e95
- (void)toggleSelectedNodesToType:(int)arg1;	// IMP=0x0000000000261ba0
- (void)toggleNode:(id)arg1 toType:(int)arg2 prevNode:(id)arg3 nextNode:(id)arg4;	// IMP=0x0000000000261817
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)insertNodeAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;	// IMP=0x000000000026166a
- (_Bool)bezierPathUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 tolerance:(double)arg3;	// IMP=0x00000000002615ef
- (double)distanceToPoint:(struct CGPoint)arg1 subpathIndex:(unsigned long long *)arg2 elementIndex:(unsigned long long *)arg3 tValue:(double *)arg4 threshold:(double)arg5;	// IMP=0x000000000026143a
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;	// IMP=0x000000000026138a
- (void)deselectAllNodes;	// IMP=0x0000000000261366
- (void)selectAllNodes;	// IMP=0x0000000000261342
- (void)deleteSelectedNodes;	// IMP=0x000000000026132e
- (void)deleteSelectedNodesForced:(_Bool)arg1;	// IMP=0x000000000026111a
@property(readonly, nonatomic) _Bool deletingSelectedNodesWillDeleteShape;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
@property(readonly, nonatomic) _Bool isCompound;
- (void)removeNode:(id)arg1;	// IMP=0x0000000000260de6
@property(readonly, nonatomic) _Bool allNodesSelected;
@property(readonly, nonatomic) _Bool hasSelectedNode;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;	// IMP=0x0000000000260a5e
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;	// IMP=0x0000000000260927
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;	// IMP=0x0000000000260855
- (id)nodePriorToNode:(id)arg1;	// IMP=0x000000000026080b
- (void)removeLastNode;	// IMP=0x00000000002607c7
- (void)addNode:(id)arg1;	// IMP=0x000000000026077d
- (void)adjustGeometryForAlignToOrigin:(id)arg1;	// IMP=0x000000000026076d
- (void)alignToOrigin;	// IMP=0x000000000026056c
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000260432
- (void)setNaturalSize:(struct CGSize)arg1;	// IMP=0x000000000026002f
- (Class)preferredRepClass;	// IMP=0x000000000026001e
- (struct CGSize)naturalSize;	// IMP=0x000000000025ff8d
- (struct CGAffineTransform)pathFlipTransform;	// IMP=0x000000000025ff24
- (void)setLockedFlipTransform:(_Bool)arg1;	// IMP=0x000000000025feac
- (void)reverseDirection;	// IMP=0x000000000025fe68
@property(retain, nonatomic) NSMutableArray *nodes;
- (void)setBezierPath:(id)arg1;	// IMP=0x000000000025f762
- (void)convertToHobby;	// IMP=0x000000000025f73e
- (struct CGPath *)pathWithoutFlips;	// IMP=0x000000000025f713
- (id)bezierPathWithoutFlips;	// IMP=0x000000000025f6a1
- (_Bool)isCircular;	// IMP=0x000000000025f64b
- (_Bool)isRectangular;	// IMP=0x000000000025f5f5
- (void)dealloc;	// IMP=0x000000000025f5b3
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000025f4c8
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000025f37e
- (id)description;	// IMP=0x000000000025f32e
- (id)init;	// IMP=0x000000000025f2a7

@end

