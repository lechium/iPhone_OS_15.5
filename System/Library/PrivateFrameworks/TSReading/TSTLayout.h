//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TSReading/TSKSearchTarget-Protocol.h>
#import <TSReading/TSWPColumnMetrics-Protocol.h>
#import <TSReading/TSWPLayoutParent-Protocol.h>
#import <TSReading/TSWPStorageObserver-Protocol.h>

@class NSString, TSTEditingState, TSTLayoutHint, TSTLayoutSpaceBundle, TSTMasterLayout, TSTTableInfo, TSTTableModel, TSWPLayout, TSWPPadding;

@interface TSTLayout <TSKSearchTarget, TSWPColumnMetrics, TSWPLayoutParent, TSWPStorageObserver>
{
    TSTMasterLayout *mMasterLayout;	// 288 = 0x120
    TSTLayoutHint *mLayoutHint;	// 296 = 0x128
    struct CGRect mCanvasVisibleRect;	// 304 = 0x130
    struct CGRect mPreviousVisibleStrokeFrame;	// 336 = 0x150
    _Bool mProcessChangesFiltering;	// 368 = 0x170
    _Bool mTabsVisible;	// 369 = 0x171
    _Bool mTableNameVisibilityIsValid;	// 370 = 0x172
    _Bool mTableNameVisible;	// 371 = 0x173
    _Bool mNewCanvasRevealedHorizontally;	// 372 = 0x174
    _Bool mNewCanvasRevealedVertically;	// 373 = 0x175
    _Bool mLayoutDirectionIsLeftToRight;	// 374 = 0x176
    TSTLayoutSpaceBundle *mSpaceBundle;	// 376 = 0x178
    struct {
        double tableNameHeight;
        struct CGSize scaleToFitParent;
        struct CGSize scaleToFitEnclosingTextColumn;
    } mCached;	// 384 = 0x180
    struct CGRect mRenderingFrameForLayoutGeometryFromInfo;	// 424 = 0x1a8
    TSWPLayout *mContainedTextEditingLayout;	// 456 = 0x1c8
    struct UIEdgeInsets mCachedPaddingForEditingCell;	// 464 = 0x1d0
    struct CGRect mComputedEditingCellContentFrame;	// 496 = 0x1f0
    unsigned int mCachedVerticalAlignmentForEditingCell;	// 528 = 0x210
    struct CGSize mTableSizeWithoutStrokes;	// 536 = 0x218
    struct CGSize mStrokeDelta;	// 552 = 0x228
    struct CGSize mCapturedStrokeFrameSizeForInline;	// 568 = 0x238
    CDStruct_5f1f7aa9 mEditingSpillingTextRange;	// 584 = 0x248
    unsigned int mContainedTextEditorParagraphAlignment;	// 592 = 0x250
    _Bool mContainedTextEditorTextWraps;	// 596 = 0x254
    _Bool mContainedTextEditorSpills;	// 597 = 0x255
    struct CGSize mSpillingTextSize;	// 600 = 0x258
    int mCoordinatesChangedMaskForChrome;	// 616 = 0x268
}

@property(nonatomic) _Bool processChangesFiltering; // @synthesize processChangesFiltering=mProcessChangesFiltering;
@property(retain, nonatomic) TSTLayoutHint *layoutHint; // @synthesize layoutHint=mLayoutHint;
@property(retain, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingSpillingTextRange; // @synthesize editingSpillingTextRange=mEditingSpillingTextRange;
@property(retain, nonatomic) TSTLayoutSpaceBundle *spaceBundle; // @synthesize spaceBundle=mSpaceBundle;
@property(readonly, nonatomic) struct UIEdgeInsets paddingForEditingCell; // @synthesize paddingForEditingCell=mCachedPaddingForEditingCell;
@property(retain, nonatomic) TSWPLayout *containedTextEditingLayout; // @synthesize containedTextEditingLayout=mContainedTextEditingLayout;
@property(nonatomic) _Bool newCanvasRevealedVertically; // @synthesize newCanvasRevealedVertically=mNewCanvasRevealedVertically;
@property(nonatomic) _Bool newCanvasRevealedHorizontally; // @synthesize newCanvasRevealedHorizontally=mNewCanvasRevealedHorizontally;
- (_Bool)p_getLayoutDirectionLeftToRight;	// IMP=0x00000000003d14c4
- (unsigned int)p_defaultAlignmentForTableWritingDirection;	// IMP=0x00000000003d14ac
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;	// IMP=0x00000000003d12de
- (int)reapCoordinatesChangedMaskForChrome;	// IMP=0x00000000003d12c7
- (void)processChanges:(id)arg1;	// IMP=0x00000000003d0fc0
- (void)p_processChangeActions:(id)arg1;	// IMP=0x00000000003d0de4
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;	// IMP=0x00000000003d0ade
- (struct CGSize)initialTextSize;	// IMP=0x00000000003d0acd
- (struct CGRect)maskRectForTextLayout:(id)arg1;	// IMP=0x00000000003d090d
- (Class)repClassForTextLayout:(id)arg1;	// IMP=0x00000000003d0905
- (id)dependentsOfTextLayout:(id)arg1;	// IMP=0x00000000003d08ec
- (id)dependentLayouts;	// IMP=0x00000000003d086c
- (struct CGRect)p_computeSpillingTextFrameForLayout:(id)arg1 textSize:(struct CGSize)arg2 editingSpillRange:(CDStruct_5f1f7aa9 *)arg3;	// IMP=0x00000000003cf591
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;	// IMP=0x00000000003cf1fa
- (_Bool)p_layoutWhollyContainsGridRange:(CDStruct_58eae27c)arg1;	// IMP=0x00000000003cf01b
- (struct CGSize)p_rangeUpAndLeftOfIntersectionRangeOfGridRange:(CDStruct_58eae27c)arg1;	// IMP=0x00000000003ced9a
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;	// IMP=0x00000000003ced67
- (void)invalidateForAutosizingTextLayout:(id)arg1;	// IMP=0x00000000003ced05
- (unsigned int)verticalAlignmentForTextLayout:(id)arg1;	// IMP=0x00000000003cece6
- (double)maxAutoGrowWidthForTextLayout:(id)arg1;	// IMP=0x00000000003ceca6
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;	// IMP=0x00000000003cec88
- (unsigned int)naturalAlignmentForTextLayout:(id)arg1;	// IMP=0x00000000003cebfb
- (unsigned int)p_naturalAlignmentForCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003ce9f8
@property(readonly, nonatomic) struct CGRect computedEditingCellContentFrame;
- (_Bool)textIsVertical;	// IMP=0x00000000003cdd9c
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;	// IMP=0x00000000003cdc8c
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;	// IMP=0x00000000003cdc83
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;	// IMP=0x00000000003cdc7a
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
@property(readonly, nonatomic) struct CGSize adjustedInsets;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;	// IMP=0x00000000003cdb4c
- (struct CGRect)rectForSelection:(id)arg1;	// IMP=0x00000000003cd99c
- (_Bool)orderedBefore:(id)arg1;	// IMP=0x00000000003cd91f
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;	// IMP=0x00000000003cd913
- (id)childSearchTargets;	// IMP=0x00000000003cd90b
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000003cd8ec
- (void)layoutSearchForSpellingErrorsWithHitBlock:(CDUnknownBlockType)arg1 stop:(_Bool *)arg2;	// IMP=0x00000000003cd8ca
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000003cd8a5
- (void)removeContainedTextEditingLayout;	// IMP=0x00000000003cd670
- (void)updateChildrenFromInfo;	// IMP=0x00000000003cd486
- (id)children;	// IMP=0x00000000003cd420
- (void)setupContainedTextEditingLayout:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003cd41a
- (void)p_updateCachedStyleInformationFromCellID:(CDStruct_0441cfb5)arg1;	// IMP=0x00000000003cd2aa
- (_Bool)isBeingManipulated;	// IMP=0x00000000003cc9be
- (void)validateTableNameVisibility;	// IMP=0x00000000003cc180
- (void)invalidateTableNameVisibility;	// IMP=0x00000000003cc16f
- (void)bezierPathsForCellRegion:(id)arg1 transform:(struct CGAffineTransform)arg2 viewScale:(double)arg3 inset:(double)arg4 block:(CDUnknownBlockType)arg5;	// IMP=0x00000000003caee3
- (void)invalidateSize;	// IMP=0x00000000003c27d8
- (void)invalidate;	// IMP=0x00000000003c2780
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x00000000003c22a2
- (void)setNeedsDisplay;	// IMP=0x00000000003c2273
- (void)validate;	// IMP=0x00000000003c0f5d
- (_Bool)isZoomedEditing;	// IMP=0x00000000003c0f55
- (_Bool)inFindReplaceMode;	// IMP=0x00000000003c0f4d
- (_Bool)inPrintPreviewMode;	// IMP=0x00000000003c0f45
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;	// IMP=0x00000000003c0d4c
- (struct CGRect)alignmentFrame;	// IMP=0x00000000003c0bd6
- (int)wrapFitType;	// IMP=0x00000000003c0bce
- (id)initialInfoGeometry;	// IMP=0x00000000003c0b74
- (id)computeLayoutGeometry;	// IMP=0x00000000003c098d
- (id)layoutGeometryFromInfo;	// IMP=0x00000000003c0776
- (struct CGPoint)capturedInfoPositionForAttachment;	// IMP=0x00000000003c06c7
- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;	// IMP=0x00000000003c0645
- (struct CGSize)minimumSize;	// IMP=0x00000000003c0424
- (_Bool)canAspectRatioLockBeChangedByUser;	// IMP=0x00000000003c017c
- (_Bool)resizeMayChangeAspectRatio;	// IMP=0x00000000003c0174
- (_Bool)canRotateChildLayout:(id)arg1;	// IMP=0x00000000003c016c
- (_Bool)supportsRotation;	// IMP=0x00000000003c0164
- (void)offsetGeometryBy:(struct CGPoint)arg1;	// IMP=0x00000000003c010d
- (void)willBeRemovedFromLayoutController:(id)arg1;	// IMP=0x00000000003c00b4
- (void)willBeAddedToLayoutController:(id)arg1;	// IMP=0x00000000003c0055
- (void)dealloc;	// IMP=0x00000000003bff19
- (id)initWithInfo:(id)arg1;	// IMP=0x00000000003bfec1
- (id)initWithInfo:(id)arg1 layoutHint:(id)arg2;	// IMP=0x00000000003bfc15
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(nonatomic) struct CGSize scaleToFit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

