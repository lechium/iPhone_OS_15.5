//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

#import <MusicLibrary/NSCopying-Protocol.h>

@class MIPAlbum, MIPArtist, MIPGenre, MIPPlaybackInfo, NSString;

@interface MIPAudiobook : PBCodable <NSCopying>
{
    MIPAlbum *_album;	// 8 = 0x8
    MIPArtist *_artist;	// 16 = 0x10
    int _audioFormat;	// 24 = 0x18
    MIPArtist *_composer;	// 32 = 0x20
    int _discNumber;	// 40 = 0x28
    MIPGenre *_genre;	// 48 = 0x30
    NSString *_hlsPlaylistURL;	// 56 = 0x38
    MIPPlaybackInfo *_playbackInfo;	// 64 = 0x40
    int _trackNumber;	// 72 = 0x48
    int _userRating;	// 76 = 0x4c
    _Bool _excludeFromShuffle;	// 80 = 0x50
    _Bool _hasVideo;	// 81 = 0x51
    struct {
        unsigned int audioFormat:1;
        unsigned int discNumber:1;
        unsigned int trackNumber:1;
        unsigned int userRating:1;
        unsigned int excludeFromShuffle:1;
        unsigned int hasVideo:1;
    } _has;	// 84 = 0x54
}

- (void).cxx_destruct;	// IMP=0x00000000000e9bef
@property(retain, nonatomic) NSString *hlsPlaylistURL; // @synthesize hlsPlaylistURL=_hlsPlaylistURL;
@property(retain, nonatomic) MIPPlaybackInfo *playbackInfo; // @synthesize playbackInfo=_playbackInfo;
@property(nonatomic) _Bool hasVideo; // @synthesize hasVideo=_hasVideo;
@property(nonatomic) int audioFormat; // @synthesize audioFormat=_audioFormat;
@property(nonatomic) _Bool excludeFromShuffle; // @synthesize excludeFromShuffle=_excludeFromShuffle;
@property(nonatomic) int userRating; // @synthesize userRating=_userRating;
@property(nonatomic) int trackNumber; // @synthesize trackNumber=_trackNumber;
@property(nonatomic) int discNumber; // @synthesize discNumber=_discNumber;
@property(retain, nonatomic) MIPGenre *genre; // @synthesize genre=_genre;
@property(retain, nonatomic) MIPArtist *composer; // @synthesize composer=_composer;
@property(retain, nonatomic) MIPArtist *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) MIPAlbum *album; // @synthesize album=_album;
- (void)mergeFrom:(id)arg1;	// IMP=0x00000000000e98b2
- (unsigned long long)hash;	// IMP=0x00000000000e9738
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000e9481
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000e9290
- (void)copyTo:(id)arg1;	// IMP=0x00000000000e9104
- (void)writeTo:(id)arg1;	// IMP=0x00000000000e8f67
- (_Bool)readFrom:(id)arg1;	// IMP=0x00000000000e8f5a
- (id)dictionaryRepresentation;	// IMP=0x00000000000e8b64
- (id)description;	// IMP=0x00000000000e8ab5
@property(readonly, nonatomic) _Bool hasHlsPlaylistURL;
@property(readonly, nonatomic) _Bool hasPlaybackInfo;
@property(nonatomic) _Bool hasHasVideo;
@property(nonatomic) _Bool hasAudioFormat;
@property(nonatomic) _Bool hasExcludeFromShuffle;
@property(nonatomic) _Bool hasUserRating;
@property(nonatomic) _Bool hasTrackNumber;
@property(nonatomic) _Bool hasDiscNumber;
@property(readonly, nonatomic) _Bool hasGenre;
@property(readonly, nonatomic) _Bool hasComposer;
@property(readonly, nonatomic) _Bool hasArtist;
@property(readonly, nonatomic) _Bool hasAlbum;

@end

