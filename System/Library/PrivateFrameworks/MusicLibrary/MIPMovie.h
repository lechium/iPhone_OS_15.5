//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

#import <MusicLibrary/NSCopying-Protocol.h>

@class MIPArtist, NSData, NSString;

@interface MIPMovie : PBCodable <NSCopying>
{
    long long _rentalDuration;	// 8 = 0x8
    long long _rentalPlaybackDuration;	// 16 = 0x10
    long long _rentalPlaybackStartedDateTime;	// 24 = 0x18
    long long _rentalStartedDateTime;	// 32 = 0x20
    MIPArtist *_artist;	// 40 = 0x28
    int _audioLanguage;	// 48 = 0x30
    int _audioTrackId;	// 52 = 0x34
    int _audioTrackIndex;	// 56 = 0x38
    NSString *_extendedContentName;	// 64 = 0x40
    NSData *_flattenedChapterData;	// 72 = 0x48
    NSString *_movieInfo;	// 80 = 0x50
    int _subtitleLanguage;	// 88 = 0x58
    int _subtitleTrackIndex;	// 92 = 0x5c
    int _videoQuality;	// 96 = 0x60
    _Bool _hasAlternateAudio;	// 100 = 0x64
    _Bool _hasChapterData;	// 101 = 0x65
    _Bool _hasSubtitles;	// 102 = 0x66
    _Bool _rental;	// 103 = 0x67
    struct {
        unsigned int rentalDuration:1;
        unsigned int rentalPlaybackDuration:1;
        unsigned int rentalPlaybackStartedDateTime:1;
        unsigned int rentalStartedDateTime:1;
        unsigned int audioLanguage:1;
        unsigned int audioTrackId:1;
        unsigned int audioTrackIndex:1;
        unsigned int subtitleLanguage:1;
        unsigned int subtitleTrackIndex:1;
        unsigned int videoQuality:1;
        unsigned int hasAlternateAudio:1;
        unsigned int hasChapterData:1;
        unsigned int hasSubtitles:1;
        unsigned int rental:1;
    } _has;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x00000000000f8ccf
@property(retain, nonatomic) NSData *flattenedChapterData; // @synthesize flattenedChapterData=_flattenedChapterData;
@property(nonatomic) long long rentalStartedDateTime; // @synthesize rentalStartedDateTime=_rentalStartedDateTime;
@property(nonatomic) long long rentalPlaybackStartedDateTime; // @synthesize rentalPlaybackStartedDateTime=_rentalPlaybackStartedDateTime;
@property(nonatomic) long long rentalPlaybackDuration; // @synthesize rentalPlaybackDuration=_rentalPlaybackDuration;
@property(nonatomic) long long rentalDuration; // @synthesize rentalDuration=_rentalDuration;
@property(nonatomic) int subtitleTrackIndex; // @synthesize subtitleTrackIndex=_subtitleTrackIndex;
@property(nonatomic) int subtitleLanguage; // @synthesize subtitleLanguage=_subtitleLanguage;
@property(nonatomic) int audioTrackId; // @synthesize audioTrackId=_audioTrackId;
@property(nonatomic) int audioTrackIndex; // @synthesize audioTrackIndex=_audioTrackIndex;
@property(nonatomic) int audioLanguage; // @synthesize audioLanguage=_audioLanguage;
@property(nonatomic) _Bool hasSubtitles; // @synthesize hasSubtitles=_hasSubtitles;
@property(nonatomic) _Bool hasAlternateAudio; // @synthesize hasAlternateAudio=_hasAlternateAudio;
@property(retain, nonatomic) NSString *movieInfo; // @synthesize movieInfo=_movieInfo;
@property(retain, nonatomic) NSString *extendedContentName; // @synthesize extendedContentName=_extendedContentName;
@property(nonatomic) _Bool hasChapterData; // @synthesize hasChapterData=_hasChapterData;
@property(nonatomic) _Bool rental; // @synthesize rental=_rental;
@property(nonatomic) int videoQuality; // @synthesize videoQuality=_videoQuality;
@property(retain, nonatomic) MIPArtist *artist; // @synthesize artist=_artist;
- (void)mergeFrom:(id)arg1;	// IMP=0x00000000000f88f1
- (unsigned long long)hash;	// IMP=0x00000000000f869a
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000f82bf
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000f802a
- (void)copyTo:(id)arg1;	// IMP=0x00000000000f7ddb
- (void)writeTo:(id)arg1;	// IMP=0x00000000000f7b62
- (_Bool)readFrom:(id)arg1;	// IMP=0x00000000000f7b55
- (id)dictionaryRepresentation;	// IMP=0x00000000000f7577
- (id)description;	// IMP=0x00000000000f74c8
@property(readonly, nonatomic) _Bool hasFlattenedChapterData;
@property(nonatomic) _Bool hasRentalStartedDateTime;
@property(nonatomic) _Bool hasRentalPlaybackStartedDateTime;
@property(nonatomic) _Bool hasRentalPlaybackDuration;
@property(nonatomic) _Bool hasRentalDuration;
@property(nonatomic) _Bool hasSubtitleTrackIndex;
@property(nonatomic) _Bool hasSubtitleLanguage;
@property(nonatomic) _Bool hasAudioTrackId;
@property(nonatomic) _Bool hasAudioTrackIndex;
@property(nonatomic) _Bool hasAudioLanguage;
@property(nonatomic) _Bool hasHasSubtitles;
@property(nonatomic) _Bool hasHasAlternateAudio;
@property(readonly, nonatomic) _Bool hasMovieInfo;
@property(readonly, nonatomic) _Bool hasExtendedContentName;
@property(nonatomic) _Bool hasHasChapterData;
@property(nonatomic) _Bool hasRental;
@property(nonatomic) _Bool hasVideoQuality;
@property(readonly, nonatomic) _Bool hasArtist;

@end

