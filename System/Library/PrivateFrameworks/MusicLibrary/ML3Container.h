//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class ML3Predicate, NSArray, NSString;

@interface ML3Container
{
}

+ (_Bool)_reloadContainedMediaTypes:(_Bool)arg1 removedMediaTypes:(id)arg2 addedMediaTypes:(id)arg3 notify:(_Bool)arg4 incrementEntityRevision:(_Bool)arg5 usingLibrary:(id)arg6 connection:(id)arg7 forContainerPersistentID:(long long)arg8;	// IMP=0x00000000000a9a7a
+ (void)_insertNewSmartPlaylist:(id)arg1 criteriaBlob:(id)arg2 evaluationOrder:(unsigned int)arg3 limited:(_Bool)arg4 trackOrder:(unsigned int)arg5 distinguishedKind:(int)arg6 inLibrary:(id)arg7 cachedNameOrders:(id)arg8;	// IMP=0x00000000000a9708
+ (id)_allStaticItemContainersInLibrary:(id)arg1 usingConnection:(id)arg2;	// IMP=0x00000000000a95df
+ (void)reloadContainedMediaTypesForContainerWithPersistID:(long long)arg1 usingConnection:(id)arg2;	// IMP=0x00000000000a953f
+ (void)removeNonLibraryItemsFromContainer:(id)arg1 usingConnection:(id)arg2;	// IMP=0x00000000000a9389
+ (void)removeNonLibraryItemsFromContainersInLibrary:(id)arg1 usingConnection:(id)arg2;	// IMP=0x00000000000a921e
+ (void)removeAnyNonLibraryItemsInPersistentIDs:(id)arg1 fromContainersInLibrary:(id)arg2 usingConnection:(id)arg3;	// IMP=0x00000000000a8f6b
+ (_Bool)updateLovedPlaylistByRemovingTrackWithPersistentID:(id)arg1 inLibrary:(id)arg2;	// IMP=0x00000000000a8e5b
+ (_Bool)updateLovedPlaylistByAddingTrackWithPersistentID:(id)arg1 inLibrary:(id)arg2;	// IMP=0x00000000000a8d4b
+ (void)_lovedPlaylistContainerPID:(id *)arg1 trackPositions:(id *)arg2 forTrackWithPersistentID:(id)arg3 usingConnection:(id)arg4;	// IMP=0x00000000000a8ae3
+ (void)populateMediaTypesOfStaticContainersInLibrary:(id)arg1;	// IMP=0x00000000000a8a27
+ (void)_removeMediaTypesFromContainerWithPersistentID:(long long)arg1 mediaTypes:(id)arg2 connection:(id)arg3;	// IMP=0x00000000000a895a
+ (void)_addMediaTypesToContainerWithPersistentID:(long long)arg1 mediaTypes:(id)arg2 connection:(id)arg3;	// IMP=0x00000000000a8864
+ (void)_clearContainerMediaTypeInContainerWithPersistentID:(long long)arg1 connection:(id)arg2;	// IMP=0x00000000000a87c5
+ (id)_mediaTypesForTracksInContainerWithPersistentID:(long long)arg1 connection:(id)arg2;	// IMP=0x00000000000a866e
+ (id)_mediaTypesForTracksWithPersistentIDs:(id)arg1 usingConnection:(id)arg2;	// IMP=0x00000000000a8431
+ (void)_updateContainedMediaTypeInContainerWithPersistentID:(long long)arg1 connection:(id)arg2 itemUpdateBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000a8399
+ (_Bool)deleteFromLibrary:(id)arg1 deletionType:(int)arg2 persistentIDs:(const long long *)arg3 count:(unsigned long long)arg4;	// IMP=0x00000000000a827c
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)arg1 inLibrary:(id)arg2;	// IMP=0x00000000000a81b0
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)arg1;	// IMP=0x00000000000a7f6f
+ (_Bool)updateBuiltInSmartPlaylistNamesForCurrentLanguageInLibrary:(id)arg1;	// IMP=0x00000000000a7dd7
+ (id)predicateForCriteriaList:(struct SearchCriteriaList *)arg1 parentMatchedAny:(_Bool)arg2;	// IMP=0x00000000000a7a83
+ (_Bool)hasCriterionInCriteriaList:(struct SearchCriteriaList *)arg1 forITDBTrackField:(int)arg2;	// IMP=0x00000000000a78f2
+ (void)populateSortOrdersOfPropertyValues:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3;	// IMP=0x00000000000a7807
+ (_Bool)smartCriteriaCanBeEvaluated:(id)arg1;	// IMP=0x00000000000a76c3
+ (id)nextFilepathForPlaylistType:(int)arg1 withPersistentID:(unsigned long long)arg2 inLibrary:(id)arg3;	// IMP=0x00000000000a75a1
+ (_Bool)assistantLibraryContentsChangeForProperty:(id)arg1;	// IMP=0x00000000000a7585
+ (_Bool)libraryContentsChangeForProperty:(id)arg1;	// IMP=0x00000000000a7569
+ (_Bool)libraryDynamicChangeForProperty:(id)arg1;	// IMP=0x00000000000a7550
+ (id)defaultFilterPredicates;	// IMP=0x00000000000a74b0
+ (id)persistentIDColumnForTable:(id)arg1;	// IMP=0x00000000000a7497
+ (id)extraTablesToDelete;	// IMP=0x00000000000a7486
+ (id)foreignColumnForProperty:(id)arg1;	// IMP=0x00000000000a746d
+ (id)foreignDatabaseTableForProperty:(id)arg1;	// IMP=0x00000000000a7454
+ (id)sectionPropertyForProperty:(id)arg1;	// IMP=0x00000000000a743b
+ (id)joinClausesForProperty:(id)arg1;	// IMP=0x00000000000a7398
+ (id)defaultOrderingTerms;	// IMP=0x00000000000a7387
+ (long long)revisionTrackingCode;	// IMP=0x00000000000a737c
+ (id)databaseTable;	// IMP=0x00000000000a736f
+ (void)initialize;	// IMP=0x00000000000a675f
+ (int)protocolSortTypeFromTrackOrder:(unsigned int)arg1;	// IMP=0x0000000000132319
+ (unsigned int)trackOrderFromProtocolSortType:(int)arg1;	// IMP=0x00000000001322fb
- (_Bool)_setItemPersistentIDs:(id)arg1 reloadContainedMediaTypes:(_Bool)arg2 removedMediaTypes:(id)arg3 addedMediaTypes:(id)arg4 notify:(_Bool)arg5 incrementEntityRevision:(_Bool)arg6 usingConnection:(id)arg7;	// IMP=0x00000000000a3b11
- (_Bool)_supportsOrderedTrackOperations;	// IMP=0x00000000000a3a91
- (void)_setContainerSeedItemPersistentIDValue:(id)arg1;	// IMP=0x00000000000a39df
- (_Bool)_removeTracksAtIndexes:(id)arg1 notify:(_Bool)arg2 usingConnection:(id)arg3;	// IMP=0x00000000000a379e
- (_Bool)_reloadContainedMediaTypes:(_Bool)arg1 removedMediaTypes:(id)arg2 addedMediaTypes:(id)arg3 notify:(_Bool)arg4 incrementEntityRevision:(_Bool)arg5 usingConnection:(id)arg6;	// IMP=0x00000000000a36c7
- (long long)_maxPositionForTracksUsingConnection:(id)arg1;	// IMP=0x00000000000a3599
- (_Bool)isBuiltInSmartPlaylist;	// IMP=0x00000000000a3525
- (id)childPlaylistPersistentIds;	// IMP=0x00000000000a33cd
- (id)trackPersistentIds;	// IMP=0x00000000000a325b
- (_Bool)removeFirstTrack;	// IMP=0x00000000000a31fa
- (_Bool)removeTracksAtIndexes:(id)arg1 notify:(_Bool)arg2;	// IMP=0x00000000000a3059
- (_Bool)moveTrackFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;	// IMP=0x00000000000a2ef3
- (_Bool)appendTracksWithPersistentIDs:(id)arg1 notify:(_Bool)arg2;	// IMP=0x00000000000a2cf8
- (_Bool)setTracksWithPersistentIDs:(id)arg1 notify:(_Bool)arg2;	// IMP=0x00000000000a2b71
- (_Bool)removeAllTracks;	// IMP=0x00000000000a2aab
@property(readonly, copy, nonatomic) NSArray *displayOrderingTerms;
@property(readonly, copy, nonatomic) NSArray *cloudDisplayOrderingTerms;
@property(readonly, nonatomic) long long limitValue;
@property(readonly, copy, nonatomic) NSArray *limitOrderingTerms;
- (id)evaluationOrderingTerms;	// IMP=0x00000000000a24a8
@property(readonly, copy, nonatomic) NSString *limitingProperty;
@property(readonly, nonatomic, getter=isLimitOrderingDescending) _Bool limitOrderingDescending;
@property(readonly, nonatomic, getter=isLimitedByCount) _Bool limitedByCount;
- (_Bool)isEvaluationOrderingDescending;	// IMP=0x00000000000a22a3
@property(readonly, nonatomic) ML3Predicate *smartCriteriaPredicate;
- (struct SearchCriteriaList *)importedCriteriaList;	// IMP=0x00000000000a20f3
- (void)setValues:(id)arg1 forProperties:(id)arg2 async:(_Bool)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000a1dfe
- (id)initWithDictionary:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 usingConnection:(id)arg4;	// IMP=0x00000000000a15d8
- (id)protocolItem;	// IMP=0x000000000012fb0f
- (id)multiverseIdentifier;	// IMP=0x000000000012f9ae
- (id)_stringStringForCriteriaInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019e7e4
- (id)_stringForTrackFieldMediaKind:(long long)arg1;	// IMP=0x000000000019e564
- (id)_stringForTrackFieldCloudStatus:(long long)arg1;	// IMP=0x000000000019e4e0
- (id)_stringForCriterionMatchType:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019e2fc
- (id)_stringForCriterionMatchKey:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019da18
- (id)_stringForCriterionBuffer:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019d70b
- (id)_formatTime:(long long)arg1;	// IMP=0x000000000019d64d
- (id)_convertNumericValueFromCriterionMatchKey:(unsigned int)arg1 criteriaValue:(long long)arg2;	// IMP=0x000000000019d5cb
- (id)_numericStringForCriteriaInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019d37a
- (id)_nonzeroStringForCriteriaInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019d368
- (id)_dateStringForCriteriaInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019d070
- (id)_booleanStringForCriteriaInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019cf9a
- (id)_addUnitesForCriterionInfo:(CDStruct_ca99c6a1)arg1;	// IMP=0x000000000019cf60
- (id)_criteriaListDescription:(struct SearchCriteriaList *)arg1 level:(long long)arg2;	// IMP=0x000000000019cb78
- (id)criteriaListDescription;	// IMP=0x000000000019caac

@end

