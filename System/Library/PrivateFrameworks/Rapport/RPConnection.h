//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Rapport/RPAuthenticatable-Protocol.h>

@class CUBLEConnection, CUBluetoothScalablePipe, CUBonjourDevice, CUHomeKitManager, CUNetLinkManager, CUPairingSession, CUPairingStream, CUTCPConnection, NSArray, NSData, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSString, NSUUID, RPCompanionLinkDevice, RPIdentity, RPIdentityDaemon;
@protocol CUReadWriteRequestable, OS_dispatch_queue, OS_dispatch_source;

@interface RPConnection : NSObject <RPAuthenticatable>
{
    _Bool _activateCalled;	// 8 = 0x8
    NSString *_peerAddrString;	// 16 = 0x10
    NSString *_peerHomeKitUserIdentifier;	// 24 = 0x18
    NSString *_selfAddrString;	// 32 = 0x20
    _Bool _invalidateCalled;	// 40 = 0x28
    _Bool _invalidateDone;	// 41 = 0x29
    NSObject<OS_dispatch_source> *_idleTimer;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_probeTimer;	// 56 = 0x38
    _Bool _retryFired;	// 64 = 0x40
    unsigned long long _retryTicks;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_retryTimer;	// 80 = 0x50
    NSObject<OS_dispatch_source> *_startTimer;	// 88 = 0x58
    int _internalState;	// 96 = 0x60
    _Bool _stepDone;	// 100 = 0x64
    NSError *_stepError;	// 104 = 0x68
    unsigned long long _highPriorityAuthTagLength;	// 112 = 0x70
    CUPairingStream *_highPriorityStream;	// 120 = 0x78
    NSString *_homeKitIdentityIdentifier;	// 128 = 0x80
    NSData *_homeKitIdentitySignature;	// 136 = 0x88
    unsigned long long _mainAuthTagLength;	// 144 = 0x90
    CUPairingStream *_mainStream;	// 152 = 0x98
    int _pairSetupAuthType;	// 160 = 0xa0
    CUPairingSession *_pairSetupSession;	// 168 = 0xa8
    int _pairVerifyAuthType;	// 176 = 0xb0
    _Bool _pairVerifyCompleted;	// 180 = 0xb4
    _Bool _pairVerifyFailed;	// 181 = 0xb5
    int _pairVerifyIdentityType;	// 184 = 0xb8
    CUPairingSession *_pairVerifySession;	// 192 = 0xc0
    _Bool _pairVerifyUsedIdentity;	// 200 = 0xc8
    CDStruct_f8a3a8cf _readFrame;	// 201 = 0xc9
    CDStruct_f8a3a8cf _readFrameBTPipeHighPriority;	// 207 = 0xcf
    id <CUReadWriteRequestable> _requestable;	// 216 = 0xd8
    NSMutableDictionary *_requests;	// 224 = 0xe0
    int _retryCount;	// 232 = 0xe8
    NSMutableArray *_sendArray;	// 240 = 0xf0
    _Bool _showPasswordCalled;	// 248 = 0xf8
    struct LogCategory *_ucat;	// 256 = 0x100
    unsigned int _xidLast;	// 264 = 0x108
    unsigned long long _receivedFrameCountCurrent;	// 272 = 0x110
    unsigned long long _receivedFrameCountLast;	// 280 = 0x118
    _Bool _clientMode;	// 288 = 0x120
    _Bool _flowControlReadEnabled;	// 289 = 0x121
    _Bool _invalidationHandled;	// 290 = 0x122
    _Bool _preAuthEnabled;	// 291 = 0x123
    _Bool _present;	// 292 = 0x124
    unsigned int _pairSetupFlags;	// 296 = 0x128
    unsigned int _pairVerifyFlags;	// 300 = 0x12c
    int _passwordType;	// 304 = 0x130
    int _passwordTypeActual;	// 308 = 0x134
    unsigned int _flags;	// 312 = 0x138
    int _keepAliveSeconds;	// 316 = 0x13c
    int _linkType;	// 320 = 0x140
    int _preferredIdentityType;	// 324 = 0x144
    int _state;	// 328 = 0x148
    unsigned int _trafficFlags;	// 332 = 0x14c
    NSArray *_allowedMACAddresses;	// 336 = 0x150
    NSArray *_pairSetupACL;	// 344 = 0x158
    NSString *_password;	// 352 = 0x160
    CDUnknownBlockType _authCompletionHandler;	// 360 = 0x168
    CDUnknownBlockType _showPasswordHandler;	// 368 = 0x170
    CDUnknownBlockType _hidePasswordHandler;	// 376 = 0x178
    CDUnknownBlockType _promptForPasswordHandler;	// 384 = 0x180
    NSString *_appID;	// 392 = 0x188
    NSDictionary *_appInfoPeer;	// 400 = 0x190
    NSDictionary *_appInfoSelf;	// 408 = 0x198
    long long _bleClientUseCase;	// 416 = 0x1a0
    CUBLEConnection *_bleConnection;	// 424 = 0x1a8
    NSUUID *_blePeerIdentifier;	// 432 = 0x1b0
    CUBonjourDevice *_bonjourPeerDevice;	// 440 = 0x1b8
    CUBluetoothScalablePipe *_btPipe;	// 448 = 0x1c0
    id _client;	// 456 = 0x1c8
    unsigned long long _controlFlags;	// 464 = 0x1d0
    NSString *_destinationString;	// 472 = 0x1d8
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 480 = 0x1e0
    CDUnknownBlockType _flowControlWriteChangedHandler;	// 488 = 0x1e8
    RPIdentity *_forcedPeerIdentity;	// 496 = 0x1f0
    RPIdentity *_forcedSelfIdentity;	// 504 = 0x1f8
    CUHomeKitManager *_homeKitManager;	// 512 = 0x200
    CDUnknownBlockType _homeKitUserIdentifierHandler;	// 520 = 0x208
    NSString *_identifierOverride;	// 528 = 0x210
    RPIdentityDaemon *_identityDaemon;	// 536 = 0x218
    RPIdentity *_identityResolved;	// 544 = 0x220
    RPIdentity *_identityVerified;	// 552 = 0x228
    CDUnknownBlockType _invalidationHandler;	// 560 = 0x230
    NSString *_label;	// 568 = 0x238
    RPCompanionLinkDevice *_localDeviceInfo;	// 576 = 0x240
    CUNetLinkManager *_netLinkManager;	// 584 = 0x248
    CDUnknownBlockType _pairVerifyCompletion;	// 592 = 0x250
    RPCompanionLinkDevice *_peerDeviceInfo;	// 600 = 0x258
    NSString *_peerIdentifier;	// 608 = 0x260
    CDUnknownBlockType _peerUpdatedHandler;	// 616 = 0x268
    CDUnknownBlockType _proxyDeviceUpdateHandler;	// 624 = 0x270
    NSData *_pskData;	// 632 = 0x278
    CDUnknownBlockType _readErrorHandler;	// 640 = 0x280
    CDUnknownBlockType _receivedEventHandler;	// 648 = 0x288
    CDUnknownBlockType _receivedRequestHandler;	// 656 = 0x290
    CDUnknownBlockType _sessionStartHandler;	// 664 = 0x298
    CDUnknownBlockType _stateChangedHandler;	// 672 = 0x2a0
    unsigned long long _statusFlags;	// 680 = 0x2a8
    CUTCPConnection *_tcpConnection;	// 688 = 0x2b0
    NSMutableArray *_proxyDevices;	// 696 = 0x2b8
    CUBluetoothScalablePipe *_btPipeHighPriority;	// 704 = 0x2c0
}

- (void).cxx_destruct;	// IMP=0x0000000000026eaf
@property(retain, nonatomic) CUBluetoothScalablePipe *btPipeHighPriority; // @synthesize btPipeHighPriority=_btPipeHighPriority;
@property(retain, nonatomic) NSMutableArray *proxyDevices; // @synthesize proxyDevices=_proxyDevices;
@property(nonatomic) unsigned int trafficFlags; // @synthesize trafficFlags=_trafficFlags;
@property(retain, nonatomic) CUTCPConnection *tcpConnection; // @synthesize tcpConnection=_tcpConnection;
@property(readonly, nonatomic) unsigned long long statusFlags; // @synthesize statusFlags=_statusFlags;
@property(copy, nonatomic) CDUnknownBlockType stateChangedHandler; // @synthesize stateChangedHandler=_stateChangedHandler;
@property(nonatomic) int state; // @synthesize state=_state;
@property(copy, nonatomic) CDUnknownBlockType sessionStartHandler; // @synthesize sessionStartHandler=_sessionStartHandler;
@property(copy, nonatomic) CDUnknownBlockType receivedRequestHandler; // @synthesize receivedRequestHandler=_receivedRequestHandler;
@property(copy, nonatomic) CDUnknownBlockType receivedEventHandler; // @synthesize receivedEventHandler=_receivedEventHandler;
@property(copy, nonatomic) CDUnknownBlockType readErrorHandler; // @synthesize readErrorHandler=_readErrorHandler;
@property(copy, nonatomic) NSData *pskData; // @synthesize pskData=_pskData;
@property(copy, nonatomic) CDUnknownBlockType proxyDeviceUpdateHandler; // @synthesize proxyDeviceUpdateHandler=_proxyDeviceUpdateHandler;
@property(nonatomic) _Bool present; // @synthesize present=_present;
@property(nonatomic) int preferredIdentityType; // @synthesize preferredIdentityType=_preferredIdentityType;
@property(nonatomic) _Bool preAuthEnabled; // @synthesize preAuthEnabled=_preAuthEnabled;
@property(copy, nonatomic) CDUnknownBlockType peerUpdatedHandler; // @synthesize peerUpdatedHandler=_peerUpdatedHandler;
@property(copy, nonatomic) NSString *peerIdentifier; // @synthesize peerIdentifier=_peerIdentifier;
@property(readonly, nonatomic) NSString *peerHomeKitUserIdentifier; // @synthesize peerHomeKitUserIdentifier=_peerHomeKitUserIdentifier;
@property(readonly, nonatomic) RPCompanionLinkDevice *peerDeviceInfo; // @synthesize peerDeviceInfo=_peerDeviceInfo;
@property(readonly, nonatomic) NSString *peerAddrString; // @synthesize peerAddrString=_peerAddrString;
@property(copy, nonatomic) CDUnknownBlockType pairVerifyCompletion; // @synthesize pairVerifyCompletion=_pairVerifyCompletion;
@property(retain, nonatomic) CUNetLinkManager *netLinkManager; // @synthesize netLinkManager=_netLinkManager;
@property(retain, nonatomic) RPCompanionLinkDevice *localDeviceInfo; // @synthesize localDeviceInfo=_localDeviceInfo;
@property(readonly, nonatomic) int linkType; // @synthesize linkType=_linkType;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) int keepAliveSeconds; // @synthesize keepAliveSeconds=_keepAliveSeconds;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(nonatomic) _Bool invalidationHandled; // @synthesize invalidationHandled=_invalidationHandled;
@property(readonly, nonatomic) RPIdentity *identityVerified; // @synthesize identityVerified=_identityVerified;
@property(retain, nonatomic) RPIdentity *identityResolved; // @synthesize identityResolved=_identityResolved;
@property(retain, nonatomic) RPIdentityDaemon *identityDaemon; // @synthesize identityDaemon=_identityDaemon;
@property(copy, nonatomic) NSString *identifierOverride; // @synthesize identifierOverride=_identifierOverride;
@property(copy, nonatomic) CDUnknownBlockType homeKitUserIdentifierHandler; // @synthesize homeKitUserIdentifierHandler=_homeKitUserIdentifierHandler;
@property(retain, nonatomic) CUHomeKitManager *homeKitManager; // @synthesize homeKitManager=_homeKitManager;
@property(retain, nonatomic) RPIdentity *forcedSelfIdentity; // @synthesize forcedSelfIdentity=_forcedSelfIdentity;
@property(retain, nonatomic) RPIdentity *forcedPeerIdentity; // @synthesize forcedPeerIdentity=_forcedPeerIdentity;
@property(copy, nonatomic) CDUnknownBlockType flowControlWriteChangedHandler; // @synthesize flowControlWriteChangedHandler=_flowControlWriteChangedHandler;
@property(nonatomic) _Bool flowControlReadEnabled; // @synthesize flowControlReadEnabled=_flowControlReadEnabled;
@property(nonatomic) unsigned int flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) NSString *destinationString; // @synthesize destinationString=_destinationString;
@property(nonatomic) unsigned long long controlFlags; // @synthesize controlFlags=_controlFlags;
@property(nonatomic) _Bool clientMode; // @synthesize clientMode=_clientMode;
@property(retain, nonatomic) id client; // @synthesize client=_client;
@property(retain, nonatomic) CUBluetoothScalablePipe *btPipe; // @synthesize btPipe=_btPipe;
@property(retain, nonatomic) CUBonjourDevice *bonjourPeerDevice; // @synthesize bonjourPeerDevice=_bonjourPeerDevice;
@property(copy, nonatomic) NSUUID *blePeerIdentifier; // @synthesize blePeerIdentifier=_blePeerIdentifier;
@property(retain, nonatomic) CUBLEConnection *bleConnection; // @synthesize bleConnection=_bleConnection;
@property(nonatomic) long long bleClientUseCase; // @synthesize bleClientUseCase=_bleClientUseCase;
@property(copy, nonatomic) NSDictionary *appInfoSelf; // @synthesize appInfoSelf=_appInfoSelf;
@property(readonly, copy, nonatomic) NSDictionary *appInfoPeer; // @synthesize appInfoPeer=_appInfoPeer;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(copy, nonatomic) CDUnknownBlockType promptForPasswordHandler; // @synthesize promptForPasswordHandler=_promptForPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType hidePasswordHandler; // @synthesize hidePasswordHandler=_hidePasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType showPasswordHandler; // @synthesize showPasswordHandler=_showPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType authCompletionHandler; // @synthesize authCompletionHandler=_authCompletionHandler;
@property(readonly, nonatomic) int passwordTypeActual; // @synthesize passwordTypeActual=_passwordTypeActual;
@property(nonatomic) int passwordType; // @synthesize passwordType=_passwordType;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(nonatomic) unsigned int pairVerifyFlags; // @synthesize pairVerifyFlags=_pairVerifyFlags;
@property(nonatomic) unsigned int pairSetupFlags; // @synthesize pairSetupFlags=_pairSetupFlags;
@property(retain, nonatomic) NSArray *pairSetupACL; // @synthesize pairSetupACL=_pairSetupACL;
@property(retain, nonatomic) NSArray *allowedMACAddresses; // @synthesize allowedMACAddresses=_allowedMACAddresses;
- (id)_allowedMACAddressesForMCFeature:(id)arg1;	// IMP=0x000000000002656d
- (id)_systeminfo;	// IMP=0x0000000000025ab4
- (void)_receivedSystemInfo:(id)arg1 xid:(id)arg2;	// IMP=0x0000000000024ab3
- (void)_idleTimerFired;	// IMP=0x00000000000249fc
- (void)_idleTimerStart:(unsigned int)arg1 repeat:(unsigned int)arg2;	// IMP=0x0000000000024860
- (void)_identityProofsVerifyHomeKitSignature:(id)arg1 identifier:(id)arg2;	// IMP=0x00000000000241d8
- (void)_identityProofsVerify:(id)arg1;	// IMP=0x0000000000023e11
- (void)_identityProofsAdd:(id)arg1 update:(_Bool)arg2;	// IMP=0x00000000000238c2
- (id)_identityProofDataServer;	// IMP=0x0000000000023797
- (id)_identityProofDataClient;	// IMP=0x000000000002366c
- (void)_timeoutForXID:(id)arg1;	// IMP=0x00000000000234ae
- (void)_timeoutForSendEntry:(id)arg1;	// IMP=0x0000000000023271
- (void)_abortRequestsWithError:(id)arg1;	// IMP=0x0000000000023078
- (void)_receivedResponse:(id)arg1 ctx:(CDStruct_5577c19c *)arg2;	// IMP=0x0000000000022664
- (void)_receivedRequest:(id)arg1 ctx:(CDStruct_5577c19c *)arg2;	// IMP=0x0000000000021a46
- (void)_receivedEvent:(id)arg1 ctx:(CDStruct_5577c19c *)arg2;	// IMP=0x0000000000021295
- (void)_receivedObject:(id)arg1 ctx:(CDStruct_5577c19c *)arg2;	// IMP=0x00000000000211c6
- (void)_receivedHeader:(const CDStruct_798ebea5 *)arg1 encryptedObjectData:(id)arg2 ctx:(CDStruct_5577c19c *)arg3;	// IMP=0x0000000000020ed4
- (void)_receivedHeader:(const CDStruct_798ebea5 *)arg1 body:(id)arg2 ctx:(CDStruct_5577c19c *)arg3;	// IMP=0x00000000000207b1
- (void)_receiveCompletion:(id)arg1 readFrame:(CDStruct_f8a3a8cf *)arg2 requestable:(id)arg3;	// IMP=0x0000000000020347
- (void)_receiveStart:(id)arg1 readFrame:(CDStruct_f8a3a8cf *)arg2 requestable:(id)arg3;	// IMP=0x0000000000020122
- (void)processSendsUsingConnection:(id)arg1;	// IMP=0x000000000001fa31
- (void)sendReachabilityProbe:(const char *)arg1;	// IMP=0x000000000001f9b4
- (void)_sendFrameType:(unsigned char)arg1 unencryptedObject:(id)arg2;	// IMP=0x000000000001f748
- (void)_sendFrameType:(unsigned char)arg1 body:(id)arg2;	// IMP=0x000000000001f30c
- (void)_sendEncryptedResponse:(id)arg1 error:(id)arg2 xid:(id)arg3 requestID:(id)arg4 highPriority:(_Bool)arg5 isChatty:(_Bool)arg6;	// IMP=0x000000000001eb7d
- (void)_sendEncryptedRequestID:(id)arg1 request:(id)arg2 xpcID:(unsigned int)arg3 options:(id)arg4 sendEntry:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;	// IMP=0x000000000001deac
- (void)sendEncryptedRequestID:(id)arg1 request:(id)arg2 xpcID:(unsigned int)arg3 options:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000001dab0
- (void)_sendEncryptedEventID:(id)arg1 data:(id)arg2 xid:(unsigned int)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000001d340
- (void)sendEncryptedEventID:(id)arg1 event:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000001d12d
- (void)sendEncryptedEventID:(id)arg1 data:(id)arg2 xid:(unsigned int)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000001ce61
- (void)_processSends;	// IMP=0x000000000001cb54
- (void)_serverStarted;	// IMP=0x000000000001cab4
- (void)_serverPairVerifyCompleted:(id)arg1;	// IMP=0x000000000001c17b
- (void)_serverPairVerifyWithData:(id)arg1 start:(_Bool)arg2;	// IMP=0x000000000001bb33
- (void)_serverPairSetupCompleted:(id)arg1;	// IMP=0x000000000001b88f
- (void)_serverPairSetupWithData:(id)arg1 start:(_Bool)arg2;	// IMP=0x000000000001ad32
- (_Bool)_serverPairingAllowed;	// IMP=0x000000000001acb8
- (void)_serverPreAuthRequestWithData:(id)arg1;	// IMP=0x000000000001aab6
- (void)_serverNetworkError:(id)arg1 label:(const char *)arg2;	// IMP=0x000000000001aa16
- (void)_serverError:(id)arg1;	// IMP=0x000000000001a93d
- (void)_serverAcceptTCP;	// IMP=0x000000000001a72b
- (void)_serverAcceptBTPipe;	// IMP=0x000000000001a62d
- (void)_serverAcceptBLE;	// IMP=0x000000000001a4a4
- (void)_serverAccept;	// IMP=0x000000000001a2a4
- (void)_serverRun;	// IMP=0x000000000001a0d8
- (void)_clientStarted;	// IMP=0x000000000001a080
- (void)_clientRetryFired;	// IMP=0x0000000000019f8c
- (void)_clientRetryStart;	// IMP=0x0000000000019d13
- (void)_clientStartSession;	// IMP=0x0000000000019b4c
- (void)_clientPairVerifyCompleted:(id)arg1;	// IMP=0x0000000000019196
- (void)_clientPairVerifyWithData:(id)arg1;	// IMP=0x0000000000018f4e
- (void)_clientPairVerifyStart;	// IMP=0x00000000000188fc
- (void)_clientPairSetupCompleted:(id)arg1;	// IMP=0x000000000001864d
- (void)_clientPairSetupPromptWithFlags:(unsigned int)arg1 throttleSeconds:(int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000185d3
- (void)_clientPairSetupWithData:(id)arg1;	// IMP=0x000000000001831b
- (void)_clientPairSetupStart;	// IMP=0x0000000000017d33
- (void)_clientPreAuthResponseWithData:(id)arg1;	// IMP=0x0000000000017b4d
- (void)_clientPreAuthStart;	// IMP=0x0000000000017a92
- (void)_clientNetworkError:(id)arg1 label:(const char *)arg2;	// IMP=0x00000000000179ec
- (_Bool)_clientError:(id)arg1;	// IMP=0x00000000000175c0
- (void)_clientConnectCompleted:(id)arg1;	// IMP=0x00000000000171c1
- (void)_clientConnectStartTCP;	// IMP=0x0000000000016d9c
- (void)_clientConnectStartBTPipe;	// IMP=0x0000000000016d1e
- (void)_clientConnectStartBLE;	// IMP=0x0000000000016a0d
- (void)_clientConnectStart;	// IMP=0x000000000001697c
- (void)_clientRun;	// IMP=0x0000000000016405
- (void)_updateLinkInfo;	// IMP=0x00000000000161c8
- (void)_updateExternalState;	// IMP=0x00000000000160d8
- (void)tryPassword:(id)arg1;	// IMP=0x0000000000016002
- (void)sessionStopped:(id)arg1;	// IMP=0x0000000000015ff1
- (void)_run;	// IMP=0x0000000000015fca
- (void)_pskPrepare:(_Bool)arg1;	// IMP=0x0000000000015d60
- (_Bool)_pairVerifyVerifySignature:(id)arg1 data:(id)arg2 flags:(unsigned int)arg3 error:(id *)arg4;	// IMP=0x00000000000159fc
- (id)_pairVerifySignData:(id)arg1 flags:(unsigned int)arg2 error:(id *)arg3;	// IMP=0x0000000000015625
- (void)_pairVerifyInvalidate;	// IMP=0x000000000001555b
- (void)_pairSetupInvalidate;	// IMP=0x00000000000154ce
- (void)homeKitIdentityUpdated;	// IMP=0x0000000000015331
- (void)_invalidated;	// IMP=0x00000000000150f1
- (void)_invalidateCore:(id)arg1;	// IMP=0x0000000000014b4b
- (void)_invalidate;	// IMP=0x0000000000014ac3
- (void)_invalidateWithError:(id)arg1;	// IMP=0x0000000000014a20
- (void)invalidateWithError:(id)arg1;	// IMP=0x000000000001494f
- (void)invalidate;	// IMP=0x00000000000148eb
- (void)activate;	// IMP=0x000000000001423b
@property(readonly, nonatomic) int flowControlWriteState;
- (id)descriptionWithLevel:(int)arg1;	// IMP=0x0000000000012e8c
- (id)description;	// IMP=0x0000000000012e75
- (void)dealloc;	// IMP=0x0000000000012e22
- (id)init;	// IMP=0x0000000000012cfe

@end

