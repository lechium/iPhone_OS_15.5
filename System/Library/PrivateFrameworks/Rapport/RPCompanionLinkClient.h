//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Rapport/NSSecureCoding-Protocol.h>
#import <Rapport/RPAuthenticatable-Protocol.h>
#import <Rapport/RPCompanionLinkXPCClientInterface-Protocol.h>
#import <Rapport/RPMessageable-Protocol.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString, RPCompanionLinkDevice;
@protocol OS_dispatch_queue, RPDaemonConnection, RPSignedInUserProvider;

@interface RPCompanionLinkClient : NSObject <NSSecureCoding, RPCompanionLinkXPCClientInterface, RPAuthenticatable, RPMessageable>
{
    _Bool _activateCalled;	// 8 = 0x8
    NSMutableSet *_assertions;	// 16 = 0x10
    id <RPDaemonConnection> _daemonCnx;	// 24 = 0x18
    NSMutableDictionary *_deviceDictionary;	// 32 = 0x20
    NSMutableDictionary *_eventRegistrations;	// 40 = 0x28
    _Bool _invalidateCalled;	// 48 = 0x30
    _Bool _invalidateDone;	// 49 = 0x31
    NSMutableOrderedSet *_registeredProfileIDs;	// 56 = 0x38
    NSMutableDictionary *_requestRegistrations;	// 64 = 0x40
    NSString *_serviceType;	// 72 = 0x48
    id <RPSignedInUserProvider> _userProvider;	// 80 = 0x50
    _Bool _targetUserSession;	// 88 = 0x58
    unsigned int _pairSetupFlags;	// 92 = 0x5c
    unsigned int _pairVerifyFlags;	// 96 = 0x60
    int _passwordType;	// 100 = 0x64
    int _passwordTypeActual;	// 104 = 0x68
    unsigned int _flags;	// 108 = 0x6c
    unsigned int _clientID;	// 112 = 0x70
    unsigned int _internalAuthFlags;	// 116 = 0x74
    NSArray *_allowedMACAddresses;	// 120 = 0x78
    NSArray *_pairSetupACL;	// 128 = 0x80
    NSString *_password;	// 136 = 0x88
    CDUnknownBlockType _authCompletionHandler;	// 144 = 0x90
    CDUnknownBlockType _disconnectHandler;	// 152 = 0x98
    CDUnknownBlockType _showPasswordHandler;	// 160 = 0xa0
    CDUnknownBlockType _hidePasswordHandler;	// 168 = 0xa8
    CDUnknownBlockType _promptForPasswordHandler;	// 176 = 0xb0
    NSString *_appID;	// 184 = 0xb8
    double _awdlGuestDiscoveryTimeout;	// 192 = 0xc0
    long long _bleClientUseCase;	// 200 = 0xc8
    NSString *_cloudServiceID;	// 208 = 0xd0
    unsigned long long _controlFlags;	// 216 = 0xd8
    RPCompanionLinkDevice *_destinationDevice;	// 224 = 0xe0
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 232 = 0xe8
    unsigned long long _errorFlags;	// 240 = 0xf0
    CDUnknownBlockType _errorFlagsChangedHandler;	// 248 = 0xf8
    CDUnknownBlockType _interruptionHandler;	// 256 = 0x100
    CDUnknownBlockType _invalidationHandler;	// 264 = 0x108
    long long _rssiThreshold;	// 272 = 0x110
    CDUnknownBlockType _deviceFoundHandler;	// 280 = 0x118
    CDUnknownBlockType _deviceLostHandler;	// 288 = 0x120
    CDUnknownBlockType _deviceChangedHandler;	// 296 = 0x128
    RPCompanionLinkDevice *_localDevice;	// 304 = 0x130
    CDUnknownBlockType _localDeviceUpdatedHandler;	// 312 = 0x138
    NSDictionary *_siriInfo;	// 320 = 0x140
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000051af
- (void).cxx_destruct;	// IMP=0x000000000000c7e0
@property(readonly, nonatomic) unsigned int internalAuthFlags; // @synthesize internalAuthFlags=_internalAuthFlags;
@property(nonatomic) unsigned int clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSDictionary *siriInfo; // @synthesize siriInfo=_siriInfo;
@property(copy, nonatomic) CDUnknownBlockType localDeviceUpdatedHandler; // @synthesize localDeviceUpdatedHandler=_localDeviceUpdatedHandler;
@property(retain) RPCompanionLinkDevice *localDevice; // @synthesize localDevice=_localDevice;
@property(copy, nonatomic) CDUnknownBlockType deviceChangedHandler; // @synthesize deviceChangedHandler=_deviceChangedHandler;
@property(copy, nonatomic) CDUnknownBlockType deviceLostHandler; // @synthesize deviceLostHandler=_deviceLostHandler;
@property(copy, nonatomic) CDUnknownBlockType deviceFoundHandler; // @synthesize deviceFoundHandler=_deviceFoundHandler;
@property(nonatomic) _Bool targetUserSession; // @synthesize targetUserSession=_targetUserSession;
@property(nonatomic) long long rssiThreshold; // @synthesize rssiThreshold=_rssiThreshold;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(nonatomic) unsigned int flags; // @synthesize flags=_flags;
@property(copy, nonatomic) CDUnknownBlockType errorFlagsChangedHandler; // @synthesize errorFlagsChangedHandler=_errorFlagsChangedHandler;
@property(nonatomic) unsigned long long errorFlags; // @synthesize errorFlags=_errorFlags;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(retain, nonatomic) RPCompanionLinkDevice *destinationDevice; // @synthesize destinationDevice=_destinationDevice;
@property(nonatomic) unsigned long long controlFlags; // @synthesize controlFlags=_controlFlags;
@property(copy, nonatomic) NSString *cloudServiceID; // @synthesize cloudServiceID=_cloudServiceID;
@property(nonatomic) long long bleClientUseCase; // @synthesize bleClientUseCase=_bleClientUseCase;
@property(nonatomic) double awdlGuestDiscoveryTimeout; // @synthesize awdlGuestDiscoveryTimeout=_awdlGuestDiscoveryTimeout;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(retain, nonatomic) NSString *serviceType; // @synthesize serviceType=_serviceType;
@property(copy, nonatomic) CDUnknownBlockType promptForPasswordHandler; // @synthesize promptForPasswordHandler=_promptForPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType hidePasswordHandler; // @synthesize hidePasswordHandler=_hidePasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType showPasswordHandler; // @synthesize showPasswordHandler=_showPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType disconnectHandler; // @synthesize disconnectHandler=_disconnectHandler;
@property(copy, nonatomic) CDUnknownBlockType authCompletionHandler; // @synthesize authCompletionHandler=_authCompletionHandler;
@property(readonly, nonatomic) int passwordTypeActual; // @synthesize passwordTypeActual=_passwordTypeActual;
@property(nonatomic) int passwordType; // @synthesize passwordType=_passwordType;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(nonatomic) unsigned int pairVerifyFlags; // @synthesize pairVerifyFlags=_pairVerifyFlags;
@property(nonatomic) unsigned int pairSetupFlags; // @synthesize pairSetupFlags=_pairSetupFlags;
@property(retain, nonatomic) NSArray *pairSetupACL; // @synthesize pairSetupACL=_pairSetupACL;
@property(retain, nonatomic) NSArray *allowedMACAddresses; // @synthesize allowedMACAddresses=_allowedMACAddresses;
- (void)deregisterProfileID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c0f6
- (void)_reregisterProfileIDs;	// IMP=0x000000000000bf52
- (void)_registerProfileID:(id)arg1 reregister:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000bb6d
- (void)registerProfileID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ba44
- (void)triggerEnhancedDiscoveryForReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b680
- (void)launchAppWithURL:(id)arg1 destinationID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000b514
- (void)launchAppWithBundleID:(id)arg1 destinationID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000b3be
- (void)companionLinkHandleDisconnect;	// IMP=0x000000000000b33d
- (void)companionLinkReceivedRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000000aef5
- (void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 options:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000000a8c5
- (void)sendRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a896
- (void)deregisterRequestID:(id)arg1;	// IMP=0x000000000000a511
- (void)_reregisterRequests;	// IMP=0x000000000000a3bf
- (void)_registerRequestID:(id)arg1 options:(id)arg2 reregister:(_Bool)arg3;	// IMP=0x000000000000a02d
- (void)_registerRequestIDOnQueue:(id)arg1 options:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000009f12
- (void)registerRequestID:(id)arg1 options:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000009e05
- (void)companionLinkReceivedEventID:(id)arg1 event:(id)arg2 options:(id)arg3;	// IMP=0x0000000000009c75
- (void)sendEventID:(id)arg1 event:(id)arg2 destinationID:(id)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000095a8
- (void)sendEventID:(id)arg1 event:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000009579
- (void)deregisterEventID:(id)arg1;	// IMP=0x00000000000091ef
- (void)_reregisterEvents;	// IMP=0x000000000000909d
- (void)_registerEventID:(id)arg1 options:(id)arg2 reregister:(_Bool)arg3;	// IMP=0x0000000000008d0b
- (void)registerEventID:(id)arg1 options:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000008b5f
- (void)companionLinkUpdateErrorFlags:(unsigned long long)arg1;	// IMP=0x0000000000008a8d
- (_Bool)shouldReportDevice:(id)arg1 toXPCConnectionWithLaunchInstanceID:(id)arg2 outReason:(id *)arg3;	// IMP=0x0000000000008694
- (void)_lostAllDevices;	// IMP=0x0000000000008479
- (void)companionLinkLocalDeviceUpdated:(id)arg1;	// IMP=0x0000000000008425
- (void)companionLinkChangedDevice:(id)arg1 changes:(unsigned int)arg2;	// IMP=0x0000000000008314
- (void)companionLinkLostDevice:(id)arg1;	// IMP=0x0000000000008215
- (void)companionLinkFoundDevice:(id)arg1;	// IMP=0x000000000000808f
@property(readonly) RPCompanionLinkDevice *activePersonalCompanion;
@property(readonly, copy) NSArray *activeDevices;
- (void)companionLinkAuthCompleted:(id)arg1;	// IMP=0x0000000000007dc1
- (void)companionLinkPromptForPasswordType:(int)arg1 flags:(unsigned int)arg2 throttleSeconds:(int)arg3;	// IMP=0x0000000000007d00
- (void)tryPassword:(id)arg1;	// IMP=0x0000000000007c1d
- (void)_reregisterAssertions;	// IMP=0x00000000000078ab
- (void)_invalidateAssertion:(id)arg1;	// IMP=0x00000000000077b2
- (id)activateAssertionID:(id)arg1 destinationID:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000074c9
- (void)_invalidated;	// IMP=0x00000000000072da
- (void)invalidate;	// IMP=0x00000000000071f6
- (void)_interrupted;	// IMP=0x0000000000007118
- (void)_invokeBlockActivateSafe:(CDUnknownBlockType)arg1;	// IMP=0x0000000000006fb3
- (id)_ensureXPCStarted;	// IMP=0x0000000000006d14
- (id)_connectionWithClient:(id)arg1 queue:(id)arg2 userProvider:(id)arg3 interruptionHandler:(CDUnknownBlockType)arg4 invalidationHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000000068f4
- (id)_clientError:(id)arg1;	// IMP=0x000000000000685c
- (id)_XPCConnectionWithMachServiceName:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000006800
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1 reactivate:(_Bool)arg2;	// IMP=0x0000000000006121
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000005ff9
- (id)description;	// IMP=0x0000000000005b18
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000005821
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000052fd
- (id)initWithUserProvider:(id)arg1;	// IMP=0x00000000000051f7
- (id)init;	// IMP=0x00000000000051b7

@end

