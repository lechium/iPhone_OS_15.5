//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Rapport/NSSecureCoding-Protocol.h>
#import <Rapport/RPAuthenticatable-Protocol.h>
#import <Rapport/RPCompanionLinkXPCClientInterface-Protocol.h>
#import <Rapport/RPMessageable-Protocol.h>

@class NSArray, NSString, NSXPCConnection, RPConnection, RPEndpoint;
@protocol OS_dispatch_queue;

@interface RPSession : NSObject <NSSecureCoding, RPCompanionLinkXPCClientInterface, RPAuthenticatable, RPMessageable>
{
    _Bool _activateCalled;	// 8 = 0x8
    _Bool _invalidateCalled;	// 9 = 0x9
    _Bool _invalidateDone;	// 10 = 0xa
    struct LogCategory *_ucat;	// 16 = 0x10
    NSXPCConnection *_xpcCnx;	// 24 = 0x18
    unsigned int _pairSetupFlags;	// 32 = 0x20
    unsigned int _pairVerifyFlags;	// 36 = 0x24
    int _passwordType;	// 40 = 0x28
    int _passwordTypeActual;	// 44 = 0x2c
    NSArray *_allowedMACAddresses;	// 48 = 0x30
    NSArray *_pairSetupACL;	// 56 = 0x38
    NSString *_password;	// 64 = 0x40
    CDUnknownBlockType _authCompletionHandler;	// 72 = 0x48
    CDUnknownBlockType _showPasswordHandler;	// 80 = 0x50
    CDUnknownBlockType _hidePasswordHandler;	// 88 = 0x58
    CDUnknownBlockType _promptForPasswordHandler;	// 96 = 0x60
    unsigned long long _controlFlags;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 112 = 0x70
    CDUnknownBlockType _interruptionHandler;	// 120 = 0x78
    CDUnknownBlockType _invalidationHandler;	// 128 = 0x80
    NSString *_label;	// 136 = 0x88
    RPEndpoint *_peerEndpoint;	// 144 = 0x90
    NSString *_serviceType;	// 152 = 0x98
    RPConnection *_cnx;	// 160 = 0xa0
    NSString *_peerID;	// 168 = 0xa8
    unsigned long long _sessionID;	// 176 = 0xb0
    unsigned long long _startTicks;	// 184 = 0xb8
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000543f0
- (void).cxx_destruct;	// IMP=0x0000000000055457
@property(nonatomic) unsigned long long startTicks; // @synthesize startTicks=_startTicks;
@property(nonatomic) unsigned long long sessionID; // @synthesize sessionID=_sessionID;
@property(copy, nonatomic) NSString *peerID; // @synthesize peerID=_peerID;
@property(retain, nonatomic) RPConnection *cnx; // @synthesize cnx=_cnx;
@property(retain, nonatomic) NSString *serviceType; // @synthesize serviceType=_serviceType;
@property(retain, nonatomic) RPEndpoint *peerEndpoint; // @synthesize peerEndpoint=_peerEndpoint;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) unsigned long long controlFlags; // @synthesize controlFlags=_controlFlags;
@property(copy, nonatomic) CDUnknownBlockType promptForPasswordHandler; // @synthesize promptForPasswordHandler=_promptForPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType hidePasswordHandler; // @synthesize hidePasswordHandler=_hidePasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType showPasswordHandler; // @synthesize showPasswordHandler=_showPasswordHandler;
@property(copy, nonatomic) CDUnknownBlockType authCompletionHandler; // @synthesize authCompletionHandler=_authCompletionHandler;
@property(readonly, nonatomic) int passwordTypeActual; // @synthesize passwordTypeActual=_passwordTypeActual;
@property(nonatomic) int passwordType; // @synthesize passwordType=_passwordType;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(nonatomic) unsigned int pairVerifyFlags; // @synthesize pairVerifyFlags=_pairVerifyFlags;
@property(nonatomic) unsigned int pairSetupFlags; // @synthesize pairSetupFlags=_pairSetupFlags;
@property(retain, nonatomic) NSArray *pairSetupACL; // @synthesize pairSetupACL=_pairSetupACL;
@property(retain, nonatomic) NSArray *allowedMACAddresses; // @synthesize allowedMACAddresses=_allowedMACAddresses;
- (void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 options:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000055227
- (void)sendRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000551f8
- (void)deregisterRequestID:(id)arg1;	// IMP=0x00000000000551f2
- (void)registerRequestID:(id)arg1 options:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000551ec
- (void)sendEventID:(id)arg1 event:(id)arg2 destinationID:(id)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000000551d4
- (void)sendEventID:(id)arg1 event:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000551be
- (void)deregisterEventID:(id)arg1;	// IMP=0x00000000000551b8
- (void)registerEventID:(id)arg1 options:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000551b2
- (void)tryPassword:(id)arg1;	// IMP=0x00000000000551ac
- (void)_invalidated;	// IMP=0x00000000000550f8
- (void)invalidate;	// IMP=0x000000000005501b
- (void)_interrupted;	// IMP=0x0000000000054f97
- (void)_ensureXPCStarted;	// IMP=0x0000000000054d8e
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1 reactivate:(_Bool)arg2;	// IMP=0x00000000000549d4
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000547f4
- (id)descriptionWithLevel:(int)arg1;	// IMP=0x00000000000546c9
- (id)description;	// IMP=0x00000000000546b2
- (void)dealloc;	// IMP=0x0000000000054665
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000545fc
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000054473
- (id)init;	// IMP=0x00000000000543f8

@end

