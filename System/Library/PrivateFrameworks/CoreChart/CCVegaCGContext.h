//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreChart/CCVegaCGContextInterface-Protocol.h>

@class CCVegaJSFont, CCVegaRenderer, JSValue, NSString;

@interface CCVegaCGContext : NSObject <CCVegaCGContextInterface>
{
    JSValue *_fillStyle;	// 8 = 0x8
    double _globalAlpha;	// 16 = 0x10
    NSString *_lineCap;	// 24 = 0x18
    NSString *_lineJoin;	// 32 = 0x20
    double _lineWidth;	// 40 = 0x28
    double _miterLimit;	// 48 = 0x30
    NSString *_strokeStyle;	// 56 = 0x38
    NSString *_textAlign;	// 64 = 0x40
    struct CGAffineTransform _currentTransform;	// 72 = 0x48
    double _lineDashOffset;	// 120 = 0x78
    NSString *_font;	// 128 = 0x80
    NSString *_globalCompositeOperation;	// 136 = 0x88
    struct CGContext *_bitmapContext;	// 144 = 0x90
    double _width;	// 152 = 0x98
    double _height;	// 160 = 0xa0
    CCVegaJSFont *_internalFont;	// 168 = 0xa8
    CCVegaRenderer *renderer;	// 176 = 0xb0
    double pixelRatio;	// 184 = 0xb8
}

+ (struct CGAffineTransform)flipYAxisWithHeight:(double)arg1;	// IMP=0x0000000000023b46
- (void).cxx_destruct;	// IMP=0x000000000002509e
@property(nonatomic) double pixelRatio; // @synthesize pixelRatio;
@property(nonatomic) __weak CCVegaRenderer *renderer; // @synthesize renderer;
- (id)createLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;	// IMP=0x0000000000024f93
- (void)fill;	// IMP=0x0000000000024e7e
- (void)clip;	// IMP=0x0000000000024e64
- (void)setLineDashWithSegments:(id)arg1;	// IMP=0x0000000000024d3d
@property double lineDashOffset;
- (void)rectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;	// IMP=0x0000000000024cb7
- (void)fillRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;	// IMP=0x0000000000024c89
- (void)textWithString:(id)arg1 x:(double)arg2 y:(double)arg3 drawingMode:(int)arg4;	// IMP=0x0000000000024a5d
- (void)fillTextWithString:(id)arg1 x:(double)arg2 y:(double)arg3;	// IMP=0x0000000000024a49
- (void)strokeTextWithString:(id)arg1 x:(double)arg2 y:(double)arg3;	// IMP=0x0000000000024a32
- (void)stroke;	// IMP=0x00000000000249d0
- (void)lineToX:(double)arg1 y:(double)arg2;	// IMP=0x000000000002499a
- (void)moveToX:(double)arg1 y:(double)arg2;	// IMP=0x0000000000024964
- (void)quadraticCurveToCP1x:(double)arg1 cp1y:(double)arg2 x:(double)arg3 y:(double)arg4;	// IMP=0x000000000002491a
- (void)bezierCurveToCP1x:(double)arg1 cp1y:(double)arg2 cp2x:(double)arg3 cp2y:(double)arg4 x:(double)arg5 y:(double)arg6;	// IMP=0x00000000000248bc
- (void)closePath;	// IMP=0x00000000000248a2
- (void)beginPath;	// IMP=0x0000000000024888
- (void)arcWithX:(double)arg1 y:(double)arg2 radius:(double)arg3 startAngle:(double)arg4 endAngle:(double)arg5 anticlockwise:(_Bool)arg6;	// IMP=0x000000000002482e
- (void)translateWithX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000247f8
- (void)clearRectWithX:(double)arg1 y:(double)arg2 w:(double)arg3 h:(double)arg4;	// IMP=0x0000000000024788
- (void)save;	// IMP=0x000000000002476e
- (void)restore;	// IMP=0x0000000000024754
- (void)setTransformWithA:(double)arg1 b:(double)arg2 c:(double)arg3 d:(double)arg4 e:(double)arg5 f:(double)arg6;	// IMP=0x00000000000245ff
- (void)rotateWithAngle:(double)arg1;	// IMP=0x00000000000245d3
- (id)measureText:(id)arg1;	// IMP=0x000000000002451e
@property(retain) NSString *textAlign;
@property(retain) NSString *strokeStyle;
- (struct CGColor *)newColorFromString:(id)arg1;	// IMP=0x00000000000243f6
- (_Bool)isPointInPathWithX:(double)arg1 y:(double)arg2;	// IMP=0x00000000000242dc
@property double miterLimit;
@property double lineWidth;
@property(retain) NSString *lineJoin;
@property(retain) NSString *lineCap;
@property(retain) NSString *globalCompositeOperation;
@property double globalAlpha;
@property(retain) NSString *font;
@property(retain) JSValue *fillStyle;
- (void)dealloc;	// IMP=0x0000000000023dd9
- (id)init;	// IMP=0x0000000000023d5f
@property double height;
@property double width;
- (void)resizeBitmapContext;	// IMP=0x0000000000023be3
- (void)invalidateBitmapContext;	// IMP=0x0000000000023bc3
@property(readonly) struct CGContext *context;

@end

