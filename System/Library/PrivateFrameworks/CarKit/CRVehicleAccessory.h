//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class EAAccessory, NSArray, NSData, NSDictionary, NSNumber, NSString;

@interface CRVehicleAccessory : NSObject
{
    _Bool _supportsUSBCarPlay;	// 8 = 0x8
    _Bool _supportsWirelessCarPlay;	// 9 = 0x9
    _Bool _supportsWiredBluetoothPairing;	// 10 = 0xa
    _Bool _supportsCarPlayConnectionRequest;	// 11 = 0xb
    _Bool _supportsEnhancedIntegration;	// 12 = 0xc
    NSString *_vehicleName;	// 16 = 0x10
    NSString *_vehicleModelName;	// 24 = 0x18
    NSData *_certificateSerialNumber;	// 32 = 0x20
    NSArray *_accessoryProtocols;	// 40 = 0x28
    NSString *_bluetoothAddress;	// 48 = 0x30
    long long _transportType;	// 56 = 0x38
    NSString *_PPID;	// 64 = 0x40
    NSNumber *_connectionID;	// 72 = 0x48
    EAAccessory *_accessory;	// 80 = 0x50
    NSDictionary *_vehicleInfoDataCache;	// 88 = 0x58
    NSDictionary *_vehicleAccessoryInfoKeysCache;	// 96 = 0x60
}

+ (id)_descriptionForTransportType:(long long)arg1;	// IMP=0x000000000001e142
- (void).cxx_destruct;	// IMP=0x000000000001f5cd
@property(copy, nonatomic) NSDictionary *vehicleAccessoryInfoKeysCache; // @synthesize vehicleAccessoryInfoKeysCache=_vehicleAccessoryInfoKeysCache;
@property(copy, nonatomic) NSDictionary *vehicleInfoDataCache; // @synthesize vehicleInfoDataCache=_vehicleInfoDataCache;
@property(nonatomic) __weak EAAccessory *accessory; // @synthesize accessory=_accessory;
@property(retain, nonatomic) NSNumber *connectionID; // @synthesize connectionID=_connectionID;
@property(retain, nonatomic) NSString *PPID; // @synthesize PPID=_PPID;
@property(nonatomic) _Bool supportsEnhancedIntegration; // @synthesize supportsEnhancedIntegration=_supportsEnhancedIntegration;
@property(nonatomic) _Bool supportsCarPlayConnectionRequest; // @synthesize supportsCarPlayConnectionRequest=_supportsCarPlayConnectionRequest;
@property(nonatomic) _Bool supportsWiredBluetoothPairing; // @synthesize supportsWiredBluetoothPairing=_supportsWiredBluetoothPairing;
@property(nonatomic) _Bool supportsWirelessCarPlay; // @synthesize supportsWirelessCarPlay=_supportsWirelessCarPlay;
@property(nonatomic) _Bool supportsUSBCarPlay; // @synthesize supportsUSBCarPlay=_supportsUSBCarPlay;
@property(nonatomic) long long transportType; // @synthesize transportType=_transportType;
@property(retain, nonatomic) NSString *bluetoothAddress; // @synthesize bluetoothAddress=_bluetoothAddress;
@property(retain, nonatomic) NSArray *accessoryProtocols; // @synthesize accessoryProtocols=_accessoryProtocols;
@property(retain, nonatomic) NSData *certificateSerialNumber; // @synthesize certificateSerialNumber=_certificateSerialNumber;
@property(retain, nonatomic) NSString *vehicleModelName; // @synthesize vehicleModelName=_vehicleModelName;
@property(retain, nonatomic) NSString *vehicleName; // @synthesize vehicleName=_vehicleName;
- (void)sendWiredCarPlayAvailable:(id)arg1 wirelessCarPlayAvailable:(id)arg2;	// IMP=0x000000000001f256
- (void)sendDeviceTransportIdentifiers;	// IMP=0x000000000001f149
- (void)requestWiFiCredentials;	// IMP=0x000000000001f0a5
- (void)beginWiredBluetoothPairing:(CDUnknownBlockType)arg1;	// IMP=0x000000000001ef0f
- (_Bool)_updateName;	// IMP=0x000000000001ec90
- (id)vehicleAccessoryInfoKeys;	// IMP=0x000000000001e792
- (id)analyticsDescription;	// IMP=0x000000000001e5ba
- (id)radarDescription;	// IMP=0x000000000001e390
- (id)description;	// IMP=0x000000000001e27e
- (id)displayName;	// IMP=0x000000000001e1c4
- (_Bool)isBluetoothConnected;	// IMP=0x000000000001e17c

@end

