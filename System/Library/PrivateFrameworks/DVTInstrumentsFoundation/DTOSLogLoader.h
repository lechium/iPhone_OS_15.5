//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <DVTInstrumentsUtilities/XRMobileAgentQueueStop.h>

@class DTOSLogLoaderFetchTicket, NSArray, NSDate, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSPredicate, OSLogEventLiveStore, OSLogEventLiveStream, OSLogEventStore, OSLogEventStreamBase, XRIntKeyedDictionary, XRMobileAgent;
@protocol DTOSLogLoaderDelegate, DTOSLogLoaderVisitor;

@interface DTOSLogLoader : XRMobileAgentQueueStop
{
    OSLogEventStreamBase *_deserializedEventStream;	// 8 = 0x8
    _Bool _deserializedEventStreamIsActivated;	// 16 = 0x10
    OSLogEventStore *_loggedEventStore;	// 24 = 0x18
    OSLogEventStreamBase *_loggedStream;	// 32 = 0x20
    OSLogEventLiveStore *_liveEventStore;	// 40 = 0x28
    OSLogEventLiveStream *_liveStream;	// 48 = 0x30
    NSError *_failureReason;	// 56 = 0x38
    NSDate *_startTime;	// 64 = 0x40
    NSDate *_endTime;	// 72 = 0x48
    NSArray *_dynamicTracingEnabledSubsystems;	// 80 = 0x50
    unsigned long long _slackInMachTimeUnits;	// 88 = 0x58
    XRMobileAgent<DTOSLogLoaderVisitor> *_agentWaitingForStop;	// 96 = 0x60
    DTOSLogLoaderFetchTicket *_lastFetchTicket;	// 104 = 0x68
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } _stateChanged;	// 112 = 0x70
    struct _opaque_pthread_mutex_t _stateLock;	// 160 = 0xa0
    unsigned long long _machTimeAdjustment;	// 224 = 0xe0
    struct mach_timebase_info _machTimebase;	// 232 = 0xe8
    unsigned long long _mode;	// 240 = 0xf0
    struct unique_ptr<DTOSLogTableLoader, std::default_delete<DTOSLogTableLoader>> _tableLoader;	// 248 = 0xf8
    struct DTStateActionEncoder _encoder;	// 256 = 0x100
    unsigned long long _lastMachTime;	// 336 = 0x150
    XRMobileAgent<DTOSLogLoaderVisitor> *_agentWaitingForEvents;	// 344 = 0x158
    NSMutableData *_workingBuffer;	// 352 = 0x160
    struct StackReference _deviceSessionRef;	// 360 = 0x168
    struct StackReference _defaultLevelRef;	// 364 = 0x16c
    struct StackReference _infoLevelRef;	// 368 = 0x170
    struct StackReference _debugLevelRef;	// 372 = 0x174
    struct StackReference _errorLevelRef;	// 376 = 0x178
    struct StackReference _faultLevelRef;	// 380 = 0x17c
    struct StackReference _beginRef;	// 384 = 0x180
    struct StackReference _emitRef;	// 388 = 0x184
    struct StackReference _endRef;	// 392 = 0x188
    struct StackReference _threadScopeRef;	// 396 = 0x18c
    struct StackReference _processScopeRef;	// 400 = 0x190
    struct StackReference _systemScopeRef;	// 404 = 0x194
    XRIntKeyedDictionary *_pushedProcessesByPid;	// 408 = 0x198
    XRIntKeyedDictionary *_pushedThreadsByTid;	// 416 = 0x1a0
    NSMutableDictionary *_repeatedStrings;	// 424 = 0x1a8
    NSMutableDictionary *_repeatedUUIDs;	// 432 = 0x1b0
    NSMutableDictionary *_repeatedPlaceholders;	// 440 = 0x1b8
    NSMutableArray *_argReferenceConstants;	// 448 = 0x1c0
    int _rowsSent;	// 456 = 0x1c8
    unsigned int _lostEventAccumulator;	// 460 = 0x1cc
    _Bool _workingBufferFull;	// 464 = 0x1d0
    _Bool _workingBufferCanBeReplaced;	// 465 = 0x1d1
    _Bool _didHandleRecord;	// 466 = 0x1d2
    _Bool _ignoreNextRecord;	// 467 = 0x1d3
    _Bool _calledForHelp;	// 468 = 0x1d4
    _Bool _isLastBuffer;	// 469 = 0x1d5
    _Bool _running;	// 470 = 0x1d6
    unsigned long long _signpostConfig;	// 472 = 0x1d8
    unsigned long long _exclusions;	// 480 = 0x1e0
    unsigned long long _columnInclusions;	// 488 = 0x1e8
    _Bool _trackPIDToExecNameMapping;	// 496 = 0x1f0
    XRIntKeyedDictionary *_pidToExecNameMapping;	// 504 = 0x1f8
    struct vector<unsigned short, std::allocator<unsigned short>> _argTemporaryTypeStorage;	// 512 = 0x200
    NSPredicate *_filterPredicate;	// 536 = 0x218
    id <DTOSLogLoaderDelegate> _delegate;	// 544 = 0x220
}

+ (void)heartbeat;	// IMP=0x000000000001bf92
+ (id)heartbeatPredicate;	// IMP=0x000000000001bf5f
- (id).cxx_construct;	// IMP=0x0000000000021a49
- (void).cxx_destruct;	// IMP=0x000000000002189b
@property(nonatomic) __weak id <DTOSLogLoaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSError *failureReason; // @synthesize failureReason=_failureReason;
@property(retain, nonatomic) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
- (void)invalidate;	// IMP=0x00000000000217f6
- (void)_setupLiveStream:(id)arg1;	// IMP=0x00000000000215c0
- (id)_setupLoggedStreamForNextChunk:(id)arg1;	// IMP=0x00000000000214da
- (void)_setupCommonStreamParameters:(id)arg1;	// IMP=0x0000000000020c31
- (void)_performResetOnOutputStream;	// IMP=0x0000000000020495
- (void)_handleRecord:(id)arg1;	// IMP=0x000000000001cc59
- (id)_stackReferenceForRepeatedUUID:(id)arg1;	// IMP=0x000000000001ca55
- (id)_stackReferenceForRepeatedString:(id)arg1;	// IMP=0x000000000001c8e1
- (void)_escortAgentToExit:(id)arg1 withTicket:(id)arg2;	// IMP=0x000000000001c843
- (void)_prepareAgentToExecute:(id)arg1 withTicket:(id)arg2;	// IMP=0x000000000001c7a5
- (id)ticketToStopStream:(id)arg1;	// IMP=0x000000000001c78c
- (id)ticketToFetchData:(id)arg1 window:(double)arg2;	// IMP=0x000000000001c734
- (id)ticketToPrepare:(id)arg1 filterPredicate:(id)arg2 signposting:(unsigned long long)arg3 exclusions:(unsigned long long)arg4 columnInclusions:(unsigned long long)arg5 mode:(unsigned long long)arg6 machTimebase:(struct mach_timebase_info)arg7 importedFileURL:(id)arg8 importForcedStartDate:(id)arg9 importForcedEndDate:(id)arg10 trackPidToExecNameMapping:(_Bool)arg11 dynamicTracingEnabledSubsystems:(id)arg12;	// IMP=0x000000000001c546
- (id)ticketToStartStream:(id)arg1;	// IMP=0x000000000001c52d
- (_Bool)_holdReceivedAgent:(id)arg1 ticket:(id)arg2;	// IMP=0x000000000001c35b
- (void)dealloc;	// IMP=0x000000000001c2c3
- (id)init;	// IMP=0x000000000001bffb

@end

