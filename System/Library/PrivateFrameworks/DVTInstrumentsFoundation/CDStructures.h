//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DTOSLogTableLoader;

struct DTStateActionDecoder;

struct DTStateActionEncoder {
    int _state;
    struct OutputTape _tape;
    char *_pushBufferStart;
    char *_pushBufferEnd;
    unsigned long long _pushBufferBitOffset;
    unsigned long long _backgroundPatternStart;
    struct StackReference _topOfStackRef;
    unsigned char _background;
    int _stateWhenTapeRanOut;
    unsigned int _pushBufferSizeToXmit;
};

struct DTTableRowDecoder;

struct DTXSharedMemory {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    _Atomic int _field8;
    _Atomic int _field9;
    _Atomic unsigned int _field10;
    _Atomic int _field11;
    _Atomic int _field12;
    _Atomic int _field13;
    _Atomic int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    char _field18[0];
};

struct OutputTape {
    unsigned short *start;
    unsigned short *head;
    unsigned short *end;
};

struct StackReference {
    unsigned short _generation;
    unsigned short _reference;
};

struct TFPPidWatcher {
    unsigned int clientPort;
};

struct _CSTypeRef {
    unsigned long long _opaque_1;
    unsigned long long _opaque_2;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__tree_node_base<void *>*> {
    void *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct atomic<DVTQueueBasedTimerState> {
    struct __cxx_atomic_impl<DVTQueueBasedTimerState, std::__cxx_atomic_base_impl<DVTQueueBasedTimerState>> {
        _Atomic unsigned int __a_value;
    } __a_;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<NSData *, std::allocator<NSData *>> {
    struct __list_node_base<NSData *, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<NSData *, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct map<unsigned long long, std::map<unsigned int, OAKeyFrame *>, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::map<unsigned int, OAKeyFrame *>>>> {
    struct __tree<std::__value_type<unsigned long long, std::map<unsigned int, OAKeyFrame *>>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, std::map<unsigned int, OAKeyFrame *>>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, std::map<unsigned int, OAKeyFrame *>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, std::map<unsigned int, OAKeyFrame *>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, std::map<unsigned int, OAKeyFrame *>>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, std::pair<unsigned long long, id>, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::pair<unsigned long long, id>>>> {
    struct __tree<std::__value_type<unsigned long long, std::pair<unsigned long long, id>>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, std::pair<unsigned long long, id>>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, std::pair<unsigned long long, id>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, std::pair<unsigned long long, id>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, std::pair<unsigned long long, id>>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct unique_ptr<DTOSLogTableLoader, std::default_delete<DTOSLogTableLoader>> {
    struct __compressed_pair<DTOSLogTableLoader *, std::default_delete<DTOSLogTableLoader>> {
        struct DTOSLogTableLoader *__value_;
    } __ptr_;
};

struct unique_ptr<DTStateActionDecoder, std::default_delete<DTStateActionDecoder>> {
    struct __compressed_pair<DTStateActionDecoder *, std::default_delete<DTStateActionDecoder>> {
        struct DTStateActionDecoder *__value_;
    } __ptr_;
};

struct unique_ptr<DTTableRowDecoder, std::default_delete<DTTableRowDecoder>> {
    struct __compressed_pair<DTTableRowDecoder *, std::default_delete<DTTableRowDecoder>> {
        struct DTTableRowDecoder *__value_;
    } __ptr_;
};

struct vector<unsigned short, std::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    long long _field7;
    unsigned long long _field8[0];
} CDStruct_6c9135d0;

