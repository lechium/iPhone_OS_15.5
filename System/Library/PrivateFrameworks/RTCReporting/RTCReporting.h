//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <RTCReporting/RTCReportingDeallocNotifierDelegate-Protocol.h>

@class NSArray, NSMutableDictionary, NSXPCConnection, RTCReportingDeallocNotifier;
@protocol OS_dispatch_queue, OS_dispatch_source, RTCReportingMessageSentNotifier;

@interface RTCReporting : NSObject <RTCReportingDeallocNotifierDelegate>
{
    NSObject<OS_dispatch_queue> *_reportingQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_reportingPeriodicTasksQueue;	// 16 = 0x10
    CDUnknownBlockType _loggingBlock;	// 24 = 0x18
    NSXPCConnection *_connection;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_timer;	// 40 = 0x28
    int _counter;	// 48 = 0x30
    NSMutableDictionary *_periodicServiceDict;	// 56 = 0x38
    NSArray *_enabledBackendNames;	// 64 = 0x40
    NSArray *_whitelistedEvents;	// 72 = 0x48
    NSArray *_blacklistedEvents;	// 80 = 0x50
    RTCReportingDeallocNotifier *_strongDeallocNotifier;	// 88 = 0x58
    id _weakDeallocNotifier;	// 96 = 0x60
    id _weakMessageSentDelegate;	// 104 = 0x68
    struct os_unfair_lock_s _configLock;	// 112 = 0x70
}

+ (id)newSecureHierarchyTokenFromParentToken:(id)arg1;	// IMP=0x0000000000005031
+ (id)newHierarchyTokenFromParentToken:(id)arg1;	// IMP=0x0000000000004ef0
+ (_Bool)sendOneMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5 error:(id *)arg6;	// IMP=0x000000000000474c
+ (_Bool)closeEphemeralSessiontWithSessionId:(id)arg1;	// IMP=0x00000000000044c3
+ (id)createEphemeralSessionWithSessionInfo:(id)arg1 userInfo:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000003fbc
+ (id)getPersistentIdentifierForDNU:(_Bool)arg1;	// IMP=0x0000000000003e2a
+ (void)regeneratePersistentIdentifierForDNU:(_Bool)arg1;	// IMP=0x0000000000003cc6
@property(copy, nonatomic) CDUnknownBlockType messageLoggingBlock; // @synthesize messageLoggingBlock=_loggingBlock;
- (void)updateSharedDataForKey:(id)arg1 value:(id)arg2;	// IMP=0x0000000000003bff
- (void)updateSharedDataWithDictionary:(id)arg1;	// IMP=0x0000000000003b40
- (void)finishSession;	// IMP=0x0000000000003add
- (void)flushMessagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000000391a
- (_Bool)flushMessages;	// IMP=0x00000000000038da
- (_Bool)sendMessageWithDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000353e
- (_Bool)sendMessageWithCategory:(unsigned short)arg1 type:(unsigned short)arg2 payload:(id)arg3 error:(id *)arg4;	// IMP=0x00000000000033ff
- (id)getReportingSessionID;	// IMP=0x0000000000003193
- (_Bool)isBlacklistedEvent:(unsigned short)arg1;	// IMP=0x0000000000003054
- (_Bool)isWhitelistedEvent:(unsigned short)arg1;	// IMP=0x0000000000002f15
- (void)notifyMessageWasSent:(id)arg1;	// IMP=0x0000000000002dee
- (void)fetchReportingStatesWithUserInfo:(id)arg1 fetchComplete:(CDUnknownBlockType)arg2;	// IMP=0x000000000000293d
- (void)startConfigurationWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000024b5
@property(nonatomic) id <RTCReportingMessageSentNotifier> messageSentDelegate;
- (void)dealloc;	// IMP=0x000000000000234d
- (oneway void)release;	// IMP=0x00000000000022f6
- (id)retain;	// IMP=0x000000000000229f
- (void)aboutToDealloc;	// IMP=0x0000000000002263
- (id)initWithSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3;	// IMP=0x000000000000224e
- (id)initWithSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3 aggregationBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000000001b66
- (_Bool)unregisterPeriodTaskForModule:(unsigned int)arg1;	// IMP=0x00000000000061ec
- (_Bool)registerPeriodicTaskForModule:(unsigned int)arg1 needToUpdate:(_Bool)arg2 needToReport:(_Bool)arg3 serviceBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000606f
- (void)stopLogTimer;	// IMP=0x0000000000005f79
- (void)startLogTimerWithInterval:(int)arg1 reportingMultiplier:(int)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4;	// IMP=0x0000000000005ddf
- (void)_myPeriodicTask:(unsigned short)arg1 type:(unsigned short)arg2 intervalMultiplier:(int)arg3 updateTimeout:(unsigned long long)arg4;	// IMP=0x0000000000005110
- (_Bool)uploadDataArray:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000065c5
- (_Bool)uploadFileWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000637c
- (_Bool)serverSupportsFileUpload;	// IMP=0x0000000000006301
- (_Bool)setDigestKey:(id)arg1 algorithm:(int)arg2;	// IMP=0x00000000000066ec

@end

