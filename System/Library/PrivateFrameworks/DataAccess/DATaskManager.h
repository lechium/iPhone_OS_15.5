//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DAAccount, DAActivity, DATransaction, NSArray, NSMutableArray, NSMutableSet, NSString, NSTimer;
@protocol DATask;

@interface DATaskManager : NSObject
{
    DATransaction *_transaction;	// 8 = 0x8
    DAActivity *_daActivity;	// 16 = 0x10
    DAAccount *_account;	// 24 = 0x18
    int _state;	// 32 = 0x20
    id <DATask> _activeModalTask;	// 40 = 0x28
    id <DATask> _activeQueuedTask;	// 48 = 0x30
    NSString *_powerAssertionGroupID;	// 56 = 0x38
    NSMutableArray *_queuedExclusiveTasks;	// 64 = 0x40
    id <DATask> _activeExclusiveTask;	// 72 = 0x48
    NSMutableSet *_independentTasks;	// 80 = 0x50
    NSMutableSet *_heldIndependentTasks;	// 88 = 0x58
    NSMutableSet *_modalHeldIndependentTasks;	// 96 = 0x60
    NSMutableArray *_mQueuedTasks;	// 104 = 0x68
    id <DATask> _modalHeldActiveQueuedTask;	// 112 = 0x70
    NSMutableArray *_queuedModalTasks;	// 120 = 0x78
    NSTimer *_managerIdleTimer;	// 128 = 0x80
    NSTimer *_userInitiatedSyncTimer;	// 136 = 0x88
    NSTimer *_xpcTransactionTimer;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x000000000002f199
@property(retain, nonatomic) NSTimer *xpcTransactionTimer; // @synthesize xpcTransactionTimer=_xpcTransactionTimer;
@property(retain, nonatomic) NSTimer *userInitiatedSyncTimer; // @synthesize userInitiatedSyncTimer=_userInitiatedSyncTimer;
@property(retain, nonatomic) NSTimer *managerIdleTimer; // @synthesize managerIdleTimer=_managerIdleTimer;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableArray *queuedModalTasks; // @synthesize queuedModalTasks=_queuedModalTasks;
@property(retain, nonatomic) id <DATask> modalHeldActiveQueuedTask; // @synthesize modalHeldActiveQueuedTask=_modalHeldActiveQueuedTask;
@property(retain, nonatomic) NSMutableArray *mQueuedTasks; // @synthesize mQueuedTasks=_mQueuedTasks;
@property(retain, nonatomic) NSMutableSet *modalHeldIndependentTasks; // @synthesize modalHeldIndependentTasks=_modalHeldIndependentTasks;
@property(retain, nonatomic) NSMutableSet *heldIndependentTasks; // @synthesize heldIndependentTasks=_heldIndependentTasks;
@property(retain, nonatomic) NSMutableSet *independentTasks; // @synthesize independentTasks=_independentTasks;
@property(retain, nonatomic) id <DATask> activeExclusiveTask; // @synthesize activeExclusiveTask=_activeExclusiveTask;
@property(retain, nonatomic) NSMutableArray *queuedExclusiveTasks; // @synthesize queuedExclusiveTasks=_queuedExclusiveTasks;
@property(copy, nonatomic) NSString *powerAssertionGroupID; // @synthesize powerAssertionGroupID=_powerAssertionGroupID;
@property(retain, nonatomic) id <DATask> activeQueuedTask; // @synthesize activeQueuedTask=_activeQueuedTask;
@property(retain, nonatomic) id <DATask> activeModalTask; // @synthesize activeModalTask=_activeModalTask;
@property(nonatomic) __weak DAAccount *account; // @synthesize account=_account;
- (void)taskManagerWillRemoveTask:(id)arg1;	// IMP=0x000000000002f00f
- (void)taskManagerDidAddTask:(id)arg1;	// IMP=0x000000000002f009
- (void)_releasePowerAssertionForTask:(id)arg1;	// IMP=0x000000000002ed6e
- (void)_retainPowerAssertionForTask:(id)arg1;	// IMP=0x000000000002ec32
- (void)_cancelTasksWithReason:(int)arg1;	// IMP=0x000000000002e8f5
- (void)_scheduleStartModal:(id)arg1;	// IMP=0x000000000002e81f
- (void)_schedulePerformTask:(id)arg1;	// IMP=0x000000000002e803
- (void)_scheduleSelector:(SEL)arg1 withArgument:(id)arg2;	// IMP=0x000000000002e690
- (void)_makeStateTransition;	// IMP=0x000000000002d58c
- (void)_reactivateHeldTasks;	// IMP=0x000000000002d0ed
- (void)_startModal:(id)arg1;	// IMP=0x000000000002cedd
- (void)_requestCancelTasksWithReason:(int)arg1;	// IMP=0x000000000002ccce
- (void)_performTask:(id)arg1;	// IMP=0x000000000002cab6
- (_Bool)shouldCancelTaskDueToOnPowerFetchMode;	// IMP=0x000000000002ca72
- (_Bool)taskIsModal:(id)arg1;	// IMP=0x000000000002c972
- (void)taskEndModal:(id)arg1;	// IMP=0x000000000002c68c
- (void)taskRequestModal:(id)arg1;	// IMP=0x000000000002bf68
- (void)taskDidFinish:(id)arg1;	// IMP=0x000000000002a24a
- (_Bool)_hasTasksIndicatingARunningSync;	// IMP=0x000000000002a202
- (_Bool)_hasTasksForcingNetworkConnection;	// IMP=0x0000000000029efc
- (_Bool)_taskInQueueForcesNetworkConnection:(id)arg1;	// IMP=0x0000000000029da9
- (_Bool)_taskForcesNetworking:(id)arg1;	// IMP=0x0000000000029d4a
- (void)_logSyncEnd;	// IMP=0x0000000000029d44
- (void)_endXpcTransaction;	// IMP=0x0000000000029b9e
- (void)_clearUserInitiatedSyncTimer;	// IMP=0x0000000000029aae
- (void)_useOpportunisticSocketsAgain;	// IMP=0x00000000000299bb
- (id)stateString;	// IMP=0x000000000002971c
- (void)cancelTasksDueToOnPowerMode;	// IMP=0x0000000000029705
- (void)shutdown;	// IMP=0x00000000000292e1
- (void)cancelAllTasks;	// IMP=0x00000000000291a7
- (void)cancelTask:(id)arg1;	// IMP=0x0000000000029193
- (void)cancelTask:(id)arg1 withUnderlyingError:(id)arg2;	// IMP=0x00000000000290af
- (void)submitQueuedTask:(id)arg1;	// IMP=0x0000000000028b4d
- (void)submitIndependentTask:(id)arg1;	// IMP=0x0000000000028618
- (void)submitExclusiveTask:(id)arg1 toFrontOfQueue:(_Bool)arg2;	// IMP=0x0000000000028021
- (void)submitExclusiveTask:(id)arg1;	// IMP=0x000000000002800d
- (_Bool)isShutdown;	// IMP=0x0000000000027fd4
- (id)accountPersistentUUID;	// IMP=0x0000000000027f84
- (id)accountID;	// IMP=0x0000000000027f34
- (id)identityPersist;	// IMP=0x0000000000027ee4
- (_Bool)useSSL;	// IMP=0x0000000000027ea0
- (id)OAuth2Token;	// IMP=0x0000000000027d6c
- (id)password;	// IMP=0x0000000000027d1c
- (id)server;	// IMP=0x0000000000027ccc
- (long long)port;	// IMP=0x0000000000027c88
- (id)user;	// IMP=0x0000000000027c38
- (id)userAgent;	// IMP=0x0000000000027b3e
- (id)deviceType;	// IMP=0x0000000000027b34
- (_Bool)_useFakeDescriptions;	// IMP=0x0000000000027b2c
- (id)_version;	// IMP=0x0000000000027aa1
- (void)_populateVersionDescriptions;	// IMP=0x0000000000027a10
@property(readonly, nonatomic) NSArray *queuedTasks;
- (void)dealloc;	// IMP=0x000000000002749f
- (id)init;	// IMP=0x00000000000024eb
- (id)initWithAccount:(id)arg1;	// IMP=0x00000000000273e9
@property(readonly, nonatomic) NSArray *allTasks;

@end

