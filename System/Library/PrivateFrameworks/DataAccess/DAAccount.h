//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ACAccount, DAStatusReport, DATaskManager, DATrustHandler, NSArray, NSData, NSDate, NSMapTable, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSURL;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface DAAccount : NSObject
{
    ACAccount *_backingAccountInfo;	// 8 = 0x8
    _Bool _hasInitted;	// 16 = 0x10
    _Bool _shouldUseOpportunisticSockets;	// 17 = 0x11
    _Bool _wasUserInitiated;	// 18 = 0x12
    DAStatusReport *_statusReport;	// 24 = 0x18
    NSMapTable *_consumers;	// 32 = 0x20
    struct __CFURLStorageSession *_storageSession;	// 40 = 0x28
    NSString *_clientToken;	// 48 = 0x30
    DATaskManager *_taskManager;	// 56 = 0x38
    NSObject<OS_xpc_object> *_xpcActivity;	// 64 = 0x40
    int _continueCount;	// 72 = 0x48
    _Bool _isFetchingAutomatically;	// 76 = 0x4c
    _Bool _shouldFailAllTasks;	// 77 = 0x4d
    _Bool _isValidating;	// 78 = 0x4e
    DATrustHandler *_trustHandler;	// 80 = 0x50
    NSArray *_appIdsForPasswordPrompt;	// 88 = 0x58
    NSString *_sourceApplicationBundleIdentifier;	// 96 = 0x60
    NSMutableDictionary *_dataclassPropertyURLsByDataclass;	// 104 = 0x68
    NSMutableArray *_pendingQueries;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_pendingQueryQueue;	// 120 = 0x78
    NSDate *_lastQueryStartedTime;	// 128 = 0x80
}

+ (_Bool)shouldCreateAccountForBackingAccountInfo:(id)arg1;	// IMP=0x00000000000032e9
+ (id)daAccountSubclassWithBackingAccountInfo:(id)arg1;	// IMP=0x000000000000309b
+ (void)reacquireClientRestrictions:(id)arg1;	// IMP=0x000000000000b87b
+ (id)oneshotListOfAccountIDs;	// IMP=0x000000000000b839
+ (id)_leafAccountTypes;	// IMP=0x000000000000b78c
+ (id)_leafAccountTypes;	// IMP=0x000000000000b8c0
- (void).cxx_destruct;	// IMP=0x000000000000a614
@property(retain, nonatomic) NSDate *lastQueryStartedTime; // @synthesize lastQueryStartedTime=_lastQueryStartedTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pendingQueryQueue; // @synthesize pendingQueryQueue=_pendingQueryQueue;
@property(retain, nonatomic) NSMutableArray *pendingQueries; // @synthesize pendingQueries=_pendingQueries;
@property(retain, nonatomic) NSMutableDictionary *dataclassPropertyURLsByDataclass; // @synthesize dataclassPropertyURLsByDataclass=_dataclassPropertyURLsByDataclass;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool isValidating; // @synthesize isValidating=_isValidating;
@property(readonly, nonatomic) NSArray *appIdsForPasswordPrompt; // @synthesize appIdsForPasswordPrompt=_appIdsForPasswordPrompt;
@property(retain, nonatomic) DATrustHandler *trustHandler; // @synthesize trustHandler=_trustHandler;
@property(readonly, nonatomic) DATaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(nonatomic) _Bool wasUserInitiated; // @synthesize wasUserInitiated=_wasUserInitiated;
@property(nonatomic) _Bool shouldUseOpportunisticSockets; // @synthesize shouldUseOpportunisticSockets=_shouldUseOpportunisticSockets;
@property(retain, nonatomic) DAStatusReport *statusReport; // @synthesize statusReport=_statusReport;
@property(readonly, nonatomic) ACAccount *backingAccountInfo; // @synthesize backingAccountInfo=_backingAccountInfo;
- (_Bool)getFetchingAutomaticallyState;	// IMP=0x000000000000a4f9
- (void)saveFetchingAutomaticallyState:(_Bool)arg1;	// IMP=0x000000000000a4f0
- (void)removeXpcActivity;	// IMP=0x000000000000a39b
- (void)decrementXpcActivityContinueCount;	// IMP=0x000000000000a29a
- (void)incrementXpcActivityContinueCount;	// IMP=0x000000000000a1b3
- (_Bool)hasXpcActivity;	// IMP=0x000000000000a1a5
- (void)saveXpcActivity:(id)arg1;	// IMP=0x000000000000a09c
- (_Bool)shouldCancelTaskDueToOnPowerFetchMode;	// IMP=0x000000000000a011
- (id)accountTypeIdentifier;	// IMP=0x0000000000009fbd
- (id)protocolVersion;	// IMP=0x0000000000009fb5
- (void)reload;	// IMP=0x0000000000009f15
- (void)shutdown;	// IMP=0x0000000000009e8d
- (id)description;	// IMP=0x0000000000009db9
- (struct __CFURLStorageSession *)copyStorageSession;	// IMP=0x0000000000009c17
- (_Bool)isSubscribedCalendarAccount;	// IMP=0x0000000000009c0f
- (_Bool)isGoogleAccount;	// IMP=0x0000000000009c07
- (_Bool)isHotmailAccount;	// IMP=0x0000000000009bff
- (_Bool)isCalDAVChildAccount;	// IMP=0x0000000000009bf7
- (_Bool)isDelegateAccount;	// IMP=0x0000000000009bef
- (_Bool)isCardDAVAccount;	// IMP=0x0000000000009be7
- (_Bool)isCalDAVAccount;	// IMP=0x0000000000009bdf
- (_Bool)isLDAPAccount;	// IMP=0x0000000000009bd7
- (_Bool)isActiveSyncAccount;	// IMP=0x0000000000009bcf
- (_Bool)accountHasSignificantPropertyChangesWithChangeInfo:(id)arg1;	// IMP=0x00000000000095ad
- (_Bool)isEqualToAccount:(id)arg1;	// IMP=0x000000000000950f
@property(readonly, nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;
- (void)resetStatusReport;	// IMP=0x000000000000901d
- (_Bool)resetCertWarnings;	// IMP=0x0000000000008fd9
@property(readonly, nonatomic) _Bool isChildAccount;
- (void)cleanupAccountFiles;	// IMP=0x0000000000008f02
- (void)setExceptions:(struct __CFData *)arg1 forDigest:(id)arg2;	// IMP=0x0000000000008dba
- (struct __CFData *)exceptionsForDigest:(id)arg1;	// IMP=0x0000000000008d17
- (id)exceptionsDict;	// IMP=0x0000000000008cfe
- (_Bool)_isIdentityManagedByProfile;	// IMP=0x0000000000008cb3
- (void)setIdentityCertificatePersistentID:(id)arg1 managedByProfile:(_Bool)arg2;	// IMP=0x0000000000008b76
@property(readonly, copy, nonatomic) NSData *identityPersist;
- (_Bool)canSaveWithAccountProvider:(CDUnknownBlockType)arg1;	// IMP=0x000000000000854a
- (_Bool)preflightSaveWithAccountProvider:(CDUnknownBlockType)arg1;	// IMP=0x00000000000084ba
- (id)addUsernameToURL:(id)arg1;	// IMP=0x0000000000008310
@property(readonly, nonatomic) int keychainAccessibilityType;
- (void)updateExistingAccountProperties;	// IMP=0x0000000000008101
- (void)saveAccountProperties;	// IMP=0x0000000000007fe2
- (void)saveAccountPropertiesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000007ce6
- (void)removeClientCertificateData;	// IMP=0x0000000000007c82
- (id)defaultContainerIdentifierForDADataclass:(long long)arg1;	// IMP=0x0000000000007c7a
- (void)stopMonitoringFolders;	// IMP=0x0000000000007b9b
- (void)stopMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000007abc
- (_Bool)monitorFolderWithID:(id)arg1;	// IMP=0x0000000000007a0c
- (_Bool)monitorFoldersWithIDs:(id)arg1;	// IMP=0x0000000000007a04
- (void)tearDown;	// IMP=0x0000000000007925
- (id)oauthInfoProvider;	// IMP=0x000000000000791c
- (id)oauth2Token;	// IMP=0x0000000000007639
- (id)customConnectionProperties;	// IMP=0x000000000000750a
- (id)additionalHeaderValues;	// IMP=0x00000000000072f0
- (_Bool)handleCertificateError:(id)arg1;	// IMP=0x00000000000072e8
@property(readonly, nonatomic) NSSet *serverComplianceClasses;
@property(readonly, nonatomic) NSString *serverRoot;
@property(readonly, nonatomic) NSString *userAgentHeader;
- (void)_handleSignificantPropertyChanges;	// IMP=0x00000000000072a0
- (void)accountDidChangeWithChangeInfo:(id)arg1;	// IMP=0x00000000000071ab
- (void)removeDBSyncData;	// IMP=0x0000000000006718
- (_Bool)shouldRemoveDBSyncDataOnAccountChange;	// IMP=0x00000000000066b8
- (id)onBehalfOfBundleIdentifier;	// IMP=0x000000000000661a
@property(readonly, nonatomic) _Bool shouldAutodiscoverAccountProperties;
@property(nonatomic) _Bool shouldDoInitialAutodiscovery;
- (_Bool)autodiscoverAccountConfigurationWithConsumer:(id)arg1;	// IMP=0x00000000000064fa
- (void)discoverInitialPropertiesWithConsumer:(id)arg1;	// IMP=0x0000000000006450
- (_Bool)saveModifiedPropertiesOnBackingAccount;	// IMP=0x0000000000006448
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2 inQueue:(id)arg3;	// IMP=0x0000000000006063
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2;	// IMP=0x0000000000005fef
@property(copy, nonatomic) NSURL *principalURL;
@property(readonly, copy, nonatomic) NSString *scheme;
@property(copy, nonatomic) NSString *principalPath;
@property(nonatomic) long long port;
@property(retain, nonatomic) NSData *encryptionIdentityPersistentReference;
@property(retain, nonatomic) NSData *signingIdentityPersistentReference;
@property(readonly, nonatomic) NSString *preferredAddress;
- (_Bool)accountContainsEmailAddress:(id)arg1;	// IMP=0x000000000000599d
@property(copy, nonatomic) NSArray *emailAddresses;
@property(copy, nonatomic) NSString *emailAddress;
@property(nonatomic) _Bool useSSL;
@property(copy, nonatomic) NSString *host;
- (id)domainOnly;	// IMP=0x00000000000056bc
- (id)usernameWithoutDomain;	// IMP=0x00000000000056aa
- (long long)portFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x000000000000563c
- (_Bool)useSSLFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x00000000000055a0
- (id)hostFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000005550
- (id)urlFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x00000000000051f4
- (void)performUsingAccountPersona:(CDUnknownBlockType)arg1;	// IMP=0x0000000000004e48
@property(copy, nonatomic) NSString *password;
- (id)passwordWithExpected:(_Bool)arg1;	// IMP=0x0000000000004a7d
- (void)clientTokenRequestedByServer;	// IMP=0x0000000000004935
@property(readonly, copy, nonatomic) NSString *clientToken;
- (void)removeConsumerForTask:(id)arg1;	// IMP=0x0000000000004749
- (id)consumerForTask:(id)arg1;	// IMP=0x0000000000004733
- (void)setConsumer:(id)arg1 forTask:(id)arg2;	// IMP=0x00000000000045eb
- (id)stateString;	// IMP=0x00000000000043e0
- (void)stopMonitoringFolderWithID:(id)arg1;	// IMP=0x0000000000004301
- (void)suspendMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000004222
- (void)resumeMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000004178
- (void)setAccountIntProperty:(int)arg1 forKey:(id)arg2;	// IMP=0x00000000000040db
- (int)accountIntPropertyForKey:(id)arg1;	// IMP=0x0000000000004045
- (void)setAccountBoolProperty:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000003fa8
- (_Bool)accountBoolPropertyForKey:(id)arg1;	// IMP=0x0000000000003f12
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x0000000000003e8f
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x0000000000003e09
- (void)removeAccountPropertyForKey:(id)arg1;	// IMP=0x0000000000003d95
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000003d0f
- (id)accountPropertyForKey:(id)arg1;	// IMP=0x0000000000003c8c
- (id)spinnerIdentifiers;	// IMP=0x0000000000003be0
- (id)dataclassProperties;	// IMP=0x0000000000003bca
@property(readonly, nonatomic) long long enabledDataclassesBitmask;
- (void)setEnabled:(_Bool)arg1 forDADataclass:(long long)arg2;	// IMP=0x00000000000039e5
- (_Bool)enabledForDADataclass:(long long)arg1;	// IMP=0x00000000000039a0
- (_Bool)enabledForAnyDADataclasses:(long long)arg1;	// IMP=0x00000000000038b8
- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;	// IMP=0x00000000000038a2
- (_Bool)isEnabledForDataclass:(id)arg1;	// IMP=0x000000000000388c
- (_Bool)isDisabled;	// IMP=0x0000000000002867
@property(copy, nonatomic) NSString *user;
@property(copy, nonatomic) NSString *username;
- (id)displayName;	// IMP=0x000000000000382a
@property(copy, nonatomic) NSString *accountDescription;
- (id)redactedDescription;	// IMP=0x00000000000037a5
@property(readonly, nonatomic) NSString *publicDescription;
@property(readonly, nonatomic) NSString *changeTrackingID;
- (void)_setPersistentUUID:(id)arg1;	// IMP=0x0000000000003689
@property(readonly, copy, nonatomic) NSString *persistentUUID;
@property(readonly, nonatomic) NSString *scheduleIdentifier;
- (id)syncStoreIdentifier;	// IMP=0x00000000000023a0
@property(readonly, nonatomic) NSString *accountID;
- (void)resetAccountID;	// IMP=0x0000000000003528
- (_Bool)upgradeAccount;	// IMP=0x00000000000034c4
@property(nonatomic, setter=setDAAccountVersion:) int daAccountVersion;
- (id)containerProviderWithDBHelper:(id)arg1;	// IMP=0x00000000000033ce
- (id)accountsProviderWithDBHelper:(id)arg1;	// IMP=0x00000000000032f1
- (void)ingestBackingAccountInfoProperties;	// IMP=0x0000000000003095
- (void)_refreshCredential;	// IMP=0x0000000000002f1e
- (id)initWithBackingAccountInfo:(id)arg1;	// IMP=0x0000000000002db2
- (void)dealloc;	// IMP=0x00000000000023b2
- (_Bool)handleTrustChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000a732
- (_Bool)handleTrustChallenge:(id)arg1;	// IMP=0x000000000000a6b8
- (id)getAppleIDSession;	// IMP=0x000000000000a7c0
- (void)removeFromCoreDAVLoggingDelegates;	// IMP=0x000000000000a7ce
- (void)addToCoreDAVLoggingDelegates;	// IMP=0x000000000000a7c8
- (void)handleValidationError:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000b4a0
- (void)webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000b39b
- (void)_webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000b076
- (void)dropAssertionsAndRenewCredentialsInQueue:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000a910
- (id)localizedInvalidPasswordMessage;	// IMP=0x000000000000a872
- (id)localizedIdenticalAccountFailureMessage;	// IMP=0x000000000000a7d4
- (void)accountDidChangeFromOldAccountInfo:(id)arg1;	// IMP=0x000000000000bb6f
- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;	// IMP=0x000000000000b8d9
- (void)cancelOfficeHoursRequestWithID:(id)arg1;	// IMP=0x000000000000cea9
- (id)setOfficeHours:(id)arg1 withConsumer:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000cd9c
- (id)fetchOfficeHoursWithConsumer:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000cc8f
- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;	// IMP=0x000000000000cc89
- (id)reportShareRequestAsJunkForCalendar:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000cb37
- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(long long)arg2 consumer:(id)arg3;	// IMP=0x000000000000c9e5
- (void)cancelCalendarDirectorySearchWithID:(id)arg1;	// IMP=0x000000000000c8fa
- (void)performGroupExpansionForPrincipalPath:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000c7cd
- (id)performCalendarDirectorySearchForTerms:(id)arg1 recordTypes:(id)arg2 resultLimit:(unsigned long long)arg3 consumer:(id)arg4;	// IMP=0x000000000000c69e
- (void)cancelUpdateGrantedDelegatePermissionRequestWithID:(id)arg1;	// IMP=0x000000000000c5d8
- (id)updateGrantedDelegatePermission:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000c4ab
- (void)cancelGrantedDelegatesListRequestWithID:(id)arg1;	// IMP=0x000000000000c3e5
- (id)requestGrantedDelegatesListWithConsumer:(id)arg1;	// IMP=0x000000000000c2b6
- (void)cancelCalendarAvailabilityRequestWithID:(id)arg1;	// IMP=0x000000000000c1f0
- (id)requestCalendarAvailabilityForStartDate:(id)arg1 endDate:(id)arg2 ignoredEventID:(id)arg3 addresses:(id)arg4 consumer:(id)arg5;	// IMP=0x000000000000c0c2
- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;	// IMP=0x000000000000c0bc
- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000bf6a
- (_Bool)sendEmailsForCalEvents:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000000bf62
- (void)synchronizeEventsFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;	// IMP=0x000000000000bf5c
- (id)eventsFolders;	// IMP=0x000000000000bf54
- (id)defaultEventsFolder;	// IMP=0x000000000000bf4c
- (void)synchronizeContactsFolder:(id)arg1 previousTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 highestIdContext:(id)arg5 isInitialUberSync:(_Bool)arg6 isResyncAfterConnectionFailed:(_Bool)arg7 previousTagIsSuspect:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;	// IMP=0x000000000000d689
- (id)contactsFolders;	// IMP=0x000000000000d681
- (id)defaultContactsFolder;	// IMP=0x000000000000d679
- (id)draftsFolder;	// IMP=0x000000000000d6cb
- (id)deletedItemsFolder;	// IMP=0x000000000000d6c3
- (id)sentItemsFolder;	// IMP=0x000000000000d6bb
- (id)inboxFolder;	// IMP=0x000000000000d6b3
- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;	// IMP=0x000000000000d6db
- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;	// IMP=0x000000000000d6d3
- (_Bool)isOofSupported;	// IMP=0x000000000001f21b
- (void)retrieveOofSettingsForConsumer:(id)arg1;	// IMP=0x000000000001f10d
- (void)updateOofSettingsWithParams:(id)arg1 consumer:(id)arg2;	// IMP=0x000000000001efff
- (int)supportsEmailFlagging;	// IMP=0x000000000002022a
- (int)supportsMailboxSearch;	// IMP=0x0000000000020222
- (_Bool)searchQueriesRunning;	// IMP=0x00000000000200de
- (void)cancelAllSearchQueries;	// IMP=0x000000000001fdd0
- (void)cancelSearchQuery:(id)arg1;	// IMP=0x000000000001fb1a
- (void)performSearchQuery:(id)arg1;	// IMP=0x000000000001f7b6
- (void)_dequeueQuery;	// IMP=0x000000000001f3e0
- (id)getPendingQueryQueue;	// IMP=0x000000000001f2bf
- (_Bool)_reallySearchQueriesRunning;	// IMP=0x0000000000020370
- (void)_reallyCancelAllSearchQueries;	// IMP=0x000000000002036a
- (void)_reallyCancelPendingSearchQuery:(id)arg1;	// IMP=0x0000000000020364
- (void)_reallyCancelSearchQuery:(id)arg1;	// IMP=0x000000000002035e
- (void)_reallyPerformSearchQuery:(id)arg1;	// IMP=0x0000000000020232
- (void)setToDosNumberOfPastDaysToSync:(int)arg1;	// IMP=0x0000000000020396
- (int)toDosNumberOfPastDaysToSync;	// IMP=0x000000000002038e
- (void)synchronizeToDosFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;	// IMP=0x0000000000020388
- (id)toDosFolders;	// IMP=0x0000000000020380
- (id)defaultToDosFolder;	// IMP=0x0000000000020378
- (void)synchronizeNotesFolder:(id)arg1 noteContext:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 changeSet:(id)arg5 notesToDeleteAfterSync:(id)arg6 isInitialUberSync:(_Bool)arg7 isResyncAfterConnectionFailed:(_Bool)arg8 moreLocalChangesAvailable:(_Bool)arg9 consumer:(id)arg10;	// IMP=0x0000000000038c36
- (id)notesFolders;	// IMP=0x0000000000038c2e
- (id)defaultNotesFolder;	// IMP=0x0000000000038c26

@end

