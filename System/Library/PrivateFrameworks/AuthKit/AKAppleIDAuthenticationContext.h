//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AuthKit/AKAppleIDAuthenticationLimitedUIProvider-Protocol.h>
#import <AuthKit/AKAuthenticationContext-Protocol.h>
#import <AuthKit/NSSecureCoding-Protocol.h>

@class AKAnisetteData, AKDevice, NSArray, NSData, NSDictionary, NSNumber, NSSet, NSString, NSUUID;
@protocol AKAnisetteServiceProtocol, OS_dispatch_queue;

@interface AKAppleIDAuthenticationContext : NSObject <AKAppleIDAuthenticationLimitedUIProvider, AKAuthenticationContext, NSSecureCoding>
{
    NSString *_generatedCode;	// 8 = 0x8
    NSNumber *_latitude;	// 16 = 0x10
    NSNumber *_longitude;	// 24 = 0x18
    NSString *_deviceClass;	// 32 = 0x20
    NSString *_deviceColor;	// 40 = 0x28
    NSString *_deviceEnclosureColor;	// 48 = 0x30
    struct __CFUserNotification *_activeSecondFactoryEntryPrompt;	// 56 = 0x38
    CDUnknownBlockType _secondFactoryEntryCompletion;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_secondFactorQueue;	// 72 = 0x48
    AKDevice *_proxiedDevice;	// 80 = 0x50
    AKDevice *_companionDevice;	// 88 = 0x58
    NSString *_interpolatedReason;	// 96 = 0x60
    unsigned long long _attemptIndex;	// 104 = 0x68
    _Bool _isContextRequestingReauthForExistingService;	// 112 = 0x70
    _Bool _performUIOutOfProcess;	// 113 = 0x71
    _Bool _keepAlive;	// 114 = 0x72
    _Bool _isProxyingForApp;	// 115 = 0x73
    _Bool _shouldSendIdentityTokenForRemoteUI;	// 116 = 0x74
    _Bool _shouldSendGrandSlamTokensForRemoteUI;	// 117 = 0x75
    _Bool _isPasswordEditable;	// 118 = 0x76
    _Bool _shouldSkipInitialReachabilityCheck;	// 119 = 0x77
    _Bool _shouldPreventInteractiveAuth;	// 120 = 0x78
    _Bool _shouldForceInteractiveAuth;	// 121 = 0x79
    _Bool _forceEligibleForForegroundAuthentication;	// 122 = 0x7a
    _Bool _cliMode;	// 123 = 0x7b
    _Bool _isUsernameEditable;	// 124 = 0x7c
    _Bool _shouldAllowAppleIDCreation;	// 125 = 0x7d
    _Bool _needsCredentialRecovery;	// 126 = 0x7e
    _Bool _needsNewAppleID;	// 127 = 0x7f
    _Bool _needsPasswordChange;	// 128 = 0x80
    _Bool _isTriggeredByNotification;	// 129 = 0x81
    _Bool _isEphemeral;	// 130 = 0x82
    _Bool _shouldOfferSecurityUpgrade;	// 131 = 0x83
    _Bool _needsRepair;	// 132 = 0x84
    _Bool _hideAlternativeButton;	// 133 = 0x85
    _Bool _hideCancelButton;	// 134 = 0x86
    _Bool _hideReasonString;	// 135 = 0x87
    _Bool _clientShouldHandleAlternativeButtonAction;	// 136 = 0x88
    _Bool _alwaysShowUsernameField;	// 137 = 0x89
    _Bool _shouldPromptForPasswordOnly;	// 138 = 0x8a
    _Bool _shouldUpdatePersistentServiceTokens;	// 139 = 0x8b
    _Bool _shouldRequestRecoveryPET;	// 140 = 0x8c
    _Bool _shouldRequestShortLivedToken;	// 141 = 0x8d
    _Bool _shouldRequestConfigurationInfo;	// 142 = 0x8e
    _Bool _supportsPiggybacking;	// 143 = 0x8f
    _Bool _anticipateEscrowAttempt;	// 144 = 0x90
    _Bool _isFirstTimeLogin;	// 145 = 0x91
    _Bool _shouldSkipSettingsLaunchAlert;	// 146 = 0x92
    _Bool _needsNewChildAccount;	// 147 = 0x93
    _Bool _needsSecurityUpgradeUI;	// 148 = 0x94
    NSString *_proxiedAppBundleID;	// 152 = 0x98
    NSUUID *_identifier;	// 160 = 0xa0
    NSString *_identityToken;	// 168 = 0xa8
    NSString *_passwordPromptTitle;	// 176 = 0xb0
    NSString *_proxiedAppName;	// 184 = 0xb8
    NSString *_password;	// 192 = 0xc0
    unsigned long long _capabilityForUIDisplay;	// 200 = 0xc8
    NSString *_shortLivedToken;	// 208 = 0xd0
    NSString *_message;	// 216 = 0xd8
    AKAnisetteData *_companionDeviceAnisetteData;	// 224 = 0xe0
    AKAnisetteData *_proxiedDeviceAnisetteData;	// 232 = 0xe8
    NSString *_appProvidedContext;	// 240 = 0xf0
    NSString *_masterKey;	// 248 = 0xf8
    long long _authenticationMode;	// 256 = 0x100
    NSString *_username;	// 264 = 0x108
    long long _serviceType;	// 272 = 0x110
    NSString *_reason;	// 280 = 0x118
    NSString *_defaultButtonString;	// 288 = 0x120
    long long _maximumLoginAttempts;	// 296 = 0x128
    NSArray *_serviceIdentifiers;	// 304 = 0x130
    NSString *_DSID;	// 312 = 0x138
    NSString *_altDSID;	// 320 = 0x140
    NSDictionary *_httpHeadersForRemoteUI;	// 328 = 0x148
    id _clientInfo;	// 336 = 0x150
    NSDictionary *_appProvidedData;	// 344 = 0x158
    NSString *_title;	// 352 = 0x160
    NSString *_helpAnchor;	// 360 = 0x168
    NSString *_helpBook;	// 368 = 0x170
    long long _authenticationPromptStyle;	// 376 = 0x178
    NSString *_cancelButtonString;	// 384 = 0x180
    NSString *_alternativeButtonString;	// 392 = 0x188
    NSString *_windowTitle;	// 400 = 0x190
    NSString *_privacyBundleIdentifier;	// 408 = 0x198
    NSData *_displayImageData;	// 416 = 0x1a0
    unsigned long long _authenticationType;	// 424 = 0x1a8
    id <AKAnisetteServiceProtocol> _anisetteDataProvider;	// 432 = 0x1b0
    NSNumber *_isAppleIDLoginEnabled;	// 440 = 0x1b8
    NSNumber *_hasEmptyPassword;	// 448 = 0x1c0
    NSSet *_desiredInternalTokens;	// 456 = 0x1c8
    NSString *_securityUpgradeContext;	// 464 = 0x1d0
    NSString *_cellularDataAttributionAppBundleID;	// 472 = 0x1d8
    long long _verifyCredentialReason;	// 480 = 0x1e0
    NSString *_custodianRecoveryToken;	// 488 = 0x1e8
    NSString *_callerIconBundlePath;	// 496 = 0x1f0
    NSString *_localizedCallerName;	// 504 = 0x1f8
    NSString *_displayString;	// 512 = 0x200
    NSString *_displayTitle;	// 520 = 0x208
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000061156
- (void).cxx_destruct;	// IMP=0x0000000000067af3
@property(copy, nonatomic) NSString *displayTitle; // @synthesize displayTitle=_displayTitle;
@property(copy, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
@property(copy, nonatomic) NSString *localizedCallerName; // @synthesize localizedCallerName=_localizedCallerName;
@property(copy, nonatomic) NSString *callerIconBundlePath; // @synthesize callerIconBundlePath=_callerIconBundlePath;
@property(copy, nonatomic, setter=setCustodianRecoveryToken:) NSString *custodianRecoveryToken; // @synthesize custodianRecoveryToken=_custodianRecoveryToken;
@property(nonatomic) long long verifyCredentialReason; // @synthesize verifyCredentialReason=_verifyCredentialReason;
@property(copy, nonatomic) NSString *cellularDataAttributionAppBundleID; // @synthesize cellularDataAttributionAppBundleID=_cellularDataAttributionAppBundleID;
@property(nonatomic) _Bool needsSecurityUpgradeUI; // @synthesize needsSecurityUpgradeUI=_needsSecurityUpgradeUI;
@property(nonatomic) _Bool needsNewChildAccount; // @synthesize needsNewChildAccount=_needsNewChildAccount;
@property(copy, nonatomic) NSString *securityUpgradeContext; // @synthesize securityUpgradeContext=_securityUpgradeContext;
@property(nonatomic) _Bool shouldSkipSettingsLaunchAlert; // @synthesize shouldSkipSettingsLaunchAlert=_shouldSkipSettingsLaunchAlert;
@property(nonatomic, setter=setFirstTimeLogin:) _Bool isFirstTimeLogin; // @synthesize isFirstTimeLogin=_isFirstTimeLogin;
@property(copy, nonatomic) NSSet *desiredInternalTokens; // @synthesize desiredInternalTokens=_desiredInternalTokens;
@property(nonatomic) _Bool anticipateEscrowAttempt; // @synthesize anticipateEscrowAttempt=_anticipateEscrowAttempt;
@property(nonatomic) _Bool supportsPiggybacking; // @synthesize supportsPiggybacking=_supportsPiggybacking;
@property(nonatomic) _Bool shouldRequestConfigurationInfo; // @synthesize shouldRequestConfigurationInfo=_shouldRequestConfigurationInfo;
@property(nonatomic) _Bool shouldRequestShortLivedToken; // @synthesize shouldRequestShortLivedToken=_shouldRequestShortLivedToken;
@property(nonatomic) _Bool shouldRequestRecoveryPET; // @synthesize shouldRequestRecoveryPET=_shouldRequestRecoveryPET;
@property(copy, nonatomic, setter=setHasEmptyPassword:) NSNumber *hasEmptyPassword; // @synthesize hasEmptyPassword=_hasEmptyPassword;
@property(copy, nonatomic, setter=setAppleIDLoginEnabled:) NSNumber *isAppleIDLoginEnabled; // @synthesize isAppleIDLoginEnabled=_isAppleIDLoginEnabled;
@property(retain, nonatomic) id <AKAnisetteServiceProtocol> anisetteDataProvider; // @synthesize anisetteDataProvider=_anisetteDataProvider;
@property(nonatomic) _Bool shouldUpdatePersistentServiceTokens; // @synthesize shouldUpdatePersistentServiceTokens=_shouldUpdatePersistentServiceTokens;
@property(nonatomic) _Bool shouldPromptForPasswordOnly; // @synthesize shouldPromptForPasswordOnly=_shouldPromptForPasswordOnly;
@property(nonatomic) unsigned long long authenticationType; // @synthesize authenticationType=_authenticationType;
@property(retain) NSData *displayImageData; // @synthesize displayImageData=_displayImageData;
@property(copy) NSString *privacyBundleIdentifier; // @synthesize privacyBundleIdentifier=_privacyBundleIdentifier;
@property(nonatomic) _Bool alwaysShowUsernameField; // @synthesize alwaysShowUsernameField=_alwaysShowUsernameField;
@property(retain) NSString *windowTitle; // @synthesize windowTitle=_windowTitle;
@property(nonatomic) _Bool clientShouldHandleAlternativeButtonAction; // @synthesize clientShouldHandleAlternativeButtonAction=_clientShouldHandleAlternativeButtonAction;
@property _Bool hideReasonString; // @synthesize hideReasonString=_hideReasonString;
@property _Bool hideCancelButton; // @synthesize hideCancelButton=_hideCancelButton;
@property _Bool hideAlternativeButton; // @synthesize hideAlternativeButton=_hideAlternativeButton;
@property(retain) NSString *alternativeButtonString; // @synthesize alternativeButtonString=_alternativeButtonString;
@property(retain) NSString *cancelButtonString; // @synthesize cancelButtonString=_cancelButtonString;
@property(nonatomic) long long authenticationPromptStyle; // @synthesize authenticationPromptStyle=_authenticationPromptStyle;
@property(copy, nonatomic) NSString *helpBook; // @synthesize helpBook=_helpBook;
@property(copy, nonatomic) NSString *helpAnchor; // @synthesize helpAnchor=_helpAnchor;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) _Bool needsRepair; // @synthesize needsRepair=_needsRepair;
@property(nonatomic) _Bool shouldOfferSecurityUpgrade; // @synthesize shouldOfferSecurityUpgrade=_shouldOfferSecurityUpgrade;
@property(copy, nonatomic) NSDictionary *appProvidedData; // @synthesize appProvidedData=_appProvidedData;
@property(retain, nonatomic) id clientInfo; // @synthesize clientInfo=_clientInfo;
@property(copy, nonatomic) NSDictionary *httpHeadersForRemoteUI; // @synthesize httpHeadersForRemoteUI=_httpHeadersForRemoteUI;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSString *DSID; // @synthesize DSID=_DSID;
@property(nonatomic) _Bool isEphemeral; // @synthesize isEphemeral=_isEphemeral;
@property(copy, nonatomic) NSArray *serviceIdentifiers; // @synthesize serviceIdentifiers=_serviceIdentifiers;
@property(nonatomic) long long maximumLoginAttempts; // @synthesize maximumLoginAttempts=_maximumLoginAttempts;
@property(copy, nonatomic) NSString *defaultButtonString; // @synthesize defaultButtonString=_defaultButtonString;
@property(copy, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(nonatomic) long long serviceType; // @synthesize serviceType=_serviceType;
@property(nonatomic, setter=setTriggeredByNotification:) _Bool isTriggeredByNotification; // @synthesize isTriggeredByNotification=_isTriggeredByNotification;
@property(nonatomic) _Bool needsPasswordChange; // @synthesize needsPasswordChange=_needsPasswordChange;
@property(nonatomic) _Bool needsNewAppleID; // @synthesize needsNewAppleID=_needsNewAppleID;
@property(nonatomic) _Bool needsCredentialRecovery; // @synthesize needsCredentialRecovery=_needsCredentialRecovery;
@property(nonatomic) _Bool shouldAllowAppleIDCreation; // @synthesize shouldAllowAppleIDCreation=_shouldAllowAppleIDCreation;
@property(nonatomic) _Bool isUsernameEditable; // @synthesize isUsernameEditable=_isUsernameEditable;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) _Bool cliMode; // @synthesize cliMode=_cliMode;
@property(nonatomic, getter=_isForcedEligibleForForegroundAuthentication, setter=set_forceEligibleForForegroundAuthentication:) _Bool _forceEligibleForForegroundAuthentication; // @synthesize _forceEligibleForForegroundAuthentication;
@property(nonatomic) long long authenticationMode; // @synthesize authenticationMode=_authenticationMode;
@property(nonatomic) _Bool _keepAlive; // @synthesize _keepAlive;
@property(nonatomic) _Bool _performUIOutOfProcess; // @synthesize _performUIOutOfProcess;
@property(copy, nonatomic, setter=_setMasterKey:) NSString *_masterKey; // @synthesize _masterKey;
@property(copy, nonatomic) NSString *appProvidedContext; // @synthesize appProvidedContext=_appProvidedContext;
@property(retain, nonatomic) AKAnisetteData *proxiedDeviceAnisetteData; // @synthesize proxiedDeviceAnisetteData=_proxiedDeviceAnisetteData;
@property(retain, nonatomic) AKAnisetteData *companionDeviceAnisetteData; // @synthesize companionDeviceAnisetteData=_companionDeviceAnisetteData;
@property(nonatomic) unsigned long long _attemptIndex; // @synthesize _attemptIndex;
@property(nonatomic) _Bool _shouldSkipInitialReachabilityCheck; // @synthesize _shouldSkipInitialReachabilityCheck;
@property(copy, nonatomic, setter=_setMessage:) NSString *_message; // @synthesize _message;
@property(copy, nonatomic, setter=_setShortLivedToken:) NSString *_shortLivedToken; // @synthesize _shortLivedToken;
@property(nonatomic) _Bool _isPasswordEditable; // @synthesize _isPasswordEditable;
@property(copy, nonatomic, setter=_setPassword:) NSString *_password; // @synthesize _password;
@property(copy, nonatomic, setter=_setProxiedAppName:) NSString *_proxiedAppName; // @synthesize _proxiedAppName;
@property(copy, nonatomic) NSString *_passwordPromptTitle; // @synthesize _passwordPromptTitle;
@property(nonatomic) _Bool _shouldSendGrandSlamTokensForRemoteUI; // @synthesize _shouldSendGrandSlamTokensForRemoteUI;
@property(nonatomic) _Bool _shouldSendIdentityTokenForRemoteUI; // @synthesize _shouldSendIdentityTokenForRemoteUI;
@property(copy, nonatomic, setter=_setIdentityToken:) NSString *_identityToken; // @synthesize _identityToken;
@property(readonly, nonatomic) NSUUID *_identifier; // @synthesize _identifier;
@property(copy, nonatomic, setter=_setProxiedAppBundleID:) NSString *_proxiedAppBundleID; // @synthesize _proxiedAppBundleID;
@property(nonatomic, setter=_setProxyingForApp:) _Bool _isProxyingForApp; // @synthesize _isProxyingForApp;
- (void)presentBiometricOrPasscodeValidationForAppleID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000067282
- (id)_secondFactorQueue;	// IMP=0x0000000000067245
- (void)_handleSecondFactorCodeEntry;	// IMP=0x0000000000066fb5
- (void)_stopListeningForSecondFactorCodeEntryNotification;	// IMP=0x0000000000066f36
- (void)_startListeningForSecondFactorCodeEntryNotification;	// IMP=0x0000000000066e0b
- (void)presentSecondFactorAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000066ac1
- (void)dismissSecondFactorUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066932
- (void)presentSecondFactorUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000662f0
- (void)presentLoginAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000065f6f
- (void)dismissBasicLoginUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000065f5a
@property(readonly, nonatomic) _Bool _requiresPasswordInput;
- (void)presentBasicLoginUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000654fa
@property(copy, nonatomic) AKDevice *companionDevice; // @synthesize companionDevice=_companionDevice;
@property(copy, nonatomic) AKDevice *proxiedDevice; // @synthesize proxiedDevice=_proxiedDevice;
@property(copy, nonatomic) NSString *serviceIdentifier;
- (id)_appendBlameIfRequiredTo:(id)arg1;	// IMP=0x00000000000650b8
@property(readonly, nonatomic) NSString *_interpolatedReasonWithBlame;
@property(readonly, nonatomic) NSString *_interpolatedReason;
@property(nonatomic) _Bool shouldForceInteractiveAuth; // @synthesize shouldForceInteractiveAuth=_shouldForceInteractiveAuth;
@property(nonatomic) _Bool shouldPreventInteractiveAuth; // @synthesize shouldPreventInteractiveAuth=_shouldPreventInteractiveAuth;
@property(readonly, nonatomic) _Bool _shouldRefreshAccountAndUpdateContext;
@property(readonly, nonatomic) unsigned long long _capabilityForUIDisplay; // @synthesize _capabilityForUIDisplay;
@property(readonly, nonatomic, getter=isContextRequestingReauthForExistingService) _Bool contextRequestingReauthForExistingService;
- (_Bool)_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth;	// IMP=0x00000000000649df
@property(readonly, nonatomic, getter=isContextEligibleForBiometricOrPasscodeAuth) _Bool contextEligibleForBiometricOrPasscodeAuth;
@property(readonly, nonatomic, getter=isContextEligibleForSilentAuth) _Bool contextEligibleForSilentAuth;
@property(readonly, nonatomic, getter=isContextEligibleForSilentAuthCoercion) _Bool contextEligibleForSilentAuthCoercion;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (_Bool)_localUserHasEmptyPassword;	// IMP=0x000000000006414b
- (void)_updateWithValuesFromContext:(id)arg1;	// IMP=0x0000000000063b29
- (id)_sanitizedCopy;	// IMP=0x00000000000633dd
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000006286a
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000006146f
- (id)initWithContext:(id)arg1;	// IMP=0x0000000000061314
- (id)_initWithIdentifier:(id)arg1;	// IMP=0x00000000000611b8
- (id)init;	// IMP=0x000000000006115e
- (id)authKitAccountForSilentServiceToken:(id *)arg1;	// IMP=0x000000000004307b
- (id)authKitAccount:(id *)arg1;	// IMP=0x0000000000042cbf
@property(copy, nonatomic) NSString *generatedCode;
@property(copy, nonatomic) NSString *deviceEnclosureColor;
@property(copy, nonatomic) NSString *deviceColor;
@property(copy, nonatomic) NSString *deviceClass;
@property(copy, nonatomic) NSNumber *longitude;
@property(copy, nonatomic) NSNumber *latitude;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

