//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AuthKit/NSSecureCoding-Protocol.h>

@class AKAnisetteData, AKAnisetteProvisioningController, AKAppleIDAuthenticationContext, AKAttestationData, AKDevice, NSArray, NSDictionary, NSNumber, NSString;
@protocol AKAnisetteServiceProtocol;

@interface AKAppleIDServerResourceLoadDelegate : NSObject <NSSecureCoding>
{
    NSString *_altDSID;	// 8 = 0x8
    AKAnisetteProvisioningController *_proxiedProvisioningController;	// 16 = 0x10
    NSDictionary *_continuationHeaders;	// 24 = 0x18
    AKAppleIDAuthenticationContext *_context;	// 32 = 0x20
    _Bool _shouldSendEphemeralAuthHeader;	// 40 = 0x28
    _Bool _shouldSendICSCIntentHeader;	// 41 = 0x29
    _Bool _shouldSendLocalUserHasAppleIDLoginHeader;	// 42 = 0x2a
    _Bool _shouldSendPhoneNumber;	// 43 = 0x2b
    _Bool _shouldOfferSecurityUpgrade;	// 44 = 0x2c
    _Bool _cliMode;	// 45 = 0x2d
    _Bool _shouldSendSigningHeaders;	// 46 = 0x2e
    NSString *_serviceToken;	// 48 = 0x30
    NSString *_phoneNumberCertificate;	// 56 = 0x38
    NSArray *_phoneInformation;	// 64 = 0x40
    long long _serviceType;	// 72 = 0x48
    NSArray *_loggedInServices;	// 80 = 0x50
    NSString *_passwordResetToken;	// 88 = 0x58
    NSString *_continuationToken;	// 96 = 0x60
    NSString *_heartbeatToken;	// 104 = 0x68
    NSString *_identityToken;	// 112 = 0x70
    NSString *_initialURLRequestKey;	// 120 = 0x78
    NSString *_proxyAppName;	// 128 = 0x80
    NSString *_clientAppName;	// 136 = 0x88
    NSString *_appProvidedContext;	// 144 = 0x90
    NSNumber *_hasEmptyPasswordOverride;	// 152 = 0x98
    NSString *_securityUpgradeContext;	// 160 = 0xa0
    NSString *_followupItems;	// 168 = 0xa8
    NSString *_dataCenterIdentifier;	// 176 = 0xb0
    NSString *_custodianRecoveryToken;	// 184 = 0xb8
    AKDevice *_proxiedDevice;	// 192 = 0xc0
    NSString *_proxiedAltDSID;	// 200 = 0xc8
    NSString *_proxiedIdentityToken;	// 208 = 0xd0
    id <AKAnisetteServiceProtocol> _anisetteDataProvider;	// 216 = 0xd8
    AKAnisetteData *_proxiedDeviceAnisetteData;	// 224 = 0xe0
    AKAttestationData *_proxiedDeviceAttestationData;	// 232 = 0xe8
    NSString *_privateEmailKey;	// 240 = 0xf0
    NSString *_continuityIDMSData;	// 248 = 0xf8
    NSString *_bagUrlKey;	// 256 = 0x100
}

+ (unsigned long long)signalFromServerResponse:(id)arg1;	// IMP=0x00000000000395b1
+ (id)sharedController;	// IMP=0x00000000000364b5
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000364ad
- (void).cxx_destruct;	// IMP=0x000000000003a3a3
@property(nonatomic) _Bool shouldSendSigningHeaders; // @synthesize shouldSendSigningHeaders=_shouldSendSigningHeaders;
@property(copy, nonatomic) NSString *bagUrlKey; // @synthesize bagUrlKey=_bagUrlKey;
@property(copy, nonatomic) NSString *continuityIDMSData; // @synthesize continuityIDMSData=_continuityIDMSData;
@property(copy, nonatomic) NSString *privateEmailKey; // @synthesize privateEmailKey=_privateEmailKey;
@property(nonatomic) _Bool cliMode; // @synthesize cliMode=_cliMode;
@property(retain, nonatomic) AKAttestationData *proxiedDeviceAttestationData; // @synthesize proxiedDeviceAttestationData=_proxiedDeviceAttestationData;
@property(retain, nonatomic) AKAnisetteData *proxiedDeviceAnisetteData; // @synthesize proxiedDeviceAnisetteData=_proxiedDeviceAnisetteData;
@property(retain, nonatomic) id <AKAnisetteServiceProtocol> anisetteDataProvider; // @synthesize anisetteDataProvider=_anisetteDataProvider;
@property(retain, nonatomic) NSString *proxiedIdentityToken; // @synthesize proxiedIdentityToken=_proxiedIdentityToken;
@property(retain, nonatomic) NSString *proxiedAltDSID; // @synthesize proxiedAltDSID=_proxiedAltDSID;
@property(retain, nonatomic) AKDevice *proxiedDevice; // @synthesize proxiedDevice=_proxiedDevice;
@property(copy, nonatomic) NSString *custodianRecoveryToken; // @synthesize custodianRecoveryToken=_custodianRecoveryToken;
@property(copy, nonatomic) NSString *dataCenterIdentifier; // @synthesize dataCenterIdentifier=_dataCenterIdentifier;
@property(copy, nonatomic) NSString *followupItems; // @synthesize followupItems=_followupItems;
@property(copy, nonatomic) NSString *securityUpgradeContext; // @synthesize securityUpgradeContext=_securityUpgradeContext;
@property(retain, nonatomic) NSNumber *hasEmptyPasswordOverride; // @synthesize hasEmptyPasswordOverride=_hasEmptyPasswordOverride;
@property(copy, nonatomic) NSString *appProvidedContext; // @synthesize appProvidedContext=_appProvidedContext;
@property(copy, nonatomic) NSString *clientAppName; // @synthesize clientAppName=_clientAppName;
@property(copy, nonatomic) NSString *proxyAppName; // @synthesize proxyAppName=_proxyAppName;
@property(copy, nonatomic) NSString *initialURLRequestKey; // @synthesize initialURLRequestKey=_initialURLRequestKey;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSString *identityToken; // @synthesize identityToken=_identityToken;
@property(copy, nonatomic) NSString *heartbeatToken; // @synthesize heartbeatToken=_heartbeatToken;
@property(copy, nonatomic) NSString *continuationToken; // @synthesize continuationToken=_continuationToken;
@property(copy, nonatomic) NSString *passwordResetToken; // @synthesize passwordResetToken=_passwordResetToken;
@property(copy, nonatomic) NSArray *loggedInServices; // @synthesize loggedInServices=_loggedInServices;
@property(nonatomic) long long serviceType; // @synthesize serviceType=_serviceType;
@property(copy, nonatomic) NSArray *phoneInformation; // @synthesize phoneInformation=_phoneInformation;
@property(copy, nonatomic) NSString *phoneNumberCertificate; // @synthesize phoneNumberCertificate=_phoneNumberCertificate;
@property(nonatomic) _Bool shouldOfferSecurityUpgrade; // @synthesize shouldOfferSecurityUpgrade=_shouldOfferSecurityUpgrade;
@property(nonatomic) _Bool shouldSendPhoneNumber; // @synthesize shouldSendPhoneNumber=_shouldSendPhoneNumber;
@property(nonatomic) _Bool shouldSendLocalUserHasAppleIDLoginHeader; // @synthesize shouldSendLocalUserHasAppleIDLoginHeader=_shouldSendLocalUserHasAppleIDLoginHeader;
@property(nonatomic) _Bool shouldSendICSCIntentHeader; // @synthesize shouldSendICSCIntentHeader=_shouldSendICSCIntentHeader;
@property(nonatomic) _Bool shouldSendEphemeralAuthHeader; // @synthesize shouldSendEphemeralAuthHeader=_shouldSendEphemeralAuthHeader;
@property(copy, nonatomic) NSString *serviceToken; // @synthesize serviceToken=_serviceToken;
- (_Bool)_isResponseSuccessful:(id)arg1;	// IMP=0x0000000000039ff5
- (id)_retrieveAndResetContinuationHeaders;	// IMP=0x0000000000039fb9
- (void)_harvestContinuationHeadersFromHeaders:(id)arg1;	// IMP=0x0000000000039dc6
- (void)updateWithAuthResults:(id)arg1;	// IMP=0x0000000000039d21
- (void)decorateWithContext:(id)arg1;	// IMP=0x0000000000039825
- (void)decorateWithPrivateEmailContext:(id)arg1;	// IMP=0x0000000000039770
- (_Bool)isResponseCompleteAndConflict:(id)arg1;	// IMP=0x0000000000039541
- (_Bool)isResponseFinalForHSA2ServerFlow:(id)arg1;	// IMP=0x000000000003940f
- (_Bool)isResponseActionable:(id)arg1;	// IMP=0x00000000000393c7
- (_Bool)isAuthenticationRequired:(id)arg1;	// IMP=0x00000000000393a8
- (_Bool)isResponseFinal:(id)arg1;	// IMP=0x00000000000392dd
- (void)processResponse:(id)arg1;	// IMP=0x000000000003927e
- (void)_signRequestWithBAAHeaders:(id)arg1;	// IMP=0x0000000000038fa9
- (void)_signWithFeatureOptInHeaders:(id)arg1;	// IMP=0x0000000000038cec
- (void)_signWithProxiedDeviceHeaders:(id)arg1;	// IMP=0x0000000000038aa2
- (void)signRequestWithBasicHeaders:(id)arg1;	// IMP=0x000000000003882b
- (void)signRequestWithCommonHeaders:(id)arg1;	// IMP=0x0000000000038510
- (void)_signRequest:(id)arg1;	// IMP=0x0000000000037dff
- (id)signingController;	// IMP=0x0000000000037de6
- (id)_proxiedProvisioningController;	// IMP=0x0000000000037d66
- (void)signRequest:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000037123
- (void)signRequest:(id)arg1;	// IMP=0x0000000000037026
@property(nonatomic) _Bool shouldSendAbsintheHeader;
- (id)initWithAltDSID:(id)arg1 identityToken:(id)arg2;	// IMP=0x0000000000036f25
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000036bed
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000003650a

@end

