//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CardKit/CRKCardViewController.h>

#import <VoiceShortcutsUICardKitProviderSupport/SUICProgressIndicatorViewControllerDataSource-Protocol.h>
#import <VoiceShortcutsUICardKitProviderSupport/SUICProgressStateMachineObserving-Protocol.h>
#import <VoiceShortcutsUICardKitProviderSupport/VSUIActionStatusViewDelegate-Protocol.h>

@class NSLayoutConstraint, NSProgress, NSString, SUICProgressIndicatorViewController, SUICProgressStateMachine, UIActivityIndicatorView, UIView, VSUIActionStatusView;

@interface VSUIProgressCardViewController : CRKCardViewController <SUICProgressStateMachineObserving, SUICProgressIndicatorViewControllerDataSource, VSUIActionStatusViewDelegate>
{
    NSProgress *_progress;	// 8 = 0x8
    _Bool _animatesStateTransitions;	// 16 = 0x10
    _Bool _hasAsynchronousCard;	// 17 = 0x11
    NSLayoutConstraint *_statusViewSuccessHeightConstraint;	// 24 = 0x18
    NSLayoutConstraint *_statusViewFailureHeightConstraint;	// 32 = 0x20
    VSUIActionStatusView *_statusView;	// 40 = 0x28
    UIActivityIndicatorView *_loadingIndicatorView;	// 48 = 0x30
    SUICProgressIndicatorViewController *_progressIndicatorViewController;	// 56 = 0x38
    UIView *_hairlineView;	// 64 = 0x40
    SUICProgressStateMachine *_progressStateMachine;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x0000000000003285
@property(retain, nonatomic, getter=_progressStateMachine, setter=_setProgressStateMachine:) SUICProgressStateMachine *progressStateMachine; // @synthesize progressStateMachine=_progressStateMachine;
@property(retain, nonatomic, getter=_hairlineView, setter=_setHairlineView:) UIView *hairlineView; // @synthesize hairlineView=_hairlineView;
@property(retain, nonatomic, getter=_progressIndicatorViewController, setter=_setProgressIndicatorViewController:) SUICProgressIndicatorViewController *progressIndicatorViewController; // @synthesize progressIndicatorViewController=_progressIndicatorViewController;
@property(retain, nonatomic, getter=_loadingIndicatorView, setter=_setLoadingIndicatorView:) UIActivityIndicatorView *loadingIndicatorView; // @synthesize loadingIndicatorView=_loadingIndicatorView;
@property(retain, nonatomic, getter=_statusView, setter=_setStatusView:) VSUIActionStatusView *statusView; // @synthesize statusView=_statusView;
- (id)progressViewController;	// IMP=0x000000000000320f
@property(readonly) NSProgress *progress;
- (_Bool)shouldAnimateTransitionToState:(unsigned long long)arg1 fromState:(unsigned long long)arg2 forProgressIndicatorViewController:(id)arg3;	// IMP=0x00000000000031ea
- (id)stateMachineForProgressIndicatorViewController:(id)arg1;	// IMP=0x00000000000031d8
- (void)handleCardCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000000000030a4
- (double)contentHeightForWidth:(double)arg1;	// IMP=0x0000000000002f78
- (void)cardSectionViewDidAppearForCardSection:(id)arg1 withAppearanceFeedback:(id)arg2;	// IMP=0x0000000000002e43
- (void)cardSectionViewWillAppearForCardSection:(id)arg1 withAppearanceFeedback:(id)arg2;	// IMP=0x0000000000002c8a
- (id)_initWithCard:(id)arg1 delegate:(id)arg2 loadProvidersImmediately:(_Bool)arg3;	// IMP=0x0000000000002bba
- (_Bool)_canShowWhileLocked;	// IMP=0x0000000000002bb2
- (struct CGSize)preferredContentSize;	// IMP=0x0000000000002b64
- (void)progressStateMachine:(id)arg1 ignoredEvent:(unsigned long long)arg2;	// IMP=0x0000000000002b5e
- (void)progressStateMachine:(id)arg1 didTransitionToState:(unsigned long long)arg2 fromState:(unsigned long long)arg3 forEvent:(unsigned long long)arg4;	// IMP=0x00000000000027fc
- (void)actionStatusView:(id)arg1 didAddViewFromProgressViewController:(id)arg2;	// IMP=0x0000000000002758
- (void)_updateDelegateOnBoundsDidChange;	// IMP=0x000000000000246e
- (void)_setUpHelpers;	// IMP=0x0000000000002372
- (void)_setUpViews;	// IMP=0x0000000000001a24

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

