//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CNObservable;
@protocol CNCancelable, CNObservable, CNScheduler;

@interface _CNThrottledObservable
{
    id <CNObservable> _observable;	// 16 = 0x10
    double _interval;	// 24 = 0x18
    unsigned long long _options;	// 32 = 0x20
    id <CNScheduler> _observerScheduler;	// 40 = 0x28
    id <CNScheduler> _resourceLock;	// 48 = 0x30
    id _mostRecentResult;	// 56 = 0x38
    id <CNCancelable> _delayToken;	// 64 = 0x40
    _Bool _isCoalescing;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x0000000000058b0c
@property _Bool isCoalescing; // @synthesize isCoalescing=_isCoalescing;
@property(retain) id <CNCancelable> delayToken; // @synthesize delayToken=_delayToken;
@property(retain) id mostRecentResult; // @synthesize mostRecentResult=_mostRecentResult;
@property(readonly) id <CNScheduler> resourceLock; // @synthesize resourceLock=_resourceLock;
@property(readonly) id <CNScheduler> observerScheduler; // @synthesize observerScheduler=_observerScheduler;
@property(readonly) unsigned long long options; // @synthesize options=_options;
@property(readonly) double interval; // @synthesize interval=_interval;
@property(readonly) CNObservable *observable; // @synthesize observable=_observable;
- (void)observerScheduler_sendResultToObserver:(id)arg1;	// IMP=0x000000000005889d
- (id)subscribe:(id)arg1;	// IMP=0x0000000000057fc2
- (void)dealloc;	// IMP=0x0000000000057f57
- (id)initWithInterval:(double)arg1 options:(unsigned long long)arg2 observable:(id)arg3 schedulerProvider:(id)arg4;	// IMP=0x0000000000057e11

@end

