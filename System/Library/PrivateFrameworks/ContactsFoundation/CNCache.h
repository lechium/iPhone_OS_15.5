//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary;
@protocol CNScheduler;

@interface CNCache : NSObject
{
    NSArray *_boundingStrategies;	// 8 = 0x8
    id <CNScheduler> _resourceScheduler;	// 16 = 0x10
    NSMutableDictionary *_storage;	// 24 = 0x18
    NSMutableArray *_didEvictHandlers;	// 32 = 0x20
    NSArray *_evictedKeysAndValues;	// 40 = 0x28
}

+ (id)boundingStrategyWithTTL:(double)arg1 renewalOptions:(unsigned long long)arg2 timeProvider:(id)arg3;	// IMP=0x000000000000dfdc
+ (id)boundingStrategyWithTTL:(double)arg1;	// IMP=0x000000000000dfa1
+ (id)boundingStrategyWithCapacity:(unsigned long long)arg1;	// IMP=0x000000000000df6b
+ (id)nonatomicCacheScheduler;	// IMP=0x000000000000df52
+ (id)atomicCacheScheduler;	// IMP=0x000000000000df32
+ (id)atomicCache;	// IMP=0x000000000000dc74
+ (id)cache;	// IMP=0x000000000000dc62
- (void).cxx_destruct;	// IMP=0x000000000000f567
@property(copy, nonatomic) NSArray *evictedKeysAndValues; // @synthesize evictedKeysAndValues=_evictedKeysAndValues;
@property(readonly, nonatomic) NSMutableArray *didEvictHandlers; // @synthesize didEvictHandlers=_didEvictHandlers;
@property(readonly, nonatomic) NSMutableDictionary *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) id <CNScheduler> resourceScheduler; // @synthesize resourceScheduler=_resourceScheduler;
@property(readonly, copy, nonatomic) NSArray *boundingStrategies; // @synthesize boundingStrategies=_boundingStrategies;
- (void)callDidEvictHandlersIfNecessary;	// IMP=0x000000000000f321
- (void)resourceLock_evictObjectsForKeys:(id)arg1;	// IMP=0x000000000000f124
- (void)resourceLock_evictObjectForKey:(id)arg1;	// IMP=0x000000000000f075
- (void)resourceLock_validateAllKeys;	// IMP=0x000000000000ee77
- (void)resourceLock_validateKey:(id)arg1;	// IMP=0x000000000000ed87
- (void)resourceLock_willAccessKey:(id)arg1;	// IMP=0x000000000000ec36
- (void)resourceLock_willSetObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000ea53
- (void)addDidEvictHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e986
- (void)removeAllObjects;	// IMP=0x000000000000e8f9
@property(readonly, copy) NSArray *allObjects;
@property(readonly, copy) NSArray *allKeys;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x000000000000e725
- (void)resourceLock_setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000e66c
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000000e553
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x000000000000e541
- (id)objectForKey:(id)arg1 onCacheMiss:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e389
- (id)objectForKey:(id)arg1;	// IMP=0x000000000000e248
- (id)resultWithResourceLock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e0b4
- (void)performWithResourceLock:(CDUnknownBlockType)arg1;	// IMP=0x000000000000e042
- (id)description;	// IMP=0x000000000000de4e
- (id)initWithBoundingStrategies:(id)arg1 resourceScheduler:(id)arg2;	// IMP=0x000000000000dd49
- (id)initWithResourceScheduler:(id)arg1;	// IMP=0x000000000000dd2d
- (id)init;	// IMP=0x000000000000dcd3

@end

