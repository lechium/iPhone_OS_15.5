//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ContactsFoundation/CNObservable-Protocol.h>

@class NSString;

@interface CNObservable : NSObject <CNObservable>
{
    NSString *_pipelineDescription;	// 8 = 0x8
}

+ (id)progressiveForkJoin:(id)arg1 scheduler:(id)arg2;	// IMP=0x000000000002bf1e
+ (id)merge:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002bd01
+ (id)merge:(id)arg1;	// IMP=0x000000000002bc74
+ (id)forkJoin:(id)arg1 scheduler:(id)arg2;	// IMP=0x000000000002bafb
+ (id)concatenate:(id)arg1;	// IMP=0x000000000002b885
+ (id)combineLatest:(id)arg1 resultScheduler:(id)arg2 schedulerProvider:(id)arg3;	// IMP=0x000000000002b443
+ (id)combineLatest:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002b42c
+ (id)combineLatest:(id)arg1;	// IMP=0x000000000002b39f
+ (id)amb:(id)arg1;	// IMP=0x000000000002b352
+ (id)timerWithDelay:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002b154
+ (id)timerWithDelay:(double)arg1;	// IMP=0x000000000002b0e4
+ (id)emptyObservable;	// IMP=0x000000000002b08f
+ (id)neverObservable;	// IMP=0x000000000002b03a
+ (id)observableWithTimeInterval:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002ae49
+ (id)observableWithError:(id)arg1;	// IMP=0x000000000002ac7c
+ (id)observableWithResults:(id)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x000000000002a92e
+ (id)observableWithResults:(id)arg1 scheduler:(id)arg2;	// IMP=0x000000000002a6b8
+ (id)observableWithResults:(id)arg1;	// IMP=0x000000000002a62b
+ (id)observableWithRange:(struct _NSRange)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x000000000002a2fb
+ (id)observableWithRange:(struct _NSRange)arg1 scheduler:(id)arg2;	// IMP=0x000000000002a082
+ (id)observableWithRange:(struct _NSRange)arg1;	// IMP=0x000000000002a008
+ (id)observableWithFutures:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000029e64
+ (id)observableWithFutures:(id)arg1;	// IMP=0x0000000000029dd7
+ (id)observableWithFuture:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000029a02
+ (id)observableWithFuture:(id)arg1;	// IMP=0x0000000000029975
+ (id)observableWithResult:(id)arg1;	// IMP=0x00000000000297cb
+ (id)observableWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000029727
+ (id)os_log_protocol;	// IMP=0x00000000000296cb
+ (id)os_log;	// IMP=0x000000000002966f
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4 delay:(CDUnknownBlockType)arg5 scheduler:(id)arg6;	// IMP=0x0000000000012040
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4 scheduler:(id)arg5;	// IMP=0x0000000000012024
+ (id)observableWithInitialState:(id)arg1 condition:(CDUnknownBlockType)arg2 nextState:(CDUnknownBlockType)arg3 resultSelector:(CDUnknownBlockType)arg4;	// IMP=0x0000000000011f3a
+ (void)sendNextTimestampFromQueue:(id)arg1 toObserver:(id)arg2 untilCanceled:(id)arg3 scheduler:(id)arg4;	// IMP=0x0000000000047273
+ (id)observableWithRelativeTimestamps:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000046e13
+ (id)observableWithAbsoluteTimestamps:(id)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000046aa3
+ (id)observableWithEmailAddressesInString:(id)arg1;	// IMP=0x00000000000495a8
+ (id)binderTypeForResultType:(unsigned long long)arg1;	// IMP=0x000000000004952d
+ (id)observableWithScannerResultsOfType:(unsigned long long)arg1 inString:(id)arg2;	// IMP=0x00000000000493e0
+ (id)observableWithScannerResultsInString:(id)arg1;	// IMP=0x0000000000049097
+ (id)asyncScannerResultsInString:(id)arg1;	// IMP=0x0000000000048ecd
+ (id)scannerResultsInString:(id)arg1;	// IMP=0x0000000000048e14
+ (id)observableOnNotificationCenter:(id)arg1 withName:(id)arg2 object:(id)arg3;	// IMP=0x000000000004af15
+ (id)observableOnDefaultNotificationCenterWithName:(id)arg1 object:(id)arg2;	// IMP=0x000000000004ae72
+ (id)observableOnDarwinNotificationCenterWithName:(id)arg1;	// IMP=0x0000000000056cb3
+ (id)observableForKeyPath:(id)arg1 ofObject:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x0000000000058b70
- (void).cxx_destruct;	// IMP=0x00000000000356af
- (id)subscribe:(id)arg1;	// IMP=0x0000000000035662
- (id)using:(CDUnknownBlockType)arg1;	// IMP=0x00000000000354aa
- (id)toArray;	// IMP=0x00000000000351c3
- (id)timestampWithScheduler:(id)arg1;	// IMP=0x000000000003507a
- (id)timeoutAfterDelay:(double)arg1 alternateObservable:(id)arg2 schedule:(id)arg3;	// IMP=0x00000000000349ce
- (id)timeIntervalWithScheduler:(id)arg1;	// IMP=0x000000000003461f
- (id)timeInterval;	// IMP=0x00000000000345b9
- (id)throttleFirstAndLast:(double)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000034475
- (id)throttleFirst:(double)arg1 scheduler:(id)arg2;	// IMP=0x0000000000034002
- (id)throttle:(double)arg1 options:(unsigned long long)arg2 schedulerProvider:(id)arg3;	// IMP=0x0000000000033e75
- (id)throttle:(double)arg1 schedulerProvider:(id)arg2;	// IMP=0x0000000000033d31
- (id)takeUntil:(id)arg1;	// IMP=0x0000000000033cd5
- (id)takeLast:(unsigned long long)arg1;	// IMP=0x00000000000338e5
- (id)take:(unsigned long long)arg1;	// IMP=0x00000000000333f0
- (id)switchMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000003332b
- (id)switchMap:(CDUnknownBlockType)arg1;	// IMP=0x000000000003329e
- (id)switchWithSchedulerProvider:(id)arg1;	// IMP=0x0000000000031a54
- (id)switch;	// IMP=0x00000000000319ee
- (id)startWith:(id)arg1 scheduler:(id)arg2;	// IMP=0x0000000000031864
- (id)startWith:(id)arg1;	// IMP=0x00000000000317d7
- (id)skipUntil:(id)arg1;	// IMP=0x000000000003177b
- (id)skipLast:(unsigned long long)arg1;	// IMP=0x00000000000313e4
- (id)skip:(unsigned long long)arg1;	// IMP=0x0000000000031089
- (id)scan:(CDUnknownBlockType)arg1 seed:(id)arg2;	// IMP=0x0000000000030b6a
- (id)scan:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030af5
- (id)sampleWithObservable:(id)arg1;	// IMP=0x000000000003098d
- (id)sample:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000003081f
- (id)sample:(double)arg1;	// IMP=0x00000000000307af
- (id)publish;	// IMP=0x0000000000030732
- (id)onErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000030306
- (id)onError:(id)arg1;	// IMP=0x0000000000030177
- (id)onEmpty:(id)arg1;	// IMP=0x000000000003002e
- (id)materialize;	// IMP=0x000000000002fcf7
- (id)map:(CDUnknownBlockType)arg1;	// IMP=0x000000000002fa0d
- (id)ignoreElements;	// IMP=0x000000000002f813
- (id)flatMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002f790
- (id)flatMap:(CDUnknownBlockType)arg1;	// IMP=0x000000000002f703
- (id)filter:(CDUnknownBlockType)arg1;	// IMP=0x000000000002f421
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000002f069
- (id)doOnTerminate:(CDUnknownBlockType)arg1;	// IMP=0x000000000002ed3f
- (id)doOnSubscribe:(CDUnknownBlockType)arg1;	// IMP=0x000000000002ebf1
- (id)doOnNext:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e905
- (id)doOnError:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e60e
- (id)doOnCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e342
- (id)doOnCancel:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e023
- (id)distinctUntilChanged;	// IMP=0x000000000002dfa6
- (id)distinct;	// IMP=0x000000000002df29
- (id)dematerialize;	// IMP=0x000000000002db7f
- (id)delaySubscription:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002d82f
- (id)delay:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002d11a
- (id)concatMap:(CDUnknownBlockType)arg1 schedulerProvider:(id)arg2;	// IMP=0x000000000002d097
- (id)concatMap:(CDUnknownBlockType)arg1;	// IMP=0x000000000002d00a
- (id)bufferWithInterval:(double)arg1 scheduler:(id)arg2;	// IMP=0x000000000002ce99
- (id)bufferWithInterval:(double)arg1;	// IMP=0x000000000002ce29
- (id)buffer:(unsigned long long)arg1 interval:(double)arg2 scheduler:(id)arg3;	// IMP=0x000000000002cc75
- (id)buffer:(unsigned long long)arg1 interval:(double)arg2;	// IMP=0x000000000002cbf8
- (id)buffer:(unsigned long long)arg1;	// IMP=0x000000000002cad9
- (id)any:(CDUnknownBlockType)arg1;	// IMP=0x000000000002c9f3
- (id)ambWith:(id)arg1;	// IMP=0x000000000002c92f
- (id)allObjects:(id *)arg1;	// IMP=0x000000000002c844
- (id)observeOn:(id)arg1;	// IMP=0x000000000002c138
- (id)subscribeOn:(id)arg1;	// IMP=0x000000000002c097
- (id)pipelineDescriptionWithOperation:(CDUnknownBlockType)arg1 onObservable:(id)arg2;	// IMP=0x00000000000356d6
- (id)pipelineDescription:(CDUnknownBlockType)arg1;	// IMP=0x00000000000356cd
@property(readonly, nonatomic) NSString *debugPipelineDescription;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

