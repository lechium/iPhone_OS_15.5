//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUIMutableCommonAssetStorage, CoreThemeDocument, NSArray, NSMutableArray, NSString, NSThread, NSUUID, TDLogger;

@interface TDDistiller : NSObject
{
    CoreThemeDocument *_document;	// 8 = 0x8
    CUIMutableCommonAssetStorage *_assetStore;	// 16 = 0x10
    NSMutableArray *_renditionEntries;	// 24 = 0x18
    NSArray *_changedProductions;	// 32 = 0x20
    NSArray *_mainThreadPerformRunLoopModes;	// 40 = 0x28
    int _fileCompression;	// 48 = 0x30
    _Bool _dontPackRenditionsBeforeDistilling;	// 52 = 0x34
    _Bool _incremental;	// 53 = 0x35
    _Bool _cancelled;	// 54 = 0x36
    _Bool _successful;	// 55 = 0x37
    _Bool _finished;	// 56 = 0x38
    NSString *_assetStoreVersionString;	// 64 = 0x40
    long long _assetStoreVersionNumber;	// 72 = 0x48
    TDLogger *_logger;	// 80 = 0x50
    NSString *_accumulatedErrorDescription;	// 88 = 0x58
    NSThread *_callbackThread;	// 96 = 0x60
    CDUnknownBlockType _completionHandler;	// 104 = 0x68
}

@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain) NSThread *callbackThread; // @synthesize callbackThread=_callbackThread;
@property(retain, nonatomic) NSString *accumulatedErrorDescription; // @synthesize accumulatedErrorDescription=_accumulatedErrorDescription;
@property(getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic) _Bool dontPackRenditionsBeforeDistilling; // @synthesize dontPackRenditionsBeforeDistilling=_dontPackRenditionsBeforeDistilling;
@property(retain) TDLogger *logger; // @synthesize logger=_logger;
@property(getter=isSuccessful) _Bool successful; // @synthesize successful=_successful;
@property(getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property long long assetStoreVersionNumber; // @synthesize assetStoreVersionNumber=_assetStoreVersionNumber;
@property(copy) NSString *assetStoreVersionString; // @synthesize assetStoreVersionString=_assetStoreVersionString;
@property(getter=isIncremental) _Bool incremental; // @synthesize incremental=_incremental;
- (void)performSelectorOnCallbackThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;	// IMP=0x000000000006f0aa
- (void)cancelDistill;	// IMP=0x000000000006f009
- (void)waitTimerDidFire:(id)arg1;	// IMP=0x000000000006f003
- (void)waitUntilFinished;	// IMP=0x000000000006eeb5
- (void)saveAndDistillWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000006ed58
- (void)_distill:(id)arg1;	// IMP=0x000000000006ddb0
- (_Bool)assetStoreWriteToDisk;	// IMP=0x000000000006dd0a
- (void)setAssetColorSpaceID:(unsigned int)arg1;	// IMP=0x000000000006dcf4
- (void)setAssetSchemaVersion:(unsigned int)arg1;	// IMP=0x000000000006dcde
- (void)setAssetStorageVersionString:(const char *)arg1;	// IMP=0x000000000006dcc8
- (void)setAssetStorageVersion:(unsigned int)arg1;	// IMP=0x000000000006dcb2
- (void)setAssetStoreKeySemantics:(int)arg1;	// IMP=0x000000000006dc9c
- (void)setAssetStoreKeyFormatData:(id)arg1;	// IMP=0x000000000006dc86
- (void)setAssetStoreAssociatedChecksum:(unsigned int)arg1;	// IMP=0x000000000006dc70
@property(readonly, nonatomic) NSUUID *uuid;
- (void)setAssetStoreUuid:(id)arg1;	// IMP=0x000000000006dc44
- (void)setAssetStoreRenditionCount:(unsigned int)arg1;	// IMP=0x000000000006dc2e
- (void)removeRenditionsFromAssetStoreWithKey:(id)arg1;	// IMP=0x000000000006dc18
- (void)_distillChanges:(id)arg1;	// IMP=0x000000000006cdb5
- (id)dateOfLastDistill;	// IMP=0x000000000006cd59
- (void)_resetDocumentUuid:(id)arg1;	// IMP=0x000000000006cce4
- (void)markDistillationAsFinished;	// IMP=0x000000000006cbcf
- (void)finishDistillationWithSuccess:(_Bool)arg1;	// IMP=0x000000000006cb95
- (_Bool)distillCursorFacetDefinitions;	// IMP=0x000000000006c874
- (_Bool)_distillCursorFacetDefinitions:(id)arg1;	// IMP=0x000000000006c62f
- (_Bool)distillNamedElements;	// IMP=0x000000000006c565
- (_Bool)_distillNamedElements:(id)arg1;	// IMP=0x000000000006c17b
- (id)_copyStandardEffectDefinitions;	// IMP=0x000000000006c04b
- (_Bool)distillCustomFontSizes;	// IMP=0x000000000006be72
- (_Bool)distillCustomFonts;	// IMP=0x000000000006bdc6
- (_Bool)_distillFonts:(id)arg1;	// IMP=0x000000000006bb14
- (_Bool)distillCustomColors;	// IMP=0x000000000006ba68
- (_Bool)_distillColorDefinitions:(id)arg1;	// IMP=0x000000000006b748
- (_Bool)distillCatalogGlobals;	// IMP=0x000000000006b5ee
- (_Bool)distillLocalizationss;	// IMP=0x000000000006b3b2
- (_Bool)distillThemeAppearances;	// IMP=0x000000000006b190
- (_Bool)distillRenditions;	// IMP=0x000000000006aa5d
- (id)_productionForRenditionSpec:(id)arg1;	// IMP=0x000000000006a9f4
- (unsigned long long)_removeRenditionsWithKeySpecs:(id)arg1;	// IMP=0x000000000006a83d
- (_Bool)setAsset:(id)arg1 withKey:(const struct _renditionkeytoken *)arg2 fromRenditionSpec:(id)arg3;	// IMP=0x000000000006a7f9
- (id)_renditionsFromProductions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000006a5a8
- (id)_renditionsWithError:(id *)arg1;	// IMP=0x000000000006a3e6
- (id)_textureFaceExclusionPredicate;	// IMP=0x000000000006a3c4
- (id)_filterRenditions:(id)arg1;	// IMP=0x000000000006a0b3
- (id)_keyDataFromKey:(const struct _renditionkeytoken *)arg1;	// IMP=0x0000000000069fd6
- (id)keyFormatData;	// IMP=0x0000000000069f96
- (void)dealloc;	// IMP=0x0000000000069ed0
- (id)documentPath;	// IMP=0x0000000000069ea1
- (id)initWithDocument:(id)arg1 outputPath:(id)arg2 attemptIncremental:(_Bool)arg3 versionString:(id)arg4;	// IMP=0x0000000000069dfa
- (id)initWithDocument:(id)arg1 outputPath:(id)arg2 attemptIncremental:(_Bool)arg3;	// IMP=0x0000000000069de5
- (id)initWithDocument:(id)arg1 outputPath:(id)arg2 versionString:(id)arg3;	// IMP=0x0000000000069dcd
- (id)initWithDocument:(id)arg1 outputPath:(id)arg2;	// IMP=0x0000000000069db5
- (id)_keySpecsToRemoveFromKeySpecs:(id)arg1;	// IMP=0x0000000000069be9
- (_Bool)_setupWithOutputPath:(id)arg1 attemptIncremental:(_Bool)arg2;	// IMP=0x000000000006980b
- (void)_logErrorAndAccumulateDescription:(id)arg1;	// IMP=0x00000000000697ce
- (void)_accumulateErrorDescription:(id)arg1;	// IMP=0x0000000000069744
- (void)_logExtra:(id)arg1;	// IMP=0x0000000000069713
- (void)_logInfo:(id)arg1;	// IMP=0x00000000000696e2
- (void)_logWarning:(id)arg1;	// IMP=0x00000000000696b1
- (void)_logError:(id)arg1;	// IMP=0x0000000000069680
@property int fileCompression;

@end

