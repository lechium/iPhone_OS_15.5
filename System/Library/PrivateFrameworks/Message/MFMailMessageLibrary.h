//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Message/EDMessageChangeHookResponder-Protocol.h>
#import <Message/EFContentProtectionObserver-Protocol.h>
#import <Message/EFSignpostable-Protocol.h>

@class EDMessageQueryParser, EDPersistence, EDPersistenceHookRegistry, EDSearchableIndexScheduler, MFAttachmentLibraryDataProvider, MFFileCompressionQueue, MFLibrarySearchableIndex, MFMessageAttachmentMigrator, MFMessageBodyMigrator, MFMessageChangeManager_iOS, MFPersistenceDatabase_iOS, MFWeakObjectCache, NSCache, NSMutableDictionary, NSMutableSet, NSString;
@protocol EFCancelable, EFSQLValueExpressable, EFScheduler, OS_dispatch_queue;

@interface MFMailMessageLibrary : NSObject <EDMessageChangeHookResponder, EFSignpostable, EFContentProtectionObserver>
{
    NSString *_path;	// 8 = 0x8
    MFAttachmentLibraryDataProvider *_attachmentDataProvider;	// 16 = 0x10
    MFWeakObjectCache *_libraryMessageCache;	// 24 = 0x18
    NSMutableDictionary *_mailboxCache;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_statsQueue;	// 48 = 0x30
    NSString *_activeAccountClause;	// 56 = 0x38
    NSString *_nonLocalAccountClause;	// 64 = 0x40
    id <EFSQLValueExpressable> _enabledAccountMailboxesExpression;	// 72 = 0x48
    int _protectedDataAvailability;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_keyBagQueue;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_conversationCalculationQueue;	// 96 = 0x60
    NSMutableSet *_messagesToThreadAtUnlock;	// 104 = 0x68
    MFFileCompressionQueue *_compressionQueue;	// 112 = 0x70
    MFLibrarySearchableIndex *_searchableIndex;	// 120 = 0x78
    struct os_unfair_lock_s _searchableIndexLock;	// 128 = 0x80
    _Atomic _Bool _suspendedUnderLock;	// 132 = 0x84
    struct os_unfair_lock_s _mailboxLock;	// 136 = 0x88
    struct os_unfair_lock_s _addedMessagesMapLock;	// 140 = 0x8c
    NSCache *_mailboxURLsToMailboxIDs;	// 144 = 0x90
    NSCache *_optionsToQueries;	// 152 = 0x98
    _Bool _allowedToAccessProtectedData;	// 160 = 0xa0
    EDPersistence *_persistence;	// 168 = 0xa8
    MFPersistenceDatabase_iOS *_database;	// 176 = 0xb0
    EDSearchableIndexScheduler *_searchableIndexScheduler;	// 184 = 0xb8
    EDMessageQueryParser *_queryParser;	// 192 = 0xc0
    id <EFScheduler> _fileRemovalAfterCompactionScheduler;	// 200 = 0xc8
    NSMutableDictionary *_currentAddedMessagesMap;	// 208 = 0xd0
    MFMessageBodyMigrator *_bodyMigrator;	// 216 = 0xd8
    id <EFCancelable> _stateCaptureCancelable;	// 224 = 0xe0
    MFMessageAttachmentMigrator *_attachmentMigrator;	// 232 = 0xe8
}

+ (void)_renameLibraryAtPath:(id)arg1;	// IMP=0x000000000008d36d
+ (void)removeLibraryOnNextLaunch;	// IMP=0x000000000008d1c6
+ (id)defaultPath;	// IMP=0x000000000005f168
+ (void)test_setDefaultInstance:(id)arg1;	// IMP=0x000000000005f00b
+ (id)defaultInstance;	// IMP=0x000000000005ef2f
+ (_Bool)canUsePersistence;	// IMP=0x000000000005eeb1
+ (id)propertyMapper;	// IMP=0x000000000005e474
+ (id)signpostLog;	// IMP=0x000000000005d19f
+ (id)log;	// IMP=0x000000000005d0c2
- (void).cxx_destruct;	// IMP=0x0000000000092708
@property(retain) MFMessageAttachmentMigrator *attachmentMigrator; // @synthesize attachmentMigrator=_attachmentMigrator;
@property(readonly, nonatomic) id <EFCancelable> stateCaptureCancelable; // @synthesize stateCaptureCancelable=_stateCaptureCancelable;
@property(retain) MFMessageBodyMigrator *bodyMigrator; // @synthesize bodyMigrator=_bodyMigrator;
@property(retain, nonatomic) NSMutableDictionary *currentAddedMessagesMap; // @synthesize currentAddedMessagesMap=_currentAddedMessagesMap;
@property(retain, nonatomic) id <EFScheduler> fileRemovalAfterCompactionScheduler; // @synthesize fileRemovalAfterCompactionScheduler=_fileRemovalAfterCompactionScheduler;
@property(retain, nonatomic) EDMessageQueryParser *queryParser; // @synthesize queryParser=_queryParser;
@property(retain, nonatomic) EDSearchableIndexScheduler *searchableIndexScheduler; // @synthesize searchableIndexScheduler=_searchableIndexScheduler;
@property(readonly, nonatomic) _Bool allowedToAccessProtectedData; // @synthesize allowedToAccessProtectedData=_allowedToAccessProtectedData;
@property(readonly) MFPersistenceDatabase_iOS *database; // @synthesize database=_database;
@property(readonly) EDPersistence *persistence; // @synthesize persistence=_persistence;
- (id)dataProvider;	// IMP=0x00000000000925bc
- (void)_storeRemoteContentLinksFromData:(id)arg1 forMimePart:(id)arg2 linksToVerify:(id)arg3;	// IMP=0x0000000000092348
- (void)storeRemoteContentLinksFromData:(id)arg1 forMessage:(id)arg2 mimePart:(id)arg3;	// IMP=0x000000000009223f
- (void)_storeRemoteContentLinksFromHeaderData:(id)arg1 bodyData:(id)arg2 forMessage:(id)arg3 linksToVerify:(id)arg4;	// IMP=0x0000000000091b7e
- (void)storeRemoteContentLinksFromHeaderData:(id)arg1 bodyData:(id)arg2 forMessage:(id)arg3;	// IMP=0x0000000000091a6f
- (void)_storeRemoteContentLinksFromFullData:(id)arg1 forMessage:(id)arg2 linksToVerify:(id)arg3;	// IMP=0x0000000000091830
- (void)storeRemoteContentLinksFromFullData:(id)arg1 forMessage:(id)arg2;	// IMP=0x000000000009173f
- (_Bool)_storeRemoteContentLinksCachedOnMessage:(id)arg1 linksToVerify:(id *)arg2;	// IMP=0x00000000000915b1
- (_Bool)_shouldStoreRemoteContentForMessage:(id)arg1;	// IMP=0x0000000000091274
- (_Bool)messageDataExistsInDatabaseForMessageLibraryID:(long long)arg1 part:(id)arg2 length:(unsigned long long *)arg3;	// IMP=0x0000000000090e32
- (id)stringFromAllMailboxUnreadCount;	// IMP=0x0000000000090814
- (id)_recipientsForMessagesWithDatabaseIDs:(id)arg1 includeTo:(_Bool)arg2 includeCC:(_Bool)arg3 includeBCC:(_Bool)arg4;	// IMP=0x000000000008ffe6
- (id)_recipientsForMessageWithDatabaseID:(long long)arg1 connection:(id)arg2;	// IMP=0x000000000008fbf8
- (id)_messageForRow:(id)arg1 options:(unsigned int)arg2 timestamp:(unsigned long long)arg3 connection:(id)arg4 isProtectedDataAvailable:(_Bool)arg5;	// IMP=0x000000000008e6c5
- (id)_libraryMessageWithLibraryID:(long long)arg1 wasCached:(_Bool *)arg2;	// IMP=0x000000000008e645
- (id)_libraryMessageCache;	// IMP=0x000000000008e637
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000008e5af
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000008e507
- (void)_removeSearchableItemsWithLibraryIDs:(id)arg1;	// IMP=0x000000000008e3f2
- (void)removeSearchableItemsForAccount:(id)arg1 mailboxID:(long long)arg2;	// IMP=0x000000000008e279
- (void)removeSearchableItemsForMessages:(id)arg1;	// IMP=0x000000000008e122
- (void)removeSearchableItemsForMailbox:(id)arg1;	// IMP=0x000000000008e089
- (void)removeSearchableItemsForAccount:(id)arg1;	// IMP=0x000000000008e06c
- (id)indexableMessagesWhere:(id)arg1 sortedBy:(id)arg2 limit:(long long)arg3 options:(unsigned int)arg4;	// IMP=0x000000000008da05
- (id)_stringsForIndexSet:(id)arg1;	// IMP=0x000000000008d8db
- (void)renameOrRemoveDatabaseIfNeeded;	// IMP=0x000000000008c9d6
- (void)handleFailedMigration;	// IMP=0x000000000008c85f
- (void)journalReconciliationFailed;	// IMP=0x000000000008c79b
- (void)closeDatabaseConnections;	// IMP=0x000000000008c74a
- (void)_scheduleIncrementalVacuum;	// IMP=0x000000000008c5af
- (void)performIncrementalVacuumForSchema:(id)arg1;	// IMP=0x000000000008c071
- (_Bool)migrate;	// IMP=0x000000000008bfc4
- (void)_addMessageToThreadAtUnlock:(long long)arg1;	// IMP=0x000000000008be5a
- (void)journalWasReconciled;	// IMP=0x000000000008b909
- (_Bool)_canAccessProtectedData;	// IMP=0x000000000008b76e
- (void)_cancelPendingJournalReconciliation;	// IMP=0x000000000008b6be
- (void)_scheduleJournalReconciliation;	// IMP=0x000000000008b260
- (void)contentProtectionStateChanged:(long long)arg1 previousState:(long long)arg2;	// IMP=0x000000000008b0c9
- (_Bool)isProtectedDataAvailable:(id)arg1;	// IMP=0x000000000008afe1
- (void)_schedulePeriodicStatisticsLogging;	// IMP=0x000000000008ae4b
- (void)_logStatistics;	// IMP=0x000000000008a940
- (_Bool)_shouldLogDatabaseStats;	// IMP=0x000000000008a8da
- (_Bool)cleanupProtectedTables;	// IMP=0x000000000008a542
- (id)_indexSetOfMessagesDeleted;	// IMP=0x000000000008a356
@property(readonly, nonatomic) unsigned long long protectedDataAvailability;
- (void)_setProtectedDataAvailabilityState:(unsigned long long)arg1;	// IMP=0x000000000008a051
- (id)hiddenPOPUIDsInMailbox:(id)arg1;	// IMP=0x000000000008a030
- (id)allUIDsInMailbox:(id)arg1;	// IMP=0x000000000008a00f
- (id)UIDsToDeleteInMailbox:(id)arg1;	// IMP=0x0000000000089e33
- (void)deletePOPUID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000089bec
- (id)_nonLocalAccountsClause;	// IMP=0x0000000000089b8e
- (id)_activeAccountsClause;	// IMP=0x0000000000089b30
- (id)enabledAccountMailboxesExpression;	// IMP=0x0000000000089ad9
- (void)rebuildActiveAccountsClauseWithActiveAccounts:(id)arg1 inactiveAccounts:(id)arg2;	// IMP=0x000000000008963d
- (void)rebuildActiveAccountMailboxesExpression:(id)arg1;	// IMP=0x000000000008934f
- (void)rebuildActiveAccountsClausesAndExpressionsWithAccounts:(id)arg1;	// IMP=0x00000000000890c4
- (id)_mailboxesClauseForAccounts:(id)arg1;	// IMP=0x0000000000088d67
- (void)deleteAccount:(id)arg1;	// IMP=0x0000000000088b3d
- (void)invalidateAccount:(id)arg1;	// IMP=0x0000000000088b2a
- (id)filterContiguousMessages:(id)arg1 forCriterion:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000887fa
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2;	// IMP=0x0000000000088755
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 success:(_Bool *)arg3;	// IMP=0x0000000000088686
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3 success:(_Bool *)arg4;	// IMP=0x00000000000885b9
- (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 range:(struct _NSRange)arg3;	// IMP=0x00000000000884fc
- (void)iterateMessagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000008843b
- (void)iterateMessagesMatchingCriterion:(id)arg1 withResultHandler:(id)arg2 options:(unsigned int)arg3 withMonitor:(id)arg4;	// IMP=0x0000000000087fdb
- (void)iterateMessagesMatchingQuery:(id)arg1 withResultHandler:(id)arg2 options:(unsigned int)arg3 withMonitor:(id)arg4;	// IMP=0x000000000008771e
- (id)sqlQueryWithConversionLogForQuery:(id)arg1;	// IMP=0x000000000008756e
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000087534
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;	// IMP=0x0000000000087505
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;	// IMP=0x00000000000874ce
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange)arg5;	// IMP=0x00000000000874a2
- (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 range:(struct _NSRange)arg5 success:(_Bool *)arg6;	// IMP=0x00000000000871f7
- (id)queryForCriterion:(id)arg1 connection:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000000871af
- (id)queryForCriterion:(id)arg1 connection:(id)arg2 options:(unsigned int)arg3 range:(struct _NSRange)arg4;	// IMP=0x0000000000087172
- (id)queryForCriterion:(id)arg1 connection:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4;	// IMP=0x0000000000087141
- (id)queryForCriterion:(id)arg1 connection:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(_Bool)arg5;	// IMP=0x00000000000870fa
- (id)queryForCriterion:(id)arg1 connection:(id)arg2 options:(unsigned int)arg3 baseTable:(unsigned int)arg4 isSubquery:(_Bool)arg5 range:(struct _NSRange)arg6;	// IMP=0x0000000000086c55
- (id)_equalToMailboxIDsFromCriterion:(id)arg1;	// IMP=0x00000000000869c8
- (_Bool)areMessageContentsLocallyAvailable:(id)arg1 fullContentsAvailble:(_Bool *)arg2;	// IMP=0x00000000000861c6
- (_Bool)hasCompleteDataForMimePart:(id)arg1;	// IMP=0x0000000000085d7f
- (id)dataForMimePart:(id)arg1 isComplete:(_Bool *)arg2;	// IMP=0x000000000008597a
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x0000000000085809
- (id)headerDataForMessage:(id)arg1;	// IMP=0x000000000008567f
- (id)bodyDataForMessage:(id)arg1;	// IMP=0x000000000008565b
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 isComplete:(_Bool *)arg3;	// IMP=0x0000000000085049
- (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x0000000000085024
- (id)headerDataAtPath:(id)arg1;	// IMP=0x0000000000084f3a
- (id)bodyDataAtPath:(id)arg1 headerData:(id *)arg2;	// IMP=0x0000000000084ce3
- (id)loadMeetingMetadataForMessage:(id)arg1;	// IMP=0x0000000000084a3c
- (id)loadMeetingExternalIDForMessage:(id)arg1;	// IMP=0x0000000000084858
- (id)loadMeetingDataForMessage:(id)arg1;	// IMP=0x00000000000846b7
- (id)loadData:(id)arg1 forMessage:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000083e21
- (_Bool)_setSummary:(id)arg1 forMessageWithRowID:(long long)arg2 connection:(id)arg3;	// IMP=0x0000000000083697
- (void)setSummary:(id)arg1 forMessage:(id)arg2;	// IMP=0x0000000000083192
- (_Bool)_setMessageData:(id)arg1 libraryID:(long long)arg2 part:(id)arg3 partial:(_Bool)arg4 complete:(_Bool)arg5 connection:(id)arg6;	// IMP=0x0000000000082bc6
- (void)setData:(id)arg1 forMessageToAppend:(id)arg2;	// IMP=0x0000000000082ae0
- (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(_Bool)arg3;	// IMP=0x00000000000829fb
- (id)dataConsumerForMessage:(id)arg1;	// IMP=0x0000000000082977
- (id)dataConsumerForMessage:(id)arg1 isPartial:(_Bool)arg2;	// IMP=0x00000000000828eb
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2 incomplete:(_Bool)arg3;	// IMP=0x000000000008282e
- (id)dataConsumerForMessage:(id)arg1 part:(id)arg2;	// IMP=0x000000000008277d
- (void)fileURLForAttachmentPersistentID:(id)arg1 messageID:(id)arg2 result:(CDUnknownBlockType)arg3;	// IMP=0x0000000000082419
- (id)fileAttributesForMessage:(id)arg1;	// IMP=0x00000000000822ca
- (long long)deleteAttachmentsForMessage:(id)arg1 inMailboxFileURL:(id)arg2;	// IMP=0x0000000000081eaf
- (id)dataPathForMessage:(id)arg1 part:(id)arg2;	// IMP=0x0000000000081c5d
- (id)dataPathForMessage:(id)arg1;	// IMP=0x0000000000081c39
- (id)dataPathForMessage:(id)arg1 type:(int)arg2;	// IMP=0x0000000000081a4e
- (void)removeAllMessagesFromMailbox:(id)arg1 removeMailbox:(_Bool)arg2 andNotify:(_Bool)arg3;	// IMP=0x0000000000080f42
- (void)deleteMailboxes:(id)arg1 account:(id)arg2;	// IMP=0x0000000000080dcd
- (_Bool)renameMailboxes:(id)arg1 to:(id)arg2;	// IMP=0x0000000000080729
- (void)compactMailbox:(id)arg1;	// IMP=0x0000000000080162
- (_Bool)_deleteRows:(id)arg1 fromTable:(id)arg2 connection:(id)arg3;	// IMP=0x000000000007ff1d
- (long long)_maxRowIDInSet:(id)arg1;	// IMP=0x000000000007fda0
- (id)_existingValuesForColumn:(id)arg1 table:(id)arg2 fromValues:(id)arg3 connection:(id)arg4;	// IMP=0x000000000007fa32
- (void)_removeGlobalDataForMessagesIfNecessary:(id)arg1 connection:(id)arg2;	// IMP=0x000000000007e61d
- (_Bool)_deleteMessages:(id)arg1 andCleanUpAddresses:(id)arg2 subjects:(id)arg3 summaries:(id)arg4 connection:(id)arg5;	// IMP=0x000000000007e31b
- (_Bool)_addAddressesFromRecipientsForMessages:(id)arg1 toSet:(id)arg2 connection:(id)arg3;	// IMP=0x000000000007e0a5
- (_Bool)_deleteMessages:(id)arg1 connection:(id)arg2;	// IMP=0x000000000007da1a
- (void)compactMessages:(id)arg1 permanently:(_Bool)arg2;	// IMP=0x000000000007c870
- (void)compactMessages:(id)arg1;	// IMP=0x000000000007c858
- (void)_notifyDidCompact:(_Bool)arg1 messages:(id)arg2 mailboxes:(id)arg3;	// IMP=0x000000000007c6f8
- (void)setStoredIntegerPropertyWithName:(id)arg1 value:(id)arg2;	// IMP=0x000000000007c3f7
- (id)storedIntegerPropertyWithName:(id)arg1;	// IMP=0x000000000007c37d
- (long long)_conversationIdForMessageIds:(id)arg1;	// IMP=0x000000000007c028
- (void)setConversationInfo:(long long)arg1 syncKey:(id)arg2 flags:(unsigned long long)arg3;	// IMP=0x000000000007bdf4
- (void)setFlags:(unsigned long long)arg1 forConversationId:(long long)arg2;	// IMP=0x000000000007bc72
- (unsigned long long)flagsForConversationId:(long long)arg1;	// IMP=0x000000000007baa4
- (void)addPostMigrationStep:(id)arg1;	// IMP=0x000000000007ba1c
- (void)scheduleRecurringActivity;	// IMP=0x000000000007b9ee
- (void)clearServerSearchFlagsForMessagesWithLibraryIDs:(id)arg1;	// IMP=0x000000000007b5b5
- (_Bool)_canSelectMessagesWithOptions:(unsigned int)arg1 connection:(id)arg2;	// IMP=0x000000000007b553
- (_Bool)shouldCancel;	// IMP=0x000000000007b54b
- (id)accountForMessage:(id)arg1;	// IMP=0x000000000007b49c
- (id)remoteStoreForMessage:(id)arg1;	// IMP=0x000000000007b3fc
- (id)mailboxUidForMessage:(id)arg1;	// IMP=0x000000000007b385
- (id)mailboxURLForMessage:(id)arg1;	// IMP=0x000000000007b30f
- (long long)mailboxIDForURLString:(id)arg1;	// IMP=0x000000000007aef0
- (long long)mailboxIDForURLString:(id)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x000000000007ac8e
- (id)mailboxURLsForIDs:(id)arg1;	// IMP=0x000000000007a294
- (id)urlForMailboxID:(long long)arg1;	// IMP=0x0000000000079ee7
- (void)reloadMailboxCacheWithConnection:(id)arg1;	// IMP=0x0000000000079d07
- (void)reloadMailboxCacheIfNecessaryWithConnection:(id)arg1;	// IMP=0x0000000000079cb6
- (id)stringForQuery:(id)arg1;	// IMP=0x0000000000079c92
- (id)stringForQuery:(id)arg1 monitor:(id)arg2;	// IMP=0x00000000000797f0
- (long long)loadMoreMessagesForThreadContainingMessage:(id)arg1 hasNoMoreMessages:(_Bool *)arg2;	// IMP=0x0000000000079603
- (id)_getReferencesForHashesWithOwners:(id)arg1;	// IMP=0x00000000000791c8
- (id)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)arg1;	// IMP=0x0000000000078e7f
- (id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(long long)arg1 messageIDHash:(long long)arg2;	// IMP=0x0000000000078988
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3 temporarilyUnavailable:(_Bool *)arg4;	// IMP=0x0000000000077c9c
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;	// IMP=0x0000000000077c77
- (id)_keyForOptions:(unsigned int)arg1 protectedDataAvailable:(_Bool)arg2 mailboxAvailable:(_Bool)arg3 mailboxCached:(_Bool)arg4;	// IMP=0x0000000000077c36
- (id)messagesWithMessageIDHeader:(id)arg1;	// IMP=0x0000000000077b71
- (id)messageWithMessageID:(id)arg1 options:(unsigned int)arg2 inMailbox:(id)arg3;	// IMP=0x0000000000077a87
- (void)setSequenceIdentifier:(id)arg1 forMessagesWithRemoteIDs:(id)arg2 inMailbox:(id)arg3;	// IMP=0x00000000000775c9
- (void)setSequenceIdentifier:(id)arg1 forMessageWithLibraryID:(long long)arg2;	// IMP=0x00000000000773cd
- (id)sequenceIdentifierForMessagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000076ead
- (void)setSequenceIdentifier:(id)arg1 forMailbox:(id)arg2;	// IMP=0x0000000000076b49
- (id)sequenceIdentifierForMailbox:(id)arg1;	// IMP=0x0000000000076892
- (id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned int)arg2 inRemoteMailbox:(id)arg3;	// IMP=0x000000000007611c
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;	// IMP=0x0000000000075b98
- (void)setMostRecentStatusCount:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x0000000000075849
- (unsigned long long)mostRecentStatusCountForMailbox:(id)arg1;	// IMP=0x000000000007582a
- (void)increaseProtectionOnFileForMessage:(id)arg1;	// IMP=0x00000000000756ad
- (void)setLastSyncAndMostRecentStatusCount:(long long)arg1 forMailbox:(id)arg2;	// IMP=0x0000000000075252
- (long long)statusCountDeltaForMailbox:(id)arg1;	// IMP=0x0000000000075233
- (void)setServerUnreadOnlyOnServerCount:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x0000000000074ee3
- (unsigned long long)indexedCountForMailbox:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x0000000000074e34
- (unsigned long long)serverUnreadOnlyOnServerCountForMailbox:(id)arg1;	// IMP=0x0000000000074e15
- (unsigned int)totalCountForMailbox:(id)arg1;	// IMP=0x0000000000074da7
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1;	// IMP=0x0000000000074d89
- (unsigned int)nonDeletedCountForAggregatedMailboxes:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x0000000000074c18
- (unsigned int)nonDeletedCountForMailbox:(id)arg1;	// IMP=0x0000000000074bfa
- (unsigned int)nonDeletedCountForMailbox:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x00000000000749c1
- (unsigned int)allNonDeleteCountForMailbox:(id)arg1 includeServerSearchResults:(_Bool)arg2 includeThreadSearchResults:(_Bool)arg3;	// IMP=0x00000000000748e9
- (unsigned int)attachmentCountForMailboxes:(id)arg1;	// IMP=0x0000000000074846
- (unsigned int)includesMeCountForMailbox:(id)arg1;	// IMP=0x0000000000074822
- (unsigned int)attachmentCountForMailbox:(id)arg1;	// IMP=0x00000000000747fe
- (unsigned int)flaggedCountForMailbox:(id)arg1;	// IMP=0x00000000000747da
- (unsigned int)unreadCountForMailbox:(id)arg1;	// IMP=0x00000000000747b6
- (id)_queryForMailboxesIDsFromMailboxes:(id)arg1;	// IMP=0x0000000000074622
- (unsigned int)_includesMeCountForAggregatedMailboxes:(id)arg1;	// IMP=0x0000000000074504
- (unsigned int)_attachmentCountForAggregatedMailboxes:(id)arg1;	// IMP=0x00000000000743e6
- (unsigned int)_flaggedCountForAggregatedMailboxes:(id)arg1;	// IMP=0x00000000000742c8
- (unsigned int)_computeUnreadCountForMailboxes:(id)arg1;	// IMP=0x0000000000074220
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1;	// IMP=0x000000000007416a
- (long long)countDistinctMessagesMatchingCriterion:(id)arg1;	// IMP=0x0000000000073ea0
- (unsigned int)unreadCountForAggregatedMailboxes:(id)arg1 matchingCriterion:(id)arg2;	// IMP=0x00000000000736aa
- (unsigned int)unreadCountForMailbox:(id)arg1 matchingCriterion:(id)arg2;	// IMP=0x0000000000073611
- (int)_integerForQuery:(id)arg1 withTextArgument:(id)arg2;	// IMP=0x000000000007342f
- (long long)_int64ForQuery:(id)arg1 connection:(id)arg2 textArgument:(id)arg3;	// IMP=0x000000000007314b
- (id)orderedBatchOfMessagesEndingAtRowId:(long long)arg1 limit:(unsigned int)arg2 success:(_Bool *)arg3;	// IMP=0x0000000000072d8b
- (id)messagesWithSummariesForMailbox:(id)arg1 range:(struct _NSRange)arg2;	// IMP=0x00000000000729f0
- (long long)_libraryIDForOldestKnownMessageInMailbox:(id)arg1;	// IMP=0x0000000000072754
- (id)groupedMessagesCountForCriterion:(id)arg1 groupBy:(unsigned long long)arg2;	// IMP=0x00000000000720fb
- (id)groupedMessagesCountByMailboxMatchingQuery:(unsigned long long)arg1 variable:(id)arg2;	// IMP=0x000000000007207c
- (unsigned long long)countMessagesMatchingCriterion:(id)arg1;	// IMP=0x0000000000071fc8
- (unsigned int)countOfRelatedMessagesMatchingCriterion:(id)arg1 forConversationsContainingMessagesMatchingCriterion:(id)arg2 forMailboxCriterion:(id)arg3;	// IMP=0x00000000000719cb
- (id)copyMessageInfosForMailbox:(id)arg1;	// IMP=0x0000000000071638
- (id)dateOfOldestNonIndexedNonSearchResultMessageInMailbox:(id)arg1;	// IMP=0x000000000007160c
- (id)dateOfOldestNonSearchResultMessageInMailbox:(id)arg1;	// IMP=0x00000000000715e0
- (id)_firstDateForQuery:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000071297
- (id)serverSearchResultMessagesForMailbox:(id)arg1;	// IMP=0x00000000000710c6
- (id)_messagesForMailbox:(id)arg1 olderThanNumberOfDays:(int)arg2 limit:(unsigned long long)arg3;	// IMP=0x0000000000070e3a
- (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(int)arg2;	// IMP=0x0000000000070e0e
- (id)messagesForMailbox:(id)arg1 limit:(unsigned long long)arg2;	// IMP=0x0000000000070de7
- (void)_sendMessagesForStatement:(id)arg1 connection:(id)arg2 to:(id)arg3 options:(unsigned int)arg4 timestamp:(unsigned long long)arg5;	// IMP=0x00000000000706db
- (void)iterateStatement:(struct sqlite3_stmt *)arg1 connection:(id)arg2 withProgressMonitor:(id)arg3 andRowHandler:(CDUnknownFunctionPointerType)arg4 context:(void *)arg5;	// IMP=0x0000000000070546
- (void)_iterateStatement:(id)arg1 connection:(id)arg2 withProgressMonitor:(id)arg3 andRowHandler:(CDUnknownFunctionPointerType)arg4 context:(const CDStruct_6c71af79 *)arg5;	// IMP=0x00000000000701f1
- (id)_selectClauseForOptions:(unsigned int)arg1 protectedDataAvailable:(_Bool)arg2;	// IMP=0x0000000000070164
- (id)_selectExpressionForMessageWithAvailableTables:(unsigned int)arg1;	// IMP=0x000000000006fa4e
- (void)updateThreadingInfoForMessage:(id)arg1 fromHeaders:(id)arg2;	// IMP=0x000000000006e5ac
- (void)updateAdditionalThreadingInfoForSentMessageWithHeaders:(id)arg1 externalConversationID:(long long)arg2;	// IMP=0x000000000006e3c7
- (void)_removeDataFilesForGlobalID:(long long)arg1;	// IMP=0x000000000006dfe7
- (long long)_findOrCreateDatabaseIDForValue:(id)arg1 inTable:(id)arg2 column:(id)arg3 cache:(id)arg4 connection:(id)arg5 created:(_Bool *)arg6;	// IMP=0x000000000006d725
- (long long)_findOrCreateDatabaseIDForSummary:(id)arg1 cache:(id)arg2 connection:(id)arg3;	// IMP=0x000000000006d6f7
- (long long)_findOrCreateDatabaseIDForSubject:(id)arg1 cache:(id)arg2 connection:(id)arg3;	// IMP=0x000000000006d6c9
- (long long)_findOrCreateDatabaseIDForGlobalData:(long long)arg1 cache:(id)arg2 connection:(id)arg3;	// IMP=0x000000000006d562
- (long long)_findOrCreateDatabaseIDForAddress:(id)arg1 comment:(id)arg2 cache:(id)arg3 connection:(id)arg4;	// IMP=0x000000000006d024
- (_Bool)_addRecipients:(id)arg1 toMessageWithDatabaseID:(long long)arg2 cache:(id)arg3 connection:(id)arg4;	// IMP=0x000000000006c9ab
- (void)persistenceDidAddMessages:(id)arg1 generationWindow:(id)arg2;	// IMP=0x000000000006c6bb
- (void)didFinishPersistenceDidAddMessages:(id)arg1;	// IMP=0x000000000006c60e
- (void)willStartPersistenceDidAddMessages:(id)arg1;	// IMP=0x000000000006c598
- (id)addMessages:(id)arg1 withMailbox:(id)arg2 newMessagesByOldMessage:(id)arg3 remoteIDs:(id)arg4 setFlags:(unsigned long long)arg5 addPOPUIDs:(_Bool)arg6 dataSectionsByMessage:(id)arg7 generationWindow:(id)arg8;	// IMP=0x0000000000065d93
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 forMailbox:(id)arg3 setFlags:(unsigned long long)arg4 clearFlags:(unsigned long long)arg5 messageFlagsForMessages:(id)arg6 createNewCacheFiles:(_Bool)arg7;	// IMP=0x0000000000065d62
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 forMailbox:(id)arg3 setFlags:(unsigned long long)arg4 createNewCacheFiles:(_Bool)arg5;	// IMP=0x0000000000065c67
@property(readonly, nonatomic) EDPersistenceHookRegistry *hookRegistry;
- (long long)addReferenceForContext:(id)arg1 usingDatabaseConnection:(id)arg2 generationWindow:(id)arg3 mergeHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000640c2
- (_Bool)_insertThreadReferences:(id)arg1 toMessageWithLibraryID:(long long)arg2 usingDatabaseConnection:(id)arg3;	// IMP=0x0000000000063d74
- (id)_addThreadingInfoWithContext:(id)arg1 usingDatabaseConnection:(id)arg2;	// IMP=0x0000000000062ebb
- (id)referencesFromHeaders:(id)arg1;	// IMP=0x0000000000062c3f
- (void)notifyNewDataAvailableForMessages:(id)arg1;	// IMP=0x0000000000062b69
- (_Bool)_writeEmlxFile:(id)arg1 withBodyData:(id)arg2 protectionClass:(int)arg3;	// IMP=0x000000000006278a
- (void)setMessage:(id)arg1 isPartial:(_Bool)arg2;	// IMP=0x0000000000062673
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(_Bool)arg2 isEncrypted:(_Bool)arg3 forMessage:(id)arg4;	// IMP=0x0000000000062220
- (void)setFlagsFromDictionary:(id)arg1 forMessagesInMailboxURLString:(id)arg2;	// IMP=0x00000000000619c0
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x0000000000061862
- (id)updateFlagsForMessages:(id)arg1 changes:(id)arg2 transformer:(CDUnknownBlockType)arg3;	// IMP=0x0000000000060d5a
- (void)updateFlagsForMessagesInPlace:(id)arg1 success:(_Bool *)arg2;	// IMP=0x0000000000060895
- (void)postFlagsChangedForMessages:(id)arg1 flags:(id)arg2 oldFlagsByMessage:(id)arg3;	// IMP=0x0000000000060700
- (void)postOldFlags:(unsigned long long)arg1 newFlags:(unsigned long long)arg2 forMessage:(id)arg3;	// IMP=0x00000000000600d3
- (void)setFlags:(unsigned long long)arg1 forMessage:(id)arg2;	// IMP=0x000000000005fb66
@property(readonly) MFMessageChangeManager_iOS *messageChangeManager;
- (id)searchableIndex;	// IMP=0x000000000005f98b
@property(readonly, nonatomic) unsigned long long pendingIndexItemsCount;
- (void)attachmentMigrationFinished;	// IMP=0x000000000005f8f5
- (void)bodyMigrationFinished;	// IMP=0x000000000005f834
- (id)messageBasePathForAccount:(id)arg1;	// IMP=0x000000000005f79c
- (void)test_tearDown;	// IMP=0x000000000005f656
- (void)start;	// IMP=0x000000000005f24e
- (void)_setSuspendedUnderLock:(_Bool)arg1;	// IMP=0x000000000005f242
- (void)invalidateAndWait;	// IMP=0x000000000005f172
- (void)dealloc;	// IMP=0x000000000005e386
- (id)initWithPath:(id)arg1;	// IMP=0x000000000005e2f5
- (id)initWithPath:(id)arg1 inMemoryIdentifier:(id)arg2 userAgent:(id)arg3;	// IMP=0x000000000005d2c5
@property(readonly) unsigned long long signpostID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

