//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Message/ECAuthenticatableConnection-Protocol.h>
#import <Message/MFDiagnosticsGenerator-Protocol.h>

@class MFConnectionSettings, NSArray, NSString;
@protocol ECNWConnectionWrapper, ECSASLSecurityLayer;

@interface MFConnection : NSObject <ECAuthenticatableConnection, MFDiagnosticsGenerator>
{
    id <ECSASLSecurityLayer> _securityLayer;	// 8 = 0x8
    MFConnectionSettings *_connectionSettings;	// 16 = 0x10
    id <ECNWConnectionWrapper> _socket;	// 24 = 0x18
    double _lastUsedTime;	// 32 = 0x20
    char *_buffer;	// 40 = 0x28
    long long _bufferRemainingBytes;	// 48 = 0x30
    unsigned long long _bufferStart;	// 56 = 0x38
    unsigned long long _bufferLength;	// 64 = 0x40
    unsigned long long _desiredBufferLength;	// 72 = 0x48
    struct z_stream_s *_deflater;	// 80 = 0x50
    struct z_stream_s *_inflater;	// 88 = 0x58
    char *_zbuffer;	// 96 = 0x60
    unsigned int _readBytesNotLogged;	// 104 = 0x68
    _Atomic _Bool _isFetching;	// 108 = 0x6c
    _Bool _compressionEnabled;	// 109 = 0x6d
    NSString *_accountLogString;	// 112 = 0x70
}

+ (_Bool)shouldTryFallbacksAfterError:(id)arg1;	// IMP=0x00000000000129e3
+ (id)certUIPromptScheduler;	// IMP=0x00000000000112eb
+ (void)setLogActivityOnHosts:(id)arg1;	// IMP=0x00000000000110b4
+ (id)logActivityOnHosts;	// IMP=0x00000000000110a3
+ (void)setLogActivityOnPorts:(id)arg1;	// IMP=0x000000000001108f
+ (id)logActivityOnPorts;	// IMP=0x000000000001107e
+ (void)setLogAllSocketActivity:(_Bool)arg1;	// IMP=0x0000000000011072
+ (_Bool)logAllSocketActivity;	// IMP=0x0000000000011066
+ (void)setLogClasses:(id)arg1;	// IMP=0x0000000000010ff8
+ (id)logClasses;	// IMP=0x0000000000010f97
+ (void)flushLog;	// IMP=0x0000000000010f91
+ (void)logConnection:(id)arg1 type:(long long)arg2 data:(id)arg3;	// IMP=0x0000000000010b0d
+ (void)initialize;	// IMP=0x00000000000109a6
+ (void)readLoggingDefaults;	// IMP=0x00000000000105f0
- (void).cxx_destruct;	// IMP=0x0000000000015d96
@property(readonly, nonatomic) NSString *accountLogString; // @synthesize accountLogString=_accountLogString;
- (id)copyDiagnosticInformation;	// IMP=0x0000000000015c00
- (_Bool)_evaluateTrust:(struct __SecTrust *)arg1 errorPtr:(id *)arg2;	// IMP=0x0000000000015063
- (void)_setCertificateIsTrusted:(_Bool)arg1 forAccount:(id)arg2;	// IMP=0x0000000000014fbf
- (_Bool)_certificateIsTrustedForAccount:(id)arg1;	// IMP=0x0000000000014f5a
- (void)setConnectionSettings:(id)arg1;	// IMP=0x0000000000014f49
- (id)connectionSettings;	// IMP=0x0000000000014f3b
@property(readonly, nonatomic) double lastUsedTime;
@property(readonly, nonatomic) _Bool hasBytesAvailable;
- (void)disconnect;	// IMP=0x0000000000014ecb
@property(readonly, nonatomic) _Bool isValid;
- (void)endCompression;	// IMP=0x0000000000014e44
- (_Bool)startCompression;	// IMP=0x0000000000014cdb
@property(readonly, nonatomic) NSString *securityProtocol;
- (void)_clearBuffer;	// IMP=0x0000000000014bfc
- (_Bool)enableSSL;	// IMP=0x0000000000014bc3
- (_Bool)startTLSForAccount:(id)arg1;	// IMP=0x0000000000014a80
- (_Bool)authenticateUsingAccount:(id)arg1 authenticator:(id)arg2;	// IMP=0x000000000001493d
- (_Bool)readBytesIntoData:(id)arg1 desiredLength:(unsigned long long)arg2;	// IMP=0x0000000000014881
- (_Bool)readLineIntoData:(id)arg1;	// IMP=0x00000000000142fe
- (void)logReadChars:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000000142f0
- (void)enableThroughputMonitoring:(_Bool)arg1;	// IMP=0x00000000000142da
- (void)stopActivity;	// IMP=0x00000000000142c4
- (void)startActivity;	// IMP=0x00000000000142ae
- (void)setDesiredReadBufferLength:(unsigned long long)arg1;	// IMP=0x00000000000142a4
- (_Bool)writeData:(id)arg1;	// IMP=0x0000000000014284
- (_Bool)writeData:(id)arg1 dontLogBytesInRange:(struct _NSRange)arg2;	// IMP=0x00000000000141ea
- (_Bool)writeBytes:(const char *)arg1 length:(unsigned long long)arg2 dontLogBytesInRange:(struct _NSRange)arg3;	// IMP=0x0000000000013601
@property(readonly, nonatomic) _Bool usesOpportunisticSockets;
@property(readonly, nonatomic) _Bool loginDisabled;
@property(readonly, nonatomic) NSArray *authenticationMechanisms;
@property(readonly, nonatomic) NSArray *capabilities;
- (_Bool)authenticateUsingAccount:(id)arg1;	// IMP=0x0000000000012ecb
- (void)test_setSocket:(id)arg1;	// IMP=0x0000000000012dff
- (_Bool)connectUsingFallbacksForAccount:(id)arg1;	// IMP=0x0000000000012b15
- (_Bool)connectUsingAccount:(id)arg1;	// IMP=0x000000000001288b
- (_Bool)connectUsingSettings:(id)arg1;	// IMP=0x000000000001178f
- (void)_setupSocketWithSettings:(id)arg1;	// IMP=0x0000000000011533
@property _Bool isFetching;
@property(readonly, nonatomic) _Bool isConstrained;
@property(readonly, nonatomic) _Bool isCellularConnection;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000000001117b
- (id)init;	// IMP=0x00000000000110c8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

