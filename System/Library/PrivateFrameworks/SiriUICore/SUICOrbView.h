//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class CADisplayLink, CAMetalLayer, MISSING_TYPE, MTLRenderPassDescriptor, NSTimer;
@protocol MTLBuffer, MTLCommandQueue, MTLComputePipelineState, MTLDevice, MTLRenderPipelineState, MTLTexture;

@interface SUICOrbView : UIView
{
    CAMetalLayer *_metalLayer;	// 8 = 0x8
    CADisplayLink *_displayLink;	// 16 = 0x10
    CDUnknownBlockType _offCompletion;	// 24 = 0x18
    id <MTLDevice> _device;	// 32 = 0x20
    id <MTLCommandQueue> _commandQueue;	// 40 = 0x28
    id <MTLBuffer> _dynamicUniformBuffer;	// 48 = 0x30
    id <MTLRenderPipelineState> _siriChipBackfacePipeline;	// 56 = 0x38
    id <MTLRenderPipelineState> _siriChipFrontfacePipeline;	// 64 = 0x40
    id <MTLRenderPipelineState> _siriShadowPipeline;	// 72 = 0x48
    id <MTLRenderPipelineState> _siriCompositePipeline;	// 80 = 0x50
    id <MTLRenderPipelineState> _sphereMaskPipeline;	// 88 = 0x58
    id <MTLRenderPipelineState> _siriAddBlitPipeline;	// 96 = 0x60
    id <MTLTexture> _siriChipsTexture;	// 104 = 0x68
    id <MTLTexture> _sphereMaskTexture;	// 112 = 0x70
    id <MTLTexture> _siriChipsTextureMSAA;	// 120 = 0x78
    id <MTLTexture> _sphereMaskTextureMSAA;	// 128 = 0x80
    id <MTLTexture> _compositeTextureMSAA;	// 136 = 0x88
    id <MTLTexture> _blurChipsTexture;	// 144 = 0x90
    id <MTLTexture> _blurMaskTexture;	// 152 = 0x98
    id <MTLTexture> _smoothStepTexture;	// 160 = 0xa0
    id <MTLTexture> _noiseTexture;	// 168 = 0xa8
    MTLRenderPassDescriptor *_siriChipRenderPassDesc;	// 176 = 0xb0
    MTLRenderPassDescriptor *_sphereMaskRenderPassDesc;	// 184 = 0xb8
    MTLRenderPassDescriptor *_finalRenderPassDesc;	// 192 = 0xc0
    id <MTLComputePipelineState> _blurComputePipeline;	// 200 = 0xc8
    unsigned int _blurMipCount;	// 208 = 0xd0
    float _log2sigma;	// 212 = 0xd4
    id <MTLBuffer> _siriChipGeom;	// 216 = 0xd8
    int _chipNumIndexes;	// 224 = 0xe0
    int _chipIndexBufferOffset;	// 228 = 0xe4
    id <MTLBuffer> _sphereGeom;	// 232 = 0xe8
    int _sphereNumIndexes;	// 240 = 0xf0
    int _sphereIndexBufferOffet;	// 244 = 0xf4
    void *_uniformBufferAddress;	// 248 = 0xf8
    CDStruct_14d5dc5e _projectionMatrix;	// 256 = 0x100
    struct {
        CDStruct_14d5dc5e projectionMatrix;
        float offsets__sphereScale;
    } _sphereUniforms;	// 320 = 0x140
    CDStruct_d7a90142 _bubbleSpring;	// 416 = 0x1a0
    CDStruct_d7a90142 _energySpring;	// 432 = 0x1b0
    CDStruct_d7a90142 _volumeSpring;	// 448 = 0x1c0
    CDStruct_d7a90142 _chipsSpring;	// 464 = 0x1d0
    CDStruct_d7a90142 _specularSpring;	// 480 = 0x1e0
    CDStruct_d7a90142 _thinkingSpring;	// 496 = 0x1f0
    CDStruct_d7a90142 _speakingSpring;	// 512 = 0x200
    CDStruct_d7a90142 _glowSpring;	// 528 = 0x210
    CDStruct_d7a90142 _onSpring;	// 544 = 0x220
    CDStruct_d7a90142 _chipSpring[6];	// 560 = 0x230
    MISSING_TYPE *_setupRasterSize;	// 656 = 0x290
    long long _renderMode;	// 664 = 0x298
    float _delayUntilThinking;	// 672 = 0x2a0
    float _bubbleDrawnSize;	// 676 = 0x2a4
    float _averageChipSize;	// 680 = 0x2a8
    float _maxChipSize;	// 684 = 0x2ac
    float _chipRotation;	// 688 = 0x2b0
    float _chipRandomOffset[18];	// 692 = 0x2b4
    float _time;	// 764 = 0x2fc
    float _sinTime;	// 768 = 0x300
    float _thinkRotation;	// 772 = 0x304
    float _rotationEnergy;	// 776 = 0x308
    float _frameEnergy;	// 780 = 0x30c
    float _framerateEnergyModifier;	// 784 = 0x310
    float _thinkingTimeStart;	// 788 = 0x314
    _Bool _startingThinkingModeNow;	// 792 = 0x318
    _Bool _drawingVeryLastFrame;	// 793 = 0x319
    _Bool _resetOnNextFrame;	// 794 = 0x31a
    _Bool _reduceMotion;	// 795 = 0x31b
    _Bool _reallocTextures;	// 796 = 0x31c
    float _powerLevel;	// 800 = 0x320
    unsigned long long _framerateType;	// 808 = 0x328
    int _framesPerSecond;	// 816 = 0x330
    float _oneOverFPS;	// 820 = 0x334
    int _currentlyShownChannel;	// 824 = 0x338
    int _numberOfChips;	// 828 = 0x33c
    float _bias;	// 832 = 0x340
    float _scale;	// 836 = 0x344
    float _power;	// 840 = 0x348
    long long _mode;	// 848 = 0x350
    NSTimer *_invalidateTimer;	// 856 = 0x358
}

+ (Class)layerClass;	// IMP=0x0000000000014d70
- (void).cxx_destruct;	// IMP=0x000000000001b44f
@property(retain, nonatomic) NSTimer *invalidateTimer; // @synthesize invalidateTimer=_invalidateTimer;
@property(nonatomic) float power; // @synthesize power=_power;
@property(nonatomic) float scale; // @synthesize scale=_scale;
@property(nonatomic) float bias; // @synthesize bias=_bias;
@property(nonatomic) int numberOfChips; // @synthesize numberOfChips=_numberOfChips;
@property(nonatomic) int currentlyShownChannel; // @synthesize currentlyShownChannel=_currentlyShownChannel;
@property(nonatomic) long long mode; // @synthesize mode=_mode;
- (float)linearPowerLevel;	// IMP=0x000000000001b3b1
- (void)_invalidateDisplayLink;	// IMP=0x000000000001b210
- (void)invalidate;	// IMP=0x000000000001b09f
- (void)_updateMetalTextureRasterSize:(struct CGSize)arg1;	// IMP=0x000000000001a80c
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000000000001a742
- (void)_drawSiriFrame:(id)arg1;	// IMP=0x0000000000019a06
- (void)_blurInCommandBuffer:(id)arg1 sourceTexture:(id)arg2 destinationTexture:(id)arg3;	// IMP=0x0000000000019577
- (void)_updateSiriGraphicsState:(double)arg1;	// IMP=0x0000000000018a30
- (void)_updateSiriPhysics:(float)arg1;	// IMP=0x0000000000017eef
- (void)_updateChipsSizesForOnOff;	// IMP=0x0000000000017bda
- (void)_updateDynamicBufferState;	// IMP=0x0000000000017ba7
- (void)_loadAssets;	// IMP=0x0000000000017ad5
- (void)_createNoiseTexture;	// IMP=0x000000000001795e
- (void)_createSmoothStepTexture;	// IMP=0x00000000000177f2
- (void)_createSiriChipBuffer;	// IMP=0x0000000000017626
- (void)_createSphereBuffer;	// IMP=0x0000000000017205
- (void)_loadMetalState;	// IMP=0x0000000000016f40
- (void)_loadMetalPipelines;	// IMP=0x0000000000015f69
- (void)_prewarmBlurWithBlitEncoder:(id)arg1 src:(id)arg2 dst:(id)arg3 mipCount:(unsigned int)arg4;	// IMP=0x0000000000015e09
- (void)prewarmOrb;	// IMP=0x0000000000015c9a
- (void)setPowerLevel:(float)arg1;	// IMP=0x0000000000015c47
- (void)animateToOffWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015b74
- (void)pauseAnimationAndReset;	// IMP=0x000000000001591a
- (void)_didSetRenderModeFrom:(long long)arg1 to:(long long)arg2;	// IMP=0x0000000000015747
- (void)_updateRenderModeWithDelta:(float)arg1;	// IMP=0x00000000000156da
- (void)_setMode:(long long)arg1;	// IMP=0x0000000000015651
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000150ca
- (void)_initCommandQueue;	// IMP=0x0000000000015083
- (void)_initNoiseOffsets;	// IMP=0x0000000000015038
- (void)_initSprings;	// IMP=0x0000000000014ecd
- (void)_setupSpring:(CDStruct_d7a90142 *)arg1 withType:(unsigned long long)arg2 initialValue:(float)arg3;	// IMP=0x0000000000014d81

@end

