//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAssetReader, AVAssetReaderTrackOutput, AVAssetTrack, AVAssetWriter, AVAssetWriterInput, NSArray, NSFileHandle, NSProgress, NSString, NSURL, PFProportionalIntegralController, PFSinglePassVideoExportItemStatistics, PFVideoExportRangeCoordinator;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source;

@interface PFSinglePassVideoExportItem : NSObject
{
    _Bool _shouldDeleteDestinationURLOnDeallocation;	// 8 = 0x8
    _Bool _needsCurrentEncodingBitRateUpdate;	// 9 = 0x9
    _Bool _maximizePowerEfficiency;	// 10 = 0xa
    NSString *_identifier;	// 16 = 0x10
    unsigned long long _targetOutputFileSize;	// 24 = 0x18
    NSProgress *_progress;	// 32 = 0x20
    NSArray *_additionalMetadata;	// 40 = 0x28
    unsigned long long _state;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_stateQueue;	// 56 = 0x38
    AVAsset *_inputAsset;	// 64 = 0x40
    AVAssetTrack *_videoTrack;	// 72 = 0x48
    NSArray *_additionalTracks;	// 80 = 0x50
    NSFileHandle *_conversionOutputFileHandle;	// 88 = 0x58
    NSURL *_destinationFileURL;	// 96 = 0x60
    unsigned long long _outputFileLastEndOffset;	// 104 = 0x68
    long long _targetOutputMediaDataSize;	// 112 = 0x70
    PFSinglePassVideoExportItemStatistics *_statistics;	// 120 = 0x78
    PFProportionalIntegralController *_bitRateController;	// 128 = 0x80
    AVAssetReader *_assetReader;	// 136 = 0x88
    AVAssetReaderTrackOutput *_videoReaderTrackOutput;	// 144 = 0x90
    NSArray *_additionalReaderTrackOutputs;	// 152 = 0x98
    AVAssetWriter *_assetWriter;	// 160 = 0xa0
    AVAssetWriterInput *_videoWriterInput;	// 168 = 0xa8
    NSArray *_additionalWriterInputs;	// 176 = 0xb0
    NSObject<OS_dispatch_source> *_outputFileSizeChangeSource;	// 184 = 0xb8
    unsigned long long _minimumChunkLength;	// 192 = 0xc0
    NSObject<OS_dispatch_group> *_inputReadingCompletionGroup;	// 200 = 0xc8
    PFVideoExportRangeCoordinator *_availableRangeCoordinator;	// 208 = 0xd0
    struct OpaqueVTCompressionSession *_compressionSession;	// 216 = 0xd8
    long long _currentEncodingBitRate;	// 224 = 0xe0
}

- (void).cxx_destruct;	// IMP=0x0000000000086d84
@property _Bool maximizePowerEfficiency; // @synthesize maximizePowerEfficiency=_maximizePowerEfficiency;
@property _Bool needsCurrentEncodingBitRateUpdate; // @synthesize needsCurrentEncodingBitRateUpdate=_needsCurrentEncodingBitRateUpdate;
@property long long currentEncodingBitRate; // @synthesize currentEncodingBitRate=_currentEncodingBitRate;
@property struct OpaqueVTCompressionSession *compressionSession; // @synthesize compressionSession=_compressionSession;
@property(retain) PFVideoExportRangeCoordinator *availableRangeCoordinator; // @synthesize availableRangeCoordinator=_availableRangeCoordinator;
@property(retain) NSObject<OS_dispatch_group> *inputReadingCompletionGroup; // @synthesize inputReadingCompletionGroup=_inputReadingCompletionGroup;
@property unsigned long long minimumChunkLength; // @synthesize minimumChunkLength=_minimumChunkLength;
@property(retain) NSObject<OS_dispatch_source> *outputFileSizeChangeSource; // @synthesize outputFileSizeChangeSource=_outputFileSizeChangeSource;
@property(retain) NSArray *additionalWriterInputs; // @synthesize additionalWriterInputs=_additionalWriterInputs;
@property(retain) AVAssetWriterInput *videoWriterInput; // @synthesize videoWriterInput=_videoWriterInput;
@property(retain) AVAssetWriter *assetWriter; // @synthesize assetWriter=_assetWriter;
@property(retain) NSArray *additionalReaderTrackOutputs; // @synthesize additionalReaderTrackOutputs=_additionalReaderTrackOutputs;
@property(retain) AVAssetReaderTrackOutput *videoReaderTrackOutput; // @synthesize videoReaderTrackOutput=_videoReaderTrackOutput;
@property(retain) AVAssetReader *assetReader; // @synthesize assetReader=_assetReader;
@property(retain) PFProportionalIntegralController *bitRateController; // @synthesize bitRateController=_bitRateController;
@property(retain) PFSinglePassVideoExportItemStatistics *statistics; // @synthesize statistics=_statistics;
@property long long targetOutputMediaDataSize; // @synthesize targetOutputMediaDataSize=_targetOutputMediaDataSize;
@property unsigned long long outputFileLastEndOffset; // @synthesize outputFileLastEndOffset=_outputFileLastEndOffset;
@property _Bool shouldDeleteDestinationURLOnDeallocation; // @synthesize shouldDeleteDestinationURLOnDeallocation=_shouldDeleteDestinationURLOnDeallocation;
@property(retain) NSURL *destinationFileURL; // @synthesize destinationFileURL=_destinationFileURL;
@property(retain) NSFileHandle *conversionOutputFileHandle; // @synthesize conversionOutputFileHandle=_conversionOutputFileHandle;
@property(retain) NSArray *additionalTracks; // @synthesize additionalTracks=_additionalTracks;
@property(retain) AVAssetTrack *videoTrack; // @synthesize videoTrack=_videoTrack;
@property(retain) AVAsset *inputAsset; // @synthesize inputAsset=_inputAsset;
@property(retain) NSObject<OS_dispatch_queue> *stateQueue; // @synthesize stateQueue=_stateQueue;
@property unsigned long long state; // @synthesize state=_state;
@property(copy, nonatomic) NSArray *additionalMetadata; // @synthesize additionalMetadata=_additionalMetadata;
@property(retain) NSProgress *progress; // @synthesize progress=_progress;
@property(nonatomic) unsigned long long targetOutputFileSize; // @synthesize targetOutputFileSize=_targetOutputFileSize;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
- (double)inputAssetDuration;	// IMP=0x0000000000086988
- (void)_cancel;	// IMP=0x0000000000086863
- (id)bitRateControllerForTargetEncodingBitRate:(long long)arg1;	// IMP=0x0000000000086774
- (void)notifyDataAvailableToHandler:(CDUnknownBlockType)arg1 ignoreMinimumChunkLength:(_Bool)arg2;	// IMP=0x00000000000865a6
- (void)setupOutputFileSourceWithOutputAvailableHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000086220
- (void)processCompressedSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 presentationTimeStamp:(CDStruct_1b6d18a9)arg2;	// IMP=0x0000000000085e00
- (void)startReadingInputAssetWithOutputAvailableHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000085a43
- (long long)estimatedOutputBitRate;	// IMP=0x000000000008597f
- (void)configureDroppableFrameRateForCompressionSession:(struct OpaqueVTCompressionSession *)arg1 inputWidth:(int)arg2 inputHeight:(int)arg3;	// IMP=0x00000000000857fb
- (_Bool)setupConversionWithError:(id *)arg1;	// IMP=0x0000000000084571
- (id)outputDataInRange:(struct _NSRange)arg1 waitUntilAvailableWithTimeout:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000084201
- (_Bool)startConversionWithError:(id *)arg1 outputAvailableHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000084152
- (_Bool)preflight;	// IMP=0x0000000000083e5d
- (void)dealloc;	// IMP=0x0000000000083c83
- (id)init;	// IMP=0x0000000000083aa3

@end

