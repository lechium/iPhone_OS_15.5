//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SpringBoard/BSPowerMonitorObserver-Protocol.h>
#import <SpringBoard/BSTransactionObserver-Protocol.h>
#import <SpringBoard/BSWatchdogDelegate-Protocol.h>
#import <SpringBoard/CCSModulePresentationEndpoint-Protocol.h>
#import <SpringBoard/FBApplicationProcessObserver-Protocol.h>
#import <SpringBoard/FBProcessManagerObserver-Protocol.h>
#import <SpringBoard/FBSceneManagerObserver-Protocol.h>
#import <SpringBoard/FBSystemServiceDelegate-Protocol.h>
#import <SpringBoard/MCProfileConnectionObserver-Protocol.h>
#import <SpringBoard/SBBacklightControllerObserver-Protocol.h>
#import <SpringBoard/SBControlCenterModuleTransientOverlayViewControllerDelegate-Protocol.h>
#import <SpringBoard/SBFZStackParticipantDelegate-Protocol.h>
#import <SpringBoard/SBInCallPresentationManagerDelegate-Protocol.h>
#import <SpringBoard/SBPowerDownViewControllerDelegate-Protocol.h>
#import <SpringBoard/SBTransientOverlayPresentationManagerDelegate-Protocol.h>

@class BSEventQueueLock, BSWatchdog, FBDisplayLayoutTransition, FBSceneManager, NSMutableDictionary, NSMutableSet, NSString, SBAppStatusBarSettingsAssertion, SBBrightnessControl, SBControlCenterModuleTransientOverlayViewController, SBFZStackParticipant, SBFZStackResolver, SBFocusModesHomeScreenSettingsManager, SBHUDController, SBHardwareButtonZStackClient, SBHomeGestureArbiter, SBHomeHardwareButtonLongPressDurationAssertion, SBIdleTimerCoordinatorHelper, SBInCallPresentationManager, SBInCallTransientOverlayManager, SBKeyboardDismissalManager, SBOrientationAggdLogger, SBPIPControllerCoordinator, SBPowerDownViewController, SBRingerControl, SBSystemNotesManager, SBTransientOverlayPresentationManager, SBUniversalControlServer, SBVolumeControl, SBWorkspaceKeyboardFocusController, SBWorkspaceTransaction, SBZStackAuditor;
@protocol BSInvalidatable, SBIdleTimerCoordinating, SBIdleTimerProviding;

@interface SBMainWorkspace <BSTransactionObserver, SBBacklightControllerObserver, FBSystemServiceDelegate, FBProcessManagerObserver, FBApplicationProcessObserver, BSWatchdogDelegate, FBSceneManagerObserver, MCProfileConnectionObserver, BSPowerMonitorObserver, SBPowerDownViewControllerDelegate, SBTransientOverlayPresentationManagerDelegate, CCSModulePresentationEndpoint, SBControlCenterModuleTransientOverlayViewControllerDelegate, SBInCallPresentationManagerDelegate, SBFZStackParticipantDelegate>
{
    _Bool _initialized;	// 24 = 0x18
    BSEventQueueLock *_suspensionLock;	// 32 = 0x20
    _Bool _medusaEnabled;	// 40 = 0x28
    SBOrientationAggdLogger *_orientationAggdLogger;	// 48 = 0x30
    FBDisplayLayoutTransition *_displayLayoutTransition;	// 56 = 0x38
    SBWorkspaceTransaction *_currentTransaction;	// 64 = 0x40
    BSEventQueueLock *_currentTransactionLock;	// 72 = 0x48
    BSWatchdog *_transactionWatchdog;	// 80 = 0x50
    NSMutableDictionary *_extensionHandlersByType;	// 88 = 0x58
    SBAppStatusBarSettingsAssertion *_statusBarAssertion;	// 96 = 0x60
    NSMutableSet *_activeSuspendedWorkspaceTransitions;	// 104 = 0x68
    SBIdleTimerCoordinatorHelper *_idleTimerCoordinatorHelper;	// 112 = 0x70
    SBPowerDownViewController *_powerDownViewController;	// 120 = 0x78
    SBHomeHardwareButtonLongPressDurationAssertion *_powerDownLongPressDurationAssertion;	// 128 = 0x80
    SBControlCenterModuleTransientOverlayViewController *_presentedControlCenterModuleTransientOverlayViewController;	// 136 = 0x88
    SBUniversalControlServer *_universalControlServer;	// 144 = 0x90
    SBWorkspaceKeyboardFocusController *_keyboardFocusController;	// 152 = 0x98
    id <BSInvalidatable> _lockKeyboardFocusAssertion;	// 160 = 0xa0
    SBSystemNotesManager *_systemNotesManager;	// 168 = 0xa8
    SBFocusModesHomeScreenSettingsManager *_focusModesHomeScreenSnapshotManager;	// 176 = 0xb0
    SBZStackAuditor *_zStackAuditor;	// 184 = 0xb8
    SBFZStackParticipant *_keyShortcutHUDZStackParticipant;	// 192 = 0xc0
    id <SBIdleTimerProviding> _activeIdleTimerProvider;	// 200 = 0xc8
    SBHUDController *_HUDController;	// 208 = 0xd0
    SBVolumeControl *_volumeControl;	// 216 = 0xd8
    SBRingerControl *_ringerControl;	// 224 = 0xe0
    SBBrightnessControl *_brightnessControl;	// 232 = 0xe8
    SBHomeGestureArbiter *_homeGestureArbiter;	// 240 = 0xf0
    SBFZStackResolver *_zStackResolver;	// 248 = 0xf8
    SBHardwareButtonZStackClient *_zStackHardwareButtonClient;	// 256 = 0x100
    SBInCallTransientOverlayManager *_inCallTransientOverlayManager;	// 264 = 0x108
    SBTransientOverlayPresentationManager *_transientOverlayPresentationManager;	// 272 = 0x110
    SBKeyboardDismissalManager *_keyboardDismissalManager;	// 280 = 0x118
    SBInCallPresentationManager *_inCallPresentationManager;	// 288 = 0x120
    SBPIPControllerCoordinator *_pipCoordinator;	// 296 = 0x128
    FBSceneManager *_sceneManager;	// 304 = 0x130
}

+ (id)debugDescription;	// IMP=0x0000000000114d5d
+ (id)_sharedInstanceWithNilCheckPolicy:(long long)arg1;	// IMP=0x0000000000006e59
+ (id)_instanceIfExists;	// IMP=0x0000000000006e45
+ (id)sharedInstanceIfExists;	// IMP=0x000000000011440b
+ (id)sharedInstance;	// IMP=0x000000000003db8c
+ (id)start;	// IMP=0x0000000000114363
- (void).cxx_destruct;	// IMP=0x0000000000127bd2
@property(readonly, nonatomic) FBSceneManager *sceneManager; // @synthesize sceneManager=_sceneManager;
@property(readonly, nonatomic) SBPIPControllerCoordinator *pipCoordinator; // @synthesize pipCoordinator=_pipCoordinator;
@property(readonly, nonatomic) SBSystemNotesManager *systemNotesManager; // @synthesize systemNotesManager=_systemNotesManager;
@property(readonly, nonatomic) SBInCallPresentationManager *inCallPresentationManager; // @synthesize inCallPresentationManager=_inCallPresentationManager;
@property(readonly, nonatomic) SBKeyboardDismissalManager *keyboardDismissalManager; // @synthesize keyboardDismissalManager=_keyboardDismissalManager;
@property(readonly, nonatomic) SBUniversalControlServer *universalControlServer; // @synthesize universalControlServer=_universalControlServer;
@property(readonly, nonatomic) SBTransientOverlayPresentationManager *transientOverlayPresentationManager; // @synthesize transientOverlayPresentationManager=_transientOverlayPresentationManager;
@property(readonly, nonatomic) SBInCallTransientOverlayManager *inCallTransientOverlayManager; // @synthesize inCallTransientOverlayManager=_inCallTransientOverlayManager;
@property(readonly, nonatomic) SBHardwareButtonZStackClient *zStackHardwareButtonClient; // @synthesize zStackHardwareButtonClient=_zStackHardwareButtonClient;
@property(readonly, nonatomic) SBFZStackResolver *zStackResolver; // @synthesize zStackResolver=_zStackResolver;
@property(readonly, nonatomic) SBHomeGestureArbiter *homeGestureArbiter; // @synthesize homeGestureArbiter=_homeGestureArbiter;
@property(readonly, nonatomic) SBBrightnessControl *brightnessControl; // @synthesize brightnessControl=_brightnessControl;
@property(readonly, nonatomic) SBRingerControl *ringerControl; // @synthesize ringerControl=_ringerControl;
@property(readonly, nonatomic) SBVolumeControl *volumeControl; // @synthesize volumeControl=_volumeControl;
@property(readonly, nonatomic) SBHUDController *HUDController; // @synthesize HUDController=_HUDController;
@property(retain, nonatomic) SBWorkspaceTransaction *currentTransaction; // @synthesize currentTransaction=_currentTransaction;
@property(retain, nonatomic, getter=_activeIdleTimerProvider, setter=_setActiveIdleTimerProvider:) id <SBIdleTimerProviding> activeIdleTimerProvider; // @synthesize activeIdleTimerProvider=_activeIdleTimerProvider;
@property(readonly, nonatomic, getter=isMedusaEnabled) _Bool medusaEnabled; // @synthesize medusaEnabled=_medusaEnabled;
- (_Bool)presentTransientOverlayViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000012776a
- (_Bool)dismissTransientOverlayViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000012743e
- (_Bool)dismissAllTransientOverlayPresentationsAnimated:(_Bool)arg1;	// IMP=0x00000000001272f4
- (void)powerMonitorSystemDidWakeFromSleep:(id)arg1;	// IMP=0x000000000012722a
- (void)powerMonitorSystemWillWakeFromSleep:(id)arg1;	// IMP=0x00000000001271a4
- (void)powerMonitorSystemSleepRequestAborted:(id)arg1;	// IMP=0x00000000001270da
- (void)powerMonitorSystemWillSleep:(id)arg1;	// IMP=0x000000000012704e
- (id)_handlerForExtensionPoint:(id)arg1;	// IMP=0x0000000000126fe3
- (void)_unregisterHandler:(id)arg1 forExtensionPoint:(id)arg2;	// IMP=0x0000000000126fc3
- (void)_registerHandler:(id)arg1 forExtensionPoint:(id)arg2;	// IMP=0x0000000000126ed1
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x0000000000126eba
- (_Bool)transientOverlayPresentationManager:(id)arg1 shouldRestoreFirstResponderForKeyWindow:(id)arg2;	// IMP=0x0000000000126eb2
- (_Bool)transientOverlayPresentationManager:(id)arg1 shouldResignFirstResponderForKeyWindow:(id)arg2;	// IMP=0x0000000000126bc6
- (void)transientOverlayPresentationManager:(id)arg1 willPresentViewController:(id)arg2;	// IMP=0x0000000000126a4d
- (void)transientOverlayPresentationManager:(id)arg1 willChangeTopmostViewControllerInterfaceOrientationToOrientation:(long long)arg2;	// IMP=0x0000000000126a2e
- (void)transientOverlayPresentationManager:(id)arg1 unregisterCoverSheetExternalBehaviorProvider:(id)arg2;	// IMP=0x000000000012699a
- (void)transientOverlayPresentationManager:(id)arg1 registerCoverSheetExternalBehaviorProvider:(id)arg2;	// IMP=0x0000000000126906
- (void)transientOverlayPresentationManager:(id)arg1 preferredWhitePointAdaptivityStyleDidChangeWithAnimationSettings:(id)arg2;	// IMP=0x0000000000126890
- (void)transientOverlayPresentationManager:(id)arg1 didDismissViewController:(id)arg2 wasTopmostPresentation:(_Bool)arg3;	// IMP=0x000000000012672b
- (id)transientOverlayPresentationManager:(id)arg1 newSceneDeactivationAssertionWithReason:(long long)arg2;	// IMP=0x00000000001266ac
- (void)transientOverlayPresentationManagerRequestsSiriDismissal:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000126659
- (id)transientOverlayPresentationManager:(id)arg1 acquireSiriWindowLevelAssertionWithReason:(id)arg2 windowLevel:(double)arg3;	// IMP=0x00000000001265c6
- (id)transientOverlayPresentationManager:(id)arg1 acquireWallpaperAnimationSuspensionAssertionWithReason:(id)arg2;	// IMP=0x000000000012653f
- (id)siriPresentationObservationTokenForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x00000000001264d5
- (id)transientOverlayPresentationManager:(id)arg1 acquireDeviceOrientationUpdateDeferralAssertionWithReason:(id)arg2;	// IMP=0x00000000001264b6
- (void)transientOverlayPresentationManagerRequestsControlCenterDismissal:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000126463
- (id)transientOverlayPresentationManager:(id)arg1 acquireControlCenterWindowLevelAssertionWithReason:(id)arg2 windowLevel:(double)arg3;	// IMP=0x00000000001263d0
- (id)controlCenterPresentationObservationTokenForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000126366
- (id)transientOverlayPresentationManager:(id)arg1 acquireBannerLongLookWindowLevelAssertionWithReason:(id)arg2 windowLevel:(double)arg3;	// IMP=0x00000000001262d0
- (id)bannerLongLookPresentationObservationTokenForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000126242
- (id)transientOverlayPresentationManager:(id)arg1 acquireInteractiveScreenshotGestureDisabledAssertionWithReason:(id)arg2;	// IMP=0x00000000001261b8
- (id)transientOverlayPresentationManager:(id)arg1 acquireProximitySensorEnabledAssertionWithReason:(id)arg2;	// IMP=0x0000000000126068
- (id)transientOverlayPresentationManager:(id)arg1 acquireDisableAutoUnlockAssertionWithReason:(id)arg2;	// IMP=0x0000000000125fc3
- (void)transientOverlayPresentationManagerRequestsAppIconForceTouchDismissal:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000125f7d
- (unsigned long long)defaultSupportedInterfaceOrientationsForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000125ee3
- (_Bool)isKeyboardVisibleForSpringBoardForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000125e98
- (_Bool)defaultShouldAutorotateForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000125e75
- (long long)defaultPreferredInterfaceOrientationForPresentationForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000125e59
- (id)transientOverlayPresentationManager:(id)arg1 acquireHideAppStatusBarAssertionWithReason:(id)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000125dcc
- (id)currentStatusBarSettingsForTransientOverlayPresentationManager:(id)arg1;	// IMP=0x0000000000125c40
- (void)transactionDidComplete:(id)arg1;	// IMP=0x000000000004c37b
- (void)watchdogFired:(id)arg1;	// IMP=0x0000000000125a03
- (void)watchdogStarted:(id)arg1;	// IMP=0x000000000003aab5
- (void)backlightController:(id)arg1 didAnimateBacklightToFactor:(float)arg2 source:(long long)arg3;	// IMP=0x00000000001259ef
- (void)systemServicePrepareForShutdown:(id)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00000000001259a8
- (void)systemServicePrepareForExit:(id)arg1 andRelaunch:(_Bool)arg2;	// IMP=0x0000000000125961
- (void)systemService:(id)arg1 handleActions:(id)arg2 origin:(id)arg3 withResult:(CDUnknownBlockType)arg4;	// IMP=0x00000000001257bd
- (void)systemService:(id)arg1 isPasscodeLockedOrBlockedWithResult:(CDUnknownBlockType)arg2;	// IMP=0x0000000000125732
- (void)_attemptUnlockToApplication:(id)arg1 showPasscode:(_Bool)arg2 origin:(id)arg3 givenOrigin:(id)arg4 options:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000125207
- (_Bool)_canImplicitlyUnlockAtLockScreenWhileAuthenticatedFromOrigin:(id)arg1 givenOrigin:(id)arg2 trustedRequest:(_Bool)arg3 outReason:(id *)arg4;	// IMP=0x0000000000124f64
- (void)_handleUserActionRequest:(id)arg1 options:(id)arg2 activationSettings:(id)arg3 origin:(id)arg4 withResult:(CDUnknownBlockType)arg5;	// IMP=0x0000000000123b89
- (void)_handleUntrustedOpenRequestForApplication:(id)arg1 options:(id)arg2 activationSettings:(id)arg3 origin:(id)arg4 withResult:(CDUnknownBlockType)arg5;	// IMP=0x000000000012386f
- (void)_handleTrustedOpenRequestForApplication:(id)arg1 options:(id)arg2 activationSettings:(id)arg3 origin:(id)arg4 withResult:(CDUnknownBlockType)arg5;	// IMP=0x00000000001232e3
- (_Bool)isApplicationRunningAsViewService:(id)arg1;	// IMP=0x0000000000123005
- (void)_handleOpenApplicationRequest:(id)arg1 options:(id)arg2 activationSettings:(id)arg3 origin:(id)arg4 withResult:(CDUnknownBlockType)arg5;	// IMP=0x000000000011edbc
- (id)_validateRequestToOpenApplication:(id)arg1 options:(id)arg2 origin:(id)arg3 error:(out id *)arg4;	// IMP=0x00000000000b5120
- (_Bool)_canAppWithBundleIdentifier:(id)arg1 requestMovingContentToSceneOpenApplicationOptions:(id)arg2;	// IMP=0x000000000011ec47
- (void)_applyCommonActivationSettings:(id)arg1 forRequestWithOptions:(id)arg2 clientProcess:(id)arg3 application:(id)arg4;	// IMP=0x000000000011e0ad
- (void)systemService:(id)arg1 handleOpenApplicationRequest:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000b4b20
- (void)systemService:(id)arg1 canActivateApplication:(id)arg2 withResult:(CDUnknownBlockType)arg3;	// IMP=0x000000000011df1e
- (id)systemServiceApplicationInfoProvider:(id)arg1;	// IMP=0x000000000011dec7
- (void)applicationProcessDebuggingStateDidChange:(id)arg1;	// IMP=0x000000000011dd53
- (void)applicationProcessDidExit:(id)arg1 withContext:(id)arg2;	// IMP=0x00000000000bcb74
- (void)applicationProcessDidLaunch:(id)arg1;	// IMP=0x0000000000084c2e
- (void)applicationProcessWillLaunch:(id)arg1;	// IMP=0x00000000000837a7
- (void)processDidExit:(id)arg1;	// IMP=0x00000000000bcc3c
- (void)process:(id)arg1 stateDidChangeFromState:(id)arg2 toState:(id)arg3;	// IMP=0x0000000000073b7a
- (void)processManager:(id)arg1 didRemoveProcess:(id)arg2;	// IMP=0x00000000000bbca4
- (void)processManager:(id)arg1 didAddProcess:(id)arg2;	// IMP=0x0000000000078d4a
- (void)zStackParticipant:(id)arg1 updatePreferences:(id)arg2;	// IMP=0x000000000011cae3
- (void)zStackParticipantDidChange:(id)arg1;	// IMP=0x000000000011cadd
- (void)_handleKeyShortcutHUDVisibilityDidDismiss;	// IMP=0x000000000011ca6c
- (void)_handleKeyShortcutHUDVisibilityDidPresent;	// IMP=0x000000000011c9d2
- (_Bool)_isLaunchingApplicationAfterSetupForRequestWithBundleIdentifier:(id)arg1 options:(id)arg2 origin:(id)arg3;	// IMP=0x000000000011c8a0
- (_Bool)_removeApplicationEntitiesFromWorkspace:(id)arg1 error:(id *)arg2;	// IMP=0x000000000011bf09
- (void)_removeApplicationEntities:(id)arg1 withDestructionIntent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000011b894
- (void)_applicationEntityWasRemovedFromAppSwitcher:(id)arg1;	// IMP=0x000000000011b479
- (void)_destroyApplicationSceneEntity:(id)arg1;	// IMP=0x000000000011b0a7
- (void)_coversheetDidDismiss;	// IMP=0x0000000000093a93
- (void)_coversheetDidPresent;	// IMP=0x0000000000098037
- (void)_noteDidWakeFromSleep;	// IMP=0x000000000011af64
- (_Bool)_applicationProcessExited:(id)arg1 withContext:(id)arg2;	// IMP=0x00000000000bcc5a
- (_Bool)_handleSetupExited:(id)arg1;	// IMP=0x000000000011acc6
- (void)_handleBuddyLaunchFinished;	// IMP=0x000000000011a990
- (id)_applicationForIdentifier:(id)arg1;	// IMP=0x0000000000075b81
- (void)_updateFrontMostApplicationEventPort;	// IMP=0x0000000000093bdc
- (void)updateFrontMostApplicationEventPort;	// IMP=0x0000000000093bca
- (id)pipControllerForType:(long long)arg1;	// IMP=0x000000000011a971
- (void)_setupPIPCoordinator;	// IMP=0x000000000011a618
- (void)_finishInitialization;	// IMP=0x000000000011a0bc
- (void)_resume;	// IMP=0x0000000000119f97
- (void)_suspend;	// IMP=0x0000000000119efd
- (void)_updateMedusaEnablementAndNotify:(_Bool)arg1;	// IMP=0x0000000000119cbf
- (id)_selectTransactionForAppActivationRequest:(id)arg1;	// IMP=0x000000000007b4e9
- (id)_selectTransactionForAppEntityRemoved:(id)arg1;	// IMP=0x0000000000119a7c
- (id)_selectTransactionForAppRelaunch:(id)arg1;	// IMP=0x0000000000119985
- (id)_selectTransactionForAppActivationUnderMainScreenLockRequest:(id)arg1;	// IMP=0x000000000011983f
- (id)_selectTransactionForAppActivationUnderMainScreenLock:(id)arg1 withResult:(CDUnknownBlockType)arg2;	// IMP=0x000000000011967e
- (id)_selectTransactionForReturningToTheLockScreenWithRequest:(id)arg1 fromApp:(id)arg2;	// IMP=0x0000000000119562
- (id)_selectTransactionForReturningToTheLockScreenFromApp:(id)arg1 animated:(_Bool)arg2 forceToBuddy:(_Bool)arg3 withResult:(CDUnknownBlockType)arg4;	// IMP=0x00000000001192f3
- (id)_selectTransactionForTransientOverlayPresentationRequest:(id)arg1;	// IMP=0x000000000011925a
- (void)_addRequestCompletionBlock:(CDUnknownBlockType)arg1 toTransaction:(id)arg2;	// IMP=0x000000000011901f
- (_Bool)_setCurrentTransactionForRequest:(id)arg1 fallbackProvider:(CDUnknownBlockType)arg2;	// IMP=0x000000000000bb62
- (_Bool)_executeApplicationTransitionRequest:(id)arg1;	// IMP=0x000000000000b55d
- (_Bool)_executeTransientOverlayTransitionRequest:(id)arg1;	// IMP=0x0000000000118cfe
- (void)_determineSourceForTransitionRequest:(id)arg1;	// IMP=0x000000000000a1ac
- (_Bool)_preflightTransitionRequest:(id)arg1 forExecution:(_Bool)arg2;	// IMP=0x00000000001181cc
- (id)_alertItemForPreventingLaunchOfApp:(id)arg1 fromTrustState:(unsigned long long)arg2;	// IMP=0x0000000000117e59
- (_Bool)_executeTransitionRequest:(id)arg1 options:(unsigned long long)arg2 validator:(CDUnknownBlockType)arg3;	// IMP=0x00000000000098b6
- (void)_executeSuspendedTransactionForRequest:(id)arg1;	// IMP=0x000000000011721a
- (void)_initializeAndObserveDefaults;	// IMP=0x0000000000116f12
@property(readonly, nonatomic) SBWorkspaceKeyboardFocusController *keyboardFocusController;
- (void)_broadcastCurrentTransaction;	// IMP=0x0000000000116d86
- (void)powerDownViewControllerDidDisappear:(id)arg1;	// IMP=0x0000000000116cf9
- (void)powerDownViewControllerRequestsDismissal:(id)arg1;	// IMP=0x0000000000116ce5
- (void)powerDownViewControllerRequestsPowerDown:(id)arg1;	// IMP=0x0000000000116c51
@property(readonly, nonatomic, getter=isPowerDownTransientOverlayTopmost) _Bool powerDownTransientOverlayFrontmost;
- (void)dismissPowerDownTransientOverlayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001168c4
- (void)presentPowerDownTransientOverlay;	// IMP=0x00000000001167c4
- (id)_generateIdleTimerBehaviorForReason:(id)arg1;	// IMP=0x000000000003b350
- (void)_proposeIdleTimerBehaviorForReason:(id)arg1;	// IMP=0x0000000000093adc
- (void)inCallPresentationManagerRequestsHandlingOfDeferredUILock:(id)arg1;	// IMP=0x00000000001167a8
- (long long)inCallPresentationManagerInterfaceOrientationForTransientOverlayPresentation:(id)arg1;	// IMP=0x000000000011678b
- (long long)inCallPresentationManagerInterfaceOrientationForBannerPresentation:(id)arg1;	// IMP=0x000000000011676f
- (id)inCallPresentationManager:(id)arg1 createPresentationSessionWithSceneHandle:(id)arg2;	// IMP=0x000000000011651d
- (void)controlCenterModuleTransientOverlayViewControllerNeedsDismissal:(id)arg1;	// IMP=0x0000000000116465
- (void)_dismissPresentedControlCenterModule:(CDUnknownBlockType)arg1;	// IMP=0x000000000011632a
- (void)presentModuleWithIdentifier:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000115f6e
- (id)idleTimerProvider:(id)arg1 didProposeBehavior:(id)arg2 forReason:(id)arg3;	// IMP=0x000000000006bd2c
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;	// IMP=0x000000000003b337
@property(retain, nonatomic) id <SBIdleTimerCoordinating> idleTimerCoordinator;
@property(readonly, nonatomic, getter=isSpringBoardActive) _Bool springBoardActive;
- (id)transactionForTransitionRequest:(id)arg1;	// IMP=0x0000000000115f1d
- (_Bool)_canExecuteTransitionRequest:(id)arg1 forExecution:(_Bool)arg2;	// IMP=0x00000000001155fb
- (_Bool)canExecuteTransitionRequest:(id)arg1;	// IMP=0x000000000000a0a7
- (id)_transactionForTransitionRequest:(id)arg1;	// IMP=0x0000000000115329
- (_Bool)executeTransitionRequest:(id)arg1 withValidator:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b238e
- (_Bool)executeTransitionRequest:(id)arg1;	// IMP=0x00000000001152f7
- (_Bool)requestTransitionWithOptions:(unsigned long long)arg1 builder:(CDUnknownBlockType)arg2 validator:(CDUnknownBlockType)arg3;	// IMP=0x000000000000915c
- (_Bool)requestTransitionWithBuilder:(CDUnknownBlockType)arg1;	// IMP=0x000000000007ace5
- (id)createRequestForApplicationActivation:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000000b5a8a
- (id)createRequestWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000009230
- (void)_addStateCaptureHandlers;	// IMP=0x0000000000115028
@property(readonly, copy) NSString *debugDescription;
- (void)dealloc;	// IMP=0x0000000000114bc0
- (id)initWithEventQueue:(id)arg1;	// IMP=0x0000000000114b37
- (id)init;	// IMP=0x0000000000114420

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

