//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SpringBoard/SBIdleTimerCoordinating-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>
#import <SpringBoard/SBSuspendedUnderLockManagerDelegate-Protocol.h>

@class FBSSceneClientSettingsDiffInspector, NSArray, NSHashTable, NSMutableDictionary, NSMutableSet, NSString, SBFaceContactExpectationManager, SBMainDisplayLayoutState, SBMainDisplayLayoutStateManager, SBMainDisplayPolicyAggregator, SBMainDisplaySceneLayoutViewController, SBMedusaHostedKeyboardWindow, SBSuspendedUnderLockManager, UIApplicationSceneClientSettingsDiffInspector, UIWindow;
@protocol BSInvalidatable, SBIdleTimerCoordinating;

@interface SBMainDisplaySceneManager <SBIdleTimerCoordinating, SBSuspendedUnderLockManagerDelegate, SBIdleTimerProviding>
{
    SBMainDisplayPolicyAggregator *_policyAggregator;	// 8 = 0x8
    UIApplicationSceneClientSettingsDiffInspector *_internalClientSettingsDiffInspector;	// 16 = 0x10
    UIApplicationSceneClientSettingsDiffInspector *_appClientSettingsDiffInspector;	// 24 = 0x18
    FBSSceneClientSettingsDiffInspector *_externalClientSettingsDiffInspector;	// 32 = 0x20
    FBSSceneClientSettingsDiffInspector *_keyboardLayersClientSettingsDiffInspector;	// 40 = 0x28
    long long _validInterfaceOrientation;	// 48 = 0x30
    unsigned long long _validInterfaceOrientationChangeCount;	// 56 = 0x38
    unsigned long long _processedValidInterfaceOrientationChangeCount;	// 64 = 0x40
    SBFaceContactExpectationManager *_faceContactExpectationManager;	// 72 = 0x48
    SBMedusaHostedKeyboardWindow *_medusaHostedKeyboardWindow;	// 80 = 0x50
    NSMutableSet *_requiredContextIdentifiersForMedusaDraggingDestination;	// 88 = 0x58
    _Bool _didAddSceneLayoutViewControllerWindowContextIdentifier;	// 96 = 0x60
    SBSuspendedUnderLockManager *_lazy_suspendedUnderLockManager;	// 104 = 0x68
    NSHashTable *_preventAdditionalMedusaSnapshotsAssertions;	// 112 = 0x70
    NSMutableDictionary *_sceneIdentifierToIgnoreSuspendedUnderLockAssertions;	// 120 = 0x78
    id <BSInvalidatable> stateCaptureInvalidatable;	// 128 = 0x80
    _Bool _isKeyboardDocked;	// 136 = 0x88
    _Bool _isUsingMedusaHostedKeyboardWindow;	// 137 = 0x89
    id <SBIdleTimerCoordinating> _idleTimerCoordinator;	// 144 = 0x90
}

+ (Class)_sceneLayoutWindowClass;	// IMP=0x00000000005d1d5c
+ (Class)_applicationSceneHandleClass;	// IMP=0x000000000004f3d4
+ (Class)_layoutStateManagerClass;	// IMP=0x00000000005cf782
- (void).cxx_destruct;	// IMP=0x00000000005d9d8f
@property(readonly, nonatomic, getter=_isUsingMedusaHostedKeyboardWindow) _Bool _isUsingMedusaHostedKeyboardWindow; // @synthesize _isUsingMedusaHostedKeyboardWindow;
@property(readonly, nonatomic) UIWindow *_medusaHostedKeyboardWindow; // @synthesize _medusaHostedKeyboardWindow;
@property(nonatomic) __weak id <SBIdleTimerCoordinating> idleTimerCoordinator; // @synthesize idleTimerCoordinator=_idleTimerCoordinator;
- (void)_userInterfaceStyleArbiterStyleChanged:(id)arg1;	// IMP=0x00000000005d9452
@property(readonly, nonatomic) _Bool hasIdleTimerBehaviors;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;	// IMP=0x000000000003b630
- (id)idleTimerProvider:(id)arg1 didProposeBehavior:(id)arg2 forReason:(id)arg3;	// IMP=0x00000000005d91d1
- (id)_proposeIdleTimerBehaviorForReason:(id)arg1;	// IMP=0x000000000006bc6a
- (void)_updateLevelAndBackgroundSettingsForScene:(id)arg1 transitionContext:(id)arg2;	// IMP=0x000000000007446a
- (void)_updateMedusaHostedKeyboardWindowForScene:(id)arg1 isForeground:(_Bool *)arg2;	// IMP=0x00000000005d85ce
- (void)_updateMedusaHostedKeyboardWindow;	// IMP=0x00000000005d8548
- (id)newMedusaHostedKeyboardWindowLevelAssertionWithPriority:(unsigned long long)arg1 windowLevel:(double)arg2;	// IMP=0x00000000005d852b
@property(readonly, nonatomic, getter=_isKeyboardVisibleForSpringBoard) _Bool _isKeyboardVisibleForSpringBoard;
- (void)_updateValidInterfaceOrientationForTransitionContext:(id)arg1;	// IMP=0x00000000005d7ff8
- (void)_updateDeviceOrientation:(long long)arg1 ifNeededForScene:(id)arg2;	// IMP=0x000000000004fa63
- (_Bool)_anyExternalForegroundApplicationScenesHasDynamicSupportedInterfaceOrientations;	// IMP=0x00000000005d7f1b
- (_Bool)_animateGeometryChangesForExternalForegroundApplicationScenes;	// IMP=0x0000000000008f16
- (_Bool)__shouldRotateToInterfaceOrientation:(long long)arg1;	// IMP=0x00000000005d7e48
- (void)_updateExternalForegroundApplicationScenesToInterfaceOrientation:(long long)arg1 force:(_Bool)arg2 prefersTouchCancellationDisabled:(_Bool)arg3 addDefaultAnimationSettings:(_Bool)arg4 customAnimationSettings:(id)arg5 validator:(CDUnknownBlockType)arg6;	// IMP=0x00000000005d73fd
- (void)_attemptAutorotationOfExternalForegroundApplicationScenesToInterfaceOrientation:(long long)arg1;	// IMP=0x00000000005d71a0
- (void)_updateExternalForegroundApplicationScenesToDeviceOrientation:(long long)arg1;	// IMP=0x00000000005d6e22
- (void)_deviceOrientationChanged:(id)arg1;	// IMP=0x0000000000008d08
- (void)_application:(id)arg1 initiatedChangefromInterfaceOrientation:(long long)arg2 toInterfaceOrientation:(long long)arg3 scene:(id)arg4 sceneSettings:(id)arg5 transitionContext:(id)arg6;	// IMP=0x00000000005d6259
- (void)_keyboardWillChangeFrame:(id)arg1;	// IMP=0x00000000005d6109
- (id)_externalClientSettingsDiffInspector;	// IMP=0x0000000000076b67
- (id)_appClientSettingsDiffInspector;	// IMP=0x0000000000042000
- (id)_internalClientSettingsDiffInspector;	// IMP=0x0000000000043e68
- (id)_keyboardLayersClientSettingsDiffInspector;	// IMP=0x00000000005d3832
- (_Bool)_isExternalForegroundScene:(id)arg1;	// IMP=0x0000000000041830
- (void)_removeMedusaDraggingDestinationWindow:(id)arg1;	// IMP=0x00000000005d376f
- (void)_addMedusaDraggingDestinationWindow:(id)arg1;	// IMP=0x00000000005d36ac
- (id)_activeAndVisibleSceneIdentifiersForApplication:(id)arg1;	// IMP=0x00000000005d3436
@property(readonly, nonatomic) NSArray *_requiredContextIdentifiersForMedusaDraggingDestination;
- (id)_sceneIdentifierForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x00000000005d33e3
- (id)_newSceneIdentifierForBundleIdentifier:(id)arg1 supportsMultiwindow:(_Bool)arg2;	// IMP=0x00000000005d332c
- (id)_newSceneIdentifierForBundleIdentifier:(id)arg1;	// IMP=0x00000000005d325d
- (id)_identifierForApplication:(id)arg1;	// IMP=0x00000000005d3248
- (id)newSceneIdentityForApplication:(id)arg1;	// IMP=0x00000000005d3131
- (id)_sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2 targetContentIdentifier:(id)arg3 allowCanMatches:(_Bool)arg4 preferNewScene:(_Bool)arg5 visibleIdentifiers:(id)arg6 excludingIdentifiers:(id)arg7 sceneSessionRole:(id)arg8;	// IMP=0x00000000005d264f
- (id)_sceneIdentityForApplication:(id)arg1 createPrimaryIfRequired:(_Bool)arg2 sceneSessionRole:(id)arg3;	// IMP=0x00000000005d226f
- (id)sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2 targetContentIdentifier:(id)arg3 sceneSessionRole:(id)arg4;	// IMP=0x00000000005d223a
- (id)sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2 targetContentIdentifier:(id)arg3;	// IMP=0x00000000005d21fb
- (id)sceneIdentityForApplication:(id)arg1 targetContentIdentifier:(id)arg2 allowCanMatches:(_Bool)arg3 preferNewScene:(_Bool)arg4 visibleIdentifiers:(id)arg5;	// IMP=0x00000000005d21c9
- (id)sceneIdentityForApplication:(id)arg1 targetContentIdentifier:(id)arg2;	// IMP=0x00000000005d2185
- (id)sceneIdentityForApplication:(id)arg1 excludingIdentifiers:(id)arg2;	// IMP=0x00000000005d2151
- (id)sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2;	// IMP=0x00000000005d210f
- (id)sceneIdentityForApplication:(id)arg1;	// IMP=0x0000000000040f8c
- (id)fetchOrCreateApplicationSceneHandleForRequest:(id)arg1;	// IMP=0x00000000005d20d1
- (_Bool)suspendedUnderLockManager:(id)arg1 shouldPreventSuspendUnderLockForScene:(id)arg2;	// IMP=0x00000000005d2041
- (id)suspendedUnderLockManagerVisibleScenes:(id)arg1;	// IMP=0x00000000005d1f5f
- (id)runningApplicationScenes:(id)arg1;	// IMP=0x00000000005d1f4d
- (id)suspendedUnderLockManager:(id)arg1 sceneHandleForScene:(id)arg2;	// IMP=0x00000000005d1f38
- (id)suspendedUnderLockManagerDisplayConfiguration:(id)arg1;	// IMP=0x00000000005d1ee8
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;	// IMP=0x00000000005d1d6d
- (_Bool)_shouldRequestSnapshotActionsForScene:(id)arg1;	// IMP=0x0000000000032581
- (void)_noteDidCommitUpdateForScene:(id)arg1;	// IMP=0x0000000000043f73
- (void)_noteDidChangeToVisibility:(unsigned long long)arg1 previouslyExisted:(_Bool)arg2 forScene:(id)arg3;	// IMP=0x000000000006b58a
- (id)_newSceneLayoutViewController;	// IMP=0x00000000005d1d2e
- (_Bool)_shouldFenceTransitionForScene:(id)arg1 updatedClientSettingsDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;	// IMP=0x0000000000041680
- (void)_scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;	// IMP=0x000000000004199f
- (void)_scene:(id)arg1 willUpdateWithSettings:(id)arg2 transitionContext:(id)arg3;	// IMP=0x00000000000321ab
- (void)_scene:(id)arg1 interceptUpdateWithNewSettings:(id)arg2;	// IMP=0x00000000005d1c81
- (id)_snapshotRequestsForSceneHandle:(id)arg1 settings:(id)arg2;	// IMP=0x00000000000724e2
- (_Bool)_handleAction:(id)arg1 forScene:(id)arg2;	// IMP=0x000000000007762f
- (_Bool)_shouldTrackScenesForDeactivation;	// IMP=0x00000000005d1a31
- (_Bool)_shouldAutoHostScene:(id)arg1;	// IMP=0x00000000005d196c
- (id)_createRootWindowScenePresentationBinder;	// IMP=0x00000000005d1953
- (id)acquireIgnoreSuspendedUnderLockAssertionForSceneIdentifier:(id)arg1 reason:(id)arg2;	// IMP=0x00000000005d1681
- (id)preventTakingAdditionalMedusaSnapshotsForBackgroundingScenesWithReason:(id)arg1;	// IMP=0x00000000005d1472
- (void)createSceneForApplication:(id)arg1 withOptions:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000005cff6c
- (void)setSuspendedUnderLock:(_Bool)arg1 alongsideWillChangeBlock:(CDUnknownBlockType)arg2 alongsideDidChangeBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000005cfe59
@property(nonatomic, getter=isSuspendedUnderLock) _Bool suspendedUnderLock;
- (void)removeObserver:(id)arg1;	// IMP=0x00000000005cfde7
- (void)addObserver:(id)arg1;	// IMP=0x00000000005cfdb8
- (id)existingSceneHandleForPersistenceIdentifier:(id)arg1;	// IMP=0x00000000005cfd71
- (id)existingSceneHandleForSceneIdentity:(id)arg1;	// IMP=0x0000000000032024
- (id)existingSceneHandleForScene:(id)arg1;	// IMP=0x0000000000031f5a
- (id)externalForegroundApplicationSceneHandles;	// IMP=0x0000000000008f60
- (id)externalApplicationSceneHandles;	// IMP=0x00000000005cfd33
@property(readonly, nonatomic) SBMainDisplayPolicyAggregator *policyAggregator;
- (void)dealloc;	// IMP=0x00000000005cfc73
- (id)initWithReference:(id)arg1;	// IMP=0x00000000005cf793

// Remaining properties
@property(readonly, nonatomic) SBMainDisplayLayoutStateManager *_layoutStateManager; // @dynamic _layoutStateManager;
@property(readonly, nonatomic) SBMainDisplayLayoutState *currentLayoutState; // @dynamic currentLayoutState;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SBMainDisplaySceneLayoutViewController *sceneLayoutViewController; // @dynamic sceneLayoutViewController;
@property(readonly) Class superclass;

@end

