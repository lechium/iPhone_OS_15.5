//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoard/BSDescriptionProviding-Protocol.h>
#import <SpringBoard/CSWallpaperOverlayHosting-Protocol.h>
#import <SpringBoard/SBFLegibilitySettingsProviderDelegate-Protocol.h>
#import <SpringBoard/SBFWallpaperViewDelegate-Protocol.h>
#import <SpringBoard/SBFWallpaperViewInternalObserver-Protocol.h>
#import <SpringBoard/SBUIActiveOrientationObserver-Protocol.h>
#import <SpringBoard/SBWWallpaperLegibilityProviding-Protocol.h>
#import <SpringBoard/SBWWallpaperPresenting-Protocol.h>
#import <SpringBoard/SBWWallpaperPresentingDelegate-Protocol.h>
#import <SpringBoard/SBWallpaperReachabilityCoordinating-Protocol.h>
#import <SpringBoard/SBWallpaperServerDelegate-Protocol.h>
#import <SpringBoard/UIWindowDelegate-Protocol.h>
#import <SpringBoard/_UISettingsKeyObserver-Protocol.h>

@class NSMapTable, NSMutableSet, NSString, PTSingleTestRecipe, SBFWallpaperConfigurationManager, SBFWallpaperCoreAnalyticsLogger, SBWWallpaperViewController, SBWallpaperAggdLogger, UIGestureRecognizer, UIScreen, UITraitCollection, UIView, UIWindow;
@protocol BSInvalidatable, SBFIrisWallpaperPlaying, SBUIWallpaperOverlay, SBWWallpaperLegibilityProviding, SBWWallpaperPresenting, SBWWallpaperPresentingDelegate;

@interface SBWallpaperController : NSObject <SBFLegibilitySettingsProviderDelegate, SBFWallpaperViewInternalObserver, SBUIActiveOrientationObserver, _UISettingsKeyObserver, SBWWallpaperPresentingDelegate, SBWallpaperReachabilityCoordinating, BSDescriptionProviding, SBWallpaperServerDelegate, SBFWallpaperViewDelegate, UIWindowDelegate, CSWallpaperOverlayHosting, SBWWallpaperPresenting, SBWWallpaperLegibilityProviding>
{
    UIWindow *_wallpaperWindow;	// 8 = 0x8
    UIView *_wallpaperContainerView;	// 16 = 0x10
    UIView *_wallpaperOverlayContainerView;	// 24 = 0x18
    long long _orientation;	// 32 = 0x20
    long long _displayedVariant;	// 40 = 0x28
    UIView<SBUIWallpaperOverlay> *_wallpaperOverlay;	// 48 = 0x30
    NSMutableSet *_activeOrientationSources;	// 56 = 0x38
    NSMapTable *_orientationProviders;	// 64 = 0x40
    PTSingleTestRecipe *_migrationTestRecipe;	// 72 = 0x48
    PTSingleTestRecipe *_reloadTestRecipe;	// 80 = 0x50
    SBWWallpaperViewController *_wallpaperViewController;	// 88 = 0x58
    id <SBWWallpaperPresenting> _wallpaperPresenter;	// 96 = 0x60
    id <SBWWallpaperLegibilityProviding> _wallpaperLegibilityProvider;	// 104 = 0x68
    id <SBWWallpaperPresentingDelegate> _wallpaperPresentingDelegate;	// 112 = 0x70
    UIScreen *_screen;	// 120 = 0x78
    NSString *_cachingIdentifier;	// 128 = 0x80
    SBFWallpaperConfigurationManager *_wallpaperConfigurationManager;	// 136 = 0x88
    SBWallpaperAggdLogger *_wallpaperAggdLogger;	// 144 = 0x90
    SBFWallpaperCoreAnalyticsLogger *_wallpaperCoreAnalyticsLogger;	// 152 = 0x98
    UITraitCollection *_fakeBlurViewOverrideTraitCollection;	// 160 = 0xa0
    id <BSInvalidatable> _batterySaverAnimationAssertion;	// 168 = 0xa8
    id <BSInvalidatable> _wallpaperStyleAnimationAssertion;	// 176 = 0xb0
}

+ (id)accessAuthenticator;	// IMP=0x0000000000398bfd
+ (id)sharedInstance;	// IMP=0x00000000000201f8
- (void).cxx_destruct;	// IMP=0x000000000039bcd7
@property(retain, nonatomic) id <BSInvalidatable> wallpaperStyleAnimationAssertion; // @synthesize wallpaperStyleAnimationAssertion=_wallpaperStyleAnimationAssertion;
@property(retain, nonatomic) id <BSInvalidatable> batterySaverAnimationAssertion; // @synthesize batterySaverAnimationAssertion=_batterySaverAnimationAssertion;
@property(retain, nonatomic) UITraitCollection *fakeBlurViewOverrideTraitCollection; // @synthesize fakeBlurViewOverrideTraitCollection=_fakeBlurViewOverrideTraitCollection;
@property(retain, nonatomic) SBFWallpaperCoreAnalyticsLogger *wallpaperCoreAnalyticsLogger; // @synthesize wallpaperCoreAnalyticsLogger=_wallpaperCoreAnalyticsLogger;
@property(retain, nonatomic) SBWallpaperAggdLogger *wallpaperAggdLogger; // @synthesize wallpaperAggdLogger=_wallpaperAggdLogger;
@property(readonly, nonatomic) SBFWallpaperConfigurationManager *wallpaperConfigurationManager; // @synthesize wallpaperConfigurationManager=_wallpaperConfigurationManager;
@property(readonly, copy, nonatomic) NSString *cachingIdentifier; // @synthesize cachingIdentifier=_cachingIdentifier;
@property(readonly, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property(readonly, nonatomic, getter=_WallpaperOrientationNotForYou) long long _orientation; // @synthesize _orientation;
@property(nonatomic) __weak id <SBWWallpaperPresentingDelegate> wallpaperPresentingDelegate; // @synthesize wallpaperPresentingDelegate=_wallpaperPresentingDelegate;
@property(readonly, nonatomic) id <SBWWallpaperLegibilityProviding> legibilityProvider; // @synthesize legibilityProvider=_wallpaperLegibilityProvider;
@property(readonly, nonatomic) id <SBWWallpaperPresenting> presenter; // @synthesize presenter=_wallpaperPresenter;
- (id)relinquishHostingOfWallpaperOverlay;	// IMP=0x000000000039bbad
- (void)startHostingWallpaperOverlay:(id)arg1;	// IMP=0x000000000039ba5f
@property(readonly, nonatomic) double effectiveReachabilityYOffset;
- (_Bool)isWindowIgnoredForReachability:(id)arg1;	// IMP=0x000000000039b96f
- (void)removeReachabilityObserver:(id)arg1;	// IMP=0x000000000039b8f9
- (void)addReachabilityObserver:(id)arg1;	// IMP=0x000000000039b883
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;	// IMP=0x000000000039b87d
- (void)wallpaperServer:(id)arg1 acquireActiveWallpaperSceneAssertionWithAction:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000039b6dc
- (void)wallpaperServer:(id)arg1 restoreDefaultWallpaperWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000039b5de
- (void)wallpaperServer:(id)arg1 setWallpaperGradient:(id)arg2 forVariants:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000039b4a9
- (void)wallpaperServer:(id)arg1 setWallpaperColor:(id)arg2 darkColor:(id)arg3 forVariants:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000039b26c
- (void)wallpaperServer:(id)arg1 setWallpaperColorName:(id)arg2 forVariants:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000039b137
- (void)wallpaperServer:(id)arg1 setWallpaperVideoWithWallpaperMode:(id)arg2 cropRect:(struct CGRect)arg3 wallpaperMode:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000039af85
- (void)wallpaperServer:(id)arg1 fetchContentCutoutBoundsForVariant:(long long)arg2 orientation:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000039ae90
- (void)wallpaperServer:(id)arg1 fetchOriginalVideoURLDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000039ad31
- (void)wallpaperServer:(id)arg1 fetchOriginalImageDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000039abd6
- (void)wallpaperServer:(id)arg1 fetchThumbnailDataForVariant:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000039aa9c
- (id)wallpaperView:(id)arg1 wallpaperConfigurationIncludingValueTypes:(unsigned long long)arg2;	// IMP=0x000000000039aa38
- (void)wallpaperViewDidChangeWantsRasterization:(id)arg1;	// IMP=0x000000000039aa32
- (void)wallpaperView:(id)arg1 didChangeZoomFactor:(double)arg2;	// IMP=0x0000000000066f4c
- (void)wallpaperViewDidInvalidateBlurs:(id)arg1;	// IMP=0x000000000039aa2a
- (void)providerLegibilitySettingsChanged:(id)arg1;	// IMP=0x000000000039aa24
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(long long)arg3;	// IMP=0x0000000000030be3
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)arg1;	// IMP=0x000000000002ea09
- (void)_forceUpdateToSpringBoardInterfaceOrientationWithAnimationDuration:(double)arg1;	// IMP=0x000000000039a869
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;	// IMP=0x000000000006ab88
- (void)orientationSource:(long long)arg1 didRotateFromInterfaceOrientation:(long long)arg2;	// IMP=0x00000000000bf708
- (void)orientationSource:(long long)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;	// IMP=0x00000000000be90d
- (void)orientationSource:(long long)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;	// IMP=0x00000000000be147
- (void)setOrientationProvider:(id)arg1 forSource:(long long)arg2;	// IMP=0x000000000039a7b0
- (long long)defaultInterfaceOrientationForSource:(long long)arg1;	// IMP=0x000000000006081f
- (void)updateOrientationAfterSourceChange;	// IMP=0x000000000006064b
- (_Bool)_isAcceptingOrientationChangesFromSource:(long long)arg1;	// IMP=0x00000000000607fc
- (void)deactivateOrientationSource:(long long)arg1;	// IMP=0x00000000000208b0
- (void)activateOrientationSource:(long long)arg1;	// IMP=0x000000000006a9db
@property(readonly, nonatomic) long long activeOrientationSource;
- (void)_noteSignificantTimeChanged:(id)arg1;	// IMP=0x000000000039a6b4
- (void)_saveWallpaperAggdKeysForLocations:(long long)arg1 withConfiguration:(id)arg2;	// IMP=0x000000000039a5be
- (void)_saveWallpaperCoreAnalyticsForLocations:(long long)arg1 withConfiguration:(id)arg2;	// IMP=0x000000000039a48e
- (void)wallpaperPresenterDidCompleteWallpaperChange:(id)arg1;	// IMP=0x000000000039a40c
- (long long)wallpaperPresenter:(id)arg1 requestsOrientationWithRefresh:(_Bool)arg2;	// IMP=0x000000000039a3e4
- (void)wallpaperPresenter:(id)arg1 didChangeWallpaperForLocations:(long long)arg2 withConfiguration:(id)arg3;	// IMP=0x000000000039a350
- (id)activeInterfaceOrientationSourcesDescriptions;	// IMP=0x000000000039a190
- (id)succinctDescriptionBuilder;	// IMP=0x000000000039a174
- (id)succinctDescription;	// IMP=0x000000000039a124
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x0000000000399f7d
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x0000000000399f2d
@property(readonly, copy) NSString *description;
- (void)_reloadWallpaperAndFlushCaches:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000399d11
- (void)cancelInProcessAnimations;	// IMP=0x0000000000084eb3
- (void)preheatWallpaperForVariant:(long long)arg1;	// IMP=0x00000000000ae769
- (id)_wallpaperViewForVariant:(long long)arg1;	// IMP=0x00000000000608db
- (void)_updateScreenBlanked;	// IMP=0x00000000000c8a0a
- (void)_motionEffectsChanged;	// IMP=0x0000000000399cd1
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 wallpaperMode:(long long)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000399cb9
- (void)_updateWallpaperForLocations:(long long)arg1 options:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000399ca4
- (void)_applicationDidFinishLaunching:(id)arg1;	// IMP=0x0000000000399c92
- (void)_batterySaverModeChanged:(id)arg1;	// IMP=0x0000000000399aeb
- (id)_window;	// IMP=0x0000000000084ec9
- (void)updateWallpaperForLocations:(long long)arg1 wallpaperMode:(long long)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000399ad3
- (void)updateWallpaperForLocations:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000399abd
- (id)newFakeBlurViewForVariant:(long long)arg1 style:(long long)arg2 transformOptions:(unsigned long long)arg3;	// IMP=0x0000000000399aa7
- (void)setWallpaperHidden:(_Bool)arg1 variant:(long long)arg2 reason:(id)arg3;	// IMP=0x0000000000399a91
- (void)setDisallowsRasterization:(_Bool)arg1 forVariant:(long long)arg2 withReason:(id)arg3;	// IMP=0x0000000000399a7b
- (double)contrastForVariant:(long long)arg1;	// IMP=0x0000000000399a65
- (double)contrastInRect:(struct CGRect)arg1 forVariant:(long long)arg2;	// IMP=0x0000000000399a4f
- (id)averageColorInRect:(struct CGRect)arg1 forVariant:(long long)arg2 withSmudgeRadius:(double)arg3;	// IMP=0x00000000000bec85
- (id)averageColorInRect:(struct CGRect)arg1 forVariant:(long long)arg2;	// IMP=0x00000000000bec6f
- (id)averageColorForVariant:(long long)arg1;	// IMP=0x0000000000089e45
- (id)legibilitySettingsForVariant:(long long)arg1;	// IMP=0x00000000000605b3
@property(readonly, nonatomic) UIGestureRecognizer *wallpaperGestureRecognizer;
@property(readonly, nonatomic) id <SBFIrisWallpaperPlaying> irisWallpaperPlayer;
- (id)suspendWallpaperAnimationForReason:(id)arg1;	// IMP=0x000000000008689f
- (id)suspendColorSamplingForReason:(id)arg1;	// IMP=0x00000000000792ad
- (void)removeObserver:(id)arg1 forVariant:(long long)arg2;	// IMP=0x000000000006f1bb
- (void)addObserver:(id)arg1 forVariant:(long long)arg2;	// IMP=0x00000000000605c9
- (void)endDelayingHomescreenStyleChangesForReason:(id)arg1 animationFactory:(id)arg2;	// IMP=0x00000000003999cf
- (void)beginDelayingHomescreenStyleChangesForReason:(id)arg1;	// IMP=0x00000000003999b9
- (id)beginRequiringWithReason:(id)arg1;	// IMP=0x0000000000065023
- (_Bool)removeWallpaperStyleForPriority:(long long)arg1 forVariant:(long long)arg2 withAnimationFactory:(id)arg3;	// IMP=0x0000000000065039
- (_Bool)setWallpaperStyleTransitionState:(CDStruct_8ff95007)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;	// IMP=0x0000000000048427
- (_Bool)setWallpaperStyle:(long long)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3 withAnimationFactory:(id)arg4;	// IMP=0x0000000000048411
@property(readonly, nonatomic) CDStruct_8ff95007 currentHomescreenStyleTransitionState;
- (void)setLockscreenOnlyWallpaperAlpha:(double)arg1;	// IMP=0x0000000000399968
@property(readonly, nonatomic) double minimumLockscreenWallpaperScale;
- (void)setLockscreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;	// IMP=0x000000000039993c
@property(nonatomic) double lockscreenWallpaperScale;
@property(readonly, nonatomic) double minimumHomescreenWallpaperScale;
- (id)setHomescreenWallpaperScale:(double)arg1 withAnimationFactory:(id)arg2;	// IMP=0x0000000000027d8c
@property(readonly, nonatomic) double homescreenWallpaperScale;
@property(nonatomic) double windowLevel;
- (void)setLockscreenWallpaperContentsRect:(struct CGRect)arg1;	// IMP=0x00000000003998b4
- (void)updateIrisWallpaperForInteractiveMode;	// IMP=0x000000000039989e
- (_Bool)updateIrisWallpaperForStaticMode;	// IMP=0x0000000000399888
- (void)setAlpha:(double)arg1 forWallpaperVariant:(long long)arg2;	// IMP=0x0000000000399872
- (void)setVariant:(long long)arg1 withOutAnimationFactory:(id)arg2 inAnimationFactory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000909fc
@property(nonatomic) long long variant;
- (void)dealloc;	// IMP=0x00000000003997e4
- (id)init;	// IMP=0x0000000000399751
- (id)initWithWallpaperConfigurationManager:(id)arg1 cachingIdentifier:(id)arg2;	// IMP=0x00000000003996ac
- (id)initWithWallpaperConfigurationManager:(id)arg1;	// IMP=0x0000000000399615
- (id)initWithScreen:(id)arg1 orientation:(long long)arg2 variant:(long long)arg3 wallpaperConfigurationManager:(id)arg4 cachingIdentifier:(id)arg5;	// IMP=0x0000000000398c71

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

