//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <SpringBoard/PTSettingsKeyObserver-Protocol.h>
#import <SpringBoard/SBHUDViewControlling-Protocol.h>
#import <SpringBoard/UIGestureRecognizerDelegate-Protocol.h>

@class CCUIContinuousSliderView, NSArray, NSDate, NSMutableArray, NSMutableOrderedSet, NSString, NSTimer, SBElasticHUDSettings, SBElasticSliderMaterialWrapperView, SBFTouchPassThroughView, SBUIViewFloatSpringProperty, UIButton, UILabel, UILongPressGestureRecognizer, UIPanGestureRecognizer, UISegmentedControl, UISlider, UISwitch, UIView, _UIEdgeFeedbackGenerator, _UIFeedback, _UIFeedbackEngine, _UILegibilityLabel;
@protocol SBElasticGlyphView, SBElasticRouteDisplaying, SBElasticValueDataSource, SBElasticValueViewControllerDelegate;

@interface SBElasticValueViewController : UIViewController <UIGestureRecognizerDelegate, PTSettingsKeyObserver, SBHUDViewControlling>
{
    SBFTouchPassThroughView *_sliderContainerView;	// 8 = 0x8
    SBElasticSliderMaterialWrapperView *_sliderWrapperView;	// 16 = 0x10
    long long _previousState;	// 24 = 0x18
    long long _state;	// 32 = 0x20
    SBFTouchPassThroughView *_labelContainerView;	// 40 = 0x28
    _UILegibilityLabel *_leadingLabel;	// 48 = 0x30
    _UILegibilityLabel *_trailingLabel;	// 56 = 0x38
    UIView *_touchTrackingView;	// 64 = 0x40
    UIView *_dimmingView;	// 72 = 0x48
    double _startingValue;	// 80 = 0x50
    UIPanGestureRecognizer *_sliderViewPanGestureRecognizer;	// 88 = 0x58
    UILongPressGestureRecognizer *_shortLongPressGestureRecognizer;	// 96 = 0x60
    _UIEdgeFeedbackGenerator *_edgeFeedbackGenerator;	// 104 = 0x68
    unsigned long long _sliderTrackingCount;	// 112 = 0x70
    NSTimer *_dismissalTimer;	// 120 = 0x78
    NSTimer *_sliderApplyValueTimer;	// 128 = 0x80
    NSMutableOrderedSet *_sliderApplyValueQueue;	// 136 = 0x88
    _Bool _initialTransitionCompleted;	// 144 = 0x90
    _Bool _lockState;	// 145 = 0x91
    _Bool _isDebugging;	// 146 = 0x92
    _Bool _isRotating;	// 147 = 0x93
    _Bool _isDeflating;	// 148 = 0x94
    _Bool _startingDismissal;	// 149 = 0x95
    _Bool _reduceMotionEnabled;	// 150 = 0x96
    UIView *_debugContainerView;	// 152 = 0x98
    UILabel *_debugLabel;	// 160 = 0xa0
    UISegmentedControl *_debugStateSegmentedControl;	// 168 = 0xa8
    UILabel *_debugAutoDismissLabel;	// 176 = 0xb0
    UISwitch *_debugAutoDismissalSwitch;	// 184 = 0xb8
    UILabel *_debugLockStateLabel;	// 192 = 0xc0
    UISwitch *_debugLockStateSwitch;	// 200 = 0xc8
    UISlider *_debugWidthSlider;	// 208 = 0xd0
    UISlider *_debugHeightSlider;	// 216 = 0xd8
    UISlider *_debugPortraitYOriginSlider;	// 224 = 0xe0
    UIButton *_debugDumpButton;	// 232 = 0xe8
    UIButton *_debugNextAudioRouteButton;	// 240 = 0xf0
    UIButton *_debugResetAudioRouteButton;	// 248 = 0xf8
    NSDate *_volumeUpLastHitDate;	// 256 = 0x100
    NSDate *_volumeDownLastHitDate;	// 264 = 0x108
    NSMutableArray *_runningListOfVolumesUpdates;	// 272 = 0x110
    unsigned long long _tickFeedbackIntervalCycleCounter;	// 280 = 0x118
    _UIFeedbackEngine *_tickVolumeFeedbackEngine;	// 288 = 0x120
    _UIFeedbackEngine *_edgeVolumeFeedbackEngine;	// 296 = 0x128
    _UIFeedback *_tickVolumeFeedback;	// 304 = 0x130
    _UIFeedback *_edgeVolumeFeedback;	// 312 = 0x138
    id <SBElasticRouteDisplaying> _routeDisplayInfo;	// 320 = 0x140
    NSArray *_debugAutolayoutConstraints;	// 328 = 0x148
    SBUIViewFloatSpringProperty *_positionXSpring;	// 336 = 0x150
    SBUIViewFloatSpringProperty *_positionYSpring;	// 344 = 0x158
    SBUIViewFloatSpringProperty *_scaleSpring;	// 352 = 0x160
    SBUIViewFloatSpringProperty *_minMaxScaleXSpring;	// 360 = 0x168
    SBUIViewFloatSpringProperty *_minMaxScaleYSpring;	// 368 = 0x170
    _Bool _volumeUpButtonIsDown;	// 376 = 0x178
    _Bool _volumeDownButtonIsDown;	// 377 = 0x179
    unsigned long long _axis;	// 384 = 0x180
    id <SBElasticValueDataSource> _dataSource;	// 392 = 0x188
    id <SBElasticValueViewControllerDelegate> _delegate;	// 400 = 0x190
    SBElasticHUDSettings *_settings;	// 408 = 0x198
    CCUIContinuousSliderView<SBElasticGlyphView> *_sliderView;	// 416 = 0x1a0
}

- (void).cxx_destruct;	// IMP=0x00000000002fd4b6
@property(readonly, nonatomic) CCUIContinuousSliderView<SBElasticGlyphView> *sliderView; // @synthesize sliderView=_sliderView;
@property(readonly, nonatomic) _Bool volumeDownButtonIsDown; // @synthesize volumeDownButtonIsDown=_volumeDownButtonIsDown;
@property(readonly, nonatomic) _Bool volumeUpButtonIsDown; // @synthesize volumeUpButtonIsDown=_volumeUpButtonIsDown;
@property(readonly, nonatomic) SBElasticHUDSettings *settings; // @synthesize settings=_settings;
@property(nonatomic) __weak id <SBElasticValueViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak id <SBElasticValueDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (unsigned long long)_updateVolumeLevelSlider:(float)arg1 animated:(_Bool)arg2;	// IMP=0x00000000002fcfb4
- (void)_modifySpringsFromState:(long long)arg1 toState:(long long)arg2;	// IMP=0x00000000002fcc05
- (void)_updateForAxisChange:(unsigned long long)arg1;	// IMP=0x00000000002fcb9b
- (void)_updateDebugUIPositions;	// IMP=0x00000000002fca55
- (void)_updateTouchTrackingView;	// IMP=0x00000000002fc890
- (void)_updateSliderViewToCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2 integralized:(_Bool)arg3 continuousCornerRadius:(double *)arg4;	// IMP=0x00000000002fc7a8
- (void)_updateSliderViewMetricsForState:(long long)arg1 bounds:(struct CGRect)arg2 integralized:(_Bool)arg3 useSizeSpringData:(_Bool)arg4 useCenterSpringData:(_Bool)arg5;	// IMP=0x00000000002fc407
- (void)_updateSliderViewMetricsForState:(long long)arg1 bounds:(struct CGRect)arg2 integralized:(_Bool)arg3 useSpringData:(_Bool)arg4;	// IMP=0x00000000002fc3f2
- (void)_updateDimmingVisible:(_Bool)arg1;	// IMP=0x00000000002fc328
- (void)_updateLabelsForAxis:(unsigned long long)arg1 containerViewSize:(struct CGSize)arg2 state:(long long)arg3 animated:(_Bool)arg4;	// IMP=0x00000000002fb7b1
- (void)_updateGlyphStateIfNecessaryForValue:(float *)arg1;	// IMP=0x00000000002fb70c
- (_Bool)_computeCachedRouteDisplayInformation;	// IMP=0x00000000002fb69d
- (double)cornerRadiusForState:(long long)arg1 useSpringData:(_Bool)arg2;	// IMP=0x00000000002fb5ac
- (double)glyphScaleForState:(long long)arg1;	// IMP=0x00000000002fb4bc
- (struct CGPoint)centerForState:(long long)arg1 containerViewSize:(struct CGSize)arg2 bounds:(struct CGRect)arg3 useSpringData:(_Bool)arg4;	// IMP=0x00000000002fae58
- (struct CGSize)sizeForState:(long long)arg1 useSpringData:(_Bool)arg2;	// IMP=0x00000000002facd1
- (struct CGSize)maximumSizeForSlider;	// IMP=0x00000000002fac67
- (void)_debugDimensionSliderValueDidChange:(id)arg1;	// IMP=0x00000000002faa9e
- (void)_debugLockStateSwitchValueChanged:(id)arg1;	// IMP=0x00000000002fa9e8
- (void)_debugAutoDismissalSwitchValueChanged:(id)arg1;	// IMP=0x00000000002fa901
- (void)_debugChangingStateFromSegmentedControl:(id)arg1;	// IMP=0x00000000002fa8c5
- (void)_debugDidTapResetRoute:(id)arg1;	// IMP=0x00000000002fa897
- (void)_debugDidTapNextRoute:(id)arg1;	// IMP=0x00000000002fa855
- (void)_debugDump:(id)arg1;	// IMP=0x00000000002fa6bb
- (void)_updateDebugString:(id)arg1;	// IMP=0x00000000002fa678
- (void)_refreshDebugUI:(_Bool)arg1;	// IMP=0x00000000002f78da
- (void)_reloadData;	// IMP=0x00000000002f762f
- (void)_updateViewsWithSpringData;	// IMP=0x00000000002f7363
- (void)_destroySprings;	// IMP=0x00000000002f72c0
- (void)_createSprings;	// IMP=0x00000000002f6cfa
- (void)_updateSliderTracking;	// IMP=0x00000000002f6943
- (void)_noteSliderViewDidEndTracking;	// IMP=0x00000000002f67d7
- (void)_noteSliderViewDidBeginTracking;	// IMP=0x00000000002f66e3
@property(readonly, nonatomic) _Bool isSliderTracking;
- (void)_endTrackingWithGestureRecognizer:(id)arg1;	// IMP=0x00000000002f6675
- (void)_continueTrackingWithGestureRecognizer:(id)arg1;	// IMP=0x00000000002f6461
- (void)_beginTrackingWithGestureRecognizer:(id)arg1;	// IMP=0x00000000002f63bc
- (void)_handleShortLongPressGestureRecognizer:(id)arg1;	// IMP=0x00000000002f633c
- (void)_handleSliderViewPanGestureRecognizer:(id)arg1;	// IMP=0x00000000002f62a0
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000002f628b
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000000002f6283
- (void)_resetInputForMajorAxisSpring;	// IMP=0x00000000002f625e
- (void)_forciblyResetMinMaxSprings;	// IMP=0x00000000002f6159
- (void)_clearLastHitDates;	// IMP=0x00000000002f60b9
- (void)_setScaleSpringActiveForVolumeButtonUpdateIfNeeded;	// IMP=0x00000000002f5ff9
- (_Bool)_volumeUpdateIsMinimumOfPotentialVolumeUpdates;	// IMP=0x00000000002f5efc
- (void)_stretchVolumeSliderForMinimumVolumeUpdateIfNeeded;	// IMP=0x00000000002f5dce
- (_Bool)_volumeUpdateIsMaximumOfPotentialVolumeUpdates;	// IMP=0x00000000002f5cd1
- (void)_stretchVolumeSliderForMaximumVolumeUpdateIfNeeded;	// IMP=0x00000000002f5ba7
- (void)_markVolumeUpdateInRunningListOfVolumesUpdates:(double)arg1;	// IMP=0x00000000002f5a75
- (void)_actuallyDismiss;	// IMP=0x00000000002f59d1
- (void)_dismissalTimerFired:(id)arg1;	// IMP=0x00000000002f53b7
- (void)_invalidateDismissalTimerForReason:(id)arg1;	// IMP=0x00000000002f5257
- (void)_scheduleDismissal:(id)arg1;	// IMP=0x00000000002f502a
- (void)_completeDeflatorDismissalSpringAnimation;	// IMP=0x00000000002f4e48
- (void)_beginDeflatorDismissalSpringAnimation;	// IMP=0x00000000002f4c88
- (_Bool)_isStateChangeAllowedFrom:(long long)arg1 toState:(long long)arg2;	// IMP=0x00000000002f49c4
- (void)_animateFromState:(long long)arg1 toState:(long long)arg2 animations:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000002f4956
- (void)transitionToState:(long long)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002f2c2b
- (void)transitionStateContextuallyForVolumeChangeEvent;	// IMP=0x00000000002f2bc4
- (long long)hudPresentationOrientation;	// IMP=0x00000000002f2b37
@property(readonly, nonatomic) unsigned long long axis; // @synthesize axis=_axis;
- (void)_playTickHapticForSteppedVolume:(float)arg1;	// IMP=0x00000000002f2974
- (void)_playMinimumVolumeHaptic;	// IMP=0x00000000002f28a3
- (void)_playMaximumVolumeHaptic;	// IMP=0x00000000002f27cf
- (void)_updateEdgeFeedbackParametersForMaxVolume:(_Bool)arg1;	// IMP=0x00000000002f275f
- (void)_createHapticFeedbackEngines;	// IMP=0x00000000002f2445
- (_Bool)_changeVolumeLevel:(double)arg1;	// IMP=0x00000000002f23e5
- (void)changeVolumeLevel:(double)arg1 animated:(_Bool)arg2;	// IMP=0x00000000002f2331
- (float)currentVolume;	// IMP=0x00000000002f22da
- (void)dismissAnimatedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f21fd
- (_Bool)definesAnimatedDismissal;	// IMP=0x00000000002f21f5
- (id)log;	// IMP=0x00000000002f21eb
- (void)_debugHandleResetRoute;	// IMP=0x00000000002f21e5
- (void)_debugHandleNextRoute;	// IMP=0x00000000002f21df
- (id)sliderAccessibilityIdentifier;	// IMP=0x00000000002f21d2
- (id)createSliderView;	// IMP=0x00000000002f21b9
- (unsigned long long)layoutAxisForInterfaceOrientation:(long long)arg1;	// IMP=0x00000000002f21a3
- (void)noteContinuousValueInteractionDidEnd;	// IMP=0x00000000002f219d
- (void)noteContinuousValueInteractionWillBegin;	// IMP=0x00000000002f2197
- (double)interactiveValueUpdateDiscontinuityInterval;	// IMP=0x00000000002f218e
- (id)overrideDisplayNameForRoute:(id)arg1;	// IMP=0x00000000002f2186
- (_Bool)updateActiveRouteDisplay:(out id *)arg1;	// IMP=0x00000000002f2109
@property(readonly, nonatomic) struct CGPoint centerForElasticHUDWhenInInteractingState;
- (void)setupFailureRelationshipForGestureRecognizer:(id)arg1;	// IMP=0x00000000002f1f60
- (void)reloadData;	// IMP=0x00000000002f1820
- (void)noteValueWillDeltaStepToValue:(float)arg1;	// IMP=0x00000000002f17ab
- (void)noteButtonDownWasHit:(_Bool)arg1;	// IMP=0x00000000002f16a0
- (void)noteButtonUpWasHit:(_Bool)arg1;	// IMP=0x00000000002f1595
- (void)updateValue:(float)arg1;	// IMP=0x00000000002f14dc
- (void)setVolumeDownButtonIsDown:(_Bool)arg1;	// IMP=0x00000000002f1251
- (void)setVolumeUpButtonIsDown:(_Bool)arg1;	// IMP=0x00000000002f0fcd
- (void)_reduceMotionStatusDidChange;	// IMP=0x00000000002f0fae
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;	// IMP=0x00000000002f0f9c
- (_Bool)_canShowWhileLocked;	// IMP=0x00000000002f0f94
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x00000000002f0797
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x00000000002f0645
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x00000000002f051a
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x00000000002f02c4
- (void)viewWillLayoutSubviews;	// IMP=0x00000000002f01c6
- (void)dealloc;	// IMP=0x00000000002f0132
- (void)viewDidLoad;	// IMP=0x00000000002ef8ab
- (void)loadView;	// IMP=0x00000000002ef7db
- (unsigned long long)supportedInterfaceOrientations;	// IMP=0x00000000002ef7d0
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000002ef745
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x00000000002ef6ba
- (id)initWithDataSource:(id)arg1;	// IMP=0x00000000002ef459

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

