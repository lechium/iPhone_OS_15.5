//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpringBoard/SBApplicationHosting-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>

@class NSMapTable, NSMutableDictionary, NSMutableSet, NSString;

@interface SBPIPControllerCoordinator : NSObject <SBIdleTimerProviding, SBApplicationHosting>
{
    NSMutableDictionary *_controllersByType;	// 8 = 0x8
    NSMapTable *_controllerInterruptionAssertionsByCoordinatorAssertion;	// 16 = 0x10
    NSMapTable *_interruptionContextByCoordinatorAssertion;	// 24 = 0x18
    NSMapTable *_controllerStashAssertionsByCoordinatorAssertion;	// 32 = 0x20
    NSMapTable *_stashContextByCoordinatorAssertion;	// 40 = 0x28
    NSMutableSet *_pictureInPictureWindowsHiddenReasons;	// 48 = 0x30
    NSMutableDictionary *_sourceToEdgeInsets;	// 56 = 0x38
    NSMutableDictionary *_contentTypeToStashedPadding;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00000000004e30c7
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;	// IMP=0x00000000004e302a
- (id)hostedAppSceneHandles;	// IMP=0x00000000004e2f3a
- (id)hostedAppSceneHandle;	// IMP=0x00000000004e2e9c
- (_Bool)isHostingAnApp;	// IMP=0x00000000004e2e54
- (_Bool)canHostAnApp;	// IMP=0x00000000004e2e4c
- (void)conformsToSBApplicationHosting;	// IMP=0x00000000004e2e46
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;	// IMP=0x00000000004e2ca8
@property(readonly, nonatomic) _Bool hasIdleTimerBehaviors;
- (void)handleDestructionRequestForSceneHandles:(id)arg1;	// IMP=0x00000000004e2b26
- (_Bool)isPresentingPictureInPictureRequiringMedusaKeyboard;	// IMP=0x00000000004e2a4e
- (long long)tetheringModeForScenePersistenceIdentifier:(id)arg1 pipContentType:(long long)arg2;	// IMP=0x00000000004e29d1
- (_Bool)shouldStartPictureInPictureForApplicationWithProcessIdentifierEnteringBackground:(int)arg1 scenePersistenceIdentifier:(id)arg2 pipContentType:(long long)arg3;	// IMP=0x00000000004e294f
- (_Bool)isPointWithinAnyPictureInPictureContent:(struct CGPoint)arg1;	// IMP=0x00000000004e274d
- (_Bool)isAnyPictureInPictureWindowVisible;	// IMP=0x00000000004e2673
- (void)updatePictureInPictureWindowLevels;	// IMP=0x00000000004e2645
- (void)applyPictureInPictureInsets:(struct UIEdgeInsets)arg1 forSource:(long long)arg2;	// IMP=0x00000000004e24d7
- (void)applyStashedPictureInPicturePadding:(struct UIEdgeInsets)arg1 forPIPSource:(long long)arg2;	// IMP=0x00000000004e2171
- (id)acquireStashAssertionForReason:(long long)arg1 identifier:(id)arg2;	// IMP=0x00000000004e1ce8
- (id)acquireInterruptionAssertionForReason:(long long)arg1 identifier:(id)arg2;	// IMP=0x00000000004e185d
- (void)setPictureInPictureWindowsHidden:(_Bool)arg1 withReason:(id)arg2;	// IMP=0x00000000004e1763
- (void)_enumerateControllersByDescendingPriority:(CDUnknownBlockType)arg1;	// IMP=0x00000000004e1575
- (id)controllerForType:(long long)arg1;	// IMP=0x00000000004e147b
- (void)registerController:(id)arg1 forType:(long long)arg2;	// IMP=0x00000000004e08d0
- (void)dealloc;	// IMP=0x00000000004e08a1
- (id)init;	// IMP=0x00000000004e0836

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

