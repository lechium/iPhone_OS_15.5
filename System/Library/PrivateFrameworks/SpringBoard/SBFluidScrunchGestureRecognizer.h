//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SpringBoard/SBGestureRecognizerPanGestureProviding-Protocol.h>
#import <SpringBoard/SBGestureRecognizerTouchHistoryProviding-Protocol.h>

@class NSString, SBTouchHistory;

@interface SBFluidScrunchGestureRecognizer <SBGestureRecognizerTouchHistoryProviding, SBGestureRecognizerPanGestureProviding>
{
    double _absoluteScale;	// 8 = 0x8
    long long _recognizedTouchType;	// 16 = 0x10
    double _lastPerimeter;	// 24 = 0x18
    SBTouchHistory *_touchHistory;	// 32 = 0x20
    struct CGPoint _initialCentroid;	// 40 = 0x28
    struct CGPoint _absoluteTranslation;	// 56 = 0x38
    struct CGPoint _additionalTranslationDueToChangingAnchorPoints;	// 72 = 0x48
}

+ (id)_panTemplatesForTouchType:(long long)arg1;	// IMP=0x00000000005215ba
+ (id)_scrunchTemplatesForTouchType:(long long)arg1;	// IMP=0x0000000000521278
- (void).cxx_destruct;	// IMP=0x00000000005219ed
@property(retain, nonatomic) SBTouchHistory *touchHistory; // @synthesize touchHistory=_touchHistory;
@property(nonatomic) double lastPerimeter; // @synthesize lastPerimeter=_lastPerimeter;
@property(nonatomic) struct CGPoint additionalTranslationDueToChangingAnchorPoints; // @synthesize additionalTranslationDueToChangingAnchorPoints=_additionalTranslationDueToChangingAnchorPoints;
@property(nonatomic) struct CGPoint absoluteTranslation; // @synthesize absoluteTranslation=_absoluteTranslation;
@property(readonly, nonatomic) long long recognizedTouchType; // @synthesize recognizedTouchType=_recognizedTouchType;
@property(nonatomic) struct CGPoint initialCentroid; // @synthesize initialCentroid=_initialCentroid;
@property(nonatomic) double absoluteScale; // @synthesize absoluteScale=_absoluteScale;
- (double)incrementalGestureMotionForCandidate:(id)arg1 withTransformAnalyzerInfo:(id)arg2;	// IMP=0x0000000000054c82
- (double)animationDistance;	// IMP=0x0000000000054d8a
- (id)logCategory;	// IMP=0x000000000052126e
- (void)_updateRecognizedTouchTypeIfNecessaryWithTouches:(id)arg1;	// IMP=0x00000000005211ed
- (_Bool)_isMatchedTemplateScrunchTemplate;	// IMP=0x00000000005210d1
- (void)_installTemplates;	// IMP=0x0000000000520e46
- (struct CGPoint)_centroidInGestureViewForPolygon:(id)arg1;	// IMP=0x0000000000520d3f
- (id)_gestureView;	// IMP=0x0000000000520ce0
- (double)peakSpeed;	// IMP=0x0000000000520cc3
- (double)averageTouchPathAngleOverTimeDuration:(double)arg1;	// IMP=0x0000000000520ca6
- (struct CGPoint)averageTouchVelocityOverTimeDuration:(double)arg1;	// IMP=0x0000000000520c89
- (void)conformsToSBGestureRecognizerTouchHistoryProviding;	// IMP=0x0000000000520c83
- (struct CGPoint)translationWithoutConsideringScaleInView:(id)arg1;	// IMP=0x0000000000520b7c
- (struct CGPoint)velocityInView:(id)arg1;	// IMP=0x0000000000520b1a
- (struct CGPoint)translationInView:(id)arg1;	// IMP=0x0000000000054edc
- (struct CGPoint)locationInView:(id)arg1;	// IMP=0x0000000000054dc0
- (double)_hysteresis;	// IMP=0x0000000000055195
@property(readonly, nonatomic) struct CGPoint centroid;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000005209c3
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000079d8e
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000056902
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000000522b6
- (void)reset;	// IMP=0x000000000006ed5f
- (_Bool)_shouldAddNewTouchesAfterGestureRecognition;	// IMP=0x00000000005209bb
- (void)_computeGestureMotionWithTouches:(id)arg1 polygon:(id)arg2;	// IMP=0x0000000000053d46
- (void)_setMatchedPolygon:(id)arg1;	// IMP=0x000000000006ef9a
- (void)setState:(long long)arg1;	// IMP=0x000000000007935c
- (void)setAllowedTouchTypes:(id)arg1;	// IMP=0x000000000052097a
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;	// IMP=0x000000000052090d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

