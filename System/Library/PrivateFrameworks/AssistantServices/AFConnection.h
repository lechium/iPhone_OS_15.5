//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <AssistantServices/AFAccessibilityListening-Protocol.h>
#import <AssistantServices/AFAudioPowerUpdaterDelegate-Protocol.h>
#import <AssistantServices/AFDeviceRingerSwitchListening-Protocol.h>
#import <AssistantServices/AFInterstitialProviderDelegate-Protocol.h>
#import <AssistantServices/NSXPCListenerDelegate-Protocol.h>

@class AFAnalytics, AFAudioPowerUpdater, AFCallSiteInfo, AFClientConfiguration, AFInstanceContext, AFInterstitialProvider, AFOneArgumentSafetyBlock, AFPreferences, AFQueue, AFSiriClientStateManager, AFWatchdogTimer, NSArray, NSError, NSMutableDictionary, NSString, NSUUID, NSXPCConnection;
@protocol AFAssistantUIService, AFSpeechDelegate, OS_dispatch_group, OS_dispatch_queue;

@interface AFConnection : NSObject <NSXPCListenerDelegate, AFAudioPowerUpdaterDelegate, AFAccessibilityListening, AFDeviceRingerSwitchListening, AFInterstitialProviderDelegate>
{
    NSXPCConnection *_connection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_targetQueue;	// 16 = 0x10
    NSString *_outstandingRequestClass;	// 24 = 0x18
    void *_clientID;	// 32 = 0x20
    AFCallSiteInfo *_initiationCallSiteInfo;	// 40 = 0x28
    NSArray *_cachedBulletins;	// 48 = 0x30
    NSUUID *_activeRequestUUID;	// 56 = 0x38
    long long _activeRequestType;	// 64 = 0x40
    long long _activeRequestUsefulUserResultType;	// 72 = 0x48
    AFWatchdogTimer *_requestTimeoutTimer;	// 80 = 0x50
    AFOneArgumentSafetyBlock *_requestCompletion;	// 88 = 0x58
    long long _activeRequestActivationEvent;	// 96 = 0x60
    long long _activeRequestSpeechEvent;	// 104 = 0x68
    _Bool _activeRequestHasSpeechRecognition;	// 112 = 0x70
    _Bool _activeRequestIsDucking;	// 113 = 0x71
    _Bool _activeRequestIsTwoShot;	// 114 = 0x72
    double _activeRequestBeginTime;	// 120 = 0x78
    unsigned long long _activeRequestSpeechEndHostTime;	// 128 = 0x80
    unsigned long long _activeRequestNumberOfPresentedInterstitials;	// 136 = 0x88
    double _activeRequestStartSpeechTimeRequested;	// 144 = 0x90
    double _activeRequestStartSpeechTimeAPICalled;	// 152 = 0x98
    double _activeRequestStopSpeechTimeRequested;	// 160 = 0xa0
    double _activeRequestStopSpeechTimeAPICalled;	// 168 = 0xa8
    double _activeRequestSpeechRecordingEndTimeInterval;	// 176 = 0xb0
    double _activeRequestSpeechRecognitionTimeInterval;	// 184 = 0xb8
    double _activeRequestInitialInterstitialBeginTimeInterval;	// 192 = 0xc0
    NSUUID *_activeTurnIdentifier;	// 200 = 0xc8
    NSMutableDictionary *_replyHandlerForAceId;	// 208 = 0xd0
    unsigned int _stateInSync:1;	// 216 = 0xd8
    unsigned int _shouldSpeak:1;	// 216 = 0xd8
    unsigned int _isCapturingSpeech:1;	// 216 = 0xd8
    unsigned int _hasOutstandingRequest:1;	// 216 = 0xd8
    unsigned int _audioSessionID;	// 220 = 0xdc
    NSString *_recordRoute;	// 224 = 0xe0
    NSString *_playbackRoute;	// 232 = 0xe8
    AFAudioPowerUpdater *_inputAudioPowerUpdater;	// 240 = 0xf0
    AFClientConfiguration *_clientConfiguration;	// 248 = 0xf8
    AFInterstitialProvider *_interstitialProvider;	// 256 = 0x100
    AFQueue *_interstitialCommandQueue;	// 264 = 0x108
    unsigned int _clientConfigurationIsInSync:1;	// 272 = 0x110
    unsigned int _voiceOverIsActive:1;	// 272 = 0x110
    NSError *_lastRetryError;	// 280 = 0x118
    unsigned long long _pendingSpeechRequestCounter;	// 288 = 0x120
    NSObject<OS_dispatch_group> *_speechCallbackGroup;	// 296 = 0x128
    unsigned long long _uufrID;	// 304 = 0x130
    AFPreferences *_preferences;	// 312 = 0x138
    AFInstanceContext *_instanceContext;	// 320 = 0x140
    AFAnalytics *_analytics;	// 328 = 0x148
    AFSiriClientStateManager *_siriClientStateManager;	// 336 = 0x150
    _Atomic unsigned long long _activePlaybackCount;	// 344 = 0x158
    id <AFAssistantUIService> _delegate;	// 352 = 0x160
    id <AFSpeechDelegate> _speechDelegate;	// 360 = 0x168
}

+ (void)defrost;	// IMP=0x000000000000df7c
+ (id)outputVoice;	// IMP=0x000000000000dd28
+ (id)currentLanguageCode;	// IMP=0x000000000000dcd1
+ (void)stopMonitoringAvailability;	// IMP=0x000000000000dc5c
+ (_Bool)isAvailable;	// IMP=0x000000000000da5d
+ (_Bool)isNetworkAvailable;	// IMP=0x000000000000d9fb
+ (void)beginMonitoringAvailability;	// IMP=0x000000000000d96f
+ (_Bool)assistantIsSupported;	// IMP=0x000000000000d965
+ (_Bool)siriIsSupportedForLanguageCode:(id)arg1 productName:(id)arg2 productVersion:(id)arg3 error:(id *)arg4;	// IMP=0x000000000000d835
+ (_Bool)siriIsSupportedForLanguageCode:(id)arg1 deviceProductVersion:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000d81b
+ (_Bool)assistantIsSupportedForLanguageCode:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d741
+ (void)initialize;	// IMP=0x000000000000440a
+ (_Bool)userDataSyncNeeded;	// IMP=0x0000000000015557
- (void).cxx_destruct;	// IMP=0x0000000000014bd5
@property(nonatomic) __weak id <AFSpeechDelegate> speechDelegate; // @synthesize speechDelegate=_speechDelegate;
@property(nonatomic) __weak id <AFAssistantUIService> delegate; // @synthesize delegate=_delegate;
- (id)acquireUserInteractionAssertion;	// IMP=0x0000000000014b87
- (void)_willStopRecordingWithSignpostID:(unsigned long long)arg1;	// IMP=0x0000000000014b7a
- (void)_speechRecordingDidFailWithError:(id)arg1;	// IMP=0x0000000000014ae2
- (void)fetchShouldSpeak:(CDUnknownBlockType)arg1;	// IMP=0x0000000000014ad0
- (void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x0000000000014a84
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x0000000000014a12
- (void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x00000000000149c6
- (void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x000000000001494e
- (void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000147fb
- (void)checkLanguageReady:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000147e2
- (void)willPresentUsefulUserResultWithType:(long long)arg1 forCommand:(id)arg2;	// IMP=0x00000000000146a1
- (void)willPresentUsefulUserResultWithType:(long long)arg1;	// IMP=0x000000000001468d
- (void)usefulUserResultWillPresent;	// IMP=0x000000000001466d
- (void)telephonyRequestCompleted;	// IMP=0x0000000000014630
- (void)prepareForPhoneCall;	// IMP=0x00000000000145f3
- (void)setAlertContextWithBulletins:(id)arg1;	// IMP=0x0000000000014589
- (void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x0000000000014503
- (void)setApplicationContextForApplicationInfos:(id)arg1;	// IMP=0x000000000001448c
- (void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x0000000000014404
- (void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x000000000001436a
- (void)setApplicationContext:(id)arg1;	// IMP=0x00000000000142f8
- (void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x0000000000014286
- (void)clearContext;	// IMP=0x0000000000014249
- (void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000001411f
- (void)getCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000013cd9
- (void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000013c53
- (void)sendReplyCommand:(id)arg1;	// IMP=0x0000000000013baa
- (void)sendGenericAceCommand:(id)arg1 turnIdentifier:(id)arg2 conflictHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000134d8
- (void)sendGenericAceCommand:(id)arg1 conflictHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000134c1
- (void)sendGenericAceCommand:(id)arg1;	// IMP=0x00000000000134aa
- (float)peakPower;	// IMP=0x0000000000013491
- (float)averagePower;	// IMP=0x0000000000013478
- (unsigned int)audioSessionID;	// IMP=0x000000000001346c
- (_Bool)shouldSpeak;	// IMP=0x000000000001345c
@property(readonly, nonatomic) _Bool hasActiveRequest;
@property(readonly, nonatomic) _Bool isRecording;
- (void)rollbackRequest;	// IMP=0x00000000000133c3
- (void)rollbackClearContext;	// IMP=0x0000000000013386
- (void)recordRequestMetric:(id)arg1 withTimestamp:(double)arg2;	// IMP=0x0000000000013380
- (void)recordUIMetrics:(id)arg1;	// IMP=0x000000000001337a
- (void)updateSpeechOptions:(id)arg1;	// IMP=0x0000000000013246
- (void)stopSpeechWithOptions:(id)arg1;	// IMP=0x0000000000013007
- (void)stopSpeech;	// IMP=0x0000000000012ff3
- (void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x0000000000012f4c
- (void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x0000000000012e9a
- (void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x0000000000012e03
- (void)failRequestWithError:(id)arg1;	// IMP=0x0000000000012bc0
- (void)cancelRequestForReason:(long long)arg1;	// IMP=0x0000000000012a5d
- (void)cancelRequest;	// IMP=0x00000000000129b1
- (void)cancelSpeech;	// IMP=0x000000000001290a
- (void)startAcousticIDRequestWithOptions:(id)arg1;	// IMP=0x0000000000012277
- (void)startSpeechPronunciationRequestWithOptions:(id)arg1 pronunciationContext:(id)arg2;	// IMP=0x0000000000011ae2
- (CDUnknownBlockType)startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:(id)arg1;	// IMP=0x0000000000010fbd
- (void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000010f59
- (void)startSpeechRequestWithOptions:(id)arg1;	// IMP=0x0000000000010f26
- (void)_startRequestWithAceCommand:(id)arg1 turnIdentifier:(id)arg2 suppressAlert:(_Bool)arg3;	// IMP=0x0000000000010e11
- (id)_metricContextValueForUseDeviceSpeakerForTTS:(long long)arg1;	// IMP=0x0000000000010ddc
- (id)_startRequestMetricSettings;	// IMP=0x0000000000010b6a
- (void)_startRequestWithInfo:(id)arg1;	// IMP=0x00000000000102fa
- (void)startRequestWithInfo:(id)arg1 activationEvent:(long long)arg2;	// IMP=0x00000000000101d1
- (void)startRequestWithInfo:(id)arg1;	// IMP=0x00000000000101bf
- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2 userSelectionResults:(id)arg3 turnIdentifier:(id)arg4;	// IMP=0x000000000000fef3
- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2 userSelectionResults:(id)arg3;	// IMP=0x000000000000fede
- (void)startRequestWithAceCommand:(id)arg1;	// IMP=0x000000000000fec7
- (void)startContinuationRequestWithUserInfo:(id)arg1;	// IMP=0x000000000000fe27
- (void)startDirectActionRequestWithString:(id)arg1;	// IMP=0x000000000000fd9c
- (void)startRequestWithText:(id)arg1;	// IMP=0x000000000000fd11
- (void)setConfiguration:(id)arg1;	// IMP=0x000000000000fcc5
- (void)setVoiceOverIsActive:(_Bool)arg1;	// IMP=0x000000000000fcad
- (void)setMyriadDecisionResult:(_Bool)arg1;	// IMP=0x000000000000fc28
- (void)setShouldWaitForMyriad:(_Bool)arg1;	// IMP=0x000000000000fba3
- (void)setDeviceRingerSwitchState:(long long)arg1;	// IMP=0x000000000000fab9
- (void)setAccessibilityState:(id)arg1;	// IMP=0x000000000000f9a1
- (void)setWatchAuthenticated:(_Bool)arg1;	// IMP=0x000000000000f8b7
- (void)setAnnouncementRequestsPermittedByPresentationWhileActive:(_Bool)arg1;	// IMP=0x000000000000f7cd
- (void)setModesConfiguration:(id)arg1;	// IMP=0x000000000000f7c7
- (void)setCarDNDActive:(_Bool)arg1;	// IMP=0x000000000000f6dd
- (void)setIsDeviceInStarkMode:(_Bool)arg1;	// IMP=0x000000000000f5f3
- (void)setLockState:(_Bool)arg1 screenLocked:(_Bool)arg2;	// IMP=0x000000000000f5a2
- (void)didDismissUI;	// IMP=0x000000000000f525
- (void)willPresentUI;	// IMP=0x000000000000f41c
- (void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x000000000000f32f
- (void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000f0b0
- (void)forceAudioSessionInactive;	// IMP=0x000000000000f097
- (void)acquireAudioSessionWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ec80
- (void)forceAudioSessionActiveWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e6c6
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 speechRequestOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000000e48c
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000e474
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e45d
- (void)forceAudioSessionActive;	// IMP=0x000000000000e447
- (void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e2d7
- (void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x000000000000e180
- (void)preheatWithStyle:(long long)arg1;	// IMP=0x000000000000e16c
- (void)invalidate;	// IMP=0x000000000000de9b
- (void)endSession;	// IMP=0x000000000000dd7f
- (void)_endInterstitialsForReason:(id)arg1;	// IMP=0x000000000000d640
- (void)_handleInterstitialPhase:(long long)arg1 fromProvider:(id)arg2 displayText:(id)arg3 speakableText:(id)arg4 expectedDelay:(double)arg5 context:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000000000d096
- (void)_beginInterstitialsForReason:(id)arg1;	// IMP=0x000000000000ce94
- (void)_enqueueInterstitialCommand:(id)arg1;	// IMP=0x000000000000cdfc
- (void)_willPresentUsefulUserResultWithType:(long long)arg1;	// IMP=0x000000000000cbff
- (void)_willCompleteRequest;	// IMP=0x000000000000c919
- (void)_willFailRequestWithError:(id)arg1;	// IMP=0x000000000000bc1d
- (void)_willCancelRequest;	// IMP=0x000000000000b8b6
- (void)_willEndSession;	// IMP=0x000000000000b7c2
- (void)_willStartRequestWithSpeech:(_Bool)arg1 speechRequestOptions:(id)arg2 requestInfo:(id)arg3 analyticsEventProvider:(CDUnknownBlockType)arg4;	// IMP=0x000000000000a891
- (_Bool)_shouldEmitUEIRequestLinkForRequestInfo:(id)arg1;	// IMP=0x000000000000a86b
- (void)_updateClientConfiguration;	// IMP=0x000000000000a7ed
- (void)_updateState;	// IMP=0x000000000000a547
- (void)_fetchShouldSpeak:(CDUnknownBlockType)arg1;	// IMP=0x000000000000a2fd
- (void)_updateStateIfNotInSync;	// IMP=0x000000000000a2e0
- (void)_extendExistingRequestTimeoutForReason:(id)arg1;	// IMP=0x000000000000a216
- (void)_extendRequestTimeoutForReason:(id)arg1;	// IMP=0x000000000000a132
- (void)_cancelRequestTimeoutForReason:(id)arg1;	// IMP=0x000000000000a054
- (void)_resumeRequestTimeoutForReason:(id)arg1;	// IMP=0x0000000000009f8c
- (void)_pauseRequestTimeoutForReason:(id)arg1;	// IMP=0x0000000000009ec4
- (void)_invokeRequestTimeoutForReason:(id)arg1;	// IMP=0x0000000000009d72
- (void)_scheduleRequestTimeoutForReason:(id)arg1;	// IMP=0x0000000000009b46
- (id)_connection;	// IMP=0x0000000000009501
- (void)_clearConnection;	// IMP=0x00000000000094c3
- (void)_connectionFailedWithError:(id)arg1;	// IMP=0x00000000000092b3
- (void)interstitialProvider:(id)arg1 handlePhase:(long long)arg2 displayText:(id)arg3 speakableText:(id)arg4 expectedDelay:(double)arg5 context:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x0000000000009077
- (void)deviceRingerObserver:(id)arg1 didChangeState:(long long)arg2;	// IMP=0x000000000000900b
- (void)accessibilityObserver:(id)arg1 stateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x0000000000008f63
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;	// IMP=0x0000000000008ed3
- (void)_tellSpeechDelegateRecognitionDidFail:(id)arg1;	// IMP=0x0000000000008deb
- (void)_tellSpeechDelegateSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x0000000000008d03
- (void)_tellSpeechDelegateRecognitionUpdateWillBeginForTask:(id)arg1;	// IMP=0x0000000000008c1b
- (void)_tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:(id)arg1 utterances:(id)arg2 refId:(id)arg3;	// IMP=0x0000000000008aa5
- (void)_tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:(id)arg1 refId:(id)arg2;	// IMP=0x0000000000008990
- (void)_tellSpeechDelegateSpeechRecognized:(id)arg1;	// IMP=0x0000000000008882
- (void)_tellSpeechDelegateRecordingDidFail:(id)arg1;	// IMP=0x000000000000879a
- (void)_tellSpeechDelegateRecordingDidCancel;	// IMP=0x00000000000086fc
- (void)_tellSpeechDelegateRecordingDidEnd;	// IMP=0x0000000000008633
- (void)_tellSpeechDelegateToPerformTwoShotPromptWithType:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000839c
- (void)_tellSpeechDelegateRecordingDidDetectStartpoint;	// IMP=0x00000000000082fe
- (void)_tellSpeechDelegateRecordingDidChangeAVRecordRoute:(id)arg1;	// IMP=0x0000000000008216
- (void)_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2;	// IMP=0x00000000000080f7
- (void)_tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1;	// IMP=0x0000000000007fe7
- (void)_dispatchCallbackGroupBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000007e5a
- (void)_tellDelegateFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x0000000000007dc9
- (void)_tellDelegateWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x0000000000007d38
- (void)_tellDelegateAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0000000000007ca9
- (void)_tellDelegateAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0000000000007c1a
- (void)_tellDelegateStartPlaybackDidFail:(long long)arg1;	// IMP=0x0000000000007b8b
- (void)_tellDelegateWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007a56
- (void)_tellDelegateAudioPlaybackRequestDidStop:(id)arg1 error:(id)arg2;	// IMP=0x00000000000079a2
- (void)_tellDelegateAudioPlaybackRequestDidStart:(id)arg1;	// IMP=0x0000000000007911
- (void)_tellDelegateAudioPlaybackRequestWillStart:(id)arg1;	// IMP=0x0000000000007880
- (void)_tellDelegateAudioSessionDidEndInterruption:(_Bool)arg1 userInfo:(id)arg2;	// IMP=0x0000000000007796
- (void)_tellDelegateAudioSessionDidBeginInterruptionWithUserInfo:(id)arg1;	// IMP=0x00000000000076c4
- (void)_tellDelegateExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x0000000000007610
- (void)_tellDelegateExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x000000000000757f
- (void)_tellDelegateCacheImage:(id)arg1;	// IMP=0x00000000000074ee
- (void)_tellDelegateInvalidateCurrentUserActivity;	// IMP=0x0000000000007467
- (void)_tellDelegateSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x00000000000073b3
- (void)_tellDelegateDidFinishAcousticIDRequestWithSuccess:(_Bool)arg1;	// IMP=0x0000000000007282
- (void)_tellDelegateDidDetectMusic;	// IMP=0x00000000000071fb
- (void)_tellDelegateWillStartAcousticIDRequest;	// IMP=0x0000000000007159
- (void)_tellDelegateAudioSessionIDChanged:(unsigned int)arg1;	// IMP=0x00000000000070cc
- (void)_tellDelegateShouldSpeakChanged:(_Bool)arg1;	// IMP=0x000000000000703d
- (void)_completeRequestWithUUID:(id)arg1 forReason:(long long)arg2 error:(id)arg3;	// IMP=0x0000000000006c71
- (void)_tellDelegateRequestWillStart;	// IMP=0x0000000000006bea
- (id)_siriClientStateManager;	// IMP=0x0000000000006b93
- (void)_updateSpeechEndHostTime:(unsigned long long)arg1;	// IMP=0x00000000000069f1
- (void)_markSpeechRecognized;	// IMP=0x000000000000699e
- (void)_markIsTwoShot;	// IMP=0x000000000000694b
- (void)_markIsDucking;	// IMP=0x00000000000068f8
- (void)_setRecordRoute:(id)arg1;	// IMP=0x0000000000006804
- (void)_setAudioSessionID:(unsigned int)arg1;	// IMP=0x00000000000066fd
- (void)_stopInputAudioPowerUpdates;	// IMP=0x0000000000006627
- (_Bool)_startInputAudioPowerUpdatesWithXPCWrapper:(id)arg1;	// IMP=0x0000000000006372
- (void)_aceConnectionWillRetryOnError:(id)arg1;	// IMP=0x000000000000635e
- (void)_setShouldSpeak:(_Bool)arg1;	// IMP=0x0000000000006234
- (void)_dispatchCommand:(id)arg1 isInterstitial:(_Bool)arg2 interstitialPhase:(long long)arg3 interstitialDelay:(double)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000000000050c1
- (void)_handleCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004ee7
- (void)_startUIRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004e1b
- (void)_startUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000004d4f
- (void)_requestDidEnd;	// IMP=0x0000000000004c4c
- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(_Bool)arg2 speechRequestOptions:(id)arg3 requestInfo:(id)arg4 isBackgroundRequest:(_Bool)arg5 analyticsEventProvider:(CDUnknownBlockType)arg6;	// IMP=0x0000000000004a84
- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(_Bool)arg2 speechRequestOptions:(id)arg3 requestInfo:(id)arg4 analyticsEventProvider:(CDUnknownBlockType)arg5;	// IMP=0x0000000000004a68
- (void)_checkAndSetIsCapturingSpeech:(_Bool)arg1;	// IMP=0x000000000000494c
- (void)dealloc;	// IMP=0x0000000000004802
- (id)init;	// IMP=0x00000000000047ee
- (id)initWithTargetQueue:(id)arg1;	// IMP=0x00000000000047da
- (id)initWithTargetQueue:(id)arg1 instanceContext:(id)arg2;	// IMP=0x0000000000004414
- (void)broadcastCommandDictionary:(id)arg1;	// IMP=0x0000000000015128
- (void)sendFeedbackToAppPreferencesPredictorForMetricsContext:(id)arg1 selectedBundleId:(id)arg2;	// IMP=0x0000000000015122
- (void)requestBarrier:(CDUnknownBlockType)arg1;	// IMP=0x000000000001505a
- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x0000000000014d2f
- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1;	// IMP=0x0000000000014d1b
- (void)startUIRequest;	// IMP=0x0000000000015551
- (id)_clientConfiguration;	// IMP=0x0000000000015429
- (id)_cachedBulletins;	// IMP=0x000000000001541b
- (id)_clientServiceWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015398
- (id)_clientService;	// IMP=0x0000000000015348
- (void)_clearAssistantInfoForAccountWithIdentifier:(id)arg1;	// IMP=0x00000000000152d6
- (void)_barrier;	// IMP=0x00000000000151a8
- (id)_activeRequestUUID;	// IMP=0x000000000001519a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

