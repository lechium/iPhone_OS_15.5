//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NotesUI/ICProgressViewControllerDelegate-Protocol.h>

@class ICProgressViewController, NSDate, NSProgress, NSString, UIViewController, UIWindow;

@interface ICLongRunningTaskController : NSObject <ICProgressViewControllerDelegate>
{
    _Bool _isCancelled;	// 8 = 0x8
    _Bool _shouldShowCancelButton;	// 9 = 0x9
    _Bool _indeterminate;	// 10 = 0xa
    _Bool _shouldShowCircularProgress;	// 11 = 0xb
    _Bool _allowSingleUnitProgress;	// 12 = 0xc
    _Bool _progressViewControllerDidFinishPresenting;	// 13 = 0xd
    _Bool _shouldDismissProgressViewController;	// 14 = 0xe
    NSString *_customCancelButtonTitle;	// 16 = 0x10
    NSString *_progressFormatString;	// 24 = 0x18
    UIViewController *_viewControllerToPresentFrom;	// 32 = 0x20
    UIWindow *_window;	// 40 = 0x28
    double _intervalBeforeOpeningProgressDialog;	// 48 = 0x30
    id _keepAlive;	// 56 = 0x38
    CDUnknownBlockType _completionBlock;	// 64 = 0x40
    CDUnknownBlockType _updateProgressUIBlock;	// 72 = 0x48
    NSProgress *_progress;	// 80 = 0x50
    NSDate *_lastAccessibilityAnnouncementDate;	// 88 = 0x58
    NSDate *_openProgressDate;	// 96 = 0x60
    ICProgressViewController *_progressViewController;	// 104 = 0x68
}

+ (void)setMainWindow:(id)arg1;	// IMP=0x000000000006f1bb
- (void).cxx_destruct;	// IMP=0x00000000000708b4
@property(nonatomic) _Bool shouldDismissProgressViewController; // @synthesize shouldDismissProgressViewController=_shouldDismissProgressViewController;
@property(nonatomic) _Bool progressViewControllerDidFinishPresenting; // @synthesize progressViewControllerDidFinishPresenting=_progressViewControllerDidFinishPresenting;
@property(retain, nonatomic) ICProgressViewController *progressViewController; // @synthesize progressViewController=_progressViewController;
@property(retain, nonatomic) NSDate *openProgressDate; // @synthesize openProgressDate=_openProgressDate;
@property(retain, nonatomic) NSDate *lastAccessibilityAnnouncementDate; // @synthesize lastAccessibilityAnnouncementDate=_lastAccessibilityAnnouncementDate;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(copy, nonatomic) CDUnknownBlockType updateProgressUIBlock; // @synthesize updateProgressUIBlock=_updateProgressUIBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) id keepAlive; // @synthesize keepAlive=_keepAlive;
@property(nonatomic) double intervalBeforeOpeningProgressDialog; // @synthesize intervalBeforeOpeningProgressDialog=_intervalBeforeOpeningProgressDialog;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(nonatomic) _Bool allowSingleUnitProgress; // @synthesize allowSingleUnitProgress=_allowSingleUnitProgress;
@property(nonatomic) _Bool shouldShowCircularProgress; // @synthesize shouldShowCircularProgress=_shouldShowCircularProgress;
@property(retain, nonatomic) UIViewController *viewControllerToPresentFrom; // @synthesize viewControllerToPresentFrom=_viewControllerToPresentFrom;
@property(copy, nonatomic) NSString *progressFormatString; // @synthesize progressFormatString=_progressFormatString;
@property(copy, nonatomic) NSString *customCancelButtonTitle; // @synthesize customCancelButtonTitle=_customCancelButtonTitle;
@property(nonatomic, getter=isIndeterminate) _Bool indeterminate; // @synthesize indeterminate=_indeterminate;
@property(nonatomic) _Bool shouldShowCancelButton; // @synthesize shouldShowCancelButton=_shouldShowCancelButton;
@property(nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
- (void)willDismissProgressViewController:(id)arg1;	// IMP=0x00000000000706c2
- (void)closeProgressDialog;	// IMP=0x0000000000070409
- (void)openProgressDialog;	// IMP=0x000000000006fcfa
- (void)updateProgress;	// IMP=0x000000000006f8de
- (void)completeTaskIfNecessary;	// IMP=0x000000000006f661
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000006f4ed
- (void)startTask:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000006f1cf
- (id)initWithWindow:(id)arg1 intervalBeforeOpeningProgressDialog:(double)arg2;	// IMP=0x000000000006f134
- (id)init;	// IMP=0x000000000006f113

@end

