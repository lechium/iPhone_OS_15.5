//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <VoiceShortcuts/VCDaemonXPCInterface-Protocol.h>

@class NSString, VCAccessSpecifier, VCCKShortcutSyncCoordinator, VCVoiceShortcutManager, WFShareSheetWorkflowProvider, WFTriggerRegistrar, WFWorkflowRunCoordinator;
@protocol VCSyncDataEndpoint;

@interface VCVoiceShortcutManagerAccessWrapper : NSObject <VCDaemonXPCInterface>
{
    VCAccessSpecifier *_accessSpecifier;	// 8 = 0x8
    VCVoiceShortcutManager *_voiceShortcutManager;	// 16 = 0x10
    WFTriggerRegistrar *_triggerRegistrar;	// 24 = 0x18
    WFShareSheetWorkflowProvider *_shareSheetProvider;	// 32 = 0x20
    id <VCSyncDataEndpoint> _syncDataEndpoint;	// 40 = 0x28
    VCCKShortcutSyncCoordinator *_syncCoordinator;	// 48 = 0x30
    WFWorkflowRunCoordinator *_runCoordinator;	// 56 = 0x38
    CDStruct_4c969caf _auditToken;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000006b5cf
@property(nonatomic) CDStruct_4c969caf auditToken; // @synthesize auditToken=_auditToken;
@property(readonly, nonatomic) WFWorkflowRunCoordinator *runCoordinator; // @synthesize runCoordinator=_runCoordinator;
@property(readonly, nonatomic) VCCKShortcutSyncCoordinator *syncCoordinator; // @synthesize syncCoordinator=_syncCoordinator;
@property(readonly, nonatomic) id <VCSyncDataEndpoint> syncDataEndpoint; // @synthesize syncDataEndpoint=_syncDataEndpoint;
@property(readonly, nonatomic) WFShareSheetWorkflowProvider *shareSheetProvider; // @synthesize shareSheetProvider=_shareSheetProvider;
@property(readonly, nonatomic) WFTriggerRegistrar *triggerRegistrar; // @synthesize triggerRegistrar=_triggerRegistrar;
@property(readonly, nonatomic) VCVoiceShortcutManager *voiceShortcutManager; // @synthesize voiceShortcutManager=_voiceShortcutManager;
@property(readonly, copy, nonatomic) VCAccessSpecifier *accessSpecifier; // @synthesize accessSpecifier=_accessSpecifier;
- (void)fetchURLForFPItem:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006b4d1
- (void)createBookmarkWithBookmarkableString:(id)arg1 path:(id)arg2 workflowID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000006b3f7
- (void)createBookmarkWithURL:(id)arg1 workflowID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006b14d
- (void)resolveCrossDeviceItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006b018
- (void)resolveBookmarkData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006ace1
- (void)resolveFilePath:(id)arg1 workflowID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006a750
- (void)computeFinderResizedSizesForImages:(id)arg1 inSizes:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006a5f1
- (void)getSortedWorkflowsWithQuery:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006a507
- (void)getSortedVisibleWorkflowsInCollection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006a41d
- (void)getSortedVisibleWorkflowsByNameWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000006a34e
- (void)getSortedVisibleFoldersWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000006a27f
- (void)filterContextualActions:(id)arg1 forContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006a120
- (void)getContextualActionsForContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000069fee
- (void)showSingleStepCompletionForWebClip:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000069e4f
- (void)getRunningWorkflowNamesAndProgressCompletedWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000069904
- (void)getFirstUnsortedWorkflowWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000069565
- (void)drawGlyphs:(id)arg1 withBackgroundColorValues:(id)arg2 padding:(double)arg3 intoContext:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000000006949c
- (void)sendAceCommandDictionary:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000692cb
- (void)createShortcutWithRecordData:(id)arg1 name:(id)arg2 shortcutSource:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000691e0
- (void)obliterateShortcuts:(CDUnknownBlockType)arg1;	// IMP=0x000000000006902d
- (void)hasRunEventsInTheLast5DaysWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000068e50
- (void)getOnScreenContentWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000068d53
- (void)getOnScreenContentWithOptions:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000068c56
- (void)stopRunningWorkflowWithRunningContext:(id)arg1;	// IMP=0x0000000000068be4
- (void)resumeWorkflowFromContext:(id)arg1 withRequest:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000068aab
- (void)resumeWorkflowFromContext:(id)arg1 presentationMode:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000689a0
- (void)runWorkflowWithRequest:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000684fb
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000683f8
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000682ce
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000681a2
- (void)fireTriggerWithIdentifier:(id)arg1 force:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000068044
- (void)getConfiguredTriggerDescriptionsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000067f61
- (void)unregisterTriggerWithIdentifier:(id)arg1 triggerBacking:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000067d7b
- (void)refreshTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000067b9b
- (void)getSiriPodcastsDatabaseURLWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000679bb
- (void)setInteger:(long long)arg1 forKey:(id)arg2 inDomain:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000678d2
- (void)generateSingleUseTokenForWorkflowIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000677af
- (void)getAccessibilityWorkflowWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000067572
- (void)getAccessibilityWorkflowsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000673e4
- (void)deleteSleepWorkflowWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000672e1
- (void)getSleepActionSuggestionsForAllAppsWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000671d0
- (void)getSleepActionSuggestionsForAppWithBundleIdentifier:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000067097
- (void)getSleepActionSuggestionsForAllAppsFilteringBySleep:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000066f87
- (void)getSleepActionSuggestionsForAppWithBundleIdentifier:(id)arg1 shouldFilterBySleep:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000066e4f
- (void)createSleepWorkflow:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000066d4c
- (void)resetDefaultShortcutFlagsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066cc2
- (void)addDefaultShortcutsIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000066c38
- (void)getValueForDescriptor:(id)arg1 resultClassName:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000066b09
- (void)getResultsForQuery:(id)arg1 resultClassName:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000667fc
- (void)getShareSheetWorkflowsForExtensionMatchingDictionaries:(id)arg1 hostBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000006667d
- (void)requestDataMigration:(CDUnknownBlockType)arg1;	// IMP=0x000000000006660b
- (void)describeSyncStateIncludingDeleted:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000066553
- (void)getShortcutSuggestionsForAllAppsWithLimit:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000664ba
- (void)getShortcutSuggestionsForAppWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000006640e
- (void)setShortcutSuggestions:(id)arg1 forAppWithBundleIdentifier:(id)arg2;	// IMP=0x0000000000066362
- (void)deleteVoiceShortcutWithIdentifier:(id)arg1 name:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000066289
- (void)updateVoiceShortcutWithIdentifier:(id)arg1 phrase:(id)arg2 shortcut:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000000006619e
- (void)addVoiceShortcut:(id)arg1 phrase:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000660c5
- (void)getVoiceShortcutsForAppWithBundleIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000065fbc
- (void)getVoiceShortcutsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000065f32
- (void)getVoiceShortcutWithPhrase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000065e86
- (void)getVoiceShortcutWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000065dda
- (void)getNumberOfVoiceShortcutsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000065d50
- (id)initWithVoiceShortcutManager:(id)arg1 triggerRegistrar:(id)arg2 accessSpecifier:(id)arg3 syncCoordinator:(id)arg4 syncDataEndpoint:(id)arg5 runCoordinator:(id)arg6 auditToken:(CDStruct_4c969caf)arg7;	// IMP=0x0000000000065937

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

