//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct NSDirectionalEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct RetainPtr<CGImage *> {
    void *m_ptr;
};

struct RetainPtr<CGImageSource *> {
    void *_field1;
};

struct RetainPtr<CGImageSource> {
    void *_field1;
};

struct RetainPtr<const __SecCode *> {
    void *m_ptr;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Vector<WTF::RetainPtr<CGImage *>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct atomic<bool> {
    struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> {
        _Atomic _Bool __a_value;
    } __a_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct RetainPtr<CGImage *> {
    void *m_ptr;
} RetainPtr_c27edd19;

typedef struct RetainPtr<CGImageSource *> {
    void *_field1;
} RetainPtr_36f90b78;

typedef struct RetainPtr<CGImageSource> {
    void *_field1;
} RetainPtr_f3a3e1f4;

typedef struct RetainPtr<const __SecCode *> {
    void *m_ptr;
} RetainPtr_86d965a1;

