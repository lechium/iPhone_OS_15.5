//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <SafariSharedUI/NSCopying-Protocol.h>
#import <SafariSharedUI/NSSecureCoding-Protocol.h>
#import <SafariSharedUI/WBSWebExtensionDataForwarding-Protocol.h>
#import <SafariSharedUI/WKNavigationDelegate-Protocol.h>
#import <SafariSharedUI/WKUIDelegate-Protocol.h>

@class NSArray, NSBundle, NSCountedSet, NSDate, NSDictionary, NSExtension, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSPointerArray, NSSet, NSString, NSURL, NSUUID, UIImage, WBSDispatchSourceTimer, WBSWebExtensionAlarmState, WBSWebExtensionContextMenuItemManager, WBSWebExtensionDeclarativeNetRequestSQLiteStore, WBSWebExtensionLocalization, WBSWebExtensionStorageAPISQLiteStore, WBSWebExtensionToolbarItem, WKContentWorld, WKWebView;

@interface WBSWebExtensionData <WKNavigationDelegate, WKUIDelegate, WBSWebExtensionDataForwarding, NSSecureCoding, NSCopying>
{
    NSURL *_resourcesDirectoryURL;	// 8 = 0x8
    NSExtension *_extension;	// 16 = 0x10
    NSString *_composedIdentifier;	// 24 = 0x18
    NSMutableArray *_actionsToPerformAfterBackgroundPageLoads;	// 32 = 0x20
    WBSDispatchSourceTimer *_timerToUnloadBackgroundPage;	// 40 = 0x28
    WKWebView *_backgroundWebView;	// 48 = 0x30
    NSPointerArray *_relatedWebViewPool;	// 56 = 0x38
    NSMutableDictionary *_injectedScriptsPerOriginPattern;	// 64 = 0x40
    NSMutableDictionary *_injectedStyleSheetsPerOriginPattern;	// 72 = 0x48
    WBSWebExtensionContextMenuItemManager *_contextMenuItemManager;	// 80 = 0x50
    WBSWebExtensionAlarmState *_alarmState;	// 88 = 0x58
    NSMapTable *_temporaryTabPermissionOrigins;	// 96 = 0x60
    NSMutableArray *_websiteRequestsPendingApproval;	// 104 = 0x68
    NSMutableOrderedSet *_manifestErrors;	// 112 = 0x70
    NSBundle *_extensionBundle;	// 120 = 0x78
    NSDictionary *_manifestDictionary;	// 128 = 0x80
    _Bool _parsedManifestDictionary;	// 136 = 0x88
    NSMutableDictionary *_grantedPermissions;	// 144 = 0x90
    NSMutableDictionary *_grantedPermissionOrigins;	// 152 = 0x98
    NSMutableDictionary *_revokedPermissions;	// 160 = 0xa0
    NSMutableDictionary *_revokedPermissionOrigins;	// 168 = 0xa8
    NSMutableOrderedSet *_cachedPermissionURLs;	// 176 = 0xb0
    NSMutableDictionary *_cachedPermissionStates;	// 184 = 0xb8
    NSSet *_manifestPermissions;	// 192 = 0xc0
    NSSet *_manifestOptionalPermissions;	// 200 = 0xc8
    NSSet *_manifestPermissionOrigins;	// 208 = 0xd0
    NSSet *_manifestOptionalPermissionOrigins;	// 216 = 0xd8
    _Bool _didPopulatePermissionsAndOriginsPropertiesFromManifest;	// 224 = 0xe0
    NSArray *_backgroundScriptPaths;	// 232 = 0xe8
    NSString *_backgroundPagePath;	// 240 = 0xf0
    NSString *_backgroundServiceWorkerPath;	// 248 = 0xf8
    NSString *_generatedBackgroundPageContent;	// 256 = 0x100
    _Bool _backgroundPageIsPersistent;	// 264 = 0x108
    _Bool _parsedBackgroundManifest;	// 265 = 0x109
    _Bool _parsedExternallyConnectableManifest;	// 266 = 0x10a
    NSSet *_externallyConnectableMatchPatterns;	// 272 = 0x110
    _Bool _isExtensionBeingLoadedAsPartOfSafariLaunch;	// 280 = 0x118
    NSArray *_injectedContentData;	// 288 = 0x120
    _Bool _parsedContentScriptsManifest;	// 296 = 0x128
    NSArray *_manifestV3WebAccessibleResources;	// 304 = 0x130
    NSArray *_webAccessibleResources;	// 312 = 0x138
    _Bool _parsedWebAccessibleResources;	// 320 = 0x140
    NSUUID *_baseURIHost;	// 328 = 0x148
    NSString *_displayName;	// 336 = 0x150
    NSString *_displayShortName;	// 344 = 0x158
    NSString *_version;	// 352 = 0x160
    NSString *_displayVersion;	// 360 = 0x168
    NSString *_displayDescription;	// 368 = 0x170
    _Bool _parsedManifestDisplayStrings;	// 376 = 0x178
    _Bool _hasCachedPreferencesIcon;	// 377 = 0x179
    UIImage *_preferencesIcon;	// 384 = 0x180
    _Bool _hasCachedIcon;	// 392 = 0x188
    UIImage *_icon;	// 400 = 0x190
    _Bool _hasCachedToolbarImage;	// 408 = 0x198
    UIImage *_toolbarImage;	// 416 = 0x1a0
    NSArray *_commands;	// 424 = 0x1a8
    WBSWebExtensionLocalization *_localization;	// 432 = 0x1b0
    WBSWebExtensionStorageAPISQLiteStore *_localStorage;	// 440 = 0x1b8
    WBSWebExtensionStorageAPISQLiteStore *_syncedStorage;	// 448 = 0x1c0
    NSDictionary *_queuedInstallEventDetails;	// 456 = 0x1c8
    _Bool _shouldFireStartupEvent;	// 464 = 0x1d0
    _Bool _hasFirstNativeMessagePort;	// 465 = 0x1d1
    NSMutableArray *_queuedNativeMessages;	// 472 = 0x1d8
    NSArray *_declarativeNetRequestRulesets;	// 480 = 0x1e0
    _Bool _parsedDeclarativeNetRequestProperties;	// 488 = 0x1e8
    WBSWebExtensionDeclarativeNetRequestSQLiteStore *_dynamicRulesStorage;	// 496 = 0x1f0
    _Bool _hasDynamicDeclarativeNetRequestRules;	// 504 = 0x1f8
    WBSWebExtensionDeclarativeNetRequestSQLiteStore *_sessionRulesStorage;	// 512 = 0x200
    _Bool _hasSessionDeclarativeNetRequestRules;	// 520 = 0x208
    NSMutableArray *_matchedDeclarativeNetRequestRules;	// 528 = 0x210
    _Bool _permissionsAreBeingUpdatedDueToAnExternalChange;	// 536 = 0x218
    NSDate *_lastBackgroundPageLoadDate;	// 544 = 0x220
    _Bool _requestedOptionalAccessToAllHosts;	// 552 = 0x228
    _Bool _serviceWorkerFailedToLoad;	// 553 = 0x229
    _Bool _hasLoadedPermissionsFromStorage;	// 554 = 0x22a
    NSString *_extensionIdentifier;	// 560 = 0x230
    NSUUID *_uniqueIdentifier;	// 568 = 0x238
    NSString *_containingAppBundleIdentifier;	// 576 = 0x240
    WBSWebExtensionToolbarItem *_toolbarItem;	// 584 = 0x248
    WKContentWorld *_extensionWorldForInjectedContent;	// 592 = 0x250
    NSCountedSet *_backgroundPageEventListeners;	// 600 = 0x258
    NSDate *_dateOfLastMessageSentFromAnyPortInBackgroundPage;	// 608 = 0x260
}

+ (_Bool)_isShortVersion:(id)arg1 supportedInSafariVersion:(id)arg2;	// IMP=0x00000000000fa028
+ (void)_mergeKeySupportDictionary:(id)arg1 intoDictionary:(id)arg2;	// IMP=0x00000000000f9ebc
+ (id)_unsupportedValuesInArray:(id)arg1 withSupportedFeatures:(id)arg2 currentSafariShortVersion:(id)arg3;	// IMP=0x00000000000f9961
+ (id)_manifestKeySupportForDictionary:(id)arg1 withSupportedFeatures:(id)arg2 currentSafariShortVersion:(id)arg3;	// IMP=0x00000000000f91e0
+ (id)_unsupportedKeysFromKeySupportDictionary:(id)arg1;	// IMP=0x00000000000f90bd
+ (id)unsupportedManifestKeysInDictionary:(id)arg1 withSupportedFeatures:(id)arg2 currentSafariShortVersion:(id)arg3;	// IMP=0x00000000000f9003
+ (CDUnknownBlockType)_originPatternMatchesAnyPatternInAllowedPatterns:(id)arg1;	// IMP=0x00000000000f5403
+ (id)unlocalizedManifestDictionaryFromData:(id)arg1 withExtensionIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000f390c
+ (id)createWebExtensionError:(long long)arg1 underlyingError:(id)arg2;	// IMP=0x00000000000e7a34
+ (id)createWebExtensionError:(long long)arg1 customLocalizedDescription:(id)arg2;	// IMP=0x00000000000e793b
+ (id)createWebExtensionError:(long long)arg1;	// IMP=0x00000000000e7927
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000e791f
+ (id)generatedBackgroundPageFilename;	// IMP=0x00000000000e7912
+ (id)supportedWebExtensionFeaturesForManifestVersion:(unsigned long long)arg1;	// IMP=0x00000000000e737e
+ (id)supportedPermissionsForExtensionConverter;	// IMP=0x00000000000e72f3
+ (id)supportedWebExtensionPatternSchemes;	// IMP=0x00000000000e723b
+ (id)supportedPermissions;	// IMP=0x00000000000e70dc
- (void).cxx_destruct;	// IMP=0x0000000000102262
@property(nonatomic) _Bool hasLoadedPermissionsFromStorage; // @synthesize hasLoadedPermissionsFromStorage=_hasLoadedPermissionsFromStorage;
@property(retain, nonatomic) NSDate *dateOfLastMessageSentFromAnyPortInBackgroundPage; // @synthesize dateOfLastMessageSentFromAnyPortInBackgroundPage=_dateOfLastMessageSentFromAnyPortInBackgroundPage;
@property(copy, nonatomic) NSCountedSet *backgroundPageEventListeners; // @synthesize backgroundPageEventListeners=_backgroundPageEventListeners;
@property(retain, nonatomic) WKContentWorld *extensionWorldForInjectedContent; // @synthesize extensionWorldForInjectedContent=_extensionWorldForInjectedContent;
@property(readonly, nonatomic) _Bool serviceWorkerFailedToLoad; // @synthesize serviceWorkerFailedToLoad=_serviceWorkerFailedToLoad;
@property(retain, nonatomic) WBSWebExtensionToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;
@property(readonly, nonatomic) NSString *containingAppBundleIdentifier; // @synthesize containingAppBundleIdentifier=_containingAppBundleIdentifier;
@property(readonly, nonatomic) NSUUID *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, nonatomic) NSString *extensionIdentifier; // @synthesize extensionIdentifier=_extensionIdentifier;
@property(nonatomic) _Bool requestedOptionalAccessToAllHosts; // @synthesize requestedOptionalAccessToAllHosts=_requestedOptionalAccessToAllHosts;
@property(readonly, nonatomic) WKWebView *backgroundWebView; // @synthesize backgroundWebView=_backgroundWebView;
@property(readonly, nonatomic) NSString *composedIdentifier; // @synthesize composedIdentifier=_composedIdentifier;
@property(readonly, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;	// IMP=0x0000000000101f47
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;	// IMP=0x0000000000101f09
- (void)_loadBackgroundPageWithURL:(id)arg1;	// IMP=0x0000000000101aa6
- (void)_performTasksAfterBackgroundPageLoads;	// IMP=0x00000000001018e7
- (void)messageReceivedFromContainingAppWithName:(id)arg1 userInfo:(id)arg2;	// IMP=0x00000000001016a8
- (void)nativePortConnectionOpened;	// IMP=0x0000000000101464
- (void)_fireStartupAndInstallEventsIfNecessaryForWebView:(id)arg1;	// IMP=0x00000000001012da
- (void)queueStartupEvent;	// IMP=0x00000000001012c9
- (void)setQueuedInstallEventDetails:(id)arg1;	// IMP=0x000000000010126b
@property(readonly, nonatomic) NSSet *apiNamesPendingApproval;
@property(readonly, nonatomic) NSSet *urlsPendingApproval;
- (void)dispatchPendingWebsiteRequestsMatchingOriginPatterns:(id)arg1;	// IMP=0x0000000000100fe9
- (void)dispatchAllPendingWebsiteRequests;	// IMP=0x0000000000100e3a
- (void)dispatchExpiredPendingWebsiteRequests;	// IMP=0x0000000000100af6
- (_Bool)hasPendingWebsiteRequests;	// IMP=0x0000000000100ad2
- (void)checkPermissionAndPromptIfNecessaryToAccessURLs:(id)arg1 inTab:(id)arg2 options:(unsigned long long)arg3 callingAPIName:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000000100acc
- (void)checkPermissionAndPromptIfNecessaryToAccessURLs:(id)arg1 inTab:(id)arg2 callingAPIName:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000100aa4
- (void)checkPermissionAndPromptIfNecessaryToAccessURL:(id)arg1 inTab:(id)arg2 options:(unsigned long long)arg3 callingAPIName:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000010089f
- (void)checkPermissionAndPromptIfNecessaryToAccessURL:(id)arg1 inTab:(id)arg2 callingAPIName:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000100877
- (_Bool)hasMoreThanOneRequestedOriginNotAlreadyConfigured;	// IMP=0x00000000001007d3
- (long long)permissionStateForURL:(id)arg1 inTab:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x00000000001006ce
- (long long)permissionStateForURL:(id)arg1 inTab:(id)arg2;	// IMP=0x00000000001006b8
- (_Bool)hasPermissionToAccessURL:(id)arg1 inTab:(id)arg2;	// IMP=0x0000000000100698
- (_Bool)hasPermission:(id)arg1 inTab:(id)arg2;	// IMP=0x00000000001005e9
- (void)removeTemporaryPermissionsForTab:(id)arg1;	// IMP=0x0000000000100592
- (_Bool)hasActiveUserGestureInTab:(id)arg1;	// IMP=0x00000000001004b4
- (void)userGesturePerformedInTab:(id)arg1;	// IMP=0x000000000010023d
- (void)previouslyGrantedPermissionOriginsMayHaveBeenChangedExternally:(id)arg1 previouslyRevokedPermissionOrigins:(id)arg2;	// IMP=0x00000000000ff725
- (void)_updateInjectedContentForRevokedOriginPattern:(id)arg1;	// IMP=0x00000000000ff247
- (void)_removeInjectedContentForOriginPattern:(id)arg1;	// IMP=0x00000000000feba5
- (void)_addInjectedContentForGrantedOriginPattern:(id)arg1;	// IMP=0x00000000000fd5ca
- (void)_addInjectedContentForAllGrantedOrigins;	// IMP=0x00000000000fd51f
- (void)updateInjectedContentForChangedRevokedOriginPatterns:(id)arg1;	// IMP=0x00000000000fd35b
- (void)removeInjectedContentForRemovedOriginPatterns:(id)arg1;	// IMP=0x00000000000fd129
- (void)addInjectedContentForGrantedOriginPatterns:(id)arg1;	// IMP=0x00000000000fce0e
- (void)_loadContentScriptsAndStyleSheets;	// IMP=0x00000000000fc096
- (void)updateBackgroundPageClipboardPermission;	// IMP=0x00000000000fbfc7
- (void)fireEvents:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000fbeae
- (void)prepareToFireEvent:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000fbdd8
- (void)_queueEventToFireAfterBackgroundPageLoads:(CDUnknownBlockType)arg1;	// IMP=0x00000000000fbd24
- (void)loadBackgroundPageIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000fbc61
- (void)removeListener:(unsigned long long)arg1;	// IMP=0x00000000000fbbd0
- (void)addListener:(unsigned long long)arg1;	// IMP=0x00000000000fbb3f
- (void)scheduleBackgroundPageToUnload;	// IMP=0x00000000000fb711
- (double)_delayForNonPersistentBackgroundPageBeforeUnloading;	// IMP=0x00000000000fb67b
- (void)_unloadBackgroundWebView;	// IMP=0x00000000000fb4b8
- (void)_loadBackgroundWebView;	// IMP=0x00000000000fafef
- (void)_loadBackgroundWebViewDuringExtensionLoad;	// IMP=0x00000000000fad7f
- (_Bool)webViewIsDisplayingFullPageExtensionContent:(id)arg1;	// IMP=0x00000000000fac54
- (void)addWebViewToRelatedWebViewPool:(id)arg1;	// IMP=0x00000000000fabc6
@property(readonly, nonatomic) NSArray *allRelatedWebViews;
@property(readonly, nonatomic) WKWebView *relatedWebView;
@property(readonly, nonatomic) NSURL *backgroundPageURL;
- (void)_hidePermissionBanner;	// IMP=0x00000000000faa41
- (void)_validateToolbarItemInAllWindows;	// IMP=0x00000000000faa3b
- (void)_unloadToolbarItem;	// IMP=0x00000000000faa35
- (void)_loadToolbarItem;	// IMP=0x00000000000faa2f
- (_Bool)_applicationIsActive;	// IMP=0x00000000000faa27
- (id)_backgroundWebViewConfiguration;	// IMP=0x00000000000faa1f
- (long long)extensionSupportsSafariShortVersion:(id)arg1;	// IMP=0x00000000000fa481
- (long long)extensionSupportsCurrentSafariVersion;	// IMP=0x00000000000fa3ea
- (id)_maximumSafariVersionString;	// IMP=0x00000000000fa256
- (id)_minimumSafariVersionString;	// IMP=0x00000000000fa0c2
@property(readonly, nonatomic) NSString *contentSecurityPolicy;
- (void)_populatePermissionsAndOriginsPropertiesIfNeeded;	// IMP=0x00000000000f7fe6
@property(copy, nonatomic) NSDictionary *revokedPermissionOrigins;
@property(copy, nonatomic) NSDictionary *grantedPermissionOrigins;
@property(readonly, nonatomic) NSSet *manifestOptionalPermissionOrigins;
@property(readonly, nonatomic) NSSet *manifestPermissionOrigins;
@property(readonly, nonatomic) NSSet *manifestAccessibleOrigins;
@property(copy, nonatomic) NSDictionary *revokedPermissions;
@property(copy, nonatomic) NSDictionary *grantedPermissions;
- (void)_removeExpiredRevokedPermissionsAndPostNotification:(_Bool)arg1;	// IMP=0x00000000000f798c
- (void)_removeExpiredGrantedPermissionsAndPostNotification:(_Bool)arg1;	// IMP=0x00000000000f7951
- (void)_removeExpiredPermissions:(id)arg1 origins:(id)arg2 notificationName:(id)arg3;	// IMP=0x00000000000f75e0
@property(readonly, nonatomic) NSSet *manifestOptionalPermissions;
@property(readonly, nonatomic) NSSet *manifestPermissions;
@property(readonly, nonatomic) NSSet *requestedPermissionOriginsNotAlreadyConfigured;
@property(readonly, nonatomic) NSSet *requestedPermissionsNotAlreadyConfigured;
@property(readonly, nonatomic) NSDictionary *configuredPermissionOrigins;
@property(readonly, nonatomic) NSDictionary *configuredPermissions;
- (id)_configuredDictionaryWithRequested:(id)arg1 granted:(id)arg2 revoked:(id)arg3;	// IMP=0x00000000000f6d50
@property(readonly, nonatomic) NSSet *currentAccessibleOrigins;
@property(readonly, nonatomic) NSSet *currentPermissionOrigins;
@property(readonly, nonatomic) NSSet *currentPermissions;
- (void)removeGrantedAndRevokedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(_Bool)arg3;	// IMP=0x00000000000f6a0b
- (void)removeRevokedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(_Bool)arg3;	// IMP=0x00000000000f69d6
- (void)removeGrantedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(_Bool)arg3;	// IMP=0x00000000000f69a1
- (void)_removePermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(_Bool)arg3 fromPermissions:(id)arg4 fromOrigins:(id)arg5 notificationName:(id)arg6;	// IMP=0x00000000000f62f0
- (void)_clearCachedPermissions;	// IMP=0x00000000000f62a9
- (void)revokePermissions:(id)arg1 origins:(id)arg2 expirationDate:(id)arg3;	// IMP=0x00000000000f5e5c
- (void)grantPermissions:(id)arg1 origins:(id)arg2 expirationDate:(id)arg3;	// IMP=0x00000000000f5a0f
- (id)_userInfoDictionaryForPermissionsNotificationWithPermissions:(id)arg1 origins:(id)arg2;	// IMP=0x00000000000f58e1
- (_Bool)verifyRequestedPermissions:(id)arg1 origins:(id)arg2 errorMessage:(id *)arg3;	// IMP=0x00000000000f56aa
- (_Bool)hasPermissions:(id)arg1 origins:(id)arg2;	// IMP=0x00000000000f555f
@property(readonly, nonatomic) _Bool requestsAccessToAllHosts;
- (_Bool)hasPermissionToAccessAllHosts;	// IMP=0x00000000000f5310
- (_Bool)hasPermissionToAccessAllURLs;	// IMP=0x00000000000f5262
- (long long)permissionStateForURL:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000000f4774
- (long long)permissionStateForURL:(id)arg1;	// IMP=0x00000000000f475f
- (_Bool)hasPermissionToAccessURL:(id)arg1;	// IMP=0x00000000000f4740
- (_Bool)hasPermission:(id)arg1;	// IMP=0x00000000000f46b4
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000f4535
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000f3f20
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000f3c57
- (id)_actionDictionary;	// IMP=0x00000000000f3b89
@property(readonly, nonatomic) NSDictionary *userVisiblePermissions;
@property(readonly, copy, nonatomic) NSArray *corsDisablingPatterns;
@property(readonly, nonatomic) NSURL *optionsPageURL;
- (id)extensionStateWithPreviousState:(id)arg1;	// IMP=0x00000000000f2af9
@property(readonly, copy, nonatomic) NSArray *matchedDeclarativeNetRequestRules;
- (_Bool)purgeMatchedRulesOlderThan:(id)arg1;	// IMP=0x00000000000f2988
- (void)recordContentRuleListAction:(id)arg1 forURL:(id)arg2 inTab:(id)arg3;	// IMP=0x00000000000f282f
- (void)updateDeclarativeNetRequestSessionRulesByRemovingRules:(id)arg1 addRules:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f2759
- (void)getDeclarativeNetRequestSessionRulesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000f26cf
- (id)sessionRulesStorage;	// IMP=0x00000000000f266e
- (void)updateDeclarativeNetRequestDynamicRulesByRemovingRules:(id)arg1 addRules:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f2598
- (void)getDeclarativeNetRequestDynamicRulesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000f250e
- (id)dynamicRulesStorage;	// IMP=0x00000000000f24b0
@property(readonly, nonatomic) _Bool hasDynamicOrSessionDeclarativeNetRequestRules;
- (void)_updateDeclarativeNetRequestRulesInStorage:(id)arg1 byRemovingRules:(id)arg2 addRules:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000f1a30
- (void)_getDeclarativeNetRequestRulesFromStorage:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f17f1
- (id)_storageTypeForRulesStorage:(id)arg1;	// IMP=0x00000000000f17c3
@property(readonly, nonatomic) _Bool usesDeclarativeNetRequest;
@property(readonly, nonatomic) NSArray *declarativeNetRequestRulesets;
@property(readonly, nonatomic) WBSWebExtensionAlarmState *alarmState; // @synthesize alarmState=_alarmState;
@property(readonly, nonatomic) WBSWebExtensionContextMenuItemManager *contextMenuItemManager; // @synthesize contextMenuItemManager=_contextMenuItemManager;
- (id)imageForBestIconInIconsDictionary:(id)arg1 idealPointSize:(long long)arg2 withBaseURI:(id)arg3 validateAndReadResourceHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000f1526
- (id)imageForBestIconInIconsDictionary:(id)arg1 idealPointSize:(long long)arg2;	// IMP=0x00000000000f146e
- (id)pathForBestIconInIconsDictionary:(id)arg1 idealPixelSize:(long long)arg2;	// IMP=0x00000000000f13b5
- (id)bestIconSizeKeyInIconsDictionary:(id)arg1 idealPixelSize:(long long)arg2;	// IMP=0x00000000000f0ce2
- (id)imageForPath:(id)arg1 withBaseURI:(id)arg2 validateAndReadResourceHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f0960
@property(readonly, copy, nonatomic) NSString *toolbarPopupPath;
@property(readonly, copy, nonatomic) NSString *toolbarLabel;
- (id)toolbarImageWithBaseURI:(id)arg1 idealPointSize:(long long)arg2 validateAndReadResourceHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f04c0
- (id)extensionIconWithBaseURI:(id)arg1 idealPointSize:(long long)arg2 validateAndReadResourceHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f021d
@property(readonly, nonatomic) NSArray *commands;
@property(readonly, nonatomic) _Bool usesManifestVersion3;
@property(readonly, nonatomic) long long manifestVersion;
- (_Bool)shouldShowToolbarItemForTab:(id)arg1;	// IMP=0x00000000000ef15c
@property(readonly, nonatomic) _Bool hasAction;
@property(readonly, nonatomic) _Bool hasCommands;
@property(readonly, nonatomic) _Bool hasPageAction;
@property(readonly, nonatomic) _Bool hasBrowserAction;
- (id)_serviceWorkerErrorsFromErrorStrings:(id)arg1;	// IMP=0x00000000000eed6a
- (id)_createDeclarativeNetRequestErrors:(id)arg1;	// IMP=0x00000000000eea23
- (void)_compileDeclarativeNetRequestRules:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000eea1d
- (void)loadDeclarativeNetRequestRulesetsIfNeededWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ede5e
- (void)_applyModificationsToDeclarativeNetRequestRulesetsFromUpdateEnabledRulesets;	// IMP=0x00000000000edb07
- (void)_populateDeclarativeNetRequestPropertiesIfNeeded;	// IMP=0x00000000000ed301
- (void)_populateDisplayStringsIfNeeded;	// IMP=0x00000000000ecfca
@property(readonly, nonatomic) NSSet *externallyConnectableMatchPatterns;
@property(readonly, nonatomic) NSArray *externallyConnectableMatchPatternStrings;
- (void)_populateExternallyConnectablePropertiesIfNeeded;	// IMP=0x00000000000ec5c3
- (void)_populateContentScriptPropertiesIfNeeded;	// IMP=0x00000000000ec1a9
- (void)_populateBackgroundPropertiesIfNeeded;	// IMP=0x00000000000ebb52
- (void)_recordManifestErrorIfNecessary:(id)arg1;	// IMP=0x00000000000eba68
- (id)_containingAppIcon;	// IMP=0x00000000000eb8fc
- (CDUnknownBlockType)_validateAndReadResourceBlock;	// IMP=0x00000000000eb782
@property(readonly, nonatomic) _Bool shouldShowInWebsitePreferences;
- (void)unload;	// IMP=0x00000000000eb54b
- (void)load;	// IMP=0x00000000000eb3a8
- (_Bool)canLoadWithErrorString:(id *)arg1;	// IMP=0x00000000000eb2d1
- (_Bool)canLoad;	// IMP=0x00000000000eb2bd
@property(readonly, nonatomic) WBSWebExtensionStorageAPISQLiteStore *syncedStorage;
@property(readonly, nonatomic) WBSWebExtensionStorageAPISQLiteStore *localStorage;
- (void)invalidateStorage;	// IMP=0x00000000000eb0d3
- (void)populateAllPropertiesIfNeededToRecordManifestErrors;	// IMP=0x00000000000eaf9b
@property(readonly, nonatomic) NSArray *manifestErrors;
- (void)_populateWebAccessibleResources;	// IMP=0x00000000000ea649
- (_Bool)isAccessibleResourceURL:(id)arg1 fromWebPageWithURL:(id)arg2;	// IMP=0x00000000000ea0c0
@property(readonly, nonatomic) NSArray *webAccessibleResources;
@property(readonly, nonatomic) NSURL *newTabOverridePageURL;
- (_Bool)hasInjectedContentDataForURL:(id)arg1;	// IMP=0x00000000000e9a4d
@property(readonly, nonatomic) NSArray *injectedContentData;
- (id)urlForOptionsPageWithBaseURI:(id)arg1;	// IMP=0x00000000000e9868
@property(readonly, nonatomic) _Bool backgroundPageIsServiceWorker;
@property(readonly, nonatomic) _Bool backgroundPageIsPersistent;
@property(readonly, nonatomic) NSString *generatedBackgroundPageContent;
- (id)urlForBackgroundPageWithBaseURI:(id)arg1;	// IMP=0x00000000000e950e
@property(readonly, nonatomic) UIImage *toolbarImage;
@property(readonly, nonatomic) UIImage *icon;
@property(readonly, nonatomic) UIImage *preferencesIcon;
@property(readonly, nonatomic) NSString *version;
@property(readonly, nonatomic) NSString *processDisplayName;
@property(readonly, nonatomic) NSString *displayDescription;
@property(readonly, nonatomic) NSString *displayVersion;
@property(readonly, nonatomic) NSString *displayShortName;
@property(readonly, nonatomic) NSString *displayName;
@property(readonly, nonatomic) NSUUID *identifier;
@property(readonly, nonatomic) NSString *runtimeIdentifier;
@property(readonly, nonatomic) WBSWebExtensionLocalization *localization;
@property(readonly, copy, nonatomic) NSDictionary *manifest;
- (id)manifestDictionary;	// IMP=0x00000000000e89f0
@property(readonly, nonatomic) _Bool manifestParsedSuccessfully;
@property(readonly, copy) NSString *description;
- (id)baseURIHost;	// IMP=0x00000000000e8945
- (id)initWithManifestDictionary:(id)arg1 extensionIdentifier:(id)arg2 uniqueIdentifier:(id)arg3;	// IMP=0x00000000000e872e
- (id)initWithExtension:(id)arg1 extensionBundle:(id)arg2 extensionIdentifier:(id)arg3 uniqueIdentifier:(id)arg4 baseURIHost:(id)arg5;	// IMP=0x00000000000e84f9
- (id)initWithExtension:(id)arg1;	// IMP=0x00000000000e81f8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

