//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <WorkflowKit/WFDatabaseProvider-Protocol.h>

@class NSHashTable, NSManagedObjectContext, NSPersistentStoreDescription, NSString, NSURL, WFCoreDataChangeNotification;
@protocol OS_dispatch_queue;

@interface WFDatabase : NSObject <WFDatabaseProvider>
{
    _Bool _destroysOnDeallocation;	// 8 = 0x8
    struct os_unfair_lock_s _observersLock;	// 12 = 0xc
    NSURL *_fileURL;	// 16 = 0x10
    long long _transactionCount;	// 24 = 0x18
    NSPersistentStoreDescription *_persistentStoreDescription;	// 32 = 0x20
    WFCoreDataChangeNotification *_pendingChangeNotification;	// 40 = 0x28
    NSHashTable *_resultsToNotify;	// 48 = 0x30
    NSHashTable *_observers;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 64 = 0x40
    NSManagedObjectContext *_suggestionsContext;	// 72 = 0x48
    NSManagedObjectContext *_context;	// 80 = 0x50
}

+ (id)createDatabaseForTesting;	// IMP=0x00000000002675a4
+ (void)setDefaultDatabase:(id)arg1;	// IMP=0x0000000000267590
+ (id)defaultDatabase;	// IMP=0x000000000026757f
- (void).cxx_destruct;	// IMP=0x00000000002650e7
@property(retain, nonatomic) NSManagedObjectContext *context; // @synthesize context=_context;
@property(retain, nonatomic) NSManagedObjectContext *suggestionsContext; // @synthesize suggestionsContext=_suggestionsContext;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(readonly, nonatomic) struct os_unfair_lock_s observersLock; // @synthesize observersLock=_observersLock;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSHashTable *resultsToNotify; // @synthesize resultsToNotify=_resultsToNotify;
@property(retain, nonatomic) WFCoreDataChangeNotification *pendingChangeNotification; // @synthesize pendingChangeNotification=_pendingChangeNotification;
@property(retain, nonatomic) NSPersistentStoreDescription *persistentStoreDescription; // @synthesize persistentStoreDescription=_persistentStoreDescription;
@property(nonatomic) long long transactionCount; // @synthesize transactionCount=_transactionCount;
@property(nonatomic) _Bool destroysOnDeallocation; // @synthesize destroysOnDeallocation=_destroysOnDeallocation;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void)updateAppDescriptor:(id)arg1 atKey:(id)arg2 actionUUID:(id)arg3 actionIndex:(id)arg4 actionIdentifier:(id)arg5 workflowID:(id)arg6;	// IMP=0x0000000000264e74
- (void)removeRunEventsWithoutAssociatedShortcuts;	// IMP=0x0000000000264d17
- (void)addSyncHashesToShortcutsIfNecessary;	// IMP=0x0000000000264bba
- (void)addActionCountsToShortcutsIfNecessary;	// IMP=0x0000000000264a5d
- (id)visiblePredicate;	// IMP=0x000000000026491e
- (id)tombstonedShortcutsPredicate;	// IMP=0x00000000002648e3
- (_Bool)reloadRecord:(id)arg1 withDescriptor:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002647c9
- (_Bool)saveRecord:(id)arg1 withDescriptor:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000264694
- (Class)recordClassForObjectType:(unsigned long long)arg1;	// IMP=0x0000000000264627
- (id)missingErrorForDescriptor:(id)arg1;	// IMP=0x00000000002643ff
- (_Bool)startObservingChangesForResult:(id)arg1;	// IMP=0x000000000026433e
- (unsigned long long)countForResult:(id)arg1;	// IMP=0x0000000000264280
- (id)descriptorsForResult:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002641d2
- (void)notifyResultsAboutChange:(id)arg1;	// IMP=0x0000000000263c5d
- (void)remoteContextDidSave:(id)arg1;	// IMP=0x0000000000263a6c
- (void)contextDidSave:(id)arg1;	// IMP=0x0000000000263366
- (id)objectOfClass:(Class)arg1 withIdentifier:(id)arg2 forKey:(id)arg3 createIfNecessary:(_Bool)arg4 properties:(id)arg5;	// IMP=0x00000000002630d2
- (id)recordWithDescriptor:(id)arg1 properties:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000262f77
- (id)recordWithDescriptor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000262f60
- (void)accessStorageForDescriptor:(id)arg1 forWriting:(_Bool)arg2 readingRecordProperties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4 withError:(id *)arg5;	// IMP=0x0000000000262c18
- (id)objectForDescriptor:(id)arg1 properties:(id)arg2 createIfNecessary:(_Bool)arg3;	// IMP=0x0000000000262ace
- (id)objectForDescriptor:(id)arg1 properties:(id)arg2;	// IMP=0x0000000000262ab9
- (id)performSaveOperationWithBlock:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x0000000000262a0b
- (id)performOperationWithBlock:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x000000000026282f
- (void)performTransactionWithBlock:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x000000000026278d
- (void)removeObjectObserver:(id)arg1;	// IMP=0x0000000000262715
- (void)addObjectObserver:(id)arg1;	// IMP=0x000000000026269d
- (_Bool)mergeAutomationsAndShortcuts;	// IMP=0x000000000026264b
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000026258d
- (void)dealloc;	// IMP=0x000000000026244f
- (id)initWithStoreDescription:(id)arg1 runMigrationsIfNecessary:(_Bool)arg2 useLockFile:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000002618ca
- (_Bool)isReference:(id)arg1 allowedToRunOnDomain:(id)arg2;	// IMP=0x0000000000107862
- (void)setTrustedToRunScripts:(_Bool)arg1 forReference:(id)arg2 onDomain:(id)arg3;	// IMP=0x00000000001076bb
- (id)databaseWithError:(id *)arg1;	// IMP=0x00000000001107e5
- (id)mostRunOrLatestImportedVisibleShortcut;	// IMP=0x000000000011625d
- (_Bool)saveContextOrRollback:(id)arg1 error:(id *)arg2;	// IMP=0x000000000018b4ba
- (id)performSuggestionsOperationWithBlock:(CDUnknownBlockType)arg1 error:(id *)arg2;	// IMP=0x000000000018b2f8
- (void)deleteShortcutSuggestionsFromApps:(id)arg1;	// IMP=0x000000000018b1c6
- (id)allShortcutSuggestions;	// IMP=0x000000000018b0bc
- (id)shortcutSuggestionsForAllAppsWithLimit:(unsigned long long)arg1 shortcutAvailability:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000018b053
- (id)shortcutSuggestionsForAppWithBundleIdentifier:(id)arg1 shortcutAvailability:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000018af23
- (_Bool)setShortcutSuggestions:(id)arg1 forAppWithBundleIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000018ac47
- (id)_syncTokenWithError:(id *)arg1;	// IMP=0x00000000001ca18e
- (id)syncToken;	// IMP=0x00000000001ca131
- (void)setSyncToken:(id)arg1;	// IMP=0x00000000001c9fc1
- (void)clearTombstonesAndSyncState;	// IMP=0x00000000001c9f00
- (id)generateAndPersistUUIDForActionWithIdentifier:(id)arg1 actionIndex:(unsigned long long)arg2 workflowIdentifier:(id)arg3;	// IMP=0x00000000001e7194
- (void)deleteAllSmartPromptStateDataForReference:(id)arg1;	// IMP=0x00000000001e7024
- (void)deleteSmartPromptStatesForDeletedActionUUIDs:(id)arg1 forReference:(id)arg2;	// IMP=0x00000000001e6e8e
- (void)_deleteSmartPromptState:(id)arg1 forReference:(id)arg2;	// IMP=0x00000000001e6b83
- (void)deleteSmartPromptState:(id)arg1 forReference:(id)arg2;	// IMP=0x00000000001e69e6
- (void)_updateDeletionAuthorizationsToMatchAuthorization:(id)arg1 forWorkflow:(id)arg2;	// IMP=0x00000000001e65ce
- (void)_updateStatesToMatchSmartPromptState:(id)arg1 forWorkflow:(id)arg2;	// IMP=0x00000000001e5dee
- (void)_saveSmartPromptStateData:(id)arg1 actionUUID:(id)arg2 forWorkflow:(id)arg3;	// IMP=0x00000000001e5863
- (_Bool)saveSmartPromptStateData:(id)arg1 actionUUID:(id)arg2 reference:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001e56e4
- (id)allStatesDataForReference:(id)arg1 actionUUID:(id)arg2;	// IMP=0x00000000001e5548
- (id)deletionAuthorizationStatesForReference:(id)arg1;	// IMP=0x00000000001e54ef
- (id)currentDeletionAuthorizationStatusWithContentItemClassName:(id)arg1 actionUUID:(id)arg2 actionIdentifier:(id)arg3 actionIndex:(unsigned long long)arg4 count:(unsigned long long)arg5 reference:(id)arg6;	// IMP=0x00000000001e4f52
- (id)smartPromptStatesForReference:(id)arg1 actionUUID:(id)arg2;	// IMP=0x00000000001e4efb
- (id)smartPromptStatesForReference:(id)arg1;	// IMP=0x00000000001e4ee7
- (void)saveSmartPromptStatesForInsertedAction:(id)arg1 contentDestination:(id)arg2 reference:(id)arg3;	// IMP=0x00000000001e4aa2
- (void)createSmartPromptStatesForInsertedActions:(id)arg1 forReference:(id)arg2;	// IMP=0x00000000001e466f
- (id)migrateAccountStateToAppOriginIfNecessary:(id)arg1 reference:(id)arg2 actionUUID:(id)arg3;	// IMP=0x00000000001e43e7
- (_Bool)shouldPromptForCurrentContentItemCount:(unsigned long long)arg1 previousCount:(unsigned long long)arg2;	// IMP=0x00000000001e4304
- (id)performDatabaseLookupForState:(id)arg1 actionUUID:(id)arg2 reference:(id)arg3;	// IMP=0x00000000001e3367
- (id)fetchFirstAllowedStateMatching:(id)arg1 actionUUID:(id)arg2 forReference:(id)arg3;	// IMP=0x00000000001e3298
- (id)approvalResultForContentAttributionSet:(id)arg1 contentDestination:(id)arg2 actionUUID:(id)arg3 actionIdentifier:(id)arg4 actionIndex:(unsigned long long)arg5 reference:(id)arg6 allowedOnceStates:(id)arg7;	// IMP=0x00000000001e1f94
- (id)conflictForWorkflowReference:(id)arg1;	// IMP=0x000000000024d9ab
- (id)allShortcutBookmarks;	// IMP=0x0000000000275f68
- (_Bool)deleteAllBookmarksForWorkflowID:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000275ec2
- (id)bookmarksForWorkflowID:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000275e14
- (id)bookmarkDataForWorkflowID:(id)arg1 path:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000275d3f
- (id)createBookmarkWithWorkflowID:(id)arg1 path:(id)arg2 bookmarkData:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000275c3b
- (void)deleteDonationsForShortcutWithIdentifier:(id)arg1;	// IMP=0x00000000002799e7
- (id)duplicateNameErrorWithName:(id)arg1;	// IMP=0x000000000027987c
- (id)validateWorkflowName:(id)arg1 forCreation:(_Bool)arg2 overwriting:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000279512
- (id)duplicateReference:(id)arg1 newName:(id)arg2 error:(id *)arg3;	// IMP=0x000000000027943d
- (id)_createWorkflowWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000027938f
- (id)suggestedWorkflowNameForName:(id)arg1;	// IMP=0x0000000000279091
- (void)setConflictingReference:(id)arg1 forReference:(id)arg2;	// IMP=0x0000000000278ef4
- (_Bool)hasConflictingReferenceForReference:(id)arg1;	// IMP=0x0000000000278e36
- (id)localConflictingReferenceForReference:(id)arg1;	// IMP=0x0000000000278d90
- (id)remoteConflictingReferenceForReference:(id)arg1;	// IMP=0x0000000000278cea
- (id)conflictingReferenceForReference:(id)arg1;	// IMP=0x0000000000278c44
- (_Bool)deleteReference:(id)arg1 tombstone:(_Bool)arg2 deleteConflictIfPresent:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000278a48
- (_Bool)deleteReference:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002789d7
- (id)renameReference:(id)arg1 to:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002784d0
- (id)duplicateReference:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002783a9
- (_Bool)createWorkflowWithIdentifier:(id)arg1 record:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000278259
- (id)createWorkflowWithOptions:(id)arg1 nameCollisionBehavior:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000278131
- (id)createWorkflowWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x000000000027811a
- (id)createWorkflowWithError:(id *)arg1;	// IMP=0x00000000002780bd
- (_Bool)hasConflictWithName:(id)arg1;	// IMP=0x0000000000277fce
- (_Bool)hasVisibleWorkflowsWithName:(id)arg1;	// IMP=0x0000000000277f86
- (id)uniqueVisibleReferenceForWorkflowName:(id)arg1;	// IMP=0x0000000000277f17
- (id)referenceForWorkflowID:(id)arg1;	// IMP=0x0000000000277df8
- (id)recentlyRunShortcuts;	// IMP=0x0000000000277c3e
- (id)recentlyModifiedShortcuts;	// IMP=0x0000000000277a7d
- (id)deletedWorkflows;	// IMP=0x0000000000277927
- (id)visibleReferencesForWorkflowName:(id)arg1;	// IMP=0x0000000000277881
- (id)allShortcuts;	// IMP=0x0000000000277747
- (id)workflowsWithTombstonedConflicts;	// IMP=0x00000000002775ff
- (id)sortedVisibleWorkflowsWithAssociatedAppBundleIdentifier:(id)arg1;	// IMP=0x0000000000277406
- (id)sortedVisibleWorkflowsByName;	// IMP=0x00000000002772cf
- (id)workflowFetchRequestWithCollectionID:(id)arg1 includeTombstones:(_Bool)arg2 limit:(unsigned long long)arg3;	// IMP=0x00000000002770bc
- (id)sortedWorkflowsWithQuery:(id)arg1;	// IMP=0x0000000000276b81
- (id)sortedVisibleWorkflowsWithType:(id)arg1;	// IMP=0x0000000000276af7
- (unsigned long long)countOfAllVisibleWorkflows;	// IMP=0x00000000002769a1
- (id)workflowResultWithFetchOperation:(id)arg1;	// IMP=0x00000000002768fa
- (id)workflowResultWithFetchRequest:(id)arg1;	// IMP=0x0000000000276870
- (id)allConfiguredTriggersNeedingRunningNotifications;	// IMP=0x000000000030067b
- (id)sortedTriggerEventsWithConfirmationOnly:(_Bool)arg1;	// IMP=0x0000000000300505
- (void)setConfirmedForTriggerEventWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000300467
- (id)triggerEventForIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000300334
- (id)createTriggerEventWithTriggerID:(id)arg1 eventInfo:(id)arg2 confirmed:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000300258
- (id)configuredTriggerForTriggerID:(id)arg1;	// IMP=0x000000000030012c
- (id)triggerResultWithFetchRequest:(id)arg1;	// IMP=0x0000000000300091
- (id)allConfiguredTriggers;	// IMP=0x00000000002fff54
- (id)configuredTriggersForWorkflowID:(id)arg1;	// IMP=0x00000000002ffdef
- (id)createTriggerWithRecord:(id)arg1 workflow:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002ffd17
- (id)visibleCollectionForFolderName:(id)arg1;	// IMP=0x0000000000331476
- (id)validateFolderName:(id)arg1 forCollection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000331102
- (id)collectionResultWithFetchRequest:(id)arg1;	// IMP=0x000000000033105b
- (id)orphanedShortcuts;	// IMP=0x0000000000330ffe
- (id)orphanedWorkflowsPredicate;	// IMP=0x0000000000330fd2
- (id)orphanedFolders;	// IMP=0x0000000000330f75
- (id)orphanedFoldersPredicate;	// IMP=0x0000000000330f08
- (id)suggestedFolderNameForName:(id)arg1;	// IMP=0x0000000000330bf4
- (id)collectionRecordForCollectionIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x0000000000330b0c
- (id)deletedFolders;	// IMP=0x0000000000330970
- (id)allCollections;	// IMP=0x00000000003307e3
- (_Bool)moveCollections:(id)arg1 toIndexes:(id)arg2 ofCollectionWithIdentifier:(id)arg3 error:(id *)arg4;	// IMP=0x000000000033063b
- (_Bool)moveCollections:(id)arg1 toIndexes:(id)arg2 error:(id *)arg3;	// IMP=0x000000000033061f
- (_Bool)moveCollections:(id)arg1 toIndex:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000330562
- (_Bool)removeReferences:(id)arg1 fromCollectionWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000330463
- (_Bool)prependReferences:(id)arg1 toCollectionWithType:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000330377
- (_Bool)prependReferences:(id)arg1 toCollection:(id)arg2 error:(id *)arg3;	// IMP=0x00000000003302b9
- (_Bool)moveReferences:(id)arg1 toIndexes:(id)arg2 ofCollection:(id)arg3 visible:(_Bool)arg4 error:(id *)arg5;	// IMP=0x000000000033018f
- (_Bool)moveReferences:(id)arg1 toIndex:(long long)arg2 ofCollection:(id)arg3 visible:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000330070
- (_Bool)moveReferences:(id)arg1 toIndexes:(id)arg2 ofCollection:(id)arg3 error:(id *)arg4;	// IMP=0x000000000033004b
- (_Bool)moveReferences:(id)arg1 toIndex:(long long)arg2 ofCollection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000330026
- (id)sortedVisibleWorkflowsInCollection:(id)arg1;	// IMP=0x000000000032ff59
- (id)collectionWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x000000000032feac
- (id)collectionWithIdentifier:(id)arg1;	// IMP=0x000000000032fe06
- (id)collectionForWorkflowType:(id)arg1;	// IMP=0x000000000032fd60
- (id)folderForWorkflowReference:(id)arg1;	// IMP=0x000000000032fc58
- (id)collectionsForWorkflowReference:(id)arg1;	// IMP=0x000000000032fbb2
- (id)updateFolder:(id)arg1 newName:(id)arg2 newIcon:(unsigned short)arg3 error:(id *)arg4;	// IMP=0x000000000032fad5
- (id)createFolderWithName:(id)arg1 icon:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x000000000032fa1f
- (id)sortedVisibleFolders;	// IMP=0x000000000032f8d0
- (unsigned long long)countOfWorkflowsInAFolder;	// IMP=0x000000000032f6a3
- (id)latestRunEvent;	// IMP=0x0000000000334b94
- (id)triggerRunEventsInTheLastWeek;	// IMP=0x0000000000334a5f
- (id)sortedRunEventsForTriggerID:(id)arg1;	// IMP=0x00000000003348f6
- (id)sortedRunEventsWithSource:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;	// IMP=0x000000000033463a
- (id)sortedRunEventsWithSource:(id)arg1;	// IMP=0x0000000000334623
- (void)setOutcome:(long long)arg1 forRunEvent:(id)arg2;	// IMP=0x00000000003344ae
- (id)logRunOfWorkflow:(id)arg1 atDate:(id)arg2 withIdentifier:(id)arg3 source:(id)arg4 triggerID:(id)arg5;	// IMP=0x0000000000334265
- (id)logRunOfWorkflow:(id)arg1 withSource:(id)arg2 triggerID:(id)arg3;	// IMP=0x000000000033414c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

