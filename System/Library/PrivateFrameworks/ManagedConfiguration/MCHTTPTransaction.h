//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ManagedConfiguration/NSURLSessionDataDelegate-Protocol.h>

@class NSArray, NSData, NSError, NSMutableData, NSString, NSURL, NSURLSession;
@protocol OS_dispatch_semaphore;

@interface MCHTTPTransaction : NSObject <NSURLSessionDataDelegate>
{
    NSURL *_requestURL;	// 8 = 0x8
    NSString *_method;	// 16 = 0x10
    double _timeout;	// 24 = 0x18
    NSString *_userAgent;	// 32 = 0x20
    NSString *_contentType;	// 40 = 0x28
    NSData *_data;	// 48 = 0x30
    struct __SecIdentity *_identity;	// 56 = 0x38
    NSString *_CMSSignatureHeaderName;	// 64 = 0x40
    NSURL *_currentURL;	// 72 = 0x48
    NSURL *_permanentlyRedirectedURL;	// 80 = 0x50
    _Bool _rememberData;	// 88 = 0x58
    NSMutableData *_responseData;	// 96 = 0x60
    long long _statusCode;	// 104 = 0x68
    NSError *_error;	// 112 = 0x70
    NSURLSession *_session;	// 120 = 0x78
    NSObject<OS_dispatch_semaphore> *_doneSema;	// 128 = 0x80
    _Bool _pinningRevocationCheckRequired;	// 136 = 0x88
    NSArray *_pinnedSecCertificateRefs;	// 144 = 0x90
}

+ (id)transactionWithURL:(id)arg1 method:(id)arg2;	// IMP=0x0000000000049eb1
- (void).cxx_destruct;	// IMP=0x000000000004b6e9
@property(readonly, nonatomic) long long statusCode; // @synthesize statusCode=_statusCode;
@property(readonly, retain, nonatomic) NSURL *permanentlyRedirectedURL; // @synthesize permanentlyRedirectedURL=_permanentlyRedirectedURL;
@property(readonly, retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSString *CMSSignatureHeaderName; // @synthesize CMSSignatureHeaderName=_CMSSignatureHeaderName;
@property(readonly, retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(nonatomic) _Bool pinningRevocationCheckRequired; // @synthesize pinningRevocationCheckRequired=_pinningRevocationCheckRequired;
@property(retain, nonatomic) NSArray *pinnedSecCertificateRefs; // @synthesize pinnedSecCertificateRefs=_pinnedSecCertificateRefs;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(retain, nonatomic) NSString *method; // @synthesize method=_method;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_requestURL;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x000000000004b5af
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000004b406
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x000000000004b1a6
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000004ad5f
- (_Bool)_shouldAllowTrustWithPinning:(struct __SecTrust *)arg1 forHost:(id)arg2;	// IMP=0x000000000004a990
- (_Bool)_shouldAllowTrust:(struct __SecTrust *)arg1 forHost:(id)arg2;	// IMP=0x000000000004a836
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000004a6b0
- (void)performCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000004a3dd
- (void)performSynchronously;	// IMP=0x000000000004a221
- (void)_beginTransaction;	// IMP=0x0000000000049f60
- (void)dealloc;	// IMP=0x0000000000049f21
- (id)initWithURL:(id)arg1 method:(id)arg2;	// IMP=0x0000000000049df8
- (void)setIdentity:(struct __SecIdentity *)arg1;	// IMP=0x0000000000049dc3
- (struct __SecIdentity *)copyIdentity;	// IMP=0x0000000000049d9d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

