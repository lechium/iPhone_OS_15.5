//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreDuetContext/NSXPCListenerDelegate-Protocol.h>
#import <CoreDuetContext/_CDXPCEventPublisherDelegate-Protocol.h>

@class NSMutableDictionary, NSMutableSet, NSString, NSXPCListener, _CDInMemoryUserContext, _CDXPCEventPublisher;
@protocol OS_dispatch_queue, _CDContextPersisting;

@interface _CDUserContextService : NSObject <NSXPCListenerDelegate, _CDXPCEventPublisherDelegate>
{
    _Bool _remoteDevicesHaveBeenActivated;	// 8 = 0x8
    id <_CDContextPersisting> _persistence;	// 16 = 0x10
    _CDInMemoryUserContext *_userContext;	// 24 = 0x18
    NSMutableSet *_clients;	// 32 = 0x20
    NSXPCListener *_listener;	// 40 = 0x28
    NSMutableSet *_openRegistrations;	// 48 = 0x30
    NSMutableSet *_firedRegistrations;	// 56 = 0x38
    NSMutableDictionary *_firedRegistrationInfos;	// 64 = 0x40
    _CDXPCEventPublisher *_mdcsEventPublisher;	// 72 = 0x48
    _CDXPCEventPublisher *_notificationEventPublisher;	// 80 = 0x50
    NSMutableDictionary *_mdcsEventSubscribersByToken;	// 88 = 0x58
    NSMutableDictionary *_notificationEventSubscribersByToken;	// 96 = 0x60
    NSMutableDictionary *_notificationEventSubscribersByClientIdentifier;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_workQueue;	// 112 = 0x70
    NSMutableDictionary *_remoteDevicesByDeviceID;	// 120 = 0x78
}

+ (id)sharedInstanceWithSharedMemoryStore:(id)arg1;	// IMP=0x0000000000038aca
+ (id)sharedInstanceWithPersistence:(id)arg1;	// IMP=0x0000000000038990
- (void).cxx_destruct;	// IMP=0x000000000003c6e3
@property(readonly, nonatomic) NSMutableDictionary *remoteDevicesByDeviceID; // @synthesize remoteDevicesByDeviceID=_remoteDevicesByDeviceID;
@property(nonatomic) _Bool remoteDevicesHaveBeenActivated; // @synthesize remoteDevicesHaveBeenActivated=_remoteDevicesHaveBeenActivated;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSMutableDictionary *notificationEventSubscribersByClientIdentifier; // @synthesize notificationEventSubscribersByClientIdentifier=_notificationEventSubscribersByClientIdentifier;
@property(retain, nonatomic) NSMutableDictionary *notificationEventSubscribersByToken; // @synthesize notificationEventSubscribersByToken=_notificationEventSubscribersByToken;
@property(retain, nonatomic) NSMutableDictionary *mdcsEventSubscribersByToken; // @synthesize mdcsEventSubscribersByToken=_mdcsEventSubscribersByToken;
@property(retain, nonatomic) _CDXPCEventPublisher *notificationEventPublisher; // @synthesize notificationEventPublisher=_notificationEventPublisher;
@property(retain, nonatomic) _CDXPCEventPublisher *mdcsEventPublisher; // @synthesize mdcsEventPublisher=_mdcsEventPublisher;
@property(retain, nonatomic) NSMutableDictionary *firedRegistrationInfos; // @synthesize firedRegistrationInfos=_firedRegistrationInfos;
@property(retain, nonatomic) NSMutableSet *firedRegistrations; // @synthesize firedRegistrations=_firedRegistrations;
@property(retain, nonatomic) NSMutableSet *openRegistrations; // @synthesize openRegistrations=_openRegistrations;
@property(retain, nonatomic) NSXPCListener *listener; // @synthesize listener=_listener;
@property(retain, nonatomic) NSMutableSet *clients; // @synthesize clients=_clients;
@property(retain, nonatomic) _CDInMemoryUserContext *userContext; // @synthesize userContext=_userContext;
@property(retain, nonatomic) id <_CDContextPersisting> persistence; // @synthesize persistence=_persistence;
- (void)removeSubscriberWithToken:(unsigned long long)arg1 streamName:(id)arg2;	// IMP=0x000000000003c1e2
- (void)addSubscriber:(id)arg1;	// IMP=0x000000000003be04
- (void)requestActivateDevicesFromSubscriber:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003bc25
- (void)requestActivateDevicesFromAllSubscribersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003b41c
- (void)fetchProxySourceDeviceUUIDFromSubscriber:(id)arg1;	// IMP=0x000000000003b13f
- (id)subscribersForClientIdentifier:(id)arg1;	// IMP=0x000000000003b090
- (unsigned long long)tokenForSourceDeviceUUID:(id)arg1;	// IMP=0x000000000003af03
- (id)subscriberForSourceDeviceUUID:(id)arg1;	// IMP=0x000000000003ae29
- (id)proxySourceDeviceUUIDForUserID:(unsigned int)arg1;	// IMP=0x000000000003ad6c
- (void)setProxySourceDeviceUUID:(id)arg1 forUserID:(unsigned int)arg2;	// IMP=0x000000000003ac43
- (void)addProxyWithSourceDeviceUUID:(id)arg1;	// IMP=0x000000000003ab0c
- (void)removeTokenForUserID:(unsigned int)arg1;	// IMP=0x000000000003aa45
- (void)setToken:(unsigned long long)arg1 forUserID:(unsigned int)arg2;	// IMP=0x000000000003a94d
- (_Bool)setMappingObject:(id)arg1 forContextualKeyPath:(id)arg2;	// IMP=0x000000000003a78f
- (void)sendEvent:(id)arg1 toClient:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a4e6
- (void)sendEvent:(id)arg1 toClient:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a241
- (void)sendEvent:(id)arg1 toProxy:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a0a2
- (void)sendEvent:(id)arg1 toProxy:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000039f07
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0000000000039cad
- (void)clientWasInterrupted:(id)arg1;	// IMP=0x0000000000039c2f
- (void)deleteSavedData;	// IMP=0x0000000000039c19
- (void)start;	// IMP=0x0000000000039c03
- (void)regenerateState;	// IMP=0x0000000000039687
- (void)informClientOfFiredRegistration:(id)arg1 info:(id)arg2;	// IMP=0x000000000003935d
- (id)obtainFiredRegistrationMatchingRegistration:(id)arg1 info:(id *)arg2;	// IMP=0x0000000000039082
- (void)removeOpenRegistration:(id)arg1;	// IMP=0x0000000000038e73
- (void)addOpenRegistration:(id)arg1;	// IMP=0x0000000000038c03
- (id)initWithListener:(id)arg1 withPersistence:(id)arg2 withStorage:(id)arg3 withStore:(id)arg4;	// IMP=0x00000000000385e9
- (id)initWithListener:(id)arg1 withStorage:(id)arg2 withStore:(id)arg3;	// IMP=0x00000000000385cf

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

