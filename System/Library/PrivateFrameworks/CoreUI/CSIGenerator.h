//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUIPSDGradient, CUIShapeEffectPreset, MDLAsset, MDLMesh, MDLSubmesh, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSSet, NSString;

@interface CSIGenerator : NSObject
{
    struct CGSize _size;	// 8 = 0x8
    NSString *_name;	// 24 = 0x18
    NSString *_utiType;	// 32 = 0x20
    struct CGSize _physicalSizeInMeters;	// 40 = 0x28
    NSMutableArray *_slices;	// 56 = 0x38
    NSMutableArray *_bitmaps;	// 64 = 0x40
    NSMutableArray *_metrics;	// 72 = 0x48
    NSMutableArray *_layerReferences;	// 80 = 0x50
    _Bool _isExcludedFromFilter;	// 88 = 0x58
    _Bool _isVectorBased;	// 89 = 0x59
    long long _templateRenderingMode;	// 96 = 0x60
    _Bool _allowsMultiPassEncoding;	// 104 = 0x68
    _Bool _allowsOptimalRowbytesPacking;	// 105 = 0x69
    _Bool _allowsPaletteImageCompression;	// 106 = 0x6a
    _Bool _allowsHevcCompression;	// 107 = 0x6b
    _Bool _allowsDeepmapImageCompression;	// 108 = 0x6c
    _Bool _allowsDeepmap2ImageCompression;	// 109 = 0x6d
    _Bool _optOutOfThinning;	// 110 = 0x6e
    _Bool _preservedVectorRepresentation;	// 111 = 0x6f
    _Bool _isFlippable;	// 112 = 0x70
    _Bool _isTintable;	// 113 = 0x71
    long long _targetPlatform;	// 120 = 0x78
    short _colorSpaceID;	// 128 = 0x80
    short _layout;	// 130 = 0x82
    unsigned int _scaleFactor;	// 132 = 0x84
    CUIPSDGradient *_gradient;	// 136 = 0x88
    NSData *_rawData;	// 144 = 0x90
    CUIShapeEffectPreset *_effectPreset;	// 152 = 0x98
    int _blendMode;	// 160 = 0xa0
    double _opacity;	// 168 = 0xa8
    NSDate *_modtime;	// 176 = 0xb0
    unsigned int _pixelFormat;	// 184 = 0xb8
    int _exifOrientation;	// 188 = 0xbc
    unsigned long long _rowbytes;	// 192 = 0xc0
    NSString *_assetPackIdentifier;	// 200 = 0xc8
    NSSet *_externalTags;	// 208 = 0xd0
    struct CGRect _externalReferenceFrame;	// 216 = 0xd8
    unsigned short _linkLayout;	// 248 = 0xf8
    struct CGSize _originalUncroppedSize;	// 256 = 0x100
    struct CGRect _alphaCroppedFrame;	// 272 = 0x110
    NSArray *_containedNamedElements;	// 304 = 0x130
    double _compressionQuality;	// 312 = 0x138
    long long _compressionType;	// 320 = 0x140
    _Bool _isCubeMap;	// 328 = 0x148
    long long _textureFormat;	// 336 = 0x150
    long long _textureInterpretation;	// 344 = 0x158
    NSMutableArray *_mipReferences;	// 352 = 0x160
    _Bool _textureOpaque;	// 360 = 0x168
    NSArray *_colorComponents;	// 368 = 0x170
    NSString *_systemColorName;	// 376 = 0x178
    NSDictionary *_sizesByIndex;	// 384 = 0x180
    _Bool _clampMetrics;	// 392 = 0x188
    NSString *_fontName;	// 400 = 0x190
    double _fontSize;	// 408 = 0x198
    double _maxPointSize;	// 416 = 0x1a0
    double _minPointSize;	// 424 = 0x1a8
    short _scalingStyle;	// 432 = 0x1b0
    short _alignment;	// 434 = 0x1b2
    NSDictionary *_renditionProperties;	// 440 = 0x1b8
    int _objectVersion;	// 448 = 0x1c0
    CDStruct_14d5dc5e _transformation;	// 464 = 0x1d0
    MDLAsset *_modelAsset;	// 528 = 0x210
    NSMutableArray *_meshReferences;	// 536 = 0x218
    MDLMesh *_modelMesh;	// 544 = 0x220
    NSMutableArray *_submeshReferences;	// 552 = 0x228
    MDLSubmesh *_modelSubmesh;	// 560 = 0x230
    NSArray *_vectorSizes;	// 568 = 0x238
    unsigned int _standardVectorSize;	// 576 = 0x240
    float _baseline;	// 580 = 0x244
    float _capHeight;	// 584 = 0x248
    float _templateVersion;	// 588 = 0x24c
    CDStruct_3c058996 _alignmentRectInsets;	// 592 = 0x250
    _Bool _isInterpolatable;	// 624 = 0x270
}

+ (int)fileEncoding;	// IMP=0x00000000000108f9
+ (void)setFileEncoding:(int)arg1;	// IMP=0x00000000000108c2
+ (void)initialize;	// IMP=0x0000000000010738
@property(nonatomic, getter=isInterpolatable) _Bool interpolatable; // @synthesize interpolatable=_isInterpolatable;
@property(nonatomic) float templateVersion; // @synthesize templateVersion=_templateVersion;
@property(nonatomic) CDStruct_3c058996 alignmentRectInsets; // @synthesize alignmentRectInsets=_alignmentRectInsets;
@property(nonatomic) float capHeight; // @synthesize capHeight=_capHeight;
@property(nonatomic) float baseline; // @synthesize baseline=_baseline;
@property(nonatomic) unsigned int standardVectorSize; // @synthesize standardVectorSize=_standardVectorSize;
@property(copy, nonatomic) NSArray *vectorSizes; // @synthesize vectorSizes=_vectorSizes;
@property(copy, nonatomic) MDLSubmesh *modelSubmesh; // @synthesize modelSubmesh=_modelSubmesh;
@property(readonly, nonatomic) NSArray *submeshReferences; // @synthesize submeshReferences=_submeshReferences;
@property(copy, nonatomic) MDLMesh *modelMesh; // @synthesize modelMesh=_modelMesh;
@property(readonly, nonatomic) NSArray *meshReferences; // @synthesize meshReferences=_meshReferences;
@property(copy, nonatomic) MDLAsset *modelAsset; // @synthesize modelAsset=_modelAsset;
@property(nonatomic) CDStruct_14d5dc5e transformation; // @synthesize transformation=_transformation;
@property(nonatomic) int objectVersion; // @synthesize objectVersion=_objectVersion;
@property(copy, nonatomic) NSDictionary *renditionProperties; // @synthesize renditionProperties=_renditionProperties;
@property(nonatomic) short alignment; // @synthesize alignment=_alignment;
@property(nonatomic) short scalingStyle; // @synthesize scalingStyle=_scalingStyle;
@property(nonatomic) double minPointSize; // @synthesize minPointSize=_minPointSize;
@property(nonatomic) double maxPointSize; // @synthesize maxPointSize=_maxPointSize;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(nonatomic) _Bool clampMetrics; // @synthesize clampMetrics=_clampMetrics;
@property(copy, nonatomic) NSDictionary *sizesByIndex; // @synthesize sizesByIndex=_sizesByIndex;
@property(copy, nonatomic) NSArray *colorComponents; // @synthesize colorComponents=_colorComponents;
@property(nonatomic) _Bool textureOpaque; // @synthesize textureOpaque=_textureOpaque;
@property(readonly, nonatomic) NSArray *mipReferences; // @synthesize mipReferences=_mipReferences;
@property(nonatomic) long long textureInterpretation; // @synthesize textureInterpretation=_textureInterpretation;
@property(nonatomic) long long textureFormat; // @synthesize textureFormat=_textureFormat;
@property(nonatomic) _Bool cubemap; // @synthesize cubemap=_isCubeMap;
@property(nonatomic) _Bool isTintable; // @synthesize isTintable=_isTintable;
@property(nonatomic) _Bool isFlippable; // @synthesize isFlippable=_isFlippable;
@property(nonatomic) _Bool preservedVectorRepresentation; // @synthesize preservedVectorRepresentation=_preservedVectorRepresentation;
@property(nonatomic) _Bool optOutOfThinning; // @synthesize optOutOfThinning=_optOutOfThinning;
@property(nonatomic) _Bool allowsDeepmap2ImageCompression; // @synthesize allowsDeepmap2ImageCompression=_allowsDeepmap2ImageCompression;
@property(nonatomic) _Bool allowsDeepmapImageCompression; // @synthesize allowsDeepmapImageCompression=_allowsDeepmapImageCompression;
@property(nonatomic) _Bool allowsHevcCompression; // @synthesize allowsHevcCompression=_allowsHevcCompression;
@property(nonatomic) _Bool allowsPaletteImageCompression; // @synthesize allowsPaletteImageCompression=_allowsPaletteImageCompression;
@property(nonatomic) _Bool allowsOptimalRowbytesPacking; // @synthesize allowsOptimalRowbytesPacking=_allowsOptimalRowbytesPacking;
@property(nonatomic) _Bool allowsMultiPassEncoding; // @synthesize allowsMultiPassEncoding=_allowsMultiPassEncoding;
@property(nonatomic) struct CGRect alphaCroppedFrame; // @synthesize alphaCroppedFrame=_alphaCroppedFrame;
@property(nonatomic) struct CGSize originalUncroppedSize; // @synthesize originalUncroppedSize=_originalUncroppedSize;
@property(nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property(copy, nonatomic) NSDate *modtime; // @synthesize modtime=_modtime;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(retain, nonatomic) CUIShapeEffectPreset *effectPreset; // @synthesize effectPreset=_effectPreset;
@property(readonly, nonatomic) NSArray *layerReferences; // @synthesize layerReferences=_layerReferences;
@property(nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property(nonatomic) unsigned int scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property(retain, nonatomic) CUIPSDGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) short colorSpaceID; // @synthesize colorSpaceID=_colorSpaceID;
@property(nonatomic, getter=isExcludedFromContrastFilter) _Bool excludedFromContrastFilter; // @synthesize excludedFromContrastFilter=_isExcludedFromFilter;
@property(nonatomic) long long templateRenderingMode; // @synthesize templateRenderingMode=_templateRenderingMode;
@property(nonatomic) _Bool isVectorBased; // @synthesize isVectorBased=_isVectorBased;
@property(nonatomic) struct CGSize physicalSizeInMeters; // @synthesize physicalSizeInMeters=_physicalSizeInMeters;
@property(copy, nonatomic) NSString *utiType; // @synthesize utiType=_utiType;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)CSIRepresentationWithCompression:(_Bool)arg1;	// IMP=0x0000000000015446
- (void)addSubmeshReference:(id)arg1;	// IMP=0x0000000000011ba8
- (void)addMeshReference:(id)arg1;	// IMP=0x0000000000011b8f
- (void)addMipReference:(id)arg1;	// IMP=0x0000000000011b76
- (void)addLayerReference:(id)arg1;	// IMP=0x0000000000011b60
- (void)addMetrics:(CDStruct_1ba92a5e)arg1;	// IMP=0x0000000000011ace
- (void)addSliceRect:(struct CGRect)arg1;	// IMP=0x0000000000011a7c
@property long long targetPlatform;
@property long long compressionType;
@property(nonatomic) double compressionQuality;
- (void)addBitmap:(id)arg1;	// IMP=0x00000000000116fd
- (id)rawData;	// IMP=0x00000000000114fa
- (void)dealloc;	// IMP=0x00000000000113d6
- (id)initWithModelSubmesh:(id)arg1;	// IMP=0x000000000001137a
- (id)initWithModelMesh:(id)arg1;	// IMP=0x000000000001130b
- (id)initWithModelAsset:(id)arg1;	// IMP=0x000000000001129c
- (id)initWithMultisizeImageSetNamed:(id)arg1 sizesByIndex:(id)arg2;	// IMP=0x0000000000011227
- (id)initWithTextStyleNamed:(id)arg1 fontName:(id)arg2 fontSize:(double)arg3 maxPointSize:(double)arg4 minPointSize:(double)arg5 scalingStyle:(short)arg6 alignment:(short)arg7;	// IMP=0x000000000001115c
- (id)initWithColorNamed:(id)arg1 colorSpaceID:(unsigned long long)arg2 components:(id)arg3 linkedToSystemColorWithName:(id)arg4;	// IMP=0x00000000000110c3
- (id)initWithColorNamed:(id)arg1 colorSpaceID:(unsigned long long)arg2 components:(id)arg3;	// IMP=0x000000000001103f
- (id)initWithInternalReferenceRect:(struct CGRect)arg1 layout:(short)arg2;	// IMP=0x0000000000010f5e
- (id)initWithTextureImageWithSize:(struct CGSize)arg1 forPixelFormat:(long long)arg2 cubeMap:(_Bool)arg3;	// IMP=0x0000000000010e92
- (id)initWithTextureForPixelFormat:(long long)arg1;	// IMP=0x0000000000010e04
- (id)initWithLayerStackData:(id)arg1 withCanvasSize:(struct CGSize)arg2;	// IMP=0x0000000000010d3e
- (id)initWithExternalReference:(id)arg1 tags:(id)arg2;	// IMP=0x0000000000010c8c
- (id)initWithRawData:(id)arg1 pixelFormat:(unsigned int)arg2 layout:(short)arg3;	// IMP=0x0000000000010b2f
- (id)initWithNameList:(id)arg1;	// IMP=0x0000000000010ac9
- (id)initWithShapeEffectPreset:(id)arg1 forScaleFactor:(unsigned int)arg2;	// IMP=0x0000000000010a22
- (id)initWithCanvasSize:(struct CGSize)arg1 sliceCount:(unsigned int)arg2 layout:(short)arg3;	// IMP=0x0000000000010905

@end

