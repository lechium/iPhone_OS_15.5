//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDateFormatter, NSMutableDictionary, NSMutableSet, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface _bmFMDatabase : NSObject
{
    void *_db;	// 8 = 0x8
    _Bool _isExecutingStatement;	// 16 = 0x10
    double _startBusyRetryTime;	// 24 = 0x18
    NSMutableSet *_openResultSets;	// 32 = 0x20
    NSMutableSet *_openFunctions;	// 40 = 0x28
    NSDateFormatter *_dateFormat;	// 48 = 0x30
    _Bool _shouldCacheStatements;	// 56 = 0x38
    _Bool _traceExecution;	// 57 = 0x39
    _Bool _checkedOut;	// 58 = 0x3a
    _Bool _crashOnErrors;	// 59 = 0x3b
    _Bool _logsErrors;	// 60 = 0x3c
    _Bool _isOpen;	// 61 = 0x3d
    _Bool _isInTransaction;	// 62 = 0x3e
    double _maxBusyRetryTimeInterval;	// 64 = 0x40
    NSMutableDictionary *_cachedStatements;	// 72 = 0x48
    NSString *_databasePath;	// 80 = 0x50
}

+ (id)storeableDateFormat:(id)arg1;	// IMP=0x000000000000abf0
+ (_Bool)isSQLiteThreadSafe;	// IMP=0x0000000000009f7b
+ (id)sqliteLibVersion;	// IMP=0x0000000000009f37
+ (int)FMDBVersion;	// IMP=0x0000000000009d1a
+ (id)FMDBUserVersion;	// IMP=0x0000000000009d0d
+ (id)databaseWithURL:(id)arg1;	// IMP=0x0000000000009b21
+ (id)databaseWithPath:(id)arg1;	// IMP=0x0000000000009ad8
- (void).cxx_destruct;	// IMP=0x000000000000dd5e
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(readonly, nonatomic) _Bool isInTransaction; // @synthesize isInTransaction=_isInTransaction;
@property(nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements=_cachedStatements;
@property _Bool logsErrors; // @synthesize logsErrors=_logsErrors;
@property _Bool crashOnErrors; // @synthesize crashOnErrors=_crashOnErrors;
@property _Bool checkedOut; // @synthesize checkedOut=_checkedOut;
@property _Bool traceExecution; // @synthesize traceExecution=_traceExecution;
- (void)resultErrorTooBigInContext:(void *)arg1;	// IMP=0x000000000000dcb9
- (void)resultErrorNoMemoryInContext:(void *)arg1;	// IMP=0x000000000000dcac
- (void)resultErrorCode:(int)arg1 context:(void *)arg2;	// IMP=0x000000000000dc9d
- (void)resultError:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dc66
- (void)resultString:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dc28
- (void)resultData:(id)arg1 context:(void *)arg2;	// IMP=0x000000000000dbbe
- (void)resultDouble:(double)arg1 context:(void *)arg2;	// IMP=0x000000000000dbb1
- (void)resultLong:(long long)arg1 context:(void *)arg2;	// IMP=0x000000000000dba1
- (void)resultInt:(int)arg1 context:(void *)arg2;	// IMP=0x000000000000db92
- (void)resultNullInContext:(void *)arg1;	// IMP=0x000000000000db85
- (id)valueString:(void *)arg1;	// IMP=0x000000000000db47
- (id)valueData:(void *)arg1;	// IMP=0x000000000000daf2
- (double)valueDouble:(void *)arg1;	// IMP=0x000000000000dae5
- (long long)valueLong:(void *)arg1;	// IMP=0x000000000000dad8
- (int)valueInt:(void *)arg1;	// IMP=0x000000000000dacb
- (int)valueType:(void *)arg1;	// IMP=0x000000000000dabe
- (void)makeFunctionNamed:(id)arg1 arguments:(int)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000000000d9c8
- (void)makeFunctionNamed:(id)arg1 maximumArguments:(int)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000000d9b6
@property(nonatomic) _Bool shouldCacheStatements; // @synthesize shouldCacheStatements=_shouldCacheStatements;
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 logFrameCount:(int *)arg3 checkpointCount:(int *)arg4 error:(id *)arg5;	// IMP=0x000000000000d7b0
- (_Bool)checkpoint:(int)arg1 name:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000d78b
- (_Bool)checkpoint:(int)arg1 error:(id *)arg2;	// IMP=0x000000000000d764
- (id)inSavePoint:(CDUnknownBlockType)arg1;	// IMP=0x000000000000d5fe
- (_Bool)rollbackToSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d4bb
- (_Bool)releaseSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d378
- (_Bool)startSavePointWithName:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000d235
- (_Bool)interrupt;	// IMP=0x000000000000d204
- (_Bool)inTransaction;	// IMP=0x000000000000d1fb
- (_Bool)beginExclusiveTransaction;	// IMP=0x000000000000d1cd
- (_Bool)beginImmediateTransaction;	// IMP=0x000000000000d19f
- (_Bool)beginDeferredTransaction;	// IMP=0x000000000000d171
- (_Bool)beginTransaction;	// IMP=0x000000000000d143
- (_Bool)commit;	// IMP=0x000000000000d115
- (_Bool)rollback;	// IMP=0x000000000000d0e7
- (id)prepare:(id)arg1;	// IMP=0x000000000000d0bd
- (_Bool)update:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x000000000000d013
- (_Bool)executeUpdate:(id)arg1 withErrorAndBindings:(id *)arg2;	// IMP=0x000000000000cf69
- (_Bool)executeStatements:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000000ce71
- (_Bool)executeStatements:(id)arg1;	// IMP=0x000000000000ce5d
- (_Bool)executeUpdateWithFormat:(id)arg1;	// IMP=0x000000000000cb5f
- (_Bool)executeUpdate:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x000000000000cb38
- (_Bool)executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x000000000000cb0d
- (_Bool)executeUpdate:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000cade
- (_Bool)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000000000000cab3
- (_Bool)executeUpdate:(id)arg1;	// IMP=0x000000000000ca03
- (_Bool)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orDictionary:(id)arg4 orVAList:(struct __va_list_tag [1])arg5;	// IMP=0x000000000000c964
- (id)executeQuery:(id)arg1 withVAList:(struct __va_list_tag [1])arg2;	// IMP=0x000000000000c93a
- (id)executeQuery:(id)arg1 values:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000c8c6
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;	// IMP=0x000000000000c89e
- (id)executeQueryWithFormat:(id)arg1;	// IMP=0x000000000000c722
- (id)executeQuery:(id)arg1;	// IMP=0x000000000000c662
- (_Bool)bindStatement:(struct sqlite3_stmt *)arg1 WithArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4;	// IMP=0x000000000000c0ce
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orDictionary:(id)arg3 orVAList:(struct __va_list_tag [1])arg4 shouldBind:(_Bool)arg5;	// IMP=0x000000000000bd52
- (id)executeQuery:(id)arg1 withParameterDictionary:(id)arg2;	// IMP=0x000000000000bd28
- (void)extractSQL:(id)arg1 argumentsList:(struct __va_list_tag [1])arg2 intoString:(id)arg3 arguments:(id)arg4;	// IMP=0x000000000000b50e
- (int)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x000000000000afa8
@property(readonly, nonatomic) int changes;
@property(readonly, nonatomic) long long lastInsertRowId;
- (id)lastError;	// IMP=0x000000000000aed3
- (id)errorWithMessage:(id)arg1;	// IMP=0x000000000000ae4c
- (int)lastExtendedErrorCode;	// IMP=0x000000000000ae3e
- (int)lastErrorCode;	// IMP=0x000000000000ae30
- (_Bool)hadError;	// IMP=0x000000000000ae15
- (id)lastErrorMessage;	// IMP=0x000000000000ade6
- (_Bool)databaseExists;	// IMP=0x000000000000ad9c
- (void)warnInUse;	// IMP=0x000000000000ad65
@property(readonly, nonatomic) _Bool goodConnection;
- (id)stringFromDate:(id)arg1;	// IMP=0x000000000000acef
- (id)dateFromString:(id)arg1;	// IMP=0x000000000000acd9
- (void)setDateFormat:(id)arg1;	// IMP=0x000000000000acc8
- (_Bool)hasDateFormatter;	// IMP=0x000000000000acba
- (_Bool)setKeyWithData:(id)arg1;	// IMP=0x000000000000abe8
- (_Bool)setKey:(id)arg1;	// IMP=0x000000000000ab23
- (_Bool)rekeyWithData:(id)arg1;	// IMP=0x000000000000ab1b
- (_Bool)rekey:(id)arg1;	// IMP=0x000000000000aa56
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;	// IMP=0x000000000000a8e8
- (id)cachedStatementForQuery:(id)arg1;	// IMP=0x000000000000a83f
- (void)clearCachedStatements;	// IMP=0x000000000000a5e0
- (void)resultSetDidClose:(id)arg1;	// IMP=0x000000000000a58c
- (void)closeOpenResultSets;	// IMP=0x000000000000a3ae
@property(readonly, nonatomic) _Bool hasOpenResultSets;
- (void)setBusyRetryTimeout:(int)arg1;	// IMP=0x000000000000a363
- (int)busyRetryTimeout;	// IMP=0x000000000000a330
@property(nonatomic) double maxBusyRetryTimeInterval; // @synthesize maxBusyRetryTimeInterval=_maxBusyRetryTimeInterval;
- (_Bool)close;	// IMP=0x000000000000a183
- (_Bool)openWithFlags:(int)arg1 vfs:(id)arg2;	// IMP=0x000000000000a0a3
- (_Bool)openWithFlags:(int)arg1;	// IMP=0x000000000000a08f
- (_Bool)open;	// IMP=0x0000000000009ff9
- (int)limitFor:(int)arg1 value:(int)arg2;	// IMP=0x0000000000009fe7
- (const char *)sqlitePath;	// IMP=0x0000000000009f95
@property(readonly, nonatomic) void *sqliteHandle;
@property(readonly, nonatomic) NSURL *databaseURL;
- (void)dealloc;	// IMP=0x0000000000009c98
- (id)initWithPath:(id)arg1;	// IMP=0x0000000000009bd4
- (id)initWithURL:(id)arg1;	// IMP=0x0000000000009b7e
- (id)init;	// IMP=0x0000000000009b6a
- (_Bool)validateSQL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000ee33
- (_Bool)columnExists:(id)arg1 columnName:(id)arg2;	// IMP=0x000000000000ee18
@property(nonatomic) unsigned int userVersion;
@property(nonatomic) unsigned int applicationID;
- (_Bool)columnExists:(id)arg1 inTableWithName:(id)arg2;	// IMP=0x000000000000eab4
- (id)getTableSchema:(id)arg1;	// IMP=0x000000000000ea1f
- (id)getSchema;	// IMP=0x000000000000ea04
- (_Bool)tableExists:(id)arg1;	// IMP=0x000000000000e977
- (id)dateForQuery:(id)arg1;	// IMP=0x000000000000e84d
- (id)dataForQuery:(id)arg1;	// IMP=0x000000000000e723
- (double)doubleForQuery:(id)arg1;	// IMP=0x000000000000e600
- (_Bool)boolForQuery:(id)arg1;	// IMP=0x000000000000e4e2
- (long long)longForQuery:(id)arg1;	// IMP=0x000000000000e3c4
- (int)intForQuery:(id)arg1;	// IMP=0x000000000000e2a6
- (id)stringForQuery:(id)arg1;	// IMP=0x000000000000e17c

@end

