//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSString, _PASCFBurstTrie;

@interface PPConfigurationGuardedData : NSObject
{
    float remoteTopicsMultiplier;	// 8 = 0x8
    double halfValuePosition;	// 16 = 0x10
    double nonReaderTextWeight;	// 24 = 0x18
    double analyticsSamplingRate;	// 32 = 0x20
    double musicDataCollectionSamplingRateForCTS;	// 40 = 0x28
    double musicDataCollectionSamplingRateForAMP;	// 48 = 0x30
    int musicDataCollectionMaximumRecordsPerType;	// 56 = 0x38
    _Bool musicDataCollectionCollectNonAMPNowPlaying;	// 60 = 0x3c
    NSArray *musicDataCollectionAMPBundleIds;	// 64 = 0x40
    int sportsMetricsNumberOfTeamsLogged;	// 72 = 0x48
    int sportsMetricsNumberOfLeaguesLogged;	// 76 = 0x4c
    NSString *sportsMetricsEventName;	// 80 = 0x50
    double sportsMetricsSamplingRate;	// 88 = 0x58
    NSString *variantName;	// 96 = 0x60
    NSString *naturalVariantName;	// 104 = 0x68
    NSArray *availableVariantNames;	// 112 = 0x70
    NSDictionary *differentiallyPrivateEntityLogLevels;	// 120 = 0x78
    NSDictionary *topicsSourceMultiplier;	// 128 = 0x80
    NSDictionary *topicsAlgorithmMultiplier;	// 136 = 0x88
    NSDictionary *namedEntityAlgorithmConfiguration;	// 144 = 0x90
    NSDictionary *topicAlgorithmConfiguration;	// 152 = 0x98
    NSDictionary *locationAlgorithmConfiguration;	// 160 = 0xa0
    _PASCFBurstTrie *topicCalibration;	// 168 = 0xa8
    _Bool safariDonationTitleExtractionEnabled;	// 176 = 0xb0
    _Bool safariDataDetectorsEnabledForHighMemoryDevices;	// 177 = 0xb1
    float scoreThresholdForNamedEntity;	// 180 = 0xb4
    float scoreThresholdForTopic;	// 184 = 0xb8
    float scoreThresholdForLocation;	// 188 = 0xbc
    float feedbackSessionLogsSamplingRate;	// 192 = 0xc0
    NSDictionary *feedbackSessionLogsSamplingRateOverrides;	// 200 = 0xc8
    float feedbackSessionLogsExtractionsSamplingRate;	// 208 = 0xd0
    int feedbackSessionLogsGeohashLength;	// 212 = 0xd4
    int analyticsMaximumNumberOfRecords;	// 216 = 0xd8
    double topicDecayHalfLifeSeconds;	// 224 = 0xe0
    double namedEntityDecayHalfLifeSeconds;	// 232 = 0xe8
    double locationDecayHalfLifeSeconds;	// 240 = 0xf0
    _Bool topicScoringUsesCoreML;	// 248 = 0xf8
    _Bool namedEntityScoringUsesCoreML;	// 249 = 0xf9
    _Bool flattenTopicsForCoreML;	// 250 = 0xfa
    _Bool flattenNamedEntitiesforCoreML;	// 251 = 0xfb
    _Bool namedEntityScoringUsesHybrid;	// 252 = 0xfc
    _Bool topicScoringUsesHybrid;	// 253 = 0xfd
    _Bool locationScoringUsesHybrid;	// 254 = 0xfe
    double decayedFeedbackCountsHalfLifeDays;	// 256 = 0x100
    _Bool notificationExtractionEnabled;	// 264 = 0x108
    _Bool namedEntityFeedbackUsesCoreML;	// 265 = 0x109
    _Bool topicFeedbackUsesCoreML;	// 266 = 0x10a
    _Bool locationFeedbackUsesCoreML;	// 267 = 0x10b
    NSArray *engagementKValues;	// 272 = 0x110
    _Bool use2StageScoreInterpreterForNEScoring;	// 280 = 0x118
    _Bool use2StageScoreInterpreterForTPScoring;	// 281 = 0x119
    _Bool use2StageScoreInterpreterForLocationScoring;	// 282 = 0x11a
    _Bool topicMappingUsesCoreML;	// 283 = 0x11b
    double topicMappingCoreMLThreshold;	// 288 = 0x120
    _Bool locationScoringUsesCoreML;	// 296 = 0x128
    double routineExtractionScoreCountWeight;	// 304 = 0x130
    double routineExtractionScoreDurationWeight;	// 312 = 0x138
    double routineExtractionScoreDecayHalfLifeDays;	// 320 = 0x140
    NSDictionary *linearModelHyperparameters;	// 328 = 0x148
    int maxNumberMappedTopics;	// 336 = 0x150
    int maxNumberNamedEntities;	// 340 = 0x154
    unsigned char customTaggerMaxTokenCount;	// 344 = 0x158
    unsigned int mapsSearchQueryLimit;	// 348 = 0x15c
    double mapsSearchQueryFromDateInterval;	// 352 = 0x160
    unsigned int namedEntityLoadAndMonitorInitialLoadLimit;	// 360 = 0x168
    NSDictionary *contactsLabelScoringMap;	// 368 = 0x170
    float recordSourceContactsInitialScore;	// 376 = 0x178
    float recordSourceNonContactsInitialScore;	// 380 = 0x17c
    unsigned char peopleSuggesterMaxCount;	// 384 = 0x180
    double navigationMinimumTimeInterval;	// 392 = 0x188
    unsigned int navigationMinimumDistanceInMeters;	// 400 = 0x190
    unsigned char nextEventFuzzMinutes;	// 404 = 0x194
    int queryTimeNextEventFromMinutes;	// 408 = 0x198
    unsigned int queryTimeNextEventToMinutes;	// 412 = 0x19c
    unsigned int queryTimeOtherEventToMinutes;	// 416 = 0x1a0
    unsigned long long sentenceEmbeddingVersion;	// 424 = 0x1a8
    unsigned int maxRelevantHighlightContacts;	// 432 = 0x1b0
    unsigned int maxNEExtractions;	// 436 = 0x1b4
    double scoreThreshold;	// 440 = 0x1b8
    _Bool storeNewExtractions;	// 448 = 0x1c0
    _Bool useRawNEExtractionScores;	// 449 = 0x1c1
    _Bool useCachedPortraitScores;	// 450 = 0x1c2
    unsigned int maxItemsInFeatureDictionary;	// 452 = 0x1c4
    double socialHighlightDecayInterval;	// 456 = 0x1c8
    double socialHighlightRankedStorageMaxAge;	// 464 = 0x1d0
    double socialHighlightCacheTimeoutInterval;	// 472 = 0x1d8
    double socialHighlightFeedbackDeletionInterval;	// 480 = 0x1e0
    double socialHighlightMetricReportingInterval;	// 488 = 0x1e8
    unsigned int socialHighlightMaxNumHighlights;	// 496 = 0x1f0
    unsigned int socialHighlightTopKCount;	// 500 = 0x1f4
    _Bool skipInsignificantEmailExtractions;	// 504 = 0x1f8
    double maxEmailHarvestingEligiblityInterval;	// 512 = 0x200
}

- (void).cxx_destruct;	// IMP=0x0000000000172d23

@end

