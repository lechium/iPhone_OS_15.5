//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MRDeviceInfo, MRPasscodeCredentials, NSArray, NSData, NSMutableData, NSMutableDictionary, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface MRCoreUtilsPairingSession
{
    MRPasscodeCredentials *_credentials;	// 8 = 0x8
    struct PairingSessionPrivate *_pairingSession;	// 16 = 0x10
    struct {
        void *context;
        CDUnknownFunctionPointerType showSetupCode_f;
        CDUnknownFunctionPointerType hideSetupCode_f;
        CDUnknownFunctionPointerType promptForSetupCode_f;
        CDUnknownFunctionPointerType copyIdentity_f;
        CDUnknownFunctionPointerType findPeer_f;
        CDUnknownFunctionPointerType savePeer_f;
        CDUnknownFunctionPointerType resumeRequest_f;
        CDUnknownFunctionPointerType resumeResponse_f;
    } _pairingDelegate;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 96 = 0x60
    _Bool _hasExchangedMessage;	// 104 = 0x68
    unsigned int _pairingFlags;	// 108 = 0x6c
    unsigned long long _state;	// 112 = 0x70
    NSData *_inputKey;	// 120 = 0x78
    NSMutableData *_inputNonce;	// 128 = 0x80
    NSData *_outputKey;	// 136 = 0x88
    NSMutableData *_outputNonce;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x000000000010cde9
@property(retain, nonatomic) NSMutableData *outputNonce; // @synthesize outputNonce=_outputNonce;
@property(retain, nonatomic) NSData *outputKey; // @synthesize outputKey=_outputKey;
@property(retain, nonatomic) NSMutableData *inputNonce; // @synthesize inputNonce=_inputNonce;
@property(retain, nonatomic) NSData *inputKey; // @synthesize inputKey=_inputKey;
@property(nonatomic) unsigned int pairingFlags; // @synthesize pairingFlags=_pairingFlags;
@property(readonly, nonatomic) _Bool hasExchangedMessage; // @synthesize hasExchangedMessage=_hasExchangedMessage;
@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property(readonly, nonatomic) NSMutableDictionary *mediaRemotePairedDevices;
@property(readonly, nonatomic) NSArray *pairedPeerDevices;
@property(readonly, nonatomic) MRDeviceInfo *pairedPeerDevice;
@property(readonly, nonatomic) NSString *peerIdentifier;
- (id)updatePeer;	// IMP=0x000000000010ad18
- (id)removePeer;	// IMP=0x000000000010ab19
- (id)addPeer;	// IMP=0x000000000010a716
- (id)initializePairingSession:(struct PairingSessionPrivate *)arg1;	// IMP=0x000000000010a6bb
- (_Bool)shouldAutoRetryPairingExchange:(id)arg1;	// IMP=0x000000000010a678
- (void)openInState:(unsigned long long)arg1;	// IMP=0x000000000010a3d6
- (_Bool)deleteIdentityWithError:(id *)arg1;	// IMP=0x000000000010a16a
- (id)decryptData:(id)arg1 withError:(id *)arg2;	// IMP=0x0000000000109c9a
- (id)encryptData:(id)arg1 withError:(id *)arg2;	// IMP=0x000000000010984b
- (void)handlePairingFailureWithStatus:(int)arg1;	// IMP=0x0000000000109738
- (void)handlePairingExchangeData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000108f0a
- (void)close;	// IMP=0x0000000000108e77
- (void)open;	// IMP=0x0000000000108e60
- (id)pairedDevices;	// IMP=0x0000000000108e10
- (_Bool)isPaired;	// IMP=0x0000000000108ddd
- (_Bool)isValid;	// IMP=0x0000000000108dc8
- (void)dealloc;	// IMP=0x0000000000108d67
- (id)initWithRole:(unsigned long long)arg1 device:(id)arg2;	// IMP=0x00000000001089bc

@end

