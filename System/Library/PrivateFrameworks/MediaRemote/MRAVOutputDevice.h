//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MRAVEndpoint, MRAVOutputDeviceSourceInfo, NSArray, NSData, NSDictionary, NSString, _MRAVOutputDeviceDescriptorProtobuf;

@interface MRAVOutputDevice : NSObject
{
    _Bool _canAccessRemoteAssets;	// 8 = 0x8
    _Bool _canAccessAppleMusic;	// 9 = 0x9
    _Bool _canAccessiCloudMusicLibrary;	// 10 = 0xa
    _Bool _canPlayEncryptedProgressiveDownloadAssets;	// 11 = 0xb
    _Bool _canFetchMediaDataFromSender;	// 12 = 0xc
    _Bool _presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;	// 13 = 0xd
    _Bool _remoteControllable;	// 14 = 0xe
    _Bool _groupLeader;	// 15 = 0xf
    _Bool _groupContainsGroupLeader;	// 16 = 0x10
    _Bool _airPlayReceiverSessionActive;	// 17 = 0x11
    _Bool _groupable;	// 18 = 0x12
    _Bool _supportsBluetoothSharing;	// 19 = 0x13
    _Bool _proxyGroupPlayer;	// 20 = 0x14
    _Bool _canRelayCommunicationChannel;	// 21 = 0x15
    _Bool _supportsBufferedAirPlay;	// 22 = 0x16
    _Bool _supportsMultiplayer;	// 23 = 0x17
    _Bool _deviceGroupable;	// 24 = 0x18
    _Bool _pickedOnPairedDevice;	// 25 = 0x19
    _Bool _hasBatteryLevel;	// 26 = 0x1a
    _Bool _localDevice;	// 27 = 0x1b
    _Bool _supportsExternalScreen;	// 28 = 0x1c
    _Bool _requiresAuthorization;	// 29 = 0x1d
    _Bool _parentGroupContainsDiscoverableLeader;	// 30 = 0x1e
    _Bool _volumeControlAvailable;	// 31 = 0x1f
    _Bool _producesLowFidelityAudio;	// 32 = 0x20
    _Bool _supportsHAP;	// 33 = 0x21
    _Bool _supportsRapportRemoteControlTransport;	// 34 = 0x22
    _Bool _supportsSharePlayHandoff;	// 35 = 0x23
    _Bool _supportsRapport;	// 36 = 0x24
    _Bool _isAddedToHomeKit;	// 37 = 0x25
    _Bool _supportsHeadTrackedSpatialAudio;	// 38 = 0x26
    _Bool _allowsHeadTrackedSpatialAudio;	// 39 = 0x27
    _Bool _headTrackedSpatialAudioActive;	// 40 = 0x28
    unsigned int _deviceType;	// 44 = 0x2c
    unsigned int _deviceSubtype;	// 48 = 0x30
    float _batteryLevel;	// 52 = 0x34
    float _volume;	// 56 = 0x38
    NSString *_name;	// 64 = 0x40
    NSString *_uid;	// 72 = 0x48
    NSString *_modelID;	// 80 = 0x50
    NSString *_firmwareVersion;	// 88 = 0x58
    NSString *_airPlayGroupID;	// 96 = 0x60
    NSData *_MACAddress;	// 104 = 0x68
    NSDictionary *_modelSpecificInfo;	// 112 = 0x70
    NSString *_playingPairedDeviceName;	// 120 = 0x78
    long long _hostDeviceClass;	// 128 = 0x80
    NSArray *_clusterComposition;	// 136 = 0x88
    unsigned long long _configuredClusterSize;	// 144 = 0x90
    NSString *_parentGroupIdentifier;	// 152 = 0x98
    NSString *_bluetoothID;	// 160 = 0xa0
    NSString *_primaryID;	// 168 = 0xa8
    MRAVEndpoint *_endpoint;	// 176 = 0xb0
    MRAVOutputDeviceSourceInfo *_sourceInfo;	// 184 = 0xb8
    _MRAVOutputDeviceDescriptorProtobuf *_descriptor;	// 192 = 0xc0
    NSString *_logicalDeviceID;	// 200 = 0xc8
    NSString *_currentBluetoothListeningMode;	// 208 = 0xd0
    NSArray *_availableBluetoothListeningModes;	// 216 = 0xd8
    NSString *_headTrackedSpatialAudioMode;	// 224 = 0xe0
}

+ (id)localDeviceLocalizedName;	// IMP=0x0000000000048e30
+ (id)localDeviceUID;	// IMP=0x0000000000048e23
- (void).cxx_destruct;	// IMP=0x000000000004be59
@property(readonly, nonatomic) NSString *headTrackedSpatialAudioMode; // @synthesize headTrackedSpatialAudioMode=_headTrackedSpatialAudioMode;
@property(readonly, nonatomic, getter=isHeadTrackedSpatialAudioActive) _Bool headTrackedSpatialAudioActive; // @synthesize headTrackedSpatialAudioActive=_headTrackedSpatialAudioActive;
@property(readonly, nonatomic) _Bool allowsHeadTrackedSpatialAudio; // @synthesize allowsHeadTrackedSpatialAudio=_allowsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) _Bool supportsHeadTrackedSpatialAudio; // @synthesize supportsHeadTrackedSpatialAudio=_supportsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) NSArray *availableBluetoothListeningModes; // @synthesize availableBluetoothListeningModes=_availableBluetoothListeningModes;
@property(readonly, nonatomic) NSString *currentBluetoothListeningMode; // @synthesize currentBluetoothListeningMode=_currentBluetoothListeningMode;
@property(readonly, nonatomic) _Bool isAddedToHomeKit; // @synthesize isAddedToHomeKit=_isAddedToHomeKit;
@property(readonly, nonatomic) _Bool supportsRapport; // @synthesize supportsRapport=_supportsRapport;
@property(readonly, nonatomic) NSString *logicalDeviceID; // @synthesize logicalDeviceID=_logicalDeviceID;
@property(copy, nonatomic) _MRAVOutputDeviceDescriptorProtobuf *descriptor; // @synthesize descriptor=_descriptor;
@property(readonly, nonatomic) MRAVOutputDeviceSourceInfo *sourceInfo; // @synthesize sourceInfo=_sourceInfo;
@property(nonatomic) __weak MRAVEndpoint *endpoint; // @synthesize endpoint=_endpoint;
@property(readonly, nonatomic) _Bool supportsSharePlayHandoff; // @synthesize supportsSharePlayHandoff=_supportsSharePlayHandoff;
@property(readonly, nonatomic) _Bool supportsRapportRemoteControlTransport; // @synthesize supportsRapportRemoteControlTransport=_supportsRapportRemoteControlTransport;
@property(copy, nonatomic) NSString *primaryID; // @synthesize primaryID=_primaryID;
@property(readonly, nonatomic) _Bool supportsHAP; // @synthesize supportsHAP=_supportsHAP;
@property(readonly, nonatomic) NSString *bluetoothID; // @synthesize bluetoothID=_bluetoothID;
@property(readonly, nonatomic) _Bool producesLowFidelityAudio; // @synthesize producesLowFidelityAudio=_producesLowFidelityAudio;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(readonly, nonatomic, getter=isVolumeControlAvailable) _Bool volumeControlAvailable; // @synthesize volumeControlAvailable=_volumeControlAvailable;
@property(copy, nonatomic) NSString *parentGroupIdentifier; // @synthesize parentGroupIdentifier=_parentGroupIdentifier;
@property(readonly, nonatomic) _Bool parentGroupContainsDiscoverableLeader; // @synthesize parentGroupContainsDiscoverableLeader=_parentGroupContainsDiscoverableLeader;
@property(readonly, nonatomic) _Bool requiresAuthorization; // @synthesize requiresAuthorization=_requiresAuthorization;
@property(readonly, nonatomic) _Bool supportsExternalScreen; // @synthesize supportsExternalScreen=_supportsExternalScreen;
@property(readonly, nonatomic, getter=isLocalDevice) _Bool localDevice; // @synthesize localDevice=_localDevice;
@property(readonly, nonatomic) _Bool hasBatteryLevel; // @synthesize hasBatteryLevel=_hasBatteryLevel;
@property(readonly, nonatomic) float batteryLevel; // @synthesize batteryLevel=_batteryLevel;
@property(readonly, nonatomic) unsigned long long configuredClusterSize; // @synthesize configuredClusterSize=_configuredClusterSize;
@property(readonly, nonatomic) NSArray *clusterComposition; // @synthesize clusterComposition=_clusterComposition;
@property(readonly, nonatomic) long long hostDeviceClass; // @synthesize hostDeviceClass=_hostDeviceClass;
@property(readonly, nonatomic) unsigned int deviceSubtype; // @synthesize deviceSubtype=_deviceSubtype;
@property(readonly, nonatomic) unsigned int deviceType; // @synthesize deviceType=_deviceType;
@property(readonly, nonatomic, getter=isPickedOnPairedDevice) _Bool pickedOnPairedDevice; // @synthesize pickedOnPairedDevice=_pickedOnPairedDevice;
@property(readonly, nonatomic, getter=isDeviceGroupable) _Bool deviceGroupable; // @synthesize deviceGroupable=_deviceGroupable;
@property(readonly, nonatomic) _Bool supportsMultiplayer; // @synthesize supportsMultiplayer=_supportsMultiplayer;
@property(readonly, nonatomic) _Bool supportsBufferedAirPlay; // @synthesize supportsBufferedAirPlay=_supportsBufferedAirPlay;
@property(readonly, nonatomic) _Bool canRelayCommunicationChannel; // @synthesize canRelayCommunicationChannel=_canRelayCommunicationChannel;
@property(readonly, nonatomic, getter=isProxyGroupPlayer) _Bool proxyGroupPlayer; // @synthesize proxyGroupPlayer=_proxyGroupPlayer;
@property(readonly, nonatomic) _Bool supportsBluetoothSharing; // @synthesize supportsBluetoothSharing=_supportsBluetoothSharing;
@property(readonly, nonatomic, getter=isGroupable) _Bool groupable; // @synthesize groupable=_groupable;
@property(readonly, nonatomic, getter=isAirPlayReceiverSessionActive) _Bool airPlayReceiverSessionActive; // @synthesize airPlayReceiverSessionActive=_airPlayReceiverSessionActive;
@property(readonly, nonatomic) _Bool groupContainsGroupLeader; // @synthesize groupContainsGroupLeader=_groupContainsGroupLeader;
@property(readonly, nonatomic, getter=isGroupLeader) _Bool groupLeader; // @synthesize groupLeader=_groupLeader;
@property(readonly, nonatomic, getter=isRemoteControllable) _Bool remoteControllable; // @synthesize remoteControllable=_remoteControllable;
@property(readonly, nonatomic) _Bool presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets; // @synthesize presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets=_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property(readonly, nonatomic) _Bool canFetchMediaDataFromSender; // @synthesize canFetchMediaDataFromSender=_canFetchMediaDataFromSender;
@property(readonly, nonatomic) _Bool canPlayEncryptedProgressiveDownloadAssets; // @synthesize canPlayEncryptedProgressiveDownloadAssets=_canPlayEncryptedProgressiveDownloadAssets;
@property(readonly, nonatomic) _Bool canAccessiCloudMusicLibrary; // @synthesize canAccessiCloudMusicLibrary=_canAccessiCloudMusicLibrary;
@property(readonly, nonatomic) _Bool canAccessAppleMusic; // @synthesize canAccessAppleMusic=_canAccessAppleMusic;
@property(readonly, nonatomic) _Bool canAccessRemoteAssets; // @synthesize canAccessRemoteAssets=_canAccessRemoteAssets;
@property(readonly, nonatomic) NSString *playingPairedDeviceName; // @synthesize playingPairedDeviceName=_playingPairedDeviceName;
@property(readonly, nonatomic) NSDictionary *modelSpecificInfo; // @synthesize modelSpecificInfo=_modelSpecificInfo;
@property(readonly, nonatomic) NSData *MACAddress; // @synthesize MACAddress=_MACAddress;
@property(copy, nonatomic) NSString *airPlayGroupID; // @synthesize airPlayGroupID=_airPlayGroupID;
@property(readonly, nonatomic) NSString *firmwareVersion; // @synthesize firmwareVersion=_firmwareVersion;
@property(readonly, nonatomic) NSString *modelID; // @synthesize modelID=_modelID;
@property(readonly, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) _Bool shouldBeLocallyHosted;
@property(readonly, nonatomic) _Bool supportsMigration;
@property(readonly, nonatomic, getter=isEligibleForWHAPlayback) _Bool eligibleForWHAPlayback;
@property(readonly, nonatomic) NSString *groupContextID;
@property(readonly, nonatomic) NSString *baseParentGroupID;
@property(readonly, nonatomic) NSString *baseGroupID;
@property(readonly, nonatomic) NSString *groupID;
- (_Bool)containsUID:(id)arg1;	// IMP=0x000000000004b72b
@property(readonly, nonatomic) _Bool canProxyEndpoint;
@property(readonly, nonatomic, getter=isPrimaryLocalDevice) _Bool primaryLocalDevice;
@property(readonly, nonatomic, getter=isAuxiliary) _Bool auxiliary;
@property(readonly, nonatomic, getter=isUsingJSONProtocol) _Bool usingJSONProtocol;
@property(readonly, nonatomic) NSString *debugName;
@property(readonly, nonatomic) _Bool isPersonalRoute;
@property(readonly, nonatomic) unsigned int volumeCapabilities;
@property(readonly, nonatomic) NSDictionary *jsonEncodableDictionaryRepresentation;
@property(readonly, nonatomic) NSString *roleDescription;
@property(readonly, nonatomic) NSString *composedTypeDescription;
@property(readonly, nonatomic) NSString *capabilitiesDescription;
- (unsigned long long)hash;	// IMP=0x000000000004a04a
- (_Bool)isEqualToOutputDevice:(id)arg1;	// IMP=0x0000000000049f18
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000049dd9
- (id)description;	// IMP=0x0000000000049663
@property(readonly, nonatomic) unsigned int clusterType;

@end

