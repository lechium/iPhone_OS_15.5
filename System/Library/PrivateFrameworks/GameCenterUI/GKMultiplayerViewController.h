//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <GameCenterUI/GKDashboardMultiplayerPickerDelegate-Protocol.h>
#import <GameCenterUI/GKMultiplayerDataSourceDelegate-Protocol.h>
#import <GameCenterUI/UIAdaptivePresentationControllerDelegate-Protocol.h>

@class GKDashboardMultiplayerPickerViewController, GKGame, GKMatchRequest, GKMultiplayerDataSource, NSString, NSURL, _TtC12GameCenterUI23GKMultiplayerFooterView, _TtC12GameCenterUI29GKMultiplayerButtonHeaderView;
@protocol GKDashboardNearbyBrowserDelegate;

@interface GKMultiplayerViewController <GKDashboardMultiplayerPickerDelegate, GKMultiplayerDataSourceDelegate, UIAdaptivePresentationControllerDelegate>
{
    _Bool _showCancelButton;	// 8 = 0x8
    _Bool _didAcceptGameInvite;	// 9 = 0x9
    _Bool _didStartForcedAutomatch;	// 10 = 0xa
    _Bool _canStartWithMinimumPlayers;	// 11 = 0xb
    _Bool _addButtonEnabled;	// 12 = 0xc
    GKMatchRequest *_matchRequest;	// 16 = 0x10
    GKMatchRequest *_originalMatchRequest;	// 24 = 0x18
    NSString *_defaultInvitationMessage;	// 32 = 0x20
    GKGame *_game;	// 40 = 0x28
    id <GKDashboardNearbyBrowserDelegate> _nearbyDelegate;	// 48 = 0x30
    NSURL *_shareURL;	// 56 = 0x38
    long long _matchmakingMode;	// 64 = 0x40
    _TtC12GameCenterUI23GKMultiplayerFooterView *_footerView;	// 72 = 0x48
    _TtC12GameCenterUI29GKMultiplayerButtonHeaderView *_buttonHeaderView;	// 80 = 0x50
    GKDashboardMultiplayerPickerViewController *_playerPickerViewController;	// 88 = 0x58
    long long _invitationType;	// 96 = 0x60
    unsigned long long _messagesInviteStatus;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x00000000000c6058
@property(nonatomic) unsigned long long messagesInviteStatus; // @synthesize messagesInviteStatus=_messagesInviteStatus;
@property(nonatomic) long long invitationType; // @synthesize invitationType=_invitationType;
@property(retain, nonatomic) GKDashboardMultiplayerPickerViewController *playerPickerViewController; // @synthesize playerPickerViewController=_playerPickerViewController;
@property(retain, nonatomic) _TtC12GameCenterUI29GKMultiplayerButtonHeaderView *buttonHeaderView; // @synthesize buttonHeaderView=_buttonHeaderView;
@property(nonatomic) _Bool addButtonEnabled; // @synthesize addButtonEnabled=_addButtonEnabled;
@property(nonatomic) _Bool canStartWithMinimumPlayers; // @synthesize canStartWithMinimumPlayers=_canStartWithMinimumPlayers;
@property(retain, nonatomic) _TtC12GameCenterUI23GKMultiplayerFooterView *footerView; // @synthesize footerView=_footerView;
@property(nonatomic) long long matchmakingMode; // @synthesize matchmakingMode=_matchmakingMode;
@property(nonatomic) _Bool didStartForcedAutomatch; // @synthesize didStartForcedAutomatch=_didStartForcedAutomatch;
@property(retain, nonatomic) NSURL *shareURL; // @synthesize shareURL=_shareURL;
@property(nonatomic) __weak id <GKDashboardNearbyBrowserDelegate> nearbyDelegate; // @synthesize nearbyDelegate=_nearbyDelegate;
@property(nonatomic) _Bool didAcceptGameInvite; // @synthesize didAcceptGameInvite=_didAcceptGameInvite;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
@property(nonatomic) _Bool showCancelButton; // @synthesize showCancelButton=_showCancelButton;
@property(copy, nonatomic) NSString *defaultInvitationMessage; // @synthesize defaultInvitationMessage=_defaultInvitationMessage;
@property(readonly, copy, nonatomic) GKMatchRequest *originalMatchRequest; // @synthesize originalMatchRequest=_originalMatchRequest;
@property(readonly, copy, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
- (void)setViewNeedsLayout;	// IMP=0x00000000000c5e31
- (_Bool)allowAutoMatch;	// IMP=0x00000000000c5dce
- (_Bool)isCanceling;	// IMP=0x00000000000c5dc6
- (_Bool)isInSetupMode;	// IMP=0x00000000000c5dbe
- (long long)automatchParticipantStatus;	// IMP=0x00000000000c5db6
- (id)makeButtonHeaderView;	// IMP=0x00000000000c5b76
- (void)updateFooterButtonStates;	// IMP=0x00000000000c5798
- (void)didUpdateAutoMatchPlayerCount;	// IMP=0x00000000000c5792
- (void)didUpdateParticipants;	// IMP=0x00000000000c5446
- (void)configureAutoBounce;	// IMP=0x00000000000c52e1
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000000000c508f
- (long long)multiplayerCellLayoutMode;	// IMP=0x00000000000c504b
- (id)viewControllerLayout;	// IMP=0x00000000000c5039
- (_Bool)isLoading;	// IMP=0x00000000000c4fe0
- (void)dataSource:(id)arg1 didRefreshSections:(id)arg2;	// IMP=0x00000000000c4dfe
- (void)didTapRemoveParticipant:(id)arg1;	// IMP=0x00000000000c4daf
- (void)didTapInviteOnCell:(id)arg1;	// IMP=0x00000000000c4da9
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x00000000000c4d97
- (void)handleNewParticipantCount:(long long)arg1;	// IMP=0x00000000000c4c08
- (void)playersToInvite:(id)arg1;	// IMP=0x00000000000c4bd5
- (void)localPlayerAcceptedGameInvite:(id)arg1;	// IMP=0x00000000000c4ba2
- (void)removedPlayer:(id)arg1;	// IMP=0x00000000000c4b9c
- (void)didClickCancelForServiceUnavailableAlert;	// IMP=0x00000000000c4b96
- (void)didInviteContactPlayers;	// IMP=0x00000000000c4b90
- (void)handleServiceUnavailable:(id)arg1;	// IMP=0x00000000000c4840
- (void)setShareInvitees;	// IMP=0x00000000000c4800
- (void)inviteContactPlayers:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c234a
- (void)invitePlayers:(id)arg1;	// IMP=0x00000000000c2344
- (void)cancel;	// IMP=0x00000000000c232b
- (void)cancelButtonPressed;	// IMP=0x00000000000c2218
- (void)playNow;	// IMP=0x00000000000c2212
- (void)performActionsForButtonCancelCurrentMatching;	// IMP=0x00000000000c220c
- (void)performActionsForButtonStartGame;	// IMP=0x00000000000c2049
- (_Bool)sendInvites;	// IMP=0x00000000000c1ad6
- (id)preferredFocusEnvironments;	// IMP=0x00000000000c1a17
- (void)inviteFriendsButtonPressed;	// IMP=0x00000000000c195a
- (void)startGameButtonPressed;	// IMP=0x00000000000c1954
- (void)updateStartGameButtonTitle;	// IMP=0x00000000000c194e
- (void)determineInvitationType;	// IMP=0x00000000000c18aa
- (void)updateDataSourceInvitationEnabled;	// IMP=0x00000000000c17d6
- (_Bool)allowPlayerCountSelection;	// IMP=0x00000000000c16f6
- (_Bool)canStartForcedAutomatch;	// IMP=0x00000000000c16ee
- (void)setInvitesFailedWithError:(id)arg1;	// IMP=0x00000000000c16e8
- (void)sendInvitesToContactPlayers:(id)arg1 legacyPlayers:(id)arg2;	// IMP=0x00000000000c16e2
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x00000000000c16d0
- (void)dismissPickerViewController;	// IMP=0x00000000000c1561
- (void)multiplayerPickerDidCancel:(id)arg1;	// IMP=0x00000000000c1491
- (void)didPickPlayers:(id)arg1 messageGroups:(id)arg2 customMessage:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000000c11f2
- (void)multiplayerPicker:(id)arg1 didPickPlayers:(id)arg2 messageGroups:(id)arg3 customMessage:(id)arg4;	// IMP=0x00000000000c1095
- (void)preparePlayerPicker;	// IMP=0x00000000000c0fb9
- (void)presentPlayerPicker;	// IMP=0x00000000000c0cd0
- (void)loadShareURLWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c0cb8
- (void)willPresentPlayerPicker:(id)arg1;	// IMP=0x00000000000c0cb2
- (long long)maxAvailablePlayers;	// IMP=0x00000000000c0c6e
- (void)removePlayer:(id)arg1;	// IMP=0x00000000000c0b26
- (void)removeAutomatchPlayer;	// IMP=0x00000000000c0a92
- (void)addAutomatchPlayer;	// IMP=0x00000000000c09fe
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;	// IMP=0x00000000000c09e4
- (void)setupCancelButton;	// IMP=0x00000000000c0940
- (void)configureDataSource;	// IMP=0x00000000000c0243
- (void)didEnterLoadedState;	// IMP=0x00000000000c01be
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x00000000000c017b
- (struct UIEdgeInsets)collectionViewContentInset;	// IMP=0x00000000000bff7f
- (void)updateHeaderFooterLayoutMargins;	// IMP=0x00000000000bfdeb
- (void)updateCollectionViewContentInset;	// IMP=0x00000000000bfc40
- (void)layoutSubviews;	// IMP=0x00000000000bf93c
- (void)viewSafeAreaInsetsDidChange;	// IMP=0x00000000000bf8e6
- (void)viewDidLayoutSubviews;	// IMP=0x00000000000bf8a5
- (void)refreshHeaderAndFooterMaterials;	// IMP=0x00000000000bf74e
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x00000000000bf5eb
- (void)viewDidLoad;	// IMP=0x00000000000bf2b8
- (void)sendInvitesToPlayersInOriginalMatchRequest;	// IMP=0x00000000000bede2
@property(readonly, nonatomic) GKMultiplayerDataSource *multiplayerDataSource;
- (void)dealloc;	// IMP=0x00000000000bed5b
- (id)initWithMatchRequest:(id)arg1;	// IMP=0x00000000000bebd5
- (id)init;	// IMP=0x00000000000bea80

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

