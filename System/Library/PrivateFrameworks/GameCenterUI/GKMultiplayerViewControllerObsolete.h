//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <GameCenterUI/GKDashboardMultiplayerPickerDelegateObsolete-Protocol.h>
#import <GameCenterUI/GKMultiplayerCustomInviteMessageViewControllerDelegate-Protocol.h>
#import <GameCenterUI/GKMultiplayerDataSourceDelegateObsolete-Protocol.h>

@class GKDashboardMultiplayerPickerViewControllerObsolete, GKGame, GKMatchRequest, GKMultiplayerDataSourceObsolete, NSString, NSURL, _TtC12GameCenterUI31GKMultiplayerFooterViewObsolete, _TtC12GameCenterUI37GKMultiplayerButtonHeaderViewObsolete;
@protocol GKDashboardNearbyBrowserDelegate;

@interface GKMultiplayerViewControllerObsolete <GKDashboardMultiplayerPickerDelegateObsolete, GKMultiplayerCustomInviteMessageViewControllerDelegate, GKMultiplayerDataSourceDelegateObsolete>
{
    _Bool _showCancelButton;	// 8 = 0x8
    _Bool _didAcceptGameInvite;	// 9 = 0x9
    _Bool _didStartForcedAutomatch;	// 10 = 0xa
    _Bool _addButtonEnabled;	// 11 = 0xb
    GKMatchRequest *_matchRequest;	// 16 = 0x10
    GKMatchRequest *_originalMatchRequest;	// 24 = 0x18
    NSString *_defaultInvitationMessage;	// 32 = 0x20
    GKGame *_game;	// 40 = 0x28
    id <GKDashboardNearbyBrowserDelegate> _nearbyDelegate;	// 48 = 0x30
    NSURL *_shareURL;	// 56 = 0x38
    long long _matchmakingMode;	// 64 = 0x40
    _TtC12GameCenterUI31GKMultiplayerFooterViewObsolete *_footerView;	// 72 = 0x48
    _TtC12GameCenterUI37GKMultiplayerButtonHeaderViewObsolete *_buttonHeaderView;	// 80 = 0x50
    GKDashboardMultiplayerPickerViewControllerObsolete *_playerPickerViewController;	// 88 = 0x58
    long long _invitationType;	// 96 = 0x60
    unsigned long long _messagesInviteStatus;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x000000000000c4cf
@property(nonatomic) unsigned long long messagesInviteStatus; // @synthesize messagesInviteStatus=_messagesInviteStatus;
@property(nonatomic) long long invitationType; // @synthesize invitationType=_invitationType;
@property(retain, nonatomic) GKDashboardMultiplayerPickerViewControllerObsolete *playerPickerViewController; // @synthesize playerPickerViewController=_playerPickerViewController;
@property(retain, nonatomic) _TtC12GameCenterUI37GKMultiplayerButtonHeaderViewObsolete *buttonHeaderView; // @synthesize buttonHeaderView=_buttonHeaderView;
@property(nonatomic) _Bool addButtonEnabled; // @synthesize addButtonEnabled=_addButtonEnabled;
@property(retain, nonatomic) _TtC12GameCenterUI31GKMultiplayerFooterViewObsolete *footerView; // @synthesize footerView=_footerView;
@property(nonatomic) long long matchmakingMode; // @synthesize matchmakingMode=_matchmakingMode;
@property(nonatomic) _Bool didStartForcedAutomatch; // @synthesize didStartForcedAutomatch=_didStartForcedAutomatch;
@property(retain, nonatomic) NSURL *shareURL; // @synthesize shareURL=_shareURL;
@property(nonatomic) __weak id <GKDashboardNearbyBrowserDelegate> nearbyDelegate; // @synthesize nearbyDelegate=_nearbyDelegate;
@property(nonatomic) _Bool didAcceptGameInvite; // @synthesize didAcceptGameInvite=_didAcceptGameInvite;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
@property(nonatomic) _Bool showCancelButton; // @synthesize showCancelButton=_showCancelButton;
@property(copy, nonatomic) NSString *defaultInvitationMessage; // @synthesize defaultInvitationMessage=_defaultInvitationMessage;
@property(readonly, copy, nonatomic) GKMatchRequest *originalMatchRequest; // @synthesize originalMatchRequest=_originalMatchRequest;
@property(readonly, copy, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
- (void)setViewNeedsLayout;	// IMP=0x000000000000c2c8
- (_Bool)isCanceling;	// IMP=0x000000000000c2c0
- (_Bool)isInSetupMode;	// IMP=0x000000000000c2b8
- (long long)automatchParticipantStatus;	// IMP=0x000000000000c2b0
- (id)makeButtonHeaderView;	// IMP=0x000000000000be90
- (void)didUpdateParticipants;	// IMP=0x000000000000bbe4
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000000b9a2
- (long long)multiplayerCellLayoutMode;	// IMP=0x000000000000b95e
- (id)viewControllerLayout;	// IMP=0x000000000000b94c
- (_Bool)isLoading;	// IMP=0x000000000000b8f3
- (void)dataSource:(id)arg1 didRefreshSections:(id)arg2;	// IMP=0x000000000000b711
- (void)didTapRemoveParticipant:(id)arg1;	// IMP=0x000000000000b6c2
- (void)didTapInviteOnCell:(id)arg1;	// IMP=0x000000000000b63a
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x000000000000b628
- (void)handleNewParticipantCount:(long long)arg1;	// IMP=0x000000000000b527
- (void)playersToInvite:(id)arg1;	// IMP=0x000000000000b4f4
- (void)localPlayerAcceptedGameInvite:(id)arg1;	// IMP=0x000000000000b4c1
- (void)removedPlayer:(id)arg1;	// IMP=0x000000000000b4bb
- (void)didClickCancelForServiceUnavailableAlert;	// IMP=0x000000000000b4b5
- (void)didInviteContactPlayers;	// IMP=0x000000000000b4af
- (void)handleServiceUnavailable:(id)arg1;	// IMP=0x000000000000b15f
- (void)setShareInvitees;	// IMP=0x000000000000b11f
- (void)inviteContactPlayers:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000009861
- (void)invitePlayers:(id)arg1;	// IMP=0x000000000000985b
- (void)cancel;	// IMP=0x0000000000009842
- (void)cancelButtonPressed;	// IMP=0x0000000000009768
- (void)playNow;	// IMP=0x0000000000009762
- (void)performActionsForButtonCancelCurrentMatching;	// IMP=0x000000000000975c
- (void)performActionsForButtonStartGame;	// IMP=0x0000000000009097
- (void)startGameButtonPressed;	// IMP=0x0000000000009091
- (void)updateStartGameButtonTitle;	// IMP=0x000000000000908b
- (id)existingMessageForInviteViewController:(id)arg1;	// IMP=0x000000000000903b
- (void)customInviteViewController:(id)arg1 didFinishWithMessage:(id)arg2;	// IMP=0x0000000000008fa8
- (void)addMessageButtonPressed;	// IMP=0x0000000000008e43
- (void)updateAddMessageButtonVisibility;	// IMP=0x0000000000008cd2
- (void)determineInvitationType;	// IMP=0x0000000000008c64
- (void)updateDataSourceInvitationEnabled;	// IMP=0x0000000000008b90
- (_Bool)allowPlayerCountSelection;	// IMP=0x0000000000008ab0
- (_Bool)canStartForcedAutomatch;	// IMP=0x0000000000008aa8
- (void)setInvitesFailedWithError:(id)arg1;	// IMP=0x0000000000008aa2
- (void)sendInvitesToContactPlayers:(id)arg1 legacyPlayers:(id)arg2;	// IMP=0x0000000000008a9c
- (void)dismissPickerViewController;	// IMP=0x0000000000008a2c
- (void)multiplayerPickerDidCancel:(id)arg1;	// IMP=0x000000000000895c
- (void)multiplayerPicker:(id)arg1 didPickPlayers:(id)arg2;	// IMP=0x00000000000086bb
- (void)preparePlayerPicker;	// IMP=0x00000000000085df
- (void)presentPlayerPicker;	// IMP=0x00000000000082f6
- (void)loadShareURLWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000082de
- (void)willPresentPlayerPicker:(id)arg1;	// IMP=0x00000000000082d8
- (long long)maxAvailablePlayers;	// IMP=0x0000000000008294
- (void)removePlayer:(id)arg1;	// IMP=0x000000000000813e
- (void)removeAutomatchPlayer;	// IMP=0x00000000000080aa
- (void)addAutomatchPlayer;	// IMP=0x0000000000008016
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;	// IMP=0x0000000000007ffc
- (void)setupCancelButton;	// IMP=0x0000000000007f58
- (void)configureDataSource;	// IMP=0x00000000000078ca
- (void)didEnterLoadedState;	// IMP=0x0000000000007845
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x0000000000007802
- (struct UIEdgeInsets)collectionViewContentInset;	// IMP=0x0000000000007606
- (void)updateHeaderFooterLayoutMargins;	// IMP=0x0000000000007472
- (void)updateCollectionViewContentInset;	// IMP=0x00000000000072c7
- (void)layoutSubviews;	// IMP=0x0000000000006fc3
- (void)viewSafeAreaInsetsDidChange;	// IMP=0x0000000000006f6d
- (void)viewDidLayoutSubviews;	// IMP=0x0000000000006f2c
- (void)refreshHeaderAndFooterMaterials;	// IMP=0x0000000000006ce1
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000000006b9a
- (void)viewDidLoad;	// IMP=0x0000000000006866
@property(readonly, nonatomic) GKMultiplayerDataSourceObsolete *multiplayerDataSource;
- (void)dealloc;	// IMP=0x00000000000067df
- (id)initWithMatchRequest:(id)arg1;	// IMP=0x0000000000006659
- (id)init;	// IMP=0x0000000000006504

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

