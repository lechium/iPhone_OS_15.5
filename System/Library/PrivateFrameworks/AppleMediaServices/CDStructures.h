//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Bag {
    CDUnknownFunctionPointerType *_vptr$Bag;
    struct shared_ptr<AMSCore::IBagDataSource> mDataSource;
};

struct ButtonKey {
    struct __CFString *_field1;
    int _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct FutureImp;

struct IBagDataSource;

struct Options {
    CDUnknownFunctionPointerType *_vptr$Options;
    struct shared_ptr<AMSCore::Options::OptionsImp> mOptionsImpSharedPtr;
};

struct OptionsImp;

struct Promise<PromiseResult> {
    CDUnknownFunctionPointerType *_vptr$Future;
    struct shared_ptr<AMSCore::Future<PromiseResult>::FutureImp> mFutureImp;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __SecKey {
    struct __CFRuntimeBase {
        unsigned long long _field1;
        _Atomic unsigned long long _field2;
    } _field1;
    struct __SecKeyDescriptor *_field2;
    void *_field3;
};

struct __shared_weak_count;

struct optional<AMSCore::Bag> {
    union {
        char __null_state_;
        struct Bag __val_;
    } ;
    _Bool __engaged_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct os_unfair_recursive_lock_s {
    struct os_unfair_lock_s ourl_lock;
    unsigned int ourl_count;
};

struct shared_ptr<AMSCore::Future<PromiseResult>::FutureImp> {
    struct FutureImp *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<AMSCore::IBagDataSource> {
    struct IBagDataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<AMSCore::Options::OptionsImp> {
    struct OptionsImp *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
} CDStruct_0f015c83;

// Template types
typedef struct Promise<PromiseResult> {
    CDUnknownFunctionPointerType *_vptr$Future;
    struct shared_ptr<AMSCore::Future<PromiseResult>::FutureImp> mFutureImp;
} Promise_9b356d78;

typedef struct optional<AMSCore::Bag> {
    union {
        char __null_state_;
        struct Bag __val_;
    } ;
    _Bool __engaged_;
} optional_a428bcea;

