//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSDictionary, NSError, NSMutableDictionary, NSMutableSet, NSSet, NSString, _SYSharedServiceDB;
@protocol OS_dispatch_queue, OS_os_transaction;

@interface SYPersistentStore : NSObject
{
    NSString *_path;	// 8 = 0x8
    struct __CFString *_loggingFacility;	// 16 = 0x10
    double _timeToLiveCache;	// 24 = 0x18
    NSObject<OS_os_transaction> *_transaction;	// 32 = 0x20
    _Bool _changeTrackingEnabled;	// 40 = 0x28
    NSString *_peerID;	// 48 = 0x30
    NSMutableDictionary *_peerSeqnoSets;	// 56 = 0x38
    NSMutableSet *_ignoringMessageIDs;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_syncQ;	// 72 = 0x48
    struct sqlite3 *_db;	// 80 = 0x50
    struct sqlite3_stmt *_getInFullSync;	// 88 = 0x58
    struct sqlite3_stmt *_getChangeCount;	// 96 = 0x60
    struct sqlite3_stmt *_getNextExpireTime;	// 104 = 0x68
    struct sqlite3_stmt *_purgeExpiredChanges;	// 112 = 0x70
    struct sqlite3_stmt *_insertChange;	// 120 = 0x78
    struct sqlite3_stmt *_getFullsyncSent;	// 128 = 0x80
    struct sqlite3_stmt *_setFullsyncSent;	// 136 = 0x88
    struct sqlite3_stmt *_logSyncComplete;	// 144 = 0x90
    struct sqlite3_stmt *_getChangeIDsSinceVersion;	// 152 = 0x98
    struct sqlite3_stmt *_getLocalVersion;	// 160 = 0xa0
    struct sqlite3_stmt *_getOldestVersion;	// 168 = 0xa8
    struct sqlite3_stmt *_setVectorClock;	// 176 = 0xb0
    struct sqlite3_stmt *_setPeerSeqNo;	// 184 = 0xb8
    struct sqlite3_stmt *_getPeerSeqNo;	// 192 = 0xc0
    struct sqlite3_stmt *_setPeerSeqNoSet;	// 200 = 0xc8
    struct sqlite3_stmt *_enterFullSync;	// 208 = 0xd0
    struct sqlite3_stmt *_exitFullSync;	// 216 = 0xd8
    struct sqlite3_stmt *_getIgnoringSyncID;	// 224 = 0xe0
    struct sqlite3_stmt *_getCurrentSyncID;	// 232 = 0xe8
    struct sqlite3_stmt *_getCurrentSyncStartTime;	// 240 = 0xf0
    struct sqlite3_stmt *_getLastEndedSyncID;	// 248 = 0xf8
    struct sqlite3_stmt *_getWaitingForSyncID;	// 256 = 0x100
    struct sqlite3_stmt *_setWaitingForSyncID;	// 264 = 0x108
    struct sqlite3_stmt *_setAllSentForSyncID;	// 272 = 0x110
    struct sqlite3_stmt *_getAllSentForCurrentSync;	// 280 = 0x118
    struct sqlite3_stmt *_getLastSyncError;	// 288 = 0x120
    struct sqlite3_stmt *_setSyncUserInfo;	// 296 = 0x128
    struct sqlite3_stmt *_getSyncUserInfo;	// 304 = 0x130
    struct sqlite3_stmt *_setSyncIDSOptions;	// 312 = 0x138
    struct sqlite3_stmt *_getSyncIDSOptions;	// 320 = 0x140
    _Bool _cachedVersionStale;	// 328 = 0x148
    double _unfinishedSyncTimeout;	// 336 = 0x150
    NSSet *_cachedChangedSyncIDs;	// 344 = 0x158
    unsigned long long _cachedChangedSyncIDsVersion;	// 352 = 0x160
    _SYSharedServiceDB *_sharedDB;	// 360 = 0x168
}

+ (id)_loadOrCreatePeerIDForDB:(struct sqlite3 *)arg1;	// IMP=0x000000000004ab4a
+ (_Bool)_tableEmpty:(id)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x000000000004a9ad
+ (id)sharedPersistentStoreForService:(id)arg1;	// IMP=0x000000000004a264
- (void).cxx_destruct;	// IMP=0x00000000000536f3
@property(retain, nonatomic) _SYSharedServiceDB *sharedDB; // @synthesize sharedDB=_sharedDB;
@property(nonatomic) _Bool cachedVersionStale; // @synthesize cachedVersionStale=_cachedVersionStale;
@property(nonatomic) unsigned long long cachedChangedSyncIDsVersion; // @synthesize cachedChangedSyncIDsVersion=_cachedChangedSyncIDsVersion;
@property(retain, nonatomic) NSSet *cachedChangedSyncIDs; // @synthesize cachedChangedSyncIDs=_cachedChangedSyncIDs;
@property(nonatomic) double unfinishedSyncTimeout; // @synthesize unfinishedSyncTimeout=_unfinishedSyncTimeout;
- (void)changeTrackingToggled:(_Bool)arg1;	// IMP=0x0000000000053626
- (void)clearAllChanges;	// IMP=0x0000000000053550
- (_Bool)objectChanged:(id)arg1 sinceVersion:(unsigned long long)arg2;	// IMP=0x00000000000531fd
- (unsigned long long)_oldestVersion;	// IMP=0x000000000005307f
- (_Bool)logSyncCompletionToRemoteVersion:(unsigned long long)arg1;	// IMP=0x0000000000052e6f
- (_Bool)logChanges:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000529c9
@property(readonly, nonatomic) unsigned long long lastSeenRemoteVersion;
@property(readonly, nonatomic) unsigned long long currentLocalVersion;
@property(readonly, nonatomic) double durationOfLastFullSync;
@property(nonatomic) _Bool completedSync;
@property(copy, nonatomic) NSDictionary *fullSyncIDSOptions;
@property(copy, nonatomic) NSDictionary *fullSyncUserInfo;
@property(copy, nonatomic) NSString *waitingForSyncEndID;
@property(readonly, nonatomic) NSString *lastSyncEndID;
@property(readonly, nonatomic) _Bool inFullSync;
@property(readonly, nonatomic) NSString *currentFullSyncID;
- (void)_verifyInTransactionForFullSync;	// IMP=0x0000000000050b8e
@property(readonly, nonatomic) NSError *lastSyncError;
@property(readonly, nonatomic) _Bool lastSyncFailed;
@property(readonly, nonatomic) _Bool currentSyncSendComplete;
- (void)sendCompletedForSyncWithID:(id)arg1;	// IMP=0x0000000000050390
- (_Bool)ignoringFullSyncWithID:(id)arg1;	// IMP=0x0000000000050126
- (_Bool)reassignCurrentSyncID:(id)arg1;	// IMP=0x000000000004fe79
- (void)exitFullSyncWithID:(id)arg1 error:(id)arg2;	// IMP=0x000000000004fa8a
- (void)enterFullSyncWithID:(id)arg1 ignoring:(_Bool)arg2;	// IMP=0x000000000004f7fc
@property(readonly, nonatomic) _Bool canStartNewSyncSession;
@property(copy, nonatomic) NSDate *lastMessageReceived;
@property(copy, nonatomic) NSDate *overflowResyncTime;
@property(retain, nonatomic) NSString *vectorClockJSON;
@property(readonly, nonatomic) unsigned long long changeCount;
@property(nonatomic) double timeToLive;
@property(readonly, nonatomic) NSString *path;
- (void)removeMessageIDFromIgnoreList:(id)arg1;	// IMP=0x000000000004e5aa
- (_Bool)shouldIgnoreMessageID:(id)arg1;	// IMP=0x000000000004e472
- (void)addMessageIDsToIgnore:(id)arg1;	// IMP=0x000000000004e334
- (void)_saveIgnoreList_LOCKED:(struct sqlite3 *)arg1;	// IMP=0x000000000004e22c
- (void)_loadIgnoreList_LOCKED:(struct sqlite3 *)arg1;	// IMP=0x000000000004e085
@property(nonatomic, getter=isPerformingDeltaSync) _Bool performingDeltaSync;
- (void)resetSequenceNumbersForPeer:(id)arg1;	// IMP=0x000000000004dd29
- (_Bool)sequenceNumberIsDuplicate:(unsigned long long)arg1 forPeer:(id)arg2;	// IMP=0x000000000004dbc8
- (unsigned long long)lastSequenceNumberForPeerID:(id)arg1;	// IMP=0x000000000004daa8
- (unsigned long long)_lastSequenceNumberForPeerID_LOCKED:(id)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x000000000004d8b4
- (void)setLastSequenceNumber:(unsigned long long)arg1 fromPeer:(id)arg2;	// IMP=0x000000000004d89f
- (_Bool)setLastSequenceNumber:(unsigned long long)arg1 fromPeer:(id)arg2 error:(id *)arg3;	// IMP=0x000000000004d0e2
- (unsigned long long)nextSequenceNumber;	// IMP=0x000000000004ceaa
- (void)resetSequenceNumber:(unsigned long long)arg1;	// IMP=0x000000000004cde3
- (void)_cacheTTL;	// IMP=0x000000000004cd07
- (void)_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2;	// IMP=0x000000000004cc24
- (_Bool)_LOCKED_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2 db:(struct sqlite3 *)arg3 error:(id *)arg4;	// IMP=0x000000000004c9d9
- (id)_sequenceNumberSetForPeerID:(id)arg1 inDB:(struct sqlite3 *)arg2;	// IMP=0x000000000004c830
- (id)_decodeIndexSet:(id)arg1;	// IMP=0x000000000004c64f
- (id)_encodeIndexSet:(id)arg1;	// IMP=0x000000000004c53b
- (void)_fixPeerInfo;	// IMP=0x000000000004c026
- (_Bool)_inTransaction:(_Bool)arg1 do:(CDUnknownBlockType)arg2;	// IMP=0x000000000004bc51
- (void)_withDB:(CDUnknownBlockType)arg1;	// IMP=0x000000000004bb51
- (void)_convertTimestamps;	// IMP=0x000000000004ba47
- (void)_prepareStatements;	// IMP=0x000000000004ba35
- (void)_setupSharedDB;	// IMP=0x000000000004b7f2
- (void)setPeerID:(id)arg1;	// IMP=0x000000000004b7e1
@property(readonly, nonatomic) NSString *peerID;
- (_Bool)_openDBAtPath:(id)arg1;	// IMP=0x000000000004afd9
- (int)_getSchemaVersion;	// IMP=0x000000000004aeb8
- (struct sqlite3 *)_dbRef;	// IMP=0x000000000004a9a3
- (void)dealloc;	// IMP=0x000000000004a6a2
- (id)initWithPath:(id)arg1 loggingFacility:(const struct __CFString *)arg2 changeTrackingEnabled:(_Bool)arg3;	// IMP=0x000000000004a558
- (id)initWithSharedDatabase:(id)arg1;	// IMP=0x000000000004a483
- (id)init;	// IMP=0x000000000004a475
- (id)dbPath;	// IMP=0x0000000000053967
- (id)lastDBErrorInfo;	// IMP=0x0000000000053763

@end

