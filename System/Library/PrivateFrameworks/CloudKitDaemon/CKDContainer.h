//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKitDaemon/CKDContainerScopedUserIDProvider-Protocol.h>
#import <CloudKitDaemon/CKXPCContainerScopedDaemonAPI-Protocol.h>

@class CKAccountOverrideInfo, CKContainerID, CKContainerOptions, CKDAccount, CKDAnonymousSharingManager, CKDAppContainerAccountTuple, CKDAppContainerTuple, CKDApplicationID, CKDDirectoryContext, CKDFlowControlManager, CKDKeyValueDiskCache, CKDLogicalDeviceContext, CKDLogicalDeviceScopedClientProxy, CKDMMCS, CKDPCSCache, CKDPCSFetchAggregator, CKDPCSManager, CKDProcessScopedClientProxy, CKDPublicIdentityLookupService, CKDServerConfiguration, CKDZoneGatekeeper, CKEntitlements, NSArray, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, NSURL;
@protocol NSObject, OS_dispatch_queue;

@interface CKDContainer : NSObject <CKXPCContainerScopedDaemonAPI, CKDContainerScopedUserIDProvider>
{
    _Bool _isForClouddInternalUse;	// 8 = 0x8
    _Bool _isClientMainBundleAppleExecutable;	// 9 = 0x9
    _Bool _hasDataContainer;	// 10 = 0xa
    unsigned int _clientSDKVersion;	// 12 = 0xc
    CKDAccount *_account;	// 16 = 0x10
    CKDProcessScopedClientProxy *_processScopedClientProxy;	// 24 = 0x18
    CKDLogicalDeviceScopedClientProxy *_logicalDeviceScopedClientProxy;	// 32 = 0x20
    long long _cachedEnvironment;	// 40 = 0x28
    long long _adopterProcessType;	// 48 = 0x30
    NSString *_applicationVersion;	// 56 = 0x38
    CKDDirectoryContext *_directoryContext;	// 64 = 0x40
    CKDAppContainerTuple *_appContainerTuple;	// 72 = 0x48
    CKEntitlements *_entitlements;	// 80 = 0x50
    CKContainerOptions *_options;	// 88 = 0x58
    CKDMMCS *_MMCS;	// 96 = 0x60
    CKDPCSCache *_pcsCache;	// 104 = 0x68
    CKDZoneGatekeeper *_gatekeeper;	// 112 = 0x70
    CKDServerConfiguration *_serverConfig;	// 120 = 0x78
    NSURL *_publicCloudDBURL;	// 128 = 0x80
    NSURL *_publicShareServiceURL;	// 136 = 0x88
    NSURL *_publicDeviceServiceURL;	// 144 = 0x90
    NSURL *_publicCodeServiceURL;	// 152 = 0x98
    NSURL *_publicMetricsServiceURL;	// 160 = 0xa0
    NSString *_containerScopedUserID;	// 168 = 0xa8
    NSString *_orgAdminUserID;	// 176 = 0xb0
    NSOperationQueue *_operationQueue;	// 184 = 0xb8
    NSOperationQueue *_cleanupOperationQueue;	// 192 = 0xc0
    NSMutableDictionary *_fakeErrorsByClassName;	// 200 = 0xc8
    NSMutableDictionary *_fakeResponseOperationLifetimeByClassName;	// 208 = 0xd0
    NSMutableDictionary *_fakeResponseOperationResultByClassNameByItemID;	// 216 = 0xd8
    CKDPCSFetchAggregator *_fetchAggregator;	// 224 = 0xe0
    NSURL *_applicationIcon;	// 232 = 0xe8
    NSString *_applicationDisplayName;	// 240 = 0xf0
    NSString *_resolvedAPSEnvironmentString;	// 248 = 0xf8
    NSString *_containingBundleID;	// 256 = 0x100
    CKDKeyValueDiskCache *_publicIdentitiesDiskCache;	// 264 = 0x108
    CKDPublicIdentityLookupService *_foregroundPublicIdentityLookupService;	// 272 = 0x110
    CKDPublicIdentityLookupService *_backgroundPublicIdentityLookupService;	// 280 = 0x118
    NSObject<OS_dispatch_queue> *_cancellationQueue;	// 288 = 0x120
    NSObject<OS_dispatch_queue> *_statusQueue;	// 296 = 0x128
    NSOperationQueue *_uncancellableOperationQueue;	// 304 = 0x130
    NSOperationQueue *_backgroundOperationThrottleQueue;	// 312 = 0x138
    NSOperationQueue *_cloudKitSupportOperationThrottleQueue;	// 320 = 0x140
    NSMutableSet *_pendingOperationIDs;	// 328 = 0x148
    long long _hasTCCAuthorizationTernary;	// 336 = 0x150
    long long _hasValidatedEntitlementsTernary;	// 344 = 0x158
    CKDLogicalDeviceContext *_deviceContext;	// 352 = 0x160
    NSString *_hardwareID;	// 360 = 0x168
    NSOperationQueue *_tccAuthOpQueue;	// 368 = 0x170
    NSObject<OS_dispatch_queue> *_tccAuthQueue;	// 376 = 0x178
    id <NSObject> _TCCDatabaseChangedNotificationObserver;	// 384 = 0x180
    NSMutableDictionary *_operationStatisticsByClassName;	// 392 = 0x188
    CKDFlowControlManager *_flowControlManager;	// 400 = 0x190
    CKDPCSManager *_pcsManager;	// 408 = 0x198
    CKDAnonymousSharingManager *_anonymousSharingManager;	// 416 = 0x1a0
    NSArray *_cachedSandboxExtensions;	// 424 = 0x1a8
}

+ (id)operationStatusReport:(id)arg1;	// IMP=0x0000000000038e55
+ (id)sharedClientThrottlingOperationQueue;	// IMP=0x0000000000028cac
+ (id)accountStatusWorkloop;	// IMP=0x000000000002874a
+ (void)initialize;	// IMP=0x000000000002845f
+ (id)applicationDataContainerDirectoryForBundleID:(id)arg1 outApplicationBinaryBundleURL:(id *)arg2 outAdopterProcessType:(long long *)arg3;	// IMP=0x000000000002167d
+ (id)containerWithAppContainerAccountTuple:(id)arg1 deviceContext:(id)arg2 sharedContainerTable:(id)arg3;	// IMP=0x000000000001fd13
+ (id)containerWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5 sharedContainerTable:(id)arg6;	// IMP=0x000000000001f8a2
+ (id)sharedDetachedContainers;	// IMP=0x000000000001f83d
+ (id)sharedInternalUseContainers;	// IMP=0x000000000001f7d8
- (void).cxx_destruct;	// IMP=0x000000000003cbb7
@property(nonatomic) _Bool hasDataContainer; // @synthesize hasDataContainer=_hasDataContainer;
@property(retain, nonatomic) NSArray *cachedSandboxExtensions; // @synthesize cachedSandboxExtensions=_cachedSandboxExtensions;
@property(retain, nonatomic) CKDAnonymousSharingManager *anonymousSharingManager; // @synthesize anonymousSharingManager=_anonymousSharingManager;
@property(retain, nonatomic) CKDPCSManager *pcsManager; // @synthesize pcsManager=_pcsManager;
@property(retain, nonatomic) CKDFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(retain, nonatomic) NSMutableDictionary *operationStatisticsByClassName; // @synthesize operationStatisticsByClassName=_operationStatisticsByClassName;
@property(retain, nonatomic) id <NSObject> TCCDatabaseChangedNotificationObserver; // @synthesize TCCDatabaseChangedNotificationObserver=_TCCDatabaseChangedNotificationObserver;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *tccAuthQueue; // @synthesize tccAuthQueue=_tccAuthQueue;
@property(retain, nonatomic) NSOperationQueue *tccAuthOpQueue; // @synthesize tccAuthOpQueue=_tccAuthOpQueue;
@property(retain, nonatomic) NSString *hardwareID; // @synthesize hardwareID=_hardwareID;
@property(retain, nonatomic) CKDLogicalDeviceContext *deviceContext; // @synthesize deviceContext=_deviceContext;
@property(nonatomic) long long hasValidatedEntitlementsTernary; // @synthesize hasValidatedEntitlementsTernary=_hasValidatedEntitlementsTernary;
@property(nonatomic) long long hasTCCAuthorizationTernary; // @synthesize hasTCCAuthorizationTernary=_hasTCCAuthorizationTernary;
@property(retain, nonatomic) NSMutableSet *pendingOperationIDs; // @synthesize pendingOperationIDs=_pendingOperationIDs;
@property(retain, nonatomic) NSOperationQueue *cloudKitSupportOperationThrottleQueue; // @synthesize cloudKitSupportOperationThrottleQueue=_cloudKitSupportOperationThrottleQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundOperationThrottleQueue; // @synthesize backgroundOperationThrottleQueue=_backgroundOperationThrottleQueue;
@property(retain, nonatomic) NSOperationQueue *uncancellableOperationQueue; // @synthesize uncancellableOperationQueue=_uncancellableOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statusQueue; // @synthesize statusQueue=_statusQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cancellationQueue; // @synthesize cancellationQueue=_cancellationQueue;
@property(retain, nonatomic) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService; // @synthesize backgroundPublicIdentityLookupService=_backgroundPublicIdentityLookupService;
@property(retain, nonatomic) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService; // @synthesize foregroundPublicIdentityLookupService=_foregroundPublicIdentityLookupService;
@property(retain, nonatomic) CKDKeyValueDiskCache *publicIdentitiesDiskCache; // @synthesize publicIdentitiesDiskCache=_publicIdentitiesDiskCache;
@property(retain, nonatomic) NSString *containingBundleID; // @synthesize containingBundleID=_containingBundleID;
@property(retain, nonatomic) NSString *resolvedAPSEnvironmentString; // @synthesize resolvedAPSEnvironmentString=_resolvedAPSEnvironmentString;
@property(retain, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(retain, nonatomic) NSURL *applicationIcon; // @synthesize applicationIcon=_applicationIcon;
@property(retain, nonatomic) CKDPCSFetchAggregator *fetchAggregator; // @synthesize fetchAggregator=_fetchAggregator;
@property(retain, nonatomic) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID; // @synthesize fakeResponseOperationResultByClassNameByItemID=_fakeResponseOperationResultByClassNameByItemID;
@property(retain, nonatomic) NSMutableDictionary *fakeResponseOperationLifetimeByClassName; // @synthesize fakeResponseOperationLifetimeByClassName=_fakeResponseOperationLifetimeByClassName;
@property(retain, nonatomic) NSMutableDictionary *fakeErrorsByClassName; // @synthesize fakeErrorsByClassName=_fakeErrorsByClassName;
@property(retain, nonatomic) NSOperationQueue *cleanupOperationQueue; // @synthesize cleanupOperationQueue=_cleanupOperationQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(copy) NSString *orgAdminUserID; // @synthesize orgAdminUserID=_orgAdminUserID;
@property(copy) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(copy) NSURL *publicMetricsServiceURL; // @synthesize publicMetricsServiceURL=_publicMetricsServiceURL;
@property(copy) NSURL *publicCodeServiceURL; // @synthesize publicCodeServiceURL=_publicCodeServiceURL;
@property(copy) NSURL *publicDeviceServiceURL; // @synthesize publicDeviceServiceURL=_publicDeviceServiceURL;
@property(copy) NSURL *publicShareServiceURL; // @synthesize publicShareServiceURL=_publicShareServiceURL;
@property(copy) NSURL *publicCloudDBURL; // @synthesize publicCloudDBURL=_publicCloudDBURL;
@property(retain, nonatomic) CKDServerConfiguration *serverConfig; // @synthesize serverConfig=_serverConfig;
@property(retain, nonatomic) CKDZoneGatekeeper *gatekeeper; // @synthesize gatekeeper=_gatekeeper;
@property(readonly, nonatomic) CKDPCSCache *pcsCache; // @synthesize pcsCache=_pcsCache;
@property(retain, nonatomic) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(nonatomic) _Bool isClientMainBundleAppleExecutable; // @synthesize isClientMainBundleAppleExecutable=_isClientMainBundleAppleExecutable;
@property(nonatomic) unsigned int clientSDKVersion; // @synthesize clientSDKVersion=_clientSDKVersion;
@property(retain, nonatomic) CKContainerOptions *options; // @synthesize options=_options;
@property(retain, nonatomic) CKEntitlements *entitlements; // @synthesize entitlements=_entitlements;
@property(retain, nonatomic) CKDAppContainerTuple *appContainerTuple; // @synthesize appContainerTuple=_appContainerTuple;
@property(retain, nonatomic) CKDDirectoryContext *directoryContext; // @synthesize directoryContext=_directoryContext;
@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) long long adopterProcessType; // @synthesize adopterProcessType=_adopterProcessType;
@property long long cachedEnvironment; // @synthesize cachedEnvironment=_cachedEnvironment;
@property(readonly, nonatomic) __weak CKDLogicalDeviceScopedClientProxy *logicalDeviceScopedClientProxy; // @synthesize logicalDeviceScopedClientProxy=_logicalDeviceScopedClientProxy;
@property(readonly, nonatomic) __weak CKDProcessScopedClientProxy *processScopedClientProxy; // @synthesize processScopedClientProxy=_processScopedClientProxy;
@property(nonatomic) _Bool isForClouddInternalUse; // @synthesize isForClouddInternalUse=_isForClouddInternalUse;
- (void)clearRecordCache;	// IMP=0x000000000003c4d2
- (void)showAssetCache;	// IMP=0x000000000003bf44
- (void)clearAssetCache;	// IMP=0x000000000003bc11
- (unsigned long long)countAssetCacheItemsWithDatabaseScope:(long long)arg1;	// IMP=0x000000000003bbff
- (unsigned long long)countAssetCacheItems;	// IMP=0x000000000003ba22
- (void)submitClientEventMetric:(id)arg1 completeWhenQueued:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000003b656
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003b43b
- (void)_dumpStatusReportArrayToOsTrace:(id)arg1;	// IMP=0x000000000003b25b
- (void)performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000003b249
- (void)performCodeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000003b237
- (void)_performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000000003a389
- (_Bool)canOpenFileAtURL:(id)arg1;	// IMP=0x000000000003a312
- (void)handleSignificantIssueBehavior:(unsigned long long)arg1 reason:(id)arg2;	// IMP=0x000000000003a29a
- (id)CKStatusReportArray;	// IMP=0x000000000003a286
- (id)CKStatusReportArrayIncludingSharedOperations:(_Bool)arg1;	// IMP=0x0000000000038f5e
- (void)addThrottle:(id)arg1;	// IMP=0x0000000000038d5a
- (void)resetThrottles;	// IMP=0x0000000000038c46
- (id)sandboxExtensions;	// IMP=0x00000000000381c5
- (void)linkWithClientContainer:(id)arg1;	// IMP=0x0000000000037f30
- (void)cancelOperationWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000372fe
- (void)cancelAllOperations;	// IMP=0x0000000000036e28
- (void)displayInfoOnAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000036c40
- (void)performFetchWebAuthTokenOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000367fe
- (void)performFetchShareMetadataOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000363b1
- (void)performAcceptSharesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000035f79
- (void)performMarkNotificationsReadOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000035b5f
- (void)performFetchNotificationChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000354c1
- (void)performModifyBadgeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000352ca
- (void)performFetchSubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000034e98
- (void)performModifySubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000034853
- (void)performQueryOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000033f83
- (void)performFetchRecordChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000332de
- (void)performFetchRecordZoneChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000032949
- (void)performFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000328ab
- (void)_reallyPerformFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000032007
- (void)_performFetchCurrentUserRecordOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000031bb7
- (void)performModifyRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000030b50
- (void)performFetchDatabaseChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002ff3b
- (void)performFetchRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002fa70
- (void)performModifyRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002f37f
- (void)performFetchShareParticipantsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002ef47
- (void)performDiscoverAllUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002eb30
- (void)performDiscoverUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002e716
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002e597
- (void)fetchLongLivedOperationsWithIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002e3ca
- (id)readBytesOfInMemoryAssetContentWithUUID:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x000000000002e2d4
- (id)getFileMetadataWithFileHandle:(id)arg1 openInfo:(id)arg2 error:(id *)arg3;	// IMP=0x000000000002e1da
- (id)openFileWithOpenInfo:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002e0f7
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000002dfc6
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(CDUnknownBlockType)arg2 customCompletionBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002da99
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002cc0f
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002c959
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c385
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002c0c7
- (void)importantUserIDsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002bdde
- (void)reloadAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002bb00
- (void)accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000002b318
- (long long)_accountStatus;	// IMP=0x000000000002b157
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;	// IMP=0x000000000002b13b
- (void)addOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;	// IMP=0x000000000002a930
- (void)enqueueOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2 initialMessageReplyBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000002a075
- (id)callbackProxyForOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;	// IMP=0x0000000000029e3f
- (id)containerForOperationInfo:(id)arg1;	// IMP=0x0000000000029d35
@property(readonly, nonatomic) _Bool hasValidatedEntitlements;
@property(readonly, nonatomic) _Bool hasTCCAuthorization;
- (void)_lockedSetHasTCCAuthorizationTernary:(long long)arg1;	// IMP=0x0000000000029984
- (_Bool)_lockedHasTCCAuthorization;	// IMP=0x000000000002942b
- (void)tearDown;	// IMP=0x0000000000028d60
- (void)setContainerAvailable:(_Bool)arg1;	// IMP=0x000000000002898e
- (void)_setupOperationQueues;	// IMP=0x000000000002879f
- (void)forwardInvocation:(id)arg1;	// IMP=0x00000000000285d7
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x0000000000028551
- (_Bool)_isContainerAuthorizedForOperation:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000027906
- (id)possiblyWrappedAuthTokenErrorGivenError:(id)arg1;	// IMP=0x0000000000027762
- (_Bool)_isAdopterAppleInternal;	// IMP=0x0000000000027663
@property(readonly, nonatomic) NSString *encryptionServiceName;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForPush;
@property(readonly, nonatomic) NSString *applicationBundleIDForCacheDirectory;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution;
@property(readonly, nonatomic) NSString *applicationBundleIdentifierForContainerAccess;
@property(readonly, nonatomic) CKAccountOverrideInfo *accountOverrideInfo;
@property(readonly, nonatomic) CKDAppContainerAccountTuple *appContainerAccountTuple;
@property(readonly, nonatomic) NSString *associatedApplicationBundleID;
@property(readonly, nonatomic) NSString *applicationBundleID;
@property(readonly) CKDApplicationID *applicationID;
@property(readonly, nonatomic) NSString *personaID;
@property(readonly, nonatomic) CKContainerID *containerID;
- (_Bool)shouldUsePCSEncryption;	// IMP=0x0000000000026ca9
@property(readonly, nonatomic) NSString *apsEnvironmentString;
@property(readonly, nonatomic) NSString *processName;
@property(readonly, nonatomic) NSString *regionCode;
@property(readonly, nonatomic) NSString *languageCode;
@property(readonly, nonatomic) NSString *deviceName;
- (void)fetchPrivateURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000026840
@property(readonly, nonatomic) NSString *deviceID;
- (void)fetchServerEnvironmentForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000026383
- (void)fetchImportantUserIDsForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000260ff
- (void)fetchPublicURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000025fb4
- (void)_fetchContainerServerInfoForOperation:(id)arg1 requireUserIDs:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000025b2f
- (void)fetchConfigurationForOperation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000025990
- (id)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;	// IMP=0x0000000000025521
- (id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2;	// IMP=0x0000000000025324
@property(readonly, copy) NSString *description;
- (id)CKPropertiesDescription;	// IMP=0x0000000000024e91
- (double)publicIdentitiesExpirationTimeout;	// IMP=0x00000000000245fc
- (void)performRequest:(id)arg1;	// IMP=0x0000000000023871
- (void)tearDownAssetTransfers;	// IMP=0x0000000000023805
- (_Bool)setupAssetTransfersWithError:(id *)arg1;	// IMP=0x00000000000237f3
- (_Bool)setupMMCSWrapperWithError:(id *)arg1;	// IMP=0x00000000000235bc
- (void)_determineHardwareInfo;	// IMP=0x0000000000023440
- (void)_loadApplicationContainerPathAndType;	// IMP=0x00000000000230a3
@property(readonly, nonatomic) _Bool allowsExpensiveNetworkAccess;
@property(readonly, nonatomic) _Bool allowsCellularAccess;
@property(readonly, nonatomic) _Bool preferAnonymousRequests;
@property(readonly, nonatomic) _Bool canAuthWithCloudKit;
- (_Bool)hasAccountAccessAndTCCAuth;	// IMP=0x0000000000022d35
@property(readonly, nonatomic) _Bool canAccessAccount;
- (_Bool)_cloudKitEnabledForCurrentClient;	// IMP=0x0000000000022996
- (void)_writeAdopterMetadataToCache;	// IMP=0x000000000002260b
- (void)_reloadAccount:(_Bool)arg1;	// IMP=0x0000000000021b2a
@property(retain, nonatomic) CKDAccount *account; // @synthesize account=_account;
- (void)dealloc;	// IMP=0x0000000000021549
- (void)dropMMCS;	// IMP=0x00000000000214d7
- (void)_clearCaches;	// IMP=0x000000000002117b
- (id)_initWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5;	// IMP=0x000000000001ffed

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

