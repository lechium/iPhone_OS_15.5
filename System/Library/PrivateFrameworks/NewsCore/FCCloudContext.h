//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NewsCore/FCAssetKeyManagerDelegate-Protocol.h>
#import <NewsCore/FCBundleSubscriptionChangeObserver-Protocol.h>
#import <NewsCore/FCCKDatabaseEncryptionDelegate-Protocol.h>
#import <NewsCore/FCCacheFlushing-Protocol.h>
#import <NewsCore/FCContentContext-Protocol.h>
#import <NewsCore/FCPrivateDataContext-Protocol.h>
#import <NewsCore/FCTestingContext-Protocol.h>

@class FCAccessChecker, FCArticleController, FCAssetManager, FCAudioPlaylist, FCClientEndpointConnection, FCCommandQueue, FCEntitlementService, FCFeedManager, FCFlintResourceManager, FCIssueReadingHistory, FCLocalAreasManager, FCNetworkBehaviorMonitor, FCNewsletterEndpointConnection, FCNotificationController, FCNotificationsEndpointConnection, FCPersonalizationData, FCPrivateChannelMembershipController, FCPurchaseController, FCReadingHistory, FCReadingList, FCSubscriptionController, FCSubscriptionList, FCTagController, FCTagSettings, FCTranslationManager, FCUserEventHistory, FCUserInfo, FCUserVectorManager, NSString, NSURL;
@protocol FCAVAssetFactoryType, FCAVAssetPrewarming, FCAppActivityMonitor, FCBackgroundTaskable, FCBundleSubscriptionManagerType, FCContentContext, FCContentContextInternal, FCCoreConfigurationManager, FCCurrentIssuesChecker, FCFavoritesPersonalizer, FCFeedDatabaseProtocol, FCFeedPersonalizing, FCLocalRegionManager, FCNewsAppConfigurationManager, FCNewsletterManager, FCOfflineArticleManagerType, FCPPTContext, FCPaidAccessCheckerType, FCPersonalizedGrouping, FCPrivateDataContext, FCPrivateDataContextInternal, FCPurchaseManagerType, FCPurchaseProviderType, FCPushNotificationHandling, FCWebURLResolutionEndpointConnection;

@interface FCCloudContext : NSObject <FCTestingContext, FCCKDatabaseEncryptionDelegate, FCAssetKeyManagerDelegate, FCBundleSubscriptionChangeObserver, FCContentContext, FCPrivateDataContext, FCCacheFlushing>
{
    _Bool _deviceIsiPad;	// 8 = 0x8
    FCSubscriptionController *_subscriptionController;	// 16 = 0x10
    id <FCFeedDatabaseProtocol> _feedDatabase;	// 24 = 0x18
    FCFeedManager *_feedManager;	// 32 = 0x20
    FCNetworkBehaviorMonitor *_networkBehaviorMonitor;	// 40 = 0x28
    id <FCAppActivityMonitor> _appActivityMonitor;	// 48 = 0x30
    FCClientEndpointConnection *_endpointConnection;	// 56 = 0x38
    FCCommandQueue *_endpointCommandQueue;	// 64 = 0x40
    id <FCNewsletterManager> _newsletterManager;	// 72 = 0x48
    FCNewsletterEndpointConnection *_newsletterEndpointConnection;	// 80 = 0x50
    FCCommandQueue *_newsletterEndpointCommandQueue;	// 88 = 0x58
    FCNotificationsEndpointConnection *_notificationsEndpointConnection;	// 96 = 0x60
    FCCommandQueue *_notificationsEndpointCommandQueue;	// 104 = 0x68
    FCNotificationController *_notificationController;	// 112 = 0x70
    id <FCOfflineArticleManagerType> _offlineArticleManager;	// 120 = 0x78
    FCPurchaseController *_purchaseController;	// 128 = 0x80
    id <FCPurchaseProviderType> _purchaseProvider;	// 136 = 0x88
    id <FCPurchaseManagerType> _purchaseManager;	// 144 = 0x90
    id <FCBundleSubscriptionManagerType> _bundleSubscriptionManager;	// 152 = 0x98
    FCEntitlementService *_entitlementService;	// 160 = 0xa0
    FCTranslationManager *_translationManager;	// 168 = 0xa8
    FCLocalAreasManager *_localAreasManager;	// 176 = 0xb0
    FCUserVectorManager *_userVectorManager;	// 184 = 0xb8
    id <FCCurrentIssuesChecker> _currentIssuesChecker;	// 192 = 0xc0
    id <FCPaidAccessCheckerType> _paidAccessChecker;	// 200 = 0xc8
    FCAccessChecker *_issueAccessChecker;	// 208 = 0xd0
    FCAccessChecker *_articleAccessChecker;	// 216 = 0xd8
    id <FCFavoritesPersonalizer> _favoritesPersonalizer;	// 224 = 0xe0
    id <FCPersonalizedGrouping> _groupingPersonalizer;	// 232 = 0xe8
    id <FCLocalRegionManager> _localRegionProvider;	// 240 = 0xf0
    id <FCBackgroundTaskable> _backgroundTaskable;	// 248 = 0xf8
    CDUnknownBlockType _offlineArticleManagerProvider;	// 256 = 0x100
    id <FCPPTContext> _pptContext;	// 264 = 0x108
    id <FCWebURLResolutionEndpointConnection> _webURLResolutionEndpointConnection;	// 272 = 0x110
    id <FCContentContext> _contentContext;	// 280 = 0x118
    id <FCPrivateDataContext> _privateDataContext;	// 288 = 0x120
    long long _options;	// 296 = 0x128
}

+ (id)testingContextWithDesiredHeadlineFieldOptions:(unsigned long long)arg1;	// IMP=0x00000000000dd9d8
+ (id)testingContext;	// IMP=0x00000000000dd993
+ (void)initialize;	// IMP=0x00000000000dd200
- (void).cxx_destruct;	// IMP=0x00000000000e2be3
@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) id <FCPrivateDataContext> privateDataContext; // @synthesize privateDataContext=_privateDataContext;
@property(retain, nonatomic) id <FCContentContext> contentContext; // @synthesize contentContext=_contentContext;
@property(readonly, nonatomic) id <FCWebURLResolutionEndpointConnection> webURLResolutionEndpointConnection; // @synthesize webURLResolutionEndpointConnection=_webURLResolutionEndpointConnection;
@property(readonly, nonatomic) id <FCPPTContext> pptContext; // @synthesize pptContext=_pptContext;
@property(readonly, nonatomic) _Bool deviceIsiPad; // @synthesize deviceIsiPad=_deviceIsiPad;
@property(copy, nonatomic) CDUnknownBlockType offlineArticleManagerProvider; // @synthesize offlineArticleManagerProvider=_offlineArticleManagerProvider;
@property(nonatomic) __weak id <FCBackgroundTaskable> backgroundTaskable; // @synthesize backgroundTaskable=_backgroundTaskable;
@property(retain, nonatomic) id <FCLocalRegionManager> localRegionProvider; // @synthesize localRegionProvider=_localRegionProvider;
@property(retain, nonatomic) id <FCPersonalizedGrouping> groupingPersonalizer; // @synthesize groupingPersonalizer=_groupingPersonalizer;
@property(retain, nonatomic) id <FCFavoritesPersonalizer> favoritesPersonalizer; // @synthesize favoritesPersonalizer=_favoritesPersonalizer;
@property(retain, nonatomic) FCAccessChecker *articleAccessChecker; // @synthesize articleAccessChecker=_articleAccessChecker;
@property(retain, nonatomic) FCAccessChecker *issueAccessChecker; // @synthesize issueAccessChecker=_issueAccessChecker;
@property(retain, nonatomic) id <FCPaidAccessCheckerType> paidAccessChecker; // @synthesize paidAccessChecker=_paidAccessChecker;
@property(retain, nonatomic) id <FCCurrentIssuesChecker> currentIssuesChecker; // @synthesize currentIssuesChecker=_currentIssuesChecker;
@property(retain, nonatomic) FCUserVectorManager *userVectorManager; // @synthesize userVectorManager=_userVectorManager;
@property(retain, nonatomic) FCLocalAreasManager *localAreasManager; // @synthesize localAreasManager=_localAreasManager;
@property(retain, nonatomic) FCTranslationManager *translationManager; // @synthesize translationManager=_translationManager;
@property(retain, nonatomic) FCEntitlementService *entitlementService; // @synthesize entitlementService=_entitlementService;
@property(readonly, nonatomic) id <FCBundleSubscriptionManagerType> bundleSubscriptionManager; // @synthesize bundleSubscriptionManager=_bundleSubscriptionManager;
@property(readonly, nonatomic) id <FCPurchaseManagerType> purchaseManager; // @synthesize purchaseManager=_purchaseManager;
@property(readonly, nonatomic) id <FCPurchaseProviderType> purchaseProvider; // @synthesize purchaseProvider=_purchaseProvider;
@property(readonly, nonatomic) FCPurchaseController *purchaseController; // @synthesize purchaseController=_purchaseController;
@property(readonly, nonatomic) FCNotificationController *notificationController; // @synthesize notificationController=_notificationController;
@property(readonly, nonatomic) FCCommandQueue *newsletterEndpointCommandQueue; // @synthesize newsletterEndpointCommandQueue=_newsletterEndpointCommandQueue;
@property(readonly, nonatomic) FCNewsletterEndpointConnection *newsletterEndpointConnection; // @synthesize newsletterEndpointConnection=_newsletterEndpointConnection;
@property(readonly, nonatomic) id <FCNewsletterManager> newsletterManager; // @synthesize newsletterManager=_newsletterManager;
@property(retain, nonatomic) id <FCAppActivityMonitor> appActivityMonitor; // @synthesize appActivityMonitor=_appActivityMonitor;
@property(readonly, nonatomic) id <FCFeedDatabaseProtocol> feedDatabase; // @synthesize feedDatabase=_feedDatabase;
- (void)_purchaseControllerDidAddALaCarteSubscription;	// IMP=0x00000000000e28cc
- (void)bundleSubscriptionDidSubscribe:(id)arg1;	// IMP=0x00000000000e2845
- (_Bool)shouldAssetKeyManagerSimulateUnauthorizedAssetKeys:(id)arg1;	// IMP=0x00000000000e25c6
- (void)fetchShouldSecureSubscriptionsForDatabase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e1e4f
- (void)fetchOriginalDataShouldBeDeletedAfterMigrationForDatabase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e1b78
- (void)fetchPrivateDataEncryptionIsRequiredForDatabase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e17c7
- (void)fetchPrivateDataEncryptionMigrationIsDesiredForDatabase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e11e9
- (void)fetchPrivateDataEncryptionIsAllowedForDatabase:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e08d6
- (id)insertTestArticlesWithCount:(unsigned long long)arg1;	// IMP=0x00000000000e083a
- (id)insertTestArticle;	// IMP=0x00000000000e0765
@property(readonly, nonatomic) id <FCPushNotificationHandling> privatePushNotificationHandler;
@property(readonly, copy, nonatomic) NSString *privateDataDirectory;
@property(readonly, nonatomic) id <FCPrivateDataContextInternal> internalPrivateDataContext;
- (id)privateStoreWithName:(id)arg1 version:(unsigned long long)arg2 options:(unsigned long long)arg3;	// IMP=0x00000000000e05e7
@property(readonly, nonatomic, getter=isPrivateDataSyncingEnabled) _Bool privateDataSyncingEnabled;
@property(readonly, nonatomic) FCTagSettings *tagSettings;
@property(readonly, nonatomic) FCUserInfo *userInfo;
@property(readonly, nonatomic) FCSubscriptionList *subscriptionList;
@property(readonly, nonatomic) FCUserEventHistory *userEventHistory;
@property(readonly, nonatomic) FCAudioPlaylist *audioPlaylist;
@property(readonly, nonatomic) FCReadingList *readingList;
@property(readonly, nonatomic) FCReadingHistory *readingHistory;
@property(readonly, nonatomic) FCPrivateChannelMembershipController *privateChannelMembershipController;
@property(readonly, nonatomic) FCPersonalizationData *personalizationData;
@property(readonly, nonatomic) FCIssueReadingHistory *issueReadingHistory;
- (id)interestTokenForContentManifest:(id)arg1;	// IMP=0x00000000000e0200
- (id)recordTreeSourceWithRecordSources:(id)arg1;	// IMP=0x00000000000e017d
- (id)recordSourceWithSchema:(id)arg1;	// IMP=0x00000000000e00fa
@property(readonly, nonatomic) NSURL *assetCacheDirectoryURL;
@property(readonly, copy, nonatomic) NSString *contentDirectory;
@property(readonly, copy, nonatomic) NSString *supportedContentStoreFrontID;
@property(readonly, copy, nonatomic) NSString *contentStoreFrontID;
@property(readonly, nonatomic) id <FCContentContextInternal> internalContentContext;
- (id)magazinesConfigurationManager;	// IMP=0x00000000000dff0c
- (id)news_core_ConfigurationManager;	// IMP=0x00000000000dfebc
@property(readonly, nonatomic) id <FCNewsAppConfigurationManager> appConfigurationManager;
@property(readonly, nonatomic) id <FCCoreConfigurationManager> configurationManager;
@property(readonly, nonatomic) FCFlintResourceManager *flintResourceManager;
@property(readonly, nonatomic) FCTagController *tagController;
@property(readonly, nonatomic) FCArticleController *articleController;
@property(readonly, nonatomic) id <FCAVAssetFactoryType> avAssetFactory;
@property(readonly, nonatomic) id <FCAVAssetPrewarming> avAssetPrewarmer;
@property(readonly, nonatomic) FCAssetManager *assetManager;
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1;	// IMP=0x00000000000dfbf0
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1 exceptForFlusher:(id)arg2;	// IMP=0x00000000000dfb78
@property(readonly, copy, nonatomic) NSString *contentEnvironmentToken;
- (void)ppt_prewarmFeedDatabase;	// IMP=0x00000000000dfaeb
- (void)ppt_overrideFeedEndpoint:(long long)arg1;	// IMP=0x00000000000dfa9f
@property(readonly, nonatomic) _Bool isPrivateDatabaseTemporarilySuspended;
@property(readonly, nonatomic) _Bool isPrivateDatabaseOnline;
@property(readonly, nonatomic) _Bool isPrivateDatabaseStartingUp;
@property(readonly, nonatomic) _Bool isPrivateDataEncryptionEnabled;
@property(readonly, nonatomic) FCCommandQueue *notificationsEndpointCommandQueue; // @synthesize notificationsEndpointCommandQueue=_notificationsEndpointCommandQueue;
@property(readonly, nonatomic) FCNotificationsEndpointConnection *notificationsEndpointConnection; // @synthesize notificationsEndpointConnection=_notificationsEndpointConnection;
@property(readonly, nonatomic) FCCommandQueue *endpointCommandQueue; // @synthesize endpointCommandQueue=_endpointCommandQueue;
@property(readonly, nonatomic) FCClientEndpointConnection *endpointConnection; // @synthesize endpointConnection=_endpointConnection;
@property(readonly, nonatomic) FCNetworkBehaviorMonitor *networkBehaviorMonitor; // @synthesize networkBehaviorMonitor=_networkBehaviorMonitor;
@property(readonly, nonatomic) id <FCFeedPersonalizing> feedPersonalizer;
@property(readonly, nonatomic) FCFeedManager *feedManager; // @synthesize feedManager=_feedManager;
- (id)notificationsController;	// IMP=0x00000000000dedbb
@property(readonly, nonatomic) FCSubscriptionController *subscriptionController; // @synthesize subscriptionController=_subscriptionController;
@property(readonly, nonatomic) id <FCOfflineArticleManagerType> offlineArticleManager; // @synthesize offlineArticleManager=_offlineArticleManager;
- (id)initWithContentContext:(id)arg1 privateDataContext:(id)arg2 networkBehaviorMonitor:(id)arg3 options:(long long)arg4;	// IMP=0x00000000000ddd27
- (id)initForTestingWithDesiredHeadlineFieldOptions:(unsigned long long)arg1;	// IMP=0x00000000000dda0e
- (id)initForTesting;	// IMP=0x00000000000dd9bc
- (id)initWithConfiguration:(id)arg1 configurationManager:(id)arg2 contentHostDirectory:(id)arg3 privateDataHostDirectory:(id)arg4 privateDataActionProvider:(id)arg5 networkBehaviorMonitor:(id)arg6 appActivityMonitor:(id)arg7 desiredHeadlineFieldOptions:(unsigned long long)arg8 feedUsage:(long long)arg9 deviceIsiPad:(_Bool)arg10 backgroundTaskable:(id)arg11 privateDataSyncAvailability:(id)arg12 pptContext:(id)arg13 options:(long long)arg14;	// IMP=0x00000000000dd499
- (id)initWithConfiguration:(id)arg1 configurationManager:(id)arg2 contentHostDirectory:(id)arg3 privateDataHostDirectory:(id)arg4 privateDataActionProvider:(id)arg5 networkBehaviorMonitor:(id)arg6 appActivityMonitor:(id)arg7 desiredHeadlineFieldOptions:(unsigned long long)arg8 feedUsage:(long long)arg9 lockStoreFrontIfNeeded:(_Bool)arg10 deviceIsiPad:(_Bool)arg11 backgroundTaskable:(id)arg12 privateDataSyncAvailability:(id)arg13 pptContext:(id)arg14;	// IMP=0x00000000000dd437
- (id)init;	// IMP=0x00000000000dd2f2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

