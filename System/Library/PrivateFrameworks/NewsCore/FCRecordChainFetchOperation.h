//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class FCCachePolicy, FCEdgeCacheHint, FCHeldRecords, NSArray, NSDictionary, NSMutableArray, NSMutableSet;
@protocol FCContentContext;

@interface FCRecordChainFetchOperation
{
    _Bool _shouldReturnErrorWhenSomeRecordsMissing;	// 8 = 0x8
    _Bool _shouldFailOnLimitExceededError;	// 9 = 0x9
    _Bool _shouldBypassRecordSourcePersistence;	// 10 = 0xa
    id <FCContentContext> _context;	// 16 = 0x10
    NSArray *_topLevelRecordIDs;	// 24 = 0x18
    NSDictionary *_linkKeysByRecordType;	// 32 = 0x20
    FCCachePolicy *_cachePolicy;	// 40 = 0x28
    NSDictionary *_cachePoliciesByRecordType;	// 48 = 0x30
    CDUnknownBlockType _dynamicCachePolicyBlock;	// 56 = 0x38
    FCEdgeCacheHint *_edgeCacheHint;	// 64 = 0x40
    NSArray *_additionalRecordSources;	// 72 = 0x48
    CDUnknownBlockType _cachedRecordsLookupBlock;	// 80 = 0x50
    CDUnknownBlockType _recordChainCompletionHandler;	// 88 = 0x58
    NSArray *_recordSources;	// 96 = 0x60
    NSDictionary *_recordSourcesByRecordType;	// 104 = 0x68
    NSDictionary *_pbRecordTypesByRecordType;	// 112 = 0x70
    FCHeldRecords *_cachedRecords;	// 120 = 0x78
    NSMutableSet *_actualTopLevelRecordIDs;	// 128 = 0x80
    NSMutableSet *_skippedTopLevelRecordIDs;	// 136 = 0x88
    NSMutableSet *_missingCachedOnlyTopLevelRecordIDs;	// 144 = 0x90
    NSDictionary *_resultHeldRecordsByType;	// 152 = 0x98
    NSMutableArray *_mutableNetworkEvents;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x000000000011e26f
@property(copy, nonatomic) CDUnknownBlockType recordChainCompletionHandler; // @synthesize recordChainCompletionHandler=_recordChainCompletionHandler;
@property(copy, nonatomic) CDUnknownBlockType cachedRecordsLookupBlock; // @synthesize cachedRecordsLookupBlock=_cachedRecordsLookupBlock;
@property(nonatomic) _Bool shouldBypassRecordSourcePersistence; // @synthesize shouldBypassRecordSourcePersistence=_shouldBypassRecordSourcePersistence;
@property(retain, nonatomic) NSArray *additionalRecordSources; // @synthesize additionalRecordSources=_additionalRecordSources;
@property(copy, nonatomic) FCEdgeCacheHint *edgeCacheHint; // @synthesize edgeCacheHint=_edgeCacheHint;
@property(nonatomic) _Bool shouldFailOnLimitExceededError; // @synthesize shouldFailOnLimitExceededError=_shouldFailOnLimitExceededError;
@property(nonatomic) _Bool shouldReturnErrorWhenSomeRecordsMissing; // @synthesize shouldReturnErrorWhenSomeRecordsMissing=_shouldReturnErrorWhenSomeRecordsMissing;
@property(copy, nonatomic) CDUnknownBlockType dynamicCachePolicyBlock; // @synthesize dynamicCachePolicyBlock=_dynamicCachePolicyBlock;
@property(copy, nonatomic) NSDictionary *cachePoliciesByRecordType; // @synthesize cachePoliciesByRecordType=_cachePoliciesByRecordType;
@property(copy, nonatomic) FCCachePolicy *cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(copy, nonatomic) NSDictionary *linkKeysByRecordType; // @synthesize linkKeysByRecordType=_linkKeysByRecordType;
@property(copy, nonatomic) NSArray *topLevelRecordIDs; // @synthesize topLevelRecordIDs=_topLevelRecordIDs;
@property(retain, nonatomic) id <FCContentContext> context; // @synthesize context=_context;
- (void)operationWillFinishWithError:(id)arg1;	// IMP=0x000000000011a737
@property(readonly, copy, nonatomic) NSArray *networkEvents;
- (void)performOperation;	// IMP=0x000000000011922f
- (void)prepareOperation;	// IMP=0x0000000000118e22
- (_Bool)validateOperation;	// IMP=0x0000000000118ba4
- (id)init;	// IMP=0x0000000000118ae5

@end

