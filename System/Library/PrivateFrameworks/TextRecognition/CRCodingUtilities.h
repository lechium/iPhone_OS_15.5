//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface CRCodingUtilities : NSObject
{
}

+ (_Bool)checkValidRange:(struct _NSRange)arg1 forDataLength:(unsigned long long)arg2;	// IMP=0x00000000000ab6e4
+ (id)arrayFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2 objectProviderBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ab651
+ (id)stringFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab5fa
+ (id)ddScannerResultFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab5a3
+ (struct _NSRange)rangeFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab52f
+ (struct CGRect)rectFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab45c
+ (struct CGSize)sizeFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab3e1
+ (struct CGPoint)pointFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab366
+ (double)cgFloatFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab2b9
+ (float)floatFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab210
+ (unsigned long long)unsignedIntegerFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab16f
+ (long long)integerFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab0ce
+ (_Bool)boolFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000ab030
+ (id)objectDataFromEncodingData:(id)arg1 offset:(unsigned long long *)arg2;	// IMP=0x00000000000aaf66
+ (id)encodingDataForRange:(struct _NSRange)arg1;	// IMP=0x00000000000aaf1a
+ (id)encodingDataForRect:(struct CGRect)arg1;	// IMP=0x00000000000aaec9
+ (id)encodingDataForSize:(struct CGSize)arg1;	// IMP=0x00000000000aae75
+ (id)encodingDataForPoint:(struct CGPoint)arg1;	// IMP=0x00000000000aae21
+ (id)encodingDataForCGFloat:(double)arg1;	// IMP=0x00000000000aadd7
+ (id)encodingDataForFloat:(float)arg1;	// IMP=0x00000000000aad8d
+ (id)encodingDataForUInteger:(unsigned long long)arg1;	// IMP=0x00000000000aad46
+ (id)encodingDataForInteger:(long long)arg1;	// IMP=0x00000000000aacff
+ (id)encodingDataForBool:(_Bool)arg1;	// IMP=0x00000000000aacb8
+ (id)encodingDataForCodable:(id)arg1;	// IMP=0x00000000000aac5d
+ (void)appendRange:(struct _NSRange)arg1 toData:(id)arg2;	// IMP=0x00000000000aabf6
+ (void)appendRect:(struct CGRect)arg1 toData:(id)arg2;	// IMP=0x00000000000aab67
+ (void)appendSize:(struct CGSize)arg1 toData:(id)arg2;	// IMP=0x00000000000aaafa
+ (void)appendPoint:(struct CGPoint)arg1 toData:(id)arg2;	// IMP=0x00000000000aaa8d
+ (void)appendCGFloat:(double)arg1 toData:(id)arg2;	// IMP=0x00000000000aaa62
+ (void)appendFloat:(float)arg1 toData:(id)arg2;	// IMP=0x00000000000aaa37
+ (void)appendUInteger:(unsigned long long)arg1 toData:(id)arg2;	// IMP=0x00000000000aaa0a
+ (void)appendInteger:(long long)arg1 toData:(id)arg2;	// IMP=0x00000000000aa9dd
+ (void)appendBool:(_Bool)arg1 toData:(id)arg2;	// IMP=0x00000000000aa9b1
+ (void)appendCodable:(id)arg1 toData:(id)arg2;	// IMP=0x00000000000aa8e2

@end

