//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CIImage;

@interface CRImage : NSObject
{
    struct __CVBuffer *_pixelBuffer;	// 8 = 0x8
    _Bool _isFullRange;	// 16 = 0x10
    _Bool _vImageDataIsCopy;	// 17 = 0x11
    int _colorSpace;	// 20 = 0x14
    CIImage *_ciImage;	// 24 = 0x18
    struct CGImage *_cgImage;	// 32 = 0x20
    struct vImage_Buffer _vImage;	// 40 = 0x28
}

+ (void)drawVerticalLineAtXOffset:(double)arg1 image:(id)arg2;	// IMP=0x000000000011ba23
+ (_Bool)convertVImage:(const struct vImage_Buffer *)arg1 inColorSpace:(int)arg2 toVImage:(struct vImage_Buffer *)arg3 toColorSpace:(int)arg4;	// IMP=0x000000000011ae84
+ (struct vImage_Buffer)applyEXIFTransformsOnImage:(const struct vImage_Buffer *)arg1 inColorSpace:(int)arg2 properties:(id)arg3;	// IMP=0x000000000011a6b7
+ (void)cgOrientation:(unsigned int)arg1 toVImageRotationMode:(char *)arg2 andReflection:(int *)arg3;	// IMP=0x000000000011a678
+ (id)nameForColorSpace:(int)arg1;	// IMP=0x0000000000118e0e
+ (unsigned long long)channelsForColorSpace:(int)arg1;	// IMP=0x0000000000118da4
+ (unsigned long long)bytesPerPixelForColorSpace:(int)arg1;	// IMP=0x0000000000118d88
+ (struct vImage_Buffer)allocateVImageBufferWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 colorSpace:(int)arg3;	// IMP=0x00000000001150b6
+ (struct vImage_Buffer)allocateVImageBufferWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 bytesPerPixel:(int)arg3;	// IMP=0x0000000000115084
- (void).cxx_destruct;	// IMP=0x000000000011bc0e
@property(nonatomic) _Bool vImageDataIsCopy; // @synthesize vImageDataIsCopy=_vImageDataIsCopy;
@property(nonatomic) struct CGImage *cgImage; // @synthesize cgImage=_cgImage;
@property(nonatomic) struct __CVBuffer *pixelBuffer; // @synthesize pixelBuffer=_pixelBuffer;
@property(retain, nonatomic) CIImage *ciImage; // @synthesize ciImage=_ciImage;
@property(readonly) _Bool isFullRange; // @synthesize isFullRange=_isFullRange;
@property(readonly) int colorSpace; // @synthesize colorSpace=_colorSpace;
@property(readonly) struct vImage_Buffer vImage; // @synthesize vImage=_vImage;
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1;	// IMP=0x000000000011bb6c
- (id)initWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x000000000011bb56
- (id)initWithContentsOfURL:(id)arg1;	// IMP=0x000000000011bb41
- (id)initWithCGImage:(struct CGImage *)arg1 properties:(id)arg2;	// IMP=0x000000000011bb2b
- (id)initWithCGImage:(struct CGImage *)arg1;	// IMP=0x000000000011bb16
- (id)initWithCIImage:(id)arg1;	// IMP=0x000000000011bb01
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x000000000011baec
- (id)imageByOverlayingRects:(struct CGRect *)arg1 count:(long long)arg2;	// IMP=0x000000000011b849
- (id)imageByOverlayingImage:(id)arg1 opacity:(float)arg2;	// IMP=0x000000000011b615
- (id)imageByConvertingToColorSpace:(int)arg1;	// IMP=0x000000000011b52c
- (id)initWithContentsOfURL:(id)arg1 toColorSpace:(int)arg2;	// IMP=0x000000000011adb0
- (id)initWithCGImage:(struct CGImage *)arg1 properties:(id)arg2 toColorSpace:(int)arg3;	// IMP=0x000000000011a9f5
- (id)initWithCGImage:(struct CGImage *)arg1 toColorSpace:(int)arg2;	// IMP=0x000000000011a660
- (id)imageByInvertingIntensity;	// IMP=0x000000000011a53b
- (void)dealloc;	// IMP=0x000000000011a467
- (void)writeToFile:(id)arg1;	// IMP=0x000000000011a413
- (id)imageByCroppingRectangle:(struct CGRect)arg1 toHeight:(unsigned long long)arg2 andWidth:(unsigned long long)arg3 withRotationAngle:(float)arg4;	// IMP=0x000000000011a142
- (id)imageByCroppingRectangle:(struct CGRect)arg1 textFeaturePoints:(id)arg2 radians:(float)arg3 rotatedRoi:(struct CGRect *)arg4;	// IMP=0x0000000000119886
- (id)imageByCroppingRectangle:(struct CGRect)arg1;	// IMP=0x00000000001196e3
- (id)initWithMat:(const struct Mat *)arg1;	// IMP=0x00000000001190a7
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1 inColorSpace:(int)arg2;	// IMP=0x0000000000119079
- (id)initWithVImageBuffer:(struct vImage_Buffer)arg1 inColorSpace:(int)arg2 toColorSpace:(int)arg3;	// IMP=0x0000000000118f1b
- (id)initWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 colorSpace:(int)arg3;	// IMP=0x0000000000118e64
- (unsigned long long)numChannels;	// IMP=0x0000000000118de7
- (unsigned long long)bytesPerPixel;	// IMP=0x0000000000118dc0
- (id)imageByApplyingBinaryMask:(id)arg1;	// IMP=0x0000000000118a93
- (id)imageByDilating;	// IMP=0x00000000001188b0
- (id)imageByPaddingX:(unsigned long long)arg1 paddingY:(unsigned long long)arg2;	// IMP=0x000000000011879e
- (id)imageByPaddingToRatioAndScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 alignCenter:(_Bool)arg3;	// IMP=0x00000000001183f3
- (id)imageByPaddingToRatioAndScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x00000000001183db
- (id)imageByScalingToWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x00000000001181b4
- (id)imageByCorrectingFromOrientation:(unsigned int)arg1;	// IMP=0x0000000000117fcc
- (id)imageByRotating180;	// IMP=0x0000000000117d54
- (id)imageByRotating90CW;	// IMP=0x0000000000117adf
- (id)imageByCroppingTextFeature:(id)arg1 correctedBoundingBox:(id)arg2 padding:(struct CGPoint)arg3 networkInputSize:(struct CGSize)arg4;	// IMP=0x00000000001179a9
- (id)imageByAdjustingBrightnessAlpha:(double)arg1 beta:(double)arg2;	// IMP=0x0000000000117870
- (id)imageByApplyingHistogramCorrection;	// IMP=0x00000000001176a6
- (struct vImage_Buffer)createFloatBuffer;	// IMP=0x0000000000117427
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2 adjustedToSize:(struct CGSize *)arg3 mask:(struct CGImage *)arg4;	// IMP=0x0000000000116c9c
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2 adjustedToSize:(struct CGSize *)arg3;	// IMP=0x0000000000116c85
- (struct __CVBuffer *)pixelBufferWithScale:(double)arg1 paddedToSize:(struct CGSize)arg2;	// IMP=0x00000000001168d3
- (void)runBlockWithARGB8888Image:(CDUnknownBlockType)arg1 blockOwnsMemory:(_Bool)arg2;	// IMP=0x0000000000116592
- (id)initWithCIImage:(id)arg1 toColorSpace:(int)arg2;	// IMP=0x0000000000115f80
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)arg1 toColorSpace:(int)arg2;	// IMP=0x0000000000115f04
- (id)initAYUV8888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x0000000000115b4e
- (id)initYUV888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x0000000000115806
- (id)initARGB8888WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x00000000001153a7
- (id)initY8WithCVPixelBuffer:(struct __CVBuffer *)arg1;	// IMP=0x000000000011513d
@property(readonly) unsigned long long height;
@property(readonly) unsigned long long width;

@end

