//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudDocsDaemon/BRCLifeCycle-Protocol.h>

@class BRCAccountSession, BRCDeadlineSource, NSString, PQLNameInjection;
@protocol OS_dispatch_group, OS_dispatch_workloop;

__attribute__((visibility("hidden")))
@interface BRCFSSchedulerBase : NSObject <BRCLifeCycle>
{
    BRCAccountSession *_session;	// 8 = 0x8
    BRCDeadlineSource *_schedulerSource;	// 16 = 0x10
    NSObject<OS_dispatch_workloop> *_schedulerWorkloop;	// 24 = 0x18
    NSString *_name;	// 32 = 0x20
    _Bool _firstSchedulingAfterStartupDone;	// 40 = 0x28
    _Bool _hasActiveWork;	// 41 = 0x29
    _Bool _hasWork;	// 42 = 0x2a
    _Bool _isCancelled;	// 43 = 0x2b
    NSObject<OS_dispatch_group> *_hasWorkGroup;	// 48 = 0x30
    NSObject<OS_dispatch_group> *_hasActiveWorkGroup;	// 56 = 0x38
    PQLNameInjection *_tableName;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x0000000000067342
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) PQLNameInjection *tableName; // @synthesize tableName=_tableName;
@property(readonly, nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(nonatomic) _Bool hasWork; // @synthesize hasWork=_hasWork;
@property(nonatomic) _Bool hasActiveWork; // @synthesize hasActiveWork=_hasActiveWork;
@property(retain) NSObject<OS_dispatch_group> *hasActiveWorkGroup; // @synthesize hasActiveWorkGroup=_hasActiveWorkGroup;
@property(retain) NSObject<OS_dispatch_group> *hasWorkGroup; // @synthesize hasWorkGroup=_hasWorkGroup;
- (void)close;	// IMP=0x0000000000067258
- (void)_close;	// IMP=0x0000000000067160
- (void)cancel;	// IMP=0x00000000000670ff
- (void)suspend;	// IMP=0x00000000000670a3
- (void)resume;	// IMP=0x0000000000067047
- (void)scheduleWithBatchSize:(int)arg1 whereSQLClause:(id)arg2 columns:(id)arg3 actionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000066c0f
- (_Bool)canScheduleMoreJobs;	// IMP=0x0000000000066c07
- (void)performFirstSchedulingAfterStartupInDB:(id)arg1;	// IMP=0x0000000000066c01
- (void)schedule;	// IMP=0x0000000000066b9b
- (void)signal;	// IMP=0x0000000000066b87
- (void)signalWithDeadline:(long long)arg1;	// IMP=0x0000000000066b32
- (void)checkIfHasWork;	// IMP=0x0000000000066a42
- (unsigned int)recoverAndReportMissingJobs;	// IMP=0x00000000000669fd
- (void)deleteExpiredJobs;	// IMP=0x0000000000066919
- (void)resetBackoffForJobWithID:(id)arg1;	// IMP=0x00000000000667ba
- (void)deleteJobsMatching:(id)arg1;	// IMP=0x0000000000066600
- (_Bool)setState:(int)arg1 forJobsMatching:(id)arg2;	// IMP=0x000000000006637e
- (_Bool)setState:(int)arg1 forJobID:(id)arg2;	// IMP=0x00000000000662df
- (void)computeStamps:(struct throttle_stamps *)arg1 forJobID:(id)arg2 throttle:(id)arg3 shouldBackoff:(_Bool)arg4;	// IMP=0x0000000000065fa1
- (long long)updateStamps:(struct throttle_stamps *)arg1 throttle:(id)arg2 now:(long long)arg3;	// IMP=0x0000000000065e86
- (void)rescheduleSuspendedJobsMatching:(id)arg1 inState:(int)arg2;	// IMP=0x0000000000065bcd
- (struct brc_job_update)insertOrUpdateJobID:(id)arg1 throttle:(id)arg2 withState:(int)arg3 insertedSQLColumn:(id)arg4 insertedSQLValues:(id)arg5 updatedSQLValues:(id)arg6;	// IMP=0x000000000006548f
- (unsigned long long)postponeJobID:(id)arg1 withThrottle:(id)arg2;	// IMP=0x0000000000065272
- (id)aggregateDescriptionForJobsMatching:(id)arg1 context:(id)arg2;	// IMP=0x00000000000651bd
- (void)describeInBuffer:(id)arg1 aggregateOfJobsMatching:(id)arg2 context:(id)arg3;	// IMP=0x0000000000064ff4
- (id)descriptionForJobsMatching:(id)arg1 context:(id)arg2;	// IMP=0x0000000000064fcd
- (id)descriptionForJobsMatching:(id)arg1 ordering:(id)arg2 additionalColumns:(id)arg3 additionalValuesHandler:(CDUnknownBlockType)arg4 context:(id)arg5;	// IMP=0x000000000006499c
- (int)jobStateFor:(id)arg1;	// IMP=0x00000000000648c5
- (_Bool)haveActiveJobsMatching:(id)arg1;	// IMP=0x00000000000647fd
- (_Bool)canRetryJobWithID:(id)arg1;	// IMP=0x00000000000646ed
- (id)initWithSession:(id)arg1 name:(id)arg2 tableName:(id)arg3;	// IMP=0x000000000006436b
@property(readonly) _Bool closed;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

