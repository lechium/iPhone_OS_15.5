//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudDocsDaemon/BRCCloudDocsAppsObserver-Protocol.h>

@class BRCAccountHandler, BRCAccountWaitOperation, BRCAnalyticsReporter, BRCApplyScheduler, BRCClientState, BRCContainerScheduler, BRCDeadlineScheduler, BRCDiskSpaceReclaimer, BRCDownloadTrackers, BRCFSDownloader, BRCFSReader, BRCFSUploader, BRCFSWriter, BRCFairScheduler, BRCFileUnlinker, BRCGlobalProgress, BRCItemTransmogrifier, BRCNotificationManager, BRCPQLConnection, BRCRecentsEnumerator, BRCServerPersistedState, BRCStageRegistry, BRCSyncUpScheduler, BRCThrottle, BRCTimerScheduler, BRCUserNotification, BRCVolume, BRDSIDString, NSHashTable, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSURL, br_pacer;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_dispatch_workloop;

@interface BRCAccountSession : NSObject <BRCCloudDocsAppsObserver>
{
    NSMutableDictionary *_syncContexts;	// 8 = 0x8
    BRCDeadlineScheduler *_defaultScheduler;	// 16 = 0x10
    NSURL *_dbURL;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_dbWatcher;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_dbWatcherQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_dbCorruptionQueue;	// 48 = 0x30
    NSObject<OS_dispatch_workloop> *_clientTruthWorkloop;	// 56 = 0x38
    NSObject<OS_dispatch_workloop> *_serverTruthWorkloop;	// 64 = 0x40
    NSObject<OS_dispatch_workloop> *_readOnlyWorkloop;	// 72 = 0x48
    int _cloudDocsFD;	// 80 = 0x50
    CDUnknownBlockType _dbProfilingHook;	// 88 = 0x58
    NSString *_databaseID;	// 96 = 0x60
    NSHashTable *_miscOperations;	// 104 = 0x68
    NSHashTable *_backgroundListOperations;	// 112 = 0x70
    BRCAccountHandler *_accountHandler;	// 120 = 0x78
    NSString *_personaIdentifier;	// 128 = 0x80
    _Bool _isDataSeparated;	// 136 = 0x88
    BRCPQLConnection *_clientDB;	// 144 = 0x90
    BRCPQLConnection *_serverDB;	// 152 = 0x98
    BRCPQLConnection *_readOnlyDB;	// 160 = 0xa0
    BRCPQLConnection *_expensiveReadOnlyDB;	// 168 = 0xa8
    BRCClientState *_clientState;	// 176 = 0xb0
    BRCServerPersistedState *_serverState;	// 184 = 0xb8
    struct brc_mutex _zonesLock;	// 192 = 0xc0
    NSMutableDictionary *_libraryRowIDsByMangledID;	// 256 = 0x100
    NSMutableDictionary *_appLibrariesByRowID;	// 264 = 0x108
    NSMutableDictionary *_serverZonesByZoneRowID;	// 272 = 0x110
    NSMutableDictionary *_sharedServerZonesByMangledID;	// 280 = 0x118
    NSMutableDictionary *_sharedClientZonesByMangledID;	// 288 = 0x120
    NSMutableDictionary *_privateServerZonesByID;	// 296 = 0x128
    NSMutableDictionary *_privateClientZonesByID;	// 304 = 0x130
    NSString *_acAccountID;	// 312 = 0x138
    BRDSIDString *_accountDSID;	// 320 = 0x140
    NSMutableSet *_xpcClients;	// 328 = 0x148
    _Bool _resumed;	// 336 = 0x150
    BRCGlobalProgress *_globalProgress;	// 344 = 0x158
    unsigned long long _lastDiskSpaceCheckTime;	// 352 = 0x160
    unsigned long long _availableDiskSpace;	// 360 = 0x168
    unsigned long long _totalDiskSpace;	// 368 = 0x170
    _Bool _isGreedy;	// 376 = 0x178
    struct brc_mutex _zonesCreationLock;	// 384 = 0x180
    br_pacer *_reschedulePendingDiskItemsPacer;	// 448 = 0x1c0
    br_pacer *_updateDiskSpacePacer;	// 456 = 0x1c8
    _Bool _accountIsReady;	// 464 = 0x1d0
    BRCAccountWaitOperation *_accountWaitOperation;	// 472 = 0x1d8
    _Bool _isDBOpened;	// 480 = 0x1e0
    NSNumber *_isInCarry;	// 488 = 0x1e8
    NSMutableDictionary *_rootsByFolderType;	// 496 = 0x1f0
    NSMutableDictionary *_fsEventsMonitors;	// 504 = 0x1f8
    _Bool _isOpen;	// 512 = 0x200
    _Bool _isCancelled;	// 513 = 0x201
    NSString *_sessionDirPath;	// 520 = 0x208
    NSString *_cacheDirPath;	// 528 = 0x210
    NSString *_ubiquityTokenSalt;	// 536 = 0x218
    BRCContainerScheduler *_containerScheduler;	// 544 = 0x220
    BRCApplyScheduler *_applyScheduler;	// 552 = 0x228
    BRCFairScheduler *_fairClientDBScheduler;	// 560 = 0x230
    BRCTimerScheduler *_autoResumeSyncTimerScheduler;	// 568 = 0x238
    BRCVolume *_volume;	// 576 = 0x240
    BRCFSReader *_fsReader;	// 584 = 0x248
    BRCFSUploader *_fsUploader;	// 592 = 0x250
    BRCFSDownloader *_fsDownloader;	// 600 = 0x258
    BRCSyncUpScheduler *_syncUpScheduler;	// 608 = 0x260
    BRCFSWriter *_fsWriter;	// 616 = 0x268
    BRCDownloadTrackers *_downloadTrackers;	// 624 = 0x270
    BRCUserNotification *_userNotification;	// 632 = 0x278
    BRCNotificationManager *_notificationManager;	// 640 = 0x280
    BRCStageRegistry *_stageRegistry;	// 648 = 0x288
    BRCDiskSpaceReclaimer *_diskReclaimer;	// 656 = 0x290
    BRCFileUnlinker *_fileUnlinker;	// 664 = 0x298
    BRCRecentsEnumerator *_recentsEnumerator;	// 672 = 0x2a0
    BRCThrottle *_appLibraryScanThrottle;	// 680 = 0x2a8
    BRCThrottle *_appLibraryResetThrottle;	// 688 = 0x2b0
    BRCThrottle *_sharedAppLibraryResetThrottle;	// 696 = 0x2b8
    BRCThrottle *_appLibraryAliasRemovalThrottle;	// 704 = 0x2c0
    BRCThrottle *_lostItemThrottle;	// 712 = 0x2c8
    BRCThrottle *_operationFailureThrottle;	// 720 = 0x2d0
    BRCThrottle *_syncClientZoneThrottle;	// 728 = 0x2d8
    BRCThrottle *_syncClientZoneErrorThrottle;	// 736 = 0x2e0
    NSObject<OS_dispatch_queue> *_resetQueue;	// 744 = 0x2e8
    BRCItemTransmogrifier *_itemTransmogrifier;	// 752 = 0x2f0
    BRCAnalyticsReporter *_analyticsReporter;	// 760 = 0x2f8
}

+ (_Bool)upgradeOfflineDB:(id)arg1 serverTruth:(_Bool)arg2 session:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000028f8b
+ (_Bool)_validateDatabase:(id)arg1 baseURL:(id)arg2 session:(id)arg3 serverTruth:(_Bool)arg4 initialVersion:(unsigned int)arg5 lastCurrentVersion:(unsigned int)arg6 error:(id *)arg7;	// IMP=0x000000000002873e
+ (_Bool)_openConnection:(id)arg1 serverTruth:(_Bool)arg2 databaseName:(id)arg3 baseURL:(id)arg4 initialVersion:(unsigned int *)arg5 lastCurrentVersion:(unsigned int *)arg6 error:(id *)arg7;	// IMP=0x0000000000027c2c
+ (_Bool)openAndValidateDatabase:(id)arg1 serverTruth:(_Bool)arg2 session:(id)arg3 baseURL:(id)arg4 skipBackupDetection:(_Bool)arg5 error:(id *)arg6;	// IMP=0x000000000002776b
+ (id)_classesForClientState;	// IMP=0x0000000000026334
+ (_Bool)_checkIntegrity:(id)arg1 serverTruth:(_Bool)arg2 session:(id)arg3 skipBackupDetection:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000025bc2
+ (void)_registerLastBootIfNeeded:(id)arg1 table:(id)arg2 cleanTelemetryIfNeeded:(_Bool)arg3;	// IMP=0x000000000002586f
+ (id)nameComponentsForName:(id)arg1 db:(id)arg2;	// IMP=0x0000000000025429
+ (id)nameComponentsForKey:(id)arg1 db:(id)arg2;	// IMP=0x0000000000025345
+ (id)userIdentityForName:(id)arg1 db:(id)arg2;	// IMP=0x000000000002470d
+ (id)userIdentityForKey:(id)arg1 db:(id)arg2;	// IMP=0x0000000000024633
+ (_Bool)_registerStaticDBFunctions:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000020201
+ (_Bool)_openConnection:(id)arg1 databaseName:(id)arg2 baseURL:(id)arg3 readonly:(_Bool)arg4 error:(id *)arg5;	// IMP=0x00000000000200f8
+ (id)sessionForCheckingInconsistencies;	// IMP=0x000000000001f9cf
+ (id)sessionForDumpingDatabasesAtURL:(id)arg1;	// IMP=0x000000000001f8c3
+ (id)sessionForBackingUpDatabasesAtURL:(id)arg1;	// IMP=0x000000000001f87d
- (void).cxx_destruct;	// IMP=0x00000000001bae34
@property(readonly, nonatomic) _Bool isDataSeparated; // @synthesize isDataSeparated=_isDataSeparated;
@property(readonly, nonatomic) NSString *personaIdentifier; // @synthesize personaIdentifier=_personaIdentifier;
@property(readonly, nonatomic) BRCAnalyticsReporter *analyticsReporter; // @synthesize analyticsReporter=_analyticsReporter;
@property(readonly, nonatomic) BRCItemTransmogrifier *itemTransmogrifier; // @synthesize itemTransmogrifier=_itemTransmogrifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *resetQueue; // @synthesize resetQueue=_resetQueue;
@property(readonly, nonatomic) BRCGlobalProgress *globalProgress; // @synthesize globalProgress=_globalProgress;
@property(readonly, nonatomic) BRCThrottle *syncClientZoneErrorThrottle; // @synthesize syncClientZoneErrorThrottle=_syncClientZoneErrorThrottle;
@property(readonly, nonatomic) BRCThrottle *syncClientZoneThrottle; // @synthesize syncClientZoneThrottle=_syncClientZoneThrottle;
@property(readonly, nonatomic) BRCThrottle *operationFailureThrottle; // @synthesize operationFailureThrottle=_operationFailureThrottle;
@property(readonly, nonatomic) BRCThrottle *lostItemThrottle; // @synthesize lostItemThrottle=_lostItemThrottle;
@property(readonly, nonatomic) BRCThrottle *appLibraryAliasRemovalThrottle; // @synthesize appLibraryAliasRemovalThrottle=_appLibraryAliasRemovalThrottle;
@property(readonly, nonatomic) BRCThrottle *sharedAppLibraryResetThrottle; // @synthesize sharedAppLibraryResetThrottle=_sharedAppLibraryResetThrottle;
@property(readonly, nonatomic) BRCThrottle *appLibraryResetThrottle; // @synthesize appLibraryResetThrottle=_appLibraryResetThrottle;
@property(readonly, nonatomic) BRCThrottle *appLibraryScanThrottle; // @synthesize appLibraryScanThrottle=_appLibraryScanThrottle;
@property(readonly, nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) BRCRecentsEnumerator *recentsEnumerator; // @synthesize recentsEnumerator=_recentsEnumerator;
@property(readonly, nonatomic) BRCFileUnlinker *fileUnlinker; // @synthesize fileUnlinker=_fileUnlinker;
@property(readonly, nonatomic) BRCDiskSpaceReclaimer *diskReclaimer; // @synthesize diskReclaimer=_diskReclaimer;
@property(readonly, nonatomic) BRCUserNotification *userNotification; // @synthesize userNotification=_userNotification;
@property(readonly, nonatomic) BRCAccountHandler *accountHandler; // @synthesize accountHandler=_accountHandler;
@property(readonly, nonatomic) BRCDownloadTrackers *downloadTrackers; // @synthesize downloadTrackers=_downloadTrackers;
@property(readonly, nonatomic) BRCSyncUpScheduler *syncUpScheduler; // @synthesize syncUpScheduler=_syncUpScheduler;
@property(readonly, nonatomic) BRCFSDownloader *fsDownloader; // @synthesize fsDownloader=_fsDownloader;
@property(readonly, nonatomic) BRCFSUploader *fsUploader; // @synthesize fsUploader=_fsUploader;
@property(readonly, nonatomic) BRCVolume *volume; // @synthesize volume=_volume;
@property(readonly, nonatomic) BRCFairScheduler *fairClientDBScheduler; // @synthesize fairClientDBScheduler=_fairClientDBScheduler;
@property(readonly, nonatomic) BRCDeadlineScheduler *defaultScheduler; // @synthesize defaultScheduler=_defaultScheduler;
@property(readonly, nonatomic) NSString *ubiquityTokenSalt; // @synthesize ubiquityTokenSalt=_ubiquityTokenSalt;
@property(readonly, nonatomic) BRDSIDString *accountDSID; // @synthesize accountDSID=_accountDSID;
@property(retain, nonatomic) NSString *cacheDirPath; // @synthesize cacheDirPath=_cacheDirPath;
@property(retain, nonatomic) NSString *sessionDirPath; // @synthesize sessionDirPath=_sessionDirPath;
@property(readonly, nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(readonly, nonatomic) BRCStageRegistry *stageRegistry; // @synthesize stageRegistry=_stageRegistry;
@property(readonly, nonatomic) BRCNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(readonly, nonatomic) BRCFSWriter *fsWriter; // @synthesize fsWriter=_fsWriter;
@property(readonly, nonatomic) BRCFSReader *fsReader; // @synthesize fsReader=_fsReader;
@property(readonly, nonatomic) BRCContainerScheduler *containerScheduler; // @synthesize containerScheduler=_containerScheduler;
@property(readonly, nonatomic) BRCApplyScheduler *applyScheduler; // @synthesize applyScheduler=_applyScheduler;
@property(readonly, nonatomic) BRCTimerScheduler *autoResumeSyncTimerScheduler; // @synthesize autoResumeSyncTimerScheduler=_autoResumeSyncTimerScheduler;
- (void)openForDumping;	// IMP=0x00000000001ba751
- (_Bool)shouldPathBeDesktopSymlink:(id)arg1;	// IMP=0x00000000001ba749
- (void)recreateDesktopSymlinksIfNecessary;	// IMP=0x00000000001ba743
- (void)_recreateSymlinkIfNecessaryForDocumentsPath:(id)arg1 folderName:(id)arg2 destinationPath:(id)arg3;	// IMP=0x00000000001ba252
- (void)removeDesktopSymlink:(_Bool)arg1 andDocumentsSymlink:(_Bool)arg2;	// IMP=0x00000000001ba09e
- (unsigned long long)syncedFolderTypeForURL:(id)arg1;	// IMP=0x00000000001b9e92
- (id)roots;	// IMP=0x00000000001b9e1e
- (void)removeRootForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b9cc2
- (void)setRoot:(id)arg1 forSyncedFolderType:(unsigned long long)arg2;	// IMP=0x00000000001b9a96
- (id)rootForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b9942
- (_Bool)hasRootForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b983a
- (id)createRootForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b9780
- (id)fsEventsMonitors;	// IMP=0x00000000001b9716
- (void)removeFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b95ba
- (void)setFSEventsMonitor:(id)arg1 forSyncedFolderType:(unsigned long long)arg2;	// IMP=0x00000000001b938e
- (_Bool)hasFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b9286
- (id)fsEventsMonitorForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b9132
- (id)fsEventsMonitorForAppLibraryID:(id)arg1;	// IMP=0x00000000001b911b
- (id)createFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b907f
- (id)dirPathForSyncedFolderType:(unsigned long long)arg1;	// IMP=0x00000000001b8fc9
- (void)dumpMiscOperationsToContext:(id)arg1;	// IMP=0x00000000001b8bdf
- (void)dumpXPCClientsToContext:(id)arg1;	// IMP=0x00000000001b89e0
- (_Bool)disableSyncforSyncedFolderType:(unsigned long long)arg1 isInitialCreation:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000000001b8847
- (_Bool)_getRootPathXattrValue:(id *)arg1 forRootPath:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001b8771
- (_Bool)_setRootPathXattrValue:(id)arg1 forRootPath:(id)arg2 error:(id *)arg3;	// IMP=0x00000000001b8585
- (_Bool)enableSyncforSyncedFolderType:(unsigned long long)arg1 isInitialCreation:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000000001b81e2
- (_Bool)applySyncPolicy:(long long)arg1 forSyncedFolderType:(unsigned long long)arg2 isInitialCreation:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000001b8123
@property(readonly, nonatomic) _Bool isGreedy;
- (void)startDownloadsForGreediness;	// IMP=0x00000000001b79d7
- (void)computeDocumentEvictableSizesForLowTime:(unsigned long long)arg1 medTime:(unsigned long long)arg2 highTime:(unsigned long long)arg3 lowSize:(unsigned long long)arg4 medSize:(unsigned long long)arg5 highSize:(unsigned long long)arg6 minRowID:(unsigned long long)arg7 minSize:(unsigned long long)arg8 batchSize:(unsigned long long)arg9 injection:(id)arg10 db:(id)arg11 reply:(CDUnknownBlockType)arg12;	// IMP=0x00000000001b75e0
- (void)computeTotalEvictableSizeWithAccessLowTimeDelta:(double)arg1 medTimeDelta:(double)arg2 highTimeDelta:(double)arg3 db:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00000000001b7375
- (unsigned long long)computeTotalLiveDocumentSizeWithDb:(id)arg1;	// IMP=0x00000000001b72e7
- (void)setOptimizeStorageEnabled:(_Bool)arg1;	// IMP=0x00000000001b703d
@property(readonly, nonatomic) _Bool hasOptimizeStorageEnabled;
- (unsigned long long)accountSize;	// IMP=0x00000000001b6f2c
- (void)availableDiskSpaceDidChange;	// IMP=0x00000000001b6ef3
- (unsigned long long)availableDiskSpaceUsingCache:(_Bool)arg1 schedulingPendingDiskItemsIfNeeded:(_Bool)arg2;	// IMP=0x00000000001b6ca0
- (unsigned long long)availableDiskSpaceUsingCache:(_Bool)arg1;	// IMP=0x00000000001b6c89
@property(readonly, nonatomic) unsigned long long availableDiskSpace;
- (void)recomputeAppSyncBlockStateForPrivateClientZone:(id)arg1;	// IMP=0x00000000001b6bca
- (void)cloudDocsAppsListDidChange:(id)arg1;	// IMP=0x00000000001b6ad4
- (void)_cloudDocsAppsListDidChange:(id)arg1;	// IMP=0x00000000001b6068
- (_Bool)createAppLibraryOnDisk:(id)arg1 createdRoot:(_Bool *)arg2 createdDocuments:(_Bool *)arg3 rootFileID:(unsigned long long *)arg4;	// IMP=0x00000000001b5dbe
- (_Bool)createAppLibrariesIfNeededWithError:(id *)arg1;	// IMP=0x00000000001b5b82
- (void)enumerateFileTypesWithFilterBlock:(CDUnknownBlockType)arg1 enumerationBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001b5aac
- (void)_enumerateAccountHandlerSupportedFolderTypes:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b5a08
- (void)enumerateSupportedFolderTypes:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b5932
- (id)currentUserRecordName;	// IMP=0x00000000001b57d1
- (void)fetchUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b551c
- (id)getOrReserveLibraryRowIDForLibrary:(id)arg1;	// IMP=0x00000000001b5385
- (id)getOrCreateSharedZones:(id)arg1 shareAcceptOp:(id)arg2;	// IMP=0x00000000001b4dae
- (id)getOrCreateSharedZones:(id)arg1;	// IMP=0x00000000001b4d9a
- (id)getOrCreateAppLibraryAndPrivateZonesIfNecessary:(id)arg1 appLibraryExists:(_Bool *)arg2;	// IMP=0x00000000001b4c29
- (id)getOrCreateAppLibraryAndPrivateZonesIfNecessary:(id)arg1;	// IMP=0x00000000001b4c15
- (id)_getOrCreateAppLibraryAndPrivateZonesIfNecessary:(id)arg1 creationFlags:(unsigned int *)arg2;	// IMP=0x00000000001b4102
- (_Bool)_shouldPrivateAppLibraryBeCZMMoved:(id)arg1;	// IMP=0x00000000001b4035
- (void)__registerServerZone:(id)arg1 clientZone:(id)arg2 appLibrary:(id)arg3 isShared:(_Bool)arg4;	// IMP=0x00000000001b3bd9
- (id)__getOrCreateAppLibrary:(id)arg1 rowID:(id)arg2 createOnDisk:(_Bool)arg3 alreadyExists:(_Bool *)arg4 withClientZone:(id)arg5 createCZMMoved:(_Bool)arg6;	// IMP=0x00000000001b3810
- (id)__getOrCreateClientZone:(id)arg1 withServerZone:(id)arg2 alreadyExists:(_Bool *)arg3;	// IMP=0x00000000001b34d9
- (id)__getOrCreateServerZone:(id)arg1;	// IMP=0x00000000001b328f
- (void)assertNotOnZoneMutex;	// IMP=0x00000000001b327e
- (id)appLibraryByID:(id)arg1;	// IMP=0x00000000001b31f4
- (id)appLibraryByMangledID:(id)arg1;	// IMP=0x00000000001b3147
- (id)appLibraryByRowID:(id)arg1;	// IMP=0x00000000001b2fed
- (void)destroySharedClientZone:(id)arg1;	// IMP=0x00000000001b2b10
- (void)performBlock:(CDUnknownBlockType)arg1 whileRemovingPrivateClientZone:(id)arg2;	// IMP=0x00000000001b293b
- (void)enumerateSharedClientZones:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b270d
- (id)sharedClientZoneByMangledID:(id)arg1;	// IMP=0x00000000001b2656
- (id)sharedServerZoneByMangledID:(id)arg1;	// IMP=0x00000000001b259f
- (void)enumeratePrivateClientZones:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b23b0
- (id)clientZones;	// IMP=0x00000000001b219d
- (void)enumerateClientZones:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b1ef3
- (id)privateClientZoneByID:(id)arg1;	// IMP=0x00000000001b1e3c
- (id)cloudDocsClientZone;	// IMP=0x00000000001b1e20
- (void)enumeratePrivateServerZones:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b1c2a
- (id)privateServerZoneByID:(id)arg1;	// IMP=0x00000000001b1b73
- (id)fallbackAppLibraryForClientZone:(id)arg1 extension:(id)arg2;	// IMP=0x00000000001b18ba
- (id)appLibraries;	// IMP=0x00000000001b1868
- (void)enumerateAppLibraries:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b16b5
- (void)enumerateServerZones:(CDUnknownBlockType)arg1;	// IMP=0x00000000001b14b1
- (id)clientZoneByMangledID:(id)arg1;	// IMP=0x00000000001b13f1
- (id)serverZoneByRowID:(id)arg1;	// IMP=0x00000000001b127f
- (id)serverZoneByName:(id)arg1 ownerName:(id)arg2;	// IMP=0x00000000001b11dc
- (id)serverZoneByMangledID:(id)arg1;	// IMP=0x00000000001b10d2
- (id)sharedServerZoneRowIDsByOwnerNamePrefix:(id)arg1;	// IMP=0x00000000001b0e70
- (void)_mutexZonesLock;	// IMP=0x00000000001b0de0
- (id)_unloadClientZones;	// IMP=0x00000000001b0bba
- (void)_loadClientZonesFromDisk;	// IMP=0x00000000001aea68
- (void)destroyLocalDataWithPristineContainerIDs:(id)arg1;	// IMP=0x00000000001aea4b
- (void)destroyLocalData;	// IMP=0x00000000001aea37
- (void)destroyLocalDataWaitingForFilesToBeUnlinked:(_Bool)arg1 pristineContainerIDs:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000001ae547
- (void)_validatePersona;	// IMP=0x00000000001ae3bf
- (void)destroyLocalDataWaitingForFilesToBeUnlinked:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001ae3a8
- (_Bool)_recursivelyPrepareFolderForLogOutAtURL:(id)arg1 pruneEmptyFolders:(_Bool)arg2 pruneEmptyTopLevelFolder:(_Bool)arg3 maxDepth:(unsigned long long)arg4;	// IMP=0x00000000001ad42a
- (void)closeAndResetLocalState;	// IMP=0x00000000001ad2a0
- (void)close;	// IMP=0x00000000001aaa6a
- (id)fetchAccountWaitOperationWithAccountReady:(_Bool *)arg1;	// IMP=0x00000000001aaa06
@property(readonly, nonatomic) BRCAccountWaitOperation *accountWaitOperation;
- (void)invalidateAccountStatus;	// IMP=0x00000000001aa6c2
- (void)resume;	// IMP=0x00000000001aa166
- (void)_registerBackgroundXPCActivities;	// IMP=0x00000000001a8ae8
- (unsigned int)_recoverAndReportMissingJobs;	// IMP=0x00000000001a8865
- (unsigned int)_recoverAndReportBoosting;	// IMP=0x00000000001a873f
- (void)_pcsChainAllItemsWithActivity:(id)arg1;	// IMP=0x00000000001a7e15
- (_Bool)_createAppLibraryRootIfNeededAtPath:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001a7cf7
- (_Bool)_createAppLibraryRootsIfNeededWithError:(id *)arg1;	// IMP=0x00000000001a7aea
- (_Bool)openWithError:(id *)arg1 pushWorkloop:(id)arg2;	// IMP=0x00000000001a6836
- (void)resetThrottles;	// IMP=0x00000000001a67a7
- (void)_setupThrottles;	// IMP=0x00000000001a6425
- (void)markAccountMigrationComplete;	// IMP=0x00000000001a6405
- (void)_createAccountSupportPathIfNeeded:(id)arg1 protectParent:(_Bool)arg2;	// IMP=0x00000000001a5ef2
- (void)_setupSharedPackageExtensionsPlist;	// IMP=0x00000000001a5d4c
- (void)userDefaultsChanged;	// IMP=0x00000000001a5d3a
- (_Bool)icloudAccountIsInCarry;	// IMP=0x00000000001a5aa5
- (void)closeXPCClientsSync;	// IMP=0x00000000001a5694
- (void)addMiscOperation:(id)arg1;	// IMP=0x00000000001a567e
- (void)unregisterClient:(id)arg1;	// IMP=0x00000000001a55ab
- (_Bool)registerClient:(id)arg1;	// IMP=0x00000000001a54c4
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000001a53c2
- (id)initWithACAccountID:(id)arg1 dbAccountDSID:(id)arg2 salt:(id)arg3 accountHandler:(id)arg4;	// IMP=0x00000000001a5175
- (id)init;	// IMP=0x00000000001a4edc
- (void)addOfflineAppLibrary:(id)arg1;	// IMP=0x0000000000002af4
- (void)addOfflineClientZone:(id)arg1;	// IMP=0x0000000000002945
- (void)addOfflineServerZone:(id)arg1;	// IMP=0x0000000000002774
- (id)accountStatisticsWithDB:(id)arg1;	// IMP=0x000000000002d664
- (_Bool)backupDatabaseToURL:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d3d5
- (_Bool)dumpFileCoordinationInfoToFileHandle:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002d2b3
- (_Bool)dumpDatabaseToFileHandle:(id)arg1 zoneName:(id)arg2 includeAllItems:(_Bool)arg3 tracker:(id)arg4 error:(id *)arg5;	// IMP=0x000000000002b700
- (_Bool)initializeOfflineDatabaseWhileUpgrading:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000000002a9b6
- (_Bool)dumpStatusToFileHandle:(id)arg1 zoneName:(id)arg2 tracker:(id)arg3 error:(id *)arg4;	// IMP=0x000000000002a15e
- (_Bool)_dumpClientZone:(id)arg1 toContext:(id)arg2 includeAllItems:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000029be6
- (_Bool)_dumpClientZoneStatus:(id)arg1 toContext:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000029abd
- (void)_dumpClientZoneBlockedState:(id)arg1 toContext:(id)arg2;	// IMP=0x0000000000029955
- (void)closeDBs;	// IMP=0x00000000000295a8
- (_Bool)openDBWithError:(id *)arg1;	// IMP=0x0000000000029408
- (_Bool)openAndValidateDatabase:(id)arg1 serverTruth:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000000000276fe
- (_Bool)_finishServerTruthConnectionSetupWithError:(id *)arg1;	// IMP=0x000000000002731c
- (_Bool)_finishClientTruthConnectionSetupWithError:(id *)arg1;	// IMP=0x000000000002649a
- (void)_clearNeedsUpgradeErrors:(id)arg1 brVersion:(id)arg2;	// IMP=0x0000000000025502
- (id)createUserKeyForName:(id)arg1;	// IMP=0x00000000000251ab
- (id)userNameForKey:(id)arg1 db:(id)arg2;	// IMP=0x000000000002517f
- (id)userKeyForName:(id)arg1 db:(id)arg2;	// IMP=0x00000000000250f1
- (void)learnParticipantIdentitiesForShare:(id)arg1 forceUpdate:(_Bool)arg2;	// IMP=0x00000000000249e7
- (void)_setUserIdentity:(id)arg1 forName:(id)arg2;	// IMP=0x0000000000024788
- (id)userIdentityForKey:(id)arg1;	// IMP=0x00000000000246ae
- (id)createDeviceKeyForNameInServerDB:(id)arg1;	// IMP=0x00000000000244ea
- (id)deviceKeyForName:(id)arg1 db:(id)arg2;	// IMP=0x00000000000244be
- (id)pendingDownloadItemWithDocumentID:(unsigned int)arg1;	// IMP=0x0000000000024357
- (id)itemsWithSideCarInFlightDiffsEnumerator;	// IMP=0x000000000002422c
- (id)itemsNeedingIndexingEnumeratorFromNotifRank:(unsigned long long)arg1 batchSize:(unsigned long long)arg2;	// IMP=0x00000000000240e4
- (id)bouncedItemsEnumerator;	// IMP=0x0000000000023fe2
- (id)foldersNeedingTransmogrifyEnumerator;	// IMP=0x0000000000023ee0
- (id)stagedItemsEnumerator;	// IMP=0x0000000000023dd7
- (id)_privateServerZonesEnumerator:(id)arg1;	// IMP=0x0000000000023d12
- (id)_privateServerZoneByName:(id)arg1 db:(id)arg2;	// IMP=0x0000000000023c7f
- (id)newPrivateServerZoneFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000023ad4
- (id)_privateClientZoneByID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000023a41
- (id)_privateClientZoneByName:(id)arg1 db:(id)arg2;	// IMP=0x00000000000239ae
- (id)_privateClientZonesEnumerator:(id)arg1;	// IMP=0x00000000000238e9
- (id)newPrivateClientZoneFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000023746
- (id)_sharedServerZoneByName:(id)arg1 ownerName:(id)arg2 db:(id)arg3;	// IMP=0x00000000000236ba
- (id)_sharedServerZonesEnumerator:(id)arg1;	// IMP=0x00000000000235f5
- (id)newSharedServerZoneFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000023456
- (id)_sharedClientZonesEnumerator:(id)arg1;	// IMP=0x0000000000023391
- (id)newSharedClientZoneFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000231d8
- (_Bool)_deleteClientZone:(id)arg1;	// IMP=0x000000000002316e
- (_Bool)_createClientZone:(id)arg1;	// IMP=0x0000000000022fbd
- (id)_appLibrariesEnumerator:(id)arg1;	// IMP=0x0000000000022f02
- (_Bool)_createSharedAppLibrary:(id)arg1;	// IMP=0x0000000000022ef0
- (_Bool)_createPrivateAppLibrary:(id)arg1;	// IMP=0x0000000000022ede
- (_Bool)_deleteAppLibrary:(id)arg1;	// IMP=0x0000000000022e74
- (_Bool)_createAppLibrary:(id)arg1;	// IMP=0x0000000000022c9d
- (id)newAppLibraryFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000022b11
- (_Bool)saveAppLibraryToDB:(id)arg1;	// IMP=0x0000000000022af1
- (_Bool)saveAppLibrary:(id)arg1 toDB:(id)arg2;	// IMP=0x000000000002294b
- (id)_reserveRowIDForLibrary:(id)arg1;	// IMP=0x000000000002282c
- (void)_enumerateAppLibraryRowIDs:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000226fe
- (_Bool)deleteServerZone:(id)arg1;	// IMP=0x0000000000022694
- (_Bool)createServerZone:(id)arg1;	// IMP=0x00000000000220cb
- (_Bool)saveClientZoneToDB:(id)arg1;	// IMP=0x0000000000021f5e
- (_Bool)saveServerZoneToDB:(id)arg1;	// IMP=0x0000000000021f3e
- (_Bool)saveServerZone:(id)arg1 toDB:(id)arg2;	// IMP=0x0000000000021dba
- (void)preventDatabaseFromBeingReused;	// IMP=0x0000000000021ba9
- (_Bool)_stepBackupDetector:(struct backup_detector)arg1 newState:(struct backup_detector *)arg2 error:(id *)arg3;	// IMP=0x0000000000021612
- (_Bool)_setupBackupDetector:(struct backup_detector *)arg1 error:(id *)arg2;	// IMP=0x00000000000211a4
- (id)newConnectionWithLabel:(id)arg1 readonly:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000000000210f5
- (_Bool)_setupConnection:(id)arg1 readonly:(_Bool)arg2 forChecker:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000020e0c
- (_Bool)_registerDynamicDBFunctions:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000020a64
- (_Bool)_openConnection:(id)arg1 databaseName:(id)arg2 readonly:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000020042
- (void)stopDBWatcher;	// IMP=0x000000000001ffa8
- (void)_startWatcher;	// IMP=0x000000000001fc05
- (void)disableDatabaseProfilingForDB:(id)arg1;	// IMP=0x000000000001fbee
- (void)enableDatabaseProfilingForDB:(id)arg1;	// IMP=0x000000000001fb6e
- (void)setupDatabase;	// IMP=0x000000000001fa8c
- (id)newConnection:(id)arg1;	// IMP=0x000000000001f73b
- (void)dbBecameCorrupted;	// IMP=0x000000000001f44d
@property(readonly, nonatomic) BRCPQLConnection *expensiveReadOnlyDB;
@property(readonly, nonatomic) BRCPQLConnection *readOnlyDB;
@property(readonly, nonatomic) BRCPQLConnection *serverDB;
@property(readonly, nonatomic) BRCPQLConnection *clientDB;
@property(readonly, nonatomic) BRCServerPersistedState *serverState;
@property(readonly, nonatomic) BRCClientState *clientState;
@property(readonly, nonatomic) unsigned long long databaseID;
@property(readonly, nonatomic) NSObject<OS_dispatch_workloop> *serverTruthWorkloop; // @dynamic serverTruthWorkloop;
@property(readonly, nonatomic) NSObject<OS_dispatch_workloop> *readOnlyWorkloop; // @dynamic readOnlyWorkloop;
@property(readonly, nonatomic) NSObject<OS_dispatch_workloop> *clientTruthWorkloop; // @dynamic clientTruthWorkloop;
- (void)scheduleZoneMovesToCloudDocs:(id)arg1;	// IMP=0x00000000000a6de3
- (int)resolvePathAdditionalMetadata:(id)arg1 appLibrary:(id *)arg2;	// IMP=0x000000000010f0e3
- (void)_resolvePathInMobileDocsRoot:(id)arg1 appLibrary:(id *)arg2;	// IMP=0x000000000010ed1d
- (id)resolvedOpenRelpathForPath:(id)arg1 mustExist:(_Bool)arg2 allowResolveInPkg:(_Bool)arg3 errcode:(int *)arg4;	// IMP=0x000000000010ec23
- (id)resolvedOpenRelpathForPath:(id)arg1 mustExist:(_Bool)arg2 errcode:(int *)arg3;	// IMP=0x000000000010ec0b
- (id)_appLibraryEnumeratorForZoneRowID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000110d27
- (id)_old_privateAppLibraryByZoneName:(id)arg1 db:(id)arg2;	// IMP=0x0000000000110c82
- (id)singleAppLibraryMatchingSearchString:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000161d75
- (id)appLibrariesMatchingSearchString:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000161c63
- (id)_appLibrariesMatchingSearchString:(id)arg1;	// IMP=0x0000000000161767
- (id)singleClientZoneMatchingSearchString:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001612f1
- (id)clientZonesMatchingSearchString:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001611df
- (id)_clientZonesMatchingSearchString:(id)arg1;	// IMP=0x000000000016087c
- (void)setNeedsPCSMigration:(_Bool)arg1;	// IMP=0x00000000001a3f9e
- (_Bool)PCSMigrationComplete;	// IMP=0x00000000001a3f29
- (_Bool)shouldPerformPCSMigration;	// IMP=0x00000000001a3ec7
- (id)allSyncContexts;	// IMP=0x0000000000268dd8
- (id)metadataSyncContextForMangledID:(id)arg1;	// IMP=0x0000000000268d2a
- (id)transferSyncContextForMangledID:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x0000000000268c7b
- (id)transferSyncContextForMangledID:(id)arg1;	// IMP=0x0000000000268c64
- (id)sideCarSyncContext;	// IMP=0x0000000000268c40
- (id)zoneHealthSyncContext;	// IMP=0x0000000000268c1c
- (id)sharedMetadataSyncContext;	// IMP=0x0000000000268bf5
- (id)defaultSyncContext;	// IMP=0x0000000000268bd1
- (id)_syncContextForContextIdentifier:(id)arg1 isShared:(_Bool)arg2 createIfNeeded:(_Bool)arg3;	// IMP=0x0000000000268ac2
- (void)enumerateSideFaultsUnderParent:(id)arg1 db:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000000029acea
- (void)enumerateItemsWithShareIDUnderParent:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000000029aa47
- (_Bool)globalID:(id)arg1 isStrictChildOfGlobalID:(id)arg2;	// IMP=0x000000000029a674
- (id)itemByItemGlobalID:(id)arg1;	// IMP=0x000000000029a654
- (id)itemByItemGlobalID:(id)arg1 db:(id)arg2;	// IMP=0x000000000029a39f
- (id)localAliasForSharedItem:(id)arg1 inZone:(id)arg2;	// IMP=0x000000000029a101
- (id)serverAliasItemForSharedItem:(id)arg1 inZone:(id)arg2 db:(id)arg3;	// IMP=0x0000000000299e2c
- (id)serverAliasItemForSharedItem:(id)arg1 inZone:(id)arg2;	// IMP=0x0000000000299e0c
- (id)serverAliasItemForSharedItem:(id)arg1 db:(id)arg2;	// IMP=0x0000000000299cba
- (id)serverAliasItemForSharedItem:(id)arg1;	// IMP=0x0000000000299c9a
- (id)globalItemByFileID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000299bc4
- (id)globalItemByFileID:(unsigned long long)arg1;	// IMP=0x0000000000299ba4
- (id)itemByFileObjectID:(id)arg1;	// IMP=0x0000000000299b84
- (id)itemByFileObjectID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000299998
- (id)itemByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x00000000002998c2
- (id)itemByRowID:(unsigned long long)arg1;	// IMP=0x00000000002998a2
- (id)globalItemByDocumentID:(unsigned int)arg1 db:(id)arg2;	// IMP=0x00000000002997ca
- (id)globalItemByDocumentID:(unsigned int)arg1;	// IMP=0x00000000002997aa
- (id)itemIDByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x000000000029977e
- (id)itemIDByRowID:(unsigned long long)arg1;	// IMP=0x000000000029975e
- (id)newServerItemFromPQLResultSet:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000299690
- (id)newLocalItemFromPQLResultSet:(id)arg1 db:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000299540
- (id)_containerMetadataRecordsToSaveWithBatchSize:(unsigned long long)arg1 requestID:(unsigned long long)arg2;	// IMP=0x00000000002c3ed2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

