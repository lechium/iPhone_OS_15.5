//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CloudDocsDaemon/BRCModule-Protocol.h>

@class BRCDeadlineScheduler, BRCDeadlineSource, BRCFairScheduler, NSDictionary, NSMutableDictionary, NSMutableSet, NSObject, NSString, br_pacer;
@protocol OS_dispatch_queue;

@interface BRCFSUploader <BRCModule>
{
    NSMutableDictionary *_thumbnailsOperations;	// 32 = 0x20
    NSMutableSet *_boostedDocIDs;	// 40 = 0x28
    NSMutableDictionary *_stampForDocID;	// 48 = 0x30
    BRCFairScheduler *_fairScheduler;	// 56 = 0x38
    BRCDeadlineSource *_retryQueueSource;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_thumbnailQueue;	// 72 = 0x48
    br_pacer *_quotaPacer;	// 80 = 0x50
    br_pacer *_globalQuotaStateUpdatePacer;	// 88 = 0x58
    _Bool _prepareReachedMax;	// 96 = 0x60
    _Bool _isDefaultOwnerOutOfQuota;	// 97 = 0x61
    BRCDeadlineScheduler *_uploadsDeadlineScheduler;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x0000000000198521
@property(readonly, nonatomic) NSDictionary *thumbnailsOperationsByID; // @synthesize thumbnailsOperationsByID=_thumbnailsOperations;
@property(readonly, nonatomic) BRCDeadlineScheduler *uploadsDeadlineScheduler; // @synthesize uploadsDeadlineScheduler=_uploadsDeadlineScheduler;
@property(nonatomic) _Bool isDefaultOwnerOutOfQuota; // @synthesize isDefaultOwnerOutOfQuota=_isDefaultOwnerOutOfQuota;
- (unsigned int)recoverAndReportMissingJobs;	// IMP=0x000000000019804a
- (void)_clearUploadErrorForDocument:(id)arg1;	// IMP=0x0000000000197fae
- (void)_reportUploadErrorForDocument:(id)arg1 error:(id)arg2;	// IMP=0x0000000000197e60
- (void)forceScheduleQuotaFetchForOwner:(id)arg1;	// IMP=0x0000000000197e19
- (void)scheduleQuotaFetchIfNeededForOwner:(id)arg1;	// IMP=0x0000000000197dbe
- (void)scheduleQuotaStateUpdateForOwner:(id)arg1;	// IMP=0x0000000000197d63
- (void)ownerDidReceiveOutOfQuotaError:(id)arg1;	// IMP=0x0000000000197d17
- (void)setIsDefaultOwnerOutOfQuota:(_Bool)arg1 forceSignalContainers:(_Bool)arg2;	// IMP=0x0000000000197c13
- (void)_scheduleQuotaFetchForDefaultOwner;	// IMP=0x0000000000197889
- (void)_globalQuotaStateUpdateForDefaultOwner;	// IMP=0x00000000001977eb
- (void)_setQuotaAvailableForDefaultOwner:(unsigned long long)arg1;	// IMP=0x0000000000197526
- (void)_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:(long long)arg1;	// IMP=0x000000000019724d
- (id)quotaAvailableForOwner:(id)arg1;	// IMP=0x00000000001971c2
- (_Bool)hasItemsOverQuotaInZone:(id)arg1;	// IMP=0x0000000000197103
- (_Bool)hasItemsOverQuotaForOwner:(id)arg1;	// IMP=0x0000000000196f47
- (void)finishedSyncingUpItem:(id)arg1 withOutOfQuotaError:(id)arg2;	// IMP=0x0000000000196d10
- (void)transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3 priority:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x0000000000196ba7
- (void)_transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3 priority:(long long)arg4;	// IMP=0x0000000000195ea3
- (void)_performServerSideAssetCopyForItem:(id)arg1 transferSize:(unsigned long long)arg2;	// IMP=0x0000000000195597
- (void)_finishedUploadingItem:(id)arg1 record:(id)arg2 jobID:(id)arg3 stageID:(id)arg4 syncContext:(id)arg5 error:(id)arg6;	// IMP=0x0000000000194ac0
- (void)_handleFileModifiedError:(id)arg1 forItem:(id)arg2;	// IMP=0x0000000000194a2a
- (_Bool)_finishPackageUploadWithRecord:(id)arg1 item:(id)arg2 stageID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000194327
- (id)_duplicatePackage:(id)arg1 stageID:(id)arg2 stageName:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000194081
- (void)_computeRecordForJobID:(id)arg1 item:(id)arg2 syncContext:(id)arg3;	// IMP=0x00000000001934da
- (void)_updateRecord:(id)arg1 jobID:(id)arg2 syncContext:(id)arg3 thumbnailOperation:(id)arg4 stageID:(id)arg5;	// IMP=0x00000000001932fe
- (void)_updateRecord:(id)arg1 item:(id)arg2 syncContext:(id)arg3 thumbnailOperation:(id)arg4 stageID:(id)arg5;	// IMP=0x0000000000192233
- (void)_updateRecordInDB:(id)arg1 item:(id)arg2 syncContext:(id)arg3 transferSize:(unsigned long long)arg4 stageID:(id)arg5;	// IMP=0x0000000000191f95
- (_Bool)_updatePackageRecord:(id)arg1 item:(id)arg2 stageID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000190a11
- (id)_thumbnailOperationForItemRowID:(id)arg1;	// IMP=0x000000000019096b
- (void)_doneFetchingThumbnailForJobID:(id)arg1;	// IMP=0x00000000001907eb
- (void)_startFetchThumbnail:(id)arg1 jobID:(id)arg2;	// IMP=0x0000000000190657
- (void)schedule;	// IMP=0x00000000001901c7
- (_Bool)canScheduleMoreJobs;	// IMP=0x00000000001901b3
- (void)performFirstSchedulingAfterStartupInDB:(id)arg1;	// IMP=0x000000000018fdc5
- (void)_scheduleRetries;	// IMP=0x000000000018f984
- (void)removeBoostedDocID:(id)arg1;	// IMP=0x000000000018f901
- (void)boostDocID:(id)arg1 item:(id)arg2;	// IMP=0x000000000018f70f
- (void)uploadItem:(id)arg1;	// IMP=0x000000000018eedb
- (void)setState:(int)arg1 forUploadJobID:(id)arg2 zone:(id)arg3;	// IMP=0x000000000018e9f0
- (void)setState:(int)arg1 forJobID:(id)arg2 zone:(id)arg3;	// IMP=0x000000000018e98a
- (void)addAliasItem:(id)arg1 toUploadingItem:(id)arg2;	// IMP=0x000000000018e7e1
- (void)rescheduleJobsPendingFavoritesFetchInZone:(id)arg1;	// IMP=0x000000000018e6d5
- (void)cancelAndCleanupItemUpload:(id)arg1;	// IMP=0x000000000018e5a0
- (void)deleteJobsForZone:(id)arg1;	// IMP=0x000000000018e4b0
- (void)deleteJobsMatching:(id)arg1;	// IMP=0x000000000018e449
- (void)_cancelJobsMatching:(id)arg1;	// IMP=0x000000000018e381
- (void)_cancelJobs:(id)arg1 state:(int)arg2;	// IMP=0x000000000018db2c
- (void)_willAttemptJobID:(id)arg1 throttle:(id)arg2 operationID:(id)arg3;	// IMP=0x000000000018da6c
- (id)descriptionForJobID:(id)arg1 context:(id)arg2;	// IMP=0x000000000018d5a3
- (_Bool)isUploadingItem:(id)arg1;	// IMP=0x000000000018d4f4
- (id)_documentItemForJobID:(id)arg1 operationID:(id)arg2;	// IMP=0x000000000018d36c
- (id)_documentItemForJobID:(id)arg1 stageID:(id)arg2;	// IMP=0x000000000018d1e4
- (void)_updateJobID:(id)arg1 setStageID:(id)arg2 operationID:(id)arg3;	// IMP=0x000000000018d0bf
- (id)_buildItemTooLargeErrorIfNeeded:(id)arg1 syncContext:(id)arg2;	// IMP=0x000000000018ce63
- (void)deleteUploadingJobForItem:(id)arg1;	// IMP=0x000000000018ce51
- (void)setState:(int)arg1 forItem:(id)arg2;	// IMP=0x000000000018cd9c
- (id)descriptionForItem:(id)arg1 context:(id)arg2;	// IMP=0x000000000018cd8a
- (void)cancel;	// IMP=0x000000000018cd3e
- (void)close;	// IMP=0x000000000018ccc9
- (void)suspend;	// IMP=0x000000000018cc53
- (void)resume;	// IMP=0x000000000018ca27
- (id)initWithAccountSession:(id)arg1;	// IMP=0x000000000018c3e0
- (unsigned long long)_minBatchSize;	// IMP=0x000000000018c393
- (unsigned long long)_thumbnailOperationsMax;	// IMP=0x000000000018c346

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isCancelled;
@property(readonly) Class superclass;

@end

