//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ScreenReaderOutput/BRLTBrailleStateManagerDelegate-Protocol.h>
#import <ScreenReaderOutput/SCROBrailleDisplayCommandDispatcherDelegate-Protocol.h>
#import <ScreenReaderOutput/SCROBrailleDriverDelegate-Protocol.h>

@class NSAttributedString, NSData, NSLock, NSMutableArray, NSString, NSTimer, SCROBrailleDisplayInput, SCROBrailleDisplayStatus, SCROBrailleEventDispatcher, SCROBrailleLine;
@protocol SCROBrailleDisplayCommandDispatcherProtocol, SCROBrailleDisplayDelegate, SCROBrailleDriverProtocol, SCROIOElementProtocol;

@interface SCROBrailleDisplay : NSObject <SCROBrailleDisplayCommandDispatcherDelegate, SCROBrailleDriverDelegate, BRLTBrailleStateManagerDelegate>
{
    NSLock *_contentLock;	// 8 = 0x8
    id <SCROBrailleDisplayDelegate> _delegate;	// 16 = 0x10
    id <SCROBrailleDisplayCommandDispatcherProtocol> _commandDispatcher;	// 24 = 0x18
    id <SCROBrailleDriverProtocol> _brailleDriver;	// 32 = 0x20
    id <SCROIOElementProtocol> _ioElement;	// 40 = 0x28
    SCROBrailleLine *_brailleLine;	// 48 = 0x30
    int _outputContractionMode;	// 56 = 0x38
    int _inputContractionMode;	// 60 = 0x3c
    _Bool _outputShowEightDot;	// 64 = 0x40
    _Bool _inputShowEightDot;	// 65 = 0x41
    _Bool _shouldBatchUpdates;	// 66 = 0x42
    _Bool _needsUpdating;	// 67 = 0x43
    _Bool _automaticBrailleTranslationEnabled;	// 68 = 0x44
    _Bool _wordWrapEnabled;	// 69 = 0x45
    _Bool _autoAdvanceEnabled;	// 70 = 0x46
    double _autoAdvanceDuration;	// 72 = 0x48
    NSString *_driverIdentifier;	// 80 = 0x50
    NSString *_driverModelIdentifier;	// 88 = 0x58
    long long _mainSize;	// 96 = 0x60
    long long _statusSize;	// 104 = 0x68
    _Bool _postsKeyboardEvents;	// 112 = 0x70
    int _brailleInputMode;	// 116 = 0x74
    SCROBrailleDisplayStatus *_status;	// 120 = 0x78
    SCROBrailleEventDispatcher *_eventDispatcher;	// 128 = 0x80
    struct __CFRunLoop *_runLoop;	// 136 = 0x88
    struct __CFRunLoopTimer *_inputEventTimer;	// 144 = 0x90
    struct __CFRunLoopTimer *_blinkerEventTimer;	// 152 = 0x98
    _Bool _blinkingEnabled;	// 160 = 0xa0
    _Bool _inputAllowed;	// 161 = 0xa1
    _Bool _inputEnabled;	// 162 = 0xa2
    _Bool _inputPaused;	// 163 = 0xa3
    double _inputPausedTime;	// 168 = 0xa8
    NSMutableArray *_keyEventsQueue;	// 176 = 0xb0
    SCROBrailleDisplayInput *_input;	// 184 = 0xb8
    _Bool _isValid;	// 192 = 0xc0
    _Bool _delegateWantsDisplayCallback;	// 193 = 0xc1
    unsigned int _persistentKeyModifiers;	// 196 = 0xc4
    CDUnknownBlockType _eventHandled;	// 200 = 0xc8
    double _brailleKeyDebounceTimeout;	// 208 = 0xd0
    NSTimer *_autoAdvanceTimer;	// 216 = 0xd8
}

+ (id)displayWithIOElement:(id)arg1 driverIdentifier:(id)arg2 delegate:(id)arg3;	// IMP=0x0000000000007a7b
+ (_Bool)brailleDriverClassIsValid:(Class)arg1;	// IMP=0x00000000000078c3
- (void).cxx_destruct;	// IMP=0x0000000000011afb
@property(retain, nonatomic) NSTimer *autoAdvanceTimer; // @synthesize autoAdvanceTimer=_autoAdvanceTimer;
@property(nonatomic) double brailleKeyDebounceTimeout; // @synthesize brailleKeyDebounceTimeout=_brailleKeyDebounceTimeout;
@property(copy, nonatomic) CDUnknownBlockType eventHandled; // @synthesize eventHandled=_eventHandled;
@property(nonatomic) unsigned int persistentKeyModifiers; // @synthesize persistentKeyModifiers=_persistentKeyModifiers;
@property(nonatomic) _Bool outputShowEightDot; // @synthesize outputShowEightDot=_outputShowEightDot;
@property(nonatomic) _Bool inputShowEightDot; // @synthesize inputShowEightDot=_inputShowEightDot;
@property(nonatomic) int outputContractionMode; // @synthesize outputContractionMode=_outputContractionMode;
@property(nonatomic) int inputContractionMode; // @synthesize inputContractionMode=_inputContractionMode;
@property(nonatomic) double autoAdvanceDuration; // @synthesize autoAdvanceDuration=_autoAdvanceDuration;
@property(nonatomic) _Bool automaticBrailleTranslationEnabled; // @synthesize automaticBrailleTranslationEnabled=_automaticBrailleTranslationEnabled;
@property(nonatomic) _Bool inputAllowed; // @synthesize inputAllowed=_inputAllowed;
- (void)brailleDisplayDeletedCharacter:(id)arg1;	// IMP=0x000000000001197e
- (void)brailleDisplayInsertedCharacter:(id)arg1;	// IMP=0x00000000000118d5
- (void)didInsertScriptString:(id)arg1;	// IMP=0x00000000000117bb
- (void)scriptSelectionDidChange:(struct _NSRange)arg1;	// IMP=0x0000000000011776
- (void)replaceScriptStringRange:(struct _NSRange)arg1 withScriptString:(id)arg2 cursorLocation:(unsigned long long)arg3;	// IMP=0x00000000000115b4
- (void)brailleDisplayStringDidChange:(id)arg1 brailleSelection:(struct _NSRange)arg2;	// IMP=0x00000000000115ae
- (void)_delayedSleepNotification:(id)arg1;	// IMP=0x000000000001154f
- (void)_sleepNotification:(id)arg1;	// IMP=0x00000000000114c0
- (void)_delayedConfigurationChangeNotification;	// IMP=0x0000000000011462
- (void)_configurationChangeNotification:(id)arg1;	// IMP=0x0000000000011444
- (void)_delayedUnloadNotification;	// IMP=0x00000000000113e6
- (void)_unloadNotification:(id)arg1;	// IMP=0x00000000000113c8
- (void)_blinkerEventHandler;	// IMP=0x00000000000112fe
- (void)_inputEventHandler;	// IMP=0x0000000000010b2d
- (void)brailleDriverDidReceiveInput;	// IMP=0x0000000000010a9f
- (id)_newBrailleKeyboardKeyForText:(id)arg1 modifiers:(unsigned int)arg2;	// IMP=0x0000000000010889
- (id)_newBrailleKeyForCurrentKeyChord;	// IMP=0x0000000000010610
- (id)_newBrailleKeyForCurrentBrailleChord;	// IMP=0x00000000000103ef
- (void)handleUnsupportedKeyEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x00000000000102c3
- (void)handleCommandToggleEightDotBrailleEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x0000000000010124
- (void)handleCommandToggleContractedBrailleEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000ff85
- (void)handleCommandTranslateForDispatcher:(id)arg1;	// IMP=0x000000000000fe49
- (void)handleCommandReturnBrailleEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000fc6b
- (void)handleCommandEscapeKeyEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000faa9
- (void)handleCommandForwardDeleteKeyEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000f8c8
- (void)handleCommandDeleteKeyEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000f6e7
- (void)handleCommandRouterKeyEvent:(id)arg1 forDispatcher:(id)arg2;	// IMP=0x000000000000f43a
- (void)handleCommandMoveRightForDispatcher:(id)arg1;	// IMP=0x000000000000f2cb
- (void)handleCommandMoveLeftForDispatcher:(id)arg1;	// IMP=0x000000000000f15c
- (void)handleCommandPanRightForDispatcher:(id)arg1;	// IMP=0x000000000000edfb
- (void)handleCommandPanLeftForDispatcher:(id)arg1;	// IMP=0x000000000000ea9a
- (id)brailleInputManager;	// IMP=0x000000000000ea57
- (id)keyArrayForBrailleStringWithCurrentModifiers:(id)arg1;	// IMP=0x000000000000e8e8
- (_Bool)_hasBrailleChord;	// IMP=0x000000000000e8a2
- (_Bool)_hasKeyChord;	// IMP=0x000000000000e882
- (void)_stopMemorization;	// IMP=0x000000000000e81f
- (_Bool)_isMemorizingKeys;	// IMP=0x000000000000e7ab
- (_Bool)_hasPressedBrailleKeys;	// IMP=0x000000000000e744
@property(readonly, nonatomic) long long lineOffset;
@property(readonly, nonatomic) unsigned long long brailleLineGenerationID;
- (void)_panHandler:(id)arg1;	// IMP=0x000000000000e3a8
- (void)_autoAdvancePanHandler:(id)arg1;	// IMP=0x000000000000e2e0
- (void)_processKeyEvents:(id)arg1;	// IMP=0x000000000000c59d
- (void)_replaceRange:(struct _NSRange)arg1 withString:(id)arg2 cursor:(unsigned long long)arg3;	// IMP=0x000000000000c511
- (void)_unpauseInput;	// IMP=0x000000000000c4f3
- (void)_pauseInput;	// IMP=0x000000000000c4cf
- (_Bool)_inputPaused;	// IMP=0x000000000000c496
- (void)_translateBrailleStringAndPostEvent;	// IMP=0x000000000000c480
- (void)_startEditingText;	// IMP=0x000000000000c44a
@property(readonly, nonatomic) SCROBrailleLine *testingBrailleLine;
- (void)insertTypingString:(id)arg1;	// IMP=0x000000000000c424
- (_Bool)_currentChordShouldExecuteEvenDuringTyping;	// IMP=0x000000000000c353
- (void)_setBrailleKeyDebounceTimeoutHandler:(double)arg1;	// IMP=0x000000000000c345
- (void)_translateBrailleToClipboard;	// IMP=0x000000000000c2da
- (void)_textSearchModeHandler:(id)arg1;	// IMP=0x000000000000c278
- (void)_singleLetterInputHandler:(id)arg1;	// IMP=0x000000000000c216
- (void)_configurationChangeHandler;	// IMP=0x000000000000bd27
- (void)_updateDisplay;	// IMP=0x000000000000bba8
- (void)_setBatchUpdates:(id)arg1;	// IMP=0x000000000000bb28
- (void)_bulkStatusAttributesHandler:(id)arg1;	// IMP=0x000000000000b92a
- (void)_simulateKeypressHandler:(id)arg1;	// IMP=0x000000000000b6e5
- (void)_setDelegateWantsDisplayCallbackHandler:(id)arg1;	// IMP=0x000000000000b62e
- (void)_aggregatedStatusHandler:(id)arg1;	// IMP=0x000000000000b29b
- (void)_statusDisplayHandler:(id)arg1;	// IMP=0x000000000000b070
@property(readonly, nonatomic) _Bool hasEdits;
@property(readonly, nonatomic) NSAttributedString *editingString;
- (void)_setBrailleFormatter:(id)arg1;	// IMP=0x000000000000ada9
- (void)unpauseInputOnBrailleFormatterChange;	// IMP=0x000000000000ad72
- (void)_unpauseInputAndProcessKeyEvents;	// IMP=0x000000000000ad3d
- (void)_setTactileGraphicsImageDataHandler:(id)arg1;	// IMP=0x000000000000acdc
- (void)_setBrailleFormatterHandler:(id)arg1;	// IMP=0x000000000000ac7c
- (id)_statusStringWithDictionary:(id)arg1;	// IMP=0x000000000000a7ee
- (void)_unloadHandler;	// IMP=0x000000000000a79c
- (void)handleEvent:(id)arg1;	// IMP=0x000000000000a33e
- (long long)tokenForRouterIndex:(long long)arg1 location:(long long *)arg2 appToken:(id *)arg3;	// IMP=0x000000000000a276
- (void)translateBrailleToClipboard;	// IMP=0x000000000000a186
- (void)setTextSearchModeOn:(_Bool)arg1;	// IMP=0x000000000000a0f4
- (void)setSingleLetterInputIsOn:(_Bool)arg1;	// IMP=0x000000000000a062
- (void)setPrepareToMemorizeNextKey:(_Bool)arg1 immediate:(_Bool)arg2;	// IMP=0x0000000000009f9e
- (void)panRight;	// IMP=0x0000000000009f33
- (void)panLeft;	// IMP=0x0000000000009ec8
- (void)simulateKeypress:(id)arg1;	// IMP=0x0000000000009e69
- (void)setStatusAttributesWithMasterCellIndex:(long long)arg1 virtualAlignment:(int)arg2;	// IMP=0x0000000000009da4
@property(nonatomic) _Bool delegateWantsDisplayCallback;
- (long long)masterStatusCellIndex;	// IMP=0x0000000000009cb7
- (void)setMasterStatusCellIndex:(long long)arg1;	// IMP=0x0000000000009c25
- (int)virtualStatusAlignment;	// IMP=0x0000000000009bd6
- (void)setVirtualStatusAlignment:(int)arg1;	// IMP=0x0000000000009b44
- (id)aggregatedStatus;	// IMP=0x0000000000009a30
- (void)setAggregatedStatus:(id)arg1;	// IMP=0x00000000000099d1
- (id)virtualStatus;	// IMP=0x00000000000098bd
- (id)realStatus;	// IMP=0x00000000000097a9
- (void)setBrailleFormatter:(id)arg1;	// IMP=0x0000000000009744
- (void)endUpdates;	// IMP=0x00000000000096de
- (void)beginUpdates;	// IMP=0x0000000000009678
- (void)requestFlushLine;	// IMP=0x0000000000009612
- (id)canvasDescriptor;	// IMP=0x00000000000095a6
- (id)configuration;	// IMP=0x0000000000009153
- (void)_beginAutoAdvanceIfEnabled;	// IMP=0x0000000000008e92
@property(retain, nonatomic) NSData *imageData;
@property(nonatomic) _Bool autoAdvanceEnabled;
@property(nonatomic) _Bool wordWrapEnabled;
- (long long)statusSize;	// IMP=0x0000000000008ce4
- (long long)mainSize;	// IMP=0x0000000000008cab
- (int)token;	// IMP=0x0000000000008c95
- (id)ioElement;	// IMP=0x0000000000008c87
- (id)lineDescriptor;	// IMP=0x0000000000008bc4
- (id)driverModelIdentifier;	// IMP=0x0000000000008af8
- (id)driverIdentifier;	// IMP=0x0000000000008a2c
- (_Bool)isLoaded;	// IMP=0x0000000000008974
- (_Bool)isValid;	// IMP=0x000000000000892f
- (void)invalidate;	// IMP=0x000000000000879c
- (void)unsleep;	// IMP=0x0000000000008796
- (void)sleep;	// IMP=0x0000000000008790
- (void)dealloc;	// IMP=0x0000000000008600
- (void)_runThread;	// IMP=0x00000000000081d8
- (_Bool)_attemptLoad;	// IMP=0x00000000000081b5
- (void)_delayedDisplayLoad;	// IMP=0x000000000000818f
- (id)_initWithDriver:(id)arg1 driverIdentifier:(id)arg2 ioElement:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000007c3a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

