//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ACAccount, DAStatusReport, DATaskManager, DATrustHandler, NSArray, NSData, NSDate, NSMapTable, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSURL;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface DAAccount : NSObject
{
    ACAccount *_backingAccountInfo;	// 8 = 0x8
    _Bool _hasInitted;	// 16 = 0x10
    _Bool _shouldUseOpportunisticSockets;	// 17 = 0x11
    _Bool _wasUserInitiated;	// 18 = 0x12
    DAStatusReport *_statusReport;	// 24 = 0x18
    NSMapTable *_consumers;	// 32 = 0x20
    struct __CFURLStorageSession *_storageSession;	// 40 = 0x28
    NSString *_clientToken;	// 48 = 0x30
    DATaskManager *_taskManager;	// 56 = 0x38
    NSObject<OS_xpc_object> *_xpcActivity;	// 64 = 0x40
    int _continueCount;	// 72 = 0x48
    _Bool _isFetchingAutomatically;	// 76 = 0x4c
    _Bool _shouldFailAllTasks;	// 77 = 0x4d
    _Bool _isValidating;	// 78 = 0x4e
    DATrustHandler *_trustHandler;	// 80 = 0x50
    NSArray *_appIdsForPasswordPrompt;	// 88 = 0x58
    NSString *_sourceApplicationBundleIdentifier;	// 96 = 0x60
    NSMutableDictionary *_dataclassPropertyURLsByDataclass;	// 104 = 0x68
    NSMutableArray *_pendingQueries;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_pendingQueryQueue;	// 120 = 0x78
    NSDate *_lastQueryStartedTime;	// 128 = 0x80
}

+ (id)daAccountSubclassWithBackingAccountInfo:(id)arg1;	// IMP=0x0000000000001e82
+ (void)reacquireClientRestrictions:(id)arg1;	// IMP=0x0000000000008b1a
+ (id)oneshotListOfAccountIDs;	// IMP=0x00000000000087df
+ (id)_leafAccountTypes;	// IMP=0x0000000000008770
- (void).cxx_destruct;	// IMP=0x000000000000773d
@property(retain, nonatomic) NSDate *lastQueryStartedTime; // @synthesize lastQueryStartedTime=_lastQueryStartedTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pendingQueryQueue; // @synthesize pendingQueryQueue=_pendingQueryQueue;
@property(retain, nonatomic) NSMutableArray *pendingQueries; // @synthesize pendingQueries=_pendingQueries;
@property(retain, nonatomic) NSMutableDictionary *dataclassPropertyURLsByDataclass; // @synthesize dataclassPropertyURLsByDataclass=_dataclassPropertyURLsByDataclass;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool isValidating; // @synthesize isValidating=_isValidating;
@property(readonly, nonatomic) NSArray *appIdsForPasswordPrompt; // @synthesize appIdsForPasswordPrompt=_appIdsForPasswordPrompt;
@property(retain, nonatomic) DATrustHandler *trustHandler; // @synthesize trustHandler=_trustHandler;
@property(readonly, nonatomic) DATaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(nonatomic) _Bool wasUserInitiated; // @synthesize wasUserInitiated=_wasUserInitiated;
@property(nonatomic) _Bool shouldUseOpportunisticSockets; // @synthesize shouldUseOpportunisticSockets=_shouldUseOpportunisticSockets;
@property(retain, nonatomic) DAStatusReport *statusReport; // @synthesize statusReport=_statusReport;
@property(readonly, nonatomic) ACAccount *backingAccountInfo; // @synthesize backingAccountInfo=_backingAccountInfo;
- (_Bool)getFetchingAutomaticallyState;	// IMP=0x0000000000007622
- (void)saveFetchingAutomaticallyState:(_Bool)arg1;	// IMP=0x0000000000007619
- (void)removeXpcActivity;	// IMP=0x00000000000074c4
- (void)decrementXpcActivityContinueCount;	// IMP=0x00000000000073c3
- (void)incrementXpcActivityContinueCount;	// IMP=0x00000000000072dc
- (_Bool)hasXpcActivity;	// IMP=0x00000000000072ce
- (void)saveXpcActivity:(id)arg1;	// IMP=0x00000000000071c5
- (_Bool)shouldCancelTaskDueToOnPowerFetchMode;	// IMP=0x000000000000713a
- (id)accountTypeIdentifier;	// IMP=0x00000000000070e6
- (id)protocolVersion;	// IMP=0x00000000000070de
- (void)reload;	// IMP=0x000000000000703e
- (void)shutdown;	// IMP=0x0000000000006fb6
- (id)description;	// IMP=0x0000000000006ee2
- (struct __CFURLStorageSession *)copyStorageSession;	// IMP=0x0000000000006d16
- (_Bool)isSubscribedCalendarAccount;	// IMP=0x0000000000006d0e
- (_Bool)isGoogleAccount;	// IMP=0x0000000000006d06
- (_Bool)isHotmailAccount;	// IMP=0x0000000000006cfe
- (_Bool)isCalDAVChildAccount;	// IMP=0x0000000000006cf6
- (_Bool)isCardDAVAccount;	// IMP=0x0000000000006cee
- (_Bool)isCalDAVAccount;	// IMP=0x0000000000006ce6
- (_Bool)isLDAPAccount;	// IMP=0x0000000000006cde
- (_Bool)isActiveSyncAccount;	// IMP=0x0000000000006cd6
- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;	// IMP=0x0000000000006708
- (_Bool)isEqualToAccount:(id)arg1;	// IMP=0x000000000000666a
@property(readonly, nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;
- (void)resetStatusReport;	// IMP=0x00000000000061a3
- (_Bool)resetCertWarnings;	// IMP=0x000000000000615f
@property(readonly, nonatomic) _Bool isChildAccount;
- (void)cleanupAccountFiles;	// IMP=0x0000000000006088
- (void)setExceptions:(struct __CFData *)arg1 forDigest:(id)arg2;	// IMP=0x0000000000005f40
- (struct __CFData *)exceptionsForDigest:(id)arg1;	// IMP=0x0000000000005e9d
- (id)exceptionsDict;	// IMP=0x0000000000005e84
- (_Bool)_isIdentityManagedByProfile;	// IMP=0x0000000000005e39
- (void)setIdentityCertificatePersistentID:(id)arg1 managedByProfile:(_Bool)arg2;	// IMP=0x0000000000005cfc
@property(readonly, copy, nonatomic) NSData *identityPersist;
- (id)addUsernameToURL:(id)arg1;	// IMP=0x0000000000005b39
@property(readonly, nonatomic) int keychainAccessibilityType;
- (void)updateExistingAccountProperties;	// IMP=0x000000000000592a
- (void)saveAccountProperties;	// IMP=0x000000000000580b
- (void)saveAccountPropertiesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000005589
- (void)removeClientCertificateData;	// IMP=0x0000000000005525
- (id)defaultContainerIdentifierForDADataclass:(long long)arg1;	// IMP=0x000000000000551d
- (void)stopMonitoringFolders;	// IMP=0x000000000000543e
- (void)stopMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x000000000000535f
- (_Bool)monitorFolderWithID:(id)arg1;	// IMP=0x00000000000052af
- (_Bool)monitorFoldersWithIDs:(id)arg1;	// IMP=0x00000000000052a7
- (void)tearDown;	// IMP=0x00000000000051c8
- (id)oauthInfoProvider;	// IMP=0x00000000000051bf
- (id)oauth2Token;	// IMP=0x0000000000004edc
- (id)customConnectionProperties;	// IMP=0x0000000000004dad
- (id)additionalHeaderValues;	// IMP=0x0000000000004b93
- (_Bool)handleCertificateError:(id)arg1;	// IMP=0x0000000000004b8b
@property(readonly, nonatomic) NSSet *serverComplianceClasses;
@property(readonly, nonatomic) NSString *serverRoot;
@property(readonly, nonatomic) NSString *userAgentHeader;
- (void)accountDidChangeFromOldAccountInfo:(id)arg1;	// IMP=0x0000000000004a6b
- (void)removeDBSyncData;	// IMP=0x0000000000004a65
- (_Bool)shouldRemoveDBSyncDataOnAccountChange;	// IMP=0x0000000000004a05
- (id)onBehalfOfBundleIdentifier;	// IMP=0x0000000000004967
@property(readonly, nonatomic) _Bool shouldAutodiscoverAccountProperties;
@property(nonatomic) _Bool shouldDoInitialAutodiscovery;
- (_Bool)autodiscoverAccountConfigurationWithConsumer:(id)arg1;	// IMP=0x0000000000004847
- (void)discoverInitialPropertiesWithConsumer:(id)arg1;	// IMP=0x000000000000479d
- (_Bool)saveModifiedPropertiesOnBackingAccount;	// IMP=0x0000000000004795
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2 inQueue:(id)arg3;	// IMP=0x00000000000043b0
- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2;	// IMP=0x000000000000433c
@property(copy, nonatomic) NSURL *principalURL;
@property(readonly, copy, nonatomic) NSString *scheme;
@property(copy, nonatomic) NSString *principalPath;
@property(nonatomic) long long port;
@property(retain, nonatomic) NSData *encryptionIdentityPersistentReference;
@property(retain, nonatomic) NSData *signingIdentityPersistentReference;
- (_Bool)accountContainsEmailAddress:(id)arg1;	// IMP=0x0000000000003d85
@property(copy, nonatomic) NSArray *emailAddresses;
@property(copy, nonatomic) NSString *emailAddress;
@property(nonatomic) _Bool useSSL;
@property(copy, nonatomic) NSString *host;
- (id)domainOnly;	// IMP=0x0000000000003aa4
- (id)usernameWithoutDomain;	// IMP=0x0000000000003a92
- (long long)portFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000003a24
- (_Bool)useSSLFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000003988
- (id)hostFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x0000000000003938
- (id)urlFromDataclassPropertiesForDataclass:(id)arg1;	// IMP=0x00000000000035dc
@property(copy, nonatomic) NSString *password;
- (id)passwordWithExpected:(_Bool)arg1;	// IMP=0x0000000000003211
- (void)clientTokenRequestedByServer;	// IMP=0x000000000000315f
@property(readonly, copy, nonatomic) NSString *clientToken;
- (void)removeConsumerForTask:(id)arg1;	// IMP=0x0000000000003015
- (id)consumerForTask:(id)arg1;	// IMP=0x0000000000002fff
- (void)setConsumer:(id)arg1 forTask:(id)arg2;	// IMP=0x0000000000002eb4
- (id)stateString;	// IMP=0x0000000000002ca9
- (void)stopMonitoringFolderWithID:(id)arg1;	// IMP=0x0000000000002bca
- (void)suspendMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000002aeb
- (void)resumeMonitoringFoldersWithIDs:(id)arg1;	// IMP=0x0000000000002a41
- (void)setAccountIntProperty:(int)arg1 forKey:(id)arg2;	// IMP=0x00000000000029a4
- (int)accountIntPropertyForKey:(id)arg1;	// IMP=0x000000000000290e
- (void)setAccountBoolProperty:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000002871
- (_Bool)accountBoolPropertyForKey:(id)arg1;	// IMP=0x00000000000027db
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x0000000000002758
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x00000000000026d2
- (void)removeAccountPropertyForKey:(id)arg1;	// IMP=0x000000000000265e
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000025d8
- (id)accountPropertyForKey:(id)arg1;	// IMP=0x0000000000002555
- (id)spinnerIdentifiers;	// IMP=0x00000000000024a9
- (id)dataclassProperties;	// IMP=0x0000000000002493
@property(readonly, nonatomic) long long enabledDataclassesBitmask;
- (void)setEnabled:(_Bool)arg1 forDADataclass:(long long)arg2;	// IMP=0x00000000000022ab
- (_Bool)enabledForDADataclass:(long long)arg1;	// IMP=0x0000000000002266
- (_Bool)enabledForAnyDADataclasses:(long long)arg1;	// IMP=0x000000000000223f
- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;	// IMP=0x0000000000002229
- (_Bool)isEnabledForDataclass:(id)arg1;	// IMP=0x0000000000002213
- (_Bool)isDisabled;	// IMP=0x00000000000017f4
@property(copy, nonatomic) NSString *user;
@property(copy, nonatomic) NSString *username;
- (id)displayName;	// IMP=0x00000000000021b1
@property(copy, nonatomic) NSString *accountDescription;
@property(readonly, nonatomic) NSString *changeTrackingID;
- (void)_setPersistentUUID:(id)arg1;	// IMP=0x00000000000020b9
@property(readonly, copy, nonatomic) NSString *persistentUUID;
@property(readonly, nonatomic) NSString *scheduleIdentifier;
- (id)syncStoreIdentifier;	// IMP=0x000000000000167c
@property(readonly, nonatomic) NSString *accountID;
- (void)resetAccountID;	// IMP=0x0000000000001f58
- (_Bool)upgradeAccount;	// IMP=0x0000000000001f35
@property(nonatomic, setter=setDAAccountVersion:) int daAccountVersion;
- (void)ingestBackingAccountInfoProperties;	// IMP=0x0000000000001e7c
- (id)initWithBackingAccountInfo:(id)arg1;	// IMP=0x0000000000001d1d
- (void)dealloc;	// IMP=0x000000000000168e
- (_Bool)handleTrustChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000000785b
- (_Bool)handleTrustChallenge:(id)arg1;	// IMP=0x00000000000077e1
- (id)getAppleIDSession;	// IMP=0x00000000000078e9
- (void)removeFromCoreDAVLoggingDelegates;	// IMP=0x00000000000078f7
- (void)addToCoreDAVLoggingDelegates;	// IMP=0x00000000000078f1
- (void)handleValidationError:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000008484
- (void)webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000837f
- (void)_webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 inQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x000000000000805a
- (void)dropAssertionsAndRenewCredentialsInQueue:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007a39
- (id)localizedInvalidPasswordMessage;	// IMP=0x000000000000799b
- (id)localizedIdenticalAccountFailureMessage;	// IMP=0x00000000000078fd
- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;	// IMP=0x0000000000009516
- (id)reportShareRequestAsJunkForCalendar:(id)arg1 consumer:(id)arg2;	// IMP=0x00000000000093c4
- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(long long)arg2 consumer:(id)arg3;	// IMP=0x0000000000009272
- (void)cancelCalendarDirectorySearchWithID:(id)arg1;	// IMP=0x0000000000009187
- (id)performCalendarDirectorySearchForTerms:(id)arg1 recordTypes:(id)arg2 resultLimit:(unsigned long long)arg3 consumer:(id)arg4;	// IMP=0x0000000000009058
- (void)cancelCalendarAvailabilityRequestWithID:(id)arg1;	// IMP=0x0000000000008f92
- (id)requestCalendarAvailabilityForStartDate:(id)arg1 endDate:(id)arg2 ignoredEventID:(id)arg3 addresses:(id)arg4 consumer:(id)arg5;	// IMP=0x0000000000008e64
- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;	// IMP=0x0000000000008e5e
- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;	// IMP=0x0000000000008d0c
- (_Bool)sendEmailsForCalEvents:(id)arg1 consumer:(id)arg2;	// IMP=0x0000000000008d04
- (void)synchronizeEventsFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(id)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 moreLocalChangesAvailable:(_Bool)arg7 consumer:(id)arg8;	// IMP=0x0000000000008cfe
- (id)eventsFolders;	// IMP=0x0000000000008cf6
- (id)defaultEventsFolder;	// IMP=0x0000000000008cee
- (id)draftsFolder;	// IMP=0x0000000000009d78
- (id)deletedItemsFolder;	// IMP=0x0000000000009d70
- (id)sentItemsFolder;	// IMP=0x0000000000009d68
- (id)inboxFolder;	// IMP=0x0000000000009d60
- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;	// IMP=0x0000000000009d88
- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;	// IMP=0x0000000000009d80
- (int)supportsEmailFlagging;	// IMP=0x0000000000015c29
- (int)supportsMailboxSearch;	// IMP=0x0000000000015c21
- (_Bool)searchQueriesRunning;	// IMP=0x0000000000015add
- (void)cancelAllSearchQueries;	// IMP=0x00000000000157cf
- (void)cancelSearchQuery:(id)arg1;	// IMP=0x0000000000015519
- (void)performSearchQuery:(id)arg1;	// IMP=0x00000000000151b5
- (void)_dequeueQuery;	// IMP=0x0000000000014ddf
- (id)getPendingQueryQueue;	// IMP=0x0000000000014c9f
- (_Bool)_reallySearchQueriesRunning;	// IMP=0x0000000000015d6f
- (void)_reallyCancelAllSearchQueries;	// IMP=0x0000000000015d69
- (void)_reallyCancelPendingSearchQuery:(id)arg1;	// IMP=0x0000000000015d63
- (void)_reallyCancelSearchQuery:(id)arg1;	// IMP=0x0000000000015d5d
- (void)_reallyPerformSearchQuery:(id)arg1;	// IMP=0x0000000000015c31

@end

