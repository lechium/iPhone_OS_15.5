//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@protocol SRCSTextEditingProviderProtocol;

@interface SRCSTextEditing : NSObject
{
    id <SRCSTextEditingProviderProtocol> _provider;	// 8 = 0x8
    double _delayAfterSelectionBeforeExecutingAction;	// 16 = 0x10
}

+ (long long)doesArrayOfWords:(id)arg1 containArrayOfArrayWords:(id)arg2;	// IMP=0x000000000001cb63
+ (id)wordsFromString:(id)arg1;	// IMP=0x000000000001ca65
- (void).cxx_destruct;	// IMP=0x0000000000011591
@property double delayAfterSelectionBeforeExecutingAction; // @synthesize delayAfterSelectionBeforeExecutingAction=_delayAfterSelectionBeforeExecutingAction;
@property __weak id <SRCSTextEditingProviderProtocol> provider; // @synthesize provider=_provider;
- (unsigned long long)characterLengthOfTextMarkerRange:(id)arg1;	// IMP=0x0000000000011445
- (id)init;	// IMP=0x0000000000011403
- (id)_capitalizedStringFromString:(id)arg1;	// IMP=0x000000000000877e
- (id)_strippedPhraseStringsFromStrings:(id)arg1;	// IMP=0x00000000000083cd
- (void)correctSelection;	// IMP=0x00000000000081e7
- (void)pasteboardCut;	// IMP=0x0000000000008020
- (void)pasteboardCopy;	// IMP=0x0000000000007e59
- (void)pasteboardPaste;	// IMP=0x0000000000007e1c
- (void)applyFormatWithCommandIdentifier:(id)arg1;	// IMP=0x0000000000007792
- (void)unselect;	// IMP=0x0000000000007780
- (void)selectPreviousTextInsertion;	// IMP=0x0000000000007674
- (void)selectAll;	// IMP=0x00000000000074d7
- (void)selectFromPhraseVariants:(id)arg1 throughPhraseVariants:(id)arg2 recognizedParameters:(id)arg3 commandIdentifer:(id)arg4;	// IMP=0x00000000000057a3
- (void)selectFromPhraseVariants:(id)arg1 throughPhraseVariants:(id)arg2 commandIdentifer:(id)arg3;	// IMP=0x000000000000578b
- (long long)_indexOfFirstPhraseMatchResultPairBeforeInsertion:(_Bool)arg1 fromArray:(id)arg2;	// IMP=0x0000000000005525
- (id)_prunedStringsFromCandidateStrings:(id)arg1;	// IMP=0x00000000000052ab
- (void)selectFromPhraseVariants:(id)arg1 insertionString:(id)arg2 recognizedParameters:(id)arg3 commandIdentifer:(id)arg4;	// IMP=0x00000000000031ed
- (void)selectFromPhraseVariants:(id)arg1 insertionString:(id)arg2 commandIdentifer:(id)arg3;	// IMP=0x00000000000031d5
- (void)extendSelectionBackwardLinesWithCount:(long long)arg1;	// IMP=0x000000000000304c
- (void)extendSelectionForwardLinesWithCount:(long long)arg1;	// IMP=0x0000000000002ec7
- (void)extendSelectionBackwardParagraphsWithCount:(long long)arg1;	// IMP=0x0000000000002d3b
- (void)extendSelectionForwardParagraphsWithCount:(long long)arg1;	// IMP=0x0000000000002bb3
- (void)extendSelectionBackwardSentencesWithCount:(long long)arg1;	// IMP=0x0000000000002a27
- (void)extendSelectionForwardSentencesWithCount:(long long)arg1;	// IMP=0x000000000000289f
- (void)extendSelectionBackwardWordsWithCount:(long long)arg1;	// IMP=0x0000000000002713
- (void)extendSelectionForwardWordsWithCount:(long long)arg1;	// IMP=0x000000000000258b
- (void)extendSelectionBackwardCharactersWithCount:(long long)arg1;	// IMP=0x00000000000023ff
- (void)extendSelectionForwardCharactersWithCount:(long long)arg1;	// IMP=0x0000000000002277
- (void)extendSelectionToBeginning;	// IMP=0x0000000000002132
- (void)extendSelectionToEnd;	// IMP=0x0000000000001fe9
- (void)selectPreviousLineWithCount:(long long)arg1;	// IMP=0x0000000000001f3c
- (void)selectNextLineWithCount:(long long)arg1;	// IMP=0x0000000000001e92
- (void)selectCurrentLine;	// IMP=0x0000000000001de8
- (void)selectPreviousParagraphWithCount:(long long)arg1;	// IMP=0x0000000000001d38
- (void)selectNextParagraphWithCount:(long long)arg1;	// IMP=0x0000000000001c8b
- (void)selectCurrentParagraph;	// IMP=0x0000000000001bde
- (void)selectPreviousSentenceWithCount:(long long)arg1;	// IMP=0x0000000000001b2e
- (void)selectNextSentenceWithCount:(long long)arg1;	// IMP=0x0000000000001a81
- (void)selectCurrentSentence;	// IMP=0x00000000000019d4
- (void)selectNextWordWithCount:(long long)arg1;	// IMP=0x0000000000001927
- (void)selectPreviousWordWithCount:(long long)arg1;	// IMP=0x0000000000001877
- (void)selectCurrentWord;	// IMP=0x00000000000017ca
- (void)selectNextCharacterWithCount:(long long)arg1;	// IMP=0x000000000000171d
- (void)selectPreviousCharacterWithCount:(long long)arg1;	// IMP=0x000000000000166d
- (void)selectCurrentCharacter;	// IMP=0x00000000000015c0
- (void)moveBackwardLinesWithCount:(long long)arg1;	// IMP=0x000000000001761f
- (void)moveForwardLinesWithCount:(long long)arg1;	// IMP=0x00000000000174d4
- (void)moveBackwardParagraphsWithCount:(long long)arg1;	// IMP=0x0000000000017383
- (void)moveForwardParagraphsWithCount:(long long)arg1;	// IMP=0x0000000000017138
- (void)moveBackwardSentencesWithCount:(long long)arg1;	// IMP=0x0000000000016fe7
- (void)moveForwardSentencesWithCount:(long long)arg1;	// IMP=0x0000000000016d9c
- (void)moveBackwardWordsWithCount:(long long)arg1;	// IMP=0x0000000000016c4b
- (void)moveForwardWordsWithCount:(long long)arg1;	// IMP=0x0000000000016a00
- (void)moveBackwardCharactersWithCount:(long long)arg1;	// IMP=0x00000000000167aa
- (void)moveForwardCharactersWithCount:(long long)arg1;	// IMP=0x0000000000016557
- (void)moveToEndOfLineWithCount:(long long)arg1;	// IMP=0x0000000000016406
- (void)moveToStartOfLineWithCount:(long long)arg1;	// IMP=0x00000000000162b8
- (void)moveToEndOfParagraphWithCount:(long long)arg1;	// IMP=0x0000000000016164
- (void)moveToStartOfParagraphWithCount:(long long)arg1;	// IMP=0x0000000000016013
- (void)moveToEndOfSentenceWithCount:(long long)arg1;	// IMP=0x0000000000015ebf
- (void)moveToStartOfSentenceWithCount:(long long)arg1;	// IMP=0x0000000000015d6e
- (void)moveToEndOfWordWithCount:(long long)arg1;	// IMP=0x0000000000015c1d
- (void)moveToStartOfWordWithCount:(long long)arg1;	// IMP=0x0000000000015acc
- (void)moveToEndOfSelection;	// IMP=0x0000000000015992
- (void)moveToStartOfSelection;	// IMP=0x0000000000015858
- (void)moveToEndOfTextArea;	// IMP=0x000000000001572b
- (void)moveToStartOfTextArea;	// IMP=0x00000000000155fe
- (void)deleteSelection;	// IMP=0x000000000001a269
- (void)deleteAll;	// IMP=0x000000000001a131
- (void)deletePreviousLineWithCount:(long long)arg1;	// IMP=0x000000000001a084
- (void)deleteNextLineWithCount:(long long)arg1;	// IMP=0x0000000000019fda
- (void)deleteCurrentLine;	// IMP=0x0000000000019f30
- (void)deletePreviousParagraphWithCount:(long long)arg1;	// IMP=0x0000000000019e80
- (void)deleteNextParagraphWithCount:(long long)arg1;	// IMP=0x0000000000019dd3
- (void)deleteCurrentParagraph;	// IMP=0x0000000000019d26
- (void)deletePreviousSentenceWithCount:(long long)arg1;	// IMP=0x0000000000019c76
- (void)deleteNextSentenceWithCount:(long long)arg1;	// IMP=0x0000000000019bc9
- (void)deleteCurrentSentence;	// IMP=0x0000000000019b1c
- (void)deleteNextWordWithCount:(long long)arg1;	// IMP=0x0000000000019a6f
- (void)deletePreviousWordWithCount:(long long)arg1;	// IMP=0x00000000000199bf
- (void)deleteCurrentWord;	// IMP=0x0000000000019912
- (void)deleteNextCharacterWithCount:(long long)arg1;	// IMP=0x0000000000019865
- (void)deletePreviousCharacterWithCount:(long long)arg1;	// IMP=0x00000000000197b5
- (void)deleteCurrentCharacter;	// IMP=0x0000000000019708
- (_Bool)_range:(struct _NSRange)arg1 includesRange:(struct _NSRange)arg2;	// IMP=0x000000000001ca49
- (struct _NSRange)_rangeOfWordBasedSearchString:(id)arg1 inString:(id)arg2 withRange:(struct _NSRange)arg3 forwardSearchDirection:(_Bool)arg4;	// IMP=0x000000000001c6a3
- (id)orderedPhraseMatchesFromStrings:(id)arg1 forwardDirection:(_Bool)arg2 referenceLocation:(long long)arg3 substringSearchGranularity:(int)arg4;	// IMP=0x000000000001c467
- (id)visiblePhraseMatchesFromStrings:(id)arg1 substringSearchGranularity:(int)arg2;	// IMP=0x000000000001beaf
- (id)actOnStrings:(id)arg1 ambiguityResolution:(id)arg2 substringSearchGranularity:(int)arg3 alwaysCallActionOnClosestMatch:(_Bool)arg4 options:(id)arg5 actionBlock:(CDUnknownBlockType)arg6;	// IMP=0x000000000001adbd
- (struct _NSRange)rangeOfStrings:(id)arg1 referenceRange:(struct _NSRange)arg2 ambiguityResolution:(id)arg3 substringSearchGranularity:(int)arg4 foundStringRef:(id *)arg5;	// IMP=0x000000000001a3a2
- (struct _NSRange)_findRangeForEnumerationType:(long long)arg1 atRelativeIncrement:(long long)arg2 fromPosition:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x000000000001d87d
- (id)markerRangeForLineInDesiredBlock:(int)arg1 count:(unsigned long long)arg2 options:(int)arg3;	// IMP=0x000000000001d251
- (id)markerRangeForEnumerationType:(long long)arg1 desiredBlock:(int)arg2 count:(unsigned long long)arg3 options:(int)arg4;	// IMP=0x000000000001ce7d

@end

