//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, PLAssetsdCloudClient;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface PLPreheatItem : NSObject
{
    unsigned short _format;	// 8 = 0x8
    long long _imageType;	// 16 = 0x10
    struct CGSize _optimalSourcePixelSize;	// 24 = 0x18
    NSString *_assetUUID;	// 40 = 0x28
    _Bool _CPLPrefetching;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_CPLPrefetchingIsolationQueue;	// 56 = 0x38
    NSString *_CPLPrefetchingDoneToken;	// 64 = 0x40
    int _CPLNotifyRegistrationToken;	// 72 = 0x48
    _Bool _CPLPrefetchingCancelled;	// 76 = 0x4c
    NSObject<OS_dispatch_group> *_CPLPrefetchingWaitGroup;	// 80 = 0x50
    _Bool _cachingAllowed;	// 88 = 0x58
    _Atomic int _requestCount;	// 92 = 0x5c
    PLAssetsdCloudClient *_cloudClient;	// 96 = 0x60
    _Bool _didCompleteCPLPrefetchingWithSuccessOrError;	// 104 = 0x68
    _Bool _CPLPrefetchingWasCancelled;	// 105 = 0x69
    unsigned short _bestFormat;	// 106 = 0x6a
    NSString *_virtualCPLTaskIdentifier;	// 112 = 0x70
}

- (void).cxx_destruct;	// IMP=0x000000000050e6e3
@property(nonatomic) _Bool cachingAllowed; // @synthesize cachingAllowed=_cachingAllowed;
@property _Bool CPLPrefetchingWasCancelled; // @synthesize CPLPrefetchingWasCancelled=_CPLPrefetchingWasCancelled;
@property _Bool didCompleteCPLPrefetchingWithSuccessOrError; // @synthesize didCompleteCPLPrefetchingWithSuccessOrError=_didCompleteCPLPrefetchingWithSuccessOrError;
@property(retain) NSString *virtualCPLTaskIdentifier; // @synthesize virtualCPLTaskIdentifier=_virtualCPLTaskIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *CPLPrefetchingWaitGroup; // @synthesize CPLPrefetchingWaitGroup=_CPLPrefetchingWaitGroup;
@property(readonly, nonatomic) _Bool CPLPrefetching; // @synthesize CPLPrefetching=_CPLPrefetching;
@property(readonly, copy, nonatomic) NSString *assetUUID; // @synthesize assetUUID=_assetUUID;
@property(readonly, nonatomic) struct CGSize optimalSourcePixelSize; // @synthesize optimalSourcePixelSize=_optimalSourcePixelSize;
@property(readonly, nonatomic) long long imageType; // @synthesize imageType=_imageType;
@property(nonatomic) unsigned short bestFormat; // @synthesize bestFormat=_bestFormat;
@property(readonly, nonatomic) unsigned short format; // @synthesize format=_format;
- (_Bool)isRetained;	// IMP=0x000000000050e624
- (long long)decrementRequestCount;	// IMP=0x000000000050e60f
- (long long)incrementRequestCount;	// IMP=0x000000000050e5fa
- (_Bool)isCancelled;	// IMP=0x000000000050e534
- (void)cancelPreheatRequestWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000050e46d
- (void)startPreheatRequestWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000050e383
- (_Bool)addImageHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000050e37b
- (id)cachedImageIfAvailable:(_Bool *)arg1;	// IMP=0x000000000050e36b
- (id)cachedImage:(_Bool *)arg1;	// IMP=0x000000000050e35b
- (id)description;	// IMP=0x000000000050e1d2
- (id)initForCPLPrefetchingWithAssetUUID:(id)arg1 format:(unsigned short)arg2 assetsdClient:(id)arg3;	// IMP=0x000000000050e0b8

@end

