//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreData/NSManagedObjectContext.h>

@class NSError, NSMutableDictionary, NSMutableSet, PLChangeHandlingContainer, PLDelayedFiledSystemDeletions, PLDelayedSaveActions, PLPhotoLibrary, PLPhotoLibraryPathManager;
@protocol PLManagedObjectContextPTPNotificationDelegate;

@interface PLManagedObjectContext : NSManagedObjectContext
{
    _Bool _hasMetadataChanges;	// 8 = 0x8
    _Bool _isConnectedToChangeHandling;	// 9 = 0x9
    _Bool _mergingChanges;	// 10 = 0xa
    _Bool _savingDuringMerge;	// 11 = 0xb
    _Bool _isInitializingSingletons;	// 12 = 0xc
    _Bool _isBackingALAssetsLibrary;	// 13 = 0xd
    _Bool _isObservingChangesForPTPNotificationDelegate;	// 14 = 0xe
    _Bool _needsBackgroundJobProcessing;	// 15 = 0xf
    PLDelayedFiledSystemDeletions *_delayedDeletions;	// 16 = 0x10
    NSMutableSet *_avalancheUUIDsForUpdate;	// 24 = 0x18
    NSMutableDictionary *_uuidsForCloudDeletion;	// 32 = 0x20
    _Bool _syncChangeMarker;	// 40 = 0x28
    NSMutableDictionary *_updatedObjectsAttributes;	// 48 = 0x30
    NSMutableDictionary *_updatedObjectsRelationships;	// 56 = 0x38
    PLPhotoLibrary *_photoLibrary;	// 64 = 0x40
    PLPhotoLibraryPathManager *_pathManager;	// 72 = 0x48
    PLDelayedSaveActions *_delayedSaveActions;	// 80 = 0x50
    PLChangeHandlingContainer *_changeHandlingContainer;	// 88 = 0x58
    struct os_unfair_lock_s _invalidationStateLock;	// 96 = 0x60
    NSError *_invalidationReason;	// 104 = 0x68
    double _lastResetTimestamp;	// 112 = 0x70
    _Bool _regenerateVideoThumbnails;	// 120 = 0x78
    int _changeSource;	// 124 = 0x7c
    id <PLManagedObjectContextPTPNotificationDelegate> _ptpNotificationDelegate;	// 128 = 0x80
}

+ (id)sanitizedErrorFromError:(id)arg1;	// IMP=0x000000000016c53b
+ (_Bool)assetsLibraryLoggingEnabled;	// IMP=0x000000000016c51c
+ (_Bool)_isAssetLibraryFetchingAlbum:(id)arg1;	// IMP=0x000000000016c4f4
+ (id)changeNotificationObjectIDKeys;	// IMP=0x000000000016c4d0
+ (id)changeNotificationObjectIDMutationKeys;	// IMP=0x000000000016c4ac
+ (id)changeNotificationObjectKeys;	// IMP=0x000000000016c488
+ (id)changeNotificationObjectMutationKeys;	// IMP=0x000000000016c464
+ (void)recordChangedKeys:(id)arg1 forObjectID:(id)arg2 inAttributesByOID:(id)arg3 relationshipsByOID:(id)arg4;	// IMP=0x000000000016c1e7
+ (void)recordChangedProperties:(id)arg1 forObjectID:(id)arg2 inAttributesByOID:(id)arg3 relationshipsByOID:(id)arg4;	// IMP=0x000000000016c10f
+ (id)relationshipNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;	// IMP=0x000000000016c083
+ (unsigned long long)indexValueForRelationshipNames:(id)arg1 entity:(id)arg2;	// IMP=0x000000000016bff5
+ (id)attributeNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2;	// IMP=0x000000000016bf69
+ (unsigned long long)indexValueForAttributeNames:(id)arg1 entity:(id)arg2;	// IMP=0x000000000016bedb
+ (id)_propertyNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 propertyNamesByIndexByEntityNames:(id)arg3;	// IMP=0x000000000016bd90
+ (unsigned long long)_indexValueForPropertyNames:(id)arg1 entityName:(id)arg2 indexesByPropertyNamesByEntityNames:(id)arg3;	// IMP=0x000000000016bbc6
+ (id)_indexesByRelationshipNamesByEntityNames;	// IMP=0x000000000016bba8
+ (id)_relationshipNamesByIndexByEntityNames;	// IMP=0x000000000016bb8a
+ (id)_indexesByAttributeNamesByEntityNames;	// IMP=0x000000000016bb6c
+ (id)_attributeNamesByIndexByEntityNames;	// IMP=0x000000000016bb4e
+ (void)__prepareEntityPropertyLookups;	// IMP=0x000000000016bb36
+ (id)__processSubEntityByName:(id)arg1 entity:(id)arg2 withEntityData:(id)arg3;	// IMP=0x000000000016acbf
+ (id)__processEntityByName:(id)arg1 obj:(id)arg2;	// IMP=0x000000000016ab8f
+ (id)managedObjectModel;	// IMP=0x000000000016ab76
+ (id)managedObjectModelURL;	// IMP=0x000000000016ab5d
+ (void)getPersistentStoreURL:(id *)arg1 options:(id *)arg2 forDatabasePath:(id)arg3;	// IMP=0x000000000016ab00
+ (_Bool)hasConfiguredPhotoLibrary;	// IMP=0x000000000016aae7
+ (_Bool)isInPLMocPerform;	// IMP=0x000000000016aab0
+ (_Bool)shouldHavePhotoLibrary;	// IMP=0x000000000016aaa8
+ (void)removePhotosDatabaseWithPathManager:(id)arg1;	// IMP=0x000000000016aa8f
+ (_Bool)canMergeRemoteChanges;	// IMP=0x000000000016aa87
+ (id)contextForRepairingSingletonObjects:(const char *)arg1 libraryURL:(id)arg2 error:(id *)arg3;	// IMP=0x000000000016a6bc
+ (id)contextForPhotoLibrary:(id)arg1 automaticallyMerges:(_Bool)arg2 automaticallyPinToFirstFetch:(_Bool)arg3 name:(const char *)arg4;	// IMP=0x000000000016a211
- (void).cxx_destruct;	// IMP=0x0000000000169690
@property(nonatomic) _Bool isBackingALAssetsLibrary; // @synthesize isBackingALAssetsLibrary=_isBackingALAssetsLibrary;
@property(nonatomic) _Bool isInitializingSingletons; // @synthesize isInitializingSingletons=_isInitializingSingletons;
@property(nonatomic) int changeSource; // @synthesize changeSource=_changeSource;
@property(nonatomic) _Bool regenerateVideoThumbnails; // @synthesize regenerateVideoThumbnails=_regenerateVideoThumbnails;
@property(nonatomic) _Bool hasMetadataChanges; // @synthesize hasMetadataChanges=_hasMetadataChanges;
@property(retain, nonatomic) PLDelayedFiledSystemDeletions *delayedDeletions; // @synthesize delayedDeletions=_delayedDeletions;
@property(readonly, nonatomic) _Bool savingDuringMerge; // @synthesize savingDuringMerge=_savingDuringMerge;
@property(readonly, nonatomic) _Bool mergingChanges; // @synthesize mergingChanges=_mergingChanges;
- (_Bool)shouldMergeFromRemoteContextWithChanges:(id)arg1;	// IMP=0x00000000001695b3
- (void)tearDownLocalChangeNotifications;	// IMP=0x00000000001695ad
- (void)setupLocalChangeNotifications;	// IMP=0x00000000001695a7
- (void)appendDelayedDeletionsToXPCMessage:(id)arg1;	// IMP=0x0000000000169523
- (void)_informPTPDelegateAboutChangesFromRemoteContextSaveNotification:(id)arg1;	// IMP=0x0000000000169249
- (void)_getInsertedIDs:(id)arg1 deletedIDs:(id)arg2 changedIDs:(id)arg3 adjustedIDs:(id)arg4 ofEntityKind:(id)arg5 fromRemoteContextDidSaveObjectIDsNotification:(id)arg6;	// IMP=0x0000000000168d6c
- (_Bool)_adjustmentTimestampChangedChangedAttribute:(id)arg1 from:(id)arg2;	// IMP=0x0000000000168b90
- (void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(_Bool)arg2;	// IMP=0x0000000000168855
- (void)resetAllFetchingAlbums;	// IMP=0x00000000001686d6
- (void)_notifyALAssetsLibraryWithChanges:(id)arg1 usingObjectIDs:(_Bool)arg2;	// IMP=0x0000000000167214
- (id)pl_fetchObjectsWithIDs:(id)arg1;	// IMP=0x0000000000166b9c
- (id)pl_fetchObjectsWithIDs:(id)arg1 rootEntity:(id)arg2;	// IMP=0x00000000001669cc
- (void)recordNeedsBackgroundJobProcessing;	// IMP=0x00000000001669bb
- (_Bool)_tooManyAssetChangesToHandle:(unsigned long long)arg1;	// IMP=0x000000000016697a
- (void)updateTransactionAuthor;	// IMP=0x0000000000166860
- (_Bool)getAndClearSyncChangeMarker;	// IMP=0x000000000016681a
- (void)recordSyncChangeMarker;	// IMP=0x00000000001667fd
- (id)getAndClearRecordedObjectsForCloudDeletion;	// IMP=0x00000000001667b2
- (void)_addCloudUUID:(id)arg1 forDeletionType:(long long)arg2;	// IMP=0x0000000000166630
- (void)recordCloudDeletionForObject:(id)arg1;	// IMP=0x000000000016640a
- (id)getAndClearRecordedAvalancheUUIDsForUpdate;	// IMP=0x00000000001663bf
- (void)recordAvalancheUUIDForUpdate:(id)arg1;	// IMP=0x00000000001662a8
- (void)registerFilesystemDeletionInfo:(id)arg1;	// IMP=0x0000000000166219
- (_Bool)hasPreviouslyMergedDeleteForObject:(id)arg1;	// IMP=0x000000000016615f
- (void)_destroyDelayedSaveActions;	// IMP=0x000000000016613e
- (void)_createDelayedSaveActionsWithTransaction:(id)arg1;	// IMP=0x00000000001660d6
@property(readonly, nonatomic) PLDelayedSaveActions *delayedSaveActions;
- (void)getAndClearUpdatedObjectsAttributes:(id *)arg1 relationships:(id *)arg2;	// IMP=0x0000000000166018
- (void)_recordChangedKeys:(id)arg1 forObjectID:(id)arg2;	// IMP=0x0000000000165fe6
- (void)recordChangesFromTriggerModifiedObjectIDs:(id)arg1;	// IMP=0x0000000000165cfe
- (void)recordManagedObjectWillSave:(id)arg1;	// IMP=0x0000000000165b79
- (void)disconnectFromChangeHandling;	// IMP=0x0000000000165b46
- (void)connectToChangeHandling;	// IMP=0x0000000000165ada
- (double)lastResetTimestamp;	// IMP=0x0000000000165ac8
- (_Bool)pl_performWithOptions:(unsigned long long)arg1 andBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000165a63
- (void)setName:(id)arg1;	// IMP=0x0000000000165972
- (void)breakRetainCycles;	// IMP=0x000000000016586a
- (void)performWithOptions:(unsigned long long)arg1 andBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000001657bf
- (void)performBlockAndWait:(CDUnknownBlockType)arg1;	// IMP=0x0000000000165720
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000165681
- (void)refreshAllObjects;	// IMP=0x0000000000165630
- (void)reset;	// IMP=0x00000000001655df
- (_Bool)obtainPermanentIDsForObjects:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000165525
- (_Bool)save:(id *)arg1;	// IMP=0x0000000000165051
- (unsigned long long)countForFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000164f41
- (id)executeRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000164e3b
- (id)pl_executeFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000164c43
- (id)executeFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000164b4e
- (id)existingObjectWithID:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000164a48
- (void)invalidateWithReason:(id)arg1;	// IMP=0x0000000000164879
- (_Bool)isValidForSelector:(SEL)arg1 error:(id *)arg2;	// IMP=0x000000000016474c
- (id)libraryBundle;	// IMP=0x0000000000164689
- (id)pathManager;	// IMP=0x00000000001645f0
- (_Bool)isReadOnly;	// IMP=0x000000000016455b
- (void)withDispatchGroup:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000164494
- (id)storeUUID;	// IMP=0x00000000001643c9
- (_Bool)isDatabaseCreationContext;	// IMP=0x00000000001643c1
@property(readonly, nonatomic) _Bool isUserInterfaceContext;
@property(nonatomic) __weak id <PLManagedObjectContextPTPNotificationDelegate> ptpNotificationDelegate; // @synthesize ptpNotificationDelegate=_ptpNotificationDelegate;
@property(nonatomic) __weak PLPhotoLibrary *photoLibrary;
- (void)dealloc;	// IMP=0x0000000000164085
- (id)initWithConcurrencyType:(unsigned long long)arg1 pathManager:(id)arg2 changeHandlingContainer:(id)arg3 coordinator:(id)arg4;	// IMP=0x0000000000163d9d
- (id)initWithConcurrencyType:(unsigned long long)arg1 libraryBundle:(id)arg2;	// IMP=0x0000000000163caf

@end

