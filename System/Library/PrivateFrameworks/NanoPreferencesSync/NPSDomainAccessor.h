//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NPSDomainAccessorInternal, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface NPSDomainAccessor : NSObject
{
    _Bool _initializedWithActiveDevice;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_externalQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_invalidationQueue;	// 24 = 0x18
    NPSDomainAccessorInternal *_internalAccessor;	// 32 = 0x20
}

+ (id)copyDomainListForPairingID:(id)arg1 pairingDataStore:(id)arg2;	// IMP=0x000000000000502d
+ (id)copyDomainList;	// IMP=0x0000000000004ec1
+ (void)resolveActivePairedDevicePairingID:(id *)arg1 pairingDataStore:(id *)arg2;	// IMP=0x0000000000002747
+ (void)initialize;	// IMP=0x000000000000273d
- (void).cxx_destruct;	// IMP=0x0000000000005255
@property(nonatomic) _Bool initializedWithActiveDevice; // @synthesize initializedWithActiveDevice=_initializedWithActiveDevice;
@property(retain, nonatomic) NPSDomainAccessorInternal *internalAccessor; // @synthesize internalAccessor=_internalAccessor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *invalidationQueue; // @synthesize invalidationQueue=_invalidationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *externalQueue; // @synthesize externalQueue=_externalQueue;
- (_Bool)requiresDeviceUnlockedSinceBoot;	// IMP=0x00000000000051b8
- (unsigned long long)domainSize;	// IMP=0x0000000000005174
- (id)copyKeyList;	// IMP=0x0000000000004e7d
- (id)dictionaryRepresentation;	// IMP=0x0000000000004e2d
- (void)setURL:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000004da7
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000004d2f
- (void)setDouble:(double)arg1 forKey:(id)arg2;	// IMP=0x0000000000004cb3
- (void)setFloat:(float)arg1 forKey:(id)arg2;	// IMP=0x0000000000004c37
- (void)setInteger:(long long)arg1 forKey:(id)arg2;	// IMP=0x0000000000004bbf
- (_Bool)boolForKey:(id)arg1 keyExistsAndHasValidFormat:(_Bool *)arg2;	// IMP=0x0000000000004b42
- (double)doubleForKey:(id)arg1 keyExistsAndHasValidFormat:(_Bool *)arg2;	// IMP=0x0000000000004ac1
- (float)floatForKey:(id)arg1 keyExistsAndHasValidFormat:(_Bool *)arg2;	// IMP=0x0000000000004a40
- (long long)longForKey:(id)arg1 keyExistsAndHasValidFormat:(_Bool *)arg2;	// IMP=0x00000000000049c3
- (long long)integerForKey:(id)arg1 keyExistsAndHasValidFormat:(_Bool *)arg2;	// IMP=0x0000000000004946
- (id)URLForKey:(id)arg1;	// IMP=0x00000000000048c3
- (_Bool)boolForKey:(id)arg1;	// IMP=0x000000000000484c
- (double)doubleForKey:(id)arg1;	// IMP=0x00000000000047d1
- (float)floatForKey:(id)arg1;	// IMP=0x0000000000004756
- (long long)longForKey:(id)arg1;	// IMP=0x00000000000046df
- (long long)integerForKey:(id)arg1;	// IMP=0x0000000000004668
- (id)stringArrayForKey:(id)arg1;	// IMP=0x00000000000045e5
- (id)dataForKey:(id)arg1;	// IMP=0x0000000000004562
- (id)dictionaryForKey:(id)arg1;	// IMP=0x00000000000044df
- (id)arrayForKey:(id)arg1;	// IMP=0x000000000000445c
- (id)stringForKey:(id)arg1;	// IMP=0x00000000000043d9
- (void)removeObjectForKey:(id)arg1;	// IMP=0x0000000000004367
- (void)setObject:(id)arg1 forKey:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000004145
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000040bf
- (void)objectForKey:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000003de1
- (id)objectForKey:(id)arg1;	// IMP=0x0000000000003d5e
- (void)synchronizeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000003ad6
- (id)synchronize;	// IMP=0x0000000000003a86
- (void)invalidate;	// IMP=0x0000000000003882
- (void)dealloc;	// IMP=0x00000000000037c8
- (id)shouldNotDoWork;	// IMP=0x0000000000003457
- (_Bool)activeDeviceChanged;	// IMP=0x00000000000032e8
- (id)initWithInternalDomainAccessor:(id)arg1 queue:(id)arg2;	// IMP=0x00000000000030ef
- (id)initWithDomain:(id)arg1 queue:(id)arg2 pairingID:(id)arg3 pairingDataStore:(id)arg4;	// IMP=0x0000000000002e94
- (id)initWithDomain:(id)arg1 pairingID:(id)arg2 pairingDataStore:(id)arg3;	// IMP=0x0000000000002e7a
- (id)initWithDomain:(id)arg1 pairedDevice:(id)arg2;	// IMP=0x0000000000002db0
- (id)initWithDomain:(id)arg1 queue:(id)arg2;	// IMP=0x0000000000002bb9
- (id)initWithDomain:(id)arg1;	// IMP=0x0000000000002af4
- (id)queue;	// IMP=0x0000000000002ae6
@property(readonly, nonatomic) NSUUID *pairingID;
@property(readonly, nonatomic) NSString *domain;

@end

