//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Foundation/NSCopying-Protocol.h>
#import <Foundation/NSItemProviderReading-Protocol.h>
#import <Foundation/NSItemProviderWriting-Protocol.h>
#import <Foundation/NSMutableCopying-Protocol.h>
#import <Foundation/NSSecureCoding-Protocol.h>

@class NSArray, NSAttributedString;

@interface NSString : NSObject <NSItemProviderReading, NSItemProviderWriting, NSCopying, NSMutableCopying, NSSecureCoding>
{
}

+ (_Bool)_subclassesMustBeExplicitlyMentionedWhenDecoded;	// IMP=0x000000000013fab6
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000013f67f
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x0000000000139255
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000139212
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x00000000001391cf
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000013918c
+ (id)stringWithContentsOfURL:(id)arg1;	// IMP=0x000000000013915d
+ (id)stringWithContentsOfFile:(id)arg1;	// IMP=0x000000000013912e
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;	// IMP=0x000000000013907e
+ (id)stringWithFormat:(id)arg1;	// IMP=0x0000000000138fb0
+ (id)stringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000138ed7
+ (id)localizedStringWithFormat:(id)arg1;	// IMP=0x0000000000138deb
+ (id)localizedStringWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000138cee
+ (id)stringWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;	// IMP=0x0000000000138c51
+ (id)stringWithUTF8String:(const char *)arg1;	// IMP=0x0000000000138ba3
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;	// IMP=0x0000000000138af6
+ (id)stringWithCString:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000138ac2
+ (id)stringWithCString:(const char *)arg1;	// IMP=0x0000000000138a3a
+ (id)stringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000138a06
+ (id)stringWithString:(id)arg1;	// IMP=0x00000000001389d7
+ (id)string;	// IMP=0x00000000001389b5
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000013898e
+ (void)initialize;	// IMP=0x00000000001388cb
+ (id)pathWithComponents:(id)arg1;	// IMP=0x00000000000f3a70
+ (id)_newZStringWithUTF8String:(const char *)arg1;	// IMP=0x00000000000fcf0d
+ (id)_newZStringWithString:(id)arg1;	// IMP=0x00000000000fcedf
+ (id)_newZStringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000000fceac
+ (unsigned long long)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id *)arg3 usedLossyConversion:(_Bool *)arg4;	// IMP=0x00000000001117c8
+ (id)writableTypeIdentifiersForItemProvider;	// IMP=0x0000000000135154
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000134ee7
+ (id)_newStringFromUTF16InternalData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000134d9e
+ (id)readableTypeIdentifiersForItemProvider;	// IMP=0x0000000000134d1a
+ (id)localizedNameOfStringEncoding:(unsigned long long)arg1;	// IMP=0x0000000000142990
+ (const unsigned long long *)availableStringEncodings;	// IMP=0x0000000000142907
+ (unsigned long long)defaultCStringEncoding;	// IMP=0x0000000000141680
+ (id)_web_stringRepresentationForBytes:(long long)arg1;	// IMP=0x00000000001437f0
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000013f90f
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000013f687
- (_Bool)_allowsDirectEncoding;	// IMP=0x000000000013f677
- (Class)classForCoder;	// IMP=0x000000000013f66a
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(struct __va_list_tag [1])arg3;	// IMP=0x000000000013f652
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 deallocator:(CDUnknownBlockType)arg4;	// IMP=0x000000000013f63a
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(_Bool)arg4;	// IMP=0x000000000013f622
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x000000000013f60a
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3;	// IMP=0x000000000013f5f2
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;	// IMP=0x000000000013f5da
- (id)initWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x000000000013f5c3
- (id)initWithValidatedFormat:(id)arg1 validFormatSpecifiers:(id)arg2 locale:(id)arg3 arguments:(struct __va_list_tag [1])arg4 error:(id *)arg5;	// IMP=0x000000000013f5b1
- (id)initWithFormat:(id)arg1 locale:(id)arg2;	// IMP=0x000000000013f510
- (id)initWithFormat:(id)arg1;	// IMP=0x000000000013f469
- (id)initWithData:(id)arg1 usedEncoding:(unsigned long long *)arg2;	// IMP=0x000000000013f402
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x000000000013f28e
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;	// IMP=0x000000000013f067
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000013ef67
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000000013ed54
- (id)initWithContentsOfURL:(id)arg1;	// IMP=0x000000000013ecf4
- (id)initWithContentsOfFile:(id)arg1;	// IMP=0x000000000013ec94
- (id)_initWithDataOfUnknownEncoding:(id)arg1;	// IMP=0x000000000013ebca
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned long long)arg2 copy:(_Bool)arg3 usedEncoding:(unsigned long long *)arg4;	// IMP=0x000000000013eb1a
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;	// IMP=0x000000000013eab9
- (id)initWithString:(id)arg1;	// IMP=0x000000000013e9d1
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;	// IMP=0x000000000013e93c
- (id)initWithUTF8String:(const char *)arg1;	// IMP=0x000000000013e875
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;	// IMP=0x000000000013e7da
- (id)initWithCString:(const char *)arg1;	// IMP=0x000000000013e722
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x000000000013e6cf
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x000000000013e616
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;	// IMP=0x000000000013e5cf
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x000000000013e5ba
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x000000000013e466
- (_Bool)getExternalRepresentation:(id *)arg1 extendedAttributes:(id *)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id *)arg5;	// IMP=0x000000000013e287
- (id)displayableString;	// IMP=0x000000000013dbae
- (void)enumerateLinesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000013db03
- (void)enumerateSubstringsInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000013cd2b
- (struct _NSRange)paragraphRangeForRange:(struct _NSRange)arg1;	// IMP=0x000000000013ccb5
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;	// IMP=0x000000000013cc3f
- (void)getParagraphStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;	// IMP=0x000000000013cc2a
- (void)getLineStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;	// IMP=0x000000000013cc12
- (void)_getBlockStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4 stopAtLineSeparators:(_Bool)arg5;	// IMP=0x000000000013c369
- (id)stringByApplyingTransform:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000000013c301
- (id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2;	// IMP=0x000000000013c2b0
- (id)precomposedStringWithCompatibilityMapping;	// IMP=0x000000000013c26e
- (id)decomposedStringWithCompatibilityMapping;	// IMP=0x000000000013c22c
- (id)precomposedStringWithCanonicalMapping;	// IMP=0x000000000013c1ea
- (id)decomposedStringWithCanonicalMapping;	// IMP=0x000000000013c1ab
- (id)capitalizedStringWithLocale:(id)arg1;	// IMP=0x000000000013c15f
- (id)lowercaseStringWithLocale:(id)arg1;	// IMP=0x000000000013c113
- (id)uppercaseStringWithLocale:(id)arg1;	// IMP=0x000000000013c0c7
- (id)localizedCapitalizedString;	// IMP=0x000000000013c08f
- (id)localizedLowercaseString;	// IMP=0x000000000013c057
- (id)localizedUppercaseString;	// IMP=0x000000000013c01f
- (id)capitalizedString;	// IMP=0x000000000013c00b
- (id)lowercaseString;	// IMP=0x000000000013bff7
- (id)uppercaseString;	// IMP=0x000000000013bfe3
- (_Bool)boolValue;	// IMP=0x000000000013bc75
- (long long)integerValue;	// IMP=0x000000000013bc63
- (long long)longLongValue;	// IMP=0x000000000013bbe0
- (int)intValue;	// IMP=0x000000000013bb5b
- (float)floatValue;	// IMP=0x000000000013bad7
- (double)doubleValue;	// IMP=0x000000000013ba53
- (id)stringByAppendingFormat:(id)arg1;	// IMP=0x000000000013b95b
- (id)stringByAppendingString:(id)arg1;	// IMP=0x000000000013b86d
- (id)substringToIndex:(unsigned long long)arg1;	// IMP=0x000000000013b7bf
- (id)substringFromIndex:(unsigned long long)arg1;	// IMP=0x000000000013b710
- (id)substringWithRange:(struct _NSRange)arg1;	// IMP=0x000000000013b631
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;	// IMP=0x000000000013b505
- (void)getCharacters:(unsigned short *)arg1;	// IMP=0x000000000013b4c3
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;	// IMP=0x000000000013b469
- (id)stringByReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;	// IMP=0x000000000013b3b8
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;	// IMP=0x000000000013b335
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;	// IMP=0x000000000013b221
- (id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;	// IMP=0x000000000013b0b9
- (id)stringByTrimmingCharactersInSet:(id)arg1;	// IMP=0x000000000013ac45
- (struct _NSRange)localizedStandardRangeOfString:(id)arg1;	// IMP=0x000000000013abdf
- (_Bool)localizedStandardContainsString:(id)arg1;	// IMP=0x000000000013ab69
- (_Bool)localizedCaseInsensitiveContainsString:(id)arg1;	// IMP=0x000000000013aaf3
- (_Bool)containsString:(id)arg1;	// IMP=0x000000000013aa97
- (_Bool)localizedHasSuffix:(id)arg1;	// IMP=0x000000000013aa21
- (_Bool)localizedHasPrefix:(id)arg1;	// IMP=0x000000000013a9ab
- (_Bool)hasSuffix:(id)arg1;	// IMP=0x000000000013a954
- (_Bool)hasPrefix:(id)arg1;	// IMP=0x000000000013a8fd
- (id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000013a628
- (id)componentsSeparatedByCharactersInSet:(id)arg1;	// IMP=0x000000000013a48e
- (id)componentsSeparatedByString:(id)arg1;	// IMP=0x000000000013a2f4
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1;	// IMP=0x000000000013a2af
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000013a267
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x000000000013a0ad
- (struct _NSRange)rangeOfString:(id)arg1;	// IMP=0x000000000013a061
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000013a00a
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x0000000000139fe7
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x0000000000139d9c
- (struct _NSRange)rangeOfComposedCharacterSequencesForRange:(struct _NSRange)arg1;	// IMP=0x0000000000139d16
- (struct _NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1;	// IMP=0x0000000000139c98
- (long long)localizedStandardCompare:(id)arg1;	// IMP=0x0000000000139c32
- (long long)localizedCaseInsensitiveCompare:(id)arg1;	// IMP=0x0000000000139bcc
- (long long)localizedCompare:(id)arg1;	// IMP=0x0000000000139b69
- (long long)caseInsensitiveCompare:(id)arg1;	// IMP=0x0000000000139b21
- (long long)compare:(id)arg1;	// IMP=0x0000000000139ad4
- (long long)compare:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000139a84
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x00000000001399db
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;	// IMP=0x00000000001399b0
- (_Bool)isEqualToString:(id)arg1;	// IMP=0x000000000013995b
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000139911
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001398d9
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001398a1
@property(readonly, copy) NSString *description;
- (id)quotedStringRepresentation;	// IMP=0x00000000001394e5
- (id)_stringRepresentation;	// IMP=0x00000000001392c3
- (_Bool)_isCString;	// IMP=0x00000000001392a8
- (const char *)_fastCStringContents:(_Bool)arg1;	// IMP=0x00000000001392a0
- (const unsigned short *)_fastCharacterContents;	// IMP=0x0000000000139298
- (id)init;	// IMP=0x00000000001389ac
- (unsigned short)characterAtIndex:(unsigned long long)arg1;	// IMP=0x000000000013897a
@property(readonly) unsigned long long length;
- (id)_widthVariants;	// IMP=0x0000000000015c79
- (id)variantFittingPresentationWidth:(long long)arg1;	// IMP=0x0000000000015c66
@property(readonly, nonatomic) NSAttributedString *__baseAttributedString;
- (_Bool)_getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned int)arg3;	// IMP=0x000000000001c8f4
- (unsigned int)_fastestEncodingInCFStringEncoding;	// IMP=0x000000000001c8da
- (unsigned int)_smallestEncodingInCFStringEncoding;	// IMP=0x000000000001c8c0
- (unsigned char)_encodingCantBeStoredInEightBitCFString;	// IMP=0x000000000001c87e
- (id)_createSubstringWithRange:(struct _NSRange)arg1;	// IMP=0x000000000001c726
- (unsigned long long)_cfTypeID;	// IMP=0x000000000001c71c
- (CDStruct_5fe7aead)decimalValue;	// IMP=0x000000000004dd17
- (_Bool)_getBytesAsData:(id *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x0000000000053a70
- (id)_getCharactersAsStringInRange:(struct _NSRange)arg1;	// IMP=0x0000000000053a5e
- (id)__escapeString5991;	// IMP=0x00000000000d4899
- (id)stringByConvertingURLToPath;	// IMP=0x00000000000f605d
- (id)stringByConvertingPathToURL;	// IMP=0x00000000000f602b
- (unsigned long long)completePathIntoString:(id *)arg1 caseSensitive:(_Bool)arg2 matchesIntoArray:(id *)arg3 filterTypes:(id)arg4;	// IMP=0x00000000000f4db7
- (_Bool)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;	// IMP=0x00000000000f4d6b
- (const char *)fileSystemRepresentation;	// IMP=0x00000000000f4d33
- (id)stringsByAppendingPaths:(id)arg1;	// IMP=0x00000000000f4bae
- (id)stringByResolvingSymlinksInPath;	// IMP=0x00000000000f4b9a
- (id)_stringByResolvingSymlinksInPathUsingCache:(_Bool)arg1;	// IMP=0x00000000000f4ab4
- (id)stringByStandardizingPath;	// IMP=0x00000000000f4aa0
- (id)_stringByStandardizingPathUsingCache:(_Bool)arg1;	// IMP=0x00000000000f49c9
- (id)stringByExpandingTildeInPath;	// IMP=0x00000000000f48c9
- (id)stringByAbbreviatingWithTildeInPath;	// IMP=0x00000000000f475e
- (id)stringByAppendingPathExtension:(id)arg1;	// IMP=0x00000000000f4474
- (id)stringByDeletingPathExtension;	// IMP=0x00000000000f4325
- (id)pathExtension;	// IMP=0x00000000000f41c0
- (id)stringByAppendingPathComponent:(id)arg1;	// IMP=0x00000000000f3ed6
- (id)stringByDeletingLastPathComponent;	// IMP=0x00000000000f3d6d
- (id)lastPathComponent;	// IMP=0x00000000000f3bfe
- (_Bool)isAbsolutePath;	// IMP=0x00000000000f3b5f
- (id)pathComponents;	// IMP=0x00000000000f3a89
- (_Bool)isNSString__;	// IMP=0x0000000000107df7
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000135285
@property(readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
- (id)propertyListFromStringsFileFormat;	// IMP=0x0000000000140a77
- (id)propertyList;	// IMP=0x0000000000140949
- (id)formatConfiguration;	// IMP=0x00000000001414cf
- (id)_copyFormatStringWithConfiguration:(id)arg1;	// IMP=0x000000000014146e
- (_Bool)getBytes:(char *)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(_Bool)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x0000000000142412
- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;	// IMP=0x000000000014228b
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;	// IMP=0x00000000001421b2
- (unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1;	// IMP=0x0000000000142129
- (_Bool)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;	// IMP=0x0000000000142046
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;	// IMP=0x0000000000142032
- (id)dataUsingEncoding:(unsigned long long)arg1;	// IMP=0x000000000014201e
- (id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(_Bool)arg2;	// IMP=0x0000000000141dec
- (_Bool)canBeConvertedToEncoding:(unsigned long long)arg1;	// IMP=0x0000000000141d1d
- (unsigned long long)smallestEncoding;	// IMP=0x0000000000141cae
- (unsigned long long)fastestEncoding;	// IMP=0x0000000000141ca3
- (const char *)lossyCString;	// IMP=0x0000000000141c68
- (unsigned long long)cStringLength;	// IMP=0x0000000000141ba5
- (const char *)cString;	// IMP=0x0000000000141b67
- (const char *)UTF8String;	// IMP=0x00000000001418d0
- (void)getCString:(char *)arg1;	// IMP=0x0000000000141868
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;	// IMP=0x0000000000141811
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;	// IMP=0x000000000014169c
- (unsigned int)_web_extractFourCharCode;	// IMP=0x0000000000143cd8
- (id)_web_filenameByFixingIllegalCharacters;	// IMP=0x0000000000143b63
- (id)_web_stringByCollapsingNonPrintingCharacters;	// IMP=0x0000000000143980
- (id)_web_URLFragment;	// IMP=0x000000000014379d
- (_Bool)_web_isFileURL;	// IMP=0x0000000000143784
- (_Bool)_web_looksLikeAbsoluteURL;	// IMP=0x000000000014374b
- (struct _NSRange)_web_rangeOfURLHost;	// IMP=0x0000000000143692
- (struct _NSRange)_web_rangeOfURLUserPasswordHostPort;	// IMP=0x00000000001435ec
- (id)_web_fixedCarbonPOSIXPath;	// IMP=0x0000000000143469
- (id)_web_stringByExpandingTildeInPath;	// IMP=0x00000000001433ea
- (id)_web_stringByTrimmingWhitespace;	// IMP=0x00000000001432f7
- (id)_web_domainFromHost;	// IMP=0x00000000001431b7
- (_Bool)_web_domainMatches:(id)arg1;	// IMP=0x00000000001430e0
- (_Bool)_web_hasCountryCodeTLD;	// IMP=0x0000000000143079
- (_Bool)_web_looksLikeIPAddress;	// IMP=0x0000000000142f60
- (long long)_web_countOfString:(id)arg1;	// IMP=0x0000000000142ec5
- (_Bool)_web_hasCaseInsensitivePrefix:(id)arg1;	// IMP=0x0000000000142e9d
- (_Bool)_web_isCaseInsensitiveEqualToString:(id)arg1;	// IMP=0x0000000000142e7f
- (_Bool)_web_isJavaScriptURL;	// IMP=0x0000000000144ac7
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;	// IMP=0x0000000000144926
- (id)_web_fileNameFromContentDispositionHeader_nowarn;	// IMP=0x00000000001447a1
- (id)_web_characterSetFromContentTypeHeader_nowarn;	// IMP=0x00000000001446e1
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;	// IMP=0x0000000000144338
- (struct _NSRange)_web_rangeOfURLResourceSpecifier_nowarn;	// IMP=0x00000000001442e7
- (struct _NSRange)_web_rangeOfURLScheme_nowarn;	// IMP=0x0000000000144225
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(_Bool)arg1;	// IMP=0x0000000000143fec
- (id)_web_parseAsKeyValuePair_nowarn;	// IMP=0x0000000000143fd8
- (id)_web_splitAtNonDateCommas_nowarn;	// IMP=0x0000000000143da2
- (id)stringByAddingPercentEscapes;	// IMP=0x00000000001546fc
- (id)stringByRemovingPercentEscapes;	// IMP=0x00000000001546de
- (id)standardizedURLPath;	// IMP=0x00000000001542df
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1;	// IMP=0x0000000000154810
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1;	// IMP=0x0000000000154797
@property(readonly, copy) NSString *stringByRemovingPercentEncoding;
- (id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1;	// IMP=0x0000000000154759
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;	// IMP=0x0000000000160e77
- (id)_web_HTTPStyleLanguageCode;	// IMP=0x0000000000160d7b
- (void)enumerateLinguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000000001ae7e4
- (id)linguisticTagsInRange:(struct _NSRange)arg1 scheme:(id)arg2 options:(unsigned long long)arg3 orthography:(id)arg4 tokenRanges:(id *)arg5;	// IMP=0x00000000001ae708
- (void)_flushRegularExpressionCaches;	// IMP=0x00000000001b6c18
- (id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;	// IMP=0x00000000001b6ae2
- (struct _NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;	// IMP=0x00000000001b6998
- (struct _NSRange)significantText;	// IMP=0x00000000001c2340
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00000000001c8a22

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

