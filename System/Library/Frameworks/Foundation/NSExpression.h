//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Foundation/NSCopying-Protocol.h>
#import <Foundation/NSSecureCoding-Protocol.h>

@class NSArray, NSPredicate, NSString;

@interface NSExpression : NSObject <NSSecureCoding, NSCopying>
{
    struct _expressionFlags {
        unsigned int _evaluationBlocked:1;
        unsigned int _usesKVC:1;
        unsigned int _validatedExpression:1;
        unsigned int _validatedKeys:1;
        unsigned int _reservedExpressionFlags:28;
    } _expressionFlags;	// 8 = 0x8
    unsigned int reserved;	// 12 = 0xc
    unsigned long long _expressionType;	// 16 = 0x10
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000005b1be
+ (id)expressionForAnyKey;	// IMP=0x000000000005b145
+ (id)expressionForBlock:(CDUnknownBlockType)arg1 arguments:(id)arg2;	// IMP=0x000000000005b105
+ (id)expressionForMinusSet:(id)arg1 with:(id)arg2;	// IMP=0x000000000005b0c5
+ (id)expressionForIntersectSet:(id)arg1 with:(id)arg2;	// IMP=0x000000000005b085
+ (id)expressionForUnionSet:(id)arg1 with:(id)arg2;	// IMP=0x000000000005b045
+ (id)expressionForFunction:(id)arg1 arguments:(id)arg2;	// IMP=0x000000000005aeb8
+ (id)expressionForKeyPath:(id)arg1;	// IMP=0x000000000005ae67
+ (id)_newKeyPathExpressionForString:(id)arg1;	// IMP=0x000000000005ae39
+ (id)expressionForConditional:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;	// IMP=0x000000000005ae27
+ (id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;	// IMP=0x000000000005addd
+ (id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2;	// IMP=0x000000000005ada2
+ (id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;	// IMP=0x000000000005ad58
+ (id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;	// IMP=0x000000000005ad0e
+ (id)expressionForAggregate:(id)arg1;	// IMP=0x000000000005acd8
+ (id)expressionForSymbolicString:(id)arg1;	// IMP=0x000000000005aca2
+ (id)expressionForVariable:(id)arg1;	// IMP=0x000000000005ac6c
+ (id)expressionForEvaluatedObject;	// IMP=0x000000000005ac53
+ (id)expressionForConstantValue:(id)arg1;	// IMP=0x000000000005ac1d
+ (id)expressionWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x000000000005abc5
+ (id)expressionWithFormat:(id)arg1;	// IMP=0x000000000005ab21
+ (id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2;	// IMP=0x000000000005aac9
- (id)_expressionWithSubstitutionVariables:(id)arg1;	// IMP=0x000000000005b69f
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;	// IMP=0x000000000005b67d
- (_Bool)_shouldUseParensWithDescription;	// IMP=0x000000000005b675
@property(readonly, copy) CDUnknownBlockType expressionBlock;
@property(readonly, copy) NSExpression *falseExpression;
@property(readonly, copy) NSExpression *trueExpression;
- (id)subexpression;	// IMP=0x000000000005b5bd
@property(readonly, retain) id collection;
@property(readonly, copy) NSPredicate *predicate;
@property(readonly, copy) NSExpression *rightExpression;
@property(readonly, copy) NSExpression *leftExpression;
@property(readonly, copy) NSArray *arguments;
- (SEL)selector;	// IMP=0x000000000005b4a8
@property(readonly, copy) NSExpression *operand;
@property(readonly, copy) NSString *function;
@property(readonly, copy) NSString *variable;
@property(readonly, retain) id constantValue;
@property(readonly, copy) NSString *keyPath;
@property(readonly) unsigned long long expressionType;
- (id)predicateFormat;	// IMP=0x000000000005b38a
- (id)description;	// IMP=0x000000000005b378
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;	// IMP=0x000000000005b34a
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000005b31c
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000005b268
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000005b1dd
- (void)allowEvaluation;	// IMP=0x000000000005b1d3
- (_Bool)_allowsEvaluation;	// IMP=0x000000000005b1c6
- (id)initWithExpressionType:(unsigned long long)arg1;	// IMP=0x000000000005b15e

@end

