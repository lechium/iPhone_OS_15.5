//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AXObjectCache;

struct ApplicationStateTracker;

struct ArcData {
    struct FloatPoint start;
    struct FloatPoint center;
    float radius;
    float startAngle;
    float endAngle;
    _Bool clockwise;
    unsigned char type;
};

struct ArrayBuffer;

struct ArrayBufferView;

struct AuthenticationExtensionsClientInputs {
    struct String _field1;
    _Bool _field2;
};

struct AuthenticatorSelectionCriteria {
    struct optional<WebCore::AuthenticatorAttachment> _field1;
    _Bool _field2;
    int _field3;
};

struct BackForwardListItemState;

struct BackForwardListState {
    struct Vector<WebKit::BackForwardListItemState, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> items;
    optional_488f82df currentIndex;
};

struct BezierCurveData {
    struct FloatPoint startPoint;
    struct FloatPoint controlPoint1;
    struct FloatPoint controlPoint2;
    struct FloatPoint endPoint;
};

struct BlockPtr<void ()> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (NSArray<UIDragItem *>*)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentAuthorizationResult *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentMerchantSession *, NSError *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentRequestCouponCodeUpdate *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentRequestPaymentMethodUpdate *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentRequestShippingContactUpdate *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (PKPaymentRequestShippingMethodUpdate *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (UIPointerRegion *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (UIWKAutocorrectionContext *)> {
    CDUnknownBlockType m_block;
};

struct BlockPtr<void (WebEvent *, bool)> {
    CDUnknownBlockType m_block;
};

struct BufferSource {
    struct variant<WTF::RefPtr<JSC::ArrayBufferView>, WTF::RefPtr<JSC::ArrayBuffer>> _field1;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CString {
    struct RefPtr<WTF::CStringBuffer, WTF::RawPtrTraits<WTF::CStringBuffer>, WTF::DefaultRefDerefTraits<WTF::CStringBuffer>> m_buffer;
};

struct CStringBuffer;

struct Color {
    unsigned long long m_colorAndFlags;
};

struct CommonHeader;

struct CompletionHandler<void ()> {
    struct Function<void ()> m_function;
};

struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> {
    struct Function<void (WebCore::DOMPasteAccessResponse)> m_function;
};

struct CompletionHandler<void (bool)> {
    struct Function<void (bool)> m_function;
};

struct CompletionHandler<void (std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&)> {
    struct Function<void (std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&)> m_function;
};

struct CompletionHandler<void (std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&)> {
    struct Function<void (std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&)> m_function;
};

struct CompletionHandler<void (unsigned long long)> {
    struct Function<void (unsigned long long)> m_function;
};

struct ContactInfo {
    Vector_07070297 _field1;
    Vector_07070297 _field2;
    Vector_07070297 _field3;
};

struct Cursor {
    int m_type;
    struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> m_image;
    struct IntPoint m_hotSpot;
    void *m_platformCursor;
};

struct Data {
    struct MonotonicTime timestamp;
    struct FloatPoint position;
    double scale;
};

struct DataListSuggestion;

struct Deque<GeolocationRequestData, 0UL> {
    unsigned long long m_start;
    unsigned long long m_end;
    struct VectorBuffer<GeolocationRequestData, 0UL, WTF::FastMalloc> m_buffer;
};

struct Dictionary;

struct Document;

struct DocumentParserYieldToken;

struct DragData {
    struct IntPoint _field1;
    struct IntPoint _field2;
    void *_field3;
    struct OptionSet<WebCore::DragOperation> _field4;
    struct OptionSet<WebCore::DragApplicationFlags> _field5;
    Vector_07070297 _field6;
    struct OptionSet<WebCore::DragDestinationAction> _field7;
    struct optional<WTF::ObjectIdentifier<WebCore::PageIdentifierType>> _field8;
    struct String _field9;
};

struct DragDropInteractionState {
    struct CGPoint m_lastGlobalPosition;
    struct CGPoint m_adjustedPositionForDragEnd;
    _Bool m_didBeginDragging;
    _Bool m_isPerformingDrop;
    struct RetainPtr<id<UIDragSession>> m_dragSession;
    struct RetainPtr<id<UIDropSession>> m_dropSession;
    struct BlockPtr<void ()> m_dragStartCompletionBlock;
    struct BlockPtr<void ()> m_dragCancelSetDownBlock;
    struct BlockPtr<void (NSArray<UIDragItem *>*)> m_addDragItemCompletionBlock;
    struct optional<WebKit::DragSourceState> m_stagedDragSource;
    struct Vector<WebKit::DragSourceState, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> m_activeDragSources;
    struct Vector<WebKit::ItemAndPreviewProvider, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> m_delayedItemPreviewProviders;
    struct Vector<WebKit::ItemAndPreview, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> m_defaultDropPreviews;
};

struct DragSourceState {
    OptionSet_401d6bae action;
    struct CGPoint adjustedOrigin;
    struct CGRect dragPreviewFrameInRootViewCoordinates;
    RetainPtr_337fe565 image;
    optional_99ee4799 indicatorData;
    struct optional<WebCore::Path> visiblePath;
    struct String linkTitle;
    struct URL linkURL;
    _Bool possiblyNeedsDragPreviewUpdate;
    long long itemIdentifier;
};

struct DrawingAreaProxy;

struct EditingRange {
    unsigned long long location;
    unsigned long long length;
};

struct ElementContext {
    struct FloatRect boundingRect;
    ObjectIdentifier_8136369e webPageIdentifier;
    struct ProcessQualified<WTF::ObjectIdentifier<WebCore::ScriptExecutionContextIdentifierType>> documentIdentifier;
    struct ObjectIdentifier<WebCore::ElementIdentifierType> elementIdentifier;
};

struct FloatPoint {
    float m_x;
    float m_y;
};

struct FloatQuad {
    struct FloatPoint m_p1;
    struct FloatPoint m_p2;
    struct FloatPoint m_p3;
    struct FloatPoint m_p4;
};

struct FloatRect {
    struct FloatPoint m_location;
    struct FloatSize m_size;
};

struct FloatSize {
    _Bool hasIntrinsicWidth;
    _Bool hasIntrinsicHeight;
    float m_width;
    float m_height;
};

struct FocusedElementInformation {
    struct IntRect interactionRect;
    struct ElementContext elementContext;
    struct IntPoint lastInteractionLocation;
    double minimumScaleFactor;
    double maximumScaleFactor;
    double maximumScaleFactorIgnoringAlwaysScalable;
    double nodeFontSize;
    _Bool hasNextNode;
    struct IntRect nextNodeRect;
    _Bool hasPreviousNode;
    struct IntRect previousNodeRect;
    _Bool isAutocorrect;
    _Bool isRTL;
    _Bool isMultiSelect;
    _Bool isReadOnly;
    _Bool allowsUserScaling;
    _Bool allowsUserScalingIgnoringAlwaysScalable;
    _Bool insideFixedPosition;
    unsigned char autocapitalizeType;
    int elementType;
    unsigned char inputMode;
    unsigned char enterKeyHint;
    struct String formAction;
    struct Vector<WebKit::OptionItem, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> selectOptions;
    int selectedIndex;
    struct String value;
    double valueAsNumber;
    struct String title;
    _Bool acceptsAutofilledLoginCredentials;
    _Bool isAutofillableUsernameField;
    struct URL representingPageURL;
    int autofillFieldName;
    struct String placeholder;
    struct String label;
    struct String ariaLabel;
    _Bool hasSuggestions;
    _Bool isFocusingWithDataListDropdown;
    struct Color colorValue;
    struct Vector<WebCore::Color, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> suggestedColors;
    _Bool shouldSynthesizeKeyEventsForEditing;
    _Bool isSpellCheckingEnabled;
    _Bool shouldAvoidResizingWhenInputViewBoundsChange;
    _Bool shouldAvoidScrollingWhenFocusedContentIsVisible;
    _Bool shouldUseLegacySelectPopoverDismissalBehaviorInDataActivation;
    _Bool isFocusingWithValidationMessage;
    _Bool preventScroll;
    struct MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType> identifier;
    unsigned long long containerScrollingNodeID;
};

struct FormData;

struct FrameInfoData {
    _Bool isMainFrame;
    struct ResourceRequest request;
    struct SecurityOriginData securityOrigin;
    struct String frameName;
    struct optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>> frameID;
    struct optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>> parentFrameID;
};

struct FullscreenTouchSecheuristic {
    double m_weight;
    struct FullscreenTouchSecheuristicParameters m_parameters;
    struct CGSize m_size;
    struct Seconds m_lastTouchTime;
    struct CGPoint m_lastTouchLocation;
    double m_lastScore;
};

struct FullscreenTouchSecheuristicParameters {
    struct Seconds rampUpSpeed;
    struct Seconds rampDownSpeed;
    double xWeight;
    double yWeight;
    double gamma;
    double gammaCutoff;
    double requiredScore;
};

struct Function<void ()> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::default_delete<WTF::Detail::CallableWrapperBase<void>>> m_callableWrapper;
};

struct Function<void (NSArray<_WKFileUploadItem *>*)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>, std::default_delete<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>>> m_callableWrapper;
};

struct Function<void (WebCore::DOMPasteAccessResponse)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>>> m_callableWrapper;
};

struct Function<void (bool)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, bool>, std::default_delete<WTF::Detail::CallableWrapperBase<void, bool>>> m_callableWrapper;
};

struct Function<void (std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>>> m_callableWrapper;
};

struct Function<void (std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>>> m_callableWrapper;
};

struct Function<void (unsigned long long)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long>>> m_callableWrapper;
};

struct GeolocationRequestData;

struct GestureRecognizerConsistencyEnforcer;

struct GridHighlightOverlay;

struct HTTPHeaderMap {
    struct Vector<WebCore::HTTPHeaderMap::CommonHeader, 0UL, WTF::CrashOnOverflow, 6UL, WTF::FastMalloc> m_commonHeaders;
    struct Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0UL, WTF::CrashOnOverflow, 0UL, WTF::FastMalloc> m_uncommonHeaders;
};

struct HashCountedSet<WebKit::WebPageProxy *, WTF::DefaultHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>> {
    struct HashMap<WebKit::WebPageProxy *, unsigned int, WTF::DefaultHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int>, WTF::HashTableTraits> m_impl;
};

struct HashMap<SEL *, MethodInfo, WTF::DefaultHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo>, WTF::HashTableTraits> {
    struct HashTable<SEL *, WTF::KeyValuePair<SEL *, MethodInfo>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<SEL *, MethodInfo>>, WTF::DefaultHash<SEL *>, WTF::HashMap<SEL *, MethodInfo>::KeyValuePairTraits, WTF::HashTraits<SEL *>> m_impl;
};

struct HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider>>, WTF::HashTableTraits> {
    struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider>>>, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> m_impl;
};

struct HashMap<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>, WTF::DefaultHash<WTF::String>, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>, WTF::HashTableTraits> {
    struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>>, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> m_impl;
};

struct HashMap<WebKit::WebPageProxy *, unsigned int, WTF::DefaultHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int>, WTF::HashTableTraits> {
    struct HashTable<WebKit::WebPageProxy *, WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>>, WTF::DefaultHash<WebKit::WebPageProxy *>, WTF::HashMap<WebKit::WebPageProxy *, unsigned int>::KeyValuePairTraits, WTF::HashTraits<WebKit::WebPageProxy *>> m_impl;
};

struct HashMap<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>, WTF::DefaultHash<const void *>, WTF::HashTraits<const void *>, WTF::HashTraits<std::unique_ptr<WKHTTPCookieStoreObserver>>, WTF::HashTableTraits> {
    struct HashTable<const void *, WTF::KeyValuePair<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>>, WTF::DefaultHash<const void *>, WTF::HashMap<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>::KeyValuePairTraits, WTF::HashTraits<const void *>> m_impl;
};

struct HashMap<unsigned int, WTF::OptionSet<WebCore::TouchAction>, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<WTF::OptionSet<WebCore::TouchAction>>, WTF::HashTableTraits> {
    struct HashTable<unsigned int, WTF::KeyValuePair<unsigned int, WTF::OptionSet<WebCore::TouchAction>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, WTF::OptionSet<WebCore::TouchAction>>>, WTF::DefaultHash<unsigned int>, WTF::HashMap<unsigned int, WTF::OptionSet<WebCore::TouchAction>>::KeyValuePairTraits, WTF::HashTraits<unsigned int>> m_impl;
};

struct HashMap<unsigned int, unsigned long long, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long>, WTF::HashTableTraits> {
    struct HashTable<unsigned int, WTF::KeyValuePair<unsigned int, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, unsigned long long>>, WTF::DefaultHash<unsigned int>, WTF::HashMap<unsigned int, unsigned long long>::KeyValuePairTraits, WTF::HashTraits<unsigned int>> m_impl;
};

struct HashMap<unsigned long long, PendingReply, WTF::DefaultHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply>, WTF::HashTableTraits> {
    struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, PendingReply>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, PendingReply>>, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, PendingReply>::KeyValuePairTraits, WTF::HashTraits<unsigned long long>> m_impl;
};

struct HashSet<NSObject *, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTableTraits> {
    struct HashTable<NSObject *, NSObject *, WTF::IdentityExtractor, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTraits<NSObject *>> m_impl;
};

struct HashSet<WTF::Ref<WTF::WeakPtrImpl<>>, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTableTraits> {
    struct HashTable<WTF::Ref<WTF::WeakPtrImpl<>>, WTF::Ref<WTF::WeakPtrImpl<>>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>> m_impl;
};

struct HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::DefaultHash<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTableTraits> {
    struct HashTable<WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>> m_impl;
};

struct HashTable<NSObject *, NSObject *, WTF::IdentityExtractor, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTraits<NSObject *>> {
    union {
        id *m_table;
        unsigned int *m_tableForLLDB;
    } ;
};

struct HashTable<SEL *, WTF::KeyValuePair<SEL *, MethodInfo>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<SEL *, MethodInfo>>, WTF::DefaultHash<SEL *>, WTF::HashMap<SEL *, MethodInfo>::KeyValuePairTraits, WTF::HashTraits<SEL *>> {
    CDUnion_f697d383 ;
};

struct HashTable<WTF::Ref<WTF::WeakPtrImpl<>>, WTF::Ref<WTF::WeakPtrImpl<>>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>> {
    CDUnion_f697d383 ;
};

struct HashTable<WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>> {
    CDUnion_f697d383 ;
};

struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider>>>, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> {
    CDUnion_f697d383 ;
};

struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>>, WTF::DefaultHash<WTF::String>, WTF::HashMap<WTF::String, std::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface>>>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> {
    CDUnion_f697d383 ;
};

struct HashTable<WebKit::WebPageProxy *, WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>>, WTF::DefaultHash<WebKit::WebPageProxy *>, WTF::HashMap<WebKit::WebPageProxy *, unsigned int>::KeyValuePairTraits, WTF::HashTraits<WebKit::WebPageProxy *>> {
    CDUnion_f697d383 ;
};

struct HashTable<const void *, WTF::KeyValuePair<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>>, WTF::DefaultHash<const void *>, WTF::HashMap<const void *, std::unique_ptr<WKHTTPCookieStoreObserver>>::KeyValuePairTraits, WTF::HashTraits<const void *>> {
    CDUnion_f697d383 ;
};

struct HashTable<unsigned int, WTF::KeyValuePair<unsigned int, WTF::OptionSet<WebCore::TouchAction>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, WTF::OptionSet<WebCore::TouchAction>>>, WTF::DefaultHash<unsigned int>, WTF::HashMap<unsigned int, WTF::OptionSet<WebCore::TouchAction>>::KeyValuePairTraits, WTF::HashTraits<unsigned int>> {
    CDUnion_f697d383 ;
};

struct HashTable<unsigned int, WTF::KeyValuePair<unsigned int, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, unsigned long long>>, WTF::DefaultHash<unsigned int>, WTF::HashMap<unsigned int, unsigned long long>::KeyValuePairTraits, WTF::HashTraits<unsigned int>> {
    CDUnion_f697d383 ;
};

struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, PendingReply>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, PendingReply>>, WTF::DefaultHash<unsigned long long>, WTF::HashMap<unsigned long long, PendingReply>::KeyValuePairTraits, WTF::HashTraits<unsigned long long>> {
    CDUnion_f697d383 ;
};

struct Highlight {
    struct Color contentColor;
    struct Color contentOutlineColor;
    struct Color paddingColor;
    struct Color borderColor;
    struct Color marginColor;
    int type;
    struct Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> quads;
    struct Vector<WebCore::InspectorOverlay::Highlight::GridHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> gridHighlightOverlays;
    _Bool usePageCoordinates;
};

struct HistoricalVelocityData {
    unsigned int m_historySize;
    unsigned int m_latestDataIndex;
    struct MonotonicTime m_lastAppendTimestamp;
    struct Data m_positionHistory[3];
};

struct IconLoadingDelegate;

struct Image;

struct InputViewUpdateDeferrer;

struct IntPoint {
    int m_x;
    int m_y;
};

struct IntRect {
    struct IntPoint m_location;
    struct IntSize m_size;
};

struct IntSize {
    int m_width;
    int m_height;
};

struct InteractionInformationAtPosition {
    struct InteractionInformationRequest request;
    _Bool canBeValid;
    optional_34114161 nodeAtPositionHasDoubleClickHandler;
    unsigned char selectability;
    _Bool isSelected;
    _Bool prefersDraggingOverTextSelection;
    _Bool isNearMarkedText;
    _Bool touchCalloutEnabled;
    _Bool isLink;
    _Bool isImage;
    _Bool isAttachment;
    _Bool isAnimatedImage;
    _Bool isPausedVideo;
    _Bool isElement;
    _Bool isContentEditable;
    unsigned long long containerScrollingNodeID;
    _Bool isDataDetectorLink;
    _Bool preventTextInteraction;
    _Bool shouldNotUseIBeamInEditableContent;
    _Bool isImageOverlayText;
    _Bool isVerticalWritingMode;
    struct FloatPoint adjustedPointForNodeRespondingToClickEvents;
    struct URL url;
    struct URL imageURL;
    struct String title;
    struct String idAttribute;
    struct IntRect bounds;
    struct RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>> image;
    struct String textBefore;
    struct String textAfter;
    float caretLength;
    struct FloatRect lineCaretExtent;
    struct optional<WebCore::Cursor> cursor;
    struct TextIndicatorData linkIndicator;
    struct String dataDetectorIdentifier;
    RetainPtr_f649c0c3 dataDetectorResults;
    struct IntRect dataDetectorBounds;
    struct optional<WebCore::ElementContext> elementContext;
    struct optional<WebCore::ElementContext> hostImageOrVideoElementContext;
};

struct InteractionInformationRequest {
    struct IntPoint point;
    _Bool includeSnapshot;
    _Bool includeLinkIndicator;
    _Bool includeCaretContext;
    _Bool includeHasDoubleClickHandler;
    _Bool includeImageData;
    _Bool linkIndicatorShouldHaveLegacyMargins;
    _Bool disallowUserAgentShadowContent;
};

struct ItemAndPreview;

struct ItemAndPreviewProvider;

struct KeyboardScroll {
    struct FloatSize offset;
    struct FloatSize maximumVelocity;
    struct FloatSize force;
    unsigned char granularity;
    unsigned char direction;
};

struct KeyboardScrollParameters {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct LazyInitialized<WTF::RetainPtr<WKPreferences>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKPreferences> m_value;
};

struct LazyInitialized<WTF::RetainPtr<WKProcessPool>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKProcessPool> m_value;
};

struct LazyInitialized<WTF::RetainPtr<WKUserContentController>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKUserContentController> m_value;
};

struct LazyInitialized<WTF::RetainPtr<WKWebViewContentProviderRegistry>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKWebViewContentProviderRegistry> m_value;
};

struct LazyInitialized<WTF::RetainPtr<WKWebpagePreferences>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKWebpagePreferences> m_value;
};

struct LazyInitialized<WTF::RetainPtr<WKWebsiteDataStore>> {
    _Bool m_isInitialized;
    struct RetainPtr<WKWebsiteDataStore> m_value;
};

struct LazyInitialized<WTF::RetainPtr<_WKVisitedLinkStore>> {
    _Bool m_isInitialized;
    struct RetainPtr<_WKVisitedLinkStore> m_value;
};

struct LineData {
    struct FloatPoint start;
    struct FloatPoint end;
};

struct MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType> {
    unsigned long long m_identifier;
};

struct MonotonicObjectIdentifier<WebKit::TransactionIDType> {
    unsigned long long m_identifier;
};

struct MonotonicTime {
    double m_value;
};

struct MoveData {
    struct FloatPoint location;
};

struct NakedPtr<WebCore::AXObjectCache> {
    struct AXObjectCache *_field1;
};

struct NakedPtr<WebKit::WebPage> {
    struct WebPage *m_ptr;
};

struct NakedPtr<WebKit::WebPageProxy> {
    struct WebPageProxy *_field1;
};

struct NakedRef<WebCore::Document> {
    struct Document *_field1;
};

struct NakedRef<WebKit::NetworkSessionCocoa> {
    struct NetworkSessionCocoa *_field1;
};

struct NakedRef<WebKit::WebPage> {
    struct WebPage *_field1;
};

struct NakedRef<WebKit::WebPageProxy> {
    struct WebPageProxy *_field1;
};

struct NakedRef<WebKit::WebProcessPool> {
    struct WebProcessPool *_field1;
};

struct NativeWebMouseEvent;

struct NavigationState;

struct NetworkSessionCocoa;

struct Node;

struct OSObjectPtr<NSObject<OS_dispatch_queue>*> {
    NSObject *m_ptr;
};

struct Object {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ObjectIdentifier<WebCore::ElementIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebCore::FrameIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebCore::PageIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebCore::ProcessIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebCore::ScriptExecutionContextIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebKit::LegacyCustomProtocolIDType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebKit::TapIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectIdentifier<WebKit::WebPageProxyIdentifierType> {
    unsigned long long m_identifier;
};

struct ObjectStorage<API::ApplicationManifest> {
    struct type data;
};

struct ObjectStorage<API::Array> {
    struct type data;
};

struct ObjectStorage<API::Attachment> {
    struct type data;
};

struct ObjectStorage<API::ContentRuleList> {
    struct type data;
};

struct ObjectStorage<API::ContentRuleListAction> {
    struct type data;
};

struct ObjectStorage<API::ContentRuleListStore> {
    struct type data;
};

struct ObjectStorage<API::ContentWorld> {
    struct type data;
};

struct ObjectStorage<API::ContextMenuElementInfo> {
    struct type data;
};

struct ObjectStorage<API::CustomHeaderFields> {
    struct type data;
};

struct ObjectStorage<API::Data> {
    struct type data;
};

struct ObjectStorage<API::DebuggableInfo> {
    struct type data;
};

struct ObjectStorage<API::Dictionary> {
    struct type data;
};

struct ObjectStorage<API::ExperimentalFeature> {
    struct type data;
};

struct ObjectStorage<API::FrameHandle> {
    struct type data;
};

struct ObjectStorage<API::FrameInfo> {
    struct type data;
};

struct ObjectStorage<API::FrameTreeNode> {
    struct type data;
};

struct ObjectStorage<API::HTTPCookieStore> {
    struct type data;
};

struct ObjectStorage<API::InspectorConfiguration> {
    struct type data;
};

struct ObjectStorage<API::InternalDebugFeature> {
    struct type data;
};

struct ObjectStorage<API::Navigation> {
    struct type data;
};

struct ObjectStorage<API::NavigationAction> {
    struct type data;
};

struct ObjectStorage<API::NavigationData> {
    struct type data;
};

struct ObjectStorage<API::NavigationResponse> {
    struct type data;
};

struct ObjectStorage<API::Number<bool, API::Object::Type::Boolean>> {
    struct type data;
};

struct ObjectStorage<API::Number<double, API::Object::Type::Double>> {
    struct type data;
};

struct ObjectStorage<API::Number<long long, API::Object::Type::Int64>> {
    struct type data;
};

struct ObjectStorage<API::Number<unsigned long long, API::Object::Type::UInt64>> {
    struct type data;
};

struct ObjectStorage<API::ProcessPoolConfiguration> {
    struct type data;
};

struct ObjectStorage<API::ResourceLoadInfo> {
    struct type data;
};

struct ObjectStorage<API::ResourceLoadStatisticsFirstParty> {
    struct type data;
};

struct ObjectStorage<API::ResourceLoadStatisticsThirdParty> {
    struct type data;
};

struct ObjectStorage<API::SecurityOrigin> {
    struct type data;
};

struct ObjectStorage<API::UserInitiatedAction> {
    struct type data;
};

struct ObjectStorage<API::UserScript> {
    struct type data;
};

struct ObjectStorage<API::UserStyleSheet> {
    struct type data;
};

struct ObjectStorage<API::WebAuthenticationAssertionResponse> {
    struct type data;
};

struct ObjectStorage<API::WebAuthenticationPanel> {
    struct type data;
};

struct ObjectStorage<API::WebsiteDataRecord> {
    struct type data;
};

struct ObjectStorage<API::WebsitePolicies> {
    struct type data;
};

struct ObjectStorage<API::WindowFeatures> {
    struct type data;
};

struct ObjectStorage<WebKit::DownloadProxy> {
    struct type data;
};

struct ObjectStorage<WebKit::InjectedBundle> {
    struct type data;
};

struct ObjectStorage<WebKit::InjectedBundleHitTestResult> {
    struct type data;
};

struct ObjectStorage<WebKit::InjectedBundleNodeHandle> {
    struct type data;
};

struct ObjectStorage<WebKit::InjectedBundleRangeHandle> {
    struct type data;
};

struct ObjectStorage<WebKit::InjectedBundleScriptWorld> {
    struct type data;
};

struct ObjectStorage<WebKit::VisitedLinkStore> {
    struct type data;
};

struct ObjectStorage<WebKit::WebAutomationSession> {
    struct type data;
};

struct ObjectStorage<WebKit::WebBackForwardList> {
    struct type data;
};

struct ObjectStorage<WebKit::WebBackForwardListItem> {
    struct type data;
};

struct ObjectStorage<WebKit::WebFrame> {
    struct type data;
};

struct ObjectStorage<WebKit::WebGeolocationPosition> {
    struct type data;
};

struct ObjectStorage<WebKit::WebInspectorUIProxy> {
    struct type data;
};

struct ObjectStorage<WebKit::WebPage> {
    struct type data;
};

struct ObjectStorage<WebKit::WebPageGroup> {
    struct type data;
};

struct ObjectStorage<WebKit::WebPreferences> {
    struct type data;
};

struct ObjectStorage<WebKit::WebProcessPool> {
    struct type data;
};

struct ObjectStorage<WebKit::WebURLSchemeTask> {
    struct type data;
};

struct ObjectStorage<WebKit::WebUserContentControllerProxy> {
    struct type data;
};

struct ObjectStorage<WebKit::WebsiteDataStore> {
    struct type data;
};

struct ObjectStorage<WebKit::WebsiteDataStoreConfiguration> {
    struct type data;
};

struct OptionItem;

struct OptionSet<WKFileUploadPanelImagePickerType> {
    unsigned char m_storage;
};

struct OptionSet<WebCore::ActivityState::Flag> {
    unsigned int _field1;
};

struct OptionSet<WebCore::DragApplicationFlags> {
    unsigned char _field1;
};

struct OptionSet<WebCore::DragDestinationAction> {
    unsigned char _field1;
};

struct OptionSet<WebCore::DragOperation> {
    unsigned char _field1;
};

struct OptionSet<WebCore::DragSourceAction> {
    unsigned char m_storage;
};

struct OptionSet<WebCore::ModalContainerControlType> {
    unsigned char _field1;
};

struct OptionSet<WebCore::TextIndicatorOption> {
    unsigned short m_storage;
};

struct OptionSet<WebCore::TouchAction> {
    unsigned char _field1;
};

struct OptionSet<WebKit::SuppressSelectionAssistantReason> {
    unsigned char m_storage;
};

struct OptionSet<WebKit::ViewStabilityFlag> {
    unsigned char m_storage;
};

struct PageClientImpl;

struct PageConfiguration;

struct PageLoadStateObserver;

struct Parameters;

struct Path {
    struct RetainPtr<CGPath *> m_path;
    struct variant<std::monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> m_inlineData;
    _Bool m_copyPathBeforeMutation;
};

struct PlaybackSessionInterfaceAVKit;

struct ProcessQualified<WTF::ObjectIdentifier<WebCore::ScriptExecutionContextIdentifierType>> {
    struct ObjectIdentifier<WebCore::ScriptExecutionContextIdentifierType> m_object;
    struct ObjectIdentifier<WebCore::ProcessIdentifierType> m_processIdentifier;
};

struct PublicKeyCredentialCreationOptions {
    struct RpEntity _field1;
    struct UserEntity _field2;
    struct BufferSource _field3;
    struct Vector<WebCore::PublicKeyCredentialCreationOptions::Parameters, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _field4;
    optional_488f82df _field5;
    struct Vector<WebCore::PublicKeyCredentialDescriptor, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _field6;
    struct optional<WebCore::PublicKeyCredentialCreationOptions::AuthenticatorSelectionCriteria> _field7;
    int _field8;
    struct optional<WebCore::AuthenticationExtensionsClientInputs> _field9;
};

struct PublicKeyCredentialDescriptor;

struct PublicKeyCredentialRequestOptions {
    struct BufferSource _field1;
    optional_488f82df _field2;
    struct String _field3;
    struct Vector<WebCore::PublicKeyCredentialDescriptor, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _field4;
    int _field5;
    struct optional<WebCore::AuthenticatorAttachment> _field6;
    struct optional<WebCore::AuthenticationExtensionsClientInputs> _field7;
};

struct QuadCurveData {
    struct FloatPoint startPoint;
    struct FloatPoint controlPoint;
    struct FloatPoint endPoint;
};

struct Range;

struct RectEdges<bool> {
    struct array<bool, 4UL> _field1;
};

struct RectEdges<float> {
    struct array<float, 4UL> m_sides;
};

struct Ref<API::PageConfiguration, WTF::RawPtrTraits<API::PageConfiguration>> {
    struct PageConfiguration *_field1;
};

struct Ref<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>> {
    struct TextIndicator *_field1;
};

struct RefPtr<API::Dictionary, WTF::RawPtrTraits<API::Dictionary>, WTF::DefaultRefDerefTraits<API::Dictionary>> {
    struct Dictionary *m_ptr;
};

struct RefPtr<API::PageConfiguration, WTF::RawPtrTraits<API::PageConfiguration>, WTF::DefaultRefDerefTraits<API::PageConfiguration>> {
    struct PageConfiguration *m_ptr;
};

struct RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>> {
    struct ArrayBuffer *_field1;
};

struct RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>> {
    struct ArrayBufferView *_field1;
};

struct RefPtr<WTF::CStringBuffer, WTF::RawPtrTraits<WTF::CStringBuffer>, WTF::DefaultRefDerefTraits<WTF::CStringBuffer>> {
    struct CStringBuffer *m_ptr;
};

struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> {
    struct StringImpl *m_ptr;
};

struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> {
    void *m_ptr;
};

struct RefPtr<WebCore::FormData, WTF::RawPtrTraits<WebCore::FormData>, WTF::DefaultRefDerefTraits<WebCore::FormData>> {
    struct FormData *m_ptr;
};

struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> {
    struct Image *m_ptr;
};

struct RefPtr<WebCore::Node, WTF::RawPtrTraits<WebCore::Node>, WTF::DefaultRefDerefTraits<WebCore::Node>> {
    struct Node *m_ptr;
};

struct RefPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::RawPtrTraits<WebCore::PlaybackSessionInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::PlaybackSessionInterfaceAVKit>> {
    struct PlaybackSessionInterfaceAVKit *m_ptr;
};

struct RefPtr<WebCore::Range, WTF::RawPtrTraits<WebCore::Range>, WTF::DefaultRefDerefTraits<WebCore::Range>> {
    struct Range *m_ptr;
};

struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> {
    struct TextIndicator *m_ptr;
};

struct RefPtr<WebKit::SOAuthorizationSession, WTF::RawPtrTraits<WebKit::SOAuthorizationSession>, WTF::DefaultRefDerefTraits<WebKit::SOAuthorizationSession>> {
    struct SOAuthorizationSession *m_ptr;
};

struct RefPtr<WebKit::SandboxExtension, WTF::RawPtrTraits<WebKit::SandboxExtension>, WTF::DefaultRefDerefTraits<WebKit::SandboxExtension>> {
    struct SandboxExtension *m_ptr;
};

struct RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>> {
    struct ShareableBitmap *m_ptr;
};

struct RefPtr<WebKit::ViewSnapshot, WTF::RawPtrTraits<WebKit::ViewSnapshot>, WTF::DefaultRefDerefTraits<WebKit::ViewSnapshot>> {
    struct ViewSnapshot *_field1;
};

struct RefPtr<WebKit::WebEditCommandProxy, WTF::RawPtrTraits<WebKit::WebEditCommandProxy>, WTF::DefaultRefDerefTraits<WebKit::WebEditCommandProxy>> {
    struct WebEditCommandProxy *m_ptr;
};

struct RefPtr<WebKit::WebGeolocationManagerProxy, WTF::RawPtrTraits<WebKit::WebGeolocationManagerProxy>, WTF::DefaultRefDerefTraits<WebKit::WebGeolocationManagerProxy>> {
    struct WebGeolocationManagerProxy *m_ptr;
};

struct RefPtr<WebKit::WebGeolocationPosition, WTF::RawPtrTraits<WebKit::WebGeolocationPosition>, WTF::DefaultRefDerefTraits<WebKit::WebGeolocationPosition>> {
    struct WebGeolocationPosition *m_ptr;
};

struct RefPtr<WebKit::WebOpenPanelResultListenerProxy, WTF::RawPtrTraits<WebKit::WebOpenPanelResultListenerProxy>, WTF::DefaultRefDerefTraits<WebKit::WebOpenPanelResultListenerProxy>> {
    struct WebOpenPanelResultListenerProxy *m_ptr;
};

struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> {
    struct WebPageProxy *m_ptr;
};

struct RefPtr<WebKit::WebProcessPool, WTF::RawPtrTraits<WebKit::WebProcessPool>, WTF::DefaultRefDerefTraits<WebKit::WebProcessPool>> {
    struct WebProcessPool *m_ptr;
};

struct RefPtr<const WebKit::SafeBrowsingWarning, WTF::RawPtrTraits<const WebKit::SafeBrowsingWarning>, WTF::DefaultRefDerefTraits<const WebKit::SafeBrowsingWarning>> {
    struct SafeBrowsingWarning *m_ptr;
};

struct RemoteObjectRegistry;

struct ResourceLoadDelegate;

struct ResourceRequest {
    struct URL m_url;
    double m_timeoutInterval;
    struct URL m_firstPartyForCookies;
    struct String m_httpMethod;
    struct String m_initiatorIdentifier;
    struct String m_cachePartition;
    struct HTTPHeaderMap m_httpHeaderFields;
    Vector_07070297 m_responseContentDispositionEncodingFallbackArray;
    struct RefPtr<WebCore::FormData, WTF::RawPtrTraits<WebCore::FormData>, WTF::DefaultRefDerefTraits<WebCore::FormData>> m_httpBody;
    unsigned char m_cachePolicy;
    unsigned char m_sameSiteDisposition;
    unsigned char m_priority;
    unsigned char m_requester;
    struct optional<int> m_inspectorInitiatorNodeIdentifier;
    unsigned int m_allowCookies:1;
    unsigned int m_resourceRequestUpdated:1;
    unsigned int m_platformRequestUpdated:1;
    unsigned int m_resourceRequestBodyUpdated:1;
    unsigned int m_platformRequestBodyUpdated:1;
    unsigned int m_hiddenFromInspector:1;
    unsigned int m_isTopSite:1;
    unsigned int m_isAppInitiated:1;
    struct optional<WebCore::SystemPreviewInfo> m_systemPreviewInfo;
    struct RetainPtr<NSURLRequest> m_nsRequest;
};

struct RetainPtr<ARQuickLookWebKitItem> {
    void *m_ptr;
};

struct RetainPtr<ASVThumbnailView> {
    void *m_ptr;
};

struct RetainPtr<AVAssetExportSession> {
    void *m_ptr;
};

struct RetainPtr<AVBackgroundView> {
    void *m_ptr;
};

struct RetainPtr<CAContext> {
    void *m_ptr;
};

struct RetainPtr<CADisplayLink> {
    void *m_ptr;
};

struct RetainPtr<CALayer> {
    void *m_ptr;
};

struct RetainPtr<CAPortalLayer> {
    void *m_ptr;
};

struct RetainPtr<CAShapeLayer> {
    void *m_ptr;
};

struct RetainPtr<CGColor *> {
    void *m_ptr;
};

struct RetainPtr<CGImage *> {
    void *m_ptr;
};

struct RetainPtr<CGPDFDocument *> {
    void *m_ptr;
};

struct RetainPtr<CGPath *> {
    void *m_ptr;
};

struct RetainPtr<CNContactPickerViewController> {
    void *m_ptr;
};

struct RetainPtr<MPMediaControlsViewController> {
    void *m_ptr;
};

struct RetainPtr<NSArray<NSString *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray<PKPaymentSummaryItem *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray<UIMenuElement *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray<UITextSuggestion *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray<_WKElementAction *>> {
    void *_field1;
};

struct RetainPtr<NSArray<_WKFileUploadItem *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray<_WKTextManipulationToken *>> {
    void *m_ptr;
};

struct RetainPtr<NSArray> {
    void *m_ptr;
};

struct RetainPtr<NSData> {
    void *m_ptr;
};

struct RetainPtr<NSDateFormatter> {
    void *_field1;
};

struct RetainPtr<NSDictionary<NSString *, id>> {
    void *m_ptr;
};

struct RetainPtr<NSDictionary> {
    void *m_ptr;
};

struct RetainPtr<NSError> {
    void *m_ptr;
};

struct RetainPtr<NSFileWrapper> {
    void *m_ptr;
};

struct RetainPtr<NSItemProvider> {
    void *m_ptr;
};

struct RetainPtr<NSLayoutConstraint> {
    void *m_ptr;
};

struct RetainPtr<NSMapTable> {
    void *m_ptr;
};

struct RetainPtr<NSMutableArray<CAShapeLayer *>> {
    void *m_ptr;
};

struct RetainPtr<NSMutableArray> {
    void *m_ptr;
};

struct RetainPtr<NSMutableDictionary> {
    void *m_ptr;
};

struct RetainPtr<NSMutableSet<NSNumber *>> {
    void *m_ptr;
};

struct RetainPtr<NSMutableSet> {
    void *m_ptr;
};

struct RetainPtr<NSNumber> {
    void *m_ptr;
};

struct RetainPtr<NSObject<NSSecureCoding>> {
    void *m_ptr;
};

struct RetainPtr<NSObject<WKFormControl>> {
    void *m_ptr;
};

struct RetainPtr<NSObject<WKFormPeripheral>> {
    void *m_ptr;
};

struct RetainPtr<NSObject> {
    void *m_ptr;
};

struct RetainPtr<NSSet<NSString *>> {
    void *m_ptr;
};

struct RetainPtr<NSString> {
    void *m_ptr;
};

struct RetainPtr<NSTimer> {
    void *m_ptr;
};

struct RetainPtr<NSURL> {
    void *m_ptr;
};

struct RetainPtr<NSURLConnection> {
    void *m_ptr;
};

struct RetainPtr<NSURLRequest> {
    void *m_ptr;
};

struct RetainPtr<NSURLSessionDownloadTask> {
    void *m_ptr;
};

struct RetainPtr<NSUndoManager> {
    void *m_ptr;
};

struct RetainPtr<NSUserDefaults> {
    void *m_ptr;
};

struct RetainPtr<PDFHostViewController> {
    void *m_ptr;
};

struct RetainPtr<PKPaymentRequest> {
    void *m_ptr;
};

struct RetainPtr<PKShippingMethods> {
    void *m_ptr;
};

struct RetainPtr<PUActivityProgressController> {
    void *m_ptr;
};

struct RetainPtr<QLItem> {
    void *m_ptr;
};

struct RetainPtr<QLPreviewController> {
    void *m_ptr;
};

struct RetainPtr<RBSAssertion> {
    void *m_ptr;
};

struct RetainPtr<UIActivityViewController> {
    void *m_ptr;
};

struct RetainPtr<UIBarButtonItem> {
    void *m_ptr;
};

struct RetainPtr<UIButton> {
    void *m_ptr;
};

struct RetainPtr<UIColor> {
    void *m_ptr;
};

struct RetainPtr<UIColorPickerViewController> {
    void *m_ptr;
};

struct RetainPtr<UIContextMenuInteraction> {
    void *m_ptr;
};

struct RetainPtr<UIDatePicker> {
    void *m_ptr;
};

struct RetainPtr<UIDocumentPasswordView> {
    void *m_ptr;
};

struct RetainPtr<UIDocumentPickerViewController> {
    void *m_ptr;
};

struct RetainPtr<UIDragInteraction> {
    void *m_ptr;
};

struct RetainPtr<UIDropInteraction> {
    void *m_ptr;
};

struct RetainPtr<UIEvent> {
    void *m_ptr;
};

struct RetainPtr<UIFont> {
    void *m_ptr;
};

struct RetainPtr<UIGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UIImage> {
    void *m_ptr;
};

struct RetainPtr<UIImagePickerController> {
    void *m_ptr;
};

struct RetainPtr<UIImageView> {
    void *m_ptr;
};

struct RetainPtr<UIIndirectScribbleInteraction> {
    void *m_ptr;
};

struct RetainPtr<UILabel> {
    void *m_ptr;
};

struct RetainPtr<UILayoutGuide> {
    void *m_ptr;
};

struct RetainPtr<UILongPressGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UIMenu> {
    void *m_ptr;
};

struct RetainPtr<UINavigationController> {
    void *m_ptr;
};

struct RetainPtr<UIPanGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UIPinchGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UIPointerInteraction> {
    void *m_ptr;
};

struct RetainPtr<UIPopoverController> {
    void *m_ptr;
};

struct RetainPtr<UIPreviewItemController> {
    void *m_ptr;
};

struct RetainPtr<UIScrollView> {
    void *m_ptr;
};

struct RetainPtr<UISwipeGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UITapGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UITargetedPreview> {
    void *m_ptr;
};

struct RetainPtr<UITextInputTraits> {
    void *m_ptr;
};

struct RetainPtr<UIToolbar> {
    void *m_ptr;
};

struct RetainPtr<UITouch> {
    void *m_ptr;
};

struct RetainPtr<UIView<WKFormControl>> {
    void *m_ptr;
};

struct RetainPtr<UIView<WKWebViewContentProvider>> {
    void *m_ptr;
};

struct RetainPtr<UIView> {
    void *m_ptr;
};

struct RetainPtr<UIViewController> {
    void *m_ptr;
};

struct RetainPtr<UIWKTextInteractionAssistant> {
    void *m_ptr;
};

struct RetainPtr<UIWebFormAccessory> {
    void *m_ptr;
};

struct RetainPtr<UIWebTouchEventsGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<UIWindow> {
    void *m_ptr;
};

struct RetainPtr<VKImageAnalyzerRequest> {
    void *_field1;
};

struct RetainPtr<WKActionSheet> {
    void *m_ptr;
};

struct RetainPtr<WKActionSheetAssistant> {
    void *m_ptr;
};

struct RetainPtr<WKAirPlayRoutePicker> {
    void *m_ptr;
};

struct RetainPtr<WKBrowsingContextController> {
    void *m_ptr;
};

struct RetainPtr<WKCNContactPickerDelegate> {
    void *m_ptr;
};

struct RetainPtr<WKContactPicker> {
    void *m_ptr;
};

struct RetainPtr<WKContentRuleList> {
    void *m_ptr;
};

struct RetainPtr<WKContentRuleListStore> {
    void *m_ptr;
};

struct RetainPtr<WKContentView> {
    void *m_ptr;
};

struct RetainPtr<WKContentWorld> {
    void *m_ptr;
};

struct RetainPtr<WKContextMenuElementInfo> {
    void *m_ptr;
};

struct RetainPtr<WKDataListSuggestionsPickerView> {
    void *m_ptr;
};

struct RetainPtr<WKDataListSuggestionsViewController> {
    void *m_ptr;
};

struct RetainPtr<WKDeferringGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKDownload> {
    void *m_ptr;
};

struct RetainPtr<WKFileUploadMediaTranscoder> {
    void *m_ptr;
};

struct RetainPtr<WKFileUploadPanel> {
    void *m_ptr;
};

struct RetainPtr<WKFocusedElementInfo> {
    void *m_ptr;
};

struct RetainPtr<WKFormInputSession> {
    void *m_ptr;
};

struct RetainPtr<WKFormRotatingAccessoryPopover> {
    void *m_ptr;
};

struct RetainPtr<WKFrameInfo> {
    void *m_ptr;
};

struct RetainPtr<WKFullScreenInteractiveTransition> {
    void *m_ptr;
};

struct RetainPtr<WKFullScreenPlaceholderView> {
    void *m_ptr;
};

struct RetainPtr<WKFullScreenViewController> {
    void *m_ptr;
};

struct RetainPtr<WKFullScreenWindowController> {
    void *m_ptr;
};

struct RetainPtr<WKFullscreenAnimationController> {
    void *m_ptr;
};

struct RetainPtr<WKFullscreenStackView> {
    void *m_ptr;
};

struct RetainPtr<WKGeolocationProviderIOS> {
    void *m_ptr;
};

struct RetainPtr<WKHighlightLongPressGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKHoverPlatter> {
    void *m_ptr;
};

struct RetainPtr<WKImageAnalysisGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKInspectorHighlightView> {
    void *m_ptr;
};

struct RetainPtr<WKInspectorIndicationView> {
    void *m_ptr;
};

struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKKeyboardScrollViewAnimator> {
    void *m_ptr;
};

struct RetainPtr<WKKeyboardScrollingAnimator> {
    void *m_ptr;
};

struct RetainPtr<WKMouseGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKPasswordView> {
    void *m_ptr;
};

struct RetainPtr<WKPreferences> {
    void *m_ptr;
};

struct RetainPtr<WKProcessPool> {
    void *m_ptr;
};

struct RetainPtr<WKQuirkyNSUndoManager> {
    void *m_ptr;
};

struct RetainPtr<WKSafeBrowsingWarning> {
    void *m_ptr;
};

struct RetainPtr<WKScrollView> {
    void *m_ptr;
};

struct RetainPtr<WKScrollViewDelegateForwarder> {
    void *m_ptr;
};

struct RetainPtr<WKSelectPickerTableViewController> {
    void *m_ptr;
};

struct RetainPtr<WKSelectTableViewController> {
    void *m_ptr;
};

struct RetainPtr<WKShareSheet> {
    void *m_ptr;
};

struct RetainPtr<WKSyntheticTapGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKTargetedPreviewContainer> {
    void *m_ptr;
};

struct RetainPtr<WKTextRange> {
    void *m_ptr;
};

struct RetainPtr<WKTouchActionGestureRecognizer> {
    void *m_ptr;
};

struct RetainPtr<WKUserContentController> {
    void *m_ptr;
};

struct RetainPtr<WKWebView> {
    void *_field1;
};

struct RetainPtr<WKWebViewConfiguration> {
    void *m_ptr;
};

struct RetainPtr<WKWebViewContentProviderRegistry> {
    void *m_ptr;
};

struct RetainPtr<WKWebpagePreferences> {
    void *m_ptr;
};

struct RetainPtr<WKWebsiteDataStore> {
    void *m_ptr;
};

struct RetainPtr<WebGeolocationCoreLocationProvider> {
    void *m_ptr;
};

struct RetainPtr<WebTextIndicatorLayer> {
    void *m_ptr;
};

struct RetainPtr<_UIBackdropView> {
    void *m_ptr;
};

struct RetainPtr<_UIDatePickerOverlayPresentation> {
    void *m_ptr;
};

struct RetainPtr<_UIHighlightView> {
    void *m_ptr;
};

struct RetainPtr<_UILayerHostView> {
    void *m_ptr;
};

struct RetainPtr<_UINavigationInteractiveTransitionBase> {
    void *m_ptr;
};

struct RetainPtr<_UITextDragCaretView> {
    void *m_ptr;
};

struct RetainPtr<_WKActivatedElementInfo> {
    void *m_ptr;
};

struct RetainPtr<_WKAuthenticationExtensionsClientOutputs> {
    void *m_ptr;
};

struct RetainPtr<_WKAutomationSession> {
    void *m_ptr;
};

struct RetainPtr<_WKAutomationSessionConfiguration> {
    void *m_ptr;
};

struct RetainPtr<_WKExtrinsicButton> {
    void *m_ptr;
};

struct RetainPtr<_WKFrameHandle> {
    void *m_ptr;
};

struct RetainPtr<_WKRemoteObjectInterface> {
    void *m_ptr;
};

struct RetainPtr<_WKRemoteObjectRegistry> {
    void *m_ptr;
};

struct RetainPtr<_WKVisitedLinkStore> {
    void *m_ptr;
};

struct RetainPtr<__CFRunLoop *> {
    void *m_ptr;
};

struct RetainPtr<__IOHIDEventSystemClient *> {
    void *m_ptr;
};

struct RetainPtr<id<BSInvalidatable>> {
    void *m_ptr;
};

struct RetainPtr<id<UIDragSession>> {
    void *m_ptr;
};

struct RetainPtr<id<UIDropSession>> {
    void *m_ptr;
};

struct RetainPtr<id<UIPopoverPresentationControllerDelegate>> {
    void *m_ptr;
};

struct RetainPtr<id<UIViewControllerContextTransitioning>> {
    void *m_ptr;
};

struct RetainPtr<id<WKWebProcessPlugIn>> {
    void *m_ptr;
};

struct RetainPtr<id<_WKGeolocationCoreLocationProvider>> {
    void *m_ptr;
};

struct RetainPtr<id> {
    void *m_ptr;
};

struct RpEntity {
    struct String _field1;
    struct String _field2;
    struct String _field3;
};

struct SOAuthorizationSession;

struct SafeBrowsingWarning;

struct SandboxExtension;

struct Seconds {
    double m_value;
};

struct SecurityOriginData {
    struct String protocol;
    struct String host;
    struct optional<unsigned short> port;
};

struct SelectionGeometry {
    struct FloatQuad m_quad;
    _Bool m_behavior;
    _Bool m_direction;
    int m_minX;
    int m_maxX;
    int m_maxY;
    int m_lineNumber;
    _Bool m_isLineBreak;
    _Bool m_isFirstOnLine;
    _Bool m_isLastOnLine;
    _Bool m_containsStart;
    _Bool m_containsEnd;
    _Bool m_isHorizontal;
    _Bool m_isInFixedPosition;
    _Bool m_isRubyText;
    int m_pageNumber;
    struct optional<WebCore::IntRect> m_cachedEnclosingRect;
};

struct SessionState {
    struct BackForwardListState backForwardListState;
    unsigned long long renderTreeSize;
    struct URL provisionalURL;
    _Bool isAppInitiated;
};

struct ShareableBitmap;

struct Size {
    unsigned long long totalSize;
    struct HashMap<unsigned int, unsigned long long, WTF::DefaultHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long>, WTF::HashTableTraits> typeSizes;
};

struct SmartMagnificationController;

struct String {
    struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> m_impl;
};

struct StringImpl;

struct SystemPreviewInfo {
    struct ElementContext element;
    struct IntRect previewRect;
    _Bool isPreview;
};

struct TapHighlightInformation {
    _Bool nodeHasBuiltInClickHandling;
    struct Color color;
    struct Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> quads;
    struct IntSize topLeftRadius;
    struct IntSize topRightRadius;
    struct IntSize bottomLeftRadius;
    struct IntSize bottomRightRadius;
};

struct TextIndicator;

struct TextIndicatorData {
    struct FloatRect selectionRectInRootViewCoordinates;
    struct FloatRect textBoundingRectInRootViewCoordinates;
    struct FloatRect contentImageWithoutSelectionRectInRootViewCoordinates;
    struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> textRectsInBoundingRectCoordinates;
    float contentImageScaleFactor;
    struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> contentImageWithHighlight;
    struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> contentImageWithoutSelection;
    struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> contentImage;
    struct Color estimatedBackgroundColor;
    unsigned char presentationTransition;
    struct OptionSet<WebCore::TextIndicatorOption> options;
};

struct TextIterator;

struct Timer;

struct UIDelegate;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct URL {
    struct String m_string;
    unsigned int m_isValid:1;
    unsigned int m_protocolIsInHTTPFamily:1;
    unsigned int m_cannotBeABaseURL:1;
    unsigned int m_portLength:3;
    unsigned int m_schemeEnd:26;
    unsigned int m_userStart;
    unsigned int m_userEnd;
    unsigned int m_passwordEnd;
    unsigned int m_hostEnd;
    unsigned int m_pathAfterLastSlash;
    unsigned int m_pathEnd;
    unsigned int m_queryEnd;
};

struct UncommonHeader;

struct UserEntity {
    struct String _field1;
    struct String _field2;
    struct BufferSource _field3;
    struct String _field4;
};

struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::BlockPtr<void (WebKit::ProceedWithTextSelectionInImage)>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::Function<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::RetainPtr<WKModalContainerClassifierInput>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::RetainPtr<WKUserDefaults>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct String *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::Color, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct Color *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::ContactProperty, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    unsigned char *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::DataListSuggestion, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct DataListSuggestion *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct FloatQuad *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct FloatRect *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::HTTPHeaderMap::CommonHeader, 0UL, WTF::CrashOnOverflow, 6UL, WTF::FastMalloc> {
    struct CommonHeader *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::HTTPHeaderMap::UncommonHeader, 0UL, WTF::CrashOnOverflow, 0UL, WTF::FastMalloc> {
    struct UncommonHeader *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::InspectorOverlay::Highlight::GridHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct GridHighlightOverlay *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebCore::PublicKeyCredentialCreationOptions::Parameters, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct Parameters *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<WebCore::PublicKeyCredentialDescriptor, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct PublicKeyCredentialDescriptor *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<WebCore::SelectionGeometry, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct SelectionGeometry *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebKit::BackForwardListItemState, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct BackForwardListItemState *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebKit::DragSourceState, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct DragSourceState *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebKit::ItemAndPreview, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct ItemAndPreview *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebKit::ItemAndPreviewProvider, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct ItemAndPreviewProvider *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<WebKit::OptionItem, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct OptionItem *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    _Bool *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    void *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct Vector<unsigned short, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    unsigned short *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct VectorBuffer<GeolocationRequestData, 0UL, WTF::FastMalloc> {
    struct GeolocationRequestData *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
};

struct ViewGestureController;

struct ViewSnapshot;

struct WKAutoCorrectionData {
    struct RetainPtr<UIFont> font;
    struct CGRect textFirstRect;
    struct CGRect textLastRect;
};

struct WKFullScreenViewControllerPlaybackSessionModelClient {
    CDUnknownFunctionPointerType *_vptr$PlaybackSessionModelClient;
    struct WeakObjCPtr<WKFullScreenViewController> m_parent;
    struct RefPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::RawPtrTraits<WebCore::PlaybackSessionInterfaceAVKit>, WTF::DefaultRefDerefTraits<WebCore::PlaybackSessionInterfaceAVKit>> m_interface;
};

struct WKRetainPtr<const void *> {
    void *m_ptr;
};

struct WKSelectionDrawingInfo {
    int type;
    struct IntRect caretRect;
    struct Color caretColor;
    struct Vector<WebCore::SelectionGeometry, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> selectionGeometries;
    struct IntRect selectionClipRect;
};

struct WKWebViewState {
    float _savedTopContentInset;
    double _savedPageScale;
    double _savedViewScale;
    double _savedZoomScale;
    struct UIEdgeInsets _savedEdgeInset;
    struct UIEdgeInsets _savedObscuredInsets;
    struct UIEdgeInsets _savedScrollIndicatorInsets;
    struct CGPoint _savedContentOffset;
    double _savedMinimumZoomScale;
    double _savedMaximumZoomScale;
    _Bool _savedBouncesZoom;
    _Bool _savedForceAlwaysUserScalable;
};

struct WeakHashSet<WebKit::ProcessAndUIAssertion, WTF::EmptyCounter> {
    struct HashSet<WTF::Ref<WTF::WeakPtrImpl<>>, WTF::DefaultHash<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTraits<WTF::Ref<WTF::WeakPtrImpl<>>>, WTF::HashTableTraits> m_set;
};

struct WeakObjCPtr<AVPlayerViewController> {
    id m_weakReference;
};

struct WeakObjCPtr<UIScrollView> {
    id m_weakReference;
};

struct WeakObjCPtr<UIView> {
    id m_weakReference;
};

struct WeakObjCPtr<WKActionSheetAssistant> {
    id m_weakReference;
};

struct WeakObjCPtr<WKContentView> {
    id m_weakReference;
};

struct WeakObjCPtr<WKDataListSuggestionsControl> {
    id m_weakReference;
};

struct WeakObjCPtr<WKFullScreenViewController> {
    id m_weakReference;
};

struct WeakObjCPtr<WKPreferenceObserver> {
    id m_weakReference;
};

struct WeakObjCPtr<WKSafeBrowsingBox> {
    id m_weakReference;
};

struct WeakObjCPtr<WKSafeBrowsingTextView> {
    id m_weakReference;
};

struct WeakObjCPtr<WKSafeBrowsingWarning> {
    id m_weakReference;
};

struct WeakObjCPtr<WKSelectPickerTableViewController> {
    id m_weakReference;
};

struct WeakObjCPtr<WKWebView> {
    id m_weakReference;
};

struct WeakObjCPtr<id<CNContactPickerDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<UIScrollViewDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<UITextInputDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKActionSheetAssistantDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKBrowsingContextHistoryDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKBrowsingContextLoadDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKBrowsingContextPolicyDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKConnectionDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKContactPickerDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKDateTimePickerViewControllerDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKDeferringGestureRecognizerDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKDownloadDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKProcessGroupDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKShareSheetDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKWebProcessPlugInEditingDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKWebProcessPlugInFormDelegatePrivate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<WKWebProcessPlugInLoadDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKAppHighlightDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKAutomationDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKAutomationSessionDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKDownloadDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKInputDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKInspectorDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKTextManipulationDelegate>> {
    id m_weakReference;
};

struct WeakObjCPtr<id<_WKWebsiteDataStoreDelegate>> {
    id m_weakReference;
};

struct WeakPtr<WebKit::AuthenticatorPresenterCoordinator, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::Download, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::LegacyCustomProtocolManagerProxy, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::MediaPlayerPrivateRemote, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::NetworkSessionCocoa, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::PaymentAuthorizationPresenter, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::PopUpSOAuthorizationSession, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::SessionWrapper, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::WebAuthenticationPanelClient, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::WebDataListSuggestionsDropdownIOS, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WeakPtr<WebKit::WebProcessPool, WTF::EmptyCounter> {
    struct RefPtr<WTF::WeakPtrImpl<>, WTF::RawPtrTraits<WTF::WeakPtrImpl<>>, WTF::DefaultRefDerefTraits<WTF::WeakPtrImpl<>>> m_impl;
};

struct WebAutocorrectionContext {
    struct String contextBefore;
    struct String markedText;
    struct String selectedText;
    struct String contextAfter;
    struct EditingRange markedTextRange;
};

struct WebEditCommandProxy;

struct WebGeolocationManagerProxy;

struct WebGeolocationPosition;

struct WebOpenPanelResultListenerProxy;

struct WebPage;

struct WebPagePreferencesCaptivePortalModeObserver;

struct WebPageProxy;

struct WebProcessPool;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct array<bool, 4UL> {
    _Bool _field1[4];
};

struct array<float, 4UL> {
    float __elems_[4];
};

struct atomic<bool> {
    struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> {
        _Atomic _Bool __a_value;
    } __a_;
};

struct monostate;

struct optional<CGPoint> {
    union {
        char __null_state_;
        struct CGPoint __val_;
    } ;
    _Bool __engaged_;
};

struct optional<CGRect> {
    union {
        char __null_state_;
        struct CGRect __val_;
    } ;
    _Bool __engaged_;
};

struct optional<CGSize> {
    union {
        char __null_state_;
        struct CGSize __val_;
    } ;
    _Bool __engaged_;
};

struct optional<UIEdgeInsets> {
    union {
        char __null_state_;
        struct UIEdgeInsets __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> {
    union {
        char __null_state_;
        struct HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>, WTF::DefaultHash<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTraits<WTF::RetainPtr<WKDeferringGestureRecognizer>>, WTF::HashTableTraits> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WTF::MonotonicTime> {
    union {
        char __null_state_;
        struct MonotonicTime __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WTF::ObjectIdentifier<WebCore::FrameIdentifierType>> {
    union {
        char __null_state_;
        struct ObjectIdentifier<WebCore::FrameIdentifierType> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WTF::ObjectIdentifier<WebCore::PageIdentifierType>> {
    union {
        char _field1;
        ObjectIdentifier_8136369e _field2;
    } _field1;
    _Bool _field2;
};

struct optional<WTF::ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType>> {
    union {
        char __null_state_;
        ObjectIdentifier_073ef476 __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WTF::RetainPtr<NSString>> {
    union {
        char __null_state_;
        struct RetainPtr<NSString> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::AuthenticationExtensionsClientInputs> {
    union {
        char _field1;
        struct AuthenticationExtensionsClientInputs _field2;
    } _field1;
    _Bool _field2;
};

struct optional<WebCore::AuthenticatorAttachment> {
    CDUnion_81a57ede _field1;
    _Bool _field2;
};

struct optional<WebCore::Cursor> {
    union {
        char __null_state_;
        struct Cursor __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::DOMPasteAccessCategory> {
    CDUnion_fd7d43d3 ;
    _Bool __engaged_;
};

struct optional<WebCore::ElementContext> {
    union {
        char __null_state_;
        struct ElementContext __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::FloatPoint> {
    union {
        char __null_state_;
        struct FloatPoint __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::FloatRect> {
    union {
        char _field1;
        struct FloatRect _field2;
    } _field1;
    _Bool _field2;
};

struct optional<WebCore::FloatSize> {
    union {
        char __null_state_;
        struct FloatSize __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::InspectorOverlay::Highlight> {
    union {
        char __null_state_;
        struct Highlight __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::IntRect> {
    union {
        char __null_state_;
        struct IntRect __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::KeyboardScroll> {
    union {
        char __null_state_;
        struct KeyboardScroll __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::Path> {
    union {
        char __null_state_;
        struct Path __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::PublicKeyCredentialCreationOptions::AuthenticatorSelectionCriteria> {
    union {
        char _field1;
        struct AuthenticatorSelectionCriteria _field2;
    } _field1;
    _Bool _field2;
};

struct optional<WebCore::SystemPreviewInfo> {
    union {
        char __null_state_;
        struct SystemPreviewInfo __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::TextIndicatorData> {
    union {
        char __null_state_;
        struct TextIndicatorData __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebCore::WheelScrollGestureState> {
    CDUnion_fd7d43d3 ;
    _Bool __engaged_;
};

struct optional<WebKit::DragSourceState> {
    union {
        char __null_state_;
        struct DragSourceState __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebKit::InteractionInformationAtPosition> {
    union {
        char __null_state_;
        struct InteractionInformationAtPosition __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebKit::InteractionInformationRequest> {
    union {
        char __null_state_;
        struct InteractionInformationRequest __val_;
    } ;
    _Bool __engaged_;
};

struct optional<WebKit::MonotonicObjectIdentifier<WebKit::TransactionIDType>> {
    union {
        char __null_state_;
        struct MonotonicObjectIdentifier<WebKit::TransactionIDType> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<bool> {
    union {
        char __null_state_;
        _Bool __val_;
    } ;
    _Bool __engaged_;
};

struct optional<int> {
    CDUnion_81a57ede ;
    _Bool __engaged_;
};

struct optional<long> {
    union {
        char __null_state_;
        long long __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>>> {
    union {
        char __null_state_;
        struct pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned int> {
    union {
        char __null_state_;
        unsigned int __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned long> {
    union {
        char __null_state_;
        unsigned long long __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned short> {
    union {
        char __null_state_;
        unsigned short __val_;
    } ;
    _Bool __engaged_;
};

struct pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>> {
    struct InteractionInformationRequest first;
    struct BlockPtr<void (UIPointerRegion *)> second;
};

struct type {
    unsigned char __lx[152];
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>, std::default_delete<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, NSArray<_WKFileUploadItem *>*>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::DOMPasteAccessResponse>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, bool>, std::default_delete<WTF::Detail::CallableWrapperBase<void, bool>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, bool>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, bool>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::optional<WTF::Vector<WebCore::ContactInfo, 0, WTF::CrashOnOverflow, 16>>&&>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, std::variant<WebKit::ContinueUnsafeLoad, WTF::URL>&&>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, unsigned long long>, std::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, unsigned long long>*, std::default_delete<WTF::Detail::CallableWrapperBase<void, unsigned long long>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Detail::CallableWrapperBase<void>, std::default_delete<WTF::Detail::CallableWrapperBase<void>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void>*, std::default_delete<WTF::Detail::CallableWrapperBase<void>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::Observer<void (bool)>, std::default_delete<WTF::Observer<void (bool)>>> {
    struct __compressed_pair<WTF::Observer<void (bool)>*, std::default_delete<WTF::Observer<void (bool)>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<WebCore::DocumentParserYieldToken, std::default_delete<WebCore::DocumentParserYieldToken>> {
    struct __compressed_pair<WebCore::DocumentParserYieldToken *, std::default_delete<WebCore::DocumentParserYieldToken>> {
        struct DocumentParserYieldToken *__value_;
    } __ptr_;
};

struct unique_ptr<WebCore::TextIterator, std::default_delete<WebCore::TextIterator>> {
    struct __compressed_pair<WebCore::TextIterator *, std::default_delete<WebCore::TextIterator>> {
        struct TextIterator *__value_;
    } __ptr_;
};

struct unique_ptr<WebCore::Timer, std::default_delete<WebCore::Timer>> {
    struct __compressed_pair<WebCore::Timer *, std::default_delete<WebCore::Timer>> {
        struct Timer *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::ApplicationStateTracker, std::default_delete<WebKit::ApplicationStateTracker>> {
    struct __compressed_pair<WebKit::ApplicationStateTracker *, std::default_delete<WebKit::ApplicationStateTracker>> {
        struct ApplicationStateTracker *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::DrawingAreaProxy, std::default_delete<WebKit::DrawingAreaProxy>> {
    struct __compressed_pair<WebKit::DrawingAreaProxy *, std::default_delete<WebKit::DrawingAreaProxy>> {
        struct DrawingAreaProxy *_field1;
    } _field1;
};

struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> {
    struct __compressed_pair<WebKit::GestureRecognizerConsistencyEnforcer *, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> {
        struct GestureRecognizerConsistencyEnforcer *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::IconLoadingDelegate, std::default_delete<WebKit::IconLoadingDelegate>> {
    struct __compressed_pair<WebKit::IconLoadingDelegate *, std::default_delete<WebKit::IconLoadingDelegate>> {
        struct IconLoadingDelegate *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::default_delete<WebKit::InputViewUpdateDeferrer>> {
    struct __compressed_pair<WebKit::InputViewUpdateDeferrer *, std::default_delete<WebKit::InputViewUpdateDeferrer>> {
        struct InputViewUpdateDeferrer *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::NativeWebMouseEvent, std::default_delete<WebKit::NativeWebMouseEvent>> {
    struct __compressed_pair<WebKit::NativeWebMouseEvent *, std::default_delete<WebKit::NativeWebMouseEvent>> {
        struct NativeWebMouseEvent *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::NavigationState, std::default_delete<WebKit::NavigationState>> {
    struct __compressed_pair<WebKit::NavigationState *, std::default_delete<WebKit::NavigationState>> {
        struct NavigationState *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> {
    struct __compressed_pair<WebKit::PageClientImpl *, std::default_delete<WebKit::PageClientImpl>> {
        struct PageClientImpl *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>> {
    struct __compressed_pair<WebKit::PageLoadStateObserver *, std::default_delete<WebKit::PageLoadStateObserver>> {
        struct PageLoadStateObserver *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::RemoteObjectRegistry, std::default_delete<WebKit::RemoteObjectRegistry>> {
    struct __compressed_pair<WebKit::RemoteObjectRegistry *, std::default_delete<WebKit::RemoteObjectRegistry>> {
        struct RemoteObjectRegistry *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::ResourceLoadDelegate, std::default_delete<WebKit::ResourceLoadDelegate>> {
    struct __compressed_pair<WebKit::ResourceLoadDelegate *, std::default_delete<WebKit::ResourceLoadDelegate>> {
        struct ResourceLoadDelegate *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> {
    struct __compressed_pair<WebKit::SmartMagnificationController *, std::default_delete<WebKit::SmartMagnificationController>> {
        struct SmartMagnificationController *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::UIDelegate, std::default_delete<WebKit::UIDelegate>> {
    struct __compressed_pair<WebKit::UIDelegate *, std::default_delete<WebKit::UIDelegate>> {
        struct UIDelegate *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::ViewGestureController, std::default_delete<WebKit::ViewGestureController>> {
    struct __compressed_pair<WebKit::ViewGestureController *, std::default_delete<WebKit::ViewGestureController>> {
        struct ViewGestureController *__value_;
    } __ptr_;
};

struct unique_ptr<WebKit::WebPagePreferencesCaptivePortalModeObserver, std::default_delete<WebKit::WebPagePreferencesCaptivePortalModeObserver>> {
    struct __compressed_pair<WebKit::WebPagePreferencesCaptivePortalModeObserver *, std::default_delete<WebKit::WebPagePreferencesCaptivePortalModeObserver>> {
        struct WebPagePreferencesCaptivePortalModeObserver *__value_;
    } __ptr_;
};

struct variant<WTF::RefPtr<JSC::ArrayBufferView>, WTF::RefPtr<JSC::ArrayBuffer>> {
    struct __impl<WTF::RefPtr<JSC::ArrayBufferView>, WTF::RefPtr<JSC::ArrayBuffer>> {
        union __union<std::__variant_detail::_Trait::_Available, 0UL, WTF::RefPtr<JSC::ArrayBufferView>, WTF::RefPtr<JSC::ArrayBuffer>> {
            char _field1;
            struct __alt<0UL, WTF::RefPtr<JSC::ArrayBufferView>> {
                struct RefPtr<JSC::ArrayBufferView, WTF::RawPtrTraits<JSC::ArrayBufferView>, WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>> _field1;
            } _field2;
            union __union<std::__variant_detail::_Trait::_Available, 1UL, WTF::RefPtr<JSC::ArrayBuffer>> {
                char _field1;
                struct __alt<1UL, WTF::RefPtr<JSC::ArrayBuffer>> {
                    struct RefPtr<JSC::ArrayBuffer, WTF::RawPtrTraits<JSC::ArrayBuffer>, WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>> _field1;
                } _field2;
                union __union<std::__variant_detail::_Trait::_Available, 2UL> _field3;
            } _field3;
        } _field1;
        unsigned int _field2;
    } _field1;
};

struct variant<std::monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
    struct __impl<std::monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
        union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 0UL, std::monostate, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
            char __dummy;
            struct __alt<0UL, std::monostate> {
                struct monostate __value;
            } __head;
            union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 1UL, WebCore::MoveData, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
                char __dummy;
                struct __alt<1UL, WebCore::MoveData> {
                    struct MoveData __value;
                } __head;
                union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 2UL, WebCore::LineData, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
                    char __dummy;
                    struct __alt<2UL, WebCore::LineData> {
                        struct LineData __value;
                    } __head;
                    union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 3UL, WebCore::ArcData, WebCore::QuadCurveData, WebCore::BezierCurveData> {
                        char __dummy;
                        struct __alt<3UL, WebCore::ArcData> {
                            struct ArcData __value;
                        } __head;
                        union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 4UL, WebCore::QuadCurveData, WebCore::BezierCurveData> {
                            char __dummy;
                            struct __alt<4UL, WebCore::QuadCurveData> {
                                struct QuadCurveData __value;
                            } __head;
                            union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 5UL, WebCore::BezierCurveData> {
                                char __dummy;
                                struct __alt<5UL, WebCore::BezierCurveData> {
                                    struct BezierCurveData __value;
                                } __head;
                                union __union<std::__variant_detail::_Trait::_TriviallyAvailable, 6UL> __tail;
                            } __tail;
                        } __tail;
                    } __tail;
                } __tail;
            } __tail;
        } __data;
        unsigned int __index;
    } __impl;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

// Template types
typedef struct NakedPtr<WebCore::AXObjectCache> {
    struct AXObjectCache *_field1;
} NakedPtr_8c2573e4;

typedef struct NakedPtr<WebKit::WebPage> {
    struct WebPage *m_ptr;
} NakedPtr_895bc996;

typedef struct NakedPtr<WebKit::WebPageProxy> {
    struct WebPageProxy *_field1;
} NakedPtr_6294102f;

typedef struct NakedRef<WebCore::Document> {
    struct Document *_field1;
} NakedRef_6a95ab0e;

typedef struct NakedRef<WebKit::NetworkSessionCocoa> {
    struct NetworkSessionCocoa *_field1;
} NakedRef_b86aa07f;

typedef struct NakedRef<WebKit::WebPage> {
    struct WebPage *_field1;
} NakedRef_f43bc9c8;

typedef struct NakedRef<WebKit::WebPageProxy> {
    struct WebPageProxy *_field1;
} NakedRef_0c67ce5b;

typedef struct NakedRef<WebKit::WebProcessPool> {
    struct WebProcessPool *_field1;
} NakedRef_6f117943;

typedef struct ObjectIdentifier<WebCore::PageIdentifierType> {
    unsigned long long m_identifier;
} ObjectIdentifier_8136369e;

typedef struct ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType> {
    unsigned long long m_identifier;
} ObjectIdentifier_073ef476;

typedef struct ObjectIdentifier<WebKit::LegacyCustomProtocolIDType> {
    unsigned long long m_identifier;
} ObjectIdentifier_93c10595;

typedef struct ObjectIdentifier<WebKit::TapIdentifierType> {
    unsigned long long m_identifier;
} ObjectIdentifier_e7ec9792;

typedef struct ObjectIdentifier<WebKit::WebPageProxyIdentifierType> {
    unsigned long long m_identifier;
} ObjectIdentifier_b2f7915a;

typedef struct OptionSet<WebCore::ActivityState::Flag> {
    unsigned int _field1;
} OptionSet_05ce0fa5;

typedef struct OptionSet<WebCore::DragSourceAction> {
    unsigned char m_storage;
} OptionSet_401d6bae;

typedef struct OptionSet<WebCore::ModalContainerControlType> {
    unsigned char _field1;
} OptionSet_f9f46cda;

typedef struct OptionSet<WebCore::TouchAction> {
    unsigned char _field1;
} OptionSet_6c8dcb60;

typedef struct OptionSet<WebKit::ViewStabilityFlag> {
    unsigned char m_storage;
} OptionSet_7e3fdc04;

typedef struct RectEdges<bool> {
    struct array<bool, 4UL> _field1;
} RectEdges_e190dc78;

typedef struct RectEdges<float> {
    struct array<float, 4UL> m_sides;
} RectEdges_cec980bd;

typedef struct Ref<API::PageConfiguration, WTF::RawPtrTraits<API::PageConfiguration>> {
    struct PageConfiguration *_field1;
} Ref_2324e752;

typedef struct Ref<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>> {
    struct TextIndicator *_field1;
} Ref_72f36232;

typedef struct RefPtr<WebKit::SandboxExtension, WTF::RawPtrTraits<WebKit::SandboxExtension>, WTF::DefaultRefDerefTraits<WebKit::SandboxExtension>> {
    struct SandboxExtension *m_ptr;
} RefPtr_585b44c9;

typedef struct RefPtr<WebKit::ViewSnapshot, WTF::RawPtrTraits<WebKit::ViewSnapshot>, WTF::DefaultRefDerefTraits<WebKit::ViewSnapshot>> {
    struct ViewSnapshot *_field1;
} RefPtr_a6359d05;

typedef struct RetainPtr<CGImage *> {
    void *m_ptr;
} RetainPtr_c27edd19;

typedef struct RetainPtr<NSArray<_WKElementAction *>> {
    void *_field1;
} RetainPtr_c682c8da;

typedef struct RetainPtr<NSArray> {
    void *m_ptr;
} RetainPtr_f649c0c3;

typedef struct RetainPtr<NSDateFormatter> {
    void *_field1;
} RetainPtr_6b9d0b10;

typedef struct RetainPtr<UIImage> {
    void *m_ptr;
} RetainPtr_337fe565;

typedef struct RetainPtr<VKImageAnalyzerRequest> {
    void *_field1;
} RetainPtr_43c299e4;

typedef struct RetainPtr<WKTargetedPreviewContainer> {
    void *m_ptr;
} RetainPtr_f11d553d;

typedef struct RetainPtr<WKWebView> {
    void *_field1;
} RetainPtr_15a4d79f;

typedef struct RetainPtr<_WKActivatedElementInfo> {
    void *m_ptr;
} RetainPtr_5a40b48a;

typedef struct Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> {
    struct String *m_buffer;
    unsigned int m_capacity;
    unsigned int m_size;
} Vector_07070297;

typedef struct optional<CGPoint> {
    union {
        char __null_state_;
        struct CGPoint __val_;
    } ;
    _Bool __engaged_;
} optional_dc4c3092;

typedef struct optional<WebCore::FloatPoint> {
    union {
        char __null_state_;
        struct FloatPoint __val_;
    } ;
    _Bool __engaged_;
} optional_abdb4e36;

typedef struct optional<WebCore::FloatRect> {
    union {
        char _field1;
        struct FloatRect _field2;
    } _field1;
    _Bool _field2;
} optional_acc783a3;

typedef struct optional<WebCore::KeyboardScroll> {
    union {
        char __null_state_;
        struct KeyboardScroll __val_;
    } ;
    _Bool __engaged_;
} optional_105a5b27;

typedef struct optional<WebCore::TextIndicatorData> {
    union {
        char __null_state_;
        struct TextIndicatorData __val_;
    } ;
    _Bool __engaged_;
} optional_99ee4799;

typedef struct optional<WebKit::InteractionInformationAtPosition> {
    union {
        char __null_state_;
        struct InteractionInformationAtPosition __val_;
    } ;
    _Bool __engaged_;
} optional_4e703abe;

typedef struct optional<bool> {
    union {
        char __null_state_;
        _Bool __val_;
    } ;
    _Bool __engaged_;
} optional_34114161;

typedef struct optional<unsigned int> {
    union {
        char __null_state_;
        unsigned int __val_;
    } ;
    _Bool __engaged_;
} optional_488f82df;

typedef struct unique_ptr<WebKit::DrawingAreaProxy, std::default_delete<WebKit::DrawingAreaProxy>> {
    struct __compressed_pair<WebKit::DrawingAreaProxy *, std::default_delete<WebKit::DrawingAreaProxy>> {
        struct DrawingAreaProxy *_field1;
    } _field1;
} unique_ptr_7306e13f;

typedef struct unique_ptr<WebKit::NativeWebMouseEvent, std::default_delete<WebKit::NativeWebMouseEvent>> {
    struct __compressed_pair<WebKit::NativeWebMouseEvent *, std::default_delete<WebKit::NativeWebMouseEvent>> {
        struct NativeWebMouseEvent *__value_;
    } __ptr_;
} unique_ptr_8861e41c;

#pragma mark Typedef'd Unions

typedef union {
    void *m_table;
    unsigned int *m_tableForLLDB;
} CDUnion_f697d383;

typedef union {
    char __null_state_;
    unsigned char __val_;
} CDUnion_fd7d43d3;

typedef union {
    char __null_state_;
    int __val_;
} CDUnion_81a57ede;

