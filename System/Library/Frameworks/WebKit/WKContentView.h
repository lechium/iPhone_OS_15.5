//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <WebKit/UIContextMenuInteractionDelegate-Protocol.h>
#import <WebKit/UIDragInteractionDelegate-Protocol.h>
#import <WebKit/UIDropInteractionDelegate-Protocol.h>
#import <WebKit/UIGestureRecognizerDelegate-Protocol.h>
#import <WebKit/UIPreviewItemDelegate-Protocol.h>
#import <WebKit/UITextAutoscrolling-Protocol.h>
#import <WebKit/UITextInputMultiDocument-Protocol.h>
#import <WebKit/UITextInputPrivate-Protocol.h>
#import <WebKit/UIWKInteractionViewProtocol-Protocol.h>
#import <WebKit/UIWebFormAccessoryDelegate-Protocol.h>
#import <WebKit/UIWebTouchEventsGestureRecognizerDelegate-Protocol.h>
#import <WebKit/WKActionSheetAssistantDelegate-Protocol.h>
#import <WebKit/WKContactPickerDelegate-Protocol.h>
#import <WebKit/WKDeferringGestureRecognizerDelegate-Protocol.h>
#import <WebKit/WKFileUploadPanelDelegate-Protocol.h>
#import <WebKit/WKHoverPlatterDelegate-Protocol.h>
#import <WebKit/WKKeyboardScrollViewAnimatorDelegate-Protocol.h>
#import <WebKit/WKShareSheetDelegate-Protocol.h>
#import <WebKit/WKTouchActionGestureRecognizerDelegate-Protocol.h>
#import <WebKit/_WKWebViewPrintProvider-Protocol.h>

@class NSArray, NSDictionary, NSIndexSet, NSString, NSUndoManager, RTIInputSystemSourceSession, UIColor, UIGestureRecognizer, UIImage, UIInputContextHistory, UITextInputAssistantItem, UITextInputPasswordRules, UITextInteractionAssistant, UITextPosition, UITextRange, UIView, UIWKTextInteractionAssistant, UIWebFormAccessory, UIWebTouchEventsGestureRecognizer, WKBrowsingContextController, WKDateTimeInputControl, WKFormSelectControl, _UISupplementalLexicon;
@protocol UITextInputDelegate, UITextInputSuggestionDelegate, UITextInputTokenizer, WKFormControl;

__attribute__((visibility("hidden")))
@interface WKContentView <_WKWebViewPrintProvider, UIGestureRecognizerDelegate, UITextAutoscrolling, UITextInputMultiDocument, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWebTouchEventsGestureRecognizerDelegate, UIWKInteractionViewProtocol, WKActionSheetAssistantDelegate, WKFileUploadPanelDelegate, WKKeyboardScrollViewAnimatorDelegate, WKDeferringGestureRecognizerDelegate, WKContactPickerDelegate, WKShareSheetDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, WKTouchActionGestureRecognizerDelegate, WKHoverPlatterDelegate, UIContextMenuInteractionDelegate, UIPreviewItemDelegate>
{
    struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> _page;	// 8 = 0x8
    struct WeakObjCPtr<WKWebView> _webView;	// 16 = 0x10
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForImmediatelyResettableGestures;	// 24 = 0x18
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForDelayedResettableGestures;	// 32 = 0x20
    struct RetainPtr<WKDeferringGestureRecognizer> _touchStartDeferringGestureRecognizerForSyntheticTapGestures;	// 40 = 0x28
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForImmediatelyResettableGestures;	// 48 = 0x30
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForDelayedResettableGestures;	// 56 = 0x38
    struct RetainPtr<WKDeferringGestureRecognizer> _touchEndDeferringGestureRecognizerForSyntheticTapGestures;	// 64 = 0x40
    struct optional<WTF::HashSet<WTF::RetainPtr<WKDeferringGestureRecognizer>>> _failedTouchStartDeferringGestures;	// 72 = 0x48
    struct RetainPtr<WKDeferringGestureRecognizer> _imageAnalysisDeferringGestureRecognizer;	// 88 = 0x58
    struct unique_ptr<WebKit::GestureRecognizerConsistencyEnforcer, std::default_delete<WebKit::GestureRecognizerConsistencyEnforcer>> _gestureRecognizerConsistencyEnforcer;	// 96 = 0x60
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> _touchEventGestureRecognizer;	// 104 = 0x68
    _Bool _touchEventsCanPreventNativeGestures;	// 112 = 0x70
    _Bool _preventsPanningInXAxis;	// 113 = 0x71
    _Bool _preventsPanningInYAxis;	// 114 = 0x72
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _singleTapGestureRecognizer;	// 120 = 0x78
    struct RetainPtr<WKHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;	// 128 = 0x80
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;	// 136 = 0x88
    struct RetainPtr<WKSyntheticTapGestureRecognizer> _doubleTapGestureRecognizer;	// 144 = 0x90
    struct RetainPtr<UITapGestureRecognizer> _nonBlockingDoubleTapGestureRecognizer;	// 152 = 0x98
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizerForDoubleClick;	// 160 = 0xa0
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;	// 168 = 0xa8
    struct RetainPtr<UITapGestureRecognizer> _twoFingerSingleTapGestureRecognizer;	// 176 = 0xb0
    struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> _inspectorNodeSearchGestureRecognizer;	// 184 = 0xb8
    struct RetainPtr<WKTouchActionGestureRecognizer> _touchActionGestureRecognizer;	// 192 = 0xc0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionLeftSwipeGestureRecognizer;	// 200 = 0xc8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionRightSwipeGestureRecognizer;	// 208 = 0xd0
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionUpSwipeGestureRecognizer;	// 216 = 0xd8
    struct RetainPtr<UISwipeGestureRecognizer> _touchActionDownSwipeGestureRecognizer;	// 224 = 0xe0
    struct RetainPtr<WKMouseGestureRecognizer> _mouseGestureRecognizer;	// 232 = 0xe8
    unsigned char _mouseEventPolicy;	// 240 = 0xf0
    struct RetainPtr<WKHoverPlatter> _hoverPlatter;	// 248 = 0xf8
    struct RetainPtr<UIIndirectScribbleInteraction> _scribbleInteraction;	// 256 = 0x100
    struct RetainPtr<UIPointerInteraction> _pointerInteraction;	// 264 = 0x108
    _Bool _hasOutstandingPointerInteractionRequest;	// 272 = 0x110
    struct optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (UIPointerRegion *)>>> _deferredPointerInteractionRequest;	// 280 = 0x118
    struct RetainPtr<UIWKTextInteractionAssistant> _textInteractionAssistant;	// 312 = 0x138
    struct OptionSet<WebKit::SuppressSelectionAssistantReason> _suppressSelectionAssistantReasons;	// 320 = 0x140
    struct RetainPtr<UITextInputTraits> _traits;	// 328 = 0x148
    struct RetainPtr<UIWebFormAccessory> _formAccessoryView;	// 336 = 0x150
    struct RetainPtr<_UIHighlightView> _highlightView;	// 344 = 0x158
    struct RetainPtr<UIView> _interactionViewsContainerView;	// 352 = 0x160
    RetainPtr_f11d553d _contextMenuHintContainerView;	// 360 = 0x168
    struct WeakObjCPtr<UIScrollView> _scrollViewForTargetedPreview;	// 368 = 0x170
    struct CGPoint _scrollViewForTargetedPreviewInitialOffset;	// 376 = 0x178
    RetainPtr_f11d553d _dragPreviewContainerView;	// 392 = 0x188
    RetainPtr_f11d553d _dropPreviewContainerView;	// 400 = 0x190
    struct RetainPtr<NSString> _markedText;	// 408 = 0x198
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;	// 416 = 0x1a0
    struct RetainPtr<WKAirPlayRoutePicker> _airPlayRoutePicker;	// 424 = 0x1a8
    struct RetainPtr<WKFormInputSession> _formInputSession;	// 432 = 0x1b0
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;	// 440 = 0x1b8
    struct FrameInfoData _frameInfoForFileUploadPanel;	// 448 = 0x1c0
    struct RetainPtr<WKShareSheet> _shareSheet;	// 800 = 0x320
    struct RetainPtr<WKContactPicker> _contactPicker;	// 808 = 0x328
    struct RetainPtr<UIGestureRecognizer> _previewGestureRecognizer;	// 816 = 0x330
    struct RetainPtr<UIGestureRecognizer> _previewSecondaryGestureRecognizer;	// 824 = 0x338
    struct Vector<bool, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _focusStateStack;	// 832 = 0x340
    struct RetainPtr<UIContextMenuInteraction> _contextMenuInteraction;	// 848 = 0x350
    struct RetainPtr<WKContextMenuElementInfo> _contextMenuElementInfo;	// 856 = 0x358
    _Bool _showLinkPreviews;	// 864 = 0x360
    struct RetainPtr<UIViewController> _contextMenuLegacyPreviewController;	// 872 = 0x368
    struct RetainPtr<UIMenu> _contextMenuLegacyMenu;	// 880 = 0x370
    _Bool _contextMenuHasRequestedLegacyData;	// 888 = 0x378
    _Bool _contextMenuActionProviderDelegateNeedsOverride;	// 889 = 0x379
    _Bool _isDisplayingContextMenuWithAnimation;	// 890 = 0x37a
    struct RetainPtr<UIPreviewItemController> _previewItemController;	// 896 = 0x380
    struct RefPtr<WebCore::TextIndicator, WTF::RawPtrTraits<WebCore::TextIndicator>, WTF::DefaultRefDerefTraits<WebCore::TextIndicator>> _textIndicator;	// 904 = 0x388
    struct RetainPtr<WebTextIndicatorLayer> _textIndicatorLayer;	// 912 = 0x390
    struct RetainPtr<UITargetedPreview> _contextMenuInteractionTargetedPreview;	// 920 = 0x398
    struct unique_ptr<WebKit::SmartMagnificationController, std::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;	// 928 = 0x3a0
    struct WeakObjCPtr<id<UITextInputDelegate>> _inputDelegate;	// 936 = 0x3a8
    ObjectIdentifier_e7ec9792 _latestTapID;	// 944 = 0x3b0
    struct TapHighlightInformation _tapHighlightInformation;	// 952 = 0x3b8
    struct WebAutocorrectionContext _lastAutocorrectionContext;	// 1016 = 0x3f8
    struct WKAutoCorrectionData _autocorrectionData;	// 1064 = 0x428
    struct InteractionInformationAtPosition _positionInformation;	// 1136 = 0x470
    struct FocusedElementInformation _focusedElementInformation;	// 1680 = 0x690
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;	// 2040 = 0x7f8
    struct BlockPtr<void (WebEvent *, bool)> _keyWebEventHandler;	// 2048 = 0x800
    struct CGPoint _lastInteractionLocation;	// 2056 = 0x808
    struct MonotonicObjectIdentifier<WebKit::TransactionIDType> _layerTreeTransactionIdAtLastInteractionStart;	// 2072 = 0x818
    struct WKSelectionDrawingInfo _lastSelectionDrawingInfo;	// 2080 = 0x820
    struct RetainPtr<WKTextRange> _cachedSelectedTextRange;	// 2144 = 0x860
    struct optional<WebKit::InteractionInformationRequest> _lastOutstandingPositionInformationRequest;	// 2152 = 0x868
    unsigned long long _positionInformationCallbackDepth;	// 2176 = 0x880
    struct Vector<std::optional<std::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)>>>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _pendingPositionInformationHandlers;	// 2184 = 0x888
    struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::default_delete<WebKit::InputViewUpdateDeferrer>> _inputViewUpdateDeferrer;	// 2200 = 0x898
    struct RetainPtr<WKKeyboardScrollViewAnimator> _keyboardScrollingAnimator;	// 2208 = 0x8a0
    struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterEditorStateUpdate;	// 2216 = 0x8a8
    struct RetainPtr<UIView<WKFormControl>> _dataListTextSuggestionsInputView;	// 2232 = 0x8b8
    struct RetainPtr<NSArray<UITextSuggestion *>> _dataListTextSuggestions;	// 2240 = 0x8c0
    struct WeakObjCPtr<WKDataListSuggestionsControl> _dataListSuggestionsControl;	// 2248 = 0x8c8
    _Bool _isEditable;	// 2256 = 0x8d0
    _Bool _showingTextStyleOptions;	// 2257 = 0x8d1
    _Bool _hasValidPositionInformation;	// 2258 = 0x8d2
    _Bool _isTapHighlightIDValid;	// 2259 = 0x8d3
    _Bool _isTapHighlightFading;	// 2260 = 0x8d4
    _Bool _potentialTapInProgress;	// 2261 = 0x8d5
    _Bool _isDoubleTapPending;	// 2262 = 0x8d6
    _Bool _longPressCanClick;	// 2263 = 0x8d7
    _Bool _hasTapHighlightForPotentialTap;	// 2264 = 0x8d8
    _Bool _selectionNeedsUpdate;	// 2265 = 0x8d9
    _Bool _shouldRestoreSelection;	// 2266 = 0x8da
    _Bool _usingGestureForSelection;	// 2267 = 0x8db
    _Bool _inspectorNodeSearchEnabled;	// 2268 = 0x8dc
    _Bool _isChangingFocusUsingAccessoryTab;	// 2269 = 0x8dd
    _Bool _didAccessoryTabInitiateFocus;	// 2270 = 0x8de
    _Bool _isExpectingFastSingleTapCommit;	// 2271 = 0x8df
    _Bool _showDebugTapHighlightsForFastClicking;	// 2272 = 0x8e0
    _Bool _textInteractionDidChangeFocusedElement;	// 2273 = 0x8e1
    _Bool _treatAsContentEditableUntilNextEditorStateUpdate;	// 2274 = 0x8e2
    _Bool _isWaitingOnPositionInformation;	// 2275 = 0x8e3
    int _commitPotentialTapPointerId;	// 2276 = 0x8e4
    _Bool _keyboardDidRequestDismissal;	// 2280 = 0x8e8
    _Bool _candidateViewNeedsUpdate;	// 2281 = 0x8e9
    _Bool _seenHardwareKeyDownInNonEditableElement;	// 2282 = 0x8ea
    _Bool _becomingFirstResponder;	// 2283 = 0x8eb
    _Bool _resigningFirstResponder;	// 2284 = 0x8ec
    _Bool _needsDeferredEndScrollingSelectionUpdate;	// 2285 = 0x8ed
    _Bool _isChangingFocus;	// 2286 = 0x8ee
    _Bool _isFocusingElementWithKeyboard;	// 2287 = 0x8ef
    _Bool _isBlurringFocusedElement;	// 2288 = 0x8f0
    _Bool _isRelinquishingFirstResponderToFocusedElement;	// 2289 = 0x8f1
    _Bool _unsuppressSoftwareKeyboardAfterNextAutocorrectionContextUpdate;	// 2290 = 0x8f2
    _Bool _isUnsuppressingSoftwareKeyboardUsingLastAutocorrectionContext;	// 2291 = 0x8f3
    _Bool _shouldZoomToFocusRectAfterShowingKeyboard;	// 2292 = 0x8f4
    _Bool _focusRequiresStrongPasswordAssistance;	// 2293 = 0x8f5
    _Bool _waitingForEditDragSnapshot;	// 2294 = 0x8f6
    long long _dropAnimationCount;	// 2296 = 0x8f8
    _Bool _hasSetUpInteractions;	// 2304 = 0x900
    unsigned long long _ignoreSelectionCommandFadeCount;	// 2312 = 0x908
    unsigned long long _activeTextInteractionCount;	// 2320 = 0x910
    long long _suppressNonEditableSingleTapTextInteractionCount;	// 2328 = 0x918
    struct CompletionHandler<void (WebCore::DOMPasteAccessResponse)> _domPasteRequestHandler;	// 2336 = 0x920
    struct optional<WebCore::DOMPasteAccessCategory> _domPasteRequestCategory;	// 2344 = 0x928
    struct BlockPtr<void (UIWKAutocorrectionContext *)> _pendingAutocorrectionContextHandler;	// 2352 = 0x930
    struct CompletionHandler<void ()> _pendingRunModalJavaScriptDialogCallback;	// 2360 = 0x938
    struct RetainPtr<NSDictionary> _additionalContextForStrongPasswordAssistance;	// 2368 = 0x940
    struct optional<int> _lastInsertedCharacterToOverrideCharacterBeforeSelection;	// 2376 = 0x948
    unsigned int _selectionChangeNestingLevel;	// 2384 = 0x950
    struct DragDropInteractionState _dragDropInteractionState;	// 2392 = 0x958
    struct RetainPtr<UIDragInteraction> _dragInteraction;	// 2848 = 0xb20
    struct RetainPtr<UIDropInteraction> _dropInteraction;	// 2856 = 0xb28
    _Bool _isAnimatingDragCancel;	// 2864 = 0xb30
    _Bool _shouldRestoreCalloutBarAfterDrop;	// 2865 = 0xb31
    struct RetainPtr<UIView> _visibleContentViewSnapshot;	// 2872 = 0xb38
    struct RetainPtr<UIView> _unselectedContentSnapshot;	// 2880 = 0xb40
    struct RetainPtr<_UITextDragCaretView> _editDropCaretView;	// 2888 = 0xb48
    struct BlockPtr<void ()> _actionToPerformAfterReceivingEditDragSnapshot;	// 2896 = 0xb50
    struct RetainPtr<WKImageAnalysisGestureRecognizer> _imageAnalysisGestureRecognizer;	// 2904 = 0xb58
    struct RetainPtr<UILongPressGestureRecognizer> _imageAnalysisTimeoutGestureRecognizer;	// 2912 = 0xb60
    struct optional<WTF::ObjectIdentifier<WebKit::ImageAnalysisRequestIdentifierType>> _pendingImageAnalysisRequestIdentifier;	// 2920 = 0xb68
    struct optional<WebCore::ElementContext> _elementPendingImageAnalysis;	// 2936 = 0xb78
    struct Vector<WTF::BlockPtr<void (WebKit::ProceedWithTextSelectionInImage)>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _actionsToPerformAfterPendingImageAnalysis;	// 3000 = 0xbb8
    struct RetainPtr<UIMenu> _contextMenuForMachineReadableCode;	// 3016 = 0xbc8
    _Bool _contextMenuWasTriggeredByImageAnalysisTimeout;	// 3024 = 0xbd0
    _Bool _isProceedingWithTextSelectionInImage;	// 3025 = 0xbd1
    struct RetainPtr<id> _imageAnalyzer;	// 3032 = 0xbd8
    struct RetainPtr<QLPreviewController> _visualSearchPreviewController;	// 3040 = 0xbe0
    RetainPtr_337fe565 _visualSearchPreviewImage;	// 3048 = 0xbe8
    struct RetainPtr<NSURL> _visualSearchPreviewImageURL;	// 3056 = 0xbf0
    struct RetainPtr<NSString> _visualSearchPreviewTitle;	// 3064 = 0xbf8
    struct CGRect _visualSearchPreviewImageBounds;	// 3072 = 0xc00
    _Bool _hasSelectableTextInImage;	// 3104 = 0xc20
    _Bool _hasVisualSearchResults;	// 3105 = 0xc21
    struct unique_ptr<WebKit::PageClientImpl, std::default_delete<WebKit::PageClientImpl>> _pageClient;	// 3112 = 0xc28
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;	// 3120 = 0xc30
    struct RetainPtr<UIView> _rootContentView;	// 3128 = 0xc38
    struct RetainPtr<UIView> _fixedClippingView;	// 3136 = 0xc40
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;	// 3144 = 0xc48
    struct RetainPtr<WKInspectorHighlightView> _inspectorHighlightView;	// 3152 = 0xc50
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForWebProcess;	// 3160 = 0xc58
    struct RetainPtr<_UILayerHostView> _visibilityPropagationViewForGPUProcess;	// 3168 = 0xc60
    struct HistoricalVelocityData _historicalKinematicData;	// 3176 = 0xc68
    struct RetainPtr<NSUndoManager> _undoManager;	// 3264 = 0xcc0
    struct RetainPtr<WKQuirkyNSUndoManager> _quirkyUndoManager;	// 3272 = 0xcc8
    unsigned long long _pdfPrintCallbackID;	// 3280 = 0xcd0
    struct RetainPtr<CGPDFDocument *> _printedDocument;	// 3288 = 0xcd8
    struct Vector<WTF::RetainPtr<NSURL>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> _temporaryURLsToDeleteWhenDeallocated;	// 3296 = 0xce0
    _Bool _sizeChangedSinceLastVisibleContentRectUpdate;	// 3312 = 0xcf0
}

- (id).cxx_construct;	// IMP=0x0000000000856f87
- (void).cxx_destruct;	// IMP=0x0000000000856218
@property(nonatomic) _Bool sizeChangedSinceLastVisibleContentRectUpdate; // @synthesize sizeChangedSinceLastVisibleContentRectUpdate=_sizeChangedSinceLastVisibleContentRectUpdate;
@property(readonly, nonatomic, getter=isResigningFirstResponder) _Bool resigningFirstResponder; // @synthesize resigningFirstResponder=_resigningFirstResponder;
- (void)_screenCapturedDidChange:(id)arg1;	// IMP=0x000000000085619f
- (void)_applicationWillEnterForeground:(id)arg1;	// IMP=0x0000000000856167
- (void)_applicationDidEnterBackground:(id)arg1;	// IMP=0x000000000085612f
- (void)_applicationDidBecomeActive:(id)arg1;	// IMP=0x000000000085611a
- (void)_applicationWillResignActive:(id)arg1;	// IMP=0x00000000008560e8
- (double)_targetContentZoomScaleForRect:(const struct FloatRect *)arg1 currentScale:(double)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5;	// IMP=0x000000000085608b
- (double)_contentZoomScale;	// IMP=0x000000000085606a
- (double)_initialScaleFactor;	// IMP=0x0000000000856049
- (void)_zoomToInitialScaleWithOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000855fea
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;	// IMP=0x0000000000855f8b
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;	// IMP=0x0000000000855ee0
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;	// IMP=0x0000000000855e51
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;	// IMP=0x0000000000855dc5
- (void)_setAcceleratedCompositingRootView:(id)arg1;	// IMP=0x0000000000855c73
- (void)_layerTreeCommitComplete;	// IMP=0x0000000000855c52
- (void)_didCommitLayerTree:(const void *)arg1;	// IMP=0x0000000000855942
- (void)_gpuProcessDidCreateContextForVisibilityPropagation;	// IMP=0x0000000000855930
- (void)_webProcessDidCreateContextForVisibilityPropagation;	// IMP=0x000000000085591e
- (void)_didRelaunchProcess;	// IMP=0x00000000008558d6
- (void)_processWillSwap;	// IMP=0x00000000008558c4
- (void)_gpuProcessDidExit;	// IMP=0x00000000008558b2
- (void)_processDidExit;	// IMP=0x000000000085584b
- (unique_ptr_7306e13f)_createDrawingAreaProxy:(void *)arg1;	// IMP=0x00000000008557f2
- (void)_webViewDestroyed;	// IMP=0x00000000008557df
- (void)_accessibilityRegisterUIProcessTokens;	// IMP=0x00000000008555ec
- (void)_updateRemoteAccessibilityRegistration:(_Bool)arg1;	// IMP=0x00000000008555e6
- (void)_setAccessibilityWebProcessToken:(id)arg1;	// IMP=0x00000000008555d4
- (void)_updateForScreen:(id)arg1;	// IMP=0x000000000085557a
- (void)_windowDidMoveToScreenNotification:(id)arg1;	// IMP=0x0000000000855531
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x00000000008554b1
- (_Bool)canBecomeFocused;	// IMP=0x0000000000855420
@property(readonly, nonatomic) long long interfaceOrientation;
@property(readonly, nonatomic) NSUndoManager *undoManagerForWebView;
- (void)didZoomToScale:(double)arg1;	// IMP=0x000000000085533a
- (void)willStartZoomOrScroll;	// IMP=0x0000000000855328
- (void)didInterruptScrolling;	// IMP=0x0000000000855314
- (void)didFinishScrolling;	// IMP=0x0000000000855302
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 contentInsets:(struct UIEdgeInsets)arg3 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg4 obscuredInsets:(struct UIEdgeInsets)arg5 unobscuredSafeAreaInsets:(struct UIEdgeInsets)arg6 inputViewBounds:(struct CGRect)arg7 scale:(double)arg8 minimumScale:(double)arg9 viewStability:(OptionSet_7e3fdc04)arg10 enclosedInScrollableAncestorView:(_Bool)arg11 sendEvenIfUnchanged:(_Bool)arg12;	// IMP=0x0000000000854ea5
- (struct CGRect)_computeUnobscuredContentRectRespectingInputViewBounds:(struct CGRect)arg1 inputViewBounds:(struct CGRect)arg2;	// IMP=0x0000000000854d89
- (void)_didExitStableState;	// IMP=0x0000000000854d40
- (void)updateFixedClippingView:(struct FloatRect)arg1;	// IMP=0x0000000000854c6a
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
- (void)_hideInspectorHighlight;	// IMP=0x0000000000854b0c
- (void)_showInspectorHighlight:(const void *)arg1;	// IMP=0x0000000000854a3a
@property(readonly, nonatomic) _Bool isFocusingElement;
- (struct OpaqueWKPage *)_pageRef;	// IMP=0x0000000000854a0a
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;	// IMP=0x000000000085493a
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000854867
- (id)rootContentView;	// IMP=0x0000000000854856
- (id)webView;	// IMP=0x0000000000854845
@property(readonly, nonatomic) void *page;
- (void)_removeTemporaryDirectoriesWhenDeallocated:(void *)arg1;	// IMP=0x0000000000854796
- (void)_removeTemporaryFilesIfNecessary;	// IMP=0x00000000008546a8
- (void)dealloc;	// IMP=0x000000000085461e
- (id)initWithFrame:(struct CGRect)arg1 processPool:(NakedRef_6f117943)arg2 configuration:(void *)arg3 webView:(id)arg4;	// IMP=0x0000000000854547
- (void)_removeVisibilityPropagationViewForGPUProcess;	// IMP=0x0000000000854489
- (void)_removeVisibilityPropagationViewForWebProcess;	// IMP=0x00000000008543cb
- (void)_setupVisibilityPropagationViewForGPUProcess;	// IMP=0x0000000000854256
- (void)_setupVisibilityPropagationViewForWebProcess;	// IMP=0x0000000000854112
- (id)_commonInitializationWithProcessPool:(void *)arg1 configuration:(void *)arg2;	// IMP=0x0000000000853ba0
@property(readonly, nonatomic) struct CGPDFDocument *_wk_printedDocument;
- (_Bool)_waitForDrawToPDFCallback;	// IMP=0x00000000008579e2
- (unsigned long long)_wk_pageCountForPrintFormatter:(id)arg1;	// IMP=0x0000000000857713
- (void)captureTextFromCameraForWebView:(id)arg1;	// IMP=0x000000000087c9e2
- (void)imageAnalysisGestureDidTimeOut:(id)arg1;	// IMP=0x000000000087c5b7
- (void)imageAnalysisGestureDidFail:(id)arg1;	// IMP=0x000000000087c5a3
- (void)imageAnalysisGestureDidBegin:(id)arg1;	// IMP=0x000000000087bc9b
- (void)requestTextRecognition:(id)arg1 imageData:(const void *)arg2 identifier:(id)arg3 completionHandler:(void *)arg4;	// IMP=0x000000000087b9d1
- (_Bool)validateImageAnalysisRequestIdentifier:(ObjectIdentifier_073ef476)arg1;	// IMP=0x000000000087b90c
- (void)_updateContextMenuForMachineReadableCodeForImageAnalysis:(id)arg1;	// IMP=0x000000000087b867
- (RetainPtr_43c299e4)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2;	// IMP=0x000000000087b806
- (RetainPtr_43c299e4)createImageAnalyzerRequest:(unsigned long long)arg1 image:(struct CGImage *)arg2 imageURL:(id)arg3;	// IMP=0x000000000087b713
- (void)_cancelImageAnalysis;	// IMP=0x000000000087b62e
- (void)_tearDownImageAnalysis;	// IMP=0x000000000087b4ae
- (void)_setUpImageAnalysis;	// IMP=0x000000000087b33a
- (_Bool)hasPendingImageAnalysisRequest;	// IMP=0x000000000087b329
- (id)imageAnalyzer;	// IMP=0x000000000087b2bf
- (void)actionSheetAssistant:(id)arg1 lookUpImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;	// IMP=0x000000000087b29b
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeLookUpImageActionForElement:(id)arg2;	// IMP=0x000000000087b26a
- (void)actionSheetAssistant:(id)arg1 showTextForImage:(id)arg2 imageURL:(id)arg3 title:(id)arg4 imageBounds:(struct CGRect)arg5;	// IMP=0x000000000087b246
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeShowTextActionForElement:(id)arg2;	// IMP=0x000000000087b215
- (id)provideDataForItem:(id)arg1;	// IMP=0x000000000087b12c
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;	// IMP=0x000000000087aeb3
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;	// IMP=0x000000000087aea8
- (void)previewControllerDidDismiss:(id)arg1;	// IMP=0x000000000087ae22
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;	// IMP=0x000000000087ada4
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;	// IMP=0x000000000087ad81
- (void)presentVisualSearchPreviewControllerForImage:(id)arg1 imageURL:(id)arg2 title:(id)arg3 imageBounds:(struct CGRect)arg4 appearanceActions:(unsigned long long)arg5;	// IMP=0x000000000087abfa
- (void)startFadeOut;	// IMP=0x000000000087aaa5
- (void)teardownTextIndicatorLayer;	// IMP=0x000000000087aa64
- (void)setTextIndicatorAnimationProgress:(float)arg1;	// IMP=0x000000000087aa37
- (void)clearTextIndicator:(unsigned char)arg1;	// IMP=0x000000000087a95f
- (void)setUpTextIndicator:(Ref_72f36232)arg1;	// IMP=0x000000000087a7e1
- (void)_invokeAllActionsToPerformAfterPendingImageAnalysis:(_Bool)arg1;	// IMP=0x000000000087a6f7
- (void)_doAfterPendingImageAnalysis:(CDUnknownBlockType)arg1;	// IMP=0x000000000087a635
- (void)_endImageAnalysisGestureDeferral:(_Bool)arg1;	// IMP=0x000000000087a618
- (void)_writePromisedAttachmentToPasteboard:(void *)arg1;	// IMP=0x000000000087a102
- (void)indirectScribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;	// IMP=0x000000000087a0c4
- (void)indirectScribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;	// IMP=0x000000000087a086
- (struct CGRect)indirectScribbleInteraction:(id)arg1 frameForElement:(id)arg2;	// IMP=0x000000000087a02f
- (void)indirectScribbleInteraction:(id)arg1 focusElementIfNeeded:(id)arg2 referencePoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000879fc4
- (_Bool)indirectScribbleInteraction:(id)arg1 isElementFocused:(id)arg2;	// IMP=0x0000000000879f90
- (void)indirectScribbleInteraction:(id)arg1 requestElementsInRect:(struct CGRect)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000879f7b
- (_Bool)_elementForTextInputContextIsFocused:(id)arg1;	// IMP=0x0000000000879f07
- (id)_textInputContextByScribbleIdentifier:(id)arg1;	// IMP=0x0000000000879ead
- (void)cleanUpScribbleInteraction;	// IMP=0x0000000000879e6c
- (void)setUpScribbleInteraction;	// IMP=0x0000000000879e0f
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;	// IMP=0x0000000000879bed
- (id)pointerRegionForPositionInformation:(void *)arg1 point:(struct CGPoint)arg2;	// IMP=0x0000000000879a09
- (void)_pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008791ef
- (void)setUpPointerInteraction;	// IMP=0x0000000000879173
- (void)_showMediaControlsContextMenu:(struct FloatRect *)arg1 items:(void *)arg2 completionHandler:(void *)arg3;	// IMP=0x0000000000879156
- (void)positionInformationForHoverPlatter:(id)arg1 withRequest:(struct InteractionInformationRequest *)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000879137
- (void)_setMouseEventPolicy:(unsigned char)arg1;	// IMP=0x000000000087911b
- (void)_configureMouseGestureRecognizer;	// IMP=0x00000000008790e2
- (void)mouseGestureRecognizerChanged:(id)arg1;	// IMP=0x0000000000878f58
- (void)setUpMouseGestureRecognizer;	// IMP=0x0000000000878ec7
- (_Bool)shouldUseMouseGestureRecognizer;	// IMP=0x0000000000878d5b
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;	// IMP=0x0000000000878d10
- (void)createHighlightForNewQuickNoteWithRange:(id)arg1;	// IMP=0x0000000000878cf4
- (void)createHighlightForCurrentQuickNoteWithRange:(id)arg1;	// IMP=0x0000000000878cdb
- (void)setUpAppHighlightMenusIfNeeded;	// IMP=0x00000000008788e2
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;	// IMP=0x00000000008786e6
- (void)_dropInteraction:(id)arg1 delayedPreviewProviderForDroppingItem:(id)arg2 previewProvider:(CDUnknownBlockType)arg3;	// IMP=0x00000000008786cf
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x00000000008784fb
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;	// IMP=0x0000000000878422
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;	// IMP=0x00000000008782bd
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;	// IMP=0x0000000000877794
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;	// IMP=0x0000000000877590
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;	// IMP=0x00000000008771e1
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;	// IMP=0x0000000000876fdf
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;	// IMP=0x0000000000876f0a
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x0000000000876e8c
- (void)dragInteraction:(id)arg1 sessionDidTransferItems:(id)arg2;	// IMP=0x0000000000876e6f
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;	// IMP=0x0000000000876b05
- (_Bool)_dragInteraction:(id)arg1 item:(id)arg2 shouldDelaySetDownAnimationWithCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000876aee
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x0000000000876a3f
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;	// IMP=0x0000000000876796
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;	// IMP=0x000000000087667d
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;	// IMP=0x00000000008761f1
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;	// IMP=0x0000000000876142
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;	// IMP=0x0000000000875ea7
- (void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000875c1e
- (void)_dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000875a8c
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x0000000000875a0e
- (_Bool)_dragInteraction:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;	// IMP=0x00000000008759d4
- (_Bool)_handleDropByInsertingImagePlaceholders:(id)arg1 session:(id)arg2;	// IMP=0x0000000000875415
- (void)removeTextPlaceholder:(id)arg1 willInsertText:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000875320
- (void)insertTextPlaceholderWithSize:(struct CGSize)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008751f9
- (void)selectPositionAtPoint:(struct CGPoint)arg1 withContextRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008750b5
- (void)requestDocumentContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000874e02
- (void)adjustSelectionWithDelta:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000874d4d
- (void)presentContextMenu:(id)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x0000000000874cfe
- (void)_removeContextMenuHintContainerIfPossible;	// IMP=0x0000000000874c36
- (id)_createTargetedContextMenuHintPreviewIfPossible;	// IMP=0x00000000008742f8
- (_Bool)positionInformationHasImageOverlayDataDetector;	// IMP=0x00000000008742c5
- (id)_createTargetedContextMenuHintPreviewForFocusedElement;	// IMP=0x0000000000873f32
@property(readonly, nonatomic) _Bool supportsImagePaste;
- (id)_autofillContext;	// IMP=0x0000000000873dd0
- (id)textEffectsWindow;	// IMP=0x0000000000873d90
- (void)cancelActiveTextInteractionGestures;	// IMP=0x0000000000873d35
- (id)_itemsForBeginningOrAddingToSessionWithRegistrationLists:(id)arg1 stagedDragSource:(const void *)arg2;	// IMP=0x00000000008734a1
- (void)_restoreCalloutBarIfNeeded;	// IMP=0x0000000000873467
- (id)currentDragOrDropSession;	// IMP=0x000000000087344b
- (OptionSet_401d6bae)_allowedDragSourceActions;	// IMP=0x00000000008733d8
- (unsigned long long)_dragDestinationActionForDropSession:(id)arg1;	// IMP=0x0000000000873355
- (void)_prepareToDragPromisedAttachment:(const void *)arg1;	// IMP=0x00000000008726f5
- (void)_didChangeDragCaretRect:(struct CGRect)arg1 currentRect:(struct CGRect)arg2;	// IMP=0x0000000000872583
- (void)_didPerformDragOperation:(_Bool)arg1;	// IMP=0x0000000000872302
- (void)_deliverDelayedDropPreviewIfPossible:(optional_99ee4799)arg1;	// IMP=0x00000000008720c7
- (void)_didReceiveEditDragSnapshot:(optional_99ee4799)arg1;	// IMP=0x0000000000871e75
- (void)_willReceiveEditDragSnapshot;	// IMP=0x0000000000871e64
- (void)cleanUpDragSourceSessionState;	// IMP=0x0000000000871a55
- (struct DragData)dragDataForDropSession:(id)arg1 dragDestinationAction:(unsigned long long)arg2;	// IMP=0x0000000000871879
- (void)computeClientAndGlobalPointsForDropSession:(id)arg1 outClientPoint:(struct CGPoint *)arg2 outGlobalPoint:(struct CGPoint *)arg3;	// IMP=0x0000000000871833
- (void)_didHandleDragStartRequest:(_Bool)arg1;	// IMP=0x000000000087167d
- (void)_didHandleAdditionalDragItemsRequest:(_Bool)arg1;	// IMP=0x0000000000871463
- (void)_startDrag:(RetainPtr_c27edd19)arg1 item:(const void *)arg2;	// IMP=0x0000000000871399
- (void)teardownDragAndDropInteractions;	// IMP=0x0000000000871306
- (void)setUpDragAndDropInteractions;	// IMP=0x00000000008711c3
- (id)webViewUIDelegate;	// IMP=0x00000000008711a2
- (double)dragLiftDelay;	// IMP=0x0000000000871144
- (void)_didChangeDragInteractionPolicy;	// IMP=0x00000000008710d7
- (_Bool)deferringGestureRecognizer:(id)arg1 shouldDeferOtherGestureRecognizer:(id)arg2;	// IMP=0x0000000000870d34
- (void)deferringGestureRecognizer:(id)arg1 didEndTouchesWithEvent:(id)arg2;	// IMP=0x0000000000870c52
- (void)deferringGestureRecognizer:(id)arg1 didTransitionToState:(long long)arg2;	// IMP=0x0000000000870c20
- (_Bool)deferringGestureRecognizer:(id)arg1 willBeginTouchesWithEvent:(id)arg2;	// IMP=0x0000000000870bd2
- (void)_updateTargetedPreviewScrollViewUsingContainerScrollingNodeID:(unsigned long long)arg1;	// IMP=0x0000000000870ac0
- (void)_updateFrameOfContainerForContextMenuHintPreviewsIfNeeded;	// IMP=0x00000000008709b5
- (void)_removeContainerForContextMenuHintPreviews;	// IMP=0x000000000087093c
- (id)containerForContextMenuHintPreviews;	// IMP=0x0000000000870801
- (void)_removeContainerForDragPreviews;	// IMP=0x00000000008707ae
- (id)containerForDragPreviews;	// IMP=0x0000000000870717
- (void)_removeContainerForDropPreviews;	// IMP=0x00000000008706c4
- (id)containerForDropPreviews;	// IMP=0x000000000087062d
- (RetainPtr_f11d553d)_createPreviewContainerWithLayerName:(id)arg1;	// IMP=0x0000000000870556
- (unsigned char)_dataOwnerForPasteboard:(_Bool)arg1;	// IMP=0x00000000008704fb
- (_Bool)shouldDeferGestureDueToImageAnalysis:(id)arg1;	// IMP=0x0000000000870495
@property(readonly, nonatomic) _Bool _shouldUseLegacySelectPopoverDismissalBehavior;
@property(readonly, nonatomic) _Bool _shouldAvoidScrollingWhenFocusedContentIsVisible;
@property(readonly, nonatomic) _Bool _shouldAvoidResizingWhenInputViewBoundsChange;
@property(readonly, nonatomic) _Bool _shouldUseContextMenusForFormControls;
@property(readonly, nonatomic) _Bool _shouldUseContextMenus;
- (void)_targetedPreviewContainerDidRemoveLastSubview:(id)arg1;	// IMP=0x00000000008703b3
- (void)actionSheetAssistantDidDismissContextMenu:(id)arg1;	// IMP=0x0000000000870392
- (void)actionSheetAssistantDidShowContextMenu:(id)arg1;	// IMP=0x0000000000870371
- (void)removeContextMenuViewIfPossibleForActionSheetAssistant:(id)arg1;	// IMP=0x000000000087035f
- (id)createTargetedContextMenuHintForActionSheetAssistant:(id)arg1;	// IMP=0x000000000087034d
- (void)actionSheetAssistant:(id)arg1 getAlternateURLForImage:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000087026d
- (id)selectedTextForActionSheetAssistant:(id)arg1;	// IMP=0x000000000087025b
- (id)dataDetectionContextForActionSheetAssistant:(id)arg1 positionInformation:(const void *)arg2;	// IMP=0x0000000000870246
- (id)dataDetectionContextForPositionInformation:(const void *)arg1;	// IMP=0x0000000000870002
- (void)actionSheetAssistantDidStopInteraction:(id)arg1;	// IMP=0x000000000086ffd0
- (void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2;	// IMP=0x000000000086ff84
- (RetainPtr_f649c0c3)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr_f649c0c3)arg3;	// IMP=0x000000000086ff0b
- (struct CGRect)unoccludedWindowBoundsForActionSheetAssistant:(id)arg1;	// IMP=0x000000000086fdab
- (_Bool)actionSheetAssistant:(id)arg1 showCustomSheetForElement:(id)arg2;	// IMP=0x000000000086fcfb
- (_Bool)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;	// IMP=0x000000000086fcd5
- (void)actionSheetAssistant:(id)arg1 shareElementWithImage:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x000000000086f962
- (void)actionSheetAssistant:(id)arg1 shareElementWithURL:(id)arg2 rect:(struct CGRect)arg3;	// IMP=0x000000000086f7ac
- (void)actionSheetAssistant:(id)arg1 openElementAtLocation:(struct CGPoint)arg2;	// IMP=0x000000000086f798
- (void)actionSheetAssistant:(id)arg1 performAction:(_Bool)arg2;	// IMP=0x000000000086f781
- (void)updatePositionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x000000000086f707
- (optional_4e703abe)positionInformationForActionSheetAssistant:(id)arg1;	// IMP=0x000000000086f662
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;	// IMP=0x000000000086f65a
- (_Bool)gestureRecognizer:(id)arg1 isInterruptingMomentumScrollingWithEvent:(id)arg2;	// IMP=0x000000000086f4a2
- (_Bool)gestureRecognizer:(id)arg1 shouldIgnoreWebTouchWithEvent:(id)arg2;	// IMP=0x000000000086f485
- (void)_preserveFocusWithToken:(id)arg1 destructively:(_Bool)arg2;	// IMP=0x000000000086f3b7
- (void)stopRelinquishingFirstResponderToFocusedElement;	// IMP=0x000000000086f383
- (void)startRelinquishingFirstResponderToFocusedElement;	// IMP=0x000000000086f34f
- (_Bool)_restoreFocusWithToken:(id)arg1;	// IMP=0x000000000086f309
- (id)inputLabelText;	// IMP=0x000000000086f2a6
- (void)contactPickerDidDismiss:(id)arg1;	// IMP=0x000000000086f249
- (void)contactPickerDidPresent:(id)arg1;	// IMP=0x000000000086f228
- (void)_showContactPicker:(const struct ContactsRequestData *)arg1 completionHandler:(void *)arg2;	// IMP=0x000000000086f186
- (void)shareSheet:(id)arg1 willShowActivityItems:(id)arg2;	// IMP=0x000000000086f0f8
- (void)shareSheetDidDismiss:(id)arg1;	// IMP=0x000000000086f0b5
- (void)_showShareSheet:(const void *)arg1 inRect:(optional_acc783a3)arg2 completionHandler:(void *)arg3;	// IMP=0x000000000086ef42
- (_Bool)fileUploadPanelDestinationIsManaged:(id)arg1;	// IMP=0x000000000086ee5e
- (void)fileUploadPanelDidDismiss:(id)arg1;	// IMP=0x000000000086ee1b
- (void)_showRunOpenPanel:(struct OpenPanelParameters *)arg1 frameInfo:(const void *)arg2 resultListener:(struct WebOpenPanelResultListenerProxy *)arg3;	// IMP=0x000000000086ecb5
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2 routeSharingPolicy:(unsigned char)arg3 routingContextUID:(id)arg4;	// IMP=0x000000000086ec3a
- (void)updateTextSuggestionsForInputDelegate;	// IMP=0x000000000086eba6
@property(retain, nonatomic) NSArray *dataListTextSuggestions;
@property(retain, nonatomic) UIView<WKFormControl> *dataListTextSuggestionsInputView;
- (void)_stopSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x000000000086ea27
- (void)_startSuppressingSelectionAssistantForReason:(unsigned char)arg1;	// IMP=0x000000000086e9f5
- (_Bool)_shouldSuppressSelectionCommands;	// IMP=0x000000000086e9e1
- (_Bool)hasHiddenContentEditable;	// IMP=0x000000000086e9cd
- (_Bool)supportsTextSelectionWithCharacterGranularity;	// IMP=0x000000000086e9c5
- (_Bool)shouldAllowHidingSelectionCommands;	// IMP=0x000000000086e9b0
- (void)_updateChangedSelection:(_Bool)arg1;	// IMP=0x000000000086e200
- (void)_updateChangedSelection;	// IMP=0x000000000086e1ec
- (void)selectWordForReplacement;	// IMP=0x000000000086e10a
- (void)_selectionChanged;	// IMP=0x000000000086df6a
- (void)_updateSelectionAssistantSuppressionState;	// IMP=0x000000000086de5d
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x000000000086de2e
- (void)reloadContextViewForPresentedListViewController;	// IMP=0x000000000086de28
- (void)updateCurrentFocusedElementInformation:(void *)arg1;	// IMP=0x000000000086dcac
- (void)_updateInitialWritingDirectionIfNecessary;	// IMP=0x000000000086dc27
- (void)_didUpdateEditorState;	// IMP=0x000000000086db20
- (void)doAfterEditorStateUpdateAfterFocusingElement:(CDUnknownBlockType)arg1;	// IMP=0x000000000086da6c
- (void)_requestDOMPasteAccessForCategory:(unsigned char)arg1 elementRect:(const struct IntRect *)arg2 originIdentifier:(const void *)arg3 completionHandler:(void *)arg4;	// IMP=0x000000000086d629
- (void)_didUpdateInputMode:(unsigned char)arg1;	// IMP=0x000000000086d5ce
- (void)_hardwareKeyboardAvailabilityChanged;	// IMP=0x000000000086d5b1
@property(readonly, nonatomic) _Bool shouldIgnoreKeyboardWillHideNotification;
- (void)_updateInputContextAfterBlurringAndRefocusingElement;	// IMP=0x000000000086d4fd
- (void)_elementDidBlur;	// IMP=0x000000000086d2e6
- (void)_elementDidFocus:(const void *)arg1 userIsInteracting:(_Bool)arg2 blurPreviousNode:(_Bool)arg3 activityStateChanges:(OptionSet_05ce0fa5)arg4 userObject:(id)arg5;	// IMP=0x000000000086c7bf
- (_Bool)_shouldShowKeyboardForElement:(const void *)arg1;	// IMP=0x000000000086c784
- (void *)focusedSelectElementOptions;	// IMP=0x000000000086c76e
@property(readonly, nonatomic) const void *focusedElementInformation;
- (_Bool)_formControlRefreshEnabled;	// IMP=0x000000000086c707
- (void)_hideKeyboard;	// IMP=0x000000000086c677
- (void)_showKeyboard;	// IMP=0x000000000086c612
- (void)takeTraitsFrom:(id)arg1;	// IMP=0x000000000086c5e1
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000086c5d9
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000086c5d1
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000086c5c9
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;	// IMP=0x000000000086c4fe
- (_Bool)hasSelection;	// IMP=0x000000000086c4f6
- (id)fontForCaretSelection;	// IMP=0x000000000086c474
- (id)textColorForCaretSelection;	// IMP=0x000000000086c45b
- (void)selectAll;	// IMP=0x000000000086c455
- (_Bool)hasContent;	// IMP=0x000000000086c42d
- (void)setMarkedText:(id)arg1;	// IMP=0x000000000086c427
- (id)wordRangeContainingCaretSelection;	// IMP=0x000000000086c41f
- (id)wordContainingCaretSelection;	// IMP=0x000000000086c417
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x000000000086c40f
- (void)moveForward:(unsigned int)arg1;	// IMP=0x000000000086c409
- (void)moveBackward:(unsigned int)arg1;	// IMP=0x000000000086c403
- (id)metadataDictionariesForDictationResults;	// IMP=0x000000000086c3fb
@property(nonatomic) long long selectionGranularity;
- (id)automaticallySelectedOverlay;	// IMP=0x000000000086c3e1
- (void)setBottomBufferHeight:(double)arg1;	// IMP=0x000000000086c3db
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c3af
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c383
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c321
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c2f5
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c2c9
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c29d
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c23b
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c20f
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c1e3
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c1b7
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c18b
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;	// IMP=0x000000000086c15f
- (void)_transpose;	// IMP=0x000000000086c146
- (void)_deleteToEndOfParagraph;	// IMP=0x000000000086c12d
- (void)_deleteForwardAndNotify:(_Bool)arg1;	// IMP=0x000000000086c114
- (void)_deleteToEndOfLine;	// IMP=0x000000000086c0fb
- (void)_deleteToStartOfLine;	// IMP=0x000000000086c0e2
- (void)_deleteForwardByWord;	// IMP=0x000000000086c0c9
- (void)_deleteByWord;	// IMP=0x000000000086c0b0
- (void)executeEditCommandWithCallback:(id)arg1;	// IMP=0x000000000086bf3e
- (void)keyboardScrollViewAnimatorDidFinishScrolling:(id)arg1;	// IMP=0x000000000086bf1d
- (void)keyboardScrollViewAnimatorWillScroll:(id)arg1;	// IMP=0x000000000086bf0b
- (double)keyboardScrollViewAnimator:(id)arg1 distanceForIncrement:(unsigned char)arg2 inDirection:(unsigned char)arg3;	// IMP=0x000000000086bd51
- (_Bool)isScrollableForKeyboardScrollViewAnimator:(id)arg1;	// IMP=0x000000000086bcec
- (void)dismissFilePicker;	// IMP=0x000000000086bccf
- (id)filePickerAcceptedTypeIdentifiers;	// IMP=0x000000000086bca4
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;	// IMP=0x000000000086ba8c
- (void)_didHandleKeyEvent:(id)arg1 eventWasHandled:(_Bool)arg2;	// IMP=0x000000000086b9dd
- (void)handleKeyWebEvent:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000086b7ea
- (void)handleKeyWebEvent:(id)arg1;	// IMP=0x000000000086b790
- (void)generateSyntheticEditingCommand:(unsigned char)arg1;	// IMP=0x000000000086b779
- (void)_handleKeyUIEvent:(id)arg1;	// IMP=0x000000000086b695
- (_Bool)requiresKeyEvents;	// IMP=0x000000000086b68d
- (_Bool)shouldSuppressUpdateCandidateView;	// IMP=0x000000000086b67d
- (void)modifierFlagsDidChangeFrom:(long long)arg1 to:(long long)arg2;	// IMP=0x000000000086b53b
- (void)_didFinishTextInteractionInTextInputContext:(id)arg1;	// IMP=0x000000000086b4b0
- (void)_willBeginTextInteractionInTextInputContext:(id)arg1;	// IMP=0x000000000086b437
- (void)_requestTextInputContextsInRect:(struct CGRect)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000086b25b
- (void)_focusTextInputContext:(id)arg1 placeCaretAt:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000086b064
- (_Bool)_isTextInputContextFocused:(id)arg1;	// IMP=0x000000000086aff9
- (struct CGRect)rectContainingCaretSelection;	// IMP=0x000000000086afdb
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;	// IMP=0x000000000086afd5
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;	// IMP=0x000000000086afcf
- (id)selectedDOMRange;	// IMP=0x000000000086afc7
- (struct _NSRange)_markedTextNSRange;	// IMP=0x000000000086afb5
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;	// IMP=0x000000000086af97
- (struct _NSRange)selectionRange;	// IMP=0x000000000086af85
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (void)_updateTextInputTraits:(id)arg1;	// IMP=0x000000000086aa0d
- (id)textInputTraits;	// IMP=0x000000000086a9ad
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1 alternatives:(id)arg2 style:(long long)arg3;	// IMP=0x000000000086a727
- (void)insertText:(id)arg1;	// IMP=0x000000000086a5f0
- (_Bool)_shouldSimulateKeyboardInputOnTextInsertion;	// IMP=0x000000000086a5d3
- (void)deleteBackward;	// IMP=0x000000000086a545
- (id)characterRangeAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000086a53d
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;	// IMP=0x000000000086a535
- (id)closestPositionToPoint:(struct CGPoint)arg1;	// IMP=0x000000000086a52d
- (struct CGRect)firstRectForRange:(id)arg1;	// IMP=0x000000000086a50f
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;	// IMP=0x000000000086a47a
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x000000000086a472
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x000000000086a46a
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;	// IMP=0x000000000086a462
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000086a452
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000086a44a
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;	// IMP=0x000000000086a442
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;	// IMP=0x000000000086a43a
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;	// IMP=0x000000000086a432
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;	// IMP=0x000000000086a3e6
- (void)_setMarkedText:(id)arg1 highlights:(const void *)arg2 selectedRange:(struct _NSRange)arg3;	// IMP=0x000000000086a2df
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x000000000086a295
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;	// IMP=0x0000000000869f80
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;	// IMP=0x0000000000869d98
- (_Bool)hasMarkedText;	// IMP=0x0000000000869d74
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;	// IMP=0x0000000000869d23
- (struct CGRect)caretRectForPosition:(id)arg1;	// IMP=0x0000000000869ced
- (struct FloatRect)_scaledCaretRectForSelectionEnd:(struct FloatRect)arg1;	// IMP=0x0000000000869989
- (struct FloatRect)_scaledCaretRectForSelectionStart:(struct FloatRect)arg1;	// IMP=0x0000000000869918
- (void)replaceRange:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000869912
- (id)textInRange:(id)arg1;	// IMP=0x00000000008698af
- (void)insertTextSuggestion:(id)arg1;	// IMP=0x0000000000869670
- (void)_didChangeWebViewEditability;	// IMP=0x00000000008695b1
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;	// IMP=0x00000000008694e4
- (void)endSelectionChange;	// IMP=0x00000000008694a1
- (void)beginSelectionChange;	// IMP=0x0000000000869466
- (_Bool)_allowAnimatedUpdateSelectionRectViews;	// IMP=0x000000000086945e
- (void)_updateAccessory;	// IMP=0x0000000000869371
- (void)accessoryOpen;	// IMP=0x0000000000869313
@property(readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
- (void)accessoryAutoFill;	// IMP=0x0000000000869208
- (void)accessoryTab:(_Bool)arg1;	// IMP=0x0000000000869124
- (void)updateFocusedElementFocusedWithDataListDropdown:(_Bool)arg1;	// IMP=0x0000000000869104
- (void)updateFocusedElementSelectedIndex:(unsigned int)arg1 allowsMultipleSelection:(_Bool)arg2;	// IMP=0x00000000008690ac
- (void)updateFocusedElementValueAsColor:(id)arg1;	// IMP=0x0000000000868f29
- (void)updateFocusedElementValue:(id)arg1;	// IMP=0x0000000000868e09
- (void)accessoryDone;	// IMP=0x0000000000868da1
- (void)accessoryClear;	// IMP=0x0000000000868cfb
- (void)_setDoubleTapGesturesEnabled:(_Bool)arg1;	// IMP=0x0000000000868bb7
- (struct Color)_tapHighlightColorForFastClick:(_Bool)arg1;	// IMP=0x0000000000868b8d
- (void)_becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000868a82
- (void)_previousAccessoryTabForWebView:(id)arg1;	// IMP=0x0000000000868a6e
- (void)_nextAccessoryTabForWebView:(id)arg1;	// IMP=0x0000000000868a57
- (void)_didCommitLoadForMainFrame;	// IMP=0x0000000000868986
- (void)_didStartProvisionalLoadForMainFrame;	// IMP=0x0000000000868921
- (void)runModalJavaScriptDialog:(void *)arg1;	// IMP=0x00000000008688b6
- (void)unsuppressSoftwareKeyboardUsingLastAutocorrectionContextIfNeeded;	// IMP=0x000000000086885e
- (void)updateSoftwareKeyboardSuppressionStateFromWebView;	// IMP=0x00000000008687b4
- (void)_handleAutocorrectionContext:(const void *)arg1;	// IMP=0x0000000000868710
- (void)requestAutocorrectionContextWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008684d0
- (void)_cancelPendingAutocorrectionContextHandler;	// IMP=0x0000000000868498
- (void)_invokePendingAutocorrectionContextHandler:(id)arg1;	// IMP=0x0000000000868451
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008682ce
- (void)requestDictationContext:(CDUnknownBlockType)arg1;	// IMP=0x000000000086822c
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000868133
- (struct CGRect)textLastRect;	// IMP=0x00000000008680a2
- (struct CGRect)textFirstRect;	// IMP=0x000000000086801f
- (_Bool)_selectionAtDocumentStart;	// IMP=0x0000000000868004
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;	// IMP=0x0000000000867fbc
- (unsigned int)_characterBeforeCaretSelection;	// IMP=0x0000000000867f90
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 withBoundary:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000867e3e
- (void)updateSelectionWithExtentPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000867d0b
- (void)beginSelectionInDirection:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000867c39
- (void)selectTextWithGranularity:(long long)arg1 atPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000867af5
- (void)moveSelectionAtBoundary:(long long)arg1 inDirection:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008679e6
- (void)selectPositionAtBoundary:(long long)arg1 inDirection:(long long)arg2 fromPoint:(struct CGPoint)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000867899
- (void)_selectPositionAtPoint:(struct CGPoint)arg1 stayingWithinFocusedElement:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008677a1
- (void)selectPositionAtPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000086774a
- (void)requestRectsToEvadeForSelectionCommandsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000867578
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008673d5
@property(readonly, nonatomic) const void *autocorrectionData;
- (void)moveByOffset:(long long)arg1;	// IMP=0x00000000008672f3
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;	// IMP=0x00000000008671d0
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;	// IMP=0x00000000008670e3
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;	// IMP=0x0000000000866fb9
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;	// IMP=0x0000000000866fa1
- (_Bool)_hasFocusedElement;	// IMP=0x0000000000866f89
- (void)_didPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x0000000000866f6a
- (void)_willPerformAction:(SEL)arg1 sender:(id)arg2;	// IMP=0x0000000000866f4b
- (_Bool)_handleDOMPasteRequestWithResult:(unsigned char)arg1;	// IMP=0x0000000000866e24
- (void)_accessibilityClearSelection;	// IMP=0x0000000000866df2
- (void)_accessibilityStoreSelection;	// IMP=0x0000000000866dc0
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000866c6a
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)arg1 withText:(id)arg2;	// IMP=0x0000000000866c55
- (void)_accessibilityRetrieveRectsEnclosingSelectionOffset:(long long)arg1 withGranularity:(long long)arg2;	// IMP=0x0000000000866b82
- (void)accessibilityRetrieveSpeakSelectionContent;	// IMP=0x0000000000866a57
- (void)_defineForWebView:(id)arg1;	// IMP=0x0000000000866953
- (void)_showDictionary:(id)arg1;	// IMP=0x00000000008668c6
- (void)_showTextStyleOptionsForWebView:(id)arg1;	// IMP=0x000000000086689e
- (void)toggleUnderlineForWebView:(id)arg1;	// IMP=0x0000000000866831
- (void)toggleItalicsForWebView:(id)arg1;	// IMP=0x00000000008667c4
- (void)toggleBoldfaceForWebView:(id)arg1;	// IMP=0x0000000000866757
- (_Bool)shouldSynthesizeKeyEvents;	// IMP=0x0000000000866729
- (void)selectAllForWebView:(id)arg1;	// IMP=0x0000000000866693
- (void)selectForWebView:(id)arg1;	// IMP=0x00000000008665c2
- (void)_pasteAsQuotationForWebView:(id)arg1;	// IMP=0x0000000000866534
- (void)pasteForWebView:(id)arg1;	// IMP=0x000000000086646e
- (void)cutForWebView:(id)arg1;	// IMP=0x0000000000866455
- (void)copyForWebView:(id)arg1;	// IMP=0x00000000008663c7
- (void)_keyboardDidRequestDismissal:(id)arg1;	// IMP=0x000000000086639b
- (void)_didHideMenu:(id)arg1;	// IMP=0x0000000000866373
- (void)_willHideMenu:(id)arg1;	// IMP=0x000000000086635f
- (id)targetForActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000866330
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x000000000086626f
- (_Bool)canPerformActionForWebView:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000865585
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000865372
- (_Bool)shouldAllowAppHighlightCreation;	// IMP=0x0000000000865279
- (void)tintColorDidChange;	// IMP=0x00000000008651b9
- (void)_updateInteractionTintColor:(id)arg1;	// IMP=0x0000000000865188
- (id)_cascadeInteractionTintColor;	// IMP=0x0000000000864faa
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;	// IMP=0x0000000000864dc2
- (void)toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x0000000000864db0
- (void)_setTextColorForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x0000000000864c51
- (void)_setFontSizeForWebView:(double)arg1 sender:(id)arg2;	// IMP=0x0000000000864bca
- (void)_setFontForWebView:(id)arg1 sender:(id)arg2;	// IMP=0x00000000008649d8
- (void)decreaseSizeForWebView:(id)arg1;	// IMP=0x000000000086491a
- (void)increaseSizeForWebView:(id)arg1;	// IMP=0x000000000086485c
- (void)_toggleStrikeThroughForWebView:(id)arg1;	// IMP=0x00000000008647ce
- (void)_changeListTypeForWebView:(id)arg1;	// IMP=0x00000000008647b9
- (void)_decreaseListLevelForWebView:(id)arg1;	// IMP=0x00000000008647a4
- (void)_increaseListLevelForWebView:(id)arg1;	// IMP=0x000000000086478f
- (void)pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x000000000086477d
- (void)_pasteAndMatchStyleForWebView:(id)arg1;	// IMP=0x00000000008646ef
- (void)alignJustifiedForWebView:(id)arg1;	// IMP=0x00000000008646dd
- (void)_alignJustifiedForWebView:(id)arg1;	// IMP=0x000000000086464f
- (void)alignCenterForWebView:(id)arg1;	// IMP=0x000000000086463d
- (void)_alignCenterForWebView:(id)arg1;	// IMP=0x00000000008645af
- (void)alignRightForWebView:(id)arg1;	// IMP=0x000000000086459d
- (void)_alignRightForWebView:(id)arg1;	// IMP=0x000000000086450f
- (void)alignLeftForWebView:(id)arg1;	// IMP=0x00000000008644fd
- (void)_alignLeftForWebView:(id)arg1;	// IMP=0x000000000086446f
- (void)outdentForWebView:(id)arg1;	// IMP=0x000000000086445d
- (void)_outdentForWebView:(id)arg1;	// IMP=0x00000000008643cf
- (void)indentForWebView:(id)arg1;	// IMP=0x00000000008643bd
- (void)_indentForWebView:(id)arg1;	// IMP=0x000000000086432f
- (void)insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x000000000086431d
- (void)_insertNestedUnorderedListForWebView:(id)arg1;	// IMP=0x000000000086428f
- (void)insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x000000000086427d
- (void)_insertNestedOrderedListForWebView:(id)arg1;	// IMP=0x00000000008641ef
- (void)insertUnorderedListForWebView:(id)arg1;	// IMP=0x00000000008641dd
- (void)_insertUnorderedListForWebView:(id)arg1;	// IMP=0x000000000086414f
- (void)insertOrderedListForWebView:(id)arg1;	// IMP=0x000000000086413d
- (void)_insertOrderedListForWebView:(id)arg1;	// IMP=0x00000000008640af
- (void)replaceForWebView:(id)arg1;	// IMP=0x0000000000864077
- (void)_transliterateChineseForWebView:(id)arg1;	// IMP=0x0000000000864028
- (void)_promptForReplaceForWebView:(id)arg1;	// IMP=0x0000000000863fd2
- (void)selectWordBackward;	// IMP=0x0000000000863fa0
- (void)replaceText:(id)arg1 withText:(id)arg2;	// IMP=0x0000000000863ea7
- (_Bool)isReplaceAllowed;	// IMP=0x0000000000863e90
- (void)makeTextWritingDirectionRightToLeftForWebView:(id)arg1;	// IMP=0x0000000000863e76
- (void)makeTextWritingDirectionLeftToRightForWebView:(id)arg1;	// IMP=0x0000000000863e5c
- (void)makeTextWritingDirectionNaturalForWebView:(id)arg1;	// IMP=0x0000000000863e45
- (id)alternativesForSelectedText;	// IMP=0x0000000000863d57
- (id)selectedText;	// IMP=0x0000000000863d2d
- (void)_addShortcutForWebView:(id)arg1;	// IMP=0x0000000000863c9a
- (void)_translateForWebView:(id)arg1;	// IMP=0x0000000000863bc6
- (void)_shareForWebView:(id)arg1;	// IMP=0x0000000000863b00
- (void)_lookupForWebView:(id)arg1;	// IMP=0x0000000000863a6c
- (void)_pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000863a05
- (void)_pasteAsQuotation:(id)arg1;	// IMP=0x000000000086399e
- (void)_changeListType:(id)arg1;	// IMP=0x0000000000863937
- (void)_decreaseListLevel:(id)arg1;	// IMP=0x00000000008638d0
- (void)_increaseListLevel:(id)arg1;	// IMP=0x0000000000863869
- (void)_insertNestedUnorderedList:(id)arg1;	// IMP=0x0000000000863802
- (void)_insertNestedOrderedList:(id)arg1;	// IMP=0x000000000086379b
- (void)_insertUnorderedList:(id)arg1;	// IMP=0x0000000000863734
- (void)_insertOrderedList:(id)arg1;	// IMP=0x00000000008636cd
- (void)_toggleStrikeThrough:(id)arg1;	// IMP=0x0000000000863666
- (void)_outdent:(id)arg1;	// IMP=0x00000000008635ff
- (void)_indent:(id)arg1;	// IMP=0x0000000000863598
- (void)_alignRight:(id)arg1;	// IMP=0x0000000000863531
- (void)_alignLeft:(id)arg1;	// IMP=0x00000000008634ca
- (void)_alignJustified:(id)arg1;	// IMP=0x0000000000863463
- (void)_alignCenter:(id)arg1;	// IMP=0x00000000008633fc
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;	// IMP=0x0000000000863395
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;	// IMP=0x000000000086332e
- (void)makeTextWritingDirectionNatural:(id)arg1;	// IMP=0x00000000008632c7
- (void)pasteAndMatchStyle:(id)arg1;	// IMP=0x0000000000863260
- (void)decreaseSize:(id)arg1;	// IMP=0x00000000008631f9
- (void)increaseSize:(id)arg1;	// IMP=0x0000000000863192
- (void)toggleUnderline:(id)arg1;	// IMP=0x000000000086312b
- (void)toggleItalics:(id)arg1;	// IMP=0x00000000008630c4
- (void)toggleBoldface:(id)arg1;	// IMP=0x000000000086305d
- (void)selectAll:(id)arg1;	// IMP=0x0000000000862ff6
- (void)select:(id)arg1;	// IMP=0x0000000000862f8f
- (void)replace:(id)arg1;	// IMP=0x0000000000862f28
- (void)paste:(id)arg1;	// IMP=0x0000000000862ec1
- (void)cut:(id)arg1;	// IMP=0x0000000000862e5a
- (void)copy:(id)arg1;	// IMP=0x0000000000862df3
- (void)_previousAccessoryTab:(id)arg1;	// IMP=0x0000000000862d8c
- (void)_nextAccessoryTab:(id)arg1;	// IMP=0x0000000000862d25
- (void)_transliterateChinese:(id)arg1;	// IMP=0x0000000000862cbe
- (void)_showTextStyleOptions:(id)arg1;	// IMP=0x0000000000862c57
- (void)_share:(id)arg1;	// IMP=0x0000000000862bf0
- (void)_promptForReplace:(id)arg1;	// IMP=0x0000000000862b89
- (void)_translate:(id)arg1;	// IMP=0x0000000000862b22
- (void)_lookup:(id)arg1;	// IMP=0x0000000000862abb
- (void)_define:(id)arg1;	// IMP=0x0000000000862a54
- (void)_addShortcut:(id)arg1;	// IMP=0x00000000008629ed
- (void)captureTextFromCamera:(id)arg1;	// IMP=0x0000000000862986
- (id)supportedPasteboardTypesForCurrentSelection;	// IMP=0x000000000086284a
@property(readonly, nonatomic) UIView *inputAccessoryViewForWebView;
- (id)inputAccessoryView;	// IMP=0x00000000008627d3
@property(readonly, nonatomic) UITextInputAssistantItem *inputAssistantItemForWebView;
- (id)inputAssistantItem;	// IMP=0x0000000000862783
- (_Bool)requiresAccessoryView;	// IMP=0x0000000000862717
- (_Bool)_elementTypeRequiresAccessoryView:(int)arg1;	// IMP=0x00000000008626d0
- (void)_didEndScrollingOrZooming;	// IMP=0x0000000000862669
- (void)scrollViewWillStartPanOrPinchGesture;	// IMP=0x000000000086260f
- (void)_willStartScrollingOrZooming;	// IMP=0x00000000008625d5
- (void)_positionInformationDidChange:(const void *)arg1;	// IMP=0x00000000008624e7
- (void)_invalidateCurrentPositionInformation;	// IMP=0x0000000000862351
- (void)clearSelection;	// IMP=0x0000000000862325
- (void)pasteWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000008621d9
- (void)setUpTextSelectionAssistant;	// IMP=0x0000000000862174
- (void)_attemptSyntheticClickAtLocation:(struct CGPoint)arg1 modifierFlags:(long long)arg2;	// IMP=0x00000000008620c9
- (void)_twoFingerDoubleTapRecognized:(id)arg1;	// IMP=0x0000000000862037
- (void)_nonBlockingDoubleTapRecognized:(id)arg1;	// IMP=0x0000000000861ffa
- (void)_resetIsDoubleTapPending;	// IMP=0x0000000000861fe9
- (void)_doubleTapRecognized:(id)arg1;	// IMP=0x0000000000861eac
- (void)_singleTapRecognized:(id)arg1;	// IMP=0x0000000000861c8d
- (void)_didCompleteSyntheticClick;	// IMP=0x0000000000861b99
- (void)_didNotHandleTapAsClick:(const struct IntPoint *)arg1;	// IMP=0x0000000000861b03
- (void)_commitPotentialTapFailed;	// IMP=0x0000000000861a7a
- (void)_doubleTapDidFail:(id)arg1;	// IMP=0x00000000008619e4
- (void)_singleTapDidReset:(id)arg1;	// IMP=0x000000000086192e
- (void)_singleTapIdentified:(id)arg1;	// IMP=0x000000000086176e
- (void)_endPotentialTapAndEnableDoubleTapGesturesIfNecessary;	// IMP=0x0000000000861637
- (void)_longPressRecognized:(id)arg1;	// IMP=0x000000000086154c
- (void)_twoFingerSingleTapGestureRecognized:(id)arg1;	// IMP=0x00000000008613f8
- (void)_doubleTapRecognizedForDoubleClick:(id)arg1;	// IMP=0x0000000000861336
- (void)_highlightLongPressRecognized:(id)arg1;	// IMP=0x000000000086111d
- (ObjectIdentifier_e7ec9792)nextTapIdentifier;	// IMP=0x00000000008610fd
- (id)webSelectionRects;	// IMP=0x00000000008610c3
- (id)webSelectionRectsForSelectionGeometries:(const void *)arg1;	// IMP=0x0000000000860ec3
- (_Bool)textInteractionGesture:(long long)arg1 shouldBeginAtPoint:(struct CGPoint)arg2;	// IMP=0x0000000000860be6
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;	// IMP=0x0000000000860a7e
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000860846
- (_Bool)canShowNonEmptySelectionView;	// IMP=0x0000000000860815
- (void)_fadeTapHighlightViewIfNeeded;	// IMP=0x00000000008606ca
- (void)_finishInteraction;	// IMP=0x00000000008606ad
- (void)_cancelInteraction;	// IMP=0x0000000000860685
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x000000000086000a
- (_Bool)_shouldToggleSelectionCommandsAfterTapAt:(struct CGPoint)arg1;	// IMP=0x000000000085ff44
- (_Bool)_pointIsInsideSelectionRect:(struct CGPoint)arg1 outBoundingRect:(struct FloatRect *)arg2;	// IMP=0x000000000085fdf8
- (id)_uiTextSelectionRects;	// IMP=0x000000000085fc04
- (id)_dataDetectionResults;	// IMP=0x000000000085fbec
- (void)_invokeAndRemovePendingHandlersValidForCurrentPositionInformation;	// IMP=0x000000000085f9c8
- (_Bool)_currentPositionInformationIsApproximatelyValidForRequest:(const struct InteractionInformationRequest *)arg1 radiusForApproximation:(int)arg2;	// IMP=0x000000000085f9a1
- (_Bool)_hasValidOutstandingPositionInformationRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x000000000085f97d
- (_Bool)_currentPositionInformationIsValidForRequest:(const struct InteractionInformationRequest *)arg1;	// IMP=0x000000000085f956
- (void)requestAsynchronousPositionInformationUpdate:(struct InteractionInformationRequest)arg1;	// IMP=0x000000000085f8ce
- (_Bool)ensurePositionInformationIsUpToDate:(struct InteractionInformationRequest)arg1;	// IMP=0x000000000085f72e
- (void)doAfterPositionInformationUpdate:(CDUnknownBlockType)arg1 forRequest:(struct InteractionInformationRequest)arg2;	// IMP=0x000000000085f533
- (SEL)_actionForLongPress;	// IMP=0x000000000085f517
- (SEL)_actionForLongPressFromPositionInformation:(const void *)arg1;	// IMP=0x000000000085f48a
- (void)_showDataDetectorsUIForPositionInformation:(const void *)arg1;	// IMP=0x000000000085f46d
- (void)_showDataDetectorsUI;	// IMP=0x000000000085f451
- (void)_showLinkSheet;	// IMP=0x000000000085f434
- (void)_showAttachmentSheet;	// IMP=0x000000000085f2bf
- (void)_showImageSheet;	// IMP=0x000000000085f2a2
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x000000000085f21c
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x000000000085f16e
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x000000000085ec5d
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;	// IMP=0x000000000085ebdb
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;	// IMP=0x000000000085eb5a
- (struct CGRect)_selectionClipRect;	// IMP=0x000000000085eae9
@property(readonly, nonatomic) UIView *inputViewForWebView;
- (id)inputView;	// IMP=0x000000000085ea26
- (void)resetShouldZoomToFocusRectAfterShowingKeyboard;	// IMP=0x000000000085e9f5
- (void)_zoomToRevealFocusedElement;	// IMP=0x000000000085e866
- (void)_keyboardDidShow;	// IMP=0x000000000085e81a
- (struct FloatRect)rectToRevealWhenZoomingToFocusedElement;	// IMP=0x000000000085e73f
- (_Bool)_requiresKeyboardResetOnReload;	// IMP=0x000000000085e737
- (_Bool)_requiresKeyboardWhenFirstResponder;	// IMP=0x000000000085e704
- (_Bool)_disableAutomaticKeyboardUI;	// IMP=0x000000000085e6cd
- (_Bool)_shouldShowAutomaticKeyboardUIIgnoringInputMode;	// IMP=0x000000000085e668
- (_Bool)shouldShowAutomaticKeyboardUI;	// IMP=0x000000000085e60d
- (void)_scrollingNodeScrollingDidEnd;	// IMP=0x000000000085e5b7
- (void)_scrollingNodeScrollingWillBegin;	// IMP=0x000000000085e59a
- (void)_didScroll;	// IMP=0x000000000085e55f
- (void)_cancelTouchEventGestureRecognizer;	// IMP=0x000000000085e542
- (void)_cancelLongPressGestureRecognizer;	// IMP=0x000000000085e525
- (void)_handleSmartMagnificationInformationForPotentialTap:(ObjectIdentifier_e7ec9792)arg1 renderRect:(const struct FloatRect *)arg2 fitEntireRect:(_Bool)arg3 viewportMinimumScale:(double)arg4 viewportMaximumScale:(double)arg5 nodeIsRootLevel:(_Bool)arg6;	// IMP=0x000000000085e13c
- (void)_disableDoubleTapGesturesDuringTapIfNecessary:(ObjectIdentifier_e7ec9792)arg1;	// IMP=0x000000000085e119
- (_Bool)_mayDisableDoubleTapGesturesDuringSingleTap;	// IMP=0x000000000085e109
- (void)_didGetTapHighlightForRequest:(ObjectIdentifier_e7ec9792)arg1 color:(const struct Color *)arg2 quads:(const void *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7 nodeHasBuiltInClickHandling:(_Bool)arg8;	// IMP=0x000000000085dedd
- (void)_showTapHighlight;	// IMP=0x000000000085dcef
@property(readonly, nonatomic) UIGestureRecognizer *imageAnalysisGestureRecognizer;
@property(readonly, nonatomic) struct CGRect tapHighlightViewRect;
- (void)_updateTapHighlight;	// IMP=0x000000000085d56a
- (_Bool)_isTouchEndDeferringGesture:(id)arg1;	// IMP=0x000000000085d53a
- (_Bool)_isTouchStartDeferringGesture:(id)arg1;	// IMP=0x000000000085d50a
- (void)_doneDeferringTouchEnd:(_Bool)arg1;	// IMP=0x000000000085d3e1
- (void)_doneDeferringTouchStart:(_Bool)arg1;	// IMP=0x000000000085d1fe
- (id)_touchEndDeferringGestures;	// IMP=0x000000000085d168
- (id)_touchStartDeferringGestures;	// IMP=0x000000000085d0d2
@property(readonly, nonatomic) NSArray *deferringGestures;
@property(readonly, nonatomic) void *gestureRecognizerConsistencyEnforcer;
@property(readonly, nonatomic) UIWebTouchEventsGestureRecognizer *touchEventGestureRecognizer;
- (void)_webTouchEvent:(const void *)arg1 preventsNativeGestures:(_Bool)arg2;	// IMP=0x000000000085cf73
- (void)_inspectorNodeSearchRecognized:(id)arg1;	// IMP=0x000000000085cea8
- (void)_resetPanningPreventionFlags;	// IMP=0x000000000085ce8c
- (id)touchActionActiveTouches;	// IMP=0x000000000085ce6f
- (_Bool)gestureRecognizerMayDoubleTapToZoomWebView:(id)arg1;	// IMP=0x000000000085ce4a
- (_Bool)gestureRecognizerMayPinchToZoomWebView:(id)arg1;	// IMP=0x000000000085cd65
- (_Bool)gestureRecognizerMayPanWebView:(id)arg1;	// IMP=0x000000000085ccd0
- (_Bool)gestureRecognizer:(id)arg1 shouldReceivePress:(id)arg2;	// IMP=0x000000000085ccc8
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x000000000085cb3a
- (void)_handleTouchActionsForTouchEvent:(const void *)arg1;	// IMP=0x000000000085c9cc
- (void)_webTouchEventsRecognized:(id)arg1;	// IMP=0x000000000085c370
- (_Bool)_touchEventsMustRequireGestureRecognizerToFail:(id)arg1;	// IMP=0x000000000085c2d9
- (optional_488f82df)activeTouchIdentifierForGestureRecognizer:(id)arg1;	// IMP=0x000000000085c11f
- (void)cancelPointersForGestureRecognizer:(id)arg1;	// IMP=0x000000000085be18
- (_Bool)resignFirstResponderForWebView;	// IMP=0x000000000085bc35
- (void)endEditingAndUpdateFocusAppearanceWithReason:(long long)arg1;	// IMP=0x000000000085bb17
- (_Bool)resignFirstResponder;	// IMP=0x000000000085baf6
- (_Bool)becomeFirstResponderForWebView;	// IMP=0x000000000085b913
- (_Bool)becomeFirstResponder;	// IMP=0x000000000085b8f2
- (_Bool)canBecomeFirstResponderForWebView;	// IMP=0x000000000085b8de
- (_Bool)canBecomeFirstResponder;	// IMP=0x000000000085b8ce
- (void)_resetInputViewDeferral;	// IMP=0x000000000085b8a1
- (void)_scheduleResetInputViewDeferralAfterBecomingFirstResponder;	// IMP=0x000000000085b861
- (void)_cancelPreviousResetInputViewDeferralRequest;	// IMP=0x000000000085b83b
- (void)_endEditing;	// IMP=0x000000000085b7dd
- (_Bool)setIsEditable:(_Bool)arg1;	// IMP=0x000000000085b7c1
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool shouldHideSelectionWhenScrolling;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) __weak id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const void *positionInformation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000085b525
- (void)_disableInspectorNodeSearch;	// IMP=0x000000000085b4bd
- (void)_enableInspectorNodeSearch;	// IMP=0x000000000085b433
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000085b2fc
- (void)scrollSelectionToVisible:(_Bool)arg1;	// IMP=0x000000000085b2f6
- (void)cancelAutoscroll;	// IMP=0x000000000085b2c4
- (void)startAutoscroll:(struct CGPoint)arg1;	// IMP=0x000000000085b273
- (struct CGRect)unobscuredContentRect;	// IMP=0x000000000085b248
- (id)_scroller;	// IMP=0x000000000085b227
- (double)inverseScale;	// IMP=0x000000000085b1d0
- (id)unscaledView;	// IMP=0x000000000085b1bf
- (void)_updateLongPressAndHighlightLongPressGestures;	// IMP=0x000000000085b0fb
- (void)_didChangeLinkPreviewAvailability;	// IMP=0x000000000085b0e9
- (void)_addDefaultGestureRecognizers;	// IMP=0x000000000085ae91
- (void)_removeDefaultGestureRecognizers;	// IMP=0x000000000085ac39
- (void)_cancelPendingKeyEventHandler;	// IMP=0x000000000085ab70
- (void)cleanUpInteractionPreviewContainers;	// IMP=0x000000000085ab5e
- (void)cleanUpInteraction;	// IMP=0x0000000000859dbc
- (void)setUpInteraction;	// IMP=0x0000000000858f2f
- (void)_createAndConfigureLongPressGestureRecognizer;	// IMP=0x0000000000858e82
- (void)_createAndConfigureDoubleTapGestureRecognizer;	// IMP=0x0000000000858d7b
- (id)_formInputSession;	// IMP=0x0000000000858d6a
@property(readonly, nonatomic) _Bool preventsPanningInYAxis;
@property(readonly, nonatomic) _Bool preventsPanningInXAxis;
@property(readonly, nonatomic) UIWKTextInteractionAssistant *textInteractionAssistant;
@property(readonly, nonatomic) _Bool isShowingDataListSuggestions;
- (void)_setDataListSuggestionsControl:(id)arg1;	// IMP=0x000000000087d689
- (void)_selectDataListOption:(long long)arg1;	// IMP=0x000000000087d65b
- (void)_dismissContactPickerWithContacts:(id)arg1;	// IMP=0x000000000087d63e
- (id)_contentsOfUserInterfaceItem:(id)arg1;	// IMP=0x000000000087d220
- (double)timePickerValueMinute;	// IMP=0x000000000087d1bf
- (double)timePickerValueHour;	// IMP=0x000000000087d15e
- (void)setTimePickerValueToHour:(long long)arg1 minute:(long long)arg2;	// IMP=0x000000000087d0ed
@property(readonly, nonatomic) NSString *formInputLabel;
@property(readonly, nonatomic) NSString *selectFormPopoverTitle;
@property(readonly, nonatomic) NSString *textContentTypeForTesting;
- (void)setSelectedColorForColorPicker:(id)arg1;	// IMP=0x000000000087d003
- (_Bool)selectFormAccessoryHasCheckedItemAtRow:(long long)arg1;	// IMP=0x000000000087cfa5
- (void)selectFormAccessoryPickerRow:(long long)arg1;	// IMP=0x000000000087cf44
- (void)_simulateLongPressActionAtLocation:(struct CGPoint)arg1;	// IMP=0x000000000087cd4a
- (void)_simulateElementAction:(long long)arg1 atLocation:(struct CGPoint)arg2;	// IMP=0x000000000087cb2c
- (void)_simulateTextEntered:(id)arg1;	// IMP=0x000000000087cb1a
@property(readonly, nonatomic, getter=isAnimatingDragCancel) _Bool animatingDragCancel;
@property(readonly, nonatomic) WKFormSelectControl *selectControl;
@property(readonly, nonatomic) WKDateTimeInputControl *dateTimeInputControl;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(CDUnknownBlockType)arg1;	// IMP=0x000000000087ca11
- (void)_previewItemControllerDidCancelPreview:(id)arg1;	// IMP=0x0000000000882942
- (id)_presentationRectsForPreviewItemController:(id)arg1;	// IMP=0x00000000008826f7
- (id)_presentationSnapshotForPreviewItemController:(id)arg1;	// IMP=0x0000000000882649
- (void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(_Bool)arg3;	// IMP=0x000000000088256a
- (void)_interactionStoppedFromPreviewItemController:(id)arg1;	// IMP=0x0000000000882505
- (void)_interactionStartedFromPreviewItemController:(id)arg1;	// IMP=0x00000000008824d7
- (void)_previewItemController:(id)arg1 commitPreview:(id)arg2;	// IMP=0x0000000000882382
- (id)_presentedViewControllerForPreviewItemController:(id)arg1;	// IMP=0x00000000008813f3
- (struct CGRect)_presentationRectForPreviewItemController:(id)arg1;	// IMP=0x00000000008813ca
- (id)_dataForPreviewItemController:(id)arg1 atPosition:(struct CGPoint)arg2 type:(long long *)arg3;	// IMP=0x0000000000880cbb
- (_Bool)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(struct CGPoint)arg2;	// IMP=0x0000000000880ac7
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x000000000088081a
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x00000000008802e4
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;	// IMP=0x0000000000880278
- (id)contextMenuInteraction:(id)arg1 previewForDismissingMenuWithConfiguration:(id)arg2;	// IMP=0x0000000000880250
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;	// IMP=0x000000000088006a
- (id)contextMenuInteraction:(id)arg1 previewForHighlightingMenuWithConfiguration:(id)arg2;	// IMP=0x000000000088002a
- (id)_contextMenuInteraction:(id)arg1 overrideSuggestedActionsForConfiguration:(id)arg2;	// IMP=0x000000000087fff2
- (void)continueContextMenuInteractionWithDataDetectors:(CDUnknownBlockType)arg1;	// IMP=0x000000000087fdcf
- (void)continueContextMenuInteraction:(CDUnknownBlockType)arg1;	// IMP=0x000000000087f043
- (void)_contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000087ee02
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint)arg2;	// IMP=0x000000000087edfa
- (void)assignLegacyDataForContextMenuInteraction;	// IMP=0x000000000087d9b8
- (void)_unregisterPreview;	// IMP=0x000000000087d904
- (void)_registerPreview;	// IMP=0x000000000087d6cf

// Remaining properties
@property(copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property(readonly, nonatomic) RTIInputSystemSourceSession *_rtiSourceSession;
@property(nonatomic) long long _textInputSource;
@property(nonatomic) _Bool acceptsDictationSearchResults;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsInitialEmojiKeyboard;
@property(nonatomic) _Bool acceptsPayloads;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, nonatomic) long long cursorBehavior;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isDevicePasscodeEntry) _Bool devicePasscodeEntry;
@property(nonatomic) _Bool disableHandwritingKeyboard;
@property(nonatomic) _Bool disableInputBars;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureEditsUsingPlainText;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) struct UIEdgeInsets floatingKeyboardEdgeInsets;
@property(nonatomic) _Bool forceDefaultDictationInfo;
@property(nonatomic) long long forceDictationKeyboardType;
@property(nonatomic) _Bool forceDisableDictation;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool forceFloatingKeyboard;
@property(nonatomic) _Bool hasDefaultContents;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidePrediction;
@property(retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property(readonly, nonatomic) id insertDictationResultPlaceholder;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isCarPlayIdiom;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool loadKeyboardsForSiriLanguage;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(nonatomic) _Bool preferOnlineDictation;
@property(nonatomic) long long preferredKeyboardStyle;
@property(copy, nonatomic) NSString *recentInputIdentifier;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBorderColor;
@property(nonatomic) double selectionBorderWidth;
@property(nonatomic) double selectionCornerRadius;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) struct UIEdgeInsets selectionEdgeInsets;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool showDictationButton;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property(retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(copy, nonatomic) NSString *textContentType;
@property(readonly, nonatomic) id <UITextInputSuggestionDelegate> textInputSuggestionDelegate;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility;
@property(readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property(nonatomic) long long textScriptType;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(retain, nonatomic) UIColor *underlineColorForSpelling;
@property(retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property(nonatomic) _Bool useAutomaticEndpointing;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) struct _NSRange validTextRange;

@end

