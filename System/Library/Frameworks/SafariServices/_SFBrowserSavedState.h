//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSCountedSet, NSMutableArray, SFBrowserStateSQLiteStore;

@interface _SFBrowserSavedState : NSObject
{
    SFBrowserStateSQLiteStore *_browserStateSQLiteStore;	// 8 = 0x8
    NSMutableArray *_recentlyClosedTabs;	// 16 = 0x10
    _Bool _checkPointWriteAheadLogOnNextUpdate;	// 24 = 0x18
    NSCountedSet *_tabCountByWindowUUID;	// 32 = 0x20
    _Bool _haveLoadedRecentlyClosedTabs;	// 40 = 0x28
    _Bool _secureDeleteEnabled;	// 41 = 0x29
    _Bool _shouldBeUsedDuringTest;	// 42 = 0x2a
    NSArray *_browserWindows;	// 48 = 0x30
}

+ (id)defaultPPTBrowserStateDatabase;	// IMP=0x0000000000133b21
+ (id)defaultBrowserStateDatabase;	// IMP=0x0000000000133aba
+ (id)inMemoryDatabase;	// IMP=0x0000000000133a96
+ (void)setShouldMergeAllWindowsIfNeeded:(_Bool)arg1;	// IMP=0x0000000000133a8a
+ (_Bool)shouldMergeAllWindowsIfNeeded;	// IMP=0x0000000000133a7e
+ (id)ephemeralSavedState;	// IMP=0x0000000000133a65
+ (void)setSharedBrowserSavedState:(id)arg1;	// IMP=0x0000000000133986
+ (id)sharedBrowserSavedState;	// IMP=0x0000000000133850
- (void).cxx_destruct;	// IMP=0x0000000000135ed6
@property(readonly, nonatomic) _Bool shouldBeUsedDuringTest; // @synthesize shouldBeUsedDuringTest=_shouldBeUsedDuringTest;
@property(nonatomic) _Bool secureDeleteEnabled; // @synthesize secureDeleteEnabled=_secureDeleteEnabled;
@property(retain, nonatomic) NSArray *recentlyClosedTabs; // @synthesize recentlyClosedTabs=_recentlyClosedTabs;
@property(copy, nonatomic) NSArray *browserWindows; // @synthesize browserWindows=_browserWindows;
- (void)regenerateTabUUIDsForDeviceRestoration;	// IMP=0x0000000000135e93
- (void)removeRecentlyClosedTabWithStateData:(id)arg1;	// IMP=0x0000000000135d83
- (void)_removeRecentlyClosedTabStateData:(id)arg1;	// IMP=0x0000000000135c7e
- (void)_readRecentlyClosedTabsStateIfNecessary;	// IMP=0x00000000001357b5
- (void)_historyItemsWereRemoved:(id)arg1;	// IMP=0x000000000013523c
- (void)_notifyThatRecentlyClosedTabsWereRemoved:(id)arg1;	// IMP=0x0000000000135111
- (void)clearRecentlyClosedTabs;	// IMP=0x000000000013505f
- (void)loadSessionStateDataAndRemoveRecentlyClosedTab:(id)arg1;	// IMP=0x0000000000134dcf
- (void)addRecentlyClosedTabs:(id)arg1;	// IMP=0x00000000001348f5
- (void)removeTabStateWithTabData:(id)arg1;	// IMP=0x0000000000134891
- (id)readSavedSessionStateDataForTabWithUUID:(id)arg1;	// IMP=0x000000000013481a
- (void)updateBrowserWindowState:(id)arg1 tabs:(id)arg2;	// IMP=0x000000000013478e
- (void)updateSceneID:(id)arg1;	// IMP=0x000000000013450b
- (void)clearAllSavedStatesClosingDatabase:(_Bool)arg1;	// IMP=0x00000000001344bc
- (void)clearAllSavedStatesAndCloseDatabase;	// IMP=0x00000000001344a5
- (id)tabStateDataForUUID:(id)arg1;	// IMP=0x000000000013447f
- (void)saveTabStateData:(id)arg1;	// IMP=0x0000000000134468
- (_Bool)activeDocumentIsValidForBrowserControllerWithUUID:(id)arg1;	// IMP=0x00000000001343db
- (void)setActiveDocumentIsValid:(_Bool)arg1 forBrowserControllerWithUUID:(id)arg2;	// IMP=0x000000000013434b
- (void)removeTabsStateForBrowserControllerWithUUID:(id)arg1 andRemoveWindow:(_Bool)arg2;	// IMP=0x0000000000134261
- (void)_checkPointWriteAheadLogIfNeeded;	// IMP=0x0000000000134213
- (void)saveTabsState:(id)arg1 forBrowserControllerWithUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000134187
- (id)savedTabsStateForBrowserControllerWithUUID:(id)arg1;	// IMP=0x0000000000134110
- (void)_readBrowserControllersSavedState;	// IMP=0x0000000000133d5b
- (void)dealloc;	// IMP=0x0000000000133cca
- (id)initWithDatabaseURL:(id)arg1;	// IMP=0x0000000000133b88

@end

