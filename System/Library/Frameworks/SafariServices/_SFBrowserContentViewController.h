//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIViewController.h>

#import <SafariServices/PKAddPassesViewControllerDelegate-Protocol.h>
#import <SafariServices/SFBrowserKeyCommandSafariViewControllerMethods-Protocol.h>
#import <SafariServices/SFBrowserViewDelegate-Protocol.h>
#import <SafariServices/SFOverlayProviderDelegate-Protocol.h>
#import <SafariServices/SFReaderEnabledWebViewControllerDelegate-Protocol.h>
#import <SafariServices/SFReaderViewControllerDelegate-Protocol.h>
#import <SafariServices/UIGestureRecognizerDelegate-Protocol.h>
#import <SafariServices/UIScrollViewDelegate-Protocol.h>
#import <SafariServices/WBSDigitalHealthManagerDelegate-Protocol.h>
#import <SafariServices/WBSFluidProgressControllerWindowDelegate-Protocol.h>
#import <SafariServices/WBSFluidProgressStateSource-Protocol.h>
#import <SafariServices/WBSTranslationConsentAlertHelperDelegate-Protocol.h>
#import <SafariServices/WBSTranslationContextDelegate-Protocol.h>
#import <SafariServices/WBSWebExtensionCommandHandling-Protocol.h>
#import <SafariServices/WBSWebExtensionTab-Protocol.h>
#import <SafariServices/_SFActivityItemCustomizationDelegate-Protocol.h>
#import <SafariServices/_SFActivityViewControllerDelegate-Protocol.h>
#import <SafariServices/_SFBarManagerDelegate-Protocol.h>
#import <SafariServices/_SFBrowserContentController-Protocol.h>
#import <SafariServices/_SFBrowserDocument-Protocol.h>
#import <SafariServices/_SFDownloadDelegate-Protocol.h>
#import <SafariServices/_SFDynamicBarAnimatorDelegate-Protocol.h>
#import <SafariServices/_SFFindOnPageViewDelegate-Protocol.h>
#import <SafariServices/_SFLinkPreviewHandler-Protocol.h>
#import <SafariServices/_SFMailContentProviderDataSource-Protocol.h>
#import <SafariServices/_SFNavigationBarDelegate-Protocol.h>
#import <SafariServices/_SFPageLoadErrorControllerDelegate-Protocol.h>
#import <SafariServices/_SFPrintControllerDelegate-Protocol.h>
#import <SafariServices/_SFQuickLookDocumentSource-Protocol.h>
#import <SafariServices/_SFSaveToFilesOperationDelegate-Protocol.h>
#import <SafariServices/_SFSingleBookmarkNavigationControllerDelegate-Protocol.h>

@class NSArray, NSDictionary, NSError, NSMutableArray, NSString, NSTimer, NSURL, SFBrowserDocumentTrackerInfo, SFBrowserPersonaAnalyticsHelper, SFNanoDomainContainerView, SFNavigationBarItem, SFReaderEnabledWebViewController, SFReaderViewController, SFSafariViewControllerConfiguration, UIColor, UIPanGestureRecognizer, UITapGestureRecognizer, WBSAllowedLegacyTLSHostManager, WBSAutoFillQuirksManager, WBSDigitalHealthManager, WBSFluidProgressController, WBSFluidProgressState, WBSTranslationContext, WBSURLSpoofingMitigator, WBSWellKnownURLResponseCodeReliabilityChecker, WKBackForwardListItem, WKPreferences, WKWebView, _SFActivityViewController, _SFApplicationExtensionActivity, _SFBarManager, _SFBrowserView, _SFCalendarEventDetector, _SFDigitalHealthViewController, _SFDownload, _SFDynamicBarAnimator, _SFFindOnPageView, _SFFluidProgressView, _SFMailContentProvider, _SFNavigationBar, _SFNavigationUtilitiesManager, _SFPageFormatMenuController, _SFPageLoadErrorController, _SFPageZoomPreferenceManager, _SFPerSitePreferencesVendor, _SFPrintController, _SFQuickLookDocument, _SFQuickLookDocumentController, _SFQuickLookDocumentWriter, _SFReloadOptionsController, _SFSafariSharingExtensionController, _SFSaveToFilesOperation, _SFSecIdentityPreferencesController, _SFTelephonyNavigationMitigationPolicy, _SFToolbar, _SFWebView, _WKActivatedElementInfo, _WKUserInitiatedAction;
@protocol SFReaderContext, WBSWebExtensionTab, WBSWebExtensionWindow, _SFBrowserContentViewControllerDelegate, _SFBrowserDocument;

@interface _SFBrowserContentViewController : UIViewController <SFBrowserViewDelegate, SFReaderEnabledWebViewControllerDelegate, SFReaderViewControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, _SFBarManagerDelegate, _SFDownloadDelegate, _SFDynamicBarAnimatorDelegate, _SFFindOnPageViewDelegate, _SFMailContentProviderDataSource, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate, SFOverlayProviderDelegate, WBSDigitalHealthManagerDelegate, PKAddPassesViewControllerDelegate, _SFLinkPreviewHandler, WBSWebExtensionCommandHandling, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFActivityItemCustomizationDelegate, _SFActivityViewControllerDelegate, _SFQuickLookDocumentSource, _SFSaveToFilesOperationDelegate, WBSWebExtensionTab, SFBrowserKeyCommandSafariViewControllerMethods, _SFBrowserContentController, _SFBrowserDocument>
{
    WBSDigitalHealthManager *_cachedDigitalHealthManager;	// 8 = 0x8
    _SFDigitalHealthViewController *_digitalHealthViewController;	// 16 = 0x10
    NSURL *_currentUsageTrackingURL;	// 24 = 0x18
    WKWebView *_previewWebView;	// 32 = 0x20
    NSTimer *_previewCloseTimer;	// 40 = 0x28
    _SFBrowserView *_browserView;	// 48 = 0x30
    SFReaderViewController *_readerViewController;	// 56 = 0x38
    _Bool _showingReader;	// 64 = 0x40
    WKBackForwardListItem *_lastBackFowardListItemOnWhichReaderWasActivated;	// 72 = 0x48
    unsigned long long _lastReaderDeactivationMode;	// 80 = 0x50
    _SFNavigationBar *_navigationBar;	// 88 = 0x58
    _SFToolbar *_bottomToolbar;	// 96 = 0x60
    _SFMailContentProvider *_cachedMailContentProvider;	// 104 = 0x68
    _WKUserInitiatedAction *_lastUserInitiatedAction;	// 112 = 0x70
    _Bool _canOpenDownloadForInitialLoad;	// 120 = 0x78
    unsigned long long _externalAppRedirectState;	// 128 = 0x80
    _SFBarManager *_barManager;	// 136 = 0x88
    SFNanoDomainContainerView *_nanoDomainContainerView;	// 144 = 0x90
    NSTimer *_updateContinuityTimer;	// 152 = 0x98
    _SFDynamicBarAnimator *_dynamicBarAnimator;	// 160 = 0xa0
    _Bool _scrollViewIsDragging;	// 168 = 0xa8
    unsigned long long _cachedMediaStateIcon;	// 176 = 0xb0
    _Bool _didSetUpInterface;	// 184 = 0xb8
    SFNavigationBarItem *_navigationBarItem;	// 192 = 0xc0
    WBSURLSpoofingMitigator *_URLSpoofingMitigator;	// 200 = 0xc8
    WBSFluidProgressState *_fluidProgressState;	// 208 = 0xd0
    WBSFluidProgressController *_fluidProgressController;	// 216 = 0xd8
    _SFFluidProgressView *_cachedFluidProgressView;	// 224 = 0xe0
    UITapGestureRecognizer *_showBarsFromBottomBarRecognizer;	// 232 = 0xe8
    _Bool _pageScrollsWithBottomBar;	// 240 = 0xf0
    _Bool _interfaceFillsScreen;	// 241 = 0xf1
    _Bool _usesNarrowLayout;	// 242 = 0xf2
    _SFPageLoadErrorController *_pageLoadErrorController;	// 248 = 0xf8
    _SFCalendarEventDetector *_calendarEventDetector;	// 256 = 0x100
    _SFDownload *_activeDownload;	// 264 = 0x108
    _Bool _showingCrashBanner;	// 272 = 0x110
    double _crashBannerDraggingOffset;	// 280 = 0x118
    _Bool _showingPinnableBanner;	// 288 = 0x120
    double _pinnableBannerDraggingOffset;	// 296 = 0x128
    _Bool _shouldDismissReaderInReponseToSameDocumentNavigation;	// 304 = 0x130
    _Bool _EVOrganizationNameIsValid;	// 305 = 0x131
    NSString *_EVOrganizationName;	// 312 = 0x138
    _Bool _isShowingHTTPAuthenticationDialog;	// 320 = 0x140
    _Bool _isSuppressingPreviewProgressAnimation;	// 321 = 0x141
    _SFSafariSharingExtensionController *_sharingExtensionController;	// 328 = 0x148
    _Bool _didReceivePolicyForInitialLoad;	// 336 = 0x150
    long long _customPreferredStatusBarStyle;	// 344 = 0x158
    _Bool _isDisplayingTelephonyPrompt;	// 352 = 0x160
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;	// 360 = 0x168
    _SFPrintController *_printController;	// 368 = 0x170
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;	// 376 = 0x178
    _SFPerSitePreferencesVendor *_perSitePreferencesVendor;	// 384 = 0x180
    _Bool _wasLoadedWithContentBlockersEnabled;	// 392 = 0x188
    NSURL *_urlToReloadForcingContentBlockers;	// 400 = 0x190
    _Bool _enableContentBlockersWhenReloading;	// 408 = 0x198
    NSMutableArray *_webViewControllers;	// 416 = 0x1a0
    struct UIEdgeInsets _verticalScrollIndicatorBaseInsets;	// 424 = 0x1a8
    struct UIEdgeInsets _horizontalScrollIndicatorBaseInsets;	// 456 = 0x1c8
    _Bool _autoHidingHomeIndicatorPermitted;	// 488 = 0x1e8
    _Bool _prefersHomeIndicatorAutoHidden;	// 489 = 0x1e9
    _Bool _shouldAutoHideHomeIndicator;	// 490 = 0x1ea
    NSURL *_originalRequestURL;	// 496 = 0x1f0
    _SFQuickLookDocument *_quickLookDocument;	// 504 = 0x1f8
    _SFQuickLookDocumentController *_quickLookDocumentController;	// 512 = 0x200
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;	// 520 = 0x208
    _SFDownload *_downloadToShowInQuickLook;	// 528 = 0x210
    NSString *_suggestedFilenameForNextCommit;	// 536 = 0x218
    _Bool _quickLookDocumentCheckCompleted;	// 544 = 0x220
    _SFApplicationExtensionActivity *_customButtonUIActivity;	// 552 = 0x228
    _Bool _customActivityButtonIsValid;	// 560 = 0x230
    _SFSaveToFilesOperation *_saveToFilesOperation;	// 568 = 0x238
    _SFActivityViewController *_activityViewController;	// 576 = 0x240
    _SFPageFormatMenuController *_pageFormatMenuController;	// 584 = 0x248
    _Bool _keepBarsMinimized;	// 592 = 0x250
    UIPanGestureRecognizer *_hideNavigationBarGestureRecognizer;	// 600 = 0x258
    NSError *_lastLoadErrorForFormatMenu;	// 608 = 0x260
    long long _concurrentNavigationActionPolicyDecisions;	// 616 = 0x268
    _Bool _loadWasUserDriven;	// 624 = 0x270
    _Bool _webViewIsInFullScreen;	// 625 = 0x271
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;	// 632 = 0x278
    _Bool _gestureRequiresGoingBackToOwnerWebView;	// 640 = 0x280
    _Bool _shouldReflectTranslationAsFluidProgress;	// 641 = 0x281
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;	// 648 = 0x288
    WBSAllowedLegacyTLSHostManager *_cachedLegacyTLSHostManager;	// 656 = 0x290
    WBSAutoFillQuirksManager *_autoFillQuirksManager;	// 664 = 0x298
    WBSWellKnownURLResponseCodeReliabilityChecker *_wellKnownURLResponseCodeReliabilityChecker;	// 672 = 0x2a0
    struct CGSize _lastSizeUsedForBrowserViewLayout;	// 680 = 0x2a8
    unsigned long long _sizeTransitionCount;	// 696 = 0x2b8
    double _idForWebExtensions;	// 704 = 0x2c0
    _Bool _remoteSwipeGestureEnabled;	// 712 = 0x2c8
    _Bool _webViewLayoutUnderlapsStatusBar;	// 713 = 0x2c9
    _Bool __isUsedForAuthentication;	// 714 = 0x2ca
    _Bool _didNotifyInitialLoadFinish;	// 715 = 0x2cb
    _Bool _viewDidAppearInHostApp;	// 716 = 0x2cc
    NSDictionary *_extensionIdentifierToDynamicallyInjectedStyleSheets;	// 720 = 0x2d0
    id <_SFBrowserContentViewControllerDelegate> _delegate;	// 728 = 0x2d8
    long long _displayMode;	// 736 = 0x2e0
    _SFReloadOptionsController *_reloadOptionsController;	// 744 = 0x2e8
    _SFFindOnPageView *_findOnPageView;	// 752 = 0x2f0
    WKPreferences *_wkPreferences;	// 760 = 0x2f8
    NSArray *_linkActions;	// 768 = 0x300
    _WKActivatedElementInfo *_activatedElementInfo;	// 776 = 0x308
    UIColor *_preferredBarTintColor;	// 784 = 0x310
    UIColor *_preferredControlTintColor;	// 792 = 0x318
    long long _hostAppModalPresentationStyle;	// 800 = 0x320
    long long _dismissButtonStyle;	// 808 = 0x328
    SFSafariViewControllerConfiguration *_configuration;	// 816 = 0x330
    NSString *_bundleIdentifierForProfileInstallation;	// 824 = 0x338
    long long __persona;	// 832 = 0x340
    SFBrowserPersonaAnalyticsHelper *__analyticsHelper;	// 840 = 0x348
    long long _safariDataSharingMode;	// 848 = 0x350
    _SFNavigationUtilitiesManager *__navigationUtilitiesManager;	// 856 = 0x358
    WBSTranslationContext *_translationContext;	// 864 = 0x360
}

+ (void)createDefaultWebsiteDataStore;	// IMP=0x0000000000113644
- (void).cxx_destruct;	// IMP=0x000000000012e760
@property(retain, nonatomic) WBSTranslationContext *translationContext; // @synthesize translationContext=_translationContext;
@property(retain, nonatomic) _SFNavigationUtilitiesManager *_navigationUtilitiesManager; // @synthesize _navigationUtilitiesManager=__navigationUtilitiesManager;
@property(nonatomic) _Bool viewDidAppearInHostApp; // @synthesize viewDidAppearInHostApp=_viewDidAppearInHostApp;
@property(readonly, nonatomic) _Bool didNotifyInitialLoadFinish; // @synthesize didNotifyInitialLoadFinish=_didNotifyInitialLoadFinish;
@property(nonatomic) long long safariDataSharingMode; // @synthesize safariDataSharingMode=_safariDataSharingMode;
@property(readonly, nonatomic) SFBrowserPersonaAnalyticsHelper *_analyticsHelper; // @synthesize _analyticsHelper=__analyticsHelper;
@property(readonly, nonatomic) long long _persona; // @synthesize _persona=__persona;
@property(readonly, nonatomic) _Bool _isUsedForAuthentication; // @synthesize _isUsedForAuthentication=__isUsedForAuthentication;
@property(readonly, nonatomic) NSString *bundleIdentifierForProfileInstallation; // @synthesize bundleIdentifierForProfileInstallation=_bundleIdentifierForProfileInstallation;
@property(nonatomic) _Bool webViewLayoutUnderlapsStatusBar; // @synthesize webViewLayoutUnderlapsStatusBar=_webViewLayoutUnderlapsStatusBar;
@property(copy, nonatomic) SFSafariViewControllerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) long long dismissButtonStyle; // @synthesize dismissButtonStyle=_dismissButtonStyle;
@property(nonatomic) long long hostAppModalPresentationStyle; // @synthesize hostAppModalPresentationStyle=_hostAppModalPresentationStyle;
@property(retain, nonatomic) UIColor *preferredControlTintColor; // @synthesize preferredControlTintColor=_preferredControlTintColor;
@property(retain, nonatomic) UIColor *preferredBarTintColor; // @synthesize preferredBarTintColor=_preferredBarTintColor;
@property(nonatomic) _Bool remoteSwipeGestureEnabled; // @synthesize remoteSwipeGestureEnabled=_remoteSwipeGestureEnabled;
@property(retain, nonatomic) _WKActivatedElementInfo *activatedElementInfo; // @synthesize activatedElementInfo=_activatedElementInfo;
@property(copy, nonatomic) NSArray *linkActions; // @synthesize linkActions=_linkActions;
@property(readonly, nonatomic) WKPreferences *wkPreferences; // @synthesize wkPreferences=_wkPreferences;
@property(retain, nonatomic) _SFFindOnPageView *findOnPageView; // @synthesize findOnPageView=_findOnPageView;
@property(retain, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property(nonatomic) long long displayMode; // @synthesize displayMode=_displayMode;
@property(nonatomic) __weak id <_SFBrowserContentViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSDictionary *extensionIdentifierToDynamicallyInjectedStyleSheets; // @synthesize extensionIdentifierToDynamicallyInjectedStyleSheets=_extensionIdentifierToDynamicallyInjectedStyleSheets;
- (void)overlayDidHide:(id)arg1;	// IMP=0x000000000012e2e5
- (void)unmute;	// IMP=0x000000000012e2df
- (void)mute;	// IMP=0x000000000012e2d9
- (void)select;	// IMP=0x000000000012e2d3
- (void)loadURL:(id)arg1;	// IMP=0x000000000012e2cd
@property(nonatomic) double zoomFactor;
- (void)close;	// IMP=0x000000000012e2a7
- (void)goForward;	// IMP=0x000000000012e295
- (void)goBack;	// IMP=0x000000000012e283
- (void)reloadFromOrigin;	// IMP=0x000000000012e26c
- (void)reload;	// IMP=0x000000000012e258
@property(readonly, nonatomic) unsigned long long changedPropertiesForOnUpdatedWebExtensionEvent;
@property(readonly, nonatomic) id <WBSWebExtensionWindow> webExtensionWindow;
@property(readonly, nonatomic) struct CGSize tabViewSize;
@property(readonly, copy, nonatomic) NSString *tabTitle;
@property(readonly, nonatomic) _Bool isPrivate;
@property(readonly, nonatomic) _Bool isPinnedTab;
@property(readonly, nonatomic) _Bool isFrontmost;
@property(readonly, nonatomic) _Bool isMuted;
@property(readonly, nonatomic) _Bool isAudible;
@property(readonly, nonatomic) _Bool isLoadingComplete;
@property(readonly, nonatomic) NSURL *pendingURLForWebExtensions;
@property(readonly, nonatomic) NSURL *expectedOrCurrentURLOrLastActiveURLIfCrashed;
@property(readonly, nonatomic) NSURL *urlForExtensions;
@property(readonly, nonatomic) double parentTabIDForWebExtensions;
@property(readonly, copy, nonatomic) NSArray *webViewsThatCanReceiveMessages;
@property(readonly, nonatomic) WKWebView *webViewForExtensions;
@property(readonly, nonatomic) double idForWebExtensions;
- (void)pageLoadErrorController:(id)arg1 allowLegacyTLSConnectionForURL:(id)arg2 navigateToURL:(id)arg3;	// IMP=0x000000000012dfb6
- (id)legacyTLSHostManager;	// IMP=0x000000000012df10
- (void)addPassesViewControllerDidFinish:(id)arg1;	// IMP=0x000000000012de43
- (id)translationConsentAlertHelperViewControllerToPresentDetailsFrom:(id)arg1;	// IMP=0x000000000012de3a
- (void)_presentTranslationConsentAlertWithType:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012db76
- (void)_translationContextStateDidChange:(id)arg1;	// IMP=0x000000000012da97
- (void)_updateMaxVisibleHeightPercentageUserDriven:(_Bool)arg1;	// IMP=0x000000000012d8e9
- (void)translationContextWillRequestTranslatingWebpage:(id)arg1;	// IMP=0x000000000012d8a1
- (void)translationContextNeedsScrollHeightVisibilityUpdate:(id)arg1;	// IMP=0x000000000012d88c
- (void)translationContext:(id)arg1 shouldReportProgressInUnifiedField:(_Bool)arg2;	// IMP=0x000000000012d80b
- (void)translationContext:(id)arg1 showTranslationErrorAlertWithTitle:(id)arg2 message:(id)arg3;	// IMP=0x000000000012d6f0
- (id)safariApplicationVersionForTranslationContext:(id)arg1;	// IMP=0x000000000012d685
- (void)translationContext:(id)arg1 showFeedbackConsentAlertWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012d66d
- (void)translationContext:(id)arg1 showFirstTimeConsentAlertWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012d658
- (void)translationContext:(id)arg1 urlForCurrentPageWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000012d521
- (_Bool)translationContextIsUsingPrivateBrowsing:(id)arg1;	// IMP=0x000000000012d519
- (void)translationContextReloadPageInOriginalLanguage:(id)arg1;	// IMP=0x000000000012d4a2
- (_Bool)isShowingReaderForCustomizationController:(id)arg1;	// IMP=0x000000000012d492
- (_Bool)isReaderAvailableForCustomizationController:(id)arg1;	// IMP=0x000000000012d401
- (_Bool)isDisplayingQuickLookDocumentForCustomizationController:(id)arg1;	// IMP=0x000000000012d3ce
- (_Bool)isContentObscuredByDigitalHealthForCustomizationController:(id)arg1;	// IMP=0x000000000012d3bb
- (id)webViewForCustomizationController:(id)arg1;	// IMP=0x000000000012d399
- (void)customizationControllerCustomizationsDidChange:(id)arg1;	// IMP=0x000000000012d37b
- (void)saveToFilesOperation:(id)arg1 didFinishWithSuccess:(_Bool)arg2;	// IMP=0x000000000012d35a
- (void)saveToFilesOperation:(id)arg1 presentViewController:(id)arg2;	// IMP=0x000000000012d33c
- (void)_presentSaveWebpageViewController;	// IMP=0x000000000012d13b
- (_Bool)_canSaveWebpageForURL:(id)arg1;	// IMP=0x000000000012d0d5
- (_Bool)_canSaveWebpage;	// IMP=0x000000000012d03e
- (void)webViewController:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;	// IMP=0x000000000012cf95
- (void)setMediaStateIcon:(unsigned long long)arg1;	// IMP=0x000000000012cf65
@property(readonly, nonatomic) unsigned long long mediaStateIcon;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;	// IMP=0x000000000012cd47
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;	// IMP=0x000000000012cd34
- (_Bool)_personaShouldUseScreenTime;	// IMP=0x000000000012cd14
- (void)stopDigitalHealthTrackingWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000012cb38
- (void)beginDigitalHealthTracking;	// IMP=0x000000000012ca62
@property(readonly, nonatomic) _Bool isBlockedByScreenTime;
- (void)_hideDigitalHealthOverlay;	// IMP=0x000000000012c981
- (void)_showDigitalHealthOverlayWithPolicy:(long long)arg1;	// IMP=0x000000000012c737
- (void)_updateDigitalHealthTracking;	// IMP=0x000000000012c18e
- (id)_digitalHealthManager;	// IMP=0x000000000012c11e
- (void)_perSitePageZoomPreferenceDidChange:(id)arg1;	// IMP=0x000000000012bed5
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;	// IMP=0x000000000012bc14
- (_Bool)_shouldAllowAutomaticReader;	// IMP=0x000000000012bbed
- (id)_committedDomainForPreferences;	// IMP=0x000000000012bb50
- (id)printControllerForContentProvider:(id)arg1;	// IMP=0x000000000012bb3b
- (id)webViewForMailContentProvider:(id)arg1;	// IMP=0x000000000012ba6e
- (_Bool)readerViewIsVisibleForMailContentProvider:(id)arg1;	// IMP=0x000000000012ba5e
- (id)readerControllerForMailContentProvider:(id)arg1;	// IMP=0x000000000012b9fa
- (id)_mailContentProvider;	// IMP=0x000000000012b9a5
- (void)dismissSFSafariViewControllerKeyPressed;	// IMP=0x000000000012b93f
- (void)webExtensionKeyCommandPressed:(id)arg1;	// IMP=0x000000000012b7d0
- (void)_performClickActionForExtension:(id)arg1;	// IMP=0x000000000012b7ca
- (void)resetPageZoomLevelAndFontSize;	// IMP=0x000000000012b7b8
- (void)decreaseSize:(id)arg1;	// IMP=0x000000000012b7a5
- (void)increaseSize:(id)arg1;	// IMP=0x000000000012b792
- (void)_emailCurrentPageWithPreferredContentType:(long long)arg1;	// IMP=0x000000000012b61b
- (void)emailCurrentPage;	// IMP=0x000000000012b5ff
- (void)autoFillFormKeyPressed;	// IMP=0x000000000012b5ae
- (void)saveWebpageAlternativeKeyPressed;	// IMP=0x000000000012b59c
- (void)saveKeyPressed;	// IMP=0x000000000012b58a
- (_Bool)_dismissTransientUIAnimated:(_Bool)arg1;	// IMP=0x000000000012b3d4
- (void)_keyboardWillHide:(id)arg1;	// IMP=0x000000000012b383
- (void)cancelKeyPressed;	// IMP=0x000000000012b2e3
- (void)toggleReaderKeyPressed;	// IMP=0x000000000012b2d1
- (void)previousFindResultKeyPressed;	// IMP=0x000000000012b2b4
- (void)nextFindResultKeyPressed;	// IMP=0x000000000012b297
- (void)takeFindStringKeyPressed;	// IMP=0x000000000012b27a
- (void)findKeyPressed;	// IMP=0x000000000012b1b2
- (void)navigateForwardKeyPressed;	// IMP=0x000000000012b1a0
- (void)navigateBackKeyPressed;	// IMP=0x000000000012b18e
- (void)reloadFromOriginKeyPressed;	// IMP=0x000000000012b156
- (void)reloadKeyPressed;	// IMP=0x000000000012b121
- (void)validateCommand:(id)arg1;	// IMP=0x000000000012b050
- (void)_setUpMenu;	// IMP=0x000000000012afd9
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;	// IMP=0x000000000012afc6
- (id)webViewForFindOnPageView:(id)arg1;	// IMP=0x000000000012af83
- (void)_invalidateUserActivity;	// IMP=0x000000000012aeed
- (void)_updateUserActivity;	// IMP=0x000000000012aacd
- (id)handoffURL;	// IMP=0x000000000012aa69
- (void)_cancelPendingUpdateUserActivityTimer;	// IMP=0x000000000012aa27
- (void)_updateUserActivityTimerFired;	// IMP=0x000000000012a9f9
- (void)_updateUserActivitySoon;	// IMP=0x000000000012a954
- (void)clearBadgeOnPageFormatMenu;	// IMP=0x000000000012a94e
@property(readonly, nonatomic) _Bool hasDedicatedExtensionsButton;
@property(readonly, nonatomic) id <WBSWebExtensionTab> activeTabForExtensions;
@property(readonly, nonatomic) _Bool hasDedicatedDownloadsToolbarItem;
@property(readonly, nonatomic) _Bool hasDedicatedMediaStateButton;
@property(readonly, nonatomic) _Bool supportsPrivacyReport;
@property(readonly, nonatomic) unsigned long long downloadsCount;
@property(readonly, nonatomic) _Bool hasUnviewedDownloads;
@property(nonatomic) _Bool keepBarsMinimized;
@property(readonly, nonatomic) id <_SFBrowserDocument> activeDocument;
- (void)presentModalViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000012a871
@property(readonly, nonatomic) UIViewController *viewControllerToPresentFrom;
- (void)presentDownloadsViewController;	// IMP=0x000000000012a862
- (void)toggleShowingReaderForUserAction;	// IMP=0x000000000012a7d1
@property(readonly, nonatomic, getter=isShowingReader) _Bool showingReader;
@property(readonly, nonatomic) id <SFReaderContext> readerContext;
@property(readonly, nonatomic) NSURL *URLForPerSitePreferences;
@property(readonly, nonatomic) _Bool canChangeSearchFieldPosition;
@property(readonly, nonatomic) _Bool canHideToolbar;
@property(readonly, nonatomic) _SFPageZoomPreferenceManager *pageZoomManager;
@property(readonly, nonatomic) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
- (void)reloadEnablingContentBlockers:(_Bool)arg1;	// IMP=0x000000000012a55d
@property(readonly, nonatomic) _Bool wasLoadedWithContentBlockersEnabled;
- (void)toggleMediaStateMuted;	// IMP=0x000000000012a547
- (void)perSiteSettingsUIPresentSettings;	// IMP=0x000000000012a453
@property(readonly, nonatomic) _SFWebView *activeWebView;
- (long long)browserPersonaForActivityViewController:(id)arg1;	// IMP=0x000000000012a42e
- (void)activityViewController:(id)arg1 prepareActivity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000129fb2
- (void)_presentActivityViewController;	// IMP=0x00000000001298fb
- (id)_itemProviderCollectionForSharingURL:(id)arg1 title:(id)arg2;	// IMP=0x00000000001295a1
- (void)_fetchSharingURLWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001293c5
- (_Bool)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2;	// IMP=0x00000000001292e2
- (void)_showPassBookControllerForPasses:(id)arg1;	// IMP=0x0000000000129235
- (void)_showDownload:(id)arg1;	// IMP=0x000000000012846f
- (_Bool)_canShowDownloadWithoutPrompting:(id)arg1;	// IMP=0x000000000012837a
- (void)downloadDidReceiveResponse:(id)arg1;	// IMP=0x00000000001282b4
- (void)downloadDidFinish:(id)arg1;	// IMP=0x0000000000128003
- (void)downloadDidFail:(id)arg1;	// IMP=0x0000000000127fe2
- (void)downloadDidStart:(id)arg1;	// IMP=0x0000000000127fdc
- (_Bool)pageLoadErrorControllerIsInPreviewMode:(id)arg1;	// IMP=0x0000000000127fc9
- (_Bool)pageLoadErrorControllerShouldReloadAfterError:(id)arg1;	// IMP=0x0000000000127fb6
- (_Bool)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;	// IMP=0x0000000000127fae
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;	// IMP=0x0000000000127f90
- (void)pageLoadErrorControllerClosePage:(id)arg1;	// IMP=0x0000000000127f7d
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;	// IMP=0x0000000000127f2c
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;	// IMP=0x0000000000127dff
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;	// IMP=0x0000000000127de9
- (_Bool)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;	// IMP=0x0000000000127de1
- (_Bool)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;	// IMP=0x0000000000127dd9
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(_Bool)arg2 bookmark:(id)arg3;	// IMP=0x0000000000127dbc
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000127d27
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x0000000000127d13
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000127b74
- (void)fluidProgressRocketAnimationDidComplete;	// IMP=0x0000000000127b11
- (id)currentFluidProgressStateSource;	// IMP=0x0000000000127a9a
- (_Bool)hasFailedURL;	// IMP=0x0000000000127a23
- (double)estimatedProgress;	// IMP=0x00000000001279bf
@property(readonly, nonatomic) NSURL *expectedOrCurrentURL;
- (void)_setSuppressingPreviewProgressAnimation:(_Bool)arg1;	// IMP=0x0000000000127807
- (id)progressState;	// IMP=0x00000000001277f2
- (void)clearFluidProgressState;	// IMP=0x00000000001277d1
- (_Bool)createFluidProgressState;	// IMP=0x00000000001276d9
- (void)navigationBar:(id)arg1 didCreateLeadingToolbar:(id)arg2 trailingToolbar:(id)arg3;	// IMP=0x000000000012761d
- (void)navigationBarMediaStateMuteButtonWasTapped:(id)arg1;	// IMP=0x00000000001275b2
- (id)navigationBarURLForSharing:(id)arg1;	// IMP=0x00000000001274f4
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;	// IMP=0x0000000000127416
- (void)_reloadFromOrigin:(_Bool)arg1;	// IMP=0x00000000001272f8
- (void)navigationBarReloadButtonWasTapped:(id)arg1;	// IMP=0x000000000012728f
- (void)navigationBarDoneButtonWasTapped:(id)arg1;	// IMP=0x0000000000127229
- (void)navigationBarCancelButtonWasTapped:(id)arg1;	// IMP=0x0000000000127223
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)arg1;	// IMP=0x0000000000127196
- (void)_translationAvailabilityDidChange:(id)arg1;	// IMP=0x0000000000126fd3
- (void)navigationBarTranslateButtonWasTapped:(id)arg1;	// IMP=0x0000000000126dd1
- (void)navigationBarReaderButtonWasTapped:(id)arg1;	// IMP=0x0000000000126c5b
- (void)_hideNavigationBarGestureRecognized:(id)arg1;	// IMP=0x0000000000126a8b
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)arg1;	// IMP=0x0000000000126a28
- (void)navigationBarFormatMenuButtonWasTapped:(id)arg1;	// IMP=0x00000000001268b6
- (void)_showBars;	// IMP=0x000000000012688f
- (void)compressedNavigationBarWasTapped:(id)arg1;	// IMP=0x000000000012687c
- (void)navigationBarMetricsDidChange:(id)arg1;	// IMP=0x00000000001267cd
@property(readonly, nonatomic) _Bool _shouldReloadImmediatelyAfterPageLoadError;
@property(readonly, nonatomic) NSString *_hostAppBundleId;
- (void)_didCompleteScrolling;	// IMP=0x000000000012649e
- (void)scrollViewDidScrollToTop:(id)arg1;	// IMP=0x000000000012648b
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x0000000000126478
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x0000000000126465
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x000000000012644e
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;	// IMP=0x00000000001263b6
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x0000000000126141
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0000000000126087
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;	// IMP=0x0000000000126001
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;	// IMP=0x0000000000125cb5
- (void)dynamicBarAnimatorStateDidChange:(id)arg1;	// IMP=0x0000000000125c3c
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;	// IMP=0x0000000000125c36
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;	// IMP=0x0000000000125c1e
- (_Bool)dynamicBarAnimator:(id)arg1 canTransitionToState:(long long)arg2 byDraggingWithOffset:(double)arg3;	// IMP=0x0000000000125a46
- (void)stopLoading;	// IMP=0x000000000012598c
- (void)_showBarsFromBottomBarTap:(id)arg1;	// IMP=0x0000000000125959
- (void)_dismiss;	// IMP=0x0000000000125940
- (void)updateBottombarOffset:(double)arg1 topBarHeight:(double)arg2;	// IMP=0x00000000001258f3
- (_Bool)isPageEligibileToShowNotSecureWarning;	// IMP=0x00000000001255ec
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;	// IMP=0x00000000001255cb
- (id)presentingViewControllerForPrintController:(id)arg1;	// IMP=0x00000000001255c2
- (_Bool)printControllerCanPresentPrintUI:(id)arg1;	// IMP=0x00000000001255ad
- (_Bool)printControllerPageIsLoading:(id)arg1;	// IMP=0x0000000000125555
- (_Bool)printControllerShouldPrintReader:(id)arg1;	// IMP=0x0000000000125545
- (void)webViewController:(id)arg1 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)arg2 forExtension:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001254f5
- (id)webViewController:(id)arg1 didStartDownload:(id)arg2;	// IMP=0x00000000001253e6
- (void)webViewController:(id)arg1 didChangeFullScreen:(_Bool)arg2;	// IMP=0x00000000001253d6
- (long long)webViewController:(id)arg1 presentationPolicyForDialog:(id)arg2;	// IMP=0x000000000012539e
- (void)webViewController:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;	// IMP=0x000000000012537b
- (void)webViewController:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;	// IMP=0x00000000001252d2
- (long long)browserPersonaForWebViewController:(id)arg1;	// IMP=0x00000000001252bf
- (void)webViewController:(id)arg1 printFrame:(id)arg2;	// IMP=0x0000000000125251
- (id)presentingViewControllerForWebViewController:(id)arg1;	// IMP=0x0000000000125248
- (void)webViewControllerWillPresentJavaScriptDialog:(id)arg1;	// IMP=0x0000000000125220
- (void)linkPreviewHelperWillDisableLinkPreview;	// IMP=0x00000000001251e8
- (void)linkPreviewHelper:(id)arg1 didProduceNavigationIntent:(id)arg2 forAction:(long long)arg3;	// IMP=0x0000000000125147
- (void)linkPreviewHelper:(id)arg1 redirectToExternalNavigationResult:(id)arg2;	// IMP=0x000000000012506c
- (id)linkPreviewHelper:(id)arg1 resultOfLoadingURL:(id)arg2;	// IMP=0x0000000000124fe7
- (_Bool)linkPreviewHelper:(id)arg1 supportsAction:(long long)arg2 forURL:(id)arg3;	// IMP=0x0000000000124fcf
- (void)linkPreviewHelper:(id)arg1 commitPreviewViewControllerForAction:(long long)arg2 withTabOrder:(long long)arg3;	// IMP=0x0000000000124ca1
- (id)linkPreviewHelper:(id)arg1 previewViewControllerForURL:(id)arg2;	// IMP=0x00000000001247a6
- (void)readerViewController:(id)arg1 contextMenuDidEndForElement:(id)arg2;	// IMP=0x000000000012473f
- (void)readerViewController:(id)arg1 contextMenuForElement:(id)arg2 willCommitWithAnimator:(id)arg3;	// IMP=0x00000000001246b1
- (void)readerViewController:(id)arg1 contextMenuWillPresentForElement:(id)arg2;	// IMP=0x000000000012469e
- (void)contextMenuConfigurationForReaderViewController:(id)arg1 element:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000001245c0
- (void)_invalidatePreviewCloseTimer;	// IMP=0x0000000000124588
- (void)_closePreviewDocumentTimerFired:(id)arg1;	// IMP=0x0000000000124535
- (void)webViewController:(id)arg1 contextMenuDidEndForElement:(id)arg2;	// IMP=0x0000000000124454
- (void)webViewController:(id)arg1 contextMenuForElement:(id)arg2 willCommitWithAnimator:(id)arg3;	// IMP=0x00000000001243c6
- (id)webViewController:(id)arg1 contextMenuContentPreviewForElement:(id)arg2;	// IMP=0x0000000000124328
- (void)webViewController:(id)arg1 contextMenuWillPresentForElement:(id)arg2;	// IMP=0x0000000000124315
- (void)webViewController:(id)arg1 contextMenuConfigurationForElement:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000124237
- (void)_willCommitContextMenuForWebView:(id)arg1 withAnimator:(id)arg2;	// IMP=0x00000000001240af
- (void)_willPresentContextMenu;	// IMP=0x0000000000124092
- (id)_contextMenuContentPreviewForWebView:(id)arg1 element:(id)arg2;	// IMP=0x0000000000124066
- (id)_contextMenuConfigurationForWebView:(id)arg1 element:(id)arg2;	// IMP=0x000000000012403a
- (_Bool)webViewControllerCanPromptForAccountSecurityRecommendation:(id)arg1;	// IMP=0x000000000012401a
- (void)webViewController:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000123ce3
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)arg1;	// IMP=0x0000000000123cb6
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)arg1;	// IMP=0x0000000000123cb0
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)arg1;	// IMP=0x0000000000123caa
- (void)webViewControllerWebProcessDidCrash:(id)arg1;	// IMP=0x0000000000123916
- (void)webViewController:(id)arg1 webViewDidClose:(id)arg2;	// IMP=0x00000000001238d8
- (void)webViewController:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000123609
- (id)_openNewWebViewIfNeededWithConfiguration:(id)arg1 forNavigationAction:(id)arg2;	// IMP=0x00000000001233ab
- (void)webViewController:(id)arg1 willGoToBackForwardListItem:(id)arg2 inPageCache:(_Bool)arg3;	// IMP=0x000000000012331c
- (void)webViewController:(id)arg1 didEndNavigationGestureToBackForwardListItem:(id)arg2;	// IMP=0x00000000001232e5
- (void)webViewController:(id)arg1 willEndNavigationGestureToBackForwardListItem:(id)arg2;	// IMP=0x0000000000123247
- (void)webViewController:(id)arg1 didSameDocumentNavigation:(id)arg2 ofType:(long long)arg3;	// IMP=0x00000000001231fc
- (void)webViewControllerDidChangeURL:(id)arg1;	// IMP=0x00000000001231e9
- (void)webViewController:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;	// IMP=0x000000000012304b
- (void)_didDecideNavigationPolicy:(long long)arg1 forNavigationAction:(id)arg2;	// IMP=0x0000000000122f0d
- (void)webViewController:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000001227cf
- (void)_didDecideNavigationPolicy:(long long)arg1 forNavigationResponse:(id)arg2;	// IMP=0x00000000001226a8
- (id)_fallbackURLForWellKnownChangePasswordURL:(id)arg1;	// IMP=0x0000000000122543
- (id)_quickLookDocumentForDownload:(id)arg1;	// IMP=0x00000000001223b8
- (void)_internalWebViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 withResult:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000121e2e
- (void)_internalWebViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000121114
- (void)webViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000120c70
- (void)_redirectToNewsIfNeededForRequest:(id)arg1 isMainFrame:(_Bool)arg2 userAction:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000001208bc
- (void)_determineResultOfLoadingRequest:(id)arg1 inMainFrame:(_Bool)arg2 disallowRedirectToExternalApps:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000120647
- (id)resultOfLoadingRequest:(id)arg1 inMainFrame:(_Bool)arg2 disallowRedirectToExternalApps:(_Bool)arg3;	// IMP=0x000000000012040b
- (void)_didResolveDestinationURL:(id)arg1 pendingAppLinkCheck:(_Bool)arg2;	// IMP=0x0000000000120405
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(_Bool)arg4 userAction:(id)arg5;	// IMP=0x000000000011fce7
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(_Bool)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5;	// IMP=0x000000000011f933
- (void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 dialogResult:(long long)arg3;	// IMP=0x000000000011f840
- (void)_cleanUpAfterRedirectToExternalApp;	// IMP=0x000000000011f802
- (_Bool)_redirectToHostAppWithNavigationResult:(id)arg1 options:(id)arg2;	// IMP=0x000000000011f7fa
- (void)webViewControllerUpdateNavigationBar:(id)arg1;	// IMP=0x000000000011f7e7
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)arg1;	// IMP=0x000000000011f7ba
- (void)webViewController:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;	// IMP=0x000000000011f67c
- (void)webViewControllerDidChangeEstimatedProgress:(id)arg1;	// IMP=0x000000000011f5fb
- (void)webViewControllerDidChangeLoadingState:(id)arg1;	// IMP=0x000000000011f51f
- (void)webViewController:(id)arg1 didExtractTextSamplesForTranslation:(id)arg2;	// IMP=0x000000000011f3ff
- (void)createReaderWebViewForWebViewController:(id)arg1;	// IMP=0x000000000011f3ec
- (void)webViewController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;	// IMP=0x000000000011f3d6
- (void)webViewControllerDidDetermineReaderAvailability:(id)arg1 dueTo:(long long)arg2;	// IMP=0x000000000011ee9a
- (void)webViewController:(id)arg1 didFinishDocumentLoadForNavigation:(id)arg2;	// IMP=0x000000000011ee05
- (void)webViewController:(id)arg1 didFinishNavigation:(id)arg2;	// IMP=0x000000000011ec7c
- (void)webViewController:(id)arg1 didCommitNavigation:(id)arg2;	// IMP=0x000000000011e8e9
- (void)authenticationChallengeDidNegotiateModernTLS:(id)arg1;	// IMP=0x000000000011e833
- (void)webViewController:(id)arg1 authenticationChallenge:(id)arg2 shouldAllowLegacyTLS:(CDUnknownBlockType)arg3;	// IMP=0x000000000011e5f0
- (void)webViewControllerDidCancelClientRedirect:(id)arg1;	// IMP=0x000000000011e5ea
- (void)webViewController:(id)arg1 willPerformClientRedirectToURL:(id)arg2 withDelay:(double)arg3;	// IMP=0x000000000011e5e4
- (void)webViewController:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;	// IMP=0x000000000011e5de
- (void)webViewController:(id)arg1 didStartProvisionalNavigation:(id)arg2;	// IMP=0x000000000011e279
- (id)quickLookDocument;	// IMP=0x000000000011e087
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)arg1;	// IMP=0x000000000011df9c
- (id)quickLookDocumentForCurrentBackForwardListItem;	// IMP=0x000000000011dec7
- (id)suggestedFileExtensionForQuickLookDocument:(id)arg1;	// IMP=0x000000000011deba
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;	// IMP=0x000000000011de56
- (id)dataForQuickLookDocument:(id)arg1;	// IMP=0x000000000011ddf2
- (_Bool)_canTranslateWebpages;	// IMP=0x000000000011ddd4
- (void)_hideQuickLookDocumentView;	// IMP=0x000000000011dcd4
- (void)_showQuickLookDocumentView;	// IMP=0x000000000011dbab
- (void)_invokeCustomActivity;	// IMP=0x000000000011d2e9
- (void)_resetPageZoomSetting;	// IMP=0x000000000011cf4c
- (void)_decreasePageZoomSetting;	// IMP=0x000000000011cbad
- (void)_increasePageZoomSetting;	// IMP=0x000000000011c80e
- (void)_updatePageZoomWithPreference;	// IMP=0x000000000011c546
- (void)_openCurrentURLInSafari;	// IMP=0x000000000011c3ac
- (id)_applicationPayloadForOpeningInSafari;	// IMP=0x000000000011c22f
@property(readonly, nonatomic) _Bool canPrint;
- (void)_fetchActivityViewControllerInfoForURL:(id)arg1 title:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000011c217
- (void)_initialLoadFinishedWithSuccess:(_Bool)arg1;	// IMP=0x000000000011c1b8
- (_Bool)_notifyInitialLoadDidFinish:(_Bool)arg1;	// IMP=0x000000000011c1b0
- (void)_showCrashBanner:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000011bd07
- (void)_setShowingCrashBanner:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x000000000011bc3e
- (void)_setShowingPinnableBanner:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000011b843
- (_Bool)_updateAppInfoOverlayForBanner:(id)arg1;	// IMP=0x000000000011b613
- (void)_updatePinnableBannerFrame;	// IMP=0x000000000011b2ec
- (void)_hideCrashBanner;	// IMP=0x000000000011b2d3
- (void)_updatePinnableBannerOffset;	// IMP=0x000000000011afc6
- (void)_updateCrashBannerOffset;	// IMP=0x000000000011ade1
- (double)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint)arg1;	// IMP=0x000000000011abeb
- (void)_showGenericDownloadAlert;	// IMP=0x000000000011abcc
- (void)_updateRemoteSwipeGestureState;	// IMP=0x000000000011abc6
- (void)_updateUI;	// IMP=0x000000000011aafb
- (void)_updateBarItems;	// IMP=0x000000000011a7f3
- (void)_updatePreviewLoadingUI;	// IMP=0x000000000011a6bd
- (_Bool)_canShowPageFormatMenu;	// IMP=0x000000000011a5ad
- (void)didUpdateNavigationBarItem:(id)arg1;	// IMP=0x000000000011a5a7
- (void)_updateNavigationBar;	// IMP=0x0000000000119fc2
- (void)_invalidateEVOrganizationName;	// IMP=0x0000000000119f8e
- (id)_EVOrganizationName;	// IMP=0x0000000000119ec0
@property(readonly, nonatomic) _Bool isSecure;
@property(readonly, nonatomic) _Bool isShowingErrorPage;
- (void)addTrustedEventAttribution:(id)arg1;	// IMP=0x0000000000119bad
- (void)loadRequest:(id)arg1;	// IMP=0x0000000000119778
- (void)_setShowingReader:(_Bool)arg1 deactivationMode:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000118b3a
- (void)_setUpReaderViewController;	// IMP=0x000000000011897c
- (_Bool)_readerViewControllerNeedsSetUp;	// IMP=0x0000000000118895
- (void)_showReaderAnimated:(_Bool)arg1;	// IMP=0x0000000000118850
- (void)_hideReaderAnimated:(_Bool)arg1 deactivationMode:(unsigned long long)arg2;	// IMP=0x0000000000118839
@property(readonly, nonatomic) WKWebView *webView;
- (void)_setWebView:(id)arg1;	// IMP=0x0000000000118715
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;	// IMP=0x00000000001185da
- (double)_offsetForDynamicBarAnimator;	// IMP=0x00000000001184f5
- (void)_updateDynamicBarGeometry;	// IMP=0x000000000011827e
- (double)_maximumHeightObscuredByBottomBar;	// IMP=0x00000000001181f3
- (id)_currentWebView;	// IMP=0x00000000001181b0
- (void)_updateInterfaceFillsScreen;	// IMP=0x0000000000118126
- (void)_updateUsesNarrowLayout;	// IMP=0x000000000011804b
- (void)_updateBarTheme;	// IMP=0x0000000000117b8f
- (_Bool)_effectiveBarCollapsingEnabled;	// IMP=0x0000000000117b4a
- (void)_setUpToolbar;	// IMP=0x00000000001177ef
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0000000000117681
- (id)overrideTraitCollectionForChildViewController:(id)arg1;	// IMP=0x00000000001174d2
- (void)_updateStatusBarStyleForced:(_Bool)arg1;	// IMP=0x00000000001173e8
- (long long)preferredStatusBarStyle;	// IMP=0x00000000001173d7
- (void)viewDidLayoutSubviews;	// IMP=0x0000000000117261
- (void)viewWillLayoutSubviews;	// IMP=0x0000000000117114
- (void)_updateScrollToTopView;	// IMP=0x0000000000116ff3
@property(readonly, nonatomic) _Bool _usesScrollToTopView;
- (void)_scrollToTopFromScrollToTopView;	// IMP=0x0000000000116d4a
- (_Bool)_canScrollToTopInView:(id)arg1;	// IMP=0x0000000000116c89
- (void)webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;	// IMP=0x0000000000116c5c
- (void)webViewControllerDidChangeSafeAreaInsets:(id)arg1;	// IMP=0x0000000000116c2f
- (void)_updateScrollIndicatorVerticalInsets:(struct UIEdgeInsets)arg1 horizontalInsets:(struct UIEdgeInsets)arg2;	// IMP=0x0000000000116bed
- (void)_updateCurrentScrollViewInsets;	// IMP=0x0000000000115e9c
- (void)_updateWebViewShrinkToFit;	// IMP=0x0000000000115e2b
- (_Bool)_isSplitScreen;	// IMP=0x0000000000115cf3
- (void)_updateWebViewLayoutSize;	// IMP=0x0000000000115743
- (struct UIEdgeInsets)_effectiveWebViewSafeAreaInsets;	// IMP=0x0000000000115665
- (_Bool)_safeAreaShouldAffectWebViewObscuredInsets;	// IMP=0x0000000000115602
- (_Bool)prefersHomeIndicatorAutoHidden;	// IMP=0x00000000001155f2
- (void)_updateHomeIndicatorAutoHideState;	// IMP=0x00000000001155b4
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x0000000000115496
- (void)_didCompleteViewSizeTransition;	// IMP=0x000000000011543c
- (void)_layOutBrowserViewForSizeTransition;	// IMP=0x00000000001152e9
- (_Bool)_redirectToHostAppWithExpectedCallbackSchemeIfPossible:(id)arg1;	// IMP=0x00000000001152e1
- (void)_getSafariDataSharingModeWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000001152d0
- (void)_setUpInterfaceIfNeeded;	// IMP=0x00000000001151cb
- (void)decideDataSharingModeAndSetUpWebViewWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000114fe4
- (_Bool)_isPreviewing;	// IMP=0x0000000000114fc3
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x0000000000114f6d
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000000114ec3
- (void)_didLoadWebView;	// IMP=0x0000000000114ebd
- (void)didMoveToParentViewController:(id)arg1;	// IMP=0x0000000000114dcc
- (void)_setUpTopBarAndBottomBar;	// IMP=0x0000000000114922
- (void)_setUpCalendarEventDetectorIfNeeded;	// IMP=0x000000000011487b
- (void)_setUpReloadOptionsControllerIfNeeded;	// IMP=0x00000000001146c0
- (void)_goForward;	// IMP=0x000000000011462f
- (void)_goBack;	// IMP=0x0000000000114579
- (void)_willBeginUserInitiatedNavigation;	// IMP=0x0000000000114504
- (void)_goBackToOwnerWebView;	// IMP=0x00000000001144f2
- (_Bool)_shouldGoBackToOwnerWebView;	// IMP=0x00000000001143f9
- (void)_setUpFindOnPageViewIfNeeded;	// IMP=0x000000000011437d
- (void)_setUpWebViewControllerIfNeeded;	// IMP=0x00000000001142af
- (void)_updateWebKitExperimentalFeatures;	// IMP=0x0000000000113fd4
- (void)_updateTrackerProtectionPreferences;	// IMP=0x0000000000113ecf
- (_Bool)isSafariRestricted;	// IMP=0x0000000000113e04
- (id)webViewConfiguration;	// IMP=0x0000000000113872
- (id)websiteDataStore;	// IMP=0x00000000001136f1
- (id)websiteDataStoreConfiguration;	// IMP=0x000000000011363c
- (id)processPool;	// IMP=0x00000000001135fb
- (id)newProcessPool;	// IMP=0x0000000000113468
- (id)processPoolConfiguration;	// IMP=0x0000000000113287
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000000112d8c
@property(readonly, nonatomic) SFReaderEnabledWebViewController *rootWebViewController;
- (void)_setUpAnalyticsPersona;	// IMP=0x0000000000112c71
- (void)_invalidateWebViewControllers;	// IMP=0x0000000000112abc
- (void)_popWebViewController;	// IMP=0x0000000000112a16
- (void)_pushWebViewController:(id)arg1;	// IMP=0x0000000000112963
@property(readonly, nonatomic) SFReaderEnabledWebViewController *webViewController;
- (void)_setCurrentWebViewController:(id)arg1;	// IMP=0x000000000011262e
- (void)_cleanUpWebViewController:(id)arg1;	// IMP=0x00000000001124b4
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000001124a1
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0000000000111f19
- (_Bool)_currentlyEditingText;	// IMP=0x0000000000111e24
- (_Bool)canBecomeFirstResponder;	// IMP=0x0000000000111d4c
- (_Bool)becomeFirstResponder;	// IMP=0x0000000000111c69
@property(readonly, nonatomic) _SFBrowserView *browserView;
- (void)loadView;	// IMP=0x00000000001118cb
- (void)dealloc;	// IMP=0x000000000011169d
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x0000000000110d60

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) SFBrowserDocumentTrackerInfo *trackerInfo;

@end

