//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableDictionary, NSMutableSet, NSUUID;
@protocol OS_dispatch_queue, OS_os_log, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface NIServerConnection : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    _Bool _resumed;	// 16 = 0x10
    _Bool _invalidated;	// 17 = 0x11
    NSObject<OS_xpc_object> *_conn;	// 24 = 0x18
    NSObject<OS_os_log> *_log;	// 32 = 0x20
    NSData *_tokenData;	// 40 = 0x28
    NSMutableSet *_peerTokens;	// 48 = 0x30
    NSMutableDictionary *_simulators;	// 56 = 0x38
    _Bool _xpcActive;	// 64 = 0x40
    _Bool _shouldInvalidateSessionOnXPCError;	// 65 = 0x41
    _Bool _isInterruptionReason_ApplicationNotVisible;	// 66 = 0x42
    _Bool _isDistanceUpdateRequestScheduled;	// 67 = 0x43
    _Bool _isAllowedToSimulateDirection;	// 68 = 0x44
    CDUnknownBlockType _interruptionHandler;	// 72 = 0x48
    CDUnknownBlockType _invalidationHandler;	// 80 = 0x50
    NSUUID *_sessionID;	// 88 = 0x58
    id _exportedObject;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x000000000001752e
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
@property(readonly) NSUUID *sessionID; // @synthesize sessionID=_sessionID;
@property(copy) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
- (void)stopAllowingTasksToFinishWhileInBackground;	// IMP=0x00000000000174ab
- (id)allowTasksToFinishWhileInBackground;	// IMP=0x00000000000174a3
- (double)simulateErrorWithMaximum:(double)arg1 sigma:(double)arg2 maximum:(double)arg3;	// IMP=0x0000000000017448
- (double)randomUnivariateGaussian:(double)arg1 sigma:(double)arg2;	// IMP=0x00000000000173bc
- (double)simulateAngleError;	// IMP=0x00000000000173b3
- (double)simulateRangeError;	// IMP=0x00000000000173aa
- (void)setRangingPriorityPolicy:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001734f
- (void)getRangingPriorityPolicy:(CDUnknownBlockType)arg1;	// IMP=0x00000000000172f2
- (void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000000017297
- (void)processDCKMessage:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001723a
- (void)_removeObject:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001722a
- (void)_addObject:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001721a
- (void)notifySystemShutdownWithReason:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001720a
- (void)pause:(CDUnknownBlockType)arg1;	// IMP=0x00000000000170e3
- (void)runWithConfiguration:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016b1e
- (void)activate:(CDUnknownBlockType)arg1;	// IMP=0x00000000000165cd
- (void)_createAndActivateXPCConnectionToSimulatorIfNeededWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015d90
- (id)generateDiscoveryTokenData;	// IMP=0x0000000000015cf1
- (void)queryDeviceCapabilities:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015a90
- (_Bool)_internalIsAllowedToSimulateDirection;	// IMP=0x0000000000015966
- (_Bool)_internalIsSupported;	// IMP=0x00000000000156f6
- (void)handleMessageFromSimulator:(id)arg1;	// IMP=0x0000000000015400
- (void)handleErrorMessageFromSimulator:(id)arg1;	// IMP=0x0000000000015389
- (void)handleEventFromSimulatorOnQueue:(id)arg1;	// IMP=0x0000000000015135
- (void)handleDeviceShutdown:(id)arg1;	// IMP=0x0000000000014eb2
- (void)handleNewToken:(id)arg1;	// IMP=0x0000000000014ccc
- (void)handleNewDevice:(id)arg1;	// IMP=0x0000000000014ae6
- (void)handleCancelToken:(id)arg1;	// IMP=0x00000000000149d4
- (void)removeFromPeerTokensAndNotifyIfNecessary:(id)arg1;	// IMP=0x0000000000014806
- (id)nearbyObjectFromBase64EncodedString:(id)arg1;	// IMP=0x0000000000014777
- (id)discoveryTokenFromBase64EncodedString:(id)arg1;	// IMP=0x00000000000146e7
- (void)requestDistanceUpdate;	// IMP=0x0000000000014493
- (void)handleDistanceUpdate:(id)arg1;	// IMP=0x000000000001416f
- (void)_sendDistanceUpdateForRequestedPeer:(id)arg1 forPeer:(id)arg2;	// IMP=0x000000000001391c
- (id)_findRequestedPeerDevicesInUpdates:(id)arg1;	// IMP=0x00000000000135bd
- (id)_findSelfDeviceInUpdates:(id)arg1;	// IMP=0x00000000000131a9
- (_Bool)areContinuousUpdatesRequired;	// IMP=0x0000000000012f20
- (void)handleXPCConnectionInvalid;	// IMP=0x0000000000012ee9
- (void)handleXPCConnectionTermination;	// IMP=0x0000000000012ecf
- (void)handleXPCConnectionInterrupted;	// IMP=0x0000000000012eb5
- (void)handleXPCConnectionError;	// IMP=0x0000000000012e9b
- (CDStruct_6ad76789)auditTokenForConnection;	// IMP=0x0000000000012e88
- (void)invalidate;	// IMP=0x0000000000012c93
- (void)resume;	// IMP=0x0000000000012c7d
- (id)findUDIDForToken:(id)arg1;	// IMP=0x0000000000012a4d
- (void)_simXPCCancelAndInvalidateSessionOnError:(_Bool)arg1;	// IMP=0x00000000000129f4
- (void)_simXPCActivateIfAllowed;	// IMP=0x000000000001299c
- (void)_simXPCResumeIfAllowed;	// IMP=0x0000000000012944
- (void)_simXPCSuspendIfAllowed;	// IMP=0x00000000000128ec
- (id)synchronousRemoteObjectProxy;	// IMP=0x00000000000128e3
- (id)remoteObjectProxy;	// IMP=0x00000000000128da
- (void)handleAppNotification:(id)arg1;	// IMP=0x000000000001259f
- (void)dealloc;	// IMP=0x000000000001255f
- (id)initWithSessionID:(id)arg1 queue:(id)arg2 exportedObject:(id)arg3 options:(unsigned long long)arg4;	// IMP=0x0000000000012306

@end

