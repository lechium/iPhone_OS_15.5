//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <EventKit/EKFrozenMeltedPair-Protocol.h>
#import <EventKit/EKProtocolMutableObject-Protocol.h>

@class CADGenerationStampedObjectID, EKChangeSet, EKEventStore, EKObjectValidationContext, EKPersistentObject, NSDictionary, NSMutableDictionary, NSString;

@interface EKObject : NSObject <EKFrozenMeltedPair, EKProtocolMutableObject>
{
    EKPersistentObject *_persistentObject;	// 8 = 0x8
    EKChangeSet *_changeSet;	// 16 = 0x10
    NSMutableDictionary *__cachedMeltedObjects;	// 24 = 0x18
    NSDictionary *_additionalFrozenProperties;	// 32 = 0x20
    NSMutableDictionary *__cachedValues;	// 40 = 0x28
    EKObjectValidationContext *__validationContext;	// 48 = 0x30
}

+ (id)_arrayIntersectingArray:(id)arg1 withSet:(id)arg2;	// IMP=0x00000000000149e7
+ (id)propertiesUnavailableForPartialObjects;	// IMP=0x0000000000013be6
+ (Class)frozenClass;	// IMP=0x0000000000013b77
+ (Class)meltedClass;	// IMP=0x0000000000013b6d
+ (_Bool)_objects:(id)arg1 haveSameMeltedClass:(Class)arg2 frozenClass:(Class)arg3;	// IMP=0x0000000000013817
+ (_Bool)_compareRelationshipObject1:(id)arg1 againstRelationshipObject2:(id)arg2 propertiesToIgnore:(id)arg3;	// IMP=0x0000000000013716
+ (_Bool)_compareMutliValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000131e5
+ (_Bool)_compareMultiValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x0000000000013025
+ (_Bool)_compareSingleValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x0000000000012e65
+ (_Bool)_compareIdentityKeysForObject:(id)arg1 againstObject:(id)arg2 propertiesToIgnore:(id)arg3;	// IMP=0x0000000000012dc1
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;	// IMP=0x00000000000129f0
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4 compareImmutableKeys:(_Bool)arg5 propertiesToIgnore:(id)arg6;	// IMP=0x000000000001290e
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;	// IMP=0x00000000000128ea
+ (_Bool)_object:(id)arg1 equalsObject:(id)arg2 forKeys:(id)arg3 compareImmutableKeys:(_Bool)arg4 ignoringProperties:(id)arg5;	// IMP=0x0000000000012746
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;	// IMP=0x000000000007cce5
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;	// IMP=0x000000000007ccdd
+ (_Bool)canonicalizedEqualityTestValue1:(id)arg1 value2:(id)arg2 key:(id)arg3 object1:(id)arg4 object2:(id)arg5;	// IMP=0x00000000000bfdb7
+ (_Bool)_compareRelationshipObject1:(id)arg1 againstRelationshipObject2:(id)arg2 propertiesToIgnore:(id)arg3 relationshipObjectKey:(id)arg4;	// IMP=0x00000000000bfc41
+ (_Bool)_compareIdentityKeysForObject:(id)arg1 againstObject:(id)arg2 propertiesToIgnore:(id)arg3;	// IMP=0x00000000000bfb9d
+ (_Bool)_compareSingleValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bf9dd
+ (_Bool)_compareSingleValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bf8b5
+ (_Bool)_compareNonRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bf689
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;	// IMP=0x00000000000bf2b8
+ (_Bool)_compareNonIdentityKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bf296
+ (_Bool)_compareMultiValueRelationshipKey:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bedbc
+ (_Bool)_compareMultiValueRelationshipKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 propertiesToIgnore:(id)arg4;	// IMP=0x00000000000bebfc
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareImmutableKeys:(_Bool)arg4 propertiesToIgnore:(id)arg5;	// IMP=0x00000000000bebd8
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4 compareImmutableKeys:(_Bool)arg5 propertiesToIgnore:(id)arg6;	// IMP=0x00000000000beaf6
+ (_Bool)_compareKnownKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3;	// IMP=0x00000000000bead0
+ (_Bool)_compareAllKnownKeysExceptKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3 compareIdentityKeys:(_Bool)arg4;	// IMP=0x00000000000be93a
+ (_Bool)_compareAllKnownKeysExceptKeys:(id)arg1 forObject:(id)arg2 againstObject:(id)arg3;	// IMP=0x00000000000be922
+ (id)_changeSetForDiff:(id)arg1;	// IMP=0x00000000000be102
+ (void)_addChangesFromObject:(id)arg1 toObjects:(id)arg2 except:(id)arg3 keep:(id)arg4 copyingBackingObjects:(_Bool)arg5;	// IMP=0x00000000000b750c
+ (void)addChangesFromObject:(id)arg1 toObjects:(id)arg2 keep:(id)arg3;	// IMP=0x00000000000b74e4
+ (void)addChangesFromObject:(id)arg1 toObjects:(id)arg2 except:(id)arg3;	// IMP=0x00000000000b74bf
+ (_Bool)isWeakRelationObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b4686
+ (_Bool)isMeltedAndNotWeakRelationshipObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b45da
+ (id)knownSingleValueKeysForComparison;	// IMP=0x00000000000b45cd
+ (id)knownSummaryKeys;	// IMP=0x00000000000b45bb
+ (id)knownIdentityKeysForComparison;	// IMP=0x00000000000b45a3
+ (id)knownImmutableKeys;	// IMP=0x00000000000b4596
+ (id)knownDerivedRelationshipKeys;	// IMP=0x00000000000b4589
+ (id)knownRelationshipWeakKeys;	// IMP=0x00000000000b457c
+ (id)knownRelationshipMultiValueKeysForValidation;	// IMP=0x00000000000b456a
+ (id)knownRelationshipMultiValueKeys;	// IMP=0x00000000000b455d
+ (id)knownDerivedAndSingleValueRelationshipKeys;	// IMP=0x00000000000b44cd
+ (id)knownRelationshipSingleValueKeysForValidation;	// IMP=0x00000000000b44bb
+ (id)knownRelationshipSingleValueKeys;	// IMP=0x00000000000b44ae
+ (_Bool)isDerivedRelationship;	// IMP=0x00000000000b44a6
+ (_Bool)isWeakRelationship;	// IMP=0x00000000000b449e
+ (unsigned long long)_numberOfSharedLocksForUnitTesting;	// IMP=0x00000000000b36be
- (void).cxx_destruct;	// IMP=0x0000000000017241
@property(retain, nonatomic) EKObjectValidationContext *_validationContext; // @synthesize _validationContext=__validationContext;
@property(retain, nonatomic) NSMutableDictionary *_cachedValues; // @synthesize _cachedValues=__cachedValues;
@property(retain, nonatomic) NSDictionary *additionalFrozenProperties; // @synthesize additionalFrozenProperties=_additionalFrozenProperties;
@property(retain, nonatomic) NSMutableDictionary *_cachedMeltedObjects; // @synthesize _cachedMeltedObjects=__cachedMeltedObjects;
@property(retain, nonatomic) EKChangeSet *changeSet; // @synthesize changeSet=_changeSet;
@property(retain, nonatomic) EKPersistentObject *persistentObject; // @synthesize persistentObject=_persistentObject;
- (void)addCoCommitObject:(id)arg1;	// IMP=0x0000000000017113
- (void)deletePersistentObject;	// IMP=0x00000000000170a6
- (void)updatePersistentObjectSkippingProperties:(id)arg1;	// IMP=0x0000000000016aba
- (void)updatePersistentObject;	// IMP=0x0000000000016aa6
- (void)insertPersistentObjectIfNeeded;	// IMP=0x000000000001663f
- (id)_propertyValueForKey:(id)arg1;	// IMP=0x0000000000016511
- (void)_updatePersistentValueForKey:(id)arg1;	// IMP=0x00000000000161c1
- (void)updatePersistentValueForKeyIfNeeded:(id)arg1;	// IMP=0x0000000000016174
- (void)_performBlockOnOwnedCachedRelatedObjects:(CDUnknownBlockType)arg1;	// IMP=0x0000000000015d3c
- (void)markAsCommitted;	// IMP=0x0000000000015cf2
- (void)markAsSaved;	// IMP=0x0000000000015ce0
- (void)markAsUndeleted;	// IMP=0x0000000000015cb2
- (void)markAsDeleted;	// IMP=0x0000000000015ca0
- (void)markAsNotNew;	// IMP=0x0000000000015c8e
- (void)markAsNew;	// IMP=0x0000000000015c7c
- (id)committedValueForKey:(id)arg1;	// IMP=0x00000000000158ea
- (_Bool)refreshAndNotify:(_Bool)arg1;	// IMP=0x0000000000015868
- (_Bool)refresh;	// IMP=0x0000000000015851
- (_Bool)_reset;	// IMP=0x00000000000157f9
- (void)reset;	// IMP=0x00000000000157e7
- (void)rollback;	// IMP=0x00000000000157d5
- (id)_recursiveSnapshotCopyWithPropertyAccessor:(CDUnknownBlockType)arg1 propertyKeysToCopy:(id)arg2 recurseOnWeakRelations:(_Bool)arg3;	// IMP=0x0000000000014a81
- (id)previouslySavedCopy;	// IMP=0x0000000000014960
- (id)snapshotCopyWithPropertyKeysToCopy:(id)arg1;	// IMP=0x00000000000148d8
- (id)snapshotCopy;	// IMP=0x00000000000148c4
- (id)committedCopy;	// IMP=0x00000000000147f3
- (id)duplicateToEventStore:(id)arg1;	// IMP=0x0000000000014780
- (id)duplicate;	// IMP=0x0000000000014721
- (id)_copyWithoutChangesInZone:(struct _NSZone *)arg1;	// IMP=0x00000000000146a3
- (id)shallowCopyWithoutChanges;	// IMP=0x0000000000014687
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000014632
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000014620
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000001453b
@property(readonly) unsigned long long hash;
- (_Bool)existsInStore;	// IMP=0x000000000001449a
- (int)rowID;	// IMP=0x0000000000014456
@property(readonly, nonatomic) CADGenerationStampedObjectID *CADObjectID;
- (id)objectID;	// IMP=0x00000000000143b6
@property(retain, nonatomic) EKEventStore *eventStore;
- (void)rebaseSkippingRelationProperties:(id)arg1 toEventStore:(id)arg2;	// IMP=0x0000000000013cc6
- (void)rebaseSkippingRelationProperties:(id)arg1;	// IMP=0x0000000000013c51
- (void)rebaseToEventStore:(id)arg1;	// IMP=0x0000000000013c3a
- (void)rebase;	// IMP=0x0000000000013bee
@property(readonly, nonatomic) _Bool isPartialObject;
- (Class)frozenClass;	// IMP=0x0000000000013bc4
- (_Bool)isPropertyUnavailable:(id)arg1;	// IMP=0x0000000000013bb0
@property(readonly, nonatomic) NSDictionary *preFrozenRelationshipObjects;
@property(readonly, nonatomic) _Bool canBeConvertedToFullObject;
@property(readonly, nonatomic) _Bool isFrozen;
- (id)existingMeltedObject;	// IMP=0x0000000000013b8f
- (id)meltedObjectInStore:(id)arg1;	// IMP=0x00000000000139c9
- (_Bool)isEqual:(id)arg1 comparingKeys:(id)arg2 compareImmutableKeys:(_Bool)arg3 ignoringProperties:(id)arg4;	// IMP=0x00000000000126b0
- (_Bool)isEqual:(id)arg1 ignoringProperties:(id)arg2;	// IMP=0x0000000000012696
- (_Bool)isCompletelyEqual:(id)arg1;	// IMP=0x000000000001267e
- (id)frozenObject;	// IMP=0x000000000001266c
- (id)initWithObject:(id)arg1;	// IMP=0x0000000000012641
- (_Bool)isDifferentFromCommitted;	// IMP=0x00000000000125ca
@property(readonly, nonatomic) _Bool hasChanges;
@property(readonly, nonatomic, getter=isNew) _Bool new;
@property(readonly, nonatomic) NSString *semanticIdentifier;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
- (_Bool)_isPropertyUnavailable:(id)arg1 convertToFullObjectIfUnavailable:(_Bool)arg2;	// IMP=0x000000000001240c
@property(retain, nonatomic) EKPersistentObject *backingObject;
- (id)initWithObjectForCopy:(id)arg1;	// IMP=0x0000000000012397
- (id)initWithPersistentObject:(id)arg1;	// IMP=0x00000000000122ed
- (id)init;	// IMP=0x0000000000012292
- (void)_addSummaryWithDepth:(long long)arg1 toMutableString:(id)arg2 indentFirstLine:(_Bool)arg3;	// IMP=0x00000000000354da
- (id)_summaryWithDepth:(long long)arg1;	// IMP=0x0000000000035444
- (id)_basicSummaryWithDepth:(long long)arg1;	// IMP=0x0000000000035140
- (void)_cachedMeltedChildIdentifierToParentMap:(id)arg1;	// IMP=0x00000000000c1375
- (id)cachedMeltedChildIdentifierToParentMap;	// IMP=0x00000000000c133d
- (id)prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:(id)arg1;	// IMP=0x00000000000c1152
- (id)backingObjectOfChildObject:(id)arg1 withRelationshipKey:(id)arg2;	// IMP=0x00000000000c0e4a
- (id)_convertBackingObjectsWithPath:(id)arg1 updateBackingObjects:(_Bool)arg2 allChangedBackingObjects:(id)arg3 eventStore:(id)arg4 updatedBackingObjectProvider:(id)arg5;	// IMP=0x00000000000bfe69
- (id)privacyDescription;	// IMP=0x00000000000bfded
@property(readonly, nonatomic) NSString *specificIdentifier;
- (void)applyChangeSetFromOtherObject:(id)arg1;	// IMP=0x00000000000be05b
- (id)inverseObjectWithObject:(id)arg1 diff:(id *)arg2;	// IMP=0x00000000000bdf81
- (id)diffWithObject:(id)arg1;	// IMP=0x00000000000bdf62
- (void)emptyMeltedCacheForKeys:(id)arg1;	// IMP=0x00000000000bde7f
- (void)emptyMeltedCacheForKey:(id)arg1;	// IMP=0x00000000000bdd9c
- (void)emptyMeltedCache;	// IMP=0x00000000000bdd0f
- (void)_resetMeltedCache;	// IMP=0x00000000000bd213
- (void)_resetInternalState;	// IMP=0x00000000000bd20d
- (void)_resetAfterUpdatingChangeSetOrBackingObject;	// IMP=0x00000000000bd1df
- (void)updateMultiValueCacheForChangeSet:(id)arg1 preservingExistingAdds:(_Bool)arg2;	// IMP=0x00000000000bc833
- (void)updateMeltedCacheForChangeSet:(id)arg1;	// IMP=0x00000000000bc5da
- (void)updateAfterApplyingChanges:(id)arg1;	// IMP=0x00000000000bc5ac
- (unsigned long long)meltedAndCachedMultiRelationCountForKey:(id)arg1;	// IMP=0x00000000000bc3a8
- (void)updateMeltedAndCachedMultiRelationObjects:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000bc17f
- (id)meltedAndCachedMultiRelationObjectsForKey:(id)arg1;	// IMP=0x00000000000bbdd3
- (void)updateMeltedAndCachedSingleRelationObject:(id)arg1 forKey:(id)arg2 frozenClass:(Class)arg3;	// IMP=0x00000000000bbc06
- (id)meltedAndCachedSingleRelationObjectForKey:(id)arg1;	// IMP=0x00000000000bba4e
- (id)frozenOrMeltedCachedMultiRelationObjectsForKey:(id)arg1;	// IMP=0x00000000000bb9d9
- (id)frozenOrMeltedCachedSingleRelationObjectForKey:(id)arg1;	// IMP=0x00000000000bb967
- (id)cachedMeltedObjectForSingleValueKey:(id)arg1;	// IMP=0x00000000000bb7e1
- (void)setCachedMeltedObject:(id)arg1 forSingleValueKey:(id)arg2;	// IMP=0x00000000000bb697
- (id)cachedMeltedObjectsForMultiValueKey:(id)arg1;	// IMP=0x00000000000bb4ce
- (void)setCachedMeltedObjects:(id)arg1 forMultiValueKey:(id)arg2;	// IMP=0x00000000000bb377
- (void)_removeCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;	// IMP=0x00000000000bb278
- (void)removeCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;	// IMP=0x00000000000bb1d9
- (void)_addCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;	// IMP=0x00000000000bb121
- (void)addCachedMeltedObject:(id)arg1 forMultiValueKey:(id)arg2;	// IMP=0x00000000000bb082
- (void)_updateCachedMeltedObjectSetForMultiValueKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000bae67
- (unsigned long long)_cachedMeltedObjectsCount;	// IMP=0x00000000000bad6b
- (void)_applyKnownImmutableValuesFrom:(id)arg1;	// IMP=0x00000000000baaea
- (void)_applyDefinedAfterFirstSaveFrom:(id)arg1;	// IMP=0x00000000000baad8
- (void)_resetWithFrozenObject:(id)arg1;	// IMP=0x00000000000baa65
- (_Bool)revert;	// IMP=0x00000000000baa53
- (void)refetch;	// IMP=0x00000000000baa41
- (_Bool)_refreshCommon;	// IMP=0x00000000000b9a30
- (_Bool)_refreshable;	// IMP=0x00000000000b97bd
- (_Bool)_resetCommon;	// IMP=0x00000000000b932e
- (_Bool)_resetIfBackingObjectIsOfClass:(Class)arg1 fetchResetFrozenObjectBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b927b
- (void)_rollbackCommon;	// IMP=0x00000000000b8d1e
- (id)changedKeys;	// IMP=0x00000000000b89b9
- (void)replaceMultiChangedObjectValuesWithObjectValues:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b891a
- (void)removeMultiChangedObjectValues:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b871e
- (void)removeMultiChangedObjectValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b869d
- (void)addMultiChangedObjectValues:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b84a1
- (void)addMultiChangedObjectValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b8420
- (id)multiChangedObjectValuesForKey:(id)arg1;	// IMP=0x00000000000b81dc
- (void)setSingleChangedValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b7fe0
- (id)singleChangedValueForKey:(id)arg1;	// IMP=0x00000000000b7d9c
- (void)applyChanges:(id)arg1;	// IMP=0x00000000000b7d22
- (void)_addChanges:(id)arg1 copyingBackingObjects:(_Bool)arg2;	// IMP=0x00000000000b7b9f
- (void)addChanges:(id)arg1;	// IMP=0x00000000000b7b88
- (void)_addChangesFromObject:(id)arg1 except:(id)arg2 keep:(id)arg3 ignoreRelations:(id)arg4 copyingBackingObjects:(_Bool)arg5;	// IMP=0x00000000000b6b9e
- (void)addChangesFromObject:(id)arg1 copyingBackingObjects:(_Bool)arg2;	// IMP=0x00000000000b6b78
- (void)addChangesFromObject:(id)arg1;	// IMP=0x00000000000b6b61
- (id)_previousValueForKey:(id)arg1;	// IMP=0x00000000000b6a6a
- (_Bool)_areOnlyChangedKeys:(id)arg1;	// IMP=0x00000000000b66b3
- (_Bool)_isOnlyChangedKey:(id)arg1;	// IMP=0x00000000000b6659
- (_Bool)_hasChangesForKey:(id)arg1 checkUnsaved:(_Bool)arg2;	// IMP=0x00000000000b631d
- (_Bool)_hasChangesForKey:(id)arg1;	// IMP=0x00000000000b6306
- (id)_multiRelationshipKeysToCheckForChanges;	// IMP=0x00000000000b629b
- (id)_singleRelationshipKeysToCheckForChanges;	// IMP=0x00000000000b61c2
- (_Bool)_hasChangeHelperInKeys:(id)arg1 ignoreKeys:(id)arg2 checkUnsaved:(_Bool)arg3;	// IMP=0x00000000000b5ed6
- (_Bool)_hasUnsavedChangesInKeys:(id)arg1 ignoreKeys:(id)arg2;	// IMP=0x00000000000b5ca7
- (_Bool)hasUnsavedChangesIgnoreKeys:(id)arg1;	// IMP=0x00000000000b5c90
- (_Bool)hasUnsavedChangesInKeys:(id)arg1;	// IMP=0x00000000000b5c7c
- (_Bool)hasUnsavedChanges;	// IMP=0x00000000000b5c68
- (_Bool)_hasChanges;	// IMP=0x00000000000b5bb8
- (_Bool)isSaved;	// IMP=0x00000000000b5b41
- (_Bool)isUndeleted;	// IMP=0x00000000000b5afd
- (_Bool)isDeleted;	// IMP=0x00000000000b5ab9
- (_Bool)_isNew;	// IMP=0x00000000000b5a75
- (void)_markAsCommittedCommon;	// IMP=0x00000000000b59f0
- (void)_markAsSavedCommon;	// IMP=0x00000000000b5440
- (void)_markAsUndeletedCommon;	// IMP=0x00000000000b53ab
- (void)_markAsDeletedCommon;	// IMP=0x00000000000b5359
- (void)_markAsNotNewCommon;	// IMP=0x00000000000b531a
- (void)_markAsNewCommon;	// IMP=0x00000000000b5285
- (void)_initChangeSetIfNone;	// IMP=0x00000000000b5221
- (_Bool)validateWithOwner:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000b51be
- (_Bool)validate:(id *)arg1;	// IMP=0x00000000000b4719
- (id)cachedValueForKey:(id)arg1 expectingCachedValue:(id)arg2 forMasterKey:(id)arg3 relatedKeys:(id)arg4 populateBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000000000b3e36
- (void)clearCachedValuesForKeys:(id)arg1;	// IMP=0x00000000000b3c17
- (void)clearCachedValueForKey:(id)arg1;	// IMP=0x00000000000b3b34
- (void)setCachedValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000b3a1f
- (id)cachedValueForKey:(id)arg1 populateBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b36dd
- (id)cachedValueForKey:(id)arg1;	// IMP=0x00000000000b36c9
- (void)_performWithWriteLock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000b364c
- (void)_performWithReadLock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000b35da
- (id)_readWriteLock;	// IMP=0x00000000000b3581
- (void)_sharedInit;	// IMP=0x00000000000b3511

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

