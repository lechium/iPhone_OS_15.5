//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class EKSource, NSString;

@interface EKCalendar
{
    unsigned long long _cachedJunkStatus;	// 8 = 0x8
}

+ (id)typeDescription:(long long)arg1;	// IMP=0x00000000000c5c99
+ (id)_eventKitBundle;	// IMP=0x00000000000c4d53
+ (id)calendarForEntityTypes:(unsigned long long)arg1 eventStore:(id)arg2;	// IMP=0x00000000000c4a38
+ (id)calendarForEntityType:(unsigned long long)arg1 eventStore:(id)arg2;	// IMP=0x00000000000c4959
+ (id)calendarWithEventStore:(id)arg1;	// IMP=0x00000000000c4942
+ (id)knownSingleValueKeysForComparison;	// IMP=0x00000000000c46d2
+ (id)knownIdentityKeysForComparison;	// IMP=0x00000000000c462b
+ (id)knownRelationshipMultiValueKeys;	// IMP=0x00000000000c4576
+ (id)knownRelationshipSingleValueKeys;	// IMP=0x00000000000c44cf
+ (id)knownRelationshipWeakKeys;	// IMP=0x00000000000c4428
+ (_Bool)isWeakRelationship;	// IMP=0x00000000000c4420
+ (Class)frozenClass;	// IMP=0x00000000000c440f
+ (id)rowIDsForCalendars:(id)arg1;	// IMP=0x00000000000c41bc
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;	// IMP=0x000000000007cdbc
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;	// IMP=0x000000000007cced
@property(nonatomic) unsigned long long cachedJunkStatus; // @synthesize cachedJunkStatus=_cachedJunkStatus;
- (_Bool)couldBeJunk;	// IMP=0x00000000000cbd36
- (void)setIsJunk:(_Bool)arg1;	// IMP=0x00000000000cbae7
- (_Bool)supportsJunkReporting;	// IMP=0x00000000000cbaa3
- (id)sendersPhoneNumber;	// IMP=0x00000000000cba91
- (id)sendersEmail;	// IMP=0x00000000000cba7f
- (id)exportDataWithOptions:(unsigned long long)arg1;	// IMP=0x00000000000cb890
- (id)exportData;	// IMP=0x00000000000cb87c
- (_Bool)isManaged;	// IMP=0x00000000000cb808
- (_Bool)remove:(id *)arg1;	// IMP=0x00000000000cb6dc
- (_Bool)save:(id *)arg1;	// IMP=0x00000000000cb67a
- (_Bool)validate:(id *)arg1;	// IMP=0x00000000000cae3c
- (_Bool)automaticEventLocationGeocodingAllowed;	// IMP=0x00000000000cae0e
- (void)setDigest:(id)arg1;	// IMP=0x00000000000cadf2
- (id)digest;	// IMP=0x00000000000cadd6
- (void)setPushKey:(id)arg1;	// IMP=0x00000000000cadba
- (id)pushKey;	// IMP=0x00000000000cad9e
- (void)setNotes:(id)arg1;	// IMP=0x00000000000cad82
- (id)notes;	// IMP=0x00000000000cad66
- (void)setSubcalAccountID:(id)arg1;	// IMP=0x00000000000cad4a
- (id)subcalAccountID;	// IMP=0x00000000000cad2e
- (void)setPubcalAccountID:(id)arg1;	// IMP=0x00000000000cad12
- (id)pubcalAccountID;	// IMP=0x00000000000cacf6
- (id)ownerIdentityOrganizer;	// IMP=0x00000000000cab47
- (void)setOwnerIdentityLastName:(id)arg1;	// IMP=0x00000000000cab2b
- (id)ownerIdentityLastName;	// IMP=0x00000000000cab0f
- (void)setOwnerIdentityFirstName:(id)arg1;	// IMP=0x00000000000caaf3
- (id)ownerIdentityFirstName;	// IMP=0x00000000000caad7
- (void)setOwnerIdentityAddress:(id)arg1;	// IMP=0x00000000000caa53
- (id)ownerIdentityAddress;	// IMP=0x00000000000ca9ef
- (void)setOwnerIdentityAddressString:(id)arg1;	// IMP=0x00000000000ca9d3
- (id)ownerIdentityAddressString;	// IMP=0x00000000000ca9b7
- (void)setOwnerIdentityPhoneNumber:(id)arg1;	// IMP=0x00000000000ca99b
- (id)ownerIdentityPhoneNumber;	// IMP=0x00000000000ca97f
- (void)setOwnerIdentityEmail:(id)arg1;	// IMP=0x00000000000ca963
- (id)ownerIdentityEmail;	// IMP=0x00000000000ca947
- (void)setOwnerIdentityId:(int)arg1;	// IMP=0x00000000000ca8ea
- (int)ownerIdentityId;	// IMP=0x00000000000ca89c
- (void)setOwnerIdentityDisplayName:(id)arg1;	// IMP=0x00000000000ca83b
- (id)ownerIdentityDisplayName;	// IMP=0x00000000000ca798
- (void)setSelfIdentityLastName:(id)arg1;	// IMP=0x00000000000ca77c
- (id)selfIdentityLastName;	// IMP=0x00000000000ca760
- (void)setSelfIdentityFirstName:(id)arg1;	// IMP=0x00000000000ca744
- (id)selfIdentityFirstName;	// IMP=0x00000000000ca728
- (void)setSelfIdentityAddress:(id)arg1;	// IMP=0x00000000000ca6d9
- (id)selfIdentityAddress;	// IMP=0x00000000000ca675
- (void)setSelfIdentityAddressString:(id)arg1;	// IMP=0x00000000000ca659
- (id)selfIdentityAddressString;	// IMP=0x00000000000ca63d
- (void)setSelfIdentityPhoneNumber:(id)arg1;	// IMP=0x00000000000ca621
- (id)selfIdentityPhoneNumber;	// IMP=0x00000000000ca605
- (void)setSelfIdentityEmail:(id)arg1;	// IMP=0x00000000000ca5e9
- (id)selfIdentityEmail;	// IMP=0x00000000000ca5cd
- (void)setSelfIdentityDisplayName:(id)arg1;	// IMP=0x00000000000ca5b1
- (id)selfIdentityDisplayName;	// IMP=0x00000000000ca50e
- (id)findOriginalAlarmStartingWith:(id)arg1;	// IMP=0x00000000000ca32e
- (void)removeAllSnoozedAlarms;	// IMP=0x00000000000ca148
- (void)removeAcknowledgedSnoozedAlarms;	// IMP=0x00000000000c9f0f
- (_Bool)isAlarmAcknowledgedPropertyDirty;	// IMP=0x00000000000c9d97
- (void)snoozeAlarm:(id)arg1 withLocation:(id)arg2 proximity:(long long)arg3;	// IMP=0x00000000000c9bd6
- (void)snoozeAlarm:(id)arg1 withTimeIntervalFromNow:(double)arg2;	// IMP=0x00000000000c9a86
- (void)removeAlarms:(id)arg1;	// IMP=0x00000000000c99de
- (void)addAlarms:(id)arg1;	// IMP=0x00000000000c9936
- (void)setAllAlarms:(id)arg1;	// IMP=0x00000000000c991a
- (id)allAlarms;	// IMP=0x00000000000c98b5
- (void)setAlarms:(id)arg1;	// IMP=0x00000000000c94f0
- (id)alarms;	// IMP=0x00000000000c9443
- (id)shareesAndOwner;	// IMP=0x00000000000c91ee
- (_Bool)hasSharees;	// IMP=0x00000000000c9103
- (void)removeSharee:(id)arg1;	// IMP=0x00000000000c90c4
- (void)addSharee:(id)arg1;	// IMP=0x00000000000c907e
- (void)setSharees:(id)arg1;	// IMP=0x00000000000c8fc4
- (id)sharees;	// IMP=0x00000000000c8f5f
- (void)moveSubscribedCalendarToSource:(id)arg1;	// IMP=0x00000000000c8c2a
- (void)setStripAttachments:(_Bool)arg1;	// IMP=0x00000000000c8c13
- (_Bool)stripAttachments;	// IMP=0x00000000000c8bfc
- (void)setStripAlarms:(_Bool)arg1;	// IMP=0x00000000000c8be5
- (_Bool)stripAlarms;	// IMP=0x00000000000c8bce
- (_Bool)isSyncing;	// IMP=0x00000000000c8b05
- (id)lastSyncEndDate;	// IMP=0x00000000000c8ae9
- (void)setLastSyncEndDate:(id)arg1;	// IMP=0x00000000000c8acd
- (id)lastSyncStartDate;	// IMP=0x00000000000c8ab1
- (void)setLastSyncStartDate:(id)arg1;	// IMP=0x00000000000c8a95
- (id)calendarError;	// IMP=0x00000000000c8979
- (void)setLastSyncErrorData:(id)arg1;	// IMP=0x00000000000c895d
- (id)lastSyncErrorData;	// IMP=0x00000000000c8941
- (void)setLastSyncError:(unsigned long long)arg1;	// IMP=0x00000000000c88e4
- (unsigned long long)lastSyncError;	// IMP=0x00000000000c8896
- (id)lastSyncErrorUserInfo;	// IMP=0x00000000000c8833
- (void)setLastSyncErrorUserInfo:(id)arg1;	// IMP=0x00000000000c87e0
- (void)setLastSyncError:(unsigned long long)arg1 userInfo:(id)arg2;	// IMP=0x00000000000c8763
- (void)setSubcalURL:(id)arg1;	// IMP=0x00000000000c8747
- (id)subcalURL;	// IMP=0x00000000000c872b
- (void)setSubscriptionID:(id)arg1;	// IMP=0x00000000000c870f
- (id)subscriptionID;	// IMP=0x00000000000c86f3
- (void)setRefreshInterval:(int)arg1;	// IMP=0x00000000000c8696
- (int)refreshInterval;	// IMP=0x00000000000c8648
- (void)setRefreshDate:(id)arg1;	// IMP=0x00000000000c862c
- (id)refreshDate;	// IMP=0x00000000000c8610
@property(readonly, nonatomic) unsigned long long supportedEventAvailabilities;
- (void)setAllowReminders:(_Bool)arg1;	// IMP=0x00000000000c84e8
- (void)setAllowsEvents:(_Bool)arg1;	// IMP=0x00000000000c84bf
- (_Bool)allowReminders;	// IMP=0x00000000000c84a7
- (_Bool)allowEvents;	// IMP=0x00000000000c8492
- (_Bool)hasTasks;	// IMP=0x00000000000c82f2
- (_Bool)hasEvents;	// IMP=0x00000000000c8138
- (void)setAllowedEntityTypes:(unsigned long long)arg1;	// IMP=0x00000000000c810e
@property(readonly, nonatomic) unsigned long long allowedEntityTypes;
- (void)setAllowedEntities:(int)arg1;	// IMP=0x00000000000c8086
- (int)allowedEntities;	// IMP=0x00000000000c8038
@property(retain, nonatomic) EKSource *source;
- (id)externalURI;	// IMP=0x00000000000c7c81
- (id)selectionSyncIdentifier;	// IMP=0x00000000000c7a85
- (id)syncHash;	// IMP=0x00000000000c78a1
- (void)setExternalRepresentation:(id)arg1;	// IMP=0x00000000000c7885
- (id)externalRepresentation;	// IMP=0x00000000000c7869
- (void)setSyncToken:(id)arg1;	// IMP=0x00000000000c784d
- (id)syncToken;	// IMP=0x00000000000c7831
- (void)setExternalModificationTag:(id)arg1;	// IMP=0x00000000000c7815
- (id)externalModificationTag;	// IMP=0x00000000000c77f9
- (void)setExternalIDTag:(id)arg1;	// IMP=0x00000000000c77dd
- (id)externalIDTag;	// IMP=0x00000000000c77c1
- (void)setExternalID:(id)arg1;	// IMP=0x00000000000c77a5
- (id)externalID;	// IMP=0x00000000000c7789
- (void)setIsAffectingAvailability:(_Bool)arg1;	// IMP=0x00000000000c7772
- (_Bool)isAffectingAvailability;	// IMP=0x00000000000c775b
- (void)setIsIgnoringSharedCalendarNotifications:(_Bool)arg1;	// IMP=0x00000000000c7744
- (_Bool)isIgnoringSharedCalendarNotifications;	// IMP=0x00000000000c772d
- (_Bool)allowsIgnoringSharedEventChangeNotifications;	// IMP=0x00000000000c76c2
- (void)setIsIgnoringEventAlerts:(_Bool)arg1;	// IMP=0x00000000000c76ab
- (_Bool)isIgnoringEventAlerts;	// IMP=0x00000000000c7694
- (_Bool)isMutableNaturalLanguageSuggestionsCalendar;	// IMP=0x00000000000c7635
- (_Bool)isMutableSuggestionsCalendar;	// IMP=0x00000000000c75d6
- (_Bool)isNaturalLanguageSuggestedEventCalendar;	// IMP=0x00000000000c75bf
- (_Bool)isSuggestedEventCalendar;	// IMP=0x00000000000c75a8
- (_Bool)isSuggestionsCalendar;	// IMP=0x00000000000c7596
- (void)setMarkedImmutableSharees:(_Bool)arg1;	// IMP=0x00000000000c757f
- (_Bool)isMarkedImmutableSharees;	// IMP=0x00000000000c7568
- (void)setMarkedUndeletable:(_Bool)arg1;	// IMP=0x00000000000c7551
- (_Bool)isMarkedUndeletable;	// IMP=0x00000000000c753a
- (void)setFamilyCalendar:(_Bool)arg1;	// IMP=0x00000000000c7523
- (_Bool)isFamilyCalendar;	// IMP=0x00000000000c750c
- (void)setSubscribedHolidayCalendar:(_Bool)arg1;	// IMP=0x00000000000c74f5
- (_Bool)isSubscribedHolidayCalendar;	// IMP=0x00000000000c74de
- (_Bool)isHolidaySubscribedCalendar;	// IMP=0x00000000000c74cc
- (void)setFacebookBirthdayCalendar:(_Bool)arg1;	// IMP=0x00000000000c74b5
- (_Bool)isFacebookBirthdayCalendar;	// IMP=0x00000000000c749e
- (void)setCanBeShared:(_Bool)arg1;	// IMP=0x00000000000c7487
- (_Bool)canBeShared;	// IMP=0x00000000000c7470
- (void)setCanBePublished:(_Bool)arg1;	// IMP=0x00000000000c7459
- (_Bool)canBePublished;	// IMP=0x00000000000c7442
- (_Bool)isPublished;	// IMP=0x00000000000c73f4
- (void)setIsPublished:(_Bool)arg1;	// IMP=0x00000000000c7397
- (void)setPublishURL:(id)arg1;	// IMP=0x00000000000c7348
- (id)publishURL;	// IMP=0x00000000000c72e4
- (void)setPublishURLString:(id)arg1;	// IMP=0x00000000000c72c8
- (id)publishURLString;	// IMP=0x00000000000c72ac
- (id)sharedOwnerPhoneNumber;	// IMP=0x00000000000c725c
- (id)sharedOwnerEmail;	// IMP=0x00000000000c720c
- (id)sharedOwnerAddress;	// IMP=0x00000000000c71bc
- (void)setSharedOwnerAddress:(id)arg1;	// IMP=0x00000000000c7169
- (id)sharedOwnerURL;	// IMP=0x00000000000c7105
- (void)setSharedOwnerURL:(id)arg1;	// IMP=0x00000000000c70b6
- (id)sharedOwnerURLString;	// IMP=0x00000000000c709a
- (void)setSharedOwnerURLString:(id)arg1;	// IMP=0x00000000000c707e
- (id)sharedOwnerName;	// IMP=0x00000000000c7062
- (void)setSharedOwnerName:(id)arg1;	// IMP=0x00000000000c7046
- (unsigned long long)sharingInvitationResponse;	// IMP=0x00000000000c6ff8
- (void)setSharingInvitationResponse:(unsigned long long)arg1;	// IMP=0x00000000000c6f9b
- (void)clearInvitationStatus;	// IMP=0x00000000000c6f54
- (void)setInvitationStatus:(unsigned long long)arg1;	// IMP=0x00000000000c6ef7
- (unsigned long long)invitationStatus;	// IMP=0x00000000000c6ea9
- (void)setSharingStatus:(unsigned long long)arg1;	// IMP=0x00000000000c6e4c
- (unsigned long long)sharingStatus;	// IMP=0x00000000000c6dfe
- (void)setSharingInvitation:(_Bool)arg1;	// IMP=0x00000000000c6de7
- (_Bool)isSharingInvitation;	// IMP=0x00000000000c6dd0
- (void)setProhibitsScheduling:(_Bool)arg1;	// IMP=0x00000000000c6db9
- (_Bool)prohibitsScheduling;	// IMP=0x00000000000c6da2
- (void)setAllowsScheduling:(_Bool)arg1;	// IMP=0x00000000000c6d8a
- (_Bool)allowsScheduling;	// IMP=0x00000000000c6d75
- (_Bool)_anyCalendarOfType:(unsigned long long)arg1 inSameSourceExistsPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x00000000000c6b9b
- (_Bool)_anotherCalendarForRemindersExists;	// IMP=0x00000000000c6b68
- (_Bool)_anotherCalendarForDefaultSchedulingExists;	// IMP=0x00000000000c6b38
- (_Bool)eligibleForDefaultSchedulingCalendar;	// IMP=0x00000000000c6a7b
- (_Bool)canMergeWithCalendar:(id)arg1;	// IMP=0x00000000000c66d7
- (long long)deletionWarningsMask;	// IMP=0x00000000000c6600
- (_Bool)_validateDeletableHelper:(id *)arg1;	// IMP=0x00000000000c6223
- (_Bool)_validateAccessConsent:(id *)arg1;	// IMP=0x00000000000c617a
- (_Bool)_validateDeletable:(id *)arg1;	// IMP=0x00000000000c613e
- (_Bool)isDeletable;	// IMP=0x00000000000c612a
- (void)setIsSubscribedCalendarJunk:(_Bool)arg1;	// IMP=0x00000000000c6113
- (_Bool)isSubscribedCalendarJunk;	// IMP=0x00000000000c60fc
- (void)setImmutable:(_Bool)arg1;	// IMP=0x00000000000c60e5
- (_Bool)isImmutableRaw;	// IMP=0x00000000000c60ce
@property(readonly, nonatomic, getter=isImmutable) _Bool immutable;
- (void)setHidden:(_Bool)arg1;	// IMP=0x00000000000c5f7b
- (_Bool)isHidden;	// IMP=0x00000000000c5f64
- (void)setSubscribed:(_Bool)arg1;	// IMP=0x00000000000c5f4d
@property(readonly, nonatomic, getter=isSubscribed) _Bool subscribed;
- (void)setNotificationsCollection:(_Bool)arg1;	// IMP=0x00000000000c5f1f
- (_Bool)isNotificationsCollection;	// IMP=0x00000000000c5f08
- (void)setInbox:(_Bool)arg1;	// IMP=0x00000000000c5ef1
- (_Bool)isInbox;	// IMP=0x00000000000c5eda
- (void)setIsDefaultSchedulingCalendar:(_Bool)arg1;	// IMP=0x00000000000c5ec3
- (_Bool)isDefaultSchedulingCalendar;	// IMP=0x00000000000c5eac
- (_Bool)refresh;	// IMP=0x00000000000c5e5f
- (id)description;	// IMP=0x00000000000c5d40
- (void)setDisplayOrder:(int)arg1;	// IMP=0x00000000000c5c3c
- (int)displayOrder;	// IMP=0x00000000000c5bee
- (void)setReadOnly:(_Bool)arg1;	// IMP=0x00000000000c5bd7
- (_Bool)readOnly;	// IMP=0x00000000000c5bc0
- (void)setAllowsContentModifications:(_Bool)arg1;	// IMP=0x00000000000c5ba8
@property(readonly, nonatomic) _Bool allowsContentModifications;
- (void)_setFlagValue:(_Bool)arg1 withMask:(unsigned int)arg2;	// IMP=0x00000000000c5a68
- (_Bool)_flagValueWithMask:(unsigned int)arg1;	// IMP=0x00000000000c5a47
- (void)setFlags:(unsigned int)arg1;	// IMP=0x00000000000c59ea
- (unsigned int)flags;	// IMP=0x00000000000c599c
- (void)setCalendarIdentifier:(id)arg1;	// IMP=0x00000000000c598a
@property(readonly, nonatomic) NSString *calendarIdentifier;
- (void)setUUID:(id)arg1;	// IMP=0x00000000000c595c
- (id)UUID;	// IMP=0x00000000000c5940
@property(readonly, nonatomic) long long type;
@property(nonatomic) struct CGColor *CGColor;
- (void)_clearCGColorCache;	// IMP=0x00000000000c54f0
- (_Bool)getColorRed:(int *)arg1 green:(int *)arg2 blue:(int *)arg3;	// IMP=0x00000000000c5471
- (void)setColorString:(id)arg1;	// IMP=0x00000000000c53e9
- (id)colorString;	// IMP=0x00000000000c535a
- (void)setColorStringRaw:(id)arg1;	// IMP=0x00000000000c533e
- (id)colorStringRaw;	// IMP=0x00000000000c5322
- (void)setColorDisplayOnly:(_Bool)arg1;	// IMP=0x00000000000c52c5
- (_Bool)isColorDisplayOnly;	// IMP=0x00000000000c5277
- (void)setSymbolicColorName:(id)arg1;	// IMP=0x00000000000c51b3
- (id)symbolicColorName;	// IMP=0x00000000000c5197
@property(copy, nonatomic) NSString *title;
- (void)setUnlocalizedTitle:(id)arg1;	// IMP=0x00000000000c4d37
- (id)unlocalizedTitle;	// IMP=0x00000000000c4d1b
- (_Bool)_reset;	// IMP=0x00000000000c4be0
- (void)reset;	// IMP=0x00000000000c4b9f
- (void)rollback;	// IMP=0x00000000000c4b5e
- (int)entityType;	// IMP=0x00000000000c4b53
- (id)init;	// IMP=0x00000000000c4b0f

@end

