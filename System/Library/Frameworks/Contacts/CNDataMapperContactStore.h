//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject;
@protocol CNContactsLogger, CNDataMapper, CNRegulatoryLogger;

@interface CNDataMapperContactStore
{
    id <CNDataMapper> _mapper;	// 8 = 0x8
    id <CNContactsLogger> _logger;	// 16 = 0x10
    _Bool _shouldLogPrivacyAccountingAccessEvents;	// 24 = 0x18
    id <CNRegulatoryLogger> _regulatoryLogger;	// 32 = 0x20
}

+ (Class)dataMapperClassForConfiguration:(id)arg1;	// IMP=0x000000000009af63
+ (_Bool)enableContactsOutOfProcess;	// IMP=0x000000000009acd1
- (void).cxx_destruct;	// IMP=0x00000000000a3748
@property(readonly, nonatomic) _Bool shouldLogPrivacyAccountingAccessEvents; // @synthesize shouldLogPrivacyAccountingAccessEvents=_shouldLogPrivacyAccountingAccessEvents;
@property(readonly, nonatomic) id <CNRegulatoryLogger> regulatoryLogger; // @synthesize regulatoryLogger=_regulatoryLogger;
@property(readonly, nonatomic) id <CNContactsLogger> logger; // @synthesize logger=_logger;
@property(readonly, retain, nonatomic) NSObject<CNDataMapper> *mapper; // @synthesize mapper=_mapper;
- (void)_logPrivacyAccountingForAccessType:(unsigned long long)arg1;	// IMP=0x00000000000a36a6
- (void)_logGreenTeaForAccessType:(unsigned long long)arg1;	// IMP=0x00000000000a363e
- (void)_logContactsAccessWasDeniedForAccessType:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x00000000000a359c
- (void)_logContactsAccessWasGrantedForAccessType:(unsigned long long)arg1;	// IMP=0x00000000000a34de
- (_Bool)_requestDataMapperAccessType:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000a3413
- (_Bool)requestMetadataAccessWithError:(id *)arg1;	// IMP=0x00000000000a33f9
- (_Bool)requestContactsWriteAccessWithError:(id *)arg1;	// IMP=0x00000000000a33df
- (_Bool)requestContactsReadAccessWithError:(id *)arg1;	// IMP=0x00000000000a33c8
- (void)requestReadAccessForEntityType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a327a
- (id)requestAccessForEntityType:(long long)arg1;	// IMP=0x00000000000a3026
- (_Bool)hasMultipleGroupsOrAccounts;	// IMP=0x00000000000a2f83
- (id)currentHistoryAnchor;	// IMP=0x00000000000a2e35
- (id)currentHistoryToken;	// IMP=0x00000000000a2d86
- (_Bool)executeChangeHistoryClearRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a2abf
- (id)changeHistoryWithFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a2587
- (_Bool)unregisterChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000a2281
- (_Bool)registerChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000a1f7b
- (id)matchingDictionaryForContact:(id)arg1;	// IMP=0x00000000000a1ea8
- (id)contactIdentifierWithMatchingDictionary:(id)arg1;	// IMP=0x00000000000a1c9a
- (id)descriptorForRequiredKeysForMatchingDictionary;	// IMP=0x00000000000a1c03
- (id)userActivityUserInfoForContact:(id)arg1;	// IMP=0x00000000000a19e2
- (id)contactWithUserActivityUserInfo:(id)arg1 keysToFetch:(id)arg2;	// IMP=0x00000000000a172b
- (void)setLegacyTetheredSyncComputerAnchor:(id)arg1;	// IMP=0x00000000000a166f
- (id)legacyTetheredSyncComputerAnchor;	// IMP=0x00000000000a15c0
- (void)setLegacyTetheredSyncDeviceAnchor:(id)arg1;	// IMP=0x00000000000a1504
- (id)legacyTetheredSyncDeviceAnchor;	// IMP=0x00000000000a1455
- (id)defaultContainerIdentifier;	// IMP=0x00000000000a12c9
- (_Bool)isValidSaveRequest:(id)arg1 authorizationContext:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000a0e6a
- (_Bool)executeSaveRequest:(id)arg1 response:(id *)arg2 authorizationContext:(id)arg3 error:(id *)arg4;	// IMP=0x00000000000a0672
- (_Bool)executeSaveRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a0658
- (id)accountsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a05b8
- (id)usedLabelsForPropertyWithKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a04f2
- (id)policyForContainerWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a024b
- (id)serverSearchContainersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009ffa4
- (id)containersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009fcfd
- (id)contactsInContainerWithIdentifier:(id)arg1 keysToFetch:(id)arg2 error:(id *)arg3;	// IMP=0x000000000009fcf5
- (id)subgroupsOfGroupWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009fa4e
- (id)membersOfGroupWithIdentifier:(id)arg1 keysToFetch:(id)arg2 error:(id *)arg3;	// IMP=0x000000000009f72a
- (id)groupWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009f2ed
- (id)groupsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009f046
- (id)executeFetchRequest:(id)arg1 progressiveResults:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000009ea17
- (id)contactsForFetchRequest:(id)arg1 matchInfos:(id *)arg2 error:(id *)arg3;	// IMP=0x000000000009e64a
- (_Bool)enumerateContactsAndMatchInfoWithFetchRequest:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000009dcfd
- (id)unifiedContactsMatchingPredicate:(id)arg1 keysToFetch:(id)arg2 error:(id *)arg3;	// IMP=0x000000000009d873
- (_Bool)moveContacts:(id)arg1 fromContainer:(id)arg2 toContainer:(id)arg3 error:(id *)arg4;	// IMP=0x000000000009d4f0
- (id)sectionListOffsetsForSortOrder:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000009d1e1
- (id)contactCountForFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009ce50
- (id)unifiedContactCountWithError:(id *)arg1;	// IMP=0x000000000009cad9
- (_Bool)setBestMeIfNeededForGivenName:(id)arg1 familyName:(id)arg2 email:(id)arg3 error:(id *)arg4;	// IMP=0x000000000009c6b9
- (_Bool)setMeContact:(id)arg1 forContainer:(id)arg2 error:(id *)arg3;	// IMP=0x000000000009c2b3
- (_Bool)setMeContact:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009bee8
- (id)meContactIdentifiers:(id *)arg1;	// IMP=0x000000000009bc25
- (int)saveSequenceCount;	// IMP=0x000000000009bb76
- (id)identifierWithError:(id *)arg1;	// IMP=0x000000000009bab5
- (id)description;	// IMP=0x000000000009ba0f
- (_Bool)resetSortDataIfNeededWithError:(id *)arg1;	// IMP=0x000000000009b72c
- (_Bool)setDefaultAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000009b3d5
- (id)initWithDataMapper:(id)arg1 dataMapperConfiguration:(id)arg2;	// IMP=0x000000000009b1ae
- (id)initWithConfiguration:(id)arg1;	// IMP=0x000000000009b0e8
- (id)initWithEnvironment:(id)arg1 managedConfiguration:(id)arg2;	// IMP=0x000000000009b042
- (id)initWithEnvironment:(id)arg1;	// IMP=0x000000000009b02e
- (id)init;	// IMP=0x000000000009afd4
- (id)iOSMapper;	// IMP=0x00000000000bda97

@end

