//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Contacts/CNDataMapper-Protocol.h>

@class CNAuthorization, NSString, NSXPCConnection;
@protocol CNContactsLogger, CNXPCDataMapperService;

@interface CNXPCDataMapper : NSObject <CNDataMapper>
{
    NSXPCConnection *_connection;	// 8 = 0x8
    id <CNContactsLogger> _logger;	// 16 = 0x10
    id <CNXPCDataMapperService> _serviceProxy;	// 24 = 0x18
    CNAuthorization *_authorization;	// 32 = 0x20
}

+ (id)serviceProtocolInterface;	// IMP=0x000000000002cf6f
+ (id)contactBuffersDecoderForFetchRequest:(id)arg1;	// IMP=0x000000000002c7f4
- (void).cxx_destruct;	// IMP=0x00000000000322db
@property(readonly, nonatomic) _Bool shouldLogPrivacyAccountingAccessEvents;
@property(readonly) _Bool shouldLogContactsAccess;
- (id)authorizedKeysForContactKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000322b4
- (_Bool)requestAccessForEntityType:(long long)arg1 error:(id *)arg2;	// IMP=0x0000000000032293
- (void)requestAccessForEntityType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000321c6
- (_Bool)writeFavoritesPropertyListData:(id)arg1 toPath:(id)arg2 error:(id *)arg3;	// IMP=0x000000000003217b
- (id)favoritesEntryDictionariesAtPath:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000032164
- (id)currentHistoryAnchor;	// IMP=0x00000000000320d8
- (id)currentHistoryToken;	// IMP=0x0000000000032074
- (_Bool)executeChangeHistoryClearRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003202c
- (id)changeHistoryWithFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000032015
- (_Bool)unregisterChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000031fca
- (_Bool)registerChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000031f7f
- (id)userActivityUserInfoForContact:(id)arg1;	// IMP=0x0000000000031e33
- (id)contactWithUserActivityUserInfo:(id)arg1 keysToFetch:(id)arg2;	// IMP=0x0000000000031cca
- (_Bool)setBestMeIfNeededForGivenName:(id)arg1 familyName:(id)arg2 email:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000031bc5
- (_Bool)setMeContact:(id)arg1 forContainer:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000031b7a
- (_Bool)setMeContact:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031b32
- (id)defaultContainerIdentifier;	// IMP=0x0000000000031b1f
- (id)subgroupsOfGroupWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031b08
- (id)groupsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031af1
- (id)accountsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031ada
- (id)policyForContainerWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031ac3
- (id)serverSearchContainersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031aac
- (id)containersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031a95
- (id)executeFetchRequest:(id)arg1 progressiveResults:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000317bb
- (_Bool)executeSaveRequest:(id)arg1 response:(id *)arg2 authorizationContext:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000031361
- (_Bool)executeSaveRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000031347
- (id)meContactIdentifiers:(id *)arg1;	// IMP=0x0000000000031333
- (id)identifierWithError:(id *)arg1;	// IMP=0x000000000003131f
- (id)contactObservableForFetchRequest:(id)arg1;	// IMP=0x000000000002ff44
- (id)sectionListOffsetsForSortOrder:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000002fd44
- (id)contactCountForFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000002fd2d
- (id)unifiedContactCountWithError:(id *)arg1;	// IMP=0x000000000002fd19
- (void)dealloc;	// IMP=0x000000000002ce21
- (id)initWithConfiguration:(id)arg1 connection:(id)arg2;	// IMP=0x000000000002c94e
- (id)initWithConfiguration:(id)arg1;	// IMP=0x000000000002c8cd
- (id)init;	// IMP=0x000000000002c842

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *legacyTetheredSyncComputerAnchor;
@property(retain, nonatomic) NSString *legacyTetheredSyncDeviceAnchor;
@property(readonly) Class superclass;

@end

