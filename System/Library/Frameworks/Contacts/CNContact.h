//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Contacts/CNContactAugmentation-Protocol.h>
#import <Contacts/CNSuggested-Protocol.h>
#import <Contacts/NSCopying-Protocol.h>
#import <Contacts/NSItemProviderReading-Protocol.h>
#import <Contacts/NSItemProviderWriting-Protocol.h>
#import <Contacts/NSMutableCopying-Protocol.h>
#import <Contacts/NSSecureCoding-Protocol.h>

@class CNActivityAlert, CNContactKeyVector, NSArray, NSData, NSDate, NSDateComponents, NSDictionary, NSSet, NSString, SGRecordId;
@protocol CNKeyDescriptor;

@interface CNContact : NSObject <NSItemProviderReading, NSItemProviderWriting, CNSuggested, CNContactAugmentation, NSCopying, NSMutableCopying, NSSecureCoding>
{
    NSString *_internalIdentifier;	// 8 = 0x8
    int _iOSLegacyIdentifier;	// 16 = 0x10
    NSString *_namePrefix;	// 24 = 0x18
    NSString *_givenName;	// 32 = 0x20
    NSString *_middleName;	// 40 = 0x28
    NSString *_familyName;	// 48 = 0x30
    NSString *_nameSuffix;	// 56 = 0x38
    NSString *_previousFamilyName;	// 64 = 0x40
    NSString *_nickname;	// 72 = 0x48
    NSString *_phoneticGivenName;	// 80 = 0x50
    NSString *_phoneticMiddleName;	// 88 = 0x58
    NSString *_phoneticFamilyName;	// 96 = 0x60
    NSString *_phoneticOrganizationName;	// 104 = 0x68
    NSString *_pronunciationGivenName;	// 112 = 0x70
    NSString *_pronunciationFamilyName;	// 120 = 0x78
    NSString *_explicitDisplayName;	// 128 = 0x80
    NSString *_sortingGivenName;	// 136 = 0x88
    NSString *_sortingFamilyName;	// 144 = 0x90
    NSString *_sectionForSortingByGivenName;	// 152 = 0x98
    NSString *_sectionForSortingByFamilyName;	// 160 = 0xa0
    NSString *_organizationName;	// 168 = 0xa8
    NSString *_departmentName;	// 176 = 0xb0
    NSString *_jobTitle;	// 184 = 0xb8
    NSDateComponents *_birthday;	// 192 = 0xc0
    NSDateComponents *_nonGregorianBirthday;	// 200 = 0xc8
    NSDate *_creationDate;	// 208 = 0xd0
    NSDate *_modificationDate;	// 216 = 0xd8
    NSString *_note;	// 224 = 0xe0
    NSData *_imageData;	// 232 = 0xe8
    struct CGRect _cropRect;	// 240 = 0xf0
    NSData *_thumbnailImageData;	// 272 = 0x110
    NSData *_fullscreenImageData;	// 280 = 0x118
    NSData *_syncImageData;	// 288 = 0x120
    _Bool _imageDataAvailable;	// 296 = 0x128
    NSString *_linkIdentifier;	// 304 = 0x130
    _Bool _preferredForName;	// 312 = 0x138
    _Bool _preferredForImage;	// 313 = 0x139
    NSString *_phonemeData;	// 320 = 0x140
    long long _contactType;	// 328 = 0x148
    long long _displayNameOrder;	// 336 = 0x150
    NSArray *_phoneNumbers;	// 344 = 0x158
    NSArray *_emailAddresses;	// 352 = 0x160
    NSArray *_urlAddresses;	// 360 = 0x168
    NSArray *_dates;	// 368 = 0x170
    NSArray *_instantMessageAddresses;	// 376 = 0x178
    NSArray *_contactRelations;	// 384 = 0x180
    NSArray *_socialProfiles;	// 392 = 0x188
    NSArray *_postalAddresses;	// 400 = 0x190
    NSArray *_calendarURIs;	// 408 = 0x198
    NSString *_cardDAVUID;	// 416 = 0x1a0
    NSString *_externalIdentifier;	// 424 = 0x1a8
    NSData *_externalRepresentation;	// 432 = 0x1b0
    NSString *_externalModificationTag;	// 440 = 0x1b8
    NSString *_externalUUID;	// 448 = 0x1c0
    NSString *_externalImageURI;	// 456 = 0x1c8
    CNActivityAlert *_callAlert;	// 464 = 0x1d0
    CNActivityAlert *_textAlert;	// 472 = 0x1d8
    NSString *_storeIdentifier;	// 480 = 0x1e0
    NSDictionary *_storeInfo;	// 488 = 0x1e8
    CNContact *_snapshot;	// 496 = 0x1f0
    NSArray *_linkedContacts;	// 504 = 0x1f8
    NSString *_accountIdentifier;	// 512 = 0x200
    CNContactKeyVector *_availableKeyDescriptor;	// 520 = 0x208
    NSString *_mapsData;	// 528 = 0x210
    NSString *_searchIndex;	// 536 = 0x218
    NSString *_preferredLikenessSource;	// 544 = 0x220
    NSString *_preferredApplePersonaIdentifier;	// 552 = 0x228
    NSString *_preferredChannel;	// 560 = 0x230
    NSString *_ISOCountryCode;	// 568 = 0x238
    NSString *_downtimeWhitelist;	// 576 = 0x240
    NSString *_imageType;	// 584 = 0x248
    NSData *_imageHash;	// 592 = 0x250
    NSData *_memojiMetadata;	// 600 = 0x258
    NSString *_cropRectID;	// 608 = 0x260
    NSData *_cropRectHash;	// 616 = 0x268
}

+ (void)you_used_a_property_that_you_didnt_request_when_you_fetched_the_contact;	// IMP=0x00000000000d664d
+ (id)previewURLForContact:(id)arg1;	// IMP=0x00000000000d64c8
+ (id)unifyContacts:(id)arg1;	// IMP=0x00000000000d64a7
+ (CDUnknownBlockType)preferredImageComparator;	// IMP=0x00000000000d6338
+ (CDUnknownBlockType)comparatorForNameSortOrder:(long long)arg1;	// IMP=0x00000000000d5d47
+ (id)descriptorWithKeyDescriptors:(id)arg1 description:(id)arg2;	// IMP=0x00000000000d3db2
+ (id)descriptorForKeyDescriptors:(id)arg1 description:(id)arg2;	// IMP=0x00000000000d3da0
+ (id)descriptorForAllImageDataKeys;	// IMP=0x00000000000d3cd3
+ (id)descriptorForAllComparatorKeys;	// IMP=0x00000000000d3cb5
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000d383a
+ (id)storeInfoFromCoder:(id)arg1 storeIdentifier:(id)arg2 key:(id)arg3;	// IMP=0x00000000000d366f
+ (id)makeContactAndMergeValuesFromAvailableKeysInContact:(id)arg1;	// IMP=0x00000000000d2ec5
+ (id)newContactWithPropertyKeys:(id)arg1 withValuesFromContact:(id)arg2;	// IMP=0x00000000000d26df
+ (id)contactWithContact:(id)arg1;	// IMP=0x00000000000d2650
+ (id)emptyContact;	// IMP=0x00000000000d25fb
+ (id)_contactWithContact:(id)arg1 createNewInstance:(_Bool)arg2 propertyDescriptions:(id)arg3;	// IMP=0x00000000000d1edb
+ (void)freezeIfInstancetypeIsImmutable:(id)arg1;	// IMP=0x00000000000d1afe
+ (id)contactWithDisplayName:(id)arg1 handleStrings:(id)arg2;	// IMP=0x00000000000d182b
+ (id)contactWithDisplayName:(id)arg1 emailOrPhoneNumber:(id)arg2;	// IMP=0x00000000000d16f4
+ (id)contact;	// IMP=0x00000000000d16e2
+ (id)contactWithIdentifierOnly:(id)arg1;	// IMP=0x00000000000d165a
+ (id)contactWithIdentifier:(id)arg1;	// IMP=0x00000000000d1611
+ (id)makeIdentifier;	// IMP=0x00000000000d15ff
+ (id)makeIdentifierString;	// IMP=0x00000000000d15af
+ (id)identifierProvider;	// IMP=0x00000000000d1543
+ (id)localizedStringForKey:(id)arg1;	// IMP=0x00000000000d1521
+ (id)alwaysFetchedKeys;	// IMP=0x00000000000ce34e
+ (id)os_log;	// IMP=0x00000000000ce2f2
+ (id)descriptorForRequiredKeysForSearchableItem;	// IMP=0x0000000000026854
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1;	// IMP=0x0000000000053c16
+ (id)predicateForContactsMatchingEmailAddress:(id)arg1;	// IMP=0x0000000000053bc4
+ (id)predicateForContactsInContainerWithIdentifier:(id)arg1;	// IMP=0x0000000000053b77
+ (id)predicateForContactsMatchingName:(id)arg1;	// IMP=0x0000000000053b2a
+ (id)predicateForContactsInGroupWithIdentifier:(id)arg1;	// IMP=0x0000000000053add
+ (id)predicateForContactsWithIdentifiers:(id)arg1;	// IMP=0x0000000000053a90
+ (id)predicateForMeContact;	// IMP=0x0000000000054698
+ (id)predicateForFaultFulfillmentForLegacyIdentifier:(unsigned int)arg1 identifier:(id)arg2;	// IMP=0x000000000005463c
+ (id)predicateForContactsWithNonUnifiedIdentifiers:(id)arg1;	// IMP=0x00000000000545ea
+ (id)predicateForContactsMatchingPreferredChannel:(id)arg1 limitOne:(_Bool)arg2;	// IMP=0x000000000005458e
+ (id)predicateForContactsMatchingInstantMessageAddress:(id)arg1;	// IMP=0x0000000000054541
+ (id)predicateForContactsMatchingSocialProfile:(id)arg1;	// IMP=0x00000000000544f4
+ (id)predicateForLegacyIdentifier:(unsigned int)arg1;	// IMP=0x00000000000544c0
+ (id)predicateForContactMatchingEKParticipantWithName:(id)arg1 emailAddress:(id)arg2 URL:(id)arg3 predicateDescription:(id)arg4;	// IMP=0x000000000005440f
+ (id)predicateForContactMatchingLabeledValueIdentifier:(id)arg1;	// IMP=0x00000000000543c2
+ (id)predicateForContactMatchingURLString:(id)arg1;	// IMP=0x0000000000054375
+ (id)predicateForContactsMatchingString:(id)arg1 accountIdentifier:(id)arg2 containerIdentifier:(id)arg3 groupIdentifier:(id)arg4;	// IMP=0x00000000000542c4
+ (id)predicateForPreferredNameInContainersWithIdentifiers:(id)arg1 groupsWithIdentifiers:(id)arg2;	// IMP=0x0000000000054254
+ (id)predicateForPreferredNameInRange:(struct _NSRange)arg1;	// IMP=0x0000000000054219
+ (id)predicateForContactMatchingPhoneNumberWithDigits:(id)arg1 countryCode:(id)arg2;	// IMP=0x00000000000541ae
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1 prefixHint:(id)arg2;	// IMP=0x0000000000054140
+ (id)predicateForContactMatchingPhoneNumber:(id)arg1;	// IMP=0x00000000000540f9
+ (id)predicateForContactMatchingMapString:(id)arg1;	// IMP=0x00000000000540ac
+ (id)predicateForContactsMatchingFullTextSearch:(id)arg1 containerIdentifiers:(id)arg2 groupIdentifiers:(id)arg3;	// IMP=0x0000000000054017
+ (id)predicateForContactsLinkedToContact:(id)arg1;	// IMP=0x0000000000053fca
+ (id)predicateForContactsLinkedToContactWithIdentifier:(id)arg1;	// IMP=0x0000000000053f7d
+ (id)predicateForContactsMatchingPostalAddress:(id)arg1;	// IMP=0x0000000000053f30
+ (id)predicateForContactsMatchingHandleStrings:(id)arg1 inContainersWithIdentifiers:(id)arg2;	// IMP=0x0000000000053ec0
+ (id)predicateForContactsMatchingHandleStrings:(id)arg1;	// IMP=0x0000000000053e71
+ (id)predicateForContactsMatchingPhoneNumber:(id)arg1 prefixHint:(id)arg2 groupIdentifiers:(id)arg3 limitToOneResult:(_Bool)arg4;	// IMP=0x0000000000053ddd
+ (id)predicateForContactsMatchingEmailAddress:(id)arg1 groupIdentifiers:(id)arg2 limitToOneResult:(_Bool)arg3;	// IMP=0x0000000000053d58
+ (id)predicateForContactMatchingEmailAddress:(id)arg1;	// IMP=0x0000000000053d09
+ (id)predicateForContactsWithOrganizationName:(id)arg1;	// IMP=0x0000000000053cbc
+ (id)predicateForContactsMatchingName:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000053c60
+ (id)predicateForAllContacts;	// IMP=0x00000000000546b1
+ (int)abPropertyIDfromContactPropertyKey:(id)arg1;	// IMP=0x0000000000061262
+ (id)contactPropertyKeyFromABPropertyID:(int)arg1;	// IMP=0x0000000000061167
+ (id)contactFromPerson:(void *)arg1 keysToFetch:(id)arg2 mutable:(_Bool)arg3;	// IMP=0x0000000000060c59
+ (id)contactFromPerson:(void *)arg1 keysToFetch:(id)arg2;	// IMP=0x0000000000060c44
+ (int)publicABPropertyIDFromContactPropertyKey:(id)arg1;	// IMP=0x00000000000614bb
+ (id)contactPropertyKeyFromPublicABPropertyID:(int)arg1;	// IMP=0x0000000000061496
+ (id)contactFromPublicABPerson:(void *)arg1 keysToFetch:(id)arg2 mutable:(_Bool)arg3;	// IMP=0x0000000000061436
+ (id)contactFromPublicABPerson:(void *)arg1 keysToFetch:(id)arg2;	// IMP=0x0000000000061421
+ (id)writableTypeIdentifiersForItemProvider;	// IMP=0x00000000000ec7b2
+ (id)contactWithVCardData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000ec71b
+ (id)contactWithArchivedData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000ec5a3
+ (_Bool)isVCardDataUTIType:(id)arg1;	// IMP=0x00000000000ec586
+ (_Bool)isContactUTIType:(id)arg1;	// IMP=0x00000000000ec537
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000ec439
+ (id)readableTypeIdentifiersForItemProvider;	// IMP=0x00000000000ec3b9
+ (id)suggestionIDFromContactIdentifier:(id)arg1;	// IMP=0x0000000000124976
+ (id)contactIdentifierFromSuggestionID:(id)arg1;	// IMP=0x000000000012491b
+ (id)contactFromSuggestion:(id)arg1;	// IMP=0x00000000001243c1
+ (id)predicateForSuggestionIdentifier:(unsigned long long)arg1;	// IMP=0x0000000000125095
- (void).cxx_destruct;	// IMP=0x00000000000d66f5
@property(readonly, copy, nonatomic) NSString *preferredChannel; // @synthesize preferredChannel=_preferredChannel;
@property(readonly, nonatomic) long long displayNameOrder; // @synthesize displayNameOrder=_displayNameOrder;
@property(readonly, copy, nonatomic) NSString *sortingFamilyName; // @synthesize sortingFamilyName=_sortingFamilyName;
@property(readonly, copy, nonatomic) NSString *sortingGivenName; // @synthesize sortingGivenName=_sortingGivenName;
@property(readonly, copy, nonatomic) NSData *cropRectHash; // @synthesize cropRectHash=_cropRectHash;
@property(readonly, copy, nonatomic) NSString *cropRectID; // @synthesize cropRectID=_cropRectID;
@property(readonly, copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(readonly, copy, nonatomic) NSDictionary *storeInfo; // @synthesize storeInfo=_storeInfo;
@property(readonly, copy, nonatomic) NSString *storeIdentifier; // @synthesize storeIdentifier=_storeIdentifier;
@property(readonly, copy, nonatomic) NSString *internalIdentifier; // @synthesize internalIdentifier=_internalIdentifier;
- (id)linkedIdentifierMap;	// IMP=0x00000000000d641d
- (_Bool)isEqualIgnoringIdentifiers:(id)arg1;	// IMP=0x00000000000d5bec
- (_Bool)areAllPropertiesEqualToContactIgnoringIdentifiers:(id)arg1;	// IMP=0x00000000000d59e7
- (_Bool)isProperty:(id)arg1 equalToOtherIgnoreIdentifiers:(id)arg2;	// IMP=0x00000000000d59cc
@property(readonly) unsigned long long hash;
- (_Bool)areAllPropertiesButContactIdentifierEqualToContact:(id)arg1;	// IMP=0x00000000000d562b
- (_Bool)areAllAvailableKeysEqualToContact:(id)arg1 ignoringIdentifiers:(_Bool)arg2;	// IMP=0x00000000000d5311
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000d4f06
- (id)shortDebugDescription;	// IMP=0x00000000000d4ddc
@property(readonly, copy) NSString *description;
- (id)diffToSnapshotAndReturnError:(id *)arg1;	// IMP=0x00000000000d4b5f
- (_Bool)hasChanges;	// IMP=0x00000000000d4b0b
- (id)snapshot;	// IMP=0x00000000000d4aa5
@property(readonly, copy, nonatomic) NSString *phoneticCompanyName;
@property(readonly, copy, nonatomic) NSString *phoneticFullName;
@property(readonly, copy, nonatomic) NSString *fullName;
@property(readonly, copy, nonatomic) NSString *stringForIndexing;
@property(readonly, copy, nonatomic) NSArray *mainStoreLinkedContacts;
- (id)linkedContactsFromStoreWithIdentifier:(id)arg1;	// IMP=0x00000000000d4748
@property(readonly, copy, nonatomic) NSArray *linkedContacts;
- (id)areKeysAvailable:(id)arg1 useIgnorableKeys:(_Bool)arg2 findMissingKeys:(_Bool)arg3;	// IMP=0x00000000000d3e5a
- (_Bool)areKeysAvailable:(id)arg1;	// IMP=0x00000000000d3de4
- (_Bool)isKeyAvailable:(id)arg1;	// IMP=0x00000000000d3dcb
@property(readonly, nonatomic) _Bool hasBeenPersisted;
- (_Bool)isUnifiedWithContactWithIdentifier:(id)arg1;	// IMP=0x00000000000d3aa9
@property(readonly, nonatomic, getter=isUnified) _Bool unified;
@property(readonly, nonatomic) NSSet *availableKeys;
- (id)keyVector;	// IMP=0x00000000000d3910
@property(readonly, nonatomic) id <CNKeyDescriptor> availableKeyDescriptor;
- (void)assertKeysAreAvailable:(id)arg1;	// IMP=0x00000000000d386e
- (void)assertKeyIsAvailable:(id)arg1;	// IMP=0x00000000000d3842
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000d343e
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000d2f57
- (id)selfOrMutableCopy;	// IMP=0x00000000000d2eab
- (id)copyWithCachedExternalData;	// IMP=0x00000000000d2e99
- (id)copyWithSelfAsSnapshot;	// IMP=0x00000000000d2e55
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000d2dd3
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000d2dc8
- (id)copyWithDistinctIdentifier;	// IMP=0x00000000000d2cfb
- (id)copyWithPropertyKeys:(id)arg1;	// IMP=0x00000000000d2a76
- (id)initWithIdentifier:(id)arg1 availableKeyDescriptor:(id)arg2;	// IMP=0x00000000000d1bf8
- (id)initWithIdentifier:(id)arg1;	// IMP=0x00000000000d1b77
- (id)init;	// IMP=0x00000000000d1b1c
@property(readonly, copy, nonatomic) NSDictionary *activityAlerts;
@property(readonly, copy, nonatomic) NSString *cardDAVUID;
@property(readonly, copy, nonatomic) NSData *memojiMetadata;
@property(readonly, copy, nonatomic) NSData *imageHash;
@property(readonly, copy, nonatomic) NSString *imageType;
@property(readonly, copy, nonatomic) NSString *downtimeWhitelist;
@property(readonly, copy, nonatomic) NSString *preferredApplePersonaIdentifier;
@property(readonly, copy, nonatomic) NSString *preferredLikenessSource;
@property(readonly, copy, nonatomic) NSString *searchIndex;
@property(readonly, copy, nonatomic) NSString *mapsData;
@property(readonly, copy, nonatomic) NSString *externalImageURI;
@property(readonly, copy, nonatomic) NSString *externalUUID;
@property(readonly, copy, nonatomic) NSString *externalModificationTag;
@property(readonly, copy, nonatomic) NSData *externalRepresentation;
@property(readonly, copy, nonatomic) NSString *externalIdentifier;
@property(readonly, copy, nonatomic) NSString *externalURI;
@property(readonly, copy, nonatomic) CNActivityAlert *textAlert;
@property(readonly, copy, nonatomic) CNActivityAlert *callAlert;
@property(readonly, copy, nonatomic) NSString *phonemeData;
@property(readonly, copy, nonatomic) NSDate *modificationDate;
@property(readonly, copy, nonatomic) NSDate *creationDate;
@property(readonly, copy, nonatomic) NSArray *calendarURIs;
@property(readonly, copy, nonatomic) NSArray *postalAddresses;
@property(readonly, copy, nonatomic) NSArray *socialProfiles;
@property(readonly, copy, nonatomic) NSArray *contactRelations;
@property(readonly, copy, nonatomic) NSArray *instantMessageAddresses;
@property(readonly, copy, nonatomic) NSArray *dates;
@property(readonly, copy, nonatomic) NSArray *urlAddresses;
@property(readonly, copy, nonatomic) NSArray *emailAddresses;
@property(readonly, copy, nonatomic) NSArray *phoneNumbers;
@property(readonly, nonatomic) long long contactType;
@property(readonly, nonatomic, getter=isPreferredForImage) _Bool preferredForImage;
- (_Bool)preferredForImage;	// IMP=0x00000000000cfcbd
@property(readonly, nonatomic, getter=isPreferredForName) _Bool preferredForName;
- (_Bool)preferredForName;	// IMP=0x00000000000cfc5e
@property(readonly, copy, nonatomic) NSString *linkIdentifier;
@property(readonly, copy, nonatomic) NSData *syncImageData;
@property(readonly, copy, nonatomic) NSData *fullscreenImageData;
@property(readonly, nonatomic) _Bool imageDataAvailable;
@property(readonly, copy, nonatomic) NSData *thumbnailImageData;
@property(readonly, nonatomic) struct CGRect cropRect;
@property(readonly, copy, nonatomic) NSData *imageData;
@property(readonly, copy, nonatomic) NSString *note;
@property(readonly, copy, nonatomic) NSDateComponents *nonGregorianBirthday;
@property(readonly, copy, nonatomic) NSDateComponents *birthday;
@property(readonly, copy, nonatomic) NSString *jobTitle;
@property(readonly, copy, nonatomic) NSString *departmentName;
@property(readonly, copy, nonatomic) NSString *organizationName;
@property(readonly, copy, nonatomic) NSString *sectionForSortingByGivenName;
@property(readonly, copy, nonatomic) NSString *sectionForSortingByFamilyName;
- (id)explicitDisplayName;	// IMP=0x00000000000cf010
@property(readonly, copy, nonatomic) NSString *pronunciationFamilyName;
@property(readonly, copy, nonatomic) NSString *pronunciationGivenName;
@property(readonly, copy, nonatomic) NSString *phoneticOrganizationName;
@property(readonly, copy, nonatomic) NSString *phoneticFamilyName;
@property(readonly, copy, nonatomic) NSString *phoneticMiddleName;
@property(readonly, copy, nonatomic) NSString *phoneticGivenName;
@property(readonly, copy, nonatomic) NSString *nickname;
@property(readonly, copy, nonatomic) NSString *previousFamilyName;
@property(readonly, copy, nonatomic) NSString *nameSuffix;
@property(readonly, copy, nonatomic) NSString *familyName;
@property(readonly, copy, nonatomic) NSString *middleName;
@property(readonly, copy, nonatomic) NSString *givenName;
@property(readonly, copy, nonatomic) NSString *namePrefix;
@property(readonly, nonatomic) int iOSLegacyIdentifier;
@property(readonly, copy, nonatomic) NSString *identifier;
- (id)_filteredArrayForValidValues:(id)arg1;	// IMP=0x000000000002799e
- (id)_searchableItemIncludingInternalAttributes:(_Bool)arg1;	// IMP=0x0000000000026c17
- (id)searchableItemAttributeSetForUserActivity;	// IMP=0x0000000000026b9c
- (id)searchableItemForDragging;	// IMP=0x0000000000026b88
- (id)searchableItemForIndexing;	// IMP=0x0000000000026b71
- (_Bool)overwritePerson:(void *)arg1 error:(id *)arg2;	// IMP=0x000000000006093f
- (_Bool)overwritePerson:(void *)arg1;	// IMP=0x000000000006092b
- (void *)detachedPersonWithError:(id *)arg1;	// IMP=0x00000000000608cd
- (void *)detachedPerson;	// IMP=0x00000000000608b9
- (_Bool)updateNewPublicABPerson:(void *)arg1 inAddressBook:(void *)arg2;	// IMP=0x00000000000613e6
- (_Bool)overwritePublicABPerson:(void *)arg1;	// IMP=0x0000000000061306
@property(readonly, copy, nonatomic) NSArray *relatedNames;
@property(readonly, copy) NSString *companyName;
@property(readonly, copy) NSString *phoneticLastName;
@property(readonly, copy) NSString *phoneticFirstName;
@property(readonly, copy) NSString *maidenName;
@property(readonly, copy) NSString *lastName;
@property(readonly, copy) NSString *firstName;
@property(readonly, copy) NSString *nameTitle;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ec945
@property(readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property(readonly, nonatomic) _Bool hasSuggestedProperties;
- (id)copyWithCuratingAllSuggestions;	// IMP=0x0000000000124d4b
@property(readonly, nonatomic) NSString *suggestionFoundInBundleId;
@property(readonly, nonatomic) SGRecordId *suggestionRecordId;
@property(readonly, nonatomic, getter=isSuggestedMe) _Bool suggestedMe;
@property(readonly, nonatomic, getter=isSuggested) _Bool suggested;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

