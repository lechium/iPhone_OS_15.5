//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MapKit/GEOURLSerializable-Protocol.h>
#import <MapKit/NSItemProviderReading-Protocol.h>
#import <MapKit/NSItemProviderWriting-Protocol.h>
#import <MapKit/NSSecureCoding-Protocol.h>

@class GEOAddress, GEOBusinessHours, GEOEnhancedPlacement, GEOExploreGuides, GEOFeatureStyleAttributes, GEOLabelGeometry, GEOMapItemDetourInfo, GEOMapItemStorage, GEOMapItemStorageUserValues, GEOMapRegion, GEOMiniBrowseCategories, GEOModuleLayoutEntry, GEOMuninViewState, GEOPDBusinessClaim, GEOPDFlyover, GEOPlace, GEOViewportFrame, MKMapItemIdentifier, MKMapItemMetadata, MKPlacemark, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSNumberFormatter, NSString, NSTimeZone, NSURL, UIColor, _MKMapItemAttribution, _MKMapItemPhotosAttribution, _MKMapItemPlaceAttribution, _MKMapItemReviewsAttribution, _MKPlaceReservationInfo, geo_isolater;
@protocol GEOAnnotatedItemList, GEOEncyclopedicInfo, GEOMapItem, GEOMapItemPrivate, GEOMapItemTransitInfo, GEOMapItemVenueInfo, GEOTransitAttribution, MKTransitInfoPreload, NSObject;

@interface MKMapItem : NSObject <NSSecureCoding, NSItemProviderReading, NSItemProviderWriting, GEOURLSerializable>
{
    _Bool _isCurrentLocation;	// 8 = 0x8
    _Bool _isPlaceHolder;	// 9 = 0x9
    id <GEOMapItem> _geoMapItem;	// 16 = 0x10
    MKMapItemIdentifier *_identifier;	// 24 = 0x18
    _Bool _isTransitInfoUpdated;	// 32 = 0x20
    NSDate *_transitInfoUpdatedDate;	// 40 = 0x28
    id <GEOMapItemTransitInfo> _updatedTransitInfo;	// 48 = 0x30
    id <GEOMapItemTransitInfo> _defaultTransitInfo;	// 56 = 0x38
    id <GEOTransitAttribution> _updatedTransitAttribution;	// 64 = 0x40
    _MKMapItemPlaceAttribution *_attribution;	// 72 = 0x48
    NSArray *_allPhotoAttributions;	// 80 = 0x50
    _MKMapItemReviewsAttribution *_reviewsAttribution;	// 88 = 0x58
    GEOMapItemStorageUserValues *_userValues;	// 96 = 0x60
    id <NSObject> _didResolveAttributionToken;	// 104 = 0x68
    _Bool _hasLoadedAttribution;	// 112 = 0x70
    NSString *_shortAddress;	// 120 = 0x78
    NSString *_firstLocalizedCategoryName;	// 128 = 0x80
    NSNumberFormatter *_numberFormatterForAdamId;	// 136 = 0x88
    NSString *_localizedSampleSizeForUserRatingScoreString;	// 144 = 0x90
    NSDictionary *_cachedHoursBuilder;	// 152 = 0x98
    geo_isolater *_isolation;	// 160 = 0xa0
    _Bool _isMapItemTypeTransit;	// 168 = 0xa8
    MKMapItemMetadata *_metadata;	// 176 = 0xb0
    GEOPlace *_place;	// 184 = 0xb8
    _MKMapItemPhotosAttribution *_photosAttribution;	// 192 = 0xc0
    _MKMapItemAttribution *_encyclopedicInfoAttribution;	// 200 = 0xc8
    _MKPlaceReservationInfo *_reservationInfo;	// 208 = 0xd0
    NSString *_pointOfInterestCategory;	// 216 = 0xd8
    id <MKTransitInfoPreload> _preloadedTransitInfo;	// 224 = 0xe0
}

+ (id)_launchOptionsWithOptions:(id)arg1;	// IMP=0x000000000014ae71
+ (id)_urlForLocation:(id)arg1 address:(id)arg2 label:(id)arg3 options:(id)arg4;	// IMP=0x000000000014ac6a
+ (id)_urlForMapItemHandles:(id)arg1 options:(id)arg2;	// IMP=0x000000000014aa49
+ (id)urlForMapItems:(id)arg1 options:(id)arg2;	// IMP=0x000000000014a678
+ (id)urlForMapItem:(id)arg1 options:(id)arg2;	// IMP=0x000000000014a5bb
+ (id)_mapItemBackedByURL:(id)arg1;	// IMP=0x000000000014a506
+ (id)mapItemsFromURL:(id)arg1 options:(id *)arg2;	// IMP=0x000000000014a1b6
+ (id)sanitizeDictionary:(id)arg1;	// IMP=0x0000000000149f52
+ (id)sanitizeArray:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000149d40
+ (id)sanitizeObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000149c33
+ (_Bool)valueIsValid:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000149381
+ (id)launchOptionsFromURL:(id)arg1;	// IMP=0x00000000001492b6
+ (id)_launchOptionsFromResourceOptionsDictionary:(id)arg1;	// IMP=0x00000000001490bc
+ (id)_deserializeResourceOptionsFromURL:(id)arg1 error:(out id *)arg2;	// IMP=0x0000000000148e32
+ (void)_mapItemsFromHandleURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000148887
+ (void)_mapItemFromHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001486db
+ (id)_sourceAppIdFromLaunchUserInfo:(id)arg1;	// IMP=0x00000000001486bf
+ (id)_sourceAppIdFromLaunchURL:(id)arg1;	// IMP=0x00000000001484f7
+ (id)_sharedSessionUserInfoForPunchoutUserInfo:(id)arg1;	// IMP=0x00000000001482bb
+ (id)_sharedSessionURLForPunchoutURL:(id)arg1;	// IMP=0x0000000000148008
+ (id)mapItemWithDictionary:(id)arg1;	// IMP=0x00000000001476ed
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)arg1;	// IMP=0x0000000000147305
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)arg1;	// IMP=0x0000000000146f5b
+ (void)openMapsWithItems:(id)arg1 launchOptions:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000146ea8
+ (_Bool)openMapsWithItems:(id)arg1 launchOptions:(id)arg2;	// IMP=0x0000000000146de8
+ (void)openMapsWithItems:(id)arg1 launchOptions:(id)arg2 fromScene:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000146b9e
+ (id)_localizedNextOpeningDayOftheWeekFormatter;	// IMP=0x0000000000145818
+ (id)_localizedNextOpeningHoursFormatter;	// IMP=0x0000000000145745
+ (id)mapItemForCurrentLocation;	// IMP=0x00000000001427f7
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000014dfa1
+ (id)mapItemWithSerializedPlaceData:(id)arg1 serializedDetourInfo:(id)arg2 currentLocation:(_Bool)arg3;	// IMP=0x000000000014de64
+ (id)mapItemWithSerializedPlaceData:(id)arg1;	// IMP=0x000000000014de4d
+ (id)_itemWithContact:(id)arg1 geoMapItem:(id)arg2;	// IMP=0x000000000014dcd3
+ (id)_itemWithGeoMapItem:(id)arg1;	// IMP=0x000000000014dc84
+ (id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;	// IMP=0x000000000014e44e
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000014e9cc
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000000014f78c
+ (id)readableTypeIdentifiersForItemProvider;	// IMP=0x000000000014f6b1
+ (id)writableTypeIdentifiersForItemProvider;	// IMP=0x000000000014ee0d
+ (id)ticketForMapsDataString:(id)arg1 name:(id)arg2;	// IMP=0x000000000025dada
+ (void)_fillOutRequest:(id)arg1 withMapsDataString:(id)arg2;	// IMP=0x000000000025d8b8
+ (id)contactsAddressKeysForGeoAddressKeys;	// IMP=0x000000000025d70f
+ (id)contactsAddressDictionaryFromGeoAddressDictionary:(id)arg1;	// IMP=0x000000000025d48d
+ (id)_mapItemFromVCardRepresentation:(id)arg1 error:(id *)arg2;	// IMP=0x000000000025e270
- (void).cxx_destruct;	// IMP=0x000000000014db46
@property(readonly, nonatomic, getter=_preloadedTransitInfo) id <MKTransitInfoPreload> preloadedTransitInfo; // @synthesize preloadedTransitInfo=_preloadedTransitInfo;
@property(copy, nonatomic) NSString *pointOfInterestCategory; // @synthesize pointOfInterestCategory=_pointOfInterestCategory;
@property(retain, nonatomic) _MKPlaceReservationInfo *reservationInfo; // @synthesize reservationInfo=_reservationInfo;
@property(nonatomic, getter=_isMapItemTypeTransit) _Bool isMapItemTypeTransit; // @synthesize isMapItemTypeTransit=_isMapItemTypeTransit;
@property(readonly, nonatomic) _Bool isPlaceHolder; // @synthesize isPlaceHolder=_isPlaceHolder;
@property(nonatomic) _Bool isCurrentLocation; // @synthesize isCurrentLocation=_isCurrentLocation;
@property(readonly, nonatomic, getter=_viewportFrame) GEOViewportFrame *viewportFrame;
@property(readonly, nonatomic, getter=_labelGeometry) GEOLabelGeometry *labelGeometry;
@property(readonly, nonatomic, getter=_enhancedPlacement) GEOEnhancedPlacement *enhancedPlacement;
@property(readonly, nonatomic, getter=_hasCorrectedHomeWorkAddress) _Bool hasCorrectedHomeWorkAddress;
@property(readonly, nonatomic, getter=_hasCorrectedHomeWorkCoordinate) _Bool hasCorrectedHomeWorkCoordinate;
@property(readonly, nonatomic, getter=_externalTransitStationCode) NSData *externalTransitStationCode;
@property(readonly, nonatomic, getter=_detourInfo) GEOMapItemDetourInfo *detourInfo;
@property(readonly, nonatomic, getter=_businessClaim) GEOPDBusinessClaim *businessClaim;
@property(readonly, nonatomic, getter=_hasBusinessClaim) _Bool hasBusinessClaim;
@property(readonly, nonatomic) NSString *reviewsProviderDisplayName;
@property(readonly, nonatomic, getter=_tips) NSArray *tips;
@property(readonly, nonatomic, getter=_reviews) NSArray *reviews;
- (id)_firstRelatedPlaceListForType:(int)arg1;	// IMP=0x000000000014d370
- (id)_relatedPlaceListForComponentIdentifier:(int)arg1;	// IMP=0x000000000014d35a
@property(readonly, nonatomic, getter=_relatedPlaceLists) NSArray *relatedPlaceLists;
@property(readonly, nonatomic, getter=_placeCollectionIds) NSArray *collectionIds;
@property(readonly, nonatomic, getter=_exploreGuides) GEOExploreGuides *exploreGuides;
@property(readonly, nonatomic, getter=_placeCollections) NSArray *placeCollections;
@property(readonly, nonatomic, getter=_secondaryQuickLinks) NSArray *secondaryQuickLinks;
@property(readonly, nonatomic, getter=_quickLinks) NSArray *quickLinks;
@property(readonly, nonatomic, getter=_navTintBrandColor) UIColor *navTintBrandColor;
@property(readonly, nonatomic, getter=_navBackgroundbrandColor) UIColor *navBackgroundbrandColor;
@property(readonly, nonatomic, getter=_placecardLayout) GEOModuleLayoutEntry *placecardLayout;
@property(readonly, nonatomic, getter=_isMessageIDVerified) _Bool isMessageIDVerified;
@property(readonly, nonatomic, getter=_messageURLString) NSString *messageURLString;
@property(readonly, nonatomic, getter=_messageID) NSString *messageID;
@property(readonly, nonatomic, getter=_brandMUID) unsigned long long brand;
@property(readonly, nonatomic, getter=_hasBrandMUID) _Bool hasBrandMUID;
@property(readonly, nonatomic, getter=_isStandAloneBrand) _Bool isStandAloneBrand;
@property(readonly, nonatomic, getter=_parsecSectionType) int parsecSectionType;
@property(readonly, nonatomic, getter=_isMapItemTypeBrand) _Bool isMapItemTypeBrand;
@property(readonly, nonatomic, getter=_isMapItemTypeAddress) _Bool isMapItemTypeAddress;
@property(readonly, nonatomic, getter=_isMapItemTypeSettlement) _Bool isMapItemTypeSettlement;
@property(readonly, nonatomic, getter=_isMapItemTypeBusiness) _Bool isMapItemTypeBusiness;
@property(readonly, nonatomic, getter=_isMapItemTypeUnknown) _Bool isMapItemTypeUnknown;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
- (id)_attributionFor:(id)arg1 sourceStringFormat:(id)arg2 moreSourceStringFormat:(id)arg3 imageTintColor:(id)arg4;	// IMP=0x000000000014cbd5
- (id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3 isSnippetLogo:(_Bool)arg4;	// IMP=0x000000000014cbb3
@property(readonly, nonatomic, getter=_reviewsDisplayName) NSString *reviewsDisplayName;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_hasMuninStorefront) _Bool hasMuninStorefront;
@property(readonly, nonatomic, getter=_linkedServices) NSArray *linkedServices;
@property(readonly, nonatomic, getter=_hasLinkedServices) _Bool hasLinkedServices;
@property(readonly, nonatomic, getter=_businessHours) NSArray *businessHours;
@property(readonly, nonatomic, getter=_hasBusinessHours) _Bool hasBusinessHours;
@property(readonly, nonatomic, getter=_alternativeAppAdamIds) NSArray *alternativeAppAdamIds;
@property(readonly, nonatomic, getter=_preferedAppAdamID) NSNumber *preferedAppAdamID;
- (id)venueLabelWithContext:(unsigned long long)arg1;	// IMP=0x000000000014c73a
- (id)_cnPostalAddress;	// IMP=0x000000000014c6e6
- (id)_addressFormattedAsLocation;	// IMP=0x000000000014c692
- (id)_addressFormattedAsTitlesForMapRect:(CDStruct_02837cd9)arg1;	// IMP=0x000000000014c615
- (id)_addressFormattedAsWeatherLocationName;	// IMP=0x000000000014c591
- (id)_addressFormattedAsWeatherDisplayName;	// IMP=0x000000000014c50d
- (id)_addressFormattedAsSinglelineAddress;	// IMP=0x000000000014c3ca
- (id)_addressFormattedAsShortenedAddress;	// IMP=0x000000000014c21e
- (id)_addressFormattedAsName;	// IMP=0x000000000014c0dd
- (id)_addressFormattedAsMultilineAddress;	// IMP=0x000000000014be3d
- (id)_postalAddressFromMeCardUsingAddressIdentifier:(id)arg1;	// IMP=0x000000000014bb8c
- (id)_addressFormattedAsStreetOnly;	// IMP=0x000000000014bae1
- (id)_addressFormattedAsCity;	// IMP=0x000000000014ba5b
- (id)_addressOrNil:(id)arg1;	// IMP=0x000000000014ba0d
- (id)_bestNavbarBrandIconURLForSize:(struct CGSize)arg1 allowSmaller:(_Bool)arg2;	// IMP=0x000000000014b9f7
- (id)_bestBrandIconURLForSize:(struct CGSize)arg1 allowSmaller:(_Bool)arg2;	// IMP=0x000000000014b9e1
- (_Bool)_canGetDirections;	// IMP=0x000000000014b8a8
- (id)_urlExtraStorage;	// IMP=0x000000000014b661
- (id)_activityURLWithMuninViewState:(id)arg1;	// IMP=0x000000000014b3bb
- (id)_activityURL;	// IMP=0x000000000014b3a7
- (id)_weatherLocationName;	// IMP=0x000000000014b395
- (id)_weatherDisplayName;	// IMP=0x000000000014b383
- (id)_fullAddressWithMultiline:(_Bool)arg1;	// IMP=0x000000000014b351
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;	// IMP=0x000000000014b23a
- (id)initWithUrlRepresentation:(id)arg1;	// IMP=0x0000000000147f0c
- (id)urlRepresentation;	// IMP=0x0000000000147e33
- (id)dictionaryRepresentation;	// IMP=0x0000000000147aec
@property(readonly, nonatomic, getter=_handle) NSData *handle;
- (void)openInMapsWithLaunchOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000146d35
- (_Bool)openInMapsWithLaunchOptions:(id)arg1;	// IMP=0x0000000000146c6f
- (void)openInMapsWithLaunchOptions:(id)arg1 fromScene:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000146acd
@property(readonly, nonatomic, getter=_chargerNumberString) NSString *chargerNumberString;
@property(readonly, nonatomic, getter=_hasChargerNumberString) _Bool hasChargerNumberString;
@property(readonly, nonatomic, getter=_poiPinpointURLString) NSString *poiPinpointURLString;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_openingHoursOptions) unsigned long long openingHoursOptions;
@property(readonly, nonatomic, getter=_encyclopedicInfo) id <GEOEncyclopedicInfo> encyclopedicInfo;
@property(readonly, nonatomic, getter=_hasEncyclopedicInfo) _Bool hasEncyclopedicInfo;
@property(readonly, nonatomic, getter=_localizedResponseTime) NSString *localizedResponseTime;
@property(readonly, nonatomic, getter=_messageBusinessHours) GEOBusinessHours *messageBusinessHours;
- (id)_localizedNextOpeningStringShort:(_Bool)arg1;	// IMP=0x0000000000145a9d
- (id)hoursBuilderForSearchResultCellForOptions:(unsigned long long)arg1;	// IMP=0x0000000000145907
- (id)defaultHoursBuilderForSearchResultCell;	// IMP=0x00000000001458f0
@property(readonly, nonatomic, getter=_hasLocalizedOperatingHours) _Bool hasLocalizedOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_responseStatusIsIncomplete) _Bool responseStatusIncomplete;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_acceptsApplePay) _Bool acceptsApplePay;
@property(readonly, nonatomic, getter=_hasAcceptsApplePayAmenity) _Bool hasAcceptsApplePayAmenity;
- (_Bool)valueForAmenityType:(int)arg1;	// IMP=0x00000000001453c0
- (_Bool)hasAmenityType:(int)arg1;	// IMP=0x0000000000145272
@property(readonly, nonatomic, getter=_amenities) NSArray *amenities;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_firstLocalizedCategoryName) NSString *firstLocalizedCategoryName;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;	// IMP=0x00000000001451aa
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;	// IMP=0x0000000000145194
@property(readonly, nonatomic, getter=_shortAddress) NSString *shortAddress;
@property(readonly, nonatomic, getter=_geoAddress) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_priceRangeString) NSString *priceRangeString;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_priceDescription) NSString *priceDescription;
@property(readonly, nonatomic, getter=_hasPriceDescription) _Bool hasPriceDescription;
@property(readonly, nonatomic, getter=_localizedSampleSizeForUserRatingScoreString) NSString *localizedSampleSizeForUserRatingScoreString;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_identifier) MKMapItemIdentifier *identifier;
@property(readonly, nonatomic, getter=_muninViewState) GEOMuninViewState *muninViewState;
@property(readonly, nonatomic, getter=_hasMuninViewState) _Bool hasMuninViewState;
@property(readonly, nonatomic, getter=_annotatedItemList) id <GEOAnnotatedItemList> annotatedItemList;
@property(readonly, nonatomic, getter=_placeDisplayStyle) int placeDisplayStyle;
@property(readonly, nonatomic, getter=_miniBrowseCategories) GEOMiniBrowseCategories *miniBrowseCategories;
@property(readonly, nonatomic, getter=_browseCategories) NSArray *browseCategories;
@property(readonly, nonatomic, getter=_venueInfo) id <GEOMapItemVenueInfo> venueInfo;
@property(readonly, nonatomic, getter=_venueFeatureType) long long venueFeatureType;
@property(readonly, nonatomic, getter=_hasVenueFeatureType) _Bool hasVenueFeatureType;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncementMessage;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
- (void)preloadTransitInfoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000144a8c
@property(readonly, nonatomic, getter=_transitInfo) id <GEOMapItemTransitInfo> transitInfo;
- (id)_formatterForAdamId;	// IMP=0x00000000001449c1
@property(readonly, nonatomic, getter=_transitAttribution) id <GEOTransitAttribution> transitAttribution;
@property(readonly, nonatomic, getter=_hasTransitLabels) _Bool hasTransitLabels;
@property(readonly, nonatomic, getter=_transitDisplayName) NSString *transitDisplayName;
@property(readonly, nonatomic, getter=_hasTransitDisplayName) _Bool hasTransitDisplayName;
@property(readonly, nonatomic, getter=_hasTransit) _Bool hasTransit;
@property(readonly, nonatomic, getter=_geoFenceMapRegion) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic, getter=_displayMaxZoom) float displayMaxZoom;
@property(readonly, nonatomic, getter=_hasDisplayMaxZoom) _Bool hasDisplayMaxZoom;
@property(readonly, nonatomic, getter=_displayMinZoom) float displayMinZoom;
@property(readonly, nonatomic, getter=_hasDisplayMinZoom) _Bool hasDisplayMinZoom;
@property(readonly, nonatomic, getter=_displayMapRegion) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic, getter=_coordinate) struct CLLocationCoordinate2D coordinate;
@property(readonly, nonatomic) NSString *yelpID;
@property(retain, nonatomic) NSURL *url;
- (id)_getBusiness;	// IMP=0x000000000014419a
@property(copy, nonatomic) NSTimeZone *timeZone;
@property(readonly, nonatomic, getter=_phoneNumberOptsOutOfAds) _Bool phoneNumberOptsOutOfAds;
@property(copy, nonatomic) NSString *phoneNumber;
@property(readonly, nonatomic, getter=_secondarySpokenName) NSString *secondarySpokenName;
@property(readonly, nonatomic, getter=_secondaryName) NSString *secondaryName;
@property(copy, nonatomic) NSString *name;
@property(readonly, nonatomic) GEOMapItemStorageUserValues *userValues;
@property(readonly, nonatomic, getter=_geoMapItemStorageForDragAndDrop) GEOMapItemStorage *geoMapItemStorageForDragAndDrop;
@property(readonly, nonatomic, getter=_geoMapItemStorageForPersistence) GEOMapItemStorage *geoMapItemStorageForPersistence;
@property(readonly, nonatomic, getter=_geoMapItem) id <GEOMapItemPrivate> geoMapItem;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000001436a9
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)_refreshAttribution;	// IMP=0x00000000001430cf
@property(readonly, nonatomic, getter=_encyclopedicInfoAttribution) _MKMapItemAttribution *encyclopedicInfoAttribution; // @synthesize encyclopedicInfoAttribution=_encyclopedicInfoAttribution;
@property(readonly, nonatomic, getter=_reviewsAttribution) _MKMapItemReviewsAttribution *reviewsAttribution; // @synthesize reviewsAttribution=_reviewsAttribution;
@property(readonly, nonatomic, getter=_allPhotoAttributions) NSArray *allPhotoAttributions; // @synthesize allPhotoAttributions=_allPhotoAttributions;
@property(readonly, nonatomic, getter=_photosAttribution) _MKMapItemPhotosAttribution *photosAttribution; // @synthesize photosAttribution=_photosAttribution;
@property(readonly, nonatomic, getter=_attribution) _MKMapItemPlaceAttribution *attribution; // @synthesize attribution=_attribution;
@property(readonly, nonatomic) MKPlacemark *placemark;
@property(readonly, nonatomic) MKMapItemMetadata *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) GEOPlace *place; // @synthesize place=_place;
- (id)_isolatedPlace;	// IMP=0x0000000000142882
- (void)dealloc;	// IMP=0x000000000014277a
- (id)initWithPlacemark:(id)arg1;	// IMP=0x0000000000142660
- (id)initWithCLLocation:(id)arg1;	// IMP=0x000000000014264c
- (id)initWithCLLocation:(id)arg1 placeType:(int)arg2;	// IMP=0x0000000000142596
- (id)initWithAddressDictionary:(id)arg1;	// IMP=0x0000000000142508
- (id)initWithPlace:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;	// IMP=0x00000000001424a9
- (id)initWithPlace:(id)arg1;	// IMP=0x0000000000142495
- (id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;	// IMP=0x00000000001420b2
- (id)initWithGeoMapItemAsCurrentLocation:(id)arg1;	// IMP=0x000000000014207b
- (id)init;	// IMP=0x000000000014200d
- (int)_browseCategory_placeCardType;	// IMP=0x00000000000c6384
- (_Bool)_browseCategory_isVenueItem;	// IMP=0x00000000000c6337
- (_Bool)_browseCategory_canDisplayBrowseCategoriesForPlace;	// IMP=0x00000000000c62ef
- (_Bool)_browseCategory_canDisplayBrowseCategoriesForVenue;	// IMP=0x00000000000c623c
- (void)_launchActivityForBrandItem;	// IMP=0x00000000000f30e4
- (id)thumbnailWithSize:(struct CGSize)arg1 annotationView:(id)arg2;	// IMP=0x00000000001082b0
- (id)sharingURL;	// IMP=0x00000000001081f9
- (id)formattedNumberOfReviewsIncludingProvider:(_Bool)arg1 formatter:(id)arg2;	// IMP=0x000000000014e05a
@property(readonly, nonatomic) NSString *formattedNumberOfReviewsIncludingProvider;
@property(readonly, nonatomic) NSString *formattedNumberOfReviews;
- (id)_reviewForIdentifier:(id)arg1;	// IMP=0x000000000014e5e6
- (void)_updateTransitInfoWithMapItem:(id)arg1;	// IMP=0x000000000014e84a
- (void)_markTransitInfoUpdated;	// IMP=0x000000000014e811
@property(readonly, nonatomic, getter=_transitInfoUpdatedDate) NSDate *transitInfoUpdatedDate;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000014ec1e
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000014e9d4
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000014ef2d
- (void)_getHasAvailableSecondaryAppClipWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000015d9c9
- (void)_getHasAvailableAppClipWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000015d91b
- (void)_getFirstAvailableAppClipLinkFromQuickLinks:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000015d0c5
- (void)_getFirstAvailableSecondaryAppClipLinkWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000015d050
- (void)_getFirstAvailableAppClipLinkWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000015cfdb
- (_Bool)_mapkit_canAtLeastOneAttributionShowAddPhotosLocally;	// IMP=0x00000000001d3aec
- (_Bool)_mapkit_canAtLeastOneAttributionShowPhotosLocally;	// IMP=0x00000000001d39b3
- (unsigned long long)_mapkit_numberOfPhotosAvailableForFlatList;	// IMP=0x00000000001d3793
- (id)_mapkit_resolvedFlatPhotoList;	// IMP=0x00000000001d3521
- (id)_mapkit_preferredFirstPhotoVendor;	// IMP=0x00000000001d3483
- (_Bool)_mapkit_hasMultiplePhotoVendors;	// IMP=0x00000000001d343a
- (_Bool)_mapkit_hasSinglePhotoVendor;	// IMP=0x00000000001d33f1
- (_Bool)_mapkit_hasFlatListOfPhotos;	// IMP=0x00000000001d33a9
- (_Bool)_mapkit_supportsFullScreenExperience;	// IMP=0x00000000001d3228
- (id)_restaurantLink_overridenBundleIDsForVendorIDs;	// IMP=0x000000000025337a
- (id)_restaurantLink_firstProviderDisplayName;	// IMP=0x00000000002532c3
- (id)_restaurantLink_firstProviderPlaceIdentifier;	// IMP=0x00000000002531c0
- (id)_restaurantLink_firstVendorID;	// IMP=0x00000000002530df
- (id)_restaurantLink_firstProviderIdentifier;	// IMP=0x0000000000252f4b
- (unsigned long long)_restaurantExtensionModeForFirstProvider;	// IMP=0x0000000000252eb0
- (_Bool)_restaurantLink_hasFeatureType:(unsigned long long)arg1;	// IMP=0x0000000000252dee
- (_Bool)_hasRestaurantExtensionInfo;	// IMP=0x0000000000252d3b
- (id)_htmlRepresentation;	// IMP=0x000000000025de60
- (id)_mapsDataString;	// IMP=0x000000000025dcc8
- (id)_initWithLabelMarker:(id)arg1;	// IMP=0x000000000025d805
- (id)_placeCardContact;	// IMP=0x000000000025d06e
@property(readonly, getter=_isEmptyContactMapItem) _Bool isEmptyContactMapItem;
- (id)initWithContact:(id)arg1;	// IMP=0x000000000025cdb7
- (id)_vCardFilename;	// IMP=0x000000000025e204
- (id)_vCardRepresentation;	// IMP=0x000000000025e061

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;

@end

