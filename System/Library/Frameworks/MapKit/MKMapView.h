//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <MapKit/GEOConfigChangeListenerDelegate-Protocol.h>
#import <MapKit/GEOLogContextDelegate-Protocol.h>
#import <MapKit/GEOResourceManifestTileGroupObserver-Protocol.h>
#import <MapKit/MKAnnotationContainerViewDelegate-Protocol.h>
#import <MapKit/MKAnnotationManagerDelegate-Protocol.h>
#import <MapKit/MKAnnotationMarkerContainer-Protocol.h>
#import <MapKit/MKLocationManagerObserver-Protocol.h>
#import <MapKit/MKMapGestureControllerDelegate-Protocol.h>
#import <MapKit/MKOverlayContainerViewDelegate-Protocol.h>
#import <MapKit/MKRotationFilterDelegate-Protocol.h>
#import <MapKit/MKVariableDelayTapRecognizerDelegate-Protocol.h>
#import <MapKit/NSCoding-Protocol.h>
#import <MapKit/UIGestureRecognizerDelegate-Protocol.h>
#import <MapKit/VKMapViewCameraDelegate-Protocol.h>
#import <MapKit/VKMapViewDelegate-Protocol.h>

@class CLLocation, GEOMapRegion, MKAnnotationContainerView, MKAnnotationManager, MKAnnotationView, MKAppleLogoImageView, MKAttributionLabel, MKBasicMapView, MKDebugLocationConsole, MKLocationManager, MKMapCamera, MKMapCameraBoundary, MKMapCameraZoomRange, MKMapGestureController, MKMapViewInternal, MKMapViewLabelMarkerState, MKOverlayContainerView, MKPointOfInterestFilter, MKRotationFilter, MKScaleView, MKUsageCounter, MKUserLocation, NSArray, NSDictionary, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSTimer, UIGestureRecognizer, UIImageView, UILayoutGuide, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITextView, UITraitCollection, VKLabelMarker, VKMapView, VKNavContext, VKRouteContext, VKVenueBuildingFeatureMarker, VKVenueFeatureMarker, _MKCustomFeatureStore, _MKEnvironmentLabel;
@protocol MKCompassView, MKMapViewDelegate, MKMapViewDelegate><MKMapViewDelegatePrivate, OS_dispatch_group, OS_dispatch_queue;

@interface MKMapView : UIView <MKLocationManagerObserver, MKOverlayContainerViewDelegate, MKMapGestureControllerDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, VKMapViewDelegate, VKMapViewCameraDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOLogContextDelegate, MKRotationFilterDelegate, GEOConfigChangeListenerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate, NSCoding>
{
    NSMutableArray *_whenSizedBlocks;	// 8 = 0x8
    NSMutableSet *_annotationViewEventSet;	// 16 = 0x10
    NSMutableDictionary *_overlayRendererEventDictionary;	// 24 = 0x18
    MKUsageCounter *_usageCounter;	// 32 = 0x20
    MKMapViewInternal *_internal;	// 40 = 0x28
    UIView *_contentView;	// 48 = 0x30
    MKAnnotationManager *_annotationManager;	// 56 = 0x38
    MKAnnotationContainerView *_annotationContainer;	// 64 = 0x40
    MKAttributionLabel *_attributionLabel;	// 72 = 0x48
    MKAppleLogoImageView *_appleLogoImageView;	// 80 = 0x50
    CDUnknownBlockType _annotationRectTest;	// 88 = 0x58
    CDUnknownBlockType _annotationCoordinateTest;	// 96 = 0x60
    UIImageView *_attributionBadgeView;	// 104 = 0x68
    NSTimer *_startEffectsTimer;	// 112 = 0x70
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;	// 120 = 0x78
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;	// 128 = 0x80
    unsigned long long _suspendedEffectsCount;	// 136 = 0x88
    unsigned long long _userInteractionDisabledCount;	// 144 = 0x90
    unsigned long long _mapType;	// 152 = 0x98
    MKDebugLocationConsole *_debugLocationConsole;	// 160 = 0xa0
    CDUnknownBlockType _debugConsoleAdditionalInfoProvider;	// 168 = 0xa8
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;	// 176 = 0xb0
    double _heading;	// 184 = 0xb8
    UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 192 = 0xc0
    UITapGestureRecognizer *_selectingTapGestureRecognizer;	// 200 = 0xc8
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;	// 208 = 0xd0
    UIGestureRecognizer *_locationConsoleGesture;	// 216 = 0xd8
    MKMapGestureController *_gestureController;	// 224 = 0xe0
    MKOverlayContainerView *_overlayContainer;	// 232 = 0xe8
    long long _userTrackingMode;	// 240 = 0xf0
    _Bool _userTrackingModeShouldAnimate;	// 248 = 0xf8
    MKBasicMapView *_basicMapView;	// 256 = 0x100
    VKMapView *_mapView;	// 264 = 0x108
    VKLabelMarker *_pressedLabelMarker;	// 272 = 0x110
    MKScaleView *_scaleView;	// 280 = 0x118
    UIView<MKCompassView> *_compassView;	// 288 = 0x120
    _Bool _scaleVisible;	// 296 = 0x128
    _Bool _compassVisible;	// 297 = 0x129
    _Bool _pitchSliderVisible;	// 298 = 0x12a
    long long _scaleVisibility;	// 304 = 0x130
    _Bool _showsCompass;	// 312 = 0x138
    _Bool _showsPitchControl;	// 313 = 0x139
    UIView *_scrollContainerView;	// 320 = 0x140
    MKLocationManager *_locationManager;	// 328 = 0x148
    MKUserLocation *_userLocation;	// 336 = 0x150
    VKRouteContext *_routeContext;	// 344 = 0x158
    VKNavContext *_navContext;	// 352 = 0x160
    MKMapCamera *_camera;	// 360 = 0x168
    CDUnknownBlockType _showCalloutAfterRegionChangeBlock;	// 368 = 0x170
    CDUnknownBlockType _selectAnnotationViewAfterRedrawBlock;	// 376 = 0x178
    UITextView *_vectorKitDebugView;	// 384 = 0x180
    struct UIEdgeInsets _edgeInsets;	// 392 = 0x188
    UIPanGestureRecognizer *_vectorKitStyleDebugGestureRecognizer;	// 424 = 0x1a8
    double _verticalYawOverride;	// 432 = 0x1b0
    int _attributionCorner;	// 440 = 0x1b8
    long long _originalLoopRate;	// 448 = 0x1c0
    long long _preGesturingLoopRate;	// 456 = 0x1c8
    CDStruct_211b8904 _annotationTrackingBehavior;	// 464 = 0x1d0
    id _topLayoutGuide;	// 488 = 0x1e8
    id _bottomLayoutGuide;	// 496 = 0x1f0
    NSObject<OS_dispatch_queue> *_lastEffectiveTraitCollectionIsolationQueue;	// 504 = 0x1f8
    UITraitCollection *_lastTraitCollection;	// 512 = 0x200
    MKRotationFilter *_rotationFilter;	// 520 = 0x208
    MKAnnotationView *_longPressedAnnotationView;	// 528 = 0x210
    struct {
        unsigned int changingRegion:1;
        unsigned int debugViewHeading:1;
        unsigned int draggingInterrupted:1;
        unsigned int didStartSmoothScrolling:1;
        unsigned int hasRenderedSomething:1;
        unsigned int hasSignaledWillStartRendering:1;
        unsigned int ignoreHeadingUpdates:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int isSuspended:1;
        unsigned int longPressing:1;
        unsigned int persistFixedUserLocation:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int rotationSupported:1;
        unsigned int scrollEnabled:1;
        unsigned int scrolling:1;
        unsigned int showHeadingIndicator:1;
        unsigned int alwaysShowHeadingIndicator:1;
        unsigned int showHeadingIndicatorForStepping:1;
        unsigned int useVehicleHeading:1;
        unsigned int showsUserLocation:1;
        unsigned int zoomEnabled:1;
        unsigned int zoomIsAnimated:1;
        unsigned int zooming:1;
        unsigned int isChangingViewSize:1;
        unsigned int isChangingEdgeInsets:1;
        unsigned int showsAttribution:1;
        unsigned int showsAppleLogo:1;
        unsigned int canShowAttributionBadge:1;
        unsigned int showsVenues:1;
        unsigned int rotating:1;
        unsigned int pitching:1;
        unsigned int rotateEnabled:1;
        unsigned int pitchEnabled:1;
        unsigned int showsBuildings:1;
        unsigned int showsPointsOfInterest:1;
        unsigned int showsTraffic:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int currentRegionChangeShouldUpdateAnnotationsMidstream:1;
        unsigned int backdropViewQualityChangingDisabled:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int edgeInsetsAreExplicit:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPulseEnabled:1;
        unsigned int shouldSplitRouteLine:1;
        unsigned int shouldAnimatePositionWithRouteMatch:1;
        unsigned int clearUserLocationOnLocationReset:1;
        unsigned int showsCurrentEnvironmentName:1;
        unsigned int processingUserLocationUpdate:1;
        unsigned int changingMapType:1;
        unsigned int userRotatedAwayFromVerticalYaw:1;
        unsigned int goingToDefaultLocation:1;
        unsigned int isDraggingAnnotationView:1;
        unsigned int showsPressedLabelMarkerEffect:1;
        unsigned int shouldLoadFallbackTiles:1;
        unsigned int iconPixelAlignmentExplicitlyDisabled:1;
        unsigned int userDidRotateDuringCurrentRegionChange:1;
        unsigned int isTwoFingerLongPressing:1;
        unsigned int useTopBottomLayoutGuides:1;
        unsigned int useLayoutMargins:1;
        unsigned int delegateShouldReceiveTouch:1;
        unsigned int delegateShouldDelayTapResponse:1;
        unsigned int delegateDidUpdateUserLocation:1;
        unsigned int delegateWillChangeRegion:1;
        unsigned int delegateDidChangeUserTrackingModeButton:1;
        unsigned int delegateDidChangeUserTrackingMode:1;
    } _flags;	// 536 = 0x218
    _Bool _hasSetLayoutMargins;	// 545 = 0x221
    UILayoutGuide *_edgeInsetsGuide;	// 552 = 0x228
    NSLayoutConstraint *_edgeInsetsTopConstraint;	// 560 = 0x230
    NSLayoutConstraint *_edgeInsetsLeftConstraint;	// 568 = 0x238
    NSLayoutConstraint *_edgeInsetsRightConstraint;	// 576 = 0x240
    NSLayoutConstraint *_edgeInsetsBottomConstraint;	// 584 = 0x248
    unsigned long long _suspendPropagatingEdgeInsetsCount;	// 592 = 0x250
    CDStruct_f9c529ff _cartographicConfiguration;	// 600 = 0x258
    _Bool _automaticallySnapsToNorth;	// 648 = 0x288
    long long _cachedMuninAvailability;	// 656 = 0x290
    _Bool _forceLayoutOnBoundsChange;	// 664 = 0x298
    _Bool _hasPendingEdgeInsetsChange;	// 665 = 0x299
    NSObject<OS_dispatch_group> *_calloutShowAnimationGroup;	// 672 = 0x2a0
    id _shelbyvilleListener;	// 680 = 0x2a8
    _MKCustomFeatureStore *_annotationsCustomFeatureStore;	// 688 = 0x2b0
    double _lastYaw;	// 696 = 0x2b8
    _Bool _lastPossiblyVisible;	// 704 = 0x2c0
    double _compassVisibleRotationThreshold;	// 712 = 0x2c8
    unsigned long long _cachedVenueIDWithFocus;	// 720 = 0x2d0
    short _cachedDisplayedFloorOrdinalForVenueWithFocus;	// 728 = 0x2d8
    struct CLLocationCoordinate2D _oldCenterCoordinate;	// 736 = 0x2e0
    double _oldHeading;	// 752 = 0x2f0
    double _oldPitch;	// 760 = 0x2f8
    double _oldAltitude;	// 768 = 0x300
    struct UIEdgeInsets _attributionInsets;	// 776 = 0x308
    struct UIEdgeInsets _compassInsets;	// 808 = 0x328
    unsigned long long _compassInsetEdges;	// 840 = 0x348
    _Bool _explicitCompassInsetEdges;	// 848 = 0x350
    MKMapViewLabelMarkerState *_selectedLabelMarkerState;	// 856 = 0x358
    double _appleLogoImageWidth;	// 864 = 0x360
    unsigned long long _compassUpdateNotificationObserversCount;	// 872 = 0x368
    unsigned long long _scaleUpdateNotificationObserversCount;	// 880 = 0x370
    _Bool _showsZoomControls;	// 888 = 0x378
    _Bool _compassSuppressedForFloorPicker;	// 889 = 0x379
    long long _interactionMode;	// 896 = 0x380
    unsigned long long _currentFlyoverAnimationID;	// 904 = 0x388
    MKMapCameraZoomRange *_cameraZoomRange;	// 912 = 0x390
    MKMapCameraBoundary *_cameraBoundary;	// 920 = 0x398
    MKPointOfInterestFilter *_pointOfInterestFilter;	// 928 = 0x3a0
    long long _attributionLinkDisplayStyle;	// 936 = 0x3a8
    long long _compassViewSize;	// 944 = 0x3b0
    long long _compassViewStyle;	// 952 = 0x3b8
    CDUnknownBlockType _labelsDidLayoutCallback;	// 960 = 0x3c0
}

+ (void)setRendersInBackgroundByDefault:(_Bool)arg1;	// IMP=0x00000000000192dd
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_b7cb895d)arg3;	// IMP=0x0000000000019292
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 edgeInsets:(struct UIEdgeInsets)arg3 region:(CDStruct_b7cb895d)arg4;	// IMP=0x00000000000191d2
+ (unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2;	// IMP=0x000000000028efe9
+ (CDStruct_02837cd9)_mapRectThatFitsViewBounds:(struct CGRect)arg1 mapRect:(CDStruct_02837cd9)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(_Bool)arg7;	// IMP=0x000000000028edff
+ (CDStruct_b7cb895d)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 region:(CDStruct_b7cb895d)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(_Bool)arg8;	// IMP=0x000000000028eb8e
- (void).cxx_destruct;	// IMP=0x0000000000036152
@property(copy, nonatomic, getter=_labelsDidLayoutCallback, setter=_setLabelsDidLayoutCallback:) CDUnknownBlockType labelsDidLayoutCallback; // @synthesize labelsDidLayoutCallback=_labelsDidLayoutCallback;
@property(readonly, nonatomic) long long compassViewStyle; // @synthesize compassViewStyle=_compassViewStyle;
@property(readonly, nonatomic) long long compassViewSize; // @synthesize compassViewSize=_compassViewSize;
@property(nonatomic, getter=_isCompassSuppressedForFloorPicker, setter=_setCompassSuppressedForFloorPicker:) _Bool compassSuppressedForFloorPicker; // @synthesize compassSuppressedForFloorPicker=_compassSuppressedForFloorPicker;
@property(nonatomic, getter=_attributionLinkDisplayStyle, setter=_setAttributionLinkDisplayStyle:) long long attributionLinkDisplayStyle; // @synthesize attributionLinkDisplayStyle=_attributionLinkDisplayStyle;
@property(nonatomic) int attributionCorner; // @synthesize attributionCorner=_attributionCorner;
@property(copy, nonatomic) MKPointOfInterestFilter *pointOfInterestFilter; // @synthesize pointOfInterestFilter=_pointOfInterestFilter;
@property(nonatomic) _Bool showsZoomControls; // @synthesize showsZoomControls=_showsZoomControls;
@property(nonatomic) _Bool showsPitchControl; // @synthesize showsPitchControl=_showsPitchControl;
@property(copy, nonatomic) MKMapCameraBoundary *cameraBoundary; // @synthesize cameraBoundary=_cameraBoundary;
@property(copy, nonatomic) MKMapCameraZoomRange *cameraZoomRange; // @synthesize cameraZoomRange=_cameraZoomRange;
@property(nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) unsigned long long currentFlyoverAnimationID; // @synthesize currentFlyoverAnimationID=_currentFlyoverAnimationID;
@property(nonatomic, getter=_edgeInsets, setter=_setEdgeInsets:) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic, getter=_interactionMode, setter=_setInteractionMode:) long long interactionMode; // @synthesize interactionMode=_interactionMode;
@property(nonatomic, getter=_compassVisibleRotationThreshold, setter=_setCompassVisibleRotationThreshold:) double compassVisibleRotationThreshold; // @synthesize compassVisibleRotationThreshold=_compassVisibleRotationThreshold;
@property(nonatomic, getter=_compassInsets, setter=_setCompassInsets:) struct UIEdgeInsets compassInsets; // @synthesize compassInsets=_compassInsets;
@property(nonatomic, getter=_attributionInsets, setter=_setAttributionInsets:) struct UIEdgeInsets attributionInsets; // @synthesize attributionInsets=_attributionInsets;
@property(nonatomic, getter=_cartographicConfiguration, setter=_setCartographicConfiguration:) CDStruct_f9c529ff cartographicConfiguration; // @synthesize cartographicConfiguration=_cartographicConfiguration;
@property(readonly, nonatomic, getter=_calloutShowAnimationGroup) NSObject<OS_dispatch_group> *calloutShowAnimationGroup; // @synthesize calloutShowAnimationGroup=_calloutShowAnimationGroup;
@property(readonly, nonatomic, getter=_locationManager) MKLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void)_insertSubviewBelowAnnotationContainerView:(id)arg1;	// IMP=0x0000000000035ee0
- (void)zoomOut:(id)arg1;	// IMP=0x0000000000035dac
- (void)zoomIn:(id)arg1;	// IMP=0x0000000000035c7a
- (int)currentMapViewTargetForAnalytics;	// IMP=0x0000000000035c6f
- (int)currentUITargetForAnalytics;	// IMP=0x0000000000035c67
- (void)_clearGesturesAndAnimations;	// IMP=0x0000000000035c24
- (void)setVehicleState:(CDStruct_b31ca263)arg1;	// IMP=0x0000000000035bd8
- (void)rotationFilter:(id)arg1 didChangeSnapping:(_Bool)arg2;	// IMP=0x0000000000035bd2
- (void)_stopPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000035b31
- (void)_updatePanWithTranslation:(struct CGPoint)arg1;	// IMP=0x0000000000035b14
- (void)_startPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000035a9d
- (void)_zoomOutWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000035a83
- (void)_zoomOut;	// IMP=0x0000000000035a6f
- (void)_zoomInWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000035a55
- (void)_zoomIn;	// IMP=0x0000000000035a41
- (void)_zoomWithAmount:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000035863
- (void)_zoomWithAmount:(double)arg1;	// IMP=0x000000000003584f
- (void)stopZoomingWithInertia;	// IMP=0x0000000000035828
- (void)startLinearZoomIn:(_Bool)arg1;	// IMP=0x0000000000035796
- (void)setCameraBoundary:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000356ef
- (void)setCameraZoomRange:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000035608
- (void)setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;	// IMP=0x0000000000035458
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x00000000000352a8
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6;	// IMP=0x0000000000035291
- (void)setCamera:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000350fd
- (void)setCamera:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000000350e8
@property(copy, nonatomic) MKMapCamera *camera;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;	// IMP=0x0000000000034a11
- (void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2;	// IMP=0x00000000000345e7
- (_Bool)annotationManager:(id)arg1 canSelectAnnotationRepresentation:(id)arg2;	// IMP=0x0000000000034550
- (_Bool)annotationManager:(id)arg1 shouldAnimateDeselectionOfAnnotation:(id)arg2 forSelectionOfAnnotation:(id)arg3;	// IMP=0x0000000000034501
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;	// IMP=0x0000000000034193
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;	// IMP=0x0000000000033e92
- (void)annotationManagerDidChangeVisibleAnnotationRepresentations:(id)arg1;	// IMP=0x0000000000033e75
- (void)annotationManager:(id)arg1 didRemoveAnnotationRepresentations:(id)arg2;	// IMP=0x0000000000033e6f
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;	// IMP=0x0000000000033add
- (_Bool)shouldHideOffscreenSelectedAnnotation;	// IMP=0x0000000000033ac0
- (CDUnknownBlockType)annotationCoordinateTest;	// IMP=0x0000000000033960
- (CDUnknownBlockType)annotationRectTest;	// IMP=0x00000000000337cd
- (CDStruct_02837cd9)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_02837cd9)arg2;	// IMP=0x00000000000336fe
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(struct CLLocationCoordinate2D)arg2 animated:(_Bool)arg3 duration:(double)arg4;	// IMP=0x00000000000336ac
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000003360b
- (void)selectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000033432
- (void)removeAnnotationRepresentation:(id)arg1;	// IMP=0x0000000000033216
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(_Bool)arg2;	// IMP=0x0000000000032dae
- (void)_addAnnotationsCustomFeatureStoreIfNeeded;	// IMP=0x0000000000032d29
- (void)mapLayerARSessionInterruptionEnded:(id)arg1;	// IMP=0x0000000000032c9f
- (void)mapLayer:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;	// IMP=0x0000000000032c0d
- (void)mapLayer:(id)arg1 arTrackingStateDidChange:(unsigned long long)arg2 reason:(unsigned long long)arg3;	// IMP=0x0000000000032b70
- (void)mapLayer:(id)arg1 didEncounterARError:(id)arg2;	// IMP=0x0000000000032adc
- (void)mapLayerDidExitAR:(id)arg1;	// IMP=0x0000000000032a52
- (void)mapLayerDidEnterAR:(id)arg1;	// IMP=0x00000000000329c8
- (void)mapLayerWillEnterAR:(id)arg1;	// IMP=0x000000000003293e
- (void)setFlyoverMode:(int)arg1;	// IMP=0x00000000000328f2
- (void)_resumeFlyoverAnimation;	// IMP=0x00000000000327cd
- (void)_pauseFlyoverAnimation;	// IMP=0x00000000000326a8
- (void)_stopFlyoverAnimation;	// IMP=0x00000000000325a0
- (void)_startFlyoverTourAnimation:(unsigned long long)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000031d76
- (void)_performFlyoverAnimation:(id)arg1 animateToStart:(_Bool)arg2;	// IMP=0x0000000000031b05
- (void)_performFlyoverAnimation:(id)arg1;	// IMP=0x0000000000031af1
- (void)_prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000031935
- (void)deselectVenuePoiFeatureId;	// IMP=0x0000000000031918
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;	// IMP=0x00000000000318fb
- (short)defaultFloorForBuildingsInVenue:(id)arg1;	// IMP=0x000000000003186e
- (_Bool)displayedFloorIsDefaultForBuildingsInVenue:(id)arg1;	// IMP=0x00000000000317e2
- (short)displayedFloorOrdinalForBuildingsInVenue:(id)arg1;	// IMP=0x0000000000031755
- (void)resetDisplayedFloorOrdinalForAllVenues;	// IMP=0x000000000003124a
- (void)setDisplayedFloorOrdinal:(short)arg1 forBuildingsInVenue:(id)arg2;	// IMP=0x0000000000030f4c
- (double)zoomToFocusVenueBuilding:(id)arg1;	// IMP=0x0000000000030f0f
- (double)zoomToFocusVenue:(id)arg1;	// IMP=0x0000000000030ed2
@property(nonatomic, getter=_isDimmingOutsideVenueWithFocus) _Bool dimmingOutsideVenueWithFocus;
@property(readonly, nonatomic) VKVenueBuildingFeatureMarker *venueBuildingWithFocus;
- (id)venueWithID:(unsigned long long)arg1;	// IMP=0x0000000000030e24
@property(readonly, nonatomic) VKVenueFeatureMarker *venueWithFocus;
- (void)_setEdgeInsets:(struct UIEdgeInsets)arg1 explicit:(_Bool)arg2;	// IMP=0x0000000000030928
- (void)_resumePropagatingEdgeInsets;	// IMP=0x00000000000308b3
- (void)_suspendPropagatingEdgeInsets;	// IMP=0x00000000000308a2
@property(readonly, nonatomic, getter=_edgeInsetsLayoutGuide) UILayoutGuide *edgeInsetsLayoutGuide;
@property(nonatomic, getter=_labelEdgeInsets, setter=_setLabelEdgeInsets:) struct UIEdgeInsets labelEdgeInsets;
- (void)updateLayoutGuides;	// IMP=0x0000000000030400
- (void)_clearLayoutGuides;	// IMP=0x000000000003035c
- (void)safeAreaInsetsDidChange;	// IMP=0x0000000000030316
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000003024e
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;	// IMP=0x0000000000030201
- (void)layoutMarginsDidChange;	// IMP=0x00000000000301be
- (void)_updateInsets;	// IMP=0x000000000002fcd3
- (void)_updateInsetsWithForce:(_Bool)arg1;	// IMP=0x000000000002fca2
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;	// IMP=0x000000000002fa16
- (double)_goToCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;	// IMP=0x000000000002f587
- (double)_zoomScaleForMapRegion:(id)arg1;	// IMP=0x000000000002f402
- (id)_mapRegionWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomScale:(double)arg2;	// IMP=0x000000000002f234
- (double)_zoomLevelForRegion:(CDStruct_b7cb895d)arg1 includeAccessoryPadding:(_Bool)arg2;	// IMP=0x000000000002f1a6
- (double)_zoomLevelForMapRect:(CDStruct_02837cd9)arg1 includeAccessoryPadding:(_Bool)arg2;	// IMP=0x000000000002f0bc
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x000000000002f083
- (double)_defaultAnimationDurationForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;	// IMP=0x000000000002ef66
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002ef22
@property(nonatomic) CDStruct_02837cd9 visibleMapRect;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002ec1f
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000002e9e3
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3;	// IMP=0x000000000002e6ec
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 timingFunction:(id)arg3 animated:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000000002e39e
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000002e381
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3;	// IMP=0x000000000002e36c
- (void)_setZoomScale:(double)arg1 centerCoordinate:(struct CLLocationCoordinate2D)arg2 duration:(double)arg3 timingFunction:(id)arg4 animated:(_Bool)arg5;	// IMP=0x000000000002e2e3
- (void)_setZoomScale:(double)arg1 centerCoordinate:(struct CLLocationCoordinate2D)arg2 duration:(double)arg3 animated:(_Bool)arg4;	// IMP=0x000000000002e27e
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 timingFunction:(id)arg4 animated:(_Bool)arg5;	// IMP=0x000000000002df97
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(_Bool)arg4;	// IMP=0x000000000002df7e
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1;	// IMP=0x000000000002df33
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;	// IMP=0x000000000002de22
- (CDStruct_b7cb895d)regionThatFits:(CDStruct_b7cb895d)arg1;	// IMP=0x000000000002dcf1
- (CDStruct_c0a8b48f)_zoomRegionForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4;	// IMP=0x000000000002db66
@property(nonatomic) CDStruct_b7cb895d region;
- (void)setRegion:(CDStruct_b7cb895d)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002d75a
@property(readonly, nonatomic) CDStruct_c3b9c2ee _centerMapPoint;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
@property(nonatomic) struct CLLocationCoordinate2D centerCoordinate;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002d356
- (_Bool)_mustWaitUntilSized;	// IMP=0x000000000002d2a2
- (void)_endZoomForExternalGesture;	// IMP=0x000000000002d26c
- (void)_startZoomForExternalGesture;	// IMP=0x000000000002d21e
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;	// IMP=0x000000000002cfaa
- (void)setHidden:(_Bool)arg1;	// IMP=0x000000000002cf45
- (void)didMoveToSuperview;	// IMP=0x000000000002cf04
- (void)didMoveToWindow;	// IMP=0x000000000002cdbc
- (void)layoutSubviews;	// IMP=0x000000000002cd76
- (void)_willChangeStatusBarFrame:(id)arg1;	// IMP=0x000000000002ccb3
- (void)_removePersistentVectorOverlay:(id)arg1;	// IMP=0x000000000002cc96
- (void)_addPersistentVectorOverlay:(id)arg1;	// IMP=0x000000000002cc79
- (void)_removeVectorOverlay:(id)arg1;	// IMP=0x000000000002cc5c
- (void)_addVectorOverlay:(id)arg1;	// IMP=0x000000000002cc3f
@property(nonatomic, getter=_displayedSearchResultsType, setter=_setDisplayedSearchResultsType:) long long displayedSearchResultsType;
@property(nonatomic, getter=_applicationState, setter=_setApplicationState:) int applicationState;
@property(nonatomic, getter=_userTrackingBehavior, setter=_setUserTrackingBehavior:) CDStruct_211b8904 userTrackingBehavior;
@property(nonatomic, getter=_loadMuninAvailability, setter=_setLoadMuninAvailability:) _Bool loadMuninAvailability;
@property(readonly, nonatomic, getter=_muninAvailability) long long muninAvailability;
@property(readonly, nonatomic, getter=_isShowingCuratedElevatedGround) _Bool showingCuratedElevatedGround;
@property(readonly, nonatomic, getter=_canEnterNightMode) _Bool canEnterNightMode;
@property(readonly, nonatomic, getter=_canEnter3DModeFlyover) _Bool canEnter3DModeFlyover;
@property(readonly, nonatomic, getter=_canEnter3DMode) _Bool canEnter3DMode;
@property(readonly, nonatomic, getter=_isPitched) _Bool pitched;
- (void)_exitARMode;	// IMP=0x000000000002ca15
- (void)_enterARModeWithLocation:(id)arg1;	// IMP=0x000000000002c8a6
- (void)_enterARMode;	// IMP=0x000000000002c818
- (void)_exit3DMode;	// IMP=0x000000000002c7a9
- (void)_enter3DMode;	// IMP=0x000000000002c73a
- (struct CGRect)convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;	// IMP=0x000000000002c707
- (CDStruct_02837cd9)convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;	// IMP=0x000000000002c6d4
- (CDStruct_b7cb895d)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;	// IMP=0x000000000002c64d
- (struct CGRect)convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;	// IMP=0x000000000002c5c6
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;	// IMP=0x000000000002c52f
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;	// IMP=0x000000000002c498
@property(nonatomic, getter=_allowsPopoverWhenNotInWindow, setter=_setAllowsPopoverWhenNotInWindow:) _Bool allowsPopoverWhenNotInWindow;
@property(nonatomic) _Bool _annotationViewsAreAddedImmediately;
- (id)viewForAnnotation:(id)arg1;	// IMP=0x000000000002c433
- (void)registerClass:(Class)arg1 forAnnotationViewWithReuseIdentifier:(id)arg2;	// IMP=0x000000000002c416
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 forAnnotation:(id)arg2;	// IMP=0x000000000002c35f
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;	// IMP=0x000000000002c342
- (void)_addViewsForAnnotations:(id)arg1;	// IMP=0x000000000002c2ef
- (void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;	// IMP=0x000000000002c2c6
- (void)removeAnnotations:(id)arg1;	// IMP=0x000000000002c1ab
- (void)removeAnnotation:(id)arg1;	// IMP=0x000000000002c11a
- (void)_addAnnotations:(id)arg1 allowAnimation:(_Bool)arg2;	// IMP=0x000000000002bfde
- (void)addAnnotations:(id)arg1;	// IMP=0x000000000002bf98
- (void)addAnnotation:(id)arg1;	// IMP=0x000000000002bf58
- (void)_addAnnotation:(id)arg1 allowAnimation:(_Bool)arg2;	// IMP=0x000000000002bed3
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002beb6
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002be99
- (void)_selectAnnotation:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002be87
- (void)navigationCameraReturnToPuck;	// IMP=0x000000000002be6a
- (id)_labelMarkerForCustomFeatureAnnotation:(id)arg1;	// IMP=0x000000000002bde7
- (id)_labelMarkerAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000002bd18
- (void)_selectLabelMarker:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002bb76
- (void)_deselectLabelMarkerAnimated:(_Bool)arg1;	// IMP=0x000000000002bad7
@property(readonly, nonatomic, getter=_selectedLabelMarker) VKLabelMarker *selectedLabelMarker;
@property(nonatomic, getter=_canSelectAllLabels, setter=_setCanSelectAllLabels:) _Bool canSelectAllLabels;
@property(nonatomic, getter=_canSelectPOIs, setter=_setCanSelectPOIs:) _Bool canSelectPOIs;
@property(copy, nonatomic) NSArray *selectedAnnotations;
@property(readonly, nonatomic, getter=_annotationViews) NSArray *annotationViews;
- (id)annotationsInMapRect:(CDStruct_02837cd9)arg1;	// IMP=0x000000000002b62a
@property(readonly, nonatomic) struct CGRect annotationVisibleRect;
@property(readonly, nonatomic) NSArray *annotations;
- (void)goToDefaultLocation;	// IMP=0x000000000002b323
- (void)_displayWorld;	// IMP=0x000000000002b1b3
- (void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2;	// IMP=0x000000000002b055
- (void)annotationContainer:(id)arg1 calloutPrimaryActionTriggeredForAnnotationView:(id)arg2;	// IMP=0x000000000002adb1
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;	// IMP=0x000000000002aac5
- (void)annotationContainerDidDropPins:(id)arg1;	// IMP=0x000000000002a98a
- (void)annotationContainerWillDropPins:(id)arg1;	// IMP=0x000000000002a84f
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(struct CLLocationCoordinate2D)arg2 maxDistance:(double *)arg3;	// IMP=0x000000000002a7ee
- (_Bool)annotationContainer:(id)arg1 isAnnotationView:(id)arg2 validForDisplayAtPoint:(struct CGPoint)arg3;	// IMP=0x000000000002a71b
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;	// IMP=0x000000000002a6fc
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;	// IMP=0x000000000002a5c1
- (void)annotationContainerDidAnimateBubble:(id)arg1;	// IMP=0x000000000002a5bb
- (void)annotationContainerWillAnimateBubble:(id)arg1;	// IMP=0x000000000002a5b5
- (void)annotationContainer:(id)arg1 requestRemovingClusterAnnotationView:(id)arg2 updateVisible:(_Bool)arg3;	// IMP=0x000000000002a559
- (id)annotationContainer:(id)arg1 requestAddingClusterForAnnotationViews:(id)arg2;	// IMP=0x000000000002a294
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(struct CLLocationCoordinate2D)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000029d61
- (_Bool)annotationContainerShouldAlignToPixels:(id)arg1;	// IMP=0x0000000000029d28
- (_Bool)annotationContainerIsRotated:(id)arg1;	// IMP=0x0000000000029ce9
- (struct CGRect)visibleCenteringRectInView:(id)arg1;	// IMP=0x0000000000029c04
- (struct CGRect)visibleRectInView:(id)arg1;	// IMP=0x0000000000029b82
- (void)_sceneDidFinishSuspensionSnapshot:(id)arg1;	// IMP=0x0000000000029b71
- (void)_sceneDidEnterBackground:(id)arg1;	// IMP=0x0000000000029b5f
- (void)_sceneDidActivate:(id)arg1;	// IMP=0x0000000000029b4d
- (void)_sceneWillEnterForeground:(id)arg1;	// IMP=0x0000000000029b3b
- (void)_unregisterSceneLifecycleNotifications;	// IMP=0x0000000000029a1c
- (void)_registerSceneLifecycleNotifications;	// IMP=0x000000000002988f
- (void)applicationWillTerminate:(id)arg1;	// IMP=0x000000000002983d
- (void)applicationWillEnterForeground:(id)arg1;	// IMP=0x00000000000297f4
- (void)applicationDidBecomeActive:(id)arg1;	// IMP=0x000000000002979b
- (void)applicationDidEnterBackground:(id)arg1;	// IMP=0x000000000002978a
- (void)applicationWillResignActive:(id)arg1;	// IMP=0x0000000000029714
- (void)_issueDatasetCheckinCall;	// IMP=0x0000000000029658
- (void)mapLayerNavigationCameraDidReturnToDefaultZoom;	// IMP=0x0000000000029536
- (void)mapLayerNavigationCameraDidLeaveDefaultZoom;	// IMP=0x0000000000029414
- (void)mapLayerNavigationCameraHasStoppedPanning;	// IMP=0x00000000000292f2
- (void)mapLayerNavigationCameraHasStartedPanning;	// IMP=0x00000000000291d0
- (void)mapLayerCanZoomOutDidChange:(_Bool)arg1;	// IMP=0x0000000000029094
- (void)mapLayerCanZoomInDidChange:(_Bool)arg1;	// IMP=0x0000000000028f58
- (void)mapLayerMuninAvailabilityDidChange:(long long)arg1;	// IMP=0x0000000000028dc7
- (void)mapLayerCanEnter3DModeDidChange:(_Bool)arg1;	// IMP=0x0000000000028c74
- (void)mapLayerDidBecomePitched:(_Bool)arg1;	// IMP=0x0000000000028af7
- (id)mapLayerPresentationForAnnotation:(id)arg1;	// IMP=0x0000000000028a55
- (void)mapLayerDidFinishInitialTrackingAnimation;	// IMP=0x00000000000288f0
- (void)mapLayerDidChangeRegionAnimated:(_Bool)arg1;	// IMP=0x000000000002881b
- (void)mapLayerWillChangeRegionAnimated:(_Bool)arg1;	// IMP=0x0000000000028809
- (void)mapLayerDidChangeVisibleRegion;	// IMP=0x00000000000286da
- (void)mapLayer:(id)arg1 venueCreated:(id)arg2 venueCreatedBuilding:(id)arg3;	// IMP=0x0000000000028568
- (void)mapLayer:(id)arg1 venueWithFocusDidChange:(id)arg2 building:(id)arg3;	// IMP=0x0000000000028384
- (void)mapLayer:(id)arg1 flyoverModeWillChange:(int)arg2;	// IMP=0x0000000000028240
- (void)mapLayer:(id)arg1 flyoverModeDidChange:(int)arg2;	// IMP=0x00000000000280fc
- (void)mapLayer:(id)arg1 showingFlyoverDidChange:(_Bool)arg2;	// IMP=0x0000000000027fb7
- (void)mapLayer:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;	// IMP=0x0000000000027e6c
- (void)mapLayer:(id)arg1 willTransitionTo:(long long)arg2;	// IMP=0x0000000000027e4c
- (void)mapLayerDidDraw:(id)arg1;	// IMP=0x0000000000027cb5
- (_Bool)_mapViewHasUpdatedCamera;	// IMP=0x0000000000027b31
- (void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2;	// IMP=0x00000000000279d3
- (void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(_Bool)arg2;	// IMP=0x000000000002788e
- (void)mapLayerWillStartFlyoverTour:(id)arg1;	// IMP=0x0000000000027753
- (void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2;	// IMP=0x0000000000027726
- (void)mapLayer:(id)arg1 selectedLabelMarkerDidChangeState:(id)arg2;	// IMP=0x0000000000027588
- (void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;	// IMP=0x00000000000274d9
- (void)mapLayerLabelsDidLayout:(id)arg1;	// IMP=0x000000000002749f
- (void)mapLayerDidChangeSceneState:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x0000000000027180
- (void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000027022
- (void)mapLayerDidFinishLoadingTiles:(id)arg1;	// IMP=0x0000000000026ee7
- (void)mapLayerDidStartLoadingTiles:(id)arg1;	// IMP=0x0000000000026dac
@property(nonatomic, getter=_automaticallySnapsToNorth, setter=_setAutomaticallySnapsToNorth:) _Bool automaticallySnapsToNorth;
- (void)_snapToTrueNorthAndCallBack:(_Bool)arg1;	// IMP=0x0000000000026cf9
- (void)snapToNorth:(id)arg1;	// IMP=0x0000000000026c71
- (id)_commonVisibilityAnimation:(_Bool)arg1;	// IMP=0x0000000000026a88
- (_Bool)compassVisible;	// IMP=0x0000000000026a78
- (void)_setCompassVisible:(_Bool)arg1 animationAllowed:(_Bool)arg2 force:(_Bool)arg3;	// IMP=0x0000000000026799
- (void)_handleCompassTap:(id)arg1;	// IMP=0x000000000002671e
- (void)_updateCompassPositionClassic;	// IMP=0x0000000000026322
- (void)_updateControlsPosition:(_Bool)arg1;	// IMP=0x0000000000026310
- (void)_postDidUpdateYawNotification;	// IMP=0x00000000000261b5
- (void)_updateCompassVisibility;	// IMP=0x0000000000025fa0
- (id)compassView;	// IMP=0x0000000000025e3c
- (_Bool)_roomForCompass;	// IMP=0x0000000000025d9b
@property(readonly, nonatomic, getter=_compassDiameter) double compassDiameter;
@property(nonatomic) _Bool showsCompass;
@property(readonly, nonatomic) double presentationYaw;
@property(nonatomic, getter=isCompassEnabled) _Bool compassEnabled;
- (void)_updateScalePosition;	// IMP=0x0000000000025806
- (void)_showOrHideScaleIfNecessary:(_Bool)arg1;	// IMP=0x000000000002551f
- (void)_updateScale;	// IMP=0x0000000000025446
- (_Bool)_canShowAppleLogo;	// IMP=0x00000000000252fd
@property(readonly, nonatomic, getter=_canShowControls) _Bool canShowControls;
- (_Bool)_shouldDisplayScaleForCurrentRegion;	// IMP=0x000000000002505a
- (id)scaleView;	// IMP=0x0000000000024fa6
@property(nonatomic, getter=_scaleVisibility, setter=_setScaleVisibility:) long long scaleVisibility;
@property(nonatomic, getter=_showsScaleDuringZoom, setter=_setShowsScaleDuringZoom:) _Bool showsScaleDuringZoom;
@property(nonatomic) _Bool showsScale;
@property(readonly, nonatomic) _Bool canShowZoom;
@property(readonly, nonatomic) _Bool canShowPitch;
@property(readonly, nonatomic) _Bool canShowCompass;
- (_Bool)canPossiblyShowCompass;	// IMP=0x0000000000024c69
- (void)_forceFrame;	// IMP=0x0000000000024c4c
- (id)_labelMarkersInCurrentViewportForType:(int)arg1;	// IMP=0x0000000000024a85
- (id)_labelMarkersInCurrentViewport;	// IMP=0x0000000000024a35
- (void)_sizeDidChangeWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1;	// IMP=0x000000000002482a
- (void)_sizeWillChange;	// IMP=0x0000000000024801
- (void)_updateRotationAttributes;	// IMP=0x00000000000247ca
- (void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1;	// IMP=0x000000000002479e
- (void)resumeUserLocationUpdates;	// IMP=0x0000000000024787
- (void)pauseUserLocationUpdates;	// IMP=0x0000000000024775
- (void)_populateArchivedSubviews:(id)arg1;	// IMP=0x00000000000246c8
- (void)_updateContentBounds;	// IMP=0x00000000000245a8
- (void)_insertSubview:(id)arg1;	// IMP=0x000000000002439f
- (int)_viewIndexForSubview:(id)arg1;	// IMP=0x000000000002431d
- (void)_fixUserLocationFromPresentationValue;	// IMP=0x00000000000240de
- (void)_clearFixedUserLocation;	// IMP=0x00000000000240af
- (void)showAnnotations:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000023c24
@property(readonly, nonatomic) _Bool effectsEnabled;
@property(retain, nonatomic) NSTimer *_startEffectsTimer;
- (void)_updateEffects;	// IMP=0x0000000000023a4c
- (void)_updateShouldDisplayEffects;	// IMP=0x0000000000023952
- (void)_startEffects;	// IMP=0x0000000000023927
- (id)beginStoppingEffects;	// IMP=0x00000000000238e4
- (void)_stopEffects;	// IMP=0x00000000000238c7
- (void)_updateScrollContainerView:(_Bool)arg1 forReason:(long long)arg2;	// IMP=0x0000000000023232
- (void)_updateFallbackTileLoading;	// IMP=0x000000000002319c
- (double)_boundedZoomLevel:(double)arg1;	// IMP=0x0000000000023121
@property(nonatomic) long long labelTextSize;
- (void)_annotationViewDragStateChanged:(id)arg1;	// IMP=0x0000000000022d20
@property(nonatomic, getter=_shouldLoadFallbackTiles, setter=_setShouldLoadFallbackTiles:) _Bool shouldLoadFallbackTiles;
@property(nonatomic, getter=_shouldAnimatePositionWithRouteMatch, setter=_setShouldAnimatePositionWithRouteMatch:) _Bool shouldAnimatePositionWithRouteMatch;
@property(nonatomic, getter=_shouldSplitRouteLine, setter=_setShouldSplitRouteLine:) _Bool shouldSplitRouteLine;
@property(nonatomic, getter=_isLocationPulseEnabled, setter=_setLocationPulseEnabled:) _Bool locationPulseEnabled;
@property(nonatomic, getter=_userInteractionPausesLocationUpdates, setter=_setUserInteractionPausesLocationUpdates:) _Bool userInteractionPausesLocationUpdates;
- (_Bool)_isZooming;	// IMP=0x0000000000022934
- (void)_didEndZoom;	// IMP=0x000000000002281c
- (void)_willStartZoom:(_Bool)arg1;	// IMP=0x00000000000227b9
- (void)_didChangeRegionMidstream:(_Bool)arg1;	// IMP=0x000000000002233f
- (void)_willChangeRegionAnimated:(_Bool)arg1;	// IMP=0x00000000000220f7
- (void)_updateIconsShouldAlignToPixels;	// IMP=0x0000000000022074
- (_Bool)_iconsShouldAlignToPixels;	// IMP=0x0000000000021fdd
@property(readonly, nonatomic, getter=_isAnimating) _Bool animating;
- (void)toggleLocationConsole:(id)arg1;	// IMP=0x0000000000021f72
@property(readonly, nonatomic, getter=_currentEnvironmentLabelFrame) struct CGRect currentEnvironmentLabelFrame;
@property(nonatomic, getter=_showsCurrentEnvironmentName, setter=_setShowsCurrentEnvironmentName:) _Bool showsCurrentEnvironmentName;
- (_Bool)_isUsingDevResourceStyleSheet;	// IMP=0x0000000000021df8
- (void)_updateEnvironmentLabelText;	// IMP=0x0000000000021c73
- (struct CGRect)_currentEnvironmentNameFrame;	// IMP=0x0000000000021a4d
@property(copy, nonatomic, getter=_debugConsoleAdditionalInfoProvider, setter=_setDebugConsoleAdditionalInfoProvider:) CDUnknownBlockType debugConsoleAdditionalInfoProvider;
@property(readonly, nonatomic, getter=_debugConsole) MKDebugLocationConsole *debugConsole;
- (void)_handleSelectionAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000021443
- (_Bool)calloutViewContainsPoint:(struct CGPoint)arg1;	// IMP=0x00000000000213fd
- (void)_updateScrollingAndGestures;	// IMP=0x0000000000021354
- (void)_clearGestureRecognizers;	// IMP=0x0000000000021337
- (void)_dropDraggingAnnotationView:(_Bool)arg1;	// IMP=0x00000000000212b5
- (id)_annotationAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;	// IMP=0x0000000000021226
- (void)_updateShowHeadingIndicator;	// IMP=0x000000000002106a
@property(nonatomic, getter=_alwaysShowHeadingIndicator, setter=_setAlwaysShowHeadingIndicatorIfSupported:) _Bool alwaysShowHeadingIndicator;
- (_Bool)_shouldSupportAlwaysShowHeadingIndicator;	// IMP=0x0000000000020f76
@property(nonatomic, getter=_showHeadingIndicatorForStepping, setter=_setShowHeadingIndicatorForStepping:) _Bool showHeadingIndicatorForStepping;
- (_Bool)postsMapViewInitialRenderingNotification;	// IMP=0x0000000000020f10
- (void)_setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2 fromTrackingButton:(_Bool)arg3;	// IMP=0x00000000000205ca
- (void)setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x000000000002056e
@property(nonatomic) long long userTrackingMode;
- (_Bool)isCurrentlyRotated;	// IMP=0x00000000000204fb
@property(readonly, nonatomic) _Bool canRotateForHeading;
@property(readonly, nonatomic) _Bool hasUserLocation;
@property(readonly, nonatomic) MKUserLocation *userLocation;
@property(readonly, nonatomic) _Bool hasRenderedSomething;
@property(readonly, nonatomic, getter=isUserLocationVisible) _Bool userLocationVisible;
@property(nonatomic) _Bool showsUserLocation;
- (void)_setTracePlaybackSpeedMultiplier:(double)arg1;	// IMP=0x000000000002030b
@property(nonatomic, getter=_panWithMomentum, setter=_setPanWithMomentum:) _Bool panWithMomentum;
@property(nonatomic, getter=isPitchEnabled) _Bool pitchEnabled;
@property(nonatomic, getter=isRotateEnabled) _Bool rotateEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
- (void)setCenter:(struct CGPoint)arg1;	// IMP=0x000000000001fea5
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x000000000001fd8b
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x000000000001fc94
- (_Bool)_canZoomOut;	// IMP=0x000000000001fc72
- (_Bool)_canZoomIn;	// IMP=0x000000000001fc50
@property(readonly, nonatomic, getter=_maximumZoomLevel) double maximumZoomLevel;
@property(readonly, nonatomic, getter=_minimumZoomLevel) double minimumZoomLevel;
- (double)_vectorKitTileZoomLevelForMapKitZoomLevel:(double)arg1;	// IMP=0x000000000001fba9
- (double)_mapKitZoomLevelForVectorKitTileZoomLevel:(double)arg1;	// IMP=0x000000000001fb4a
@property(readonly, nonatomic) double _zoomLevel;
@property(readonly, nonatomic) double _zoomScale;
- (long long)_roundedZoomLevel;	// IMP=0x000000000001fab9
- (void)_updateVectorKitConsoleFrameWithEdgeInsets;	// IMP=0x000000000001f98f
- (_Bool)_isHandlingUserEvent;	// IMP=0x000000000001f972
- (struct CGPoint)_centerPoint;	// IMP=0x000000000001f8ba
@property(readonly, nonatomic, getter=isRegionChanging) _Bool regionChanging;
@property(nonatomic, getter=_isInactive, setter=_setInactive:) _Bool inactive;
@property(nonatomic, getter=isSuspended) _Bool suspended;
- (void)_resumeUserInteraction;	// IMP=0x000000000001f77a
- (void)_suspendUserInteraction;	// IMP=0x000000000001f734
- (void)_setMapDisplayStyle:(CDStruct_80aa614a)arg1;	// IMP=0x000000000001f641
- (CDStruct_80aa614a)_mapDisplayStyle;	// IMP=0x000000000001f624
@property(nonatomic, getter=_showsNightMode, setter=_setShowsNightMode:) _Bool showsNightMode;
- (void)_setCartographicConfiguration:(CDStruct_f9c529ff)arg1 animated:(_Bool)arg2;	// IMP=0x000000000001f3ed
- (void)_setCartographicConfiguration:(CDStruct_f9c529ff)arg1 onInit:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x000000000001ee23
- (void)_setMapType:(unsigned long long)arg1 onInit:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x000000000001ed91
- (void)_setMapType:(unsigned long long)arg1 animated:(_Bool)arg2;	// IMP=0x000000000001ed7a
- (_Bool)_supportsVKMapType:(int)arg1;	// IMP=0x000000000001ecec
@property(nonatomic) unsigned long long mapType;
@property(readonly, nonatomic, getter=_canShowFlyover) _Bool canShowFlyover;
@property(readonly, nonatomic, getter=_isShowingFlyover) _Bool showingFlyover;
@property(readonly, nonatomic) long long _interfaceOrientation;
- (void)_updateHeadingOrientation;	// IMP=0x000000000001eb45
@property(nonatomic) _Bool rendersInBackground;
@property(readonly, nonatomic, getter=_isHandlingNonselectingTap) _Bool handlingNonselectingTap;
@property(readonly, nonatomic, getter=_oneHandedZoomGestureRecognizer) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
@property(readonly, nonatomic, getter=_twoFingerTapGestureRecognizer) UITapGestureRecognizer *twoFingerTapGestureRecognizer;
@property(readonly, nonatomic, getter=_doubleTapGestureRecognizer) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property(readonly, nonatomic, getter=_longPressGestureRecognizer) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property(readonly, nonatomic, getter=_nonselectingTapGestureRecognizer) UITapGestureRecognizer *nonselectingTapGestureRecognizer;
@property(readonly, nonatomic, getter=_selectingTapGestureRecognizer) UITapGestureRecognizer *selectingTapGestureRecognizer;
@property(readonly, nonatomic, getter=_rotationGestureRecognizer) UIRotationGestureRecognizer *rotationGestureRecognizer;
@property(readonly, nonatomic, getter=_pinchGestureRecognizer) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property(readonly, nonatomic, getter=_panningGestureRecognizer) UIPanGestureRecognizer *panningGestureRecognizer;
@property(nonatomic, getter=_showsPressedLabelMarkerEffect, setter=_setShowsPressedLabelMarkerEffect:) _Bool showsPressedLabelMarkerEffect;
- (_Bool)isShowingNoDataPlaceholders;	// IMP=0x000000000001e98f
@property(nonatomic, getter=_showsVenues, setter=_setShowsVenues:) _Bool showsVenues;
@property(nonatomic, getter=_showsPointLabels, setter=_setShowsPointLabels:) _Bool showsPointLabels;
@property(nonatomic, getter=_showsRoadShields, setter=_setShowsRoadShields:) _Bool showsRoadShields;
@property(nonatomic, getter=_showsRoadLabels, setter=_setShowsRoadLabels:) _Bool showsRoadLabels;
@property(nonatomic) _Bool showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest;
@property(nonatomic, getter=_localizeLabels, setter=_setLocalizeLabels:) _Bool localizeLabels;
@property(nonatomic, getter=_showsTrafficIncidents, setter=_setShowsTrafficIncidents:) _Bool showsTrafficIncidents;
- (void)_removeCustomFeatureDataSource:(id)arg1;	// IMP=0x000000000001e582
- (void)_addCustomFeatureDataSource:(id)arg1;	// IMP=0x000000000001e565
@property(nonatomic) _Bool showsTraffic;
- (void)deviceOrientationDidChange:(id)arg1;	// IMP=0x000000000001e43b
- (void)valueChangedForGEOConfigKey:(CDStruct_35640fce)arg1;	// IMP=0x000000000001e379
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;	// IMP=0x000000000001e303
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;	// IMP=0x000000000001e2fd
@property(nonatomic, getter=_isVectorKitConsoleEnabled, setter=_setVectorKitConsoleEnabled:) _Bool vectorKitConsoleEnabled;
- (id)mapAttributionWithStringAttributes:(id)arg1 underlineText:(_Bool)arg2;	// IMP=0x000000000001e000
- (id)mapAttributionWithStringAttributes:(id)arg1 underlineText:(_Bool)arg2 linkAttribution:(_Bool)arg3;	// IMP=0x000000000001df4e
- (id)mapAttributionWithStringAttributes:(id)arg1 allowMultiLine:(_Bool)arg2;	// IMP=0x000000000001df37
- (id)mapAttributionWithStringAttributes:(id)arg1;	// IMP=0x000000000001df20
- (id)urlForMapAttribution;	// IMP=0x000000000001debe
- (struct CGRect)attributionFrame;	// IMP=0x000000000001de75
- (void)_updateAppleLogoVisibility;	// IMP=0x000000000001dc4f
- (void)_updateAttribution;	// IMP=0x000000000001d656
@property(nonatomic, getter=_compassInsetEdges, setter=_setCompassInsetEdges:) unsigned long long compassInsetEdges;
- (void)_setCompassViewSize:(long long)arg1 style:(long long)arg2;	// IMP=0x000000000001d470
- (void)_layoutAttribution;	// IMP=0x000000000001c883
@property(readonly, nonatomic) struct CGRect attributionBadgeBounds;
@property(readonly, nonatomic, getter=_isShowingAttributionBadge) _Bool showingAttributionBadge;
@property(nonatomic) _Bool canShowAttributionBadge;
- (void)_setShowsAppleLogo:(_Bool)arg1 force:(_Bool)arg2;	// IMP=0x000000000001c5f9
@property(nonatomic, getter=_showsAppleLogo, setter=_setShowsAppleLogo:) _Bool showsAppleLogo;
@property(nonatomic) _Bool showsAttribution;
@property(readonly, nonatomic, getter=_mapLayer) VKMapView *mapLayer;
- (void)_forceManifestUpdateIfNecessary;	// IMP=0x000000000001c417
- (void)_updateAppearanceIfNeeded;	// IMP=0x000000000001c0b3
- (long long)_controlsUserInterfaceStyleOverride;	// IMP=0x000000000001c047
- (void)_withEffectiveTraitCollection:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bec0
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000001b9c8
- (void)setBackdropViewQualityChangingDisabled:(_Bool)arg1;	// IMP=0x000000000001b9a2
- (void)willMoveToWindow:(id)arg1;	// IMP=0x000000000001b668
@property(nonatomic, getter=_safeDelegate, setter=_setSafeDelegate:) __weak id <MKMapViewDelegate> _safeDelegate;
- (void)dealloc;	// IMP=0x000000000001b415
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000001b183
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000001ac2f
- (id)initFromIBWithFrame:(struct CGRect)arg1;	// IMP=0x000000000001aa46
- (id)initWithFrame:(struct CGRect)arg1 locationManager:(id)arg2;	// IMP=0x000000000001a7e6
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000001a600
- (id)_initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(_Bool)arg3 showsAppleLogo:(_Bool)arg4 allowsAntialiasing:(_Bool)arg5;	// IMP=0x000000000001a46d
- (id)_commonInitFromIB:(_Bool)arg1 gestureRecognizerHostView:(id)arg2 locationManager:(id)arg3 showsAttribution:(_Bool)arg4 showsAppleLogo:(_Bool)arg5 allowsAntialiasing:(_Bool)arg6;	// IMP=0x00000000000192e9
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;	// IMP=0x000000000001913f
@property(nonatomic, getter=_useBalloonCalloutsForLabels, setter=_setUseBalloonCalloutsForLabels:) _Bool useBalloonCalloutsForLabels;
@property(nonatomic, getter=_selectedFeatureID, setter=_setSelectedFeatureID:) unsigned long long selectedFeatureID;
@property(nonatomic, getter=isScaleEnabled) _Bool scaleEnabled;
- (void)locationManagerApprovalDidChange:(id)arg1;	// IMP=0x0000000000049c10
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;	// IMP=0x0000000000049bfe
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;	// IMP=0x0000000000049bf8
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;	// IMP=0x0000000000049bf2
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;	// IMP=0x0000000000049bec
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;	// IMP=0x0000000000049be4
- (void)locationManagerDidReset:(id)arg1;	// IMP=0x0000000000049ae6
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000000498fc
- (void)locationManagerUpdatedLocation:(id)arg1;	// IMP=0x00000000000495fb
- (void)_updateUserLocationViewWithLocation:(id)arg1 hadUserLocation:(_Bool)arg2;	// IMP=0x0000000000048fb4
@property(readonly, retain, nonatomic) MKAnnotationView *userLocationView;
- (void)_updateUserLocation:(id)arg1 routeMatch:(id)arg2;	// IMP=0x0000000000048cc7
- (void)_resumeUserLocationUpdates:(_Bool)arg1;	// IMP=0x0000000000048bde
- (void)_pauseUserLocationUpdates;	// IMP=0x0000000000048b78
@property(nonatomic) _Bool ignoreLocationUpdates;
- (void)removeUserLocation;	// IMP=0x0000000000048ac9
@property(retain, nonatomic) CLLocation *predictedUserLocation;
- (_Bool)_userLocationWithinVisibleMapBounds;	// IMP=0x000000000004892e
- (_Bool)_isPoint:(struct CGPoint)arg1 nearUserLocationView:(double)arg2;	// IMP=0x00000000000487f8
- (_Bool)_isUserLocationViewCentered:(double)arg1;	// IMP=0x00000000000487b8
- (_Bool)_isUserLocationInView:(_Bool)arg1;	// IMP=0x0000000000048669
- (void)_setClearUserLocationOnLocationReset:(_Bool)arg1;	// IMP=0x0000000000048643
- (_Bool)_clearUserLocationOnLocationReset;	// IMP=0x000000000004862e
- (void)_setLocationPropagationEnabled:(_Bool)arg1;	// IMP=0x0000000000048608
- (_Bool)_isLocationPropagationEnabled;	// IMP=0x00000000000485f0
- (void)_updateLocationConsole;	// IMP=0x00000000000485d3
- (void)setLocationConsoleEnabled:(_Bool)arg1;	// IMP=0x000000000004851b
- (_Bool)isLocationConsoleEnabled;	// IMP=0x0000000000048506
- (void)stopUpdatingUserLocation;	// IMP=0x000000000004824c
- (void)startUpdatingUserLocation;	// IMP=0x0000000000047fff
- (void)_locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;	// IMP=0x000000000004dc93
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;	// IMP=0x000000000004dc8d
- (void)locationManagerUpdatedHeading:(id)arg1;	// IMP=0x000000000004da8d
- (void)_updateCourseForMapViewHeading:(id)arg1;	// IMP=0x000000000004d8e0
- (void)_updateHeadingIndicatorAnimated:(_Bool)arg1;	// IMP=0x000000000004d7b6
- (void)_updateHeading:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000004d466
- (_Bool)_updateRotationSupported;	// IMP=0x000000000004d3bd
- (_Bool)_rotationPossible;	// IMP=0x000000000004d371
- (void)_stopTrackingHeading;	// IMP=0x000000000004d1db
- (void)_startTrackingHeading;	// IMP=0x000000000004d199
- (void)resumeUserHeadingUpdates;	// IMP=0x000000000004d188
- (void)pauseUserHeadingUpdates;	// IMP=0x000000000004d177
- (void)_setUseVehicleHeading:(_Bool)arg1;	// IMP=0x000000000004d0a9
- (_Bool)_useVehicleHeading;	// IMP=0x000000000004d093
@property(nonatomic, getter=_showHeadingIndicator, setter=_setShowHeadingIndicator:) _Bool showHeadingIndicator;
- (void)_snapToNorthIfNecessary;	// IMP=0x0000000000067426
- (void)_updateCameraState;	// IMP=0x0000000000067409
- (void)_updateFromCamera:(id)arg1;	// IMP=0x00000000000673ef
- (void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000006719a
- (double)_animationDurationWhenSettingCameraBoundary:(id)arg1;	// IMP=0x000000000006702f
- (void)_setCameraBoundary:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000066db9
- (void)_setCameraZoomRange:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000066c0c
- (void)_setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x0000000000066b76
- (void)_setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;	// IMP=0x0000000000066aef
- (void)_setCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000006699b
- (void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000066900
- (CDUnknownBlockType)_vkTimingFunctionForUIViewAnimationCurve:(long long)arg1;	// IMP=0x0000000000066881
- (void)_setCamera:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000066732
- (void)_setCamera:(id)arg1 animated:(_Bool)arg2;	// IMP=0x000000000006671d
- (double)_cameraAltitudeClampedToZoomRange:(id)arg1;	// IMP=0x0000000000066600
- (double)_durationForCamera:(id)arg1;	// IMP=0x000000000006631a
- (void)_setCamera:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000006624d
- (void)_setCamera:(id)arg1;	// IMP=0x0000000000066239
- (id)_camera;	// IMP=0x0000000000066224
- (id)_selectedTransitLineIDs;	// IMP=0x0000000000067f89
- (_Bool)_hasSelectedTransitLines;	// IMP=0x0000000000067f17
- (void)_deselectTransitLineMarker;	// IMP=0x0000000000067eda
- (void)_selectTransitLineMarkerWithIdentifier:(id)arg1;	// IMP=0x0000000000067e8e
- (void)_selectTransitLineMarker:(id)arg1;	// IMP=0x0000000000067d9c
- (id)_transitLineMarkerForIdentifier:(id)arg1;	// IMP=0x0000000000067b6b
@property(readonly, nonatomic, getter=_transitLineMarkersInCurrentViewport) NSArray *transitLineMarkersInCurrentViewport;
- (void)_invalidateAllOverlayRendererColors;	// IMP=0x0000000000080289
- (id)vk_mapLayer;	// IMP=0x0000000000080274
- (CDStruct_02837cd9)overlayContainerVisibleMapRect:(id)arg1;	// IMP=0x0000000000080209
- (void)overlayContainerAddedDrawables:(id)arg1;	// IMP=0x000000000007ff8b
- (id)createDrawableForOverlay:(id)arg1;	// IMP=0x000000000007fccb
- (id)overlayContainer;	// IMP=0x000000000007fbdd
- (id)overlaysInLevel:(long long)arg1;	// IMP=0x0000000000080b21
@property(readonly, nonatomic) NSArray *overlays;
- (id)rendererForOverlay:(id)arg1;	// IMP=0x0000000000080a99
- (id)viewForOverlay:(id)arg1;	// IMP=0x0000000000080a2e
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;	// IMP=0x0000000000080985
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;	// IMP=0x00000000000808dc
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;	// IMP=0x0000000000080833
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;	// IMP=0x00000000000807ba
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000080728
- (void)removeOverlays:(id)arg1;	// IMP=0x00000000000806e2
- (void)removeOverlay:(id)arg1;	// IMP=0x000000000008069c
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;	// IMP=0x00000000000805fd
- (void)addOverlays:(id)arg1 level:(long long)arg2;	// IMP=0x000000000008056b
- (void)addOverlay:(id)arg1 level:(long long)arg2;	// IMP=0x00000000000804d9
- (void)addOverlays:(id)arg1;	// IMP=0x000000000008044d
- (void)addOverlay:(id)arg1;	// IMP=0x00000000000803c1
- (void)_performWhenSizedBlocks;	// IMP=0x00000000000a2e40
- (void)_addDependentAuxiliaryBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a2da0
- (void)_addDependentSetRegionBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a2cde
- (void)_addDependentSetRegionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a2cca
- (void)_addSetRegionBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a2b1e
- (void)_addSetRegionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a2b0a
- (void)_countUsageForRendererIfNeeded:(id)arg1;	// IMP=0x00000000000aa100
- (void)_countUsageOfTypeIfNeeded:(unsigned long long)arg1 forAnnotationView:(id)arg2 countedEventTypes:(id)arg3;	// IMP=0x00000000000a9e03
- (void)_countUsageForAnnotationViewsIfNeeded:(id)arg1;	// IMP=0x00000000000a99e8
- (void)_createOverlayRendererDictionaryIfNeeded;	// IMP=0x00000000000a9906
- (void)_createAnnotationViewSetIfNeeded;	// IMP=0x00000000000a9840
- (id)_transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000000158632
@property(readonly, nonatomic, getter=_detailedDescriptionDictionaryRepresentation) NSDictionary *detailedDescriptionDictionaryRepresentation;
@property(readonly, nonatomic, getter=_detailedDescription) NSString *detailedDescription;
@property(readonly, nonatomic, getter=_visibleTileSets) NSArray *visibleTileSets;
- (struct CGRect)gestureControllerSignificantViewFrame:(id)arg1;	// IMP=0x0000000000167e87
- (struct CGPoint)gestureController:(id)arg1 focusPointForPoint:(struct CGPoint)arg2 gestureKind:(long long)arg3;	// IMP=0x0000000000167d84
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;	// IMP=0x0000000000167c58
- (_Bool)gestureController:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000167b7c
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;	// IMP=0x000000000016782b
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;	// IMP=0x00000000001675dc
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(_Bool)arg2 tiltDirection:(long long)arg3;	// IMP=0x0000000000167363
- (void)gestureControllerWillStartTilting:(id)arg1;	// IMP=0x00000000001671e3
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x0000000000166e57
- (void)gestureControllerWillStartRotating:(id)arg1;	// IMP=0x0000000000166ca2
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;	// IMP=0x0000000000166a5a
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;	// IMP=0x00000000001668b8
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 type:(long long)arg3;	// IMP=0x000000000016663e
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000000166626
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 type:(long long)arg3 willDecelerate:(_Bool)arg4;	// IMP=0x00000000001663a7
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(_Bool)arg3;	// IMP=0x000000000016638c
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000000001661f4
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;	// IMP=0x0000000000165f78
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x0000000000165cd5
- (void)gestureControllerWillStartPanning:(id)arg1;	// IMP=0x0000000000165b48
- (void)gestureControllerDidStopUserInteraction:(id)arg1;	// IMP=0x0000000000165988
- (void)gestureControllerWillStartUserInteraction:(id)arg1;	// IMP=0x00000000001657f9
@property(readonly, nonatomic, getter=_isChangingRegionForGesture) _Bool changingRegionForGesture;
- (void)_handleSelectGestureToDeselect:(id)arg1;	// IMP=0x00000000001655c4
- (void)_handleSelectGestureToSelect:(id)arg1;	// IMP=0x0000000000165590
- (void)_handleLongPressGesture:(id)arg1;	// IMP=0x0000000000165094
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000164e56
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0000000000164dd5
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x0000000000164d72
- (void)_addDebugGesture;	// IMP=0x0000000000164c84
- (void)_configureGestureRecognizers:(id)arg1;	// IMP=0x0000000000164763
- (void)_updateChargingStationTexts;	// IMP=0x000000000017aaca
- (void)_setAlternateRouteContextAnnotationETAComparison:(unsigned char)arg1 forRoute:(id)arg2;	// IMP=0x000000000017a8d3
- (void)_setRouteContextAnnotationFocus:(_Bool)arg1 forRoute:(id)arg2;	// IMP=0x000000000017a870
- (void)_setRouteContextAnnotationText:(id)arg1 advisoryStyleAttributes:(id)arg2 forRoute:(id)arg3;	// IMP=0x000000000017a782
- (void)_setRouteContextAnnotationText:(id)arg1 tollCurrency:(unsigned char)arg2 forRoute:(id)arg3;	// IMP=0x000000000017a6b4
- (id)_routeInfoForRoute:(id)arg1;	// IMP=0x000000000017a45a
- (void)_clearRouteContext;	// IMP=0x000000000017a3d4
- (void)_setRouteContextInspectedSegmentIndex:(unsigned long long)arg1 inspectedStepIndex:(unsigned long long)arg2;	// IMP=0x000000000017a38c
- (void)_setRouteContext:(id)arg1;	// IMP=0x000000000017a2de
- (_Bool)_shouldUpdateSelectedRouteFromRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;	// IMP=0x0000000000179ebf
- (void)_setRouteContextForRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;	// IMP=0x0000000000179def
- (void)_setRouteContextForRoute:(id)arg1;	// IMP=0x0000000000179d06
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000001cd41f
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000001cd370
- (_Bool)_pressEnded:(id)arg1;	// IMP=0x00000000001cd2d5
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000001cd1d2
- (void)zoomControlPlusReleased:(id)arg1;	// IMP=0x00000000001cd1c0
- (void)zoomControlMinusReleased:(id)arg1;	// IMP=0x00000000001cd1ae
- (void)zoomControlPlusPressed:(id)arg1;	// IMP=0x00000000001cd197
- (void)zoomControlMinusPressed:(id)arg1;	// IMP=0x00000000001cd183
- (void)makeZoomButtonsIfNeeded;	// IMP=0x00000000001cd17d
- (void)setCustomOverrideInterfaceStyle:(long long)arg1;	// IMP=0x00000000001cd145
- (_Bool)_wantsFocusRing;	// IMP=0x00000000001cd13d
- (long long)_focusItemDeferralMode;	// IMP=0x00000000001cd132
- (_Bool)canBecomeFocused;	// IMP=0x00000000001cd0e9
- (id)_flattenedAnnotationsForAnnotationViews:(id)arg1 maxDisplayPriority:(float *)arg2;	// IMP=0x00000000002828e5
@property(nonatomic) __weak id <MKMapViewDelegate> delegate; // @dynamic delegate;
- (double)_distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromView:(id)arg3 withPrecision:(long long)arg4;	// IMP=0x000000000028e7fc
- (struct CGRect)_convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;	// IMP=0x000000000028e4a3
- (CDStruct_02837cd9)_convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;	// IMP=0x000000000028e1c5
- (CDStruct_b7cb895d)_convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;	// IMP=0x000000000028e165
- (struct CGRect)_convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;	// IMP=0x000000000028e0b9
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;	// IMP=0x000000000028dfee
- (struct CGPoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;	// IMP=0x000000000028df12
- (struct CLLocationCoordinate2D)_convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;	// IMP=0x000000000028de43
- (struct CGPoint)_convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;	// IMP=0x000000000028dd4e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

