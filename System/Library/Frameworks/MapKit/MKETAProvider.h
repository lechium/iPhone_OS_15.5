//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MapKit/MKLocationManagerObserver-Protocol.h>
#import <MapKit/MKQuickRouteConfigurableView-Protocol.h>
#import <MapKit/MKQuickRouteManagerDelegate-Protocol.h>
#import <MapKit/MKQuickRouteTransportTypeFinding-Protocol.h>

@class CLLocation, GEOAutomobileOptions, GEOCyclingOptions, GEOTransitOptions, MKMapItem, NSHashTable, NSLock, NSNumber, NSString, NSTimer, _MKQuickRouteManager;
@protocol GEOTransitLineItem, MKETAProviderDelegate, _MKPlaceItem;

@interface MKETAProvider : NSObject <MKLocationManagerObserver, MKQuickRouteManagerDelegate, MKQuickRouteConfigurableView, MKQuickRouteTransportTypeFinding>
{
    _MKQuickRouteManager *_quickRouteManager;	// 8 = 0x8
    NSNumber *_lastTransportTypeFound;	// 16 = 0x10
    MKMapItem *_nearestStationItem;	// 24 = 0x18
    _Bool _distanceOrETAIsSuppressed;	// 32 = 0x20
    _Bool _distanceOrETAWasFound;	// 33 = 0x21
    NSString *_distanceTextItem;	// 40 = 0x28
    NSString *_rawDistanceString;	// 48 = 0x30
    unsigned long long _etaTransportType;	// 56 = 0x38
    double _etaTravelTime;	// 64 = 0x40
    _Bool _active;	// 72 = 0x48
    _Bool _paused;	// 73 = 0x49
    _Bool _inactiveInBackground;	// 74 = 0x4a
    NSTimer *_refreshTimer;	// 80 = 0x50
    CLLocation *_currentLocation;	// 88 = 0x58
    id <MKETAProviderDelegate> _delegate;	// 96 = 0x60
    GEOAutomobileOptions *_automobileOptions;	// 104 = 0x68
    GEOTransitOptions *_transitOptions;	// 112 = 0x70
    GEOCyclingOptions *_cyclingOptions;	// 120 = 0x78
    id <_MKPlaceItem> _placeItem;	// 128 = 0x80
    MKMapItem *_mapItem;	// 136 = 0x88
    id <GEOTransitLineItem> _lineItem;	// 144 = 0x90
    NSHashTable *_observers;	// 152 = 0x98
    NSLock *_observersLock;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x000000000023c377
@property(retain, nonatomic) NSLock *observersLock; // @synthesize observersLock=_observersLock;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) id <GEOTransitLineItem> lineItem; // @synthesize lineItem=_lineItem;
@property(readonly, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(readonly, nonatomic) id <_MKPlaceItem> placeItem; // @synthesize placeItem=_placeItem;
@property(retain, nonatomic) GEOCyclingOptions *cyclingOptions; // @synthesize cyclingOptions=_cyclingOptions;
@property(retain, nonatomic) GEOTransitOptions *transitOptions; // @synthesize transitOptions=_transitOptions;
@property(retain, nonatomic) GEOAutomobileOptions *automobileOptions; // @synthesize automobileOptions=_automobileOptions;
@property(nonatomic) __weak id <MKETAProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) CLLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
- (void)findDirectionsTypeForOriginCoordinate:(struct CLLocationCoordinate2D)arg1 destinationCoordinate:(struct CLLocationCoordinate2D)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000023c194
- (_Bool)quickRouteShouldOnlyUseAutomobile;	// IMP=0x000000000023c18c
- (_Bool)quickRouteShouldIncludeTransitWhenNotPreferredTransportType;	// IMP=0x000000000023c184
- (void)quickRouteManager:(id)arg1 didUpdateETA:(id)arg2 error:(id)arg3 animated:(_Bool)arg4;	// IMP=0x000000000023c0f7
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;	// IMP=0x000000000023c0f1
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;	// IMP=0x000000000023c0eb
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;	// IMP=0x000000000023c0e5
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;	// IMP=0x000000000023c0df
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;	// IMP=0x000000000023c0d7
- (void)locationManagerDidReset:(id)arg1;	// IMP=0x000000000023c0c1
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;	// IMP=0x000000000023c0bb
- (void)locationManagerUpdatedLocation:(id)arg1;	// IMP=0x000000000023bf6b
- (void)_updateETADisplayWithTransportType:(unsigned long long)arg1 travelTime:(double)arg2 distance:(double)arg3;	// IMP=0x000000000023bc1d
- (id)currentMapItem;	// IMP=0x000000000023bbcf
- (void)_configureETAForMapItem:(id)arg1;	// IMP=0x000000000023b9ec
- (void)_updateETAHandler:(id)arg1;	// IMP=0x000000000023b97a
- (_Bool)_shouldUpdateETAForMapView:(id)arg1;	// IMP=0x000000000023b8d5
- (void)_updateETA;	// IMP=0x000000000023b856
- (_Bool)_areDistanceAndETAInformationAvailable;	// IMP=0x000000000023b7bc
- (void)configureWithNearestStationMapItem:(id)arg1;	// IMP=0x000000000023b5a1
@property(readonly, nonatomic) NSNumber *transportTypePreferenceNumber;
@property(readonly, nonatomic) NSString *rawDistanceString;
@property(readonly, nonatomic) NSString *distanceString;
@property(readonly, nonatomic) double etaTravelTime;
@property(readonly, nonatomic) unsigned long long etaTransportType;
- (void)_notifyLocationAllObservers;	// IMP=0x000000000023b329
- (void)_notifyETAAllObservers;	// IMP=0x000000000023b142
- (void)removeObserver:(id)arg1;	// IMP=0x000000000023b070
- (void)addObserver:(id)arg1;	// IMP=0x000000000023af9e
- (void)_cancelTimer;	// IMP=0x000000000023aece
- (void)_startTimer;	// IMP=0x000000000023ae70
- (void)_refreshTimer;	// IMP=0x000000000023ae42
- (void)_willEnterForeground;	// IMP=0x000000000023ad62
- (void)_didEnterBackground;	// IMP=0x000000000023ad44
- (void)_locationManagerApprovalDidChange:(id)arg1;	// IMP=0x000000000023acbd
- (void)cancel;	// IMP=0x000000000023ac5b
- (void)pause;	// IMP=0x000000000023ac3d
- (void)restart;	// IMP=0x000000000023ac23
- (void)start;	// IMP=0x000000000023abbe
- (void)_commonInit;	// IMP=0x000000000023a9e4
- (void)dealloc;	// IMP=0x000000000023a9a6
- (id)initWithLineItem:(id)arg1;	// IMP=0x000000000023a928
- (id)initWithMapItem:(id)arg1;	// IMP=0x000000000023a8aa
- (id)initWithPlaceItem:(id)arg1;	// IMP=0x000000000023a82f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

