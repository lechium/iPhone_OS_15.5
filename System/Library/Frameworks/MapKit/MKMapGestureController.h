//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MapKit/MKVariableDelayTapRecognizerDelegate-Protocol.h>
#import <MapKit/UIGestureRecognizerDelegate-Protocol.h>
#import <MapKit/_MKUserInteractionGestureRecognizerTouchObserver-Protocol.h>

@class MKBasicMapView, MKCompassView, MKRotationFilter, MKScaleView, MKTiltGestureRecognizer, MKVariableDelayTapRecognizer, NSString, UIGestureRecognizer, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITraitCollection, VKCompoundAnimation, VKDynamicAnimation, VKTimedAnimation, _MKConditionalPanRotationGestureRecognizer, _MKConditionalPanTiltGestureRecognizer, _MKConditionalPanZoomGestureRecognizer, _MKDirectionalArrowRecognizer, _MKOneHandedZoomGestureRecognizer, _MKUserInteractionGestureRecognizer, _MKZoomingGestureControlConfiguration, _UIInterruptScrollDecelerationGestureRecognizer;
@protocol MKMapGestureControllerDelegate;

__attribute__((visibility("hidden")))
@interface MKMapGestureController : NSObject <MKVariableDelayTapRecognizerDelegate, _MKUserInteractionGestureRecognizerTouchObserver, UIGestureRecognizerDelegate>
{
    MKBasicMapView *_mapView;	// 8 = 0x8
    id <MKMapGestureControllerDelegate> _delegate;	// 16 = 0x10
    MKScaleView *_scaleView;	// 24 = 0x18
    MKCompassView *_compassView;	// 32 = 0x20
    MKRotationFilter *_rotationFilter;	// 40 = 0x28
    _Bool _rotationSnappingEnabled;	// 48 = 0x30
    MKVariableDelayTapRecognizer *_doubleTapGestureRecognizer;	// 56 = 0x38
    UITapGestureRecognizer *_twoFingerTapGestureRecognizer;	// 64 = 0x40
    UILongPressGestureRecognizer *_twoFingerLongPressGestureRecognizer;	// 72 = 0x48
    UIPinchGestureRecognizer *_pinchGestureRecognizer;	// 80 = 0x50
    UIPanGestureRecognizer *_panGestureRecognizer;	// 88 = 0x58
    _MKOneHandedZoomGestureRecognizer *_oneHandedZoomGestureRecognizer;	// 96 = 0x60
    _MKZoomingGestureControlConfiguration *_zoomConfiguration;	// 104 = 0x68
    struct CGPoint _panRotateStartPoint;	// 112 = 0x70
    struct CGPoint _panZoomStartPoint;	// 128 = 0x80
    UIPanGestureRecognizer *_scaleDragGestureRecognizer;	// 144 = 0x90
    _MKConditionalPanRotationGestureRecognizer *_conditionalPanRotationGestureRecognizer;	// 152 = 0x98
    _MKConditionalPanZoomGestureRecognizer *_conditionalPanZoomGestureRecognizer;	// 160 = 0xa0
    _MKConditionalPanTiltGestureRecognizer *_conditionalPanTiltGestureRecognizer;	// 168 = 0xa8
    _UIInterruptScrollDecelerationGestureRecognizer *_gestureInterruptionRecognizer;	// 176 = 0xb0
    _MKDirectionalArrowRecognizer *_activeArrowGestureRecognizer;	// 184 = 0xb8
    _MKDirectionalArrowRecognizer *_arrowZoomGestureRecognizer;	// 192 = 0xc0
    _MKDirectionalArrowRecognizer *_arrowRotateGestureRecognizer;	// 200 = 0xc8
    _MKDirectionalArrowRecognizer *_arrowPanGestureRecognizer;	// 208 = 0xd0
    VKTimedAnimation *_currentArrowAnimation;	// 216 = 0xd8
    double _arrowZoomSpeed;	// 224 = 0xe0
    double _arrowZoomStartTimestamp;	// 232 = 0xe8
    double _pinchFactorAverageInGesture;	// 240 = 0xf0
    double _lastPinchUpdateTimestamp;	// 248 = 0xf8
    double _lastScale;	// 256 = 0x100
    VKDynamicAnimation *_pinchDecelerationAnimation;	// 264 = 0x108
    VKCompoundAnimation *_panDecelerationAnimationGroup;	// 272 = 0x110
    long long _gestureCount;	// 280 = 0x118
    _Bool _panWithMomentum;	// 288 = 0x120
    _MKUserInteractionGestureRecognizer *_touchGestureRecognizer;	// 296 = 0x128
    UIRotationGestureRecognizer *_rotationGestureRecognizer;	// 304 = 0x130
    VKDynamicAnimation *_rotationDecelerationAnimation;	// 312 = 0x138
    MKTiltGestureRecognizer *_tiltGestureRecognizer;	// 320 = 0x140
    VKDynamicAnimation *_tiltDecelerationAnimation;	// 328 = 0x148
    _Bool _didStartLongPress;	// 336 = 0x150
    _Bool _isPanning;	// 337 = 0x151
    _Bool _isPinching;	// 338 = 0x152
    UITraitCollection *_traitCollection;	// 344 = 0x158
    double _lastZoomPanTranslation;	// 352 = 0x160
    struct CGPoint _scrollTranslation;	// 360 = 0x168
    struct CGPoint _lastArrowScrollTranslationDelta;	// 376 = 0x178
    _Bool _isFullRotatingFromArrows;	// 392 = 0x188
    double _lastRotationInGestureDelta;	// 400 = 0x190
    double _lastRotation;	// 408 = 0x198
}

- (void).cxx_destruct;	// IMP=0x00000000000d55a0
@property(nonatomic) _Bool rotationSnappingEnabled; // @synthesize rotationSnappingEnabled=_rotationSnappingEnabled;
@property(nonatomic) _Bool panWithMomentum; // @synthesize panWithMomentum=_panWithMomentum;
@property(retain, nonatomic) MKRotationFilter *rotationFilter; // @synthesize rotationFilter=_rotationFilter;
@property(retain, nonatomic) MKCompassView *compassView; // @synthesize compassView=_compassView;
@property(retain, nonatomic) MKScaleView *scaleView; // @synthesize scaleView=_scaleView;
@property(readonly, nonatomic) MKBasicMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <MKMapGestureControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIRotationGestureRecognizer *rotationGestureRecognizer; // @synthesize rotationGestureRecognizer=_rotationGestureRecognizer;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(readonly, nonatomic) UILongPressGestureRecognizer *twoFingerLongPressGestureRecognizer; // @synthesize twoFingerLongPressGestureRecognizer=_twoFingerLongPressGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *twoFingerTapGestureRecognizer; // @synthesize twoFingerTapGestureRecognizer=_twoFingerTapGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000000000d528b
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000000000d50d8
- (_Bool)tiltGestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000000d4f69
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000000d4eb3
- (void)handleArrowZoom:(id)arg1;	// IMP=0x00000000000d3ffe
- (void)handleArrowRotate:(id)arg1;	// IMP=0x00000000000d30d7
- (void)handleArrowPan:(id)arg1;	// IMP=0x00000000000d24a3
- (void)cancelZoomInOrOut;	// IMP=0x00000000000d2456
- (void)zoomOut;	// IMP=0x00000000000d2383
- (void)zoomIn;	// IMP=0x00000000000d22b0
- (_Bool)keyUp:(id)arg1;	// IMP=0x00000000000d21e8
- (_Bool)keyDown:(id)arg1;	// IMP=0x00000000000d1f52
- (void)_handleInterrupt:(id)arg1;	// IMP=0x00000000000d1ea9
- (void)_handleZoomPan:(id)arg1;	// IMP=0x00000000000d19b2
- (void)_handleRotationPan:(id)arg1;	// IMP=0x00000000000d17ad
- (void)handleZoomArrowMask:(long long)arg1 speed:(double)arg2;	// IMP=0x00000000000d1643
- (double)variableDelayTapRecognizer:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;	// IMP=0x00000000000d153e
- (void)gestureRecognizerTouchesCanceled:(id)arg1;	// IMP=0x00000000000d152c
- (void)gestureRecognizerTouchesEnded:(id)arg1;	// IMP=0x00000000000d151a
- (void)gestureRecognizerTouchesBegan:(id)arg1;	// IMP=0x00000000000d1508
- (void)handleTouch:(id)arg1;	// IMP=0x00000000000d1502
- (void)handlePan:(id)arg1;	// IMP=0x00000000000d0932
- (struct CGPoint)_snapPointToDevicePixels:(struct CGPoint)arg1;	// IMP=0x00000000000d07e5
- (void)_updateZoomGestureForState:(long long)arg1 focusPoint:(struct CGPoint)arg2 scale:(double)arg3 velocity:(double)arg4 gestureType:(long long)arg5 configuration:(id)arg6;	// IMP=0x00000000000cfffa
- (void)handlePanZoom:(id)arg1;	// IMP=0x00000000000cfdce
- (void)handlePinch:(id)arg1;	// IMP=0x00000000000cfbca
- (void)handleTwoFingerLongPress:(id)arg1;	// IMP=0x00000000000cfacd
- (void)handleTwoFingerTap:(id)arg1;	// IMP=0x00000000000cf8aa
- (void)handleDoubleTap:(id)arg1;	// IMP=0x00000000000cf652
- (void)_updateRotationGestureForState:(long long)arg1 focusPoint:(struct CGPoint)arg2 rotation:(double)arg3 velocity:(double)arg4;	// IMP=0x00000000000cee5f
- (void)handleRotation:(id)arg1;	// IMP=0x00000000000cec49
- (void)handleTilt:(id)arg1;	// IMP=0x00000000000cec37
- (void)_handleStandardTilt:(id)arg1;	// IMP=0x00000000000ce251
- (void)_setTraitCollection:(id)arg1;	// IMP=0x00000000000ce14a
- (void)clearGestureRecognizersInFlight;	// IMP=0x00000000000ce0d8
- (void)_clearGesture:(id)arg1;	// IMP=0x00000000000ce063
- (void)stopUserInteractionFromExternalGesture;	// IMP=0x00000000000ce051
- (void)startUserInteractionFromExternalGesture;	// IMP=0x00000000000ce03f
- (void)endGesturing;	// IMP=0x00000000000cdfd0
- (void)beginGesturing;	// IMP=0x00000000000cdf1b
- (void)stopDynamicAnimations;	// IMP=0x00000000000cddfa
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
- (void)dealloc;	// IMP=0x00000000000cdc4c
@property(nonatomic, getter=isTiltEnabled) _Bool tiltEnabled;
@property(nonatomic, getter=isRotationEnabled) _Bool rotationEnabled;
- (void)_setOneHandedZoomGestureConfiguration:(id)arg1;	// IMP=0x00000000000cdb78
@property(readonly, nonatomic) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2;	// IMP=0x00000000000cdb55
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 doubleTapTargetView:(id)arg3;	// IMP=0x00000000000cd0e0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

