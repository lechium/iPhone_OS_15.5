//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSData, NSError, NSString, NSUUID, OTAccountSettingsX, OTCustodianRecoveryKey, OTInheritanceKey, OTJoiningConfiguration, OTOperationConfiguration, OTSecureElementPeerIdentity, SFECKeyPair;

@protocol OTControlProtocol
- (void)tlkRecoverabilityForEscrowRecordData:(NSString *)arg1 contextID:(NSString *)arg2 recordData:(NSData *)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)waitForPriorityViewKeychainDataRecovery:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)persistAccountSettings:(NSString *)arg1 context:(NSString *)arg2 setting:(OTAccountSettingsX *)arg3 reply:(void (^)(NSError *))arg4;
- (void)fetchAccountWideSettings:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(OTAccountSettingsX *, NSError *))arg3;
- (void)fetchAccountSettings:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(OTAccountSettingsX *, NSError *))arg3;
- (void)fetchTrustedSecureElementIdentities:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(OTCurrentSecureElementIdentities *, NSError *))arg3;
- (void)removeLocalSecureElementIdentityPeerID:(NSString *)arg1 contextID:(NSString *)arg2 secureElementIdentityPeerID:(NSData *)arg3 reply:(void (^)(NSError *))arg4;
- (void)setLocalSecureElementIdentity:(NSString *)arg1 contextID:(NSString *)arg2 secureElementIdentity:(OTSecureElementPeerIdentity *)arg3 reply:(void (^)(NSError *))arg4;
- (void)resetAccountCDPContents:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)fetchUserControllableViewsSyncStatus:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(_Bool, NSError *))arg3;
- (void)setUserControllableViewsSyncStatus:(NSString *)arg1 contextID:(NSString *)arg2 enabled:(_Bool)arg3 reply:(void (^)(_Bool, NSError *))arg4;
- (void)invalidateEscrowCache:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)fetchEscrowRecords:(NSString *)arg1 contextID:(NSString *)arg2 forceFetch:(_Bool)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)getCDPStatus:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(long long, NSError *))arg3;
- (void)setCDPEnabled:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)refetchCKKSPolicy:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)tapToRadar:(NSString *)arg1 description:(NSString *)arg2 radar:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)postCDPFollowupResult:(_Bool)arg1 type:(NSString *)arg2 error:(NSError *)arg3 containerName:(NSString *)arg4 contextName:(NSString *)arg5 reply:(void (^)(NSError *))arg6;
- (void)waitForOctagonUpgrade:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)healthCheck:(NSString *)arg1 context:(NSString *)arg2 skipRateLimitingCheck:(_Bool)arg3 reply:(void (^)(NSError *))arg4;
- (void)removeInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(NSError *))arg4;
- (void)preflightJoinWithInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 inheritanceKey:(OTInheritanceKey *)arg3 reply:(void (^)(NSError *))arg4;
- (void)joinWithInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 inheritanceKey:(OTInheritanceKey *)arg3 reply:(void (^)(NSError *))arg4;
- (void)storeInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 ik:(OTInheritanceKey *)arg3 reply:(void (^)(NSError *))arg4;
- (void)generateInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(OTInheritanceKey *, NSError *))arg4;
- (void)createInheritanceKey:(NSString *)arg1 contextID:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(OTInheritanceKey *, NSError *))arg4;
- (void)removeCustodianRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(NSError *))arg4;
- (void)preflightJoinWithCustodianRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 custodianRecoveryKey:(OTCustodianRecoveryKey *)arg3 reply:(void (^)(NSError *))arg4;
- (void)joinWithCustodianRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 custodianRecoveryKey:(OTCustodianRecoveryKey *)arg3 reply:(void (^)(NSError *))arg4;
- (void)createCustodianRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(OTCustodianRecoveryKey *, NSError *))arg4;
- (void)joinWithRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 recoveryKey:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)createRecoveryKey:(NSString *)arg1 contextID:(NSString *)arg2 recoveryKey:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)fetchEscrowContents:(NSString *)arg1 contextID:(NSString *)arg2 reply:(void (^)(NSData *, NSString *, NSData *, NSError *))arg3;
- (void)restore:(NSString *)arg1 contextID:(NSString *)arg2 bottleSalt:(NSString *)arg3 entropy:(NSData *)arg4 bottleID:(NSString *)arg5 reply:(void (^)(NSError *))arg6;
- (void)fetchAllViableBottles:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSArray *, NSArray *, NSError *))arg3;
- (void)peerDeviceNamesByPeerID:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)removeFriendsInClique:(NSString *)arg1 context:(NSString *)arg2 peerIDs:(NSArray *)arg3 reply:(void (^)(NSError *))arg4;
- (void)leaveClique:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)establish:(NSString *)arg1 context:(NSString *)arg2 altDSID:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)resetAndEstablish:(NSString *)arg1 context:(NSString *)arg2 altDSID:(NSString *)arg3 resetReason:(long long)arg4 reply:(void (^)(NSError *))arg5;
- (void)startOctagonStateMachine:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)fetchTrustStatus:(NSString *)arg1 context:(NSString *)arg2 configuration:(OTOperationConfiguration *)arg3 reply:(void (^)(long long, NSString *, NSNumber *, _Bool, NSError *))arg4;
- (void)fetchCliqueStatus:(NSString *)arg1 context:(NSString *)arg2 configuration:(OTOperationConfiguration *)arg3 reply:(void (^)(long long, NSError *))arg4;
- (void)fetchEgoPeerID:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSString *, NSError *))arg3;
- (void)status:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)scrubBottledPeer:(NSString *)arg1 bottleID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)launchBottledPeer:(NSString *)arg1 bottleID:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)preflightBottledPeer:(NSString *)arg1 dsid:(NSString *)arg2 reply:(void (^)(NSData *, NSString *, NSData *, NSError *))arg3;
- (void)rpcJoinWithConfiguration:(OTJoiningConfiguration *)arg1 vouchData:(NSData *)arg2 vouchSig:(NSData *)arg3 reply:(void (^)(NSError *))arg4;
- (void)rpcVoucherWithConfiguration:(OTJoiningConfiguration *)arg1 peerID:(NSString *)arg2 permanentInfo:(NSData *)arg3 permanentInfoSig:(NSData *)arg4 stableInfo:(NSData *)arg5 stableInfoSig:(NSData *)arg6 reply:(void (^)(NSData *, NSData *, NSError *))arg7;
- (void)rpcPrepareIdentityAsApplicantWithConfiguration:(OTJoiningConfiguration *)arg1 reply:(void (^)(NSString *, NSData *, NSData *, NSData *, NSData *, NSError *))arg2;
- (void)rpcEpochWithConfiguration:(OTJoiningConfiguration *)arg1 reply:(void (^)(unsigned long long, NSError *))arg2;
- (void)handleIdentityChangeForSigningKey:(SFECKeyPair *)arg1 ForEncryptionKey:(SFECKeyPair *)arg2 ForPeerID:(NSString *)arg3 reply:(void (^)(_Bool, NSError *))arg4;
- (void)reset:(void (^)(_Bool, NSError *))arg1;
- (void)notifyIDMSTrustLevelChangeForContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)signOut:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)signIn:(NSString *)arg1 container:(NSString *)arg2 context:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)listOfEligibleBottledPeerRecords:(void (^)(NSArray *, NSError *))arg1;
- (void)octagonSigningPublicKey:(void (^)(NSData *, NSError *))arg1;
- (void)octagonEncryptionPublicKey:(void (^)(NSData *, NSError *))arg1;
- (void)restore:(NSString *)arg1 dsid:(NSString *)arg2 secret:(NSData *)arg3 escrowRecordID:(NSString *)arg4 reply:(void (^)(NSData *, NSData *, NSError *))arg5;
@end

