//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <ClassKit/NSCopying-Protocol.h>
#import <ClassKit/NSSecureCoding-Protocol.h>

@class CLSAdminRequestor, NSArray, NSString;

@interface CLSSearchSpecification : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _includeUnsearchablePersons;	// 8 = 0x8
    unsigned long long _options;	// 16 = 0x10
    unsigned long long _behaviors;	// 24 = 0x18
    NSString *_searchString;	// 32 = 0x20
    NSArray *_searchTokens;	// 40 = 0x28
    unsigned long long _compareOptions;	// 48 = 0x30
    CLSAdminRequestor *_adminRequestor;	// 56 = 0x38
    NSArray *_classSortDescriptors;	// 64 = 0x40
    NSArray *_classLocationIDs;	// 72 = 0x48
    NSArray *_personSortDescriptors;	// 80 = 0x50
    NSArray *_personLocationIDs;	// 88 = 0x58
    NSString *_requiredRoleID;	// 96 = 0x60
    long long _requiredRoleType;	// 104 = 0x68
    NSString *_requiredPrivilege;	// 112 = 0x70
    NSArray *_requiredPrivilegeLocationIDs;	// 120 = 0x78
    NSString *_prohibitedPrivilege;	// 128 = 0x80
    NSArray *_prohibitedPrivilegeLocationIDs;	// 136 = 0x88
    NSArray *_locationSortDescriptors;	// 144 = 0x90
    NSArray *_locationPersonIDs;	// 152 = 0x98
    long long _requiredLocationRoleType;	// 160 = 0xa0
    NSString *_requiredLocationPrivilege;	// 168 = 0xa8
    NSArray *_requiredLocationPersonIDs;	// 176 = 0xb0
    NSString *_prohibitedLocationPrivilege;	// 184 = 0xb8
    NSArray *_prohibitedLocationPersonIDs;	// 192 = 0xc0
    NSArray *_organizationSortDescriptors;	// 200 = 0xc8
    NSString *_requiredOrganizationEmailDomain;	// 208 = 0xd0
    NSArray *_requiredClassMemberClassIDs;	// 216 = 0xd8
    unsigned long long _requiredClassMemberRole;	// 224 = 0xe0
}

+ (id)newlineAnchoredPredicateValueForToken:(id)arg1;	// IMP=0x000000000007b24c
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000007b244
- (void).cxx_destruct;	// IMP=0x000000000007c401
@property unsigned long long requiredClassMemberRole; // @synthesize requiredClassMemberRole=_requiredClassMemberRole;
@property(copy) NSArray *requiredClassMemberClassIDs; // @synthesize requiredClassMemberClassIDs=_requiredClassMemberClassIDs;
@property(copy) NSString *requiredOrganizationEmailDomain; // @synthesize requiredOrganizationEmailDomain=_requiredOrganizationEmailDomain;
@property(copy) NSArray *organizationSortDescriptors; // @synthesize organizationSortDescriptors=_organizationSortDescriptors;
@property(copy) NSArray *prohibitedLocationPersonIDs; // @synthesize prohibitedLocationPersonIDs=_prohibitedLocationPersonIDs;
@property(copy) NSString *prohibitedLocationPrivilege; // @synthesize prohibitedLocationPrivilege=_prohibitedLocationPrivilege;
@property(copy) NSArray *requiredLocationPersonIDs; // @synthesize requiredLocationPersonIDs=_requiredLocationPersonIDs;
@property(copy) NSString *requiredLocationPrivilege; // @synthesize requiredLocationPrivilege=_requiredLocationPrivilege;
@property long long requiredLocationRoleType; // @synthesize requiredLocationRoleType=_requiredLocationRoleType;
@property(copy) NSArray *locationPersonIDs; // @synthesize locationPersonIDs=_locationPersonIDs;
@property(copy) NSArray *locationSortDescriptors; // @synthesize locationSortDescriptors=_locationSortDescriptors;
@property(copy) NSArray *prohibitedPrivilegeLocationIDs; // @synthesize prohibitedPrivilegeLocationIDs=_prohibitedPrivilegeLocationIDs;
@property(copy) NSString *prohibitedPrivilege; // @synthesize prohibitedPrivilege=_prohibitedPrivilege;
@property(copy) NSArray *requiredPrivilegeLocationIDs; // @synthesize requiredPrivilegeLocationIDs=_requiredPrivilegeLocationIDs;
@property(copy) NSString *requiredPrivilege; // @synthesize requiredPrivilege=_requiredPrivilege;
@property long long requiredRoleType; // @synthesize requiredRoleType=_requiredRoleType;
@property(copy) NSString *requiredRoleID; // @synthesize requiredRoleID=_requiredRoleID;
@property(copy) NSArray *personLocationIDs; // @synthesize personLocationIDs=_personLocationIDs;
@property(copy) NSArray *personSortDescriptors; // @synthesize personSortDescriptors=_personSortDescriptors;
@property _Bool includeUnsearchablePersons; // @synthesize includeUnsearchablePersons=_includeUnsearchablePersons;
@property(copy, nonatomic) NSArray *classLocationIDs; // @synthesize classLocationIDs=_classLocationIDs;
@property(copy) NSArray *classSortDescriptors; // @synthesize classSortDescriptors=_classSortDescriptors;
@property(copy) CLSAdminRequestor *adminRequestor; // @synthesize adminRequestor=_adminRequestor;
@property(nonatomic) unsigned long long compareOptions; // @synthesize compareOptions=_compareOptions;
@property(copy, nonatomic) NSArray *searchTokens; // @synthesize searchTokens=_searchTokens;
@property(copy) NSString *searchString; // @synthesize searchString=_searchString;
@property(nonatomic) unsigned long long behaviors; // @synthesize behaviors=_behaviors;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
- (void)sanitizeSpecForABMMAID;	// IMP=0x000000000007c092
- (_Bool)isClassMemberSearch;	// IMP=0x000000000007c056
- (_Bool)isOrganizationSearch;	// IMP=0x000000000007c048
- (_Bool)isLocationSearch;	// IMP=0x000000000007c03a
- (_Bool)isClassSearch;	// IMP=0x000000000007c02d
- (_Bool)isPersonSearch;	// IMP=0x000000000007c00e
- (_Bool)hasLocationConstraints;	// IMP=0x000000000007bfd7
- (_Bool)hasPersonConstraints;	// IMP=0x000000000007bf95
- (_Bool)canUsePersonPredicate;	// IMP=0x000000000007bf76
- (_Bool)canUseClassPredicate;	// IMP=0x000000000007bf69
- (_Bool)requiresDashboardEntitlement;	// IMP=0x000000000007bebd
- (_Bool)isValid:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000000007bdcd
- (id)predicateWithLocationIDs:(id)arg1;	// IMP=0x000000000007bb98
- (id)predicate;	// IMP=0x000000000007ba52
- (id)predicateForClasses;	// IMP=0x000000000007b981
- (id)predicateForPersonsWithPersonIDs:(id)arg1;	// IMP=0x000000000007b6be
- (id)predicateForPersons;	// IMP=0x000000000007b4c3
- (id)predicateUsingSubPredicateBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000007b299
- (id)dictionaryRepresentation;	// IMP=0x000000000007aaa7
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000007a813
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000007a25e
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000079bbc
- (id)initWithOptions:(unsigned long long)arg1 behaviors:(unsigned long long)arg2 searchString:(id)arg3 requestor:(id)arg4;	// IMP=0x0000000000079b46
- (id)initWithOptions:(unsigned long long)arg1 behaviors:(unsigned long long)arg2 searchString:(id)arg3;	// IMP=0x0000000000079acd
- (id)initWithOptions:(unsigned long long)arg1 behaviors:(unsigned long long)arg2;	// IMP=0x0000000000079a65
- (void)prohibitPrivilege:(id)arg1 atLocationIDs:(id)arg2;	// IMP=0x000000000007c774
- (void)requirePrivilege:(id)arg1 atLocationIDs:(id)arg2;	// IMP=0x000000000007c6e4
- (void)requireRole:(id)arg1 atLocationIDs:(id)arg2;	// IMP=0x000000000007c62b
- (void)requireRoleType:(long long)arg1 atLocationIDs:(id)arg2;	// IMP=0x000000000007c5bc
- (id)predicateForPersonsWithObjectIDs:(id)arg1;	// IMP=0x000000000007c51b
- (void)restrictToClassesAtLocationIDs:(id)arg1;	// IMP=0x000000000007c80d
- (void)prohibitPrivilege:(id)arg1 onPersonIDs:(id)arg2;	// IMP=0x000000000007c95b
- (void)requirePrivilege:(id)arg1 onPersonIDs:(id)arg2;	// IMP=0x000000000007c8c2
- (void)requireRoleType:(long long)arg1 onPersonIDs:(id)arg2;	// IMP=0x000000000007c85f
- (void)restrictToOrganizationsMatchingEmailDomain:(id)arg1;	// IMP=0x000000000007c9f4
- (void)requireClassMemberRole:(unsigned long long)arg1 forClassIDs:(id)arg2;	// IMP=0x000000000007ca49

@end

