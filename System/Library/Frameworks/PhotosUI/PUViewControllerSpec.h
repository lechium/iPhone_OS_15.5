//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable, PUViewControllerSpecChange, UITraitCollection;

@interface PUViewControllerSpec : NSObject
{
    _Bool _presentedForSecondScreen;	// 8 = 0x8
    _Bool _prefersCompactLayoutForSplitScreen;	// 9 = 0x9
    _Bool __needsUpdateLayoutStyle;	// 10 = 0xa
    UITraitCollection *_traitCollection;	// 16 = 0x10
    NSHashTable *__changeObservers;	// 24 = 0x18
    long long __changeCount;	// 32 = 0x20
    long long _currentLayoutStyle;	// 40 = 0x28
    PUViewControllerSpecChange *_currentChange;	// 48 = 0x30
    struct CGSize _layoutReferenceSize;	// 56 = 0x38
    struct CGSize _secondScreenSize;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x000000000048cc8e
@property(readonly, nonatomic) PUViewControllerSpecChange *currentChange; // @synthesize currentChange=_currentChange;
@property(readonly, nonatomic) long long currentLayoutStyle; // @synthesize currentLayoutStyle=_currentLayoutStyle;
@property(nonatomic, setter=_setNeedsUpdateLayoutStyle:) _Bool _needsUpdateLayoutStyle; // @synthesize _needsUpdateLayoutStyle=__needsUpdateLayoutStyle;
@property(nonatomic, setter=_setChangeCount:) long long _changeCount; // @synthesize _changeCount=__changeCount;
@property(readonly, nonatomic) NSHashTable *_changeObservers; // @synthesize _changeObservers=__changeObservers;
@property(nonatomic) _Bool prefersCompactLayoutForSplitScreen; // @synthesize prefersCompactLayoutForSplitScreen=_prefersCompactLayoutForSplitScreen;
@property(nonatomic) struct CGSize secondScreenSize; // @synthesize secondScreenSize=_secondScreenSize;
@property(nonatomic, getter=isPresentedForSecondScreen) _Bool presentedForSecondScreen; // @synthesize presentedForSecondScreen=_presentedForSecondScreen;
@property(nonatomic) struct CGSize layoutReferenceSize; // @synthesize layoutReferenceSize=_layoutReferenceSize;
@property(retain, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
- (void)_setCurrentLayoutStyle:(long long)arg1;	// IMP=0x000000000048cba7
- (void)_setCurrentChange:(id)arg1;	// IMP=0x000000000048cb96
- (void)_updateCurrentLayoutStyleIfNeeded;	// IMP=0x000000000048c986
- (struct CGSize)_portraitOrientedSizeForSize:(struct CGSize)arg1;	// IMP=0x000000000048c96c
- (void)_invalidateLayoutStyle;	// IMP=0x000000000048c955
- (void)_publishChange:(id)arg1;	// IMP=0x000000000048c7b8
- (void)_didChange;	// IMP=0x000000000048c71f
- (void)_willChange;	// IMP=0x000000000048c62e
- (void)updateIfNeeded;	// IMP=0x000000000048c61c
- (id)newSpecChange;	// IMP=0x000000000048c60b
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (void)assertInsideChangesBlock;	// IMP=0x000000000048c27b
- (void)unregisterChangeObserver:(id)arg1;	// IMP=0x000000000048c209
- (void)registerChangeObserver:(id)arg1;	// IMP=0x000000000048c197
- (void)performChanges:(CDUnknownBlockType)arg1;	// IMP=0x000000000048c0cb
- (id)init;	// IMP=0x000000000048c065

@end

