//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreBluetooth/CBActivatable-Protocol.h>
#import <CoreBluetooth/CBCentralManagerDelegate-Protocol.h>
#import <CoreBluetooth/CBErrorReporting-Protocol.h>
#import <CoreBluetooth/CBInterruptable-Protocol.h>
#import <CoreBluetooth/CBLabelable-Protocol.h>
#import <CoreBluetooth/CBPairable-Protocol.h>
#import <CoreBluetooth/CBPairingAgentDelegate-Protocol.h>
#import <CoreBluetooth/CBPeripheralDelegate-Protocol.h>
#import <CoreBluetooth/CBReadWriteRequestable-Protocol.h>
#import <CoreBluetooth/CBStateReporting-Protocol.h>
#import <CoreBluetooth/CBUseCaseable-Protocol.h>
#import <CoreBluetooth/CUReadWriteRequestable-Protocol.h>
#import <CoreBluetooth/CUXPCCodable-Protocol.h>

@class CBCentralManager, CBDevice, CBL2CAPChannel, CBPeripheral, CBReadRequest, CBServer, CBWriteRequest, NSArray, NSData, NSMutableArray, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_xpc_object;

@interface CBConnection : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate, CUReadWriteRequestable, CBPairingAgentDelegate, CUXPCCodable, CBActivatable, CBErrorReporting, CBInterruptable, CBLabelable, CBPairable, CBReadWriteRequestable, CBStateReporting, CBUseCaseable>
{
    _Bool _activateCalled;	// 8 = 0x8
    CDUnknownBlockType _activateCompletion;	// 16 = 0x10
    NSUUID *_blePeerUUID;	// 24 = 0x18
    CBCentralManager *_centralManager;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_connectTimeoutTimer;	// 40 = 0x28
    _Bool _guardConnected;	// 48 = 0x30
    _Bool _invalidateCalled;	// 49 = 0x31
    _Bool _invalidateDone;	// 50 = 0x32
    NSData *_pairingOOBData;	// 56 = 0x38
    CBPeripheral *_peripheral;	// 64 = 0x40
    NSObject<OS_dispatch_source> *_readSource;	// 72 = 0x48
    unsigned char _readSuspended;	// 80 = 0x50
    CBReadRequest *_readRequestCurrent;	// 88 = 0x58
    NSMutableArray *_readRequests;	// 96 = 0x60
    int _socketFD;	// 104 = 0x68
    int _state;	// 108 = 0x6c
    NSObject<OS_dispatch_source> *_writeSource;	// 112 = 0x70
    unsigned char _writeSuspended;	// 120 = 0x78
    CBWriteRequest *_writeRequestCurrent;	// 128 = 0x80
    NSMutableArray *_writeRequests;	// 136 = 0x88
    struct LogCategory *_ucat;	// 144 = 0x90
    NSObject<OS_xpc_object> *_xpcCnx;	// 152 = 0x98
    unsigned short _blePSM;	// 160 = 0xa0
    int _useCase;	// 164 = 0xa4
    unsigned int _connectionFlags;	// 168 = 0xa8
    unsigned int _serviceFlags;	// 172 = 0xac
    unsigned int _clientID;	// 176 = 0xb0
    unsigned int _internalFlags;	// 180 = 0xb4
    long long _bluetoothState;	// 184 = 0xb8
    CDUnknownBlockType _bluetoothStateChangedHandler;	// 192 = 0xc0
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 200 = 0xc8
    CDUnknownBlockType _errorHandler;	// 208 = 0xd0
    CDUnknownBlockType _interruptionHandler;	// 216 = 0xd8
    CDUnknownBlockType _invalidationHandler;	// 224 = 0xe0
    CDUnknownBlockType _pairingCompletedHandler;	// 232 = 0xe8
    CDUnknownBlockType _pairingPromptHandler;	// 240 = 0xf0
    NSString *_label;	// 248 = 0xf8
    NSArray *_useCaseClientIDs;	// 256 = 0x100
    long long _connectionLatency;	// 264 = 0x108
    double _connectTimeoutSeconds;	// 272 = 0x110
    CBDevice *_peerDevice;	// 280 = 0x118
    NSString *_clientBundleID;	// 288 = 0x120
    long long _clientUseCase;	// 296 = 0x128
    CBL2CAPChannel *_l2capChannel;	// 304 = 0x130
    CBServer *_server;	// 312 = 0x138
    CDUnknownBlockType _serverInvalidationHandler;	// 320 = 0x140
    CDUnknownBlockType _xpcForwardMessageReceiveHandler;	// 328 = 0x148
    NSObject<OS_xpc_object> *_xpcListenerEndpoint;	// 336 = 0x150
    CDUnknownBlockType _xpcSendEventHandler;	// 344 = 0x158
}

- (void).cxx_destruct;	// IMP=0x0000000000041020
@property(copy, nonatomic) CDUnknownBlockType xpcSendEventHandler; // @synthesize xpcSendEventHandler=_xpcSendEventHandler;
@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcListenerEndpoint; // @synthesize xpcListenerEndpoint=_xpcListenerEndpoint;
@property(copy, nonatomic) CDUnknownBlockType xpcForwardMessageReceiveHandler; // @synthesize xpcForwardMessageReceiveHandler=_xpcForwardMessageReceiveHandler;
@property(copy, nonatomic) CDUnknownBlockType serverInvalidationHandler; // @synthesize serverInvalidationHandler=_serverInvalidationHandler;
@property(retain, nonatomic) CBServer *server; // @synthesize server=_server;
@property(retain, nonatomic) CBL2CAPChannel *l2capChannel; // @synthesize l2capChannel=_l2capChannel;
@property(nonatomic) unsigned int internalFlags; // @synthesize internalFlags=_internalFlags;
@property(nonatomic) unsigned int clientID; // @synthesize clientID=_clientID;
@property(nonatomic) long long clientUseCase; // @synthesize clientUseCase=_clientUseCase;
@property(copy, nonatomic) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property(nonatomic) unsigned int serviceFlags; // @synthesize serviceFlags=_serviceFlags;
@property(retain, nonatomic) CBDevice *peerDevice; // @synthesize peerDevice=_peerDevice;
@property(nonatomic) double connectTimeoutSeconds; // @synthesize connectTimeoutSeconds=_connectTimeoutSeconds;
@property(nonatomic) long long connectionLatency; // @synthesize connectionLatency=_connectionLatency;
@property(nonatomic) unsigned int connectionFlags; // @synthesize connectionFlags=_connectionFlags;
@property(nonatomic) unsigned short blePSM; // @synthesize blePSM=_blePSM;
@property(copy, nonatomic) NSArray *useCaseClientIDs; // @synthesize useCaseClientIDs=_useCaseClientIDs;
@property(nonatomic) int useCase; // @synthesize useCase=_useCase;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) CDUnknownBlockType pairingPromptHandler; // @synthesize pairingPromptHandler=_pairingPromptHandler;
@property(copy, nonatomic) CDUnknownBlockType pairingCompletedHandler; // @synthesize pairingCompletedHandler=_pairingCompletedHandler;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) CDUnknownBlockType bluetoothStateChangedHandler; // @synthesize bluetoothStateChangedHandler=_bluetoothStateChangedHandler;
@property(readonly, nonatomic) long long bluetoothState; // @synthesize bluetoothState=_bluetoothState;
- (void)writeWithRequest:(id)arg1;	// IMP=0x0000000000040af0
- (void)readWithRequest:(id)arg1;	// IMP=0x0000000000040900
- (void)peripheral:(id)arg1 didOpenL2CAPChannel:(id)arg2 error:(id)arg3;	// IMP=0x0000000000040410
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;	// IMP=0x00000000000402a0
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;	// IMP=0x0000000000040010
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;	// IMP=0x000000000003fdc0
- (void)pairingAgent:(id)arg1 peerDidRequestPairing:(id)arg2 type:(long long)arg3 passkey:(id)arg4;	// IMP=0x000000000003f840
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;	// IMP=0x000000000003f5b0
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;	// IMP=0x000000000003f300
- (void)centralManagerDidUpdateState:(id)arg1;	// IMP=0x000000000003f190
- (void)_completeWriteRequest:(id)arg1 error:(id)arg2;	// IMP=0x000000000003f060
- (void)_abortWritesWithError:(id)arg1;	// IMP=0x000000000003ed50
- (_Bool)_prepareWriteRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000003e930
- (void)_processWrites;	// IMP=0x000000000003e500
- (void)writeEndOfDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003e3f0
- (void)writeWithCBWriteRequest:(id)arg1;	// IMP=0x000000000003e2a0
- (void)_completeReadRequest:(id)arg1 error:(id)arg2;	// IMP=0x000000000003e150
- (_Bool)_processReadStatus;	// IMP=0x000000000003dfe0
- (void)_abortReadsWithError:(id)arg1;	// IMP=0x000000000003dce0
- (void)_prepareReadRequest:(id)arg1;	// IMP=0x000000000003db40
- (void)_processReads:(_Bool)arg1;	// IMP=0x000000000003d740
- (void)readWithCBReadRequest:(id)arg1;	// IMP=0x000000000003d600
- (void)_pairWithOOBData:(id)arg1;	// IMP=0x000000000003d260
- (void)pairWithOOBData:(id)arg1;	// IMP=0x000000000003d1b0
- (void)pairingPerformAction:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003cef0
- (void)_pairingSetOOBEnabled:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003ca80
- (void)pairingSetOOBEnabled:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003c9b0
- (void)_pairingGenerateOOBDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003c420
- (void)pairingGenerateOOBDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000003c370
- (_Bool)_runSetupChannel;	// IMP=0x000000000003c300
- (_Bool)_runConnectStart;	// IMP=0x000000000003beb0
- (void)_run;	// IMP=0x000000000003bb90
- (void)_reportError:(id)arg1;	// IMP=0x000000000003ba40
- (_Bool)_setupIOAndReturnError:(id *)arg1;	// IMP=0x000000000003b680
- (_Bool)_startConnectingAndReturnError:(id *)arg1;	// IMP=0x000000000003b510
- (void)xpcReceivedPairingPrompt:(id)arg1;	// IMP=0x000000000003b320
- (void)xpcReceivedPairingCompleted:(id)arg1;	// IMP=0x000000000003b0e0
- (void)_xpcReceivedMessage:(id)arg1;	// IMP=0x000000000003afa0
- (void)xpcReceivedMessage:(id)arg1;	// IMP=0x000000000003ad20
- (void)xpcReceivedForwardedEvent:(id)arg1;	// IMP=0x000000000003abc0
- (void)xpcForwardMessage:(id)arg1;	// IMP=0x000000000003a9f0
- (void)_invalidated;	// IMP=0x000000000003a800
- (void)_invalidate;	// IMP=0x000000000003a610
- (void)invalidate;	// IMP=0x000000000003a5a0
- (void)_interrupted;	// IMP=0x000000000003a510
- (id)_ensureXPCStarted;	// IMP=0x000000000003a3c0
- (void)disconnectWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003a210
- (void)_activateXPCCompleted:(id)arg1;	// IMP=0x000000000003a070
- (void)_activateXPCStart:(_Bool)arg1;	// IMP=0x0000000000039ee0
- (_Bool)activateDirectAndReturnError:(id *)arg1;	// IMP=0x0000000000039820
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039440
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039390
@property(readonly, copy) NSString *description;
- (void)encodeWithXPCObject:(id)arg1;	// IMP=0x0000000000038c70
- (id)initWithXPCObject:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000389b0
- (void)dealloc;	// IMP=0x0000000000038930
- (id)init;	// IMP=0x0000000000038890

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

