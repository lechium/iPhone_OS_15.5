//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CoreBluetooth/CBActivatable-Protocol.h>
#import <CoreBluetooth/CBLabelable-Protocol.h>
#import <CoreBluetooth/CBPairingAgentDelegate-Protocol.h>
#import <CoreBluetooth/CBPeripheralManagerDelegate-Protocol.h>
#import <CoreBluetooth/CBStateReporting-Protocol.h>

@class CBPeripheralManager, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface CBServer : NSObject <CBPairingAgentDelegate, CBPeripheralManagerDelegate, CBActivatable, CBLabelable, CBStateReporting>
{
    _Bool _activateCalled;	// 8 = 0x8
    CDUnknownBlockType _activateCompletion;	// 16 = 0x10
    NSMutableSet *_connections;	// 24 = 0x18
    _Bool _invalidateCalled;	// 32 = 0x20
    CBPeripheralManager *_peripheralManager;	// 40 = 0x28
    struct LogCategory *_ucat;	// 48 = 0x30
    unsigned short _bleListenPSM;	// 56 = 0x38
    unsigned short _bleListeningPSM;	// 58 = 0x3a
    long long _bluetoothState;	// 64 = 0x40
    CDUnknownBlockType _bluetoothStateChangedHandler;	// 72 = 0x48
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 80 = 0x50
    CDUnknownBlockType _invalidationHandler;	// 88 = 0x58
    NSString *_label;	// 96 = 0x60
    CDUnknownBlockType _acceptHandler;	// 104 = 0x68
    CDUnknownBlockType _configChangedHandler;	// 112 = 0x70
}

- (void).cxx_destruct;	// IMP=0x00000000000660e0
@property(copy, nonatomic) CDUnknownBlockType configChangedHandler; // @synthesize configChangedHandler=_configChangedHandler;
@property(readonly, nonatomic) unsigned short bleListeningPSM; // @synthesize bleListeningPSM=_bleListeningPSM;
@property(nonatomic) unsigned short bleListenPSM; // @synthesize bleListenPSM=_bleListenPSM;
@property(copy, nonatomic) CDUnknownBlockType acceptHandler; // @synthesize acceptHandler=_acceptHandler;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(copy, nonatomic) CDUnknownBlockType bluetoothStateChangedHandler; // @synthesize bluetoothStateChangedHandler=_bluetoothStateChangedHandler;
@property(readonly, nonatomic) long long bluetoothState; // @synthesize bluetoothState=_bluetoothState;
- (void)peripheralManager:(id)arg1 didOpenL2CAPChannel:(id)arg2 error:(id)arg3;	// IMP=0x00000000000659b0
- (void)peripheralManager:(id)arg1 didUnpublishL2CAPChannel:(unsigned short)arg2 error:(id)arg3;	// IMP=0x0000000000065900
- (void)peripheralManager:(id)arg1 didPublishL2CAPChannel:(unsigned short)arg2 error:(id)arg3;	// IMP=0x0000000000065790
- (void)peripheralManagerDidUpdateState:(id)arg1;	// IMP=0x00000000000656b0
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;	// IMP=0x00000000000653a0
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;	// IMP=0x0000000000065040
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;	// IMP=0x0000000000064d30
- (void)pairingAgent:(id)arg1 peerDidRequestPairing:(id)arg2 type:(long long)arg3 passkey:(id)arg4;	// IMP=0x00000000000649b0
- (void)pairingSetOOBEnabled:(_Bool)arg1 peer:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000064580
- (void)pairingGenerateOOBDataForPeer:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000640d0
- (void)_handleConnectionInvalidated:(id)arg1;	// IMP=0x0000000000063fa0
- (void)_startIfNeeded;	// IMP=0x0000000000063f10
- (void)_invalidate;	// IMP=0x0000000000063c00
- (void)invalidate;	// IMP=0x0000000000063b90
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000063830
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000063780
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0000000000063690
- (id)init;	// IMP=0x0000000000063610

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

