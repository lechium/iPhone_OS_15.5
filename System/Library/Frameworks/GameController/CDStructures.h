//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSObject;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct FixedParam {
    unsigned int _field1;
    float _field2;
};

struct GCQuaternion {
    double x;
    double y;
    double z;
    double w;
};

struct HapticCommand {
    struct MessageHeader _field1;
    unsigned int _field2;
    double _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    union u _field6;
};

struct HapticSharedMemory {
    CDUnknownFunctionPointerType *_vptr$SharableMemoryBase;
    _Bool mIsOwner;
    _Bool mWasMapped;
    unsigned long long mSize;
    void *mBuffer;
    unsigned int mPort;
    int mFileDesc;
    int mSerial;
    NSObject *mXPCObject;
};

struct ItemList<FixedParam, 8> {
    unsigned int _field1;
    struct FixedParam _field2[8];
};

struct ItemList<ParamPoint, 16> {
    unsigned int _field1;
    struct ParamPoint _field2[16];
};

struct MessageHeader {
    unsigned short _field1;
    unsigned short _field2;
};

struct ParamPoint {
    float _field1;
    float _field2;
};

struct SequenceChannelParam {
    unsigned long long _field1;
    unsigned long long _field2;
    float _field3;
};

struct SequenceParam {
    unsigned short _field1;
    float _field2;
};

struct TokenAndParams {
    unsigned long long _field1;
    struct ItemList<FixedParam, 8> _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UsagePage_Usage_Pair {
    long long usagePage;
    long long usage;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<bool, float> {
    _Bool _field1;
    float _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    MISSING_TYPE *vector;
} CDStruct_0e8a9a91;

typedef struct {
    unsigned long long mask;
    float buttons[41];
} CDStruct_5be5f302;

typedef struct {
    float _field1[10];
} CDStruct_dd47a48c;

typedef struct {
    float _field1[4];
} CDStruct_212a8bf9;

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
} CDStruct_0be28830;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
} CDStruct_6ad99454;

typedef struct {
    id _field1;
    _Bool _field2;
    _Bool _field3;
    union {
        struct {
            int _field1;
            _Bool _field2;
            float _field3;
            long long _field4;
        } _field1;
        struct {
            int _field1;
            int _field2;
            int _field3;
            int _field4;
        } _field2;
    } _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    id _field9;
    id _field10;
} CDStruct_9b142b0c;

typedef struct {
    struct {
        struct _field1;
    } _field1[31];
} CDStruct_d01ae07a;

typedef struct {
    CDStruct_9b142b0c _field1[16];
    _Bool _field2;
    _Bool _field3;
} CDStruct_fc41fe5e;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double pitch;
    double yaw;
    double roll;
} CDStruct_27cd59c8;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct pair<bool, float> {
    _Bool _field1;
    float _field2;
} pair_218a80e9;

#pragma mark Named Unions

union u {
    struct TokenAndParams _field1;
    struct SequenceChannelParam _field2;
    struct SequenceParam _field3;
    float _field4;
    double _field5;
    struct ItemList<ParamPoint, 16> _field6;
};

