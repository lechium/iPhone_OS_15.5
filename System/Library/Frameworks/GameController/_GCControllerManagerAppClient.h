//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <GameController/BKSHIDEventDeliveryPolicyObserving-Protocol.h>
#import <GameController/GCAdaptiveTriggersXPCProxyServiceClient-Protocol.h>
#import <GameController/GCAdaptiveTriggersXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCBatteryXPCProxyServiceClient-Protocol.h>
#import <GameController/GCBatteryXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCControllerServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCGameIntentXPCProxyServiceClient-Protocol.h>
#import <GameController/GCGameIntentXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCLightXPCProxyServiceClient-Protocol.h>
#import <GameController/GCLightXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCMotionXPCProxyServiceClient-Protocol.h>
#import <GameController/GCMotionXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCPlayerIndicatorXPCProxyServiceClient-Protocol.h>
#import <GameController/GCPlayerIndicatorXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCSettingsXPCProxyServiceClient-Protocol.h>
#import <GameController/GCSettingsXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCSystemGestureXPCProxyServiceClient-Protocol.h>
#import <GameController/GCSystemGestureXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/_GCAppClientInterface-Protocol.h>

@class BKSHIDEventDeliveryPolicyObserver, GCVirtualController, NSDate, NSMutableDictionary, NSMutableSet, NSString;
@protocol GCAdaptiveTriggersXPCProxyServiceRemoteServerInterface, GCBatteryXPCProxyServiceRemoteServerInterface, GCControllerServiceRemoteServerInterface, GCGameIntentXPCProxyServiceRemoteServerInterface, GCLightXPCProxyServiceRemoteServerInterface, GCMotionXPCProxyServiceRemoteServerInterface, GCPhotoVideoXPCProxyServiceRemoteServerInterface, GCPlayerIndicatorXPCProxyServiceRemoteServerInterface, GCSettingsXPCProxyServiceRemoteServerInterface, GCSystemGestureXPCProxyServiceRemoteServerInterface, _GCIPCEndpointConnection, _GCIPCOutgoingConnection;

@interface _GCControllerManagerAppClient <GCControllerServiceRemoteClientInterface, GCPlayerIndicatorXPCProxyServiceClient, GCPlayerIndicatorXPCProxyServiceRemoteClientInterface, GCLightXPCProxyServiceClient, GCLightXPCProxyServiceRemoteClientInterface, GCAdaptiveTriggersXPCProxyServiceClient, GCAdaptiveTriggersXPCProxyServiceRemoteClientInterface, GCMotionXPCProxyServiceClient, GCMotionXPCProxyServiceRemoteClientInterface, GCBatteryXPCProxyServiceClient, GCBatteryXPCProxyServiceRemoteClientInterface, GCSettingsXPCProxyServiceClient, GCSettingsXPCProxyServiceRemoteClientInterface, GCGameIntentXPCProxyServiceClient, GCGameIntentXPCProxyServiceRemoteClientInterface, GCSystemGestureXPCProxyServiceClient, GCSystemGestureXPCProxyServiceRemoteClientInterface, BKSHIDEventDeliveryPolicyObserving, _GCAppClientInterface>
{
    NSMutableSet *_knownHIDServices;	// 256 = 0x100
    NSMutableDictionary *_publishedControllers;	// 264 = 0x108
    NSMutableSet *_pendingControllers;	// 272 = 0x110
    NSMutableSet *_serverValidControllerIdentifiers;	// 280 = 0x118
    NSMutableSet *_customControllerIdentifiers;	// 288 = 0x120
    id <_GCIPCOutgoingConnection> _serverConnection;	// 296 = 0x128
    id _serverConnectionInvalidation;	// 304 = 0x130
    id _serverConnectionInterruption;	// 312 = 0x138
    id <GCControllerServiceRemoteServerInterface> _controllerService;	// 320 = 0x140
    id <GCPlayerIndicatorXPCProxyServiceRemoteServerInterface> _playerIndicatorXPCProxyService;	// 328 = 0x148
    id <GCLightXPCProxyServiceRemoteServerInterface> _lightXPCProxyService;	// 336 = 0x150
    id <GCAdaptiveTriggersXPCProxyServiceRemoteServerInterface> _adaptiveTriggersXPCProxyService;	// 344 = 0x158
    id <GCSettingsXPCProxyServiceRemoteServerInterface> _settingsXPCProxyService;	// 352 = 0x160
    id <GCMotionXPCProxyServiceRemoteServerInterface> _motionXPCProxyService;	// 360 = 0x168
    id <GCBatteryXPCProxyServiceRemoteServerInterface> _batteryXPCProxyService;	// 368 = 0x170
    id <GCPhotoVideoXPCProxyServiceRemoteServerInterface> _photoVideoService;	// 376 = 0x178
    id <GCGameIntentXPCProxyServiceRemoteServerInterface> _gameIntentXPCProxyService;	// 384 = 0x180
    id <GCSystemGestureXPCProxyServiceRemoteServerInterface> _systemGestureXPCProxyService;	// 392 = 0x188
    GCVirtualController *_forcedVirtualController;	// 400 = 0x190
    BKSHIDEventDeliveryPolicyObserver *_hidEventObserver;	// 408 = 0x198
    _Bool _shouldResumeDaemonConnectionOnForeground;	// 416 = 0x1a0
    _Bool _bufferingStartPending;	// 417 = 0x1a1
    _Bool _bufferingStarted;	// 418 = 0x1a2
    _Bool _shouldStartBufferingOnForeground;	// 419 = 0x1a3
    NSDate *_recordingStart;	// 424 = 0x1a8
}

- (void).cxx_destruct;	// IMP=0x0000000000064aaa
- (id)serviceClientForIPCService:(id)arg1;	// IMP=0x0000000000064a15
- (void)createVirtualControllerView;	// IMP=0x0000000000064779
- (void)onScreenshotTriggeredWithController:(id)arg1;	// IMP=0x00000000000645d1
- (void)onVideoRecordingToggledWithController:(id)arg1 mode:(long long)arg2;	// IMP=0x000000000006440d
- (void)stopVideoRecordingBuffering;	// IMP=0x00000000000643ec
- (void)startVideoRecordingBuffering;	// IMP=0x00000000000643ae
- (void)enableKeyboardAndMouseSupport;	// IMP=0x00000000000642f5
- (void)stopBuffering;	// IMP=0x00000000000641ed
- (void)startBuffering;	// IMP=0x0000000000063fed
- (void)stopVideoRecordingWithClipBuffering:(_Bool)arg1 controller:(id)arg2;	// IMP=0x00000000000637d5
- (void)startVideoRecording;	// IMP=0x000000000006352d
- (_Bool)isScreenShotAllowedForController:(id)arg1;	// IMP=0x00000000000633db
- (_Bool)isVideoRecordingAllowedForController:(id)arg1;	// IMP=0x0000000000063289
- (void)setProperty:(id)arg1 forKey:(id)arg2 forHIDServiceClientWithRegistryID:(id)arg3;	// IMP=0x0000000000062e28
- (void)onHIDDeviceRemoved:(struct __IOHIDServiceClient *)arg1;	// IMP=0x0000000000062cf6
- (void)onHIDDeviceAdded:(struct __IOHIDServiceClient *)arg1;	// IMP=0x0000000000062b3a
- (id)_mostRecentlyActiveExtendedGamepadIgnoring:(id)arg1;	// IMP=0x0000000000062911
- (id)_mostRecentlyActiveMicroGamepadIgnoring:(id)arg1;	// IMP=0x00000000000626e8
- (id)_mostRecentlyActiveControllerIgnoring:(id)arg1;	// IMP=0x0000000000062477
- (void)_setCurrentExtendedGamepad:(id)arg1;	// IMP=0x0000000000062229
- (void)setCurrentExtendedGamepad:(id)arg1;	// IMP=0x0000000000062217
- (id)currentExtendedGamepad;	// IMP=0x00000000000621ca
- (void)_setCurrentMicroGamepad:(id)arg1;	// IMP=0x0000000000061f7c
- (void)setCurrentMicroGamepad:(id)arg1;	// IMP=0x0000000000061f6a
- (id)currentMicroGamepad;	// IMP=0x0000000000061f1d
- (void)_setCurrentController:(id)arg1;	// IMP=0x0000000000061cb1
- (void)setCurrentController:(id)arg1;	// IMP=0x0000000000061bb5
- (id)currentController;	// IMP=0x0000000000061b68
- (void)updateCurrentControllerAndProfileForUnpublishedController:(id)arg1;	// IMP=0x00000000000619f9
- (void)updateEmulatedControllerEnabled;	// IMP=0x000000000006183e
- (void)_onqueue_unpublishCustomController:(id)arg1;	// IMP=0x0000000000061788
- (void)_onqueue_publishCustomController:(id)arg1;	// IMP=0x00000000000616d2
- (void)_onqueue_publishController:(id)arg1;	// IMP=0x000000000006147f
- (void)_onqueue_unpublishController:(id)arg1;	// IMP=0x00000000000611d1
- (_Bool)_containsPublishedController:(id)arg1;	// IMP=0x000000000006115d
- (void)_onqueue_refreshPublishedControllers;	// IMP=0x0000000000060a1c
- (void)_onqueue_addPendingController:(id)arg1;	// IMP=0x00000000000608da
- (id)mice;	// IMP=0x00000000000608c8
- (id)controllers;	// IMP=0x0000000000060764
- (void)handleMouseEventAsFrontmostApp:(id)arg1;	// IMP=0x000000000006075e
- (void)handleKeyboardEventAsFrontmostApp:(id)arg1;	// IMP=0x0000000000060758
- (void)CBApplicationWillResignActive;	// IMP=0x0000000000060729
- (void)CBApplicationDidBecomeActive;	// IMP=0x00000000000605d3
- (void)_resumeDaemonConnection;	// IMP=0x000000000005f4dc
- (void)_connectToDaemon;	// IMP=0x000000000005ef7d
- (void)finalizeRecording;	// IMP=0x000000000005ef0c
- (void)open;	// IMP=0x000000000005ee56
- (void)dealloc;	// IMP=0x000000000005edef
- (id)init;	// IMP=0x000000000005ecc2
- (void)refreshControllers;	// IMP=0x00000000000653b0
- (void)unpublishControllersWithIdentifiers:(id)arg1;	// IMP=0x000000000006506b
- (void)publishControllers:(id)arg1;	// IMP=0x0000000000064c1e
@property(readonly) id <GCPlayerIndicatorXPCProxyServiceRemoteServerInterface> playerIndicatorXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> playerIndicatorXPCProxyServiceConnection;
@property(readonly) id <GCLightXPCProxyServiceRemoteServerInterface> lightXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> lightXPCProxyServiceConnection;
@property(readonly) id <GCAdaptiveTriggersXPCProxyServiceRemoteServerInterface> adaptiveTriggersXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> adaptiveTriggersXPCProxyServiceConnection;
@property(readonly) id <GCMotionXPCProxyServiceRemoteServerInterface> motionXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> motionXPCProxyServiceConnection;
@property(readonly) id <GCBatteryXPCProxyServiceRemoteServerInterface> batteryXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> batteryXPCProxyServiceConnection;
@property(readonly) id <GCSettingsXPCProxyServiceRemoteServerInterface> settingsXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> settingsXPCProxyServiceConnection;
@property(readonly) id <GCGameIntentXPCProxyServiceRemoteServerInterface> gameIntentXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> gameIntentXPCProxyServiceConnection;
@property(readonly) id <GCSystemGestureXPCProxyServiceRemoteServerInterface> systemGestureXPCProxyServiceRemoteServer;
@property(readonly) id <_GCIPCEndpointConnection> systemGestureXPCProxyServiceConnection;
- (void)observerDeliveryPolicyDidChange:(id)arg1;	// IMP=0x0000000000065be2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

