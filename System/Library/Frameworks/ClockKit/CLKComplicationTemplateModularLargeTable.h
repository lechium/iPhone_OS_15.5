//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CLKImageProvider, CLKTextProvider;

@interface CLKComplicationTemplateModularLargeTable
{
    _Bool _useNoColumnPadding;	// 64 = 0x40
    CLKImageProvider *_headerImageProvider;	// 72 = 0x48
    CLKTextProvider *_headerTextProvider;	// 80 = 0x50
    CLKTextProvider *_row1Column1TextProvider;	// 88 = 0x58
    CLKTextProvider *_row1Column2TextProvider;	// 96 = 0x60
    CLKTextProvider *_row2Column1TextProvider;	// 104 = 0x68
    CLKTextProvider *_row2Column2TextProvider;	// 112 = 0x70
    long long _column2Alignment;	// 120 = 0x78
}

+ (id)templateWithHeaderImageProvider:(id)arg1 headerTextProvider:(id)arg2 row1Column1TextProvider:(id)arg3 row1Column2TextProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6;	// IMP=0x00000000000126d1
+ (id)templateWithHeaderTextProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2Column1TextProvider:(id)arg4 row2Column2TextProvider:(id)arg5;	// IMP=0x0000000000012609
- (void).cxx_destruct;	// IMP=0x0000000000012a91
@property(nonatomic) _Bool useNoColumnPadding; // @synthesize useNoColumnPadding=_useNoColumnPadding;
@property(nonatomic) long long column2Alignment; // @synthesize column2Alignment=_column2Alignment;
@property(copy, nonatomic) CLKTextProvider *row2Column2TextProvider; // @synthesize row2Column2TextProvider=_row2Column2TextProvider;
@property(copy, nonatomic) CLKTextProvider *row2Column1TextProvider; // @synthesize row2Column1TextProvider=_row2Column1TextProvider;
@property(copy, nonatomic) CLKTextProvider *row1Column2TextProvider; // @synthesize row1Column2TextProvider=_row1Column2TextProvider;
@property(copy, nonatomic) CLKTextProvider *row1Column1TextProvider; // @synthesize row1Column1TextProvider=_row1Column1TextProvider;
@property(copy, nonatomic) CLKTextProvider *headerTextProvider; // @synthesize headerTextProvider=_headerTextProvider;
@property(copy, nonatomic) CLKImageProvider *headerImageProvider; // @synthesize headerImageProvider=_headerImageProvider;
- (void)_enumerateIntegerKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000012947
- (void)_enumerateImageProviderKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000012890
- (void)_enumerateTextProviderKeysWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000127c8
- (long long)compatibleFamily;	// IMP=0x00000000000127bd
- (id)initWithHeaderImageProvider:(id)arg1 headerTextProvider:(id)arg2 row1Column1TextProvider:(id)arg3 row1Column2TextProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6;	// IMP=0x00000000000124dd
- (id)initWithHeaderTextProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2Column1TextProvider:(id)arg4 row2Column2TextProvider:(id)arg5;	// IMP=0x00000000000124b4

@end

