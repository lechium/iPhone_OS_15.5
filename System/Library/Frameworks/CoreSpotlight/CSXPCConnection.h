//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface CSXPCConnection : NSObject
{
    _Bool _machService;	// 8 = 0x8
    _Bool _listener;	// 9 = 0x9
    _Bool _nonLaunching;	// 10 = 0xa
    _Bool _privateDaemon;	// 11 = 0xb
    unsigned int _user;	// 12 = 0xc
    NSString *_uuid;	// 16 = 0x10
    NSString *_serviceName;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 32 = 0x20
    NSObject<OS_xpc_object> *_connection;	// 40 = 0x28
}

+ (void)journalDictionary:(id)arg1 toFolderPath:(const char *)arg2 forPID:(int)arg3 withLabel:(const char *)arg4 andID:(unsigned long long)arg5;	// IMP=0x0000000000040e57
+ (id)copyPlistFromXPCObject:(id)arg1;	// IMP=0x0000000000040b97
+ (void)setJournalEnabled:(_Bool)arg1;	// IMP=0x0000000000040b79
+ (_Bool)journalEnabled;	// IMP=0x0000000000040b62
+ (id)processNameForPID:(int)arg1;	// IMP=0x0000000000040a53
+ (id)appIdentifierFromTeamAppTuple:(id)arg1;	// IMP=0x000000000004098e
+ (id)dataWrapperForKey:(const char *)arg1 sizeKey:(const char *)arg2 fromXPCDictionary:(id)arg3;	// IMP=0x0000000000040972
+ (id)dataWrapperForKey:(const char *)arg1 sizeKey:(const char *)arg2 fromXPCDictionary:(id)arg3 allowWritableSharedMemory:(_Bool)arg4;	// IMP=0x00000000000407f2
+ (void)dictionary:(id)arg1 setPlistContainer:(const struct _MDPlistContainer *)arg2 forKey:(const char *)arg3 sizeKey:(const char *)arg4;	// IMP=0x0000000000040757
+ (void)dictionary:(id)arg1 setPlistBytes:(struct __MDPlistBytes *)arg2 forKey:(const char *)arg3 sizeKey:(const char *)arg4;	// IMP=0x00000000000406bc
+ (_Bool)dictionary:(id)arg1 setSharedMemory:(void *)arg2 forKey:(const char *)arg3 size:(unsigned long long)arg4 forSizeKey:(const char *)arg5;	// IMP=0x0000000000040617
+ (void)dictionary:(id)arg1 setNumberArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x0000000000040428
+ (void)dictionary:(id)arg1 setStringOrDictionaryArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x0000000000040182
+ (id)constructDictionary:(id)arg1;	// IMP=0x0000000000040071
+ (id)constructArray:(id)arg1;	// IMP=0x000000000003fefd
+ (void)array:(id)arg1 setValue:(id)arg2 atIndex:(long long)arg3;	// IMP=0x000000000003fdb1
+ (void)dictionary:(id)arg1 setValue:(id)arg2 forKey:(const char *)arg3;	// IMP=0x000000000003fc65
+ (void)dictionary:(id)arg1 setStringArray:(id)arg2 forKey:(const char *)arg3;	// IMP=0x000000000003fa66
+ (id)copyNSStringSetFromXPCArray:(id)arg1;	// IMP=0x000000000003f91d
+ (id)copyNSNumberArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f7ff
+ (id)copyNSStringOrDictArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f663
+ (id)copyNSArrayFromXPCObject:(id)arg1;	// IMP=0x000000000003f55f
+ (id)copyNSDictionaryFromXPCObject:(id)arg1;	// IMP=0x000000000003f3fe
+ (id)copyNSObject:(id)arg1;	// IMP=0x000000000003f33e
+ (id)copyNSString:(id)arg1;	// IMP=0x000000000003f308
+ (id)copyNSStringArrayFromXPCArray:(id)arg1;	// IMP=0x000000000003f1e2
+ (id)copyNSDataForKey:(const char *)arg1 fromXPCDictionary:(id)arg2;	// IMP=0x000000000003f18f
+ (id)copyNSStringForKey:(const char *)arg1 fromXPCDictionary:(id)arg2;	// IMP=0x000000000003f156
- (void).cxx_destruct;	// IMP=0x0000000000040fc9
@property(nonatomic) unsigned int user; // @synthesize user=_user;
@property(retain, nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
@property(nonatomic) _Bool privateDaemon; // @synthesize privateDaemon=_privateDaemon;
@property(nonatomic) _Bool nonLaunching; // @synthesize nonLaunching=_nonLaunching;
@property(readonly, nonatomic) _Bool listener; // @synthesize listener=_listener;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(readonly, nonatomic) _Bool machService; // @synthesize machService=_machService;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void)sendMessageAsync:(id)arg1;	// IMP=0x000000000003f0f6
- (void)sendMessageAsync:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003ef24
- (void)handleReply:(id)arg1;	// IMP=0x000000000003e9f3
- (void)handleError:(id)arg1;	// IMP=0x000000000003e8c4
- (void)_lostClientConnection:(id)arg1 error:(id)arg2;	// IMP=0x000000000003e873
- (_Bool)lostClientConnection:(id)arg1 error:(id)arg2;	// IMP=0x000000000003e74c
- (_Bool)addClientConnectionIfAllowedForConnection:(id)arg1;	// IMP=0x000000000003e744
- (_Bool)addClientConnectionIfAllowedForConfiguration:(id)arg1;	// IMP=0x000000000003e6ee
- (_Bool)handleMessage:(id)arg1 type:(struct _xpc_type_s *)arg2 connection:(id)arg3;	// IMP=0x000000000003e393
- (_Bool)handleCommand:(const char *)arg1 info:(id)arg2 connection:(id)arg3;	// IMP=0x000000000003e38b
- (void)_setUser:(unsigned int)arg1;	// IMP=0x000000000003e379
- (id)initMachServiceListenerWithName:(id)arg1;	// IMP=0x000000000003de1d
- (id)initListenerWithName:(id)arg1;	// IMP=0x000000000003dda7
- (id)initWithServiceName:(id)arg1 machService:(_Bool)arg2;	// IMP=0x000000000003dd92
- (id)initWithServiceName:(id)arg1 machService:(_Bool)arg2 uuid:(id)arg3;	// IMP=0x000000000003db78
- (id)initWithServiceName:(id)arg1;	// IMP=0x000000000003db64
- (id)initWithMachServiceName:(id)arg1;	// IMP=0x000000000003db4d
- (void)startListener;	// IMP=0x000000000003db1e

@end

