//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PDFKit/NSCopying-Protocol.h>

@class NSDictionary, NSString, NSURL, PDFDocumentPrivate, PDFOutline, PDFSelection;
@protocol PDFDocumentDelegate;

@interface PDFDocument : NSObject <NSCopying>
{
    PDFDocumentPrivate *_private;	// 8 = 0x8
}

+ (_Bool)pdfDocumentAppendModeActiveForThisThread;	// IMP=0x000000000008fd07
+ (void)setPDFDocumentAppendModeActiveForThisThread:(_Bool)arg1;	// IMP=0x000000000008fc5c
+ (_Bool)isValidPassword:(id)arg1;	// IMP=0x0000000000089aac
- (void).cxx_destruct;	// IMP=0x0000000000092aeb
- (void)setPageChangeDelegate:(id)arg1;	// IMP=0x0000000000092ad2
- (void)decrementRedactionCount;	// IMP=0x0000000000092a99
- (void)incrementRedactionCount;	// IMP=0x0000000000092a60
- (void)setDocumentHasBurnInAnnotations:(_Bool)arg1;	// IMP=0x0000000000092a50
- (Class)annotationSubclassForType:(id)arg1;	// IMP=0x00000000000929c8
- (id)findPageWithCGPDFDictionaryPageRef:(struct CGPDFDictionary *)arg1;	// IMP=0x000000000009263f
- (struct __CFDictionary *)_createInfoDictionary;	// IMP=0x0000000000092472
- (id)annotationsForFieldName:(id)arg1;	// IMP=0x000000000009221a
- (void)setFormData:(id)arg1;	// IMP=0x0000000000092201
- (id)formData;	// IMP=0x0000000000092175
- (void)scheduledFindOnPage:(id)arg1;	// IMP=0x0000000000092081
- (void)cleanupFind;	// IMP=0x0000000000091f25
- (_Bool)findOnPage;	// IMP=0x000000000009189d
- (void)coreFindStrings:(id)arg1;	// IMP=0x00000000000914fd
- (void)coreFindString:(id)arg1;	// IMP=0x00000000000914aa
- (void)normalizeFindOptions:(unsigned long long)arg1;	// IMP=0x000000000009144f
- (id)findStrings:(id)arg1 withinSelection:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x0000000000090f48
- (id)displayListCreationQueue;	// IMP=0x0000000000090e8d
- (id)textExtractionQueue;	// IMP=0x0000000000090dd2
- (id)selectionFromPage:(id)arg1 atPoint:(struct CGPoint)arg2 toPage:(id)arg3 atPoint:(struct CGPoint)arg4 type:(int)arg5;	// IMP=0x0000000000090a58
- (_Bool)viewPreferenceRightToLeft;	// IMP=0x00000000000909d7
- (void)resetPageAnnotationChanges;	// IMP=0x000000000009080e
- (id)pageAnnotationChanges;	// IMP=0x00000000000905ff
- (_Bool)documentChanged;	// IMP=0x00000000000903c3
- (void)revert;	// IMP=0x000000000009036e
- (_Bool)validateRedo:(id)arg1;	// IMP=0x00000000000902f7
- (void)redo:(id)arg1;	// IMP=0x0000000000090285
- (_Bool)validateUndo:(id)arg1;	// IMP=0x000000000009020e
- (void)undo:(id)arg1;	// IMP=0x000000000009019c
- (id)akController;	// IMP=0x000000000009017f
- (id)_namedDestination:(id)arg1 forNameDictionary:(struct CGPDFDictionary *)arg2;	// IMP=0x000000000008fee4
- (id)namedDestination:(id)arg1;	// IMP=0x000000000008fdb2
- (void)enableLimitedSearch;	// IMP=0x000000000008fda1
- (_Bool)bookmarksChanged;	// IMP=0x000000000008fc02
- (void)updateBookmarksInPDFDocument;	// IMP=0x000000000008fba1
- (id)_bookmarksCatalog;	// IMP=0x000000000008f830
- (id)bookmarkedPages;	// IMP=0x000000000008f80b
- (void)setBookmarked:(_Bool)arg1 atPageIndex:(unsigned long long)arg2;	// IMP=0x000000000008f782
- (void)setShowsAnnotations:(_Bool)arg1;	// IMP=0x000000000008f77c
- (_Bool)showsAnnotations;	// IMP=0x000000000008f774
- (id)selectionFromPage:(id)arg1 atCharacterIndex:(unsigned long long)arg2 toPage:(id)arg3 atCharacterIndex:(unsigned long long)arg4;	// IMP=0x000000000008f441
- (id)selectionFromPage:(id)arg1 atPoint:(struct CGPoint)arg2 toPage:(id)arg3 atPoint:(struct CGPoint)arg4;	// IMP=0x000000000008f429
@property(readonly, nonatomic) PDFSelection *selectionForEntireDocument;
- (void)asyncFindString:(id)arg1 withDelegate:(id)arg2 onQueue:(id)arg3;	// IMP=0x000000000008e904
- (void)cancelFindString;	// IMP=0x000000000008e868
@property(readonly, nonatomic) _Bool isFinding;
- (void)didMatchString:(id)arg1;	// IMP=0x000000000008e6cb
- (id)_findString:(id)arg1 fromSelection:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x000000000008e292
- (id)findStringPerPage:(id)arg1 fromSelection:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x000000000008e1e9
- (id)findString:(id)arg1 fromSelection:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x000000000008e140
- (void)beginFindStrings:(id)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x000000000008e046
- (void)beginFindString:(id)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x000000000008dfb3
- (id)findString:(id)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x000000000008de6c
@property(readonly, nonatomic) Class pageClass;
- (void)exchangePageAtIndex:(unsigned long long)arg1 withPageAtIndex:(unsigned long long)arg2;	// IMP=0x000000000008da4b
- (void)removePageAtIndex:(unsigned long long)arg1;	// IMP=0x000000000008d5dd
- (void)insertPage:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x000000000008d1c5
- (unsigned long long)indexForPage:(id)arg1;	// IMP=0x000000000008d13e
- (id)_rawPageAtIndex:(unsigned long long)arg1;	// IMP=0x000000000008d077
- (void)_notifyAKAdaptorPagePlaceholder:(id)arg1 wasReplacedWithPage:(id)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x000000000008cc8a
- (id)pageAtIndex:(unsigned long long)arg1;	// IMP=0x000000000008c89c
@property(readonly, nonatomic) unsigned long long pageCount;
- (id)outlineItemForSelection:(id)arg1;	// IMP=0x000000000008c77d
@property(retain, nonatomic) PDFOutline *outlineRoot;
- (_Bool)writeToURL:(id)arg1 withOptions:(id)arg2;	// IMP=0x000000000008c29a
- (_Bool)writeToURL:(id)arg1;	// IMP=0x000000000008c286
- (_Bool)writeToFile:(id)arg1 withOptions:(id)arg2;	// IMP=0x000000000008c200
- (_Bool)writeToFile:(id)arg1;	// IMP=0x000000000008c1ec
- (id)dataRepresentationWithOptions:(id)arg1;	// IMP=0x000000000008c15c
- (id)dataRepresentation;	// IMP=0x000000000008c0f6
- (id)PDFAKControllerDelegate;	// IMP=0x000000000008c0c0
- (void)setPDFAKControllerDelegate:(id)arg1;	// IMP=0x000000000008c07c
@property(nonatomic) __weak id <PDFDocumentDelegate> delegate;
@property(readonly, nonatomic) NSString *string;
@property(readonly, nonatomic) unsigned long long accessPermissions;
@property(readonly, nonatomic) long long permissionsStatus;
@property(readonly, nonatomic) _Bool allowsFormFieldEntry;
@property(readonly, nonatomic) _Bool allowsCommenting;
@property(readonly, nonatomic) _Bool allowsContentAccessibility;
@property(readonly, nonatomic) _Bool allowsDocumentAssembly;
@property(readonly, nonatomic) _Bool allowsDocumentChanges;
@property(readonly, nonatomic) _Bool allowsCopying;
@property(readonly, nonatomic) _Bool allowsPrinting;
- (_Bool)_canSaveWithEncryption;	// IMP=0x000000000008bd2e
- (void)requirePasswordsIfNeeded:(CDUnknownBlockType)arg1;	// IMP=0x000000000008b541
- (id)passwordUsedForUnlocking;	// IMP=0x000000000008b503
- (_Bool)unlockWithPassword:(id)arg1;	// IMP=0x000000000008ac46
@property(readonly, nonatomic) _Bool isLocked;
@property(readonly, nonatomic) _Bool isEncrypted;
@property(readonly, nonatomic) long long minorVersion;
@property(readonly, nonatomic) long long majorVersion;
@property(copy, nonatomic) NSDictionary *documentAttributes;
@property(readonly, nonatomic) struct CGPDFDocument *documentRef;
@property(readonly, nonatomic) NSURL *documentURL;
- (void)dealloc;	// IMP=0x000000000008a7f7
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000089f7f
- (void)setDocument:(struct CGPDFDocument *)arg1;	// IMP=0x0000000000089e2c
- (void)_createDocumentWithDataProvider:(struct CGDataProvider *)arg1;	// IMP=0x0000000000089dd6
- (id)initWithProvider:(struct CGDataProvider *)arg1;	// IMP=0x0000000000089d25
- (id)initWithData:(id)arg1;	// IMP=0x0000000000089c52
- (id)initWithURL:(id)arg1;	// IMP=0x0000000000089b6c
- (id)init;	// IMP=0x0000000000089ab9
- (void)preloadDataOfPagesInRange:(struct _NSRange)arg1 onQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000008923f
- (_Bool)createdWithWithHighLatencyDataProvider;	// IMP=0x0000000000089232
- (void)setHasHighLatencyDataProvider:(_Bool)arg1;	// IMP=0x0000000000088f60
- (_Bool)hasHighLatencyDataProvider;	// IMP=0x0000000000088efd
- (_Bool)isLinearized;	// IMP=0x0000000000088ee2
- (void)enableDocumentMRUMode:(_Bool)arg1;	// IMP=0x0000000000088ec6
- (id)akDocumentAdaptor;	// IMP=0x0000000000088e05
- (struct __CFData *)newXMPFromData:(id)arg1 preserveExistingXMPMetadata:(_Bool)arg2;	// IMP=0x00000000000888e9
- (void)_setDocumentCatalogMetadata:(id)arg1 withNSpace:(id)arg2 prefix:(id)arg3 rootPath:(id)arg4;	// IMP=0x0000000000088760
- (id)_documentCatalogMetadataForRootPath:(id)arg1 withKeys:(id)arg2;	// IMP=0x0000000000088646
- (void)_sanitizeAnnotationArray:(struct __CFArray *)arg1;	// IMP=0x00000000000884e1
- (void)_sanitizeAnnotationDictionary:(struct __CFDictionary *)arg1;	// IMP=0x0000000000088316
- (struct CGPDFName *)_convertCFStringToCGPDFName:(void *)arg1 forKey:(struct __CFString *)arg2;	// IMP=0x0000000000088227
- (struct CGPDFAnnotation *)_createCGPDFAnnotationForAnnotation:(id)arg1;	// IMP=0x000000000008817d
- (_Bool)_writeAppendMode:(struct CGDataConsumer *)arg1;	// IMP=0x0000000000086fda
- (_Bool)canSaveWithAppendModeUsingOptions:(id)arg1;	// IMP=0x0000000000086d2a
- (_Bool)writeToConsumer:(struct CGDataConsumer *)arg1 withOptions:(id)arg2;	// IMP=0x0000000000086111
- (id)_convertWriteOptions:(id)arg1;	// IMP=0x0000000000085d2c
- (id)_addEncryptionFromOptions:(id)arg1;	// IMP=0x00000000000857d6
- (void)setRenderingProperties:(id)arg1;	// IMP=0x00000000000857bd
- (id)renderingProperties;	// IMP=0x00000000000857a8
- (id)_dataFromXMP:(struct __CFData *)arg1 withRootPath:(id)arg2 keys:(id)arg3;	// IMP=0x000000000008532b
- (id)_getNearestOutline:(id)arg1 forDestination:(id)arg2;	// IMP=0x0000000000085102
- (id)_SASLSanitize:(id)arg1;	// IMP=0x0000000000084f6a
- (_Bool)_isNonAsciiSpace:(id)arg1;	// IMP=0x0000000000084d9c
- (_Bool)_isCommonlyMappedToNothing:(id)arg1;	// IMP=0x0000000000084aa5
- (void)setupAKDocumentAdaptorIfNecessaryWithView:(id)arg1;	// IMP=0x00000000000848a5
- (void)_commonInit;	// IMP=0x000000000008423a

@end

