//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PDFKit/NSCopying-Protocol.h>

@class NSArray, NSAttributedString, NSData, NSString, PDFDocument, PDFPagePrivate;

@interface PDFPage : NSObject <NSCopying>
{
    PDFPagePrivate *_private;	// 8 = 0x8
}

+ (_Bool)isExcludingAKAnnotationRenderingForThisThread;	// IMP=0x00000000000a0fdd
+ (void)setExcludingAKAnnotationRenderingForThisThread:(_Bool)arg1;	// IMP=0x00000000000a0f32
+ (_Bool)shouldHideAnnotationsForThisThread;	// IMP=0x00000000000a0e98
+ (void)setShouldHideAnnotationsForThisThread:(_Bool)arg1;	// IMP=0x00000000000a0ded
+ (_Bool)isNativeRotationDrawingEnabledForThisThread;	// IMP=0x00000000000a0d53
+ (void)setNativeRotationDrawingEnabledForThisThread:(_Bool)arg1;	// IMP=0x00000000000a0ca8
+ (id)fontWithPDFFont:(struct CGPDFFont *)arg1 size:(float)arg2;	// IMP=0x000000000009eccb
+ (_Bool)_getBooleanProperty:(id)arg1 forKey:(id)arg2 withDefault:(_Bool)arg3;	// IMP=0x000000000009da34
- (void).cxx_destruct;	// IMP=0x00000000000a4f5a
- (id)debugQuickLookObject;	// IMP=0x00000000000a4e83
- (id)description;	// IMP=0x00000000000a4dce
- (_Bool)pathIntersectsWithRedactionPath:(struct CGPath *)arg1;	// IMP=0x00000000000a4d96
- (_Bool)rectIntersectsWithRedactionPath:(struct CGRect)arg1;	// IMP=0x00000000000a4d4b
- (const struct CGPath *)createRedactionPath;	// IMP=0x00000000000a4b49
- (unsigned long long)_documentIndex;	// IMP=0x00000000000a4b08
- (id)rvItemWithPDFScannerResult:(id)arg1;	// IMP=0x00000000000a49a8
- (id)_rvItemAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000a47e5
- (id)rvItemAtPoint:(struct CGPoint)arg1 onPageLayer:(id)arg2;	// IMP=0x00000000000a4755
- (id)rvItemAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000a46c5
- (id)pdfScannerResultAtPoint:(struct CGPoint)arg1 onPageLayer:(id)arg2;	// IMP=0x00000000000a42aa
- (id)pdfScannerResultAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000a4296
- (id)ddScannerResults;	// IMP=0x00000000000a4086
- (void)_scanData:(id)arg1;	// IMP=0x00000000000a39e3
- (void)_postAnnotationsChangedNotificationCoalesced;	// IMP=0x00000000000a3923
- (void)postAnnotationsChangedNotification;	// IMP=0x00000000000a38cd
- (struct CGColor *)pageBackgroundColorHint;	// IMP=0x00000000000a38bf
- (_Bool)didChangeBounds;	// IMP=0x00000000000a38af
- (void)printActivePageAnnotations;	// IMP=0x00000000000a36be
- (void)resetChangedAnnotations;	// IMP=0x00000000000a368b
- (id)changedAnnotations;	// IMP=0x00000000000a3666
- (void)clearAnnotationChanges;	// IMP=0x00000000000a3649
- (id)lastAnnotationChange;	// IMP=0x00000000000a362c
- (id)annotationChanges;	// IMP=0x00000000000a2ceb
- (void)changedAnnotation:(id)arg1;	// IMP=0x00000000000a2c26
- (id)scannedAnnotationAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000a2ae4
- (void)addScannedAnnotation:(id)arg1;	// IMP=0x00000000000a2a0f
- (void)setDisplaysMarkupAnnotations:(_Bool)arg1;	// IMP=0x00000000000a2a02
- (void)addAnnotationFormField:(id)arg1;	// IMP=0x00000000000a26bb
- (void)_removeWidgetAnnotationFromLookupDictionary:(id)arg1;	// IMP=0x00000000000a25f8
- (void)_addWidgetAnnotationToLookupDictionary:(id)arg1;	// IMP=0x00000000000a2503
- (id)annotationsForFieldName:(id)arg1;	// IMP=0x00000000000a2476
- (id)annotationWithUUID:(id)arg1;	// IMP=0x00000000000a22aa
- (void)getAnnotations;	// IMP=0x00000000000a1836
- (void)enableUndoManagerForAK:(_Bool)arg1;	// IMP=0x00000000000a173e
- (_Bool)disableUndoManagerForAK;	// IMP=0x00000000000a162e
- (id)scannedAnnotations;	// IMP=0x00000000000a15c9
- (void)drawAnnotationsWithBox:(long long)arg1 inContext:(struct CGContext *)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x00000000000a13a4
- (struct CGAffineTransform)getDrawingTransformForBox:(long long)arg1;	// IMP=0x00000000000a11d5
- (id)view;	// IMP=0x00000000000a11bb
- (void)setView:(id)arg1;	// IMP=0x00000000000a112a
- (_Bool)columnAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000a10c8
- (_Bool)columnAtPointIfAvailable:(struct CGPoint)arg1;	// IMP=0x00000000000a1077
- (void)addRedactionFromRectangularSelectionWithRect:(struct CGRect)arg1;	// IMP=0x00000000000a0b1f
- (void)setColorWidgetBackgrounds:(_Bool)arg1;	// IMP=0x00000000000a0b0f
- (_Bool)colorWidgetBackgrounds;	// IMP=0x00000000000a0aff
- (void)setBookmarked:(_Bool)arg1 updateBookmarks:(_Bool)arg2;	// IMP=0x00000000000a0ab5
- (void)setBookmarked:(_Bool)arg1;	// IMP=0x00000000000a094a
- (_Bool)isBookmarked;	// IMP=0x00000000000a093a
- (struct CGPDFLayout *)pageLayoutIfAvail;	// IMP=0x00000000000a08e7
- (struct CGPDFLayout *)pageLayout;	// IMP=0x00000000000a08b5
- (void)fetchPageLayoutWithCompletion:(CDUnknownBlockType)arg1 deliveredOnQueue:(id)arg2;	// IMP=0x00000000000a05d4
- (void)_buildPageLayout;	// IMP=0x00000000000a0504
- (struct __CFDictionary *)gcCreateBoxDictionary;	// IMP=0x00000000000a0104
- (_Bool)_writeToConsumer:(struct CGDataConsumer *)arg1;	// IMP=0x000000000009fe26
- (void)clearDisplayList;	// IMP=0x000000000009fced
- (void)_releaseDisplayList;	// IMP=0x000000000009fc99
- (void)_ensureDisplayListIsCreated;	// IMP=0x000000000009fb3a
- (void)createDisplayList;	// IMP=0x000000000009f9b7
- (struct CGDisplayList *)displayList;	// IMP=0x000000000009f980
- (_Bool)hasArtBox;	// IMP=0x000000000009f8b4
- (_Bool)hasTrimBox;	// IMP=0x000000000009f7e8
- (_Bool)hasBleedBox;	// IMP=0x000000000009f71c
- (_Bool)hasCropBox;	// IMP=0x000000000009f649
- (void)_addBox:(int)arg1 toDictionary:(struct __CFDictionary *)arg2 offset:(struct CGPoint)arg3;	// IMP=0x000000000009f564
- (id)selectionFromPointToBottom:(struct CGPoint)arg1 type:(int)arg2;	// IMP=0x000000000009f473
- (id)selectionFromTopToPoint:(struct CGPoint)arg1 type:(int)arg2;	// IMP=0x000000000009f382
- (id)selectionForAll;	// IMP=0x000000000009f2af
- (id)selectionFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 type:(int)arg3;	// IMP=0x000000000009f156
- (id)selectionForRangeCommon:(struct _NSRange)arg1 isCodeRange:(_Bool)arg2;	// IMP=0x000000000009ebca
- (id)_createAttributedString;	// IMP=0x000000000009eb7a
- (void)_commonInit;	// IMP=0x000000000009e90d
@property(readonly, nonatomic) NSData *dataRepresentation;
- (id)selectionForRange:(struct _NSRange)arg1;	// IMP=0x000000000009e87c
- (id)selectionFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x000000000009e865
- (id)selectionForLineAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009e845
- (id)selectionForWordAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009e775
- (id)selectionForCharacterAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009e6c2
- (id)selectionForRect:(struct CGRect)arg1;	// IMP=0x000000000009e5f9
- (long long)characterIndexAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009e4bd
- (struct CGRect)characterBoundsAtIndex:(long long)arg1;	// IMP=0x000000000009e3b8
@property(readonly, nonatomic) NSAttributedString *attributedString;
@property(readonly, nonatomic) NSString *string;
@property(readonly, nonatomic) unsigned long long numberOfCharacters;
- (void)transformContext:(struct CGContext *)arg1 forBox:(long long)arg2;	// IMP=0x000000000009e18d
- (struct CGAffineTransform)transformForBox:(long long)arg1;	// IMP=0x000000000009e16e
- (struct CGRect)columnFrameAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009e0b4
- (id)selectionForCodeRange:(struct _NSRange)arg1;	// IMP=0x000000000009e09c
- (struct CGImage *)_newCGImageWithBox:(long long)arg1 bitmapSize:(struct PDFSizeIntegral)arg2 scale:(double)arg3 offset:(struct CGPoint)arg4 backgroundColor:(id)arg5 withRotation:(_Bool)arg6 withAntialiasing:(_Bool)arg7 withAnnotations:(_Bool)arg8 withBookmark:(_Bool)arg9 withDelegate:(id)arg10;	// IMP=0x000000000009de14
- (id)imageOfSize:(struct CGSize)arg1 forBox:(long long)arg2 withOptions:(id)arg3;	// IMP=0x000000000009daa0
- (id)thumbnailOfSize:(struct CGSize)arg1 forBox:(long long)arg2 withBookmark:(_Bool)arg3 withAnnotations:(_Bool)arg4;	// IMP=0x000000000009d8e8
- (id)thumbnailOfSize:(struct CGSize)arg1 forBox:(long long)arg2 withBookmark:(_Bool)arg3;	// IMP=0x000000000009d8cd
- (id)thumbnailOfSize:(struct CGSize)arg1 forBox:(long long)arg2;	// IMP=0x000000000009d7dc
- (void)_drawPageCGImageInContext:(struct CGContext *)arg1 withDisplayBox:(long long)arg2;	// IMP=0x000000000009d4ef
- (void)_drawPageImageInContext:(struct CGContext *)arg1 withRotation:(_Bool)arg2 withDisplayBox:(long long)arg3;	// IMP=0x000000000009d312
- (void)_drawBookmarkInContext:(struct CGContext *)arg1;	// IMP=0x000000000009d01b
- (void)_drawWithBox:(long long)arg1 inContext:(struct CGContext *)arg2 withRotation:(_Bool)arg3 isThumbnail:(_Bool)arg4 withAnnotations:(_Bool)arg5 withBookmark:(_Bool)arg6 withDelegate:(id)arg7;	// IMP=0x000000000009cbcb
- (void)drawWithBox:(long long)arg1 inContext:(struct CGContext *)arg2 isThumbnail:(_Bool)arg3;	// IMP=0x000000000009cb64
- (void)drawWithBox:(long long)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x000000000009cb4f
- (void)drawWithBox:(long long)arg1 toContext:(struct CGContext *)arg2;	// IMP=0x000000000009cb3a
- (_Bool)hasPopups;	// IMP=0x000000000009c8ec
- (id)annotationAtRect:(struct CGRect)arg1;	// IMP=0x000000000009c6bf
- (id)annotationAtPoint:(struct CGPoint)arg1;	// IMP=0x000000000009c291
- (void)removeAnnotation:(id)arg1 atIndex:(long long)arg2;	// IMP=0x000000000009bdd5
- (void)removeAnnotation:(id)arg1 withUndo:(_Bool)arg2;	// IMP=0x000000000009bb3f
- (void)removeAnnotation:(id)arg1;	// IMP=0x000000000009bb2b
- (void)insertAnnotation:(id)arg1 atIndex:(long long)arg2;	// IMP=0x000000000009b5c0
- (void)addAnnotation:(id)arg1 withUndo:(_Bool)arg2;	// IMP=0x000000000009b357
- (void)addAnnotation:(id)arg1;	// IMP=0x000000000009b343
@property(nonatomic) _Bool displaysAnnotations;
- (void)fetchAnnotationsWithCompletion:(CDUnknownBlockType)arg1 deliveredOnQueue:(id)arg2;	// IMP=0x000000000009af4f
- (id)annotationsIfAvail;	// IMP=0x000000000009ae77
- (void)lazilyLoadAnnotations;	// IMP=0x000000000009ae0e
- (id)allAnnotations;	// IMP=0x000000000009ade2
@property(readonly, nonatomic) NSArray *annotations;
- (void)postPageDidRotateNotification;	// IMP=0x000000000009ad10
@property(nonatomic) long long rotation;
- (void)postPageDidChangeBoundsNotification;	// IMP=0x000000000009aae8
- (void)setBounds:(struct CGRect)arg1 forBox:(long long)arg2;	// IMP=0x000000000009a926
- (struct CGRect)boundsForBox:(long long)arg1;	// IMP=0x000000000009a657
@property(readonly, nonatomic) NSString *label;
@property(readonly, nonatomic) struct CGPDFPage *pageRef;
@property(readonly, nonatomic) __weak PDFDocument *document;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000099eda
- (void)dealloc;	// IMP=0x0000000000099de2
- (id)initWithImage:(id)arg1;	// IMP=0x0000000000099d37
- (id)init;	// IMP=0x0000000000099cb2
- (void)_drawAnnotationsWithBox:(long long)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x00000000000999cd
- (void)purgeAll;	// IMP=0x0000000000099961
- (struct CGPDFPage *)createPageRefFromImage;	// IMP=0x00000000000998de
- (void)setDocument:(id)arg1;	// IMP=0x00000000000998c9
- (_Bool)setPageRef:(struct CGPDFPage *)arg1;	// IMP=0x0000000000099560
- (void)setAKDidSetupRealPageModelController:(_Bool)arg1;	// IMP=0x0000000000099550
- (_Bool)akDidSetupRealPageModelController;	// IMP=0x0000000000099540
- (void)setupAKPageAdaptorIfNecessary;	// IMP=0x000000000009926d
- (id)initWithRect:(struct CGRect)arg1 andRotation:(long long)arg2;	// IMP=0x00000000000991e4
- (id)initWithImageSource:(struct CGImageSource *)arg1;	// IMP=0x00000000000990d1
- (id)initWithPageRef:(struct CGPDFPage *)arg1;	// IMP=0x000000000009905b
- (id)akPageAdaptor;	// IMP=0x0000000000099046

@end

