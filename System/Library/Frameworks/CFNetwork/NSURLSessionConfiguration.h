//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CFNetwork/NSCopying-Protocol.h>
#import <CFNetwork/NSMutableCopying-Protocol.h>
#import <CFNetwork/NSSecureCoding-Protocol.h>

@class NSArray, NSData, NSDictionary, NSHTTPCookieStorage, NSNumber, NSSet, NSString, NSURL, NSURLCache, NSURLCredentialStorage, _NSHSTSStorage, _NSHTTPAlternativeServicesStorage;
@protocol NSURLSessionAppleIDContext, OS_xpc_object;

@interface NSURLSessionConfiguration : NSObject <NSMutableCopying, NSSecureCoding, NSCopying>
{
    struct HTTPConnectionCacheLimits _limits;	// 8 = 0x8
    _Bool _allowsCellularAccess;	// 48 = 0x30
    _Bool _allowsExpensiveNetworkAccess;	// 49 = 0x31
    _Bool _allowsConstrainedNetworkAccessAPI;	// 50 = 0x32
    _Bool _waitsForConnectivity;	// 51 = 0x33
    _Bool _discretionary;	// 52 = 0x34
    _Bool _sessionSendsLaunchEvents;	// 53 = 0x35
    _Bool _HTTPShouldUsePipelining;	// 54 = 0x36
    _Bool _HTTPShouldSetCookies;	// 55 = 0x37
    _Bool _shouldUseExtendedBackgroundIdleMode;	// 56 = 0x38
    _Bool _requiresPowerPluggedIn;	// 57 = 0x39
    _Bool _reportsDataStalls;	// 58 = 0x3a
    _Bool _allowsExpensiveAccess;	// 59 = 0x3b
    _Bool _allowsConstrainedNetworkAccessSPI;	// 60 = 0x3c
    _Bool _allowsPowerNapScheduling;	// 61 = 0x3d
    _Bool _allowsHSTSWithUntrustedRootCertificate;	// 62 = 0x3e
    _Bool _preventsIdleSleepOnceConnected;	// 63 = 0x3f
    _Bool _sessionSendsLaunchOnDemandEvents;	// 64 = 0x40
    _Bool _shouldSkipPreferredClientCertificateLookup;	// 65 = 0x41
    _Bool _allowsRetryForBackgroundDataTasks;	// 66 = 0x42
    _Bool _onBehalfOfPairedDevice;	// 67 = 0x43
    _Bool _clientIsNotExplicitlyDiscretionary;	// 68 = 0x44
    _Bool _respectsAllowsCellularAccessForDiscretionaryTasks;	// 69 = 0x45
    _Bool _overridesBackgroundSessionAutoRedirect;	// 70 = 0x46
    _Bool _performsEVCertCheck;	// 71 = 0x47
    _Bool _infersDiscretionaryFromOriginatingClient;	// 72 = 0x48
    _Bool _prefersInfraWiFi;	// 73 = 0x49
    _Bool _allowsMultipathTCP;	// 74 = 0x4a
    _Bool _allowsResponseMonitoringDuringBodyTranmission;	// 75 = 0x4b
    _Bool _allowsIndefiniteConnections;	// 76 = 0x4c
    _Bool _allowsTCPFastOpen;	// 77 = 0x4d
    _Bool _allowsTLSSessionTickets;	// 78 = 0x4e
    _Bool _allowsTLSSessionResumption;	// 79 = 0x4f
    _Bool _allowsTLSFalseStart;	// 80 = 0x50
    _Bool _allowsTLSFallback;	// 81 = 0x51
    _Bool _allowsTLSECH;	// 82 = 0x52
    _Bool _preventsDirectWiFiAccess;	// 83 = 0x53
    _Bool _allowTCPIOConnectionStreamTask;	// 84 = 0x54
    _Bool _preventsSystemHTTPProxyAuthentication;	// 85 = 0x55
    _Bool _requiresSecureHTTPSProxyConnection;	// 86 = 0x56
    _Bool _preventsAppSSO;	// 87 = 0x57
    _Bool _allowsReachabilityCheck;	// 88 = 0x58
    _Bool _duetPreauthorized;	// 89 = 0x59
    _Bool _requiresSustainedDataDelivery;	// 90 = 0x5a
    _Bool _ignoreDidReceiveResponseDisposition;	// 91 = 0x5b
    _Bool _alwaysPerformDefaultTrustEvaluation;	// 92 = 0x5c
    _Bool _backgroundSession;	// 93 = 0x5d
    _Bool _phskip_credStorageSet;	// 94 = 0x5e
    _Bool _phskip_urlCacheSet;	// 95 = 0x5f
    _Bool _phskip_cookieStorageSet;	// 96 = 0x60
    _Bool _phskip_hstsStorageSet;	// 97 = 0x61
    _Bool _skip_download_unlink;	// 98 = 0x62
    _Bool _requiresClientToOpenFiles;	// 99 = 0x63
    _Bool _forcesNewConnections;	// 100 = 0x64
    _Bool _supportsAVAssetDownloads;	// 101 = 0x65
    _Bool _proxySession;	// 102 = 0x66
    _Bool _preventsIdleSleep;	// 103 = 0x67
    _Bool _usePipeliningHeuristics;	// 104 = 0x68
    _Bool _shouldPreserveBackgroundSessionDisposition;	// 105 = 0x69
    _Bool _disablesOutOfProcessDirectWiFiUsage;	// 106 = 0x6a
    _Bool _disablesUseOfProxySession;	// 107 = 0x6b
    _Bool _phskip_alternativeServicesStorageSet;	// 108 = 0x6c
    _Bool _usesNWLoader;	// 109 = 0x6d
    _Bool __allowsWCA;	// 110 = 0x6e
    int _TLSMinimumSupportedProtocol;	// 112 = 0x70
    int _TLSMaximumSupportedProtocol;	// 116 = 0x74
    int _loggingPrivacyLevel;	// 120 = 0x78
    int _xpcActivityBudgeted;	// 124 = 0x7c
    int _allowsHTTP3Internal;	// 128 = 0x80
    int _pidForHAR;	// 132 = 0x84
    NSString *_identifier;	// 136 = 0x88
    unsigned long long _requestCachePolicy;	// 144 = 0x90
    double _timeoutIntervalForRequest;	// 152 = 0x98
    double _timeoutIntervalForResource;	// 160 = 0xa0
    unsigned long long _networkServiceType;	// 168 = 0xa8
    NSString *_sharedContainerIdentifier;	// 176 = 0xb0
    NSDictionary *_connectionProxyDictionary;	// 184 = 0xb8
    unsigned long long _HTTPCookieAcceptPolicy;	// 192 = 0xc0
    NSDictionary *_HTTPAdditionalHeaders;	// 200 = 0xc8
    NSArray *_protocolClasses;	// 208 = 0xd0
    long long _multipathServiceType;	// 216 = 0xd8
    NSURL *_directoryForDownloadedFiles;	// 224 = 0xe0
    NSString *_sourceApplicationBundleIdentifier;	// 232 = 0xe8
    NSString *_sourceApplicationSecondaryIdentifier;	// 240 = 0xf0
    NSData *_sourceApplicationAuditTokenData;	// 248 = 0xf8
    NSString *_attributedBundleIdentifier;	// 256 = 0x100
    unsigned long long _TCPAdaptiveReadTimeout;	// 264 = 0x108
    unsigned long long _TCPAdaptiveWriteTimeout;	// 272 = 0x110
    long long _timingDataOptions;	// 280 = 0x118
    id <NSURLSessionAppleIDContext> _appleIDContext;	// 288 = 0x120
    NSData *_atsContext;	// 296 = 0x128
    NSString *_connectionPoolName;	// 304 = 0x130
    NSString *_CTDataConnectionServiceType;	// 312 = 0x138
    NSString *_tlsTrustPinningPolicyName;	// 320 = 0x140
    unsigned long long _customReadBufferSize;	// 328 = 0x148
    double _customReadBufferTimeout;	// 336 = 0x150
    long long _duetPreClearedMode;	// 344 = 0x158
    NSObject<OS_xpc_object> *_xpcActivity;	// 352 = 0x160
    long long _IDSMessageTimeout;	// 360 = 0x168
    NSNumber *_maximumWatchCellularTransferSize;	// 368 = 0x170
    unsigned long long _multipathAlternatePort;	// 376 = 0x178
    NSString *_disposition;	// 384 = 0x180
    NSURLCredentialStorage *_phskip_credStorage;	// 392 = 0x188
    NSURLCache *_phskip_urlCache;	// 400 = 0x190
    NSHTTPCookieStorage *_phskip_cookieStorage;	// 408 = 0x198
    _NSHSTSStorage *_phskip_hstsStorage;	// 416 = 0x1a0
    NSString *_tcpConnectionPoolName;	// 424 = 0x1a8
    NSDictionary *_socketStreamProperties;	// 432 = 0x1b0
    NSSet *_authenticatorStatusCodes;	// 440 = 0x1b8
    NSArray *_contentDispHeadEncFallback;	// 448 = 0x1c0
    NSString *_companionAppBundleIdentifier;	// 456 = 0x1c8
    NSString *_watchAppBundleIdentifier;	// 464 = 0x1d0
    NSString *_watchExtensionBundleIdentifier;	// 472 = 0x1d8
    unsigned long long _forcedNetworkServiceType;	// 480 = 0x1e0
    NSDictionary *_overriddenDelegateOptions;	// 488 = 0x1e8
    NSSet *_suppressedAutoAddedHTTPHeaders;	// 496 = 0x1f0
    long long _expiredDNSBehavior;	// 504 = 0x1f8
    _NSHTTPAlternativeServicesStorage *_phskip_alternativeServicesStorage;	// 512 = 0x200
    NSString *_downloadFileProtectionType;	// 520 = 0x208
    long long __companionProxyPreference;	// 528 = 0x210
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000025cc92
+ (id)backgroundSessionConfiguration:(id)arg1;	// IMP=0x000000000025cc47
+ (id)AVBackgroundSessionConfigurationWithIdentifier:(id)arg1;	// IMP=0x000000000025cc35
+ (id)_AVBackgroundSessionConfigurationWithIdentifier:(id)arg1;	// IMP=0x000000000025cc00
+ (id)backgroundSessionConfigurationWithIdentifier:(id)arg1;	// IMP=0x000000000025cb3d
+ (id)ephemeralSessionConfiguration;	// IMP=0x000000000025ca17
+ (id)sessionConfigurationForSharedSession;	// IMP=0x000000000025c9d7
+ (id)defaultSessionConfiguration;	// IMP=0x000000000025c997
+ (id)_defaultProtocolClasses;	// IMP=0x000000000025c902
+ (id)new;	// IMP=0x000000000025c8f8
+ (void)initialize;	// IMP=0x000000000025c843
+ (id)immutableEffectiveConfigurationFromConfig:(id)arg1;	// IMP=0x00000000001f2d33
- (id).cxx_construct;	// IMP=0x000000000025c48a
@property long long _companionProxyPreference; // @synthesize _companionProxyPreference=__companionProxyPreference;
@property _Bool _allowsWCA; // @synthesize _allowsWCA=__allowsWCA;
@property int _pidForHAR; // @synthesize _pidForHAR;
@property(copy) NSString *_downloadFileProtectionType; // @synthesize _downloadFileProtectionType;
@property _Bool _usesNWLoader; // @synthesize _usesNWLoader;
@property(retain) _NSHTTPAlternativeServicesStorage *_phskip_alternativeServicesStorage; // @synthesize _phskip_alternativeServicesStorage;
@property _Bool _phskip_alternativeServicesStorageSet; // @synthesize _phskip_alternativeServicesStorageSet;
@property int _allowsHTTP3Internal; // @synthesize _allowsHTTP3Internal;
@property long long _expiredDNSBehavior; // @synthesize _expiredDNSBehavior;
@property(copy) NSSet *_suppressedAutoAddedHTTPHeaders; // @synthesize _suppressedAutoAddedHTTPHeaders;
@property(copy) NSDictionary *_overriddenDelegateOptions; // @synthesize _overriddenDelegateOptions;
@property unsigned long long _forcedNetworkServiceType; // @synthesize _forcedNetworkServiceType;
@property(copy) NSString *_watchExtensionBundleIdentifier; // @synthesize _watchExtensionBundleIdentifier;
@property(copy) NSString *_watchAppBundleIdentifier; // @synthesize _watchAppBundleIdentifier;
@property(copy) NSString *_companionAppBundleIdentifier; // @synthesize _companionAppBundleIdentifier;
@property _Bool _disablesUseOfProxySession; // @synthesize _disablesUseOfProxySession;
@property _Bool _disablesOutOfProcessDirectWiFiUsage; // @synthesize _disablesOutOfProcessDirectWiFiUsage;
@property _Bool _shouldPreserveBackgroundSessionDisposition; // @synthesize _shouldPreserveBackgroundSessionDisposition;
@property(copy) NSArray *_contentDispHeadEncFallback; // @synthesize _contentDispHeadEncFallback;
@property _Bool _usePipeliningHeuristics; // @synthesize _usePipeliningHeuristics;
@property _Bool _preventsIdleSleep; // @synthesize _preventsIdleSleep;
@property(copy) NSSet *_authenticatorStatusCodes; // @synthesize _authenticatorStatusCodes;
@property(getter=_isProxySession) _Bool _proxySession; // @synthesize _proxySession;
@property _Bool _supportsAVAssetDownloads; // @synthesize _supportsAVAssetDownloads;
@property(copy) NSDictionary *_socketStreamProperties; // @synthesize _socketStreamProperties;
@property _Bool _forcesNewConnections; // @synthesize _forcesNewConnections;
@property(copy) NSString *_tcpConnectionPoolName; // @synthesize _tcpConnectionPoolName;
@property _Bool _requiresClientToOpenFiles; // @synthesize _requiresClientToOpenFiles;
@property _Bool skip_download_unlink; // @synthesize skip_download_unlink=_skip_download_unlink;
@property _Bool _phskip_hstsStorageSet; // @synthesize _phskip_hstsStorageSet;
@property(retain) _NSHSTSStorage *_phskip_hstsStorage; // @synthesize _phskip_hstsStorage;
@property _Bool _phskip_cookieStorageSet; // @synthesize _phskip_cookieStorageSet;
@property(retain) NSHTTPCookieStorage *_phskip_cookieStorage; // @synthesize _phskip_cookieStorage;
@property _Bool _phskip_urlCacheSet; // @synthesize _phskip_urlCacheSet;
@property(retain) NSURLCache *_phskip_urlCache; // @synthesize _phskip_urlCache;
@property _Bool _phskip_credStorageSet; // @synthesize _phskip_credStorageSet;
@property(retain) NSURLCredentialStorage *_phskip_credStorage; // @synthesize _phskip_credStorage;
@property NSString *disposition; // @synthesize disposition=_disposition;
@property(getter=isBackgroundSession) _Bool backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property unsigned long long _multipathAlternatePort; // @synthesize _multipathAlternatePort;
@property(copy) NSNumber *_maximumWatchCellularTransferSize; // @synthesize _maximumWatchCellularTransferSize;
@property _Bool _alwaysPerformDefaultTrustEvaluation; // @synthesize _alwaysPerformDefaultTrustEvaluation;
@property _Bool _ignoreDidReceiveResponseDisposition; // @synthesize _ignoreDidReceiveResponseDisposition;
@property long long _IDSMessageTimeout; // @synthesize _IDSMessageTimeout;
@property _Bool _requiresSustainedDataDelivery; // @synthesize _requiresSustainedDataDelivery;
@property int _xpcActivityBudgeted; // @synthesize _xpcActivityBudgeted;
@property long long _duetPreClearedMode; // @synthesize _duetPreClearedMode;
@property _Bool _duetPreauthorized; // @synthesize _duetPreauthorized;
@property _Bool _allowsReachabilityCheck; // @synthesize _allowsReachabilityCheck;
@property int _loggingPrivacyLevel; // @synthesize _loggingPrivacyLevel;
@property _Bool _preventsAppSSO; // @synthesize _preventsAppSSO;
@property _Bool _requiresSecureHTTPSProxyConnection; // @synthesize _requiresSecureHTTPSProxyConnection;
@property _Bool _preventsSystemHTTPProxyAuthentication; // @synthesize _preventsSystemHTTPProxyAuthentication;
@property double _customReadBufferTimeout; // @synthesize _customReadBufferTimeout;
@property unsigned long long _customReadBufferSize; // @synthesize _customReadBufferSize;
@property _Bool _allowTCPIOConnectionStreamTask; // @synthesize _allowTCPIOConnectionStreamTask;
@property _Bool _preventsDirectWiFiAccess; // @synthesize _preventsDirectWiFiAccess;
@property _Bool _allowsTLSECH; // @synthesize _allowsTLSECH;
@property _Bool _allowsTLSFallback; // @synthesize _allowsTLSFallback;
@property(copy) NSString *_tlsTrustPinningPolicyName; // @synthesize _tlsTrustPinningPolicyName;
@property _Bool _allowsTLSFalseStart; // @synthesize _allowsTLSFalseStart;
@property _Bool _allowsTLSSessionResumption; // @synthesize _allowsTLSSessionResumption;
@property _Bool _allowsTLSSessionTickets; // @synthesize _allowsTLSSessionTickets;
@property _Bool _allowsTCPFastOpen; // @synthesize _allowsTCPFastOpen;
@property(copy) NSString *_CTDataConnectionServiceType; // @synthesize _CTDataConnectionServiceType;
@property _Bool _allowsIndefiniteConnections; // @synthesize _allowsIndefiniteConnections;
@property _Bool _allowsResponseMonitoringDuringBodyTranmission; // @synthesize _allowsResponseMonitoringDuringBodyTranmission;
@property _Bool _allowsMultipathTCP; // @synthesize _allowsMultipathTCP;
@property _Bool _prefersInfraWiFi; // @synthesize _prefersInfraWiFi;
@property(copy) NSString *_connectionPoolName; // @synthesize _connectionPoolName;
@property _Bool _infersDiscretionaryFromOriginatingClient; // @synthesize _infersDiscretionaryFromOriginatingClient;
@property _Bool _performsEVCertCheck; // @synthesize _performsEVCertCheck;
@property _Bool _overridesBackgroundSessionAutoRedirect; // @synthesize _overridesBackgroundSessionAutoRedirect;
@property _Bool _respectsAllowsCellularAccessForDiscretionaryTasks; // @synthesize _respectsAllowsCellularAccessForDiscretionaryTasks;
@property _Bool _clientIsNotExplicitlyDiscretionary; // @synthesize _clientIsNotExplicitlyDiscretionary;
@property _Bool _onBehalfOfPairedDevice; // @synthesize _onBehalfOfPairedDevice;
@property _Bool _allowsRetryForBackgroundDataTasks; // @synthesize _allowsRetryForBackgroundDataTasks;
@property(copy) NSData *_atsContext; // @synthesize _atsContext;
@property(copy) id <NSURLSessionAppleIDContext> _appleIDContext; // @synthesize _appleIDContext;
@property _Bool _shouldSkipPreferredClientCertificateLookup; // @synthesize _shouldSkipPreferredClientCertificateLookup;
@property long long _timingDataOptions; // @synthesize _timingDataOptions;
@property _Bool _sessionSendsLaunchOnDemandEvents; // @synthesize _sessionSendsLaunchOnDemandEvents;
@property _Bool _preventsIdleSleepOnceConnected; // @synthesize _preventsIdleSleepOnceConnected;
@property _Bool _allowsHSTSWithUntrustedRootCertificate; // @synthesize _allowsHSTSWithUntrustedRootCertificate;
@property _Bool _allowsPowerNapScheduling; // @synthesize _allowsPowerNapScheduling;
@property _Bool _allowsConstrainedNetworkAccess; // @synthesize _allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccessSPI;
@property _Bool _allowsExpensiveAccess; // @synthesize _allowsExpensiveAccess;
@property _Bool _reportsDataStalls; // @synthesize _reportsDataStalls;
@property unsigned long long _TCPAdaptiveWriteTimeout; // @synthesize _TCPAdaptiveWriteTimeout;
@property unsigned long long _TCPAdaptiveReadTimeout; // @synthesize _TCPAdaptiveReadTimeout;
@property(copy) NSString *_attributedBundleIdentifier; // @synthesize _attributedBundleIdentifier;
@property(copy) NSString *_sourceApplicationSecondaryIdentifier; // @synthesize _sourceApplicationSecondaryIdentifier;
@property(copy) NSString *_sourceApplicationBundleIdentifier; // @synthesize _sourceApplicationBundleIdentifier;
@property(copy) NSURL *_directoryForDownloadedFiles; // @synthesize _directoryForDownloadedFiles;
@property _Bool _requiresPowerPluggedIn; // @synthesize _requiresPowerPluggedIn;
@property long long multipathServiceType; // @synthesize multipathServiceType=_multipathServiceType;
@property(copy) NSArray *protocolClasses; // @synthesize protocolClasses=_protocolClasses;
@property _Bool shouldUseExtendedBackgroundIdleMode; // @synthesize shouldUseExtendedBackgroundIdleMode=_shouldUseExtendedBackgroundIdleMode;
@property(copy) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders;
@property unsigned long long HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy;
@property _Bool HTTPShouldSetCookies; // @synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies;
@property _Bool HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property int TLSMaximumSupportedProtocol; // @synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol;
@property int TLSMinimumSupportedProtocol; // @synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol;
@property(copy) NSDictionary *connectionProxyDictionary; // @synthesize connectionProxyDictionary=_connectionProxyDictionary;
@property _Bool sessionSendsLaunchEvents; // @synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents;
@property(copy) NSString *sharedContainerIdentifier; // @synthesize sharedContainerIdentifier=_sharedContainerIdentifier;
@property(getter=isDiscretionary) _Bool discretionary; // @synthesize discretionary=_discretionary;
@property _Bool waitsForConnectivity; // @synthesize waitsForConnectivity=_waitsForConnectivity;
@property _Bool allowsConstrainedNetworkAccess; // @synthesize allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccessAPI;
@property _Bool allowsExpensiveNetworkAccess; // @synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess;
@property _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property unsigned long long requestCachePolicy; // @synthesize requestCachePolicy=_requestCachePolicy;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (struct HTTPConnectionCacheLimits)getConnectionCacheLimits;	// IMP=0x000000000025b912
- (void *)_copyAttribute:(struct __CFString *)arg1;	// IMP=0x000000000025b6c0
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000025a912
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000259dd1
- (void)dealloc;	// IMP=0x0000000000259c55
- (unsigned long long)hash;	// IMP=0x0000000000259168
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000002579af
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000025799d
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000256bf0
@property(copy) NSData *_sourceApplicationAuditTokenData; // @synthesize _sourceApplicationAuditTokenData;
@property(retain) NSObject<OS_xpc_object> *_xpcActivity; // @synthesize _xpcActivity;
@property _Bool _allowsHTTP3;
@property _Bool _allowsSensitiveLogging;
@property double _longLivedConnectionCacheCellPurgeTimeout;
@property double _longLivedConnectionCachePurgeTimeout;
@property double _connectionCacheCellPurgeTimeout;
@property double _connectionCachePurgeTimeout;
@property long long _connectionCacheMinimumFastLanePriority;
@property long long _connectionCacheNumFastLanes;
@property long long _connectionCacheNumPriorityLevels;
@property long long HTTPMaximumConnectionsPerHost;
@property unsigned short TLSMaximumSupportedProtocolVersion;
@property unsigned short TLSMinimumSupportedProtocolVersion;
@property(retain) _NSHSTSStorage *_hstsStorage;
@property(retain) _NSHTTPAlternativeServicesStorage *_alternativeServicesStorage;
@property(retain) NSURLCredentialStorage *URLCredentialStorage;
@property(retain) NSURLCache *URLCache;
@property(retain) NSHTTPCookieStorage *HTTPCookieStorage;
- (struct _CFHSTSPolicy *)copyHSTSPolicy;	// IMP=0x0000000000256576
- (id)copyImmutableVariant:(CDUnknownBlockType)arg1;	// IMP=0x0000000000256546
- (id)init;	// IMP=0x0000000000256517
- (id)_sessionConfiguration;	// IMP=0x00000000001f2d2a
- (id)_initWithConfiguration:(id)arg1;	// IMP=0x00000000001f2d0c

@end

