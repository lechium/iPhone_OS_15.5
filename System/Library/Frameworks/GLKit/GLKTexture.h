//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSString;

@interface GLKTexture : NSObject
{
    struct CGImageBlockSet *_blockSet;	// 8 = 0x8
    struct __CFData *_cfData;	// 16 = 0x10
    int _unpackAlignment;	// 24 = 0x18
    _Bool _requestIssuedForAlphaPremultiplication;	// 28 = 0x1c
    _Bool _requestIssuedToReorientToGL;	// 29 = 0x1d
    _Bool _requestIssuedToInterpretGrayAsAlpha;	// 30 = 0x1e
    _Bool _requestIssuedForSRGB;	// 31 = 0x1f
    unsigned int _primarySurfaceLength;	// 32 = 0x20
    _Bool _requestIssuedForMipmapGeneration;	// 36 = 0x24
    _Bool _hasPremultipliedAlpha;	// 37 = 0x25
    _Bool _isPowerOfTwo;	// 38 = 0x26
    _Bool _isCubeMap;	// 39 = 0x27
    _Bool _isMipmapped;	// 40 = 0x28
    _Bool _isVerticalFlipped;	// 41 = 0x29
    _Bool _hasAlpha;	// 42 = 0x2a
    _Bool _reOrient;	// 43 = 0x2b
    unsigned int _GLTextureName;	// 44 = 0x2c
    unsigned int _bindTarget;	// 48 = 0x30
    unsigned int _textureTarget;	// 52 = 0x34
    unsigned int _internalFormat;	// 56 = 0x38
    unsigned int _format;	// 60 = 0x3c
    unsigned int _type;	// 64 = 0x40
    int _texelFormat;	// 68 = 0x44
    unsigned int _width;	// 72 = 0x48
    unsigned int _height;	// 76 = 0x4c
    unsigned int _orientation;	// 80 = 0x50
    unsigned int _numMipMapLevels;	// 84 = 0x54
    unsigned int _bitsPerPixel;	// 88 = 0x58
    unsigned int _rowBytes;	// 92 = 0x5c
    unsigned int _nComponents;	// 96 = 0x60
    unsigned int _nPrimarySurfaces;	// 100 = 0x64
    unsigned int _nSurfaces;	// 104 = 0x68
    int _loadMode;	// 108 = 0x6c
    int _dataCategory;	// 112 = 0x70
    unsigned int _index;	// 116 = 0x74
    NSData *_imageData;	// 120 = 0x78
    NSString *_label;	// 128 = 0x80
}

@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) _Bool reOrient; // @synthesize reOrient=_reOrient;
@property(nonatomic) _Bool hasAlpha; // @synthesize hasAlpha=_hasAlpha;
@property(nonatomic) _Bool isVerticalFlipped; // @synthesize isVerticalFlipped=_isVerticalFlipped;
@property(nonatomic) _Bool isMipmapped; // @synthesize isMipmapped=_isMipmapped;
@property(nonatomic) _Bool isCubeMap; // @synthesize isCubeMap=_isCubeMap;
@property(nonatomic) _Bool isPowerOfTwo; // @synthesize isPowerOfTwo=_isPowerOfTwo;
@property(readonly) _Bool hasPremultipliedAlpha; // @synthesize hasPremultipliedAlpha=_hasPremultipliedAlpha;
@property(readonly) _Bool requestIssuedForMipmapGeneration; // @synthesize requestIssuedForMipmapGeneration=_requestIssuedForMipmapGeneration;
@property(nonatomic) unsigned int index; // @synthesize index=_index;
@property(nonatomic) int dataCategory; // @synthesize dataCategory=_dataCategory;
@property(nonatomic) int loadMode; // @synthesize loadMode=_loadMode;
@property(nonatomic) unsigned int nSurfaces; // @synthesize nSurfaces=_nSurfaces;
@property(nonatomic) unsigned int nPrimarySurfaces; // @synthesize nPrimarySurfaces=_nPrimarySurfaces;
@property(nonatomic) unsigned int nComponents; // @synthesize nComponents=_nComponents;
@property(nonatomic) unsigned int rowBytes; // @synthesize rowBytes=_rowBytes;
@property(nonatomic) unsigned int bitsPerPixel; // @synthesize bitsPerPixel=_bitsPerPixel;
@property(nonatomic) unsigned int numMipMapLevels; // @synthesize numMipMapLevels=_numMipMapLevels;
@property(nonatomic) unsigned int orientation; // @synthesize orientation=_orientation;
@property(nonatomic) unsigned int height; // @synthesize height=_height;
@property(nonatomic) unsigned int width; // @synthesize width=_width;
@property(nonatomic) int texelFormat; // @synthesize texelFormat=_texelFormat;
@property(nonatomic) unsigned int type; // @synthesize type=_type;
@property(nonatomic) unsigned int format; // @synthesize format=_format;
@property(nonatomic) unsigned int internalFormat; // @synthesize internalFormat=_internalFormat;
@property(nonatomic) unsigned int textureTarget; // @synthesize textureTarget=_textureTarget;
@property(nonatomic) unsigned int bindTarget; // @synthesize bindTarget=_bindTarget;
@property(nonatomic) unsigned int GLTextureName; // @synthesize GLTextureName=_GLTextureName;
@property(readonly) NSData *imageData; // @synthesize imageData=_imageData;
- (_Bool)premultiplyWithAlpha:(void *)arg1 source:(void *)arg2 withWidth:(unsigned int)arg3 withHeight:(unsigned int)arg4 withRowBytes:(unsigned int)arg5 error:(id *)arg6;	// IMP=0x0000000000017d3c
- (_Bool)reorientToGL:(void *)arg1 source:(void *)arg2 withWidth:(unsigned int)arg3 withHeight:(unsigned int)arg4 withRowBytes:(unsigned int)arg5 error:(id *)arg6;	// IMP=0x0000000000017bd0
- (_Bool)determinePVRFormat:(unsigned int)arg1;	// IMP=0x00000000000179af
- (_Bool)determineCGImageBlockFormatWithComponentType:(int)arg1 andPixelSize:(unsigned long long)arg2 andColorModel:(int)arg3;	// IMP=0x00000000000178fc
- (_Bool)uploadToGLTexture:(unsigned int)arg1 error:(id *)arg2;	// IMP=0x0000000000017421
- (_Bool)_uploadToGLTexture:(unsigned int)arg1 data:(id)arg2 width:(int)arg3 height:(int)arg4 dataCategory:(int)arg5 cubeMapIndex:(int)arg6 mipMapIndex:(int)arg7 error:(id *)arg8;	// IMP=0x0000000000017110
- (_Bool)loadCGImage:(struct CGImage *)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001702d
- (_Bool)loadWithData:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000016dfe
- (_Bool)decodeCGImage:(struct CGImage *)arg1;	// IMP=0x0000000000016db3
- (_Bool)decodeCGImageImageProvider:(struct CGImage *)arg1 CGImageProvider:(struct CGImageProvider *)arg2;	// IMP=0x0000000000016b59
- (_Bool)decodeCGImageDataProvider:(struct CGImage *)arg1;	// IMP=0x00000000000168c1
- (void *)alignmentFix:(unsigned int)arg1 data:(const void *)arg2;	// IMP=0x00000000000167f0
- (_Bool)loadPVRTCData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000165f0
- (id)initWithDecodedData:(id)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 rowBytes:(unsigned int)arg4 texture:(id)arg5 cubeMapIndex:(int)arg6 options:(id)arg7 error:(id *)arg8;	// IMP=0x000000000001646d
- (id)initWithCGImage:(struct CGImage *)arg1 forceCubeMap:(_Bool)arg2 wasCubeMap:(_Bool *)arg3 cubeMapIndex:(int)arg4 options:(id)arg5 error:(id *)arg6;	// IMP=0x00000000000163d6
- (id)initWithData:(id)arg1 forceCubeMap:(_Bool)arg2 wasCubeMap:(_Bool *)arg3 cubeMapIndex:(int)arg4 options:(id)arg5 error:(id *)arg6;	// IMP=0x0000000000016298
- (_Bool)canHonorSRGBrequest;	// IMP=0x0000000000016284
- (_Bool)shouldApplyReorientToGL;	// IMP=0x000000000001626d
- (_Bool)shouldApplyPremultiplication;	// IMP=0x000000000001624a
- (void)updateRequestedOperationsFromOptions:(id)arg1;	// IMP=0x0000000000016171
- (void)dealloc;	// IMP=0x0000000000016108
- (id)init;	// IMP=0x00000000000160b0

@end

