//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, VNFaceLandmarkRegion2D;

@interface VNFaceLandmarks2D
{
    VNFaceLandmarkRegion2D *_allPoints;	// 88 = 0x58
    struct os_unfair_lock_s _allPointsLock;	// 96 = 0x60
    VNFaceLandmarkRegion2D *_faceContour;	// 104 = 0x68
    struct os_unfair_lock_s _faceContourLock;	// 112 = 0x70
    VNFaceLandmarkRegion2D *_leftEye;	// 120 = 0x78
    struct os_unfair_lock_s _leftEyeLock;	// 128 = 0x80
    VNFaceLandmarkRegion2D *_rightEye;	// 136 = 0x88
    struct os_unfair_lock_s _rightEyeLock;	// 144 = 0x90
    VNFaceLandmarkRegion2D *_leftEyebrow;	// 152 = 0x98
    struct os_unfair_lock_s _leftEyebrowLock;	// 160 = 0xa0
    VNFaceLandmarkRegion2D *_rightEyebrow;	// 168 = 0xa8
    struct os_unfair_lock_s _rightEyebrowLock;	// 176 = 0xb0
    VNFaceLandmarkRegion2D *_nose;	// 184 = 0xb8
    struct os_unfair_lock_s _noseLock;	// 192 = 0xc0
    VNFaceLandmarkRegion2D *_noseCrest;	// 200 = 0xc8
    struct os_unfair_lock_s _noseCrestLock;	// 208 = 0xd0
    VNFaceLandmarkRegion2D *_medianLine;	// 216 = 0xd8
    struct os_unfair_lock_s _medianLineLock;	// 224 = 0xe0
    VNFaceLandmarkRegion2D *_outerLips;	// 232 = 0xe8
    struct os_unfair_lock_s _outerLipsLock;	// 240 = 0xf0
    VNFaceLandmarkRegion2D *_innerLips;	// 248 = 0xf8
    struct os_unfair_lock_s _innerLipsLock;	// 256 = 0x100
    VNFaceLandmarkRegion2D *_leftPupil;	// 264 = 0x108
    struct os_unfair_lock_s _leftPupilLock;	// 272 = 0x110
    VNFaceLandmarkRegion2D *_rightPupil;	// 280 = 0x118
    struct os_unfair_lock_s _rightPupilLock;	// 288 = 0x120
    unsigned long long _constellation;	// 296 = 0x128
    NSArray *_precisionEstimatesPerPoint;	// 304 = 0x130
}

+ (id)_createNSArrayFrom:(id)arg1 withPointIndices:(const int *)arg2 andPointCount:(unsigned long long)arg3;	// IMP=0x0000000000189e99
+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000189e91
+ (id)defaultOriginatingRequestClassNameForRequestRevision:(unsigned long long)arg1;	// IMP=0x0000000000189e84
+ (unsigned long long)landmarkPointSizeInBytes;	// IMP=0x0000000000189e79
- (void).cxx_destruct;	// IMP=0x0000000000189d7c
@property(copy) NSArray *precisionEstimatesPerPoint; // @synthesize precisionEstimatesPerPoint=_precisionEstimatesPerPoint;
@property(readonly) unsigned long long constellation; // @synthesize constellation=_constellation;
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000189bc5
@property(readonly) VNFaceLandmarkRegion2D *rightPupil; // @synthesize rightPupil=_rightPupil;
@property(readonly) VNFaceLandmarkRegion2D *leftPupil; // @synthesize leftPupil=_leftPupil;
@property(readonly) VNFaceLandmarkRegion2D *innerLips; // @synthesize innerLips=_innerLips;
@property(readonly) VNFaceLandmarkRegion2D *outerLips; // @synthesize outerLips=_outerLips;
@property(readonly) VNFaceLandmarkRegion2D *medianLine; // @synthesize medianLine=_medianLine;
@property(readonly) VNFaceLandmarkRegion2D *noseCrest; // @synthesize noseCrest=_noseCrest;
@property(readonly) VNFaceLandmarkRegion2D *nose; // @synthesize nose=_nose;
@property(readonly) VNFaceLandmarkRegion2D *rightEyebrow; // @synthesize rightEyebrow=_rightEyebrow;
@property(readonly) VNFaceLandmarkRegion2D *leftEyebrow; // @synthesize leftEyebrow=_leftEyebrow;
@property(readonly) VNFaceLandmarkRegion2D *rightEye; // @synthesize rightEye=_rightEye;
@property(readonly) VNFaceLandmarkRegion2D *leftEye; // @synthesize leftEye=_leftEye;
- (id)_createFaceLandmarks2DRegionFromPointIndexes:(const int *)arg1 andPointCount:(unsigned long long)arg2;	// IMP=0x000000000018911e
@property(readonly) VNFaceLandmarkRegion2D *faceContour; // @synthesize faceContour=_faceContour;
@property(readonly) VNFaceLandmarkRegion2D *allPoints; // @synthesize allPoints=_allPoints;
- (void *)_createPointArray:(const int *)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000188a2d
- (unsigned long long)hash;	// IMP=0x00000000001889c3
- (void)_initLocks;	// IMP=0x0000000000188939
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000018887b
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000188478
- (id)initWithOriginatingRequestSpecifier:(id)arg1 pointsData:(id)arg2 pointCount:(unsigned long long)arg3 constellation:(unsigned long long)arg4 precisionEstimatesPerPoint:(id)arg5 userFacingBBox:(struct CGRect)arg6 alignedBBox:(struct _Geometry2D_rect2D_)arg7 landmarkScore:(float)arg8;	// IMP=0x000000000018833d

@end

