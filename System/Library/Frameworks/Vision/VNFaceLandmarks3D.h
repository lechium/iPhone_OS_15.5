//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class VNFaceLandmarkRegion3D;

@interface VNFaceLandmarks3D
{
    VNFaceLandmarkRegion3D *_allPoints;	// 88 = 0x58
    struct os_unfair_lock_s _allPointsLock;	// 96 = 0x60
    VNFaceLandmarkRegion3D *_faceContour;	// 104 = 0x68
    struct os_unfair_lock_s _faceContourLock;	// 112 = 0x70
    VNFaceLandmarkRegion3D *_leftEye;	// 120 = 0x78
    struct os_unfair_lock_s _leftEyeLock;	// 128 = 0x80
    VNFaceLandmarkRegion3D *_rightEye;	// 136 = 0x88
    struct os_unfair_lock_s _rightEyeLock;	// 144 = 0x90
    VNFaceLandmarkRegion3D *_leftEyebrow;	// 152 = 0x98
    struct os_unfair_lock_s _leftEyebrowLock;	// 160 = 0xa0
    VNFaceLandmarkRegion3D *_rightEyebrow;	// 168 = 0xa8
    struct os_unfair_lock_s _rightEyebrowLock;	// 176 = 0xb0
    VNFaceLandmarkRegion3D *_nose;	// 184 = 0xb8
    struct os_unfair_lock_s _noseLock;	// 192 = 0xc0
    VNFaceLandmarkRegion3D *_noseCrest;	// 200 = 0xc8
    struct os_unfair_lock_s _noseCrestLock;	// 208 = 0xd0
    VNFaceLandmarkRegion3D *_medianLine;	// 216 = 0xd8
    struct os_unfair_lock_s _medianLineLock;	// 224 = 0xe0
    VNFaceLandmarkRegion3D *_outerLips;	// 232 = 0xe8
    struct os_unfair_lock_s _outerLipsLock;	// 240 = 0xf0
    VNFaceLandmarkRegion3D *_innerLips;	// 248 = 0xf8
    struct os_unfair_lock_s _innerLipsLock;	// 256 = 0x100
}

+ (_Bool)supportsSecureCoding;	// IMP=0x000000000018b405
+ (id)defaultOriginatingRequestClassNameForRequestRevision:(unsigned long long)arg1;	// IMP=0x000000000018b3f8
+ (unsigned long long)landmarkPointSizeInBytes;	// IMP=0x000000000018b3ed
- (void).cxx_destruct;	// IMP=0x000000000018b323
@property(readonly) VNFaceLandmarkRegion3D *innerLips; // @synthesize innerLips=_innerLips;
@property(readonly) VNFaceLandmarkRegion3D *outerLips; // @synthesize outerLips=_outerLips;
@property(readonly) VNFaceLandmarkRegion3D *medianLine; // @synthesize medianLine=_medianLine;
@property(readonly) VNFaceLandmarkRegion3D *noseCrest; // @synthesize noseCrest=_noseCrest;
@property(readonly) VNFaceLandmarkRegion3D *nose; // @synthesize nose=_nose;
@property(readonly) VNFaceLandmarkRegion3D *rightEyebrow; // @synthesize rightEyebrow=_rightEyebrow;
@property(readonly) VNFaceLandmarkRegion3D *leftEyebrow; // @synthesize leftEyebrow=_leftEyebrow;
@property(readonly) VNFaceLandmarkRegion3D *rightEye; // @synthesize rightEye=_rightEye;
@property(readonly) VNFaceLandmarkRegion3D *leftEye; // @synthesize leftEye=_leftEye;
@property(readonly) VNFaceLandmarkRegion3D *faceContour; // @synthesize faceContour=_faceContour;
@property(readonly) VNFaceLandmarkRegion3D *allPoints; // @synthesize allPoints=_allPoints;
- (void *)_createPointArray:(const int *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000018a3fb
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000018a381
- (void)_initLocks;	// IMP=0x000000000018a30b
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000018a097
- (id)initWithOriginatingRequestSpecifier:(id)arg1 pointsData:(id)arg2 pointCount:(unsigned long long)arg3 userFacingBBox:(struct CGRect)arg4 alignedBBox:(struct _Geometry2D_rect2D_)arg5 landmarkScore:(float)arg6;	// IMP=0x0000000000189f9f

@end

