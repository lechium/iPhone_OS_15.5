//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PencilKit/PKDrawingPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKPaletteAdditionalOptionsViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteColorPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteContentViewInputAssistantDelegate-Protocol.h>
#import <PencilKit/PKPaletteFloatingKeyboardControllerDelegate-Protocol.h>
#import <PencilKit/PKPalettePopoverUpdating-Protocol.h>
#import <PencilKit/PKPaletteToolPickerViewDataSource-Protocol.h>
#import <PencilKit/PKPaletteToolPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteToolPreviewDelegate-Protocol.h>
#import <PencilKit/PKPaletteUndoRedoViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKTextInputWindowFirstResponderControllerDelegate-Protocol.h>
#import <PencilKit/UIPencilInteractionDelegate-Protocol.h>

@class MTMaterialView, NSArray, NSLayoutConstraint, NSString, NSUndoManager, PKPaletteContentView, PKPaletteFloatingKeyboardController, PKPaletteInputAssistantButtonProvider, PKPaletteTapToRadarCommand, PKPaletteToolView, PKTextInputWindowFirstResponder, PKTextInputWindowFirstResponderController, PKTool, UIPencilInteraction, UIView, UIViewController, UIWindowScene;
@protocol PKDrawingPaletteViewDelegate, PKPaletteViewAnnotationDelegate;

@interface PKDrawingPaletteView <PKDrawingPaletteViewStateSubject, PKPaletteUndoRedoViewDelegate, PKPaletteToolPickerViewDelegate, PKPaletteColorPickerViewDelegate, PKPaletteAdditionalOptionsViewDelegate, PKPaletteToolPreviewDelegate, PKPalettePopoverUpdating, PKTextInputWindowFirstResponderControllerDelegate, PKPaletteFloatingKeyboardControllerDelegate, PKPaletteContentViewInputAssistantDelegate, PKPaletteToolPickerViewDataSource, UIPencilInteractionDelegate, PKPaletteViewStateSubject>
{
    NSUndoManager *_undoManager;	// 8 = 0x8
    _Bool _fingerDrawsOptionEnabled;	// 16 = 0x10
    _Bool _showsRuler;	// 17 = 0x11
    _Bool _showsPlusButton;	// 18 = 0x12
    _Bool _pencilInteractionEnabledWhenNotVisible;	// 19 = 0x13
    _Bool _wantsClearBackgroundColorInCompactSize;	// 20 = 0x14
    _Bool _wantsUndoRedoButtonsVisibleInCompactSize;	// 21 = 0x15
    _Bool _wantsEllipsisButtonVisibleInCompactSize;	// 22 = 0x16
    _Bool _wantsBottomLineDividerVisibleInCompactSize;	// 23 = 0x17
    _Bool _useEqualSpacingLayoutInCompactSize;	// 24 = 0x18
    _Bool _wantsMulticolorSwatchShadowInCompactSize;	// 25 = 0x19
    _Bool _wantsUndoRedoButtonsShadowInCompactSize;	// 26 = 0x1a
    _Bool _isEditingOpacity;	// 27 = 0x1b
    _Bool _editingStrokeSelection;	// 28 = 0x1c
    _Bool _editingTextSelection;	// 29 = 0x1d
    long long _colorUserInterfaceStyle;	// 32 = 0x20
    NSArray *_tools;	// 40 = 0x28
    unsigned long long _indexOfSelectedTool;	// 48 = 0x30
    double _interItemToolsSpacingInCompactSize;	// 56 = 0x38
    double _interItemUndoRedoButtonsSpacingInCompactSize;	// 64 = 0x40
    MTMaterialView *_backgroundView;	// 72 = 0x48
    PKPaletteContentView *_contentView;	// 80 = 0x50
    NSLayoutConstraint *_contentViewBottomConstraint;	// 88 = 0x58
    NSLayoutConstraint *_compactContentViewHeightConstraint;	// 96 = 0x60
    UIView *_bottomLineDividerView;	// 104 = 0x68
    double _interItemUndoRedoButtonsSpacing;	// 112 = 0x70
    PKTextInputWindowFirstResponderController *_firstResponderController;	// 120 = 0x78
    PKPaletteFloatingKeyboardController *_floatingKeyboardController;	// 128 = 0x80
    PKPaletteInputAssistantButtonProvider *_inputAssistantButtonProvider;	// 136 = 0x88
    UIPencilInteraction *_pencilInteraction;	// 144 = 0x90
    long long _contextEditingMode;	// 152 = 0x98
    PKPaletteTapToRadarCommand *_tapToRadarCommand;	// 160 = 0xa0
    id <PKPaletteViewAnnotationDelegate> _annotationDelegate;	// 168 = 0xa8
    UIView *_opacityEditingView;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x000000000025caa7
@property(nonatomic, getter=isEditingTextSelection) _Bool editingTextSelection; // @synthesize editingTextSelection=_editingTextSelection;
@property(nonatomic, getter=isEditingStrokeSelection) _Bool editingStrokeSelection; // @synthesize editingStrokeSelection=_editingStrokeSelection;
@property(readonly, nonatomic) UIView *opacityEditingView; // @synthesize opacityEditingView=_opacityEditingView;
@property(nonatomic) __weak id <PKPaletteViewAnnotationDelegate> annotationDelegate; // @synthesize annotationDelegate=_annotationDelegate;
@property(retain, nonatomic) PKPaletteTapToRadarCommand *tapToRadarCommand; // @synthesize tapToRadarCommand=_tapToRadarCommand;
@property(nonatomic) long long contextEditingMode; // @synthesize contextEditingMode=_contextEditingMode;
@property(readonly, nonatomic) UIPencilInteraction *pencilInteraction; // @synthesize pencilInteraction=_pencilInteraction;
@property(retain, nonatomic) PKPaletteInputAssistantButtonProvider *inputAssistantButtonProvider; // @synthesize inputAssistantButtonProvider=_inputAssistantButtonProvider;
@property(retain, nonatomic) PKPaletteFloatingKeyboardController *floatingKeyboardController; // @synthesize floatingKeyboardController=_floatingKeyboardController;
@property(retain, nonatomic) PKTextInputWindowFirstResponderController *firstResponderController; // @synthesize firstResponderController=_firstResponderController;
@property(nonatomic) double interItemUndoRedoButtonsSpacing; // @synthesize interItemUndoRedoButtonsSpacing=_interItemUndoRedoButtonsSpacing;
@property(nonatomic) _Bool isEditingOpacity; // @synthesize isEditingOpacity=_isEditingOpacity;
@property(retain, nonatomic) UIView *bottomLineDividerView; // @synthesize bottomLineDividerView=_bottomLineDividerView;
@property(retain, nonatomic) NSLayoutConstraint *compactContentViewHeightConstraint; // @synthesize compactContentViewHeightConstraint=_compactContentViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *contentViewBottomConstraint; // @synthesize contentViewBottomConstraint=_contentViewBottomConstraint;
@property(retain, nonatomic) PKPaletteContentView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) MTMaterialView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) _Bool wantsUndoRedoButtonsShadowInCompactSize; // @synthesize wantsUndoRedoButtonsShadowInCompactSize=_wantsUndoRedoButtonsShadowInCompactSize;
@property(nonatomic) _Bool wantsMulticolorSwatchShadowInCompactSize; // @synthesize wantsMulticolorSwatchShadowInCompactSize=_wantsMulticolorSwatchShadowInCompactSize;
@property(nonatomic) _Bool useEqualSpacingLayoutInCompactSize; // @synthesize useEqualSpacingLayoutInCompactSize=_useEqualSpacingLayoutInCompactSize;
@property(nonatomic) _Bool wantsBottomLineDividerVisibleInCompactSize; // @synthesize wantsBottomLineDividerVisibleInCompactSize=_wantsBottomLineDividerVisibleInCompactSize;
@property(nonatomic) _Bool wantsEllipsisButtonVisibleInCompactSize; // @synthesize wantsEllipsisButtonVisibleInCompactSize=_wantsEllipsisButtonVisibleInCompactSize;
@property(nonatomic) _Bool wantsUndoRedoButtonsVisibleInCompactSize; // @synthesize wantsUndoRedoButtonsVisibleInCompactSize=_wantsUndoRedoButtonsVisibleInCompactSize;
@property(nonatomic) _Bool wantsClearBackgroundColorInCompactSize; // @synthesize wantsClearBackgroundColorInCompactSize=_wantsClearBackgroundColorInCompactSize;
@property(nonatomic, getter=isPencilInteractionEnabledWhenNotVisible) _Bool pencilInteractionEnabledWhenNotVisible; // @synthesize pencilInteractionEnabledWhenNotVisible=_pencilInteractionEnabledWhenNotVisible;
@property(nonatomic) double interItemUndoRedoButtonsSpacingInCompactSize; // @synthesize interItemUndoRedoButtonsSpacingInCompactSize=_interItemUndoRedoButtonsSpacingInCompactSize;
@property(nonatomic) double interItemToolsSpacingInCompactSize; // @synthesize interItemToolsSpacingInCompactSize=_interItemToolsSpacingInCompactSize;
@property(readonly, nonatomic) unsigned long long indexOfSelectedTool; // @synthesize indexOfSelectedTool=_indexOfSelectedTool;
@property(copy, nonatomic) NSArray *tools; // @synthesize tools=_tools;
@property(nonatomic) _Bool showsPlusButton; // @synthesize showsPlusButton=_showsPlusButton;
@property(nonatomic) _Bool showsRuler; // @synthesize showsRuler=_showsRuler;
@property(nonatomic, getter=isFingerDrawsOptionEnabled) _Bool fingerDrawsOptionEnabled; // @synthesize fingerDrawsOptionEnabled=_fingerDrawsOptionEnabled;
@property(nonatomic) long long colorUserInterfaceStyle; // @synthesize colorUserInterfaceStyle=_colorUserInterfaceStyle;
- (void)_toolViewStateDidChange:(id)arg1;	// IMP=0x000000000025c6b8
- (id)_paletteToolViewFromTool:(id)arg1;	// IMP=0x000000000025c553
- (id)toolPickerView:(id)arg1 viewForToolAtIndex:(long long)arg2;	// IMP=0x000000000025c4ca
- (long long)numberOfToolsInToolPickerView:(id)arg1;	// IMP=0x000000000025c4ad
@property(readonly, nonatomic) PKPaletteToolView *selectedToolView;
@property(readonly, nonatomic) PKTool *selectedTool;
- (_Bool)_canSelectToolAtIndex:(unsigned long long)arg1;	// IMP=0x000000000025c2d8
- (void)_selectToolAtIndex:(unsigned long long)arg1 updateUI:(_Bool)arg2 notifyDelegate:(_Bool)arg3;	// IMP=0x000000000025c0dd
- (void)selectToolAtIndex:(unsigned long long)arg1;	// IMP=0x000000000025c0c3
- (_Bool)_canReplaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;	// IMP=0x000000000025c080
- (void)_replaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;	// IMP=0x000000000025bf33
- (void)_setTools:(id)arg1 resetSelectedTool:(_Bool)arg2 updateUI:(_Bool)arg3 notifyDelegate:(_Bool)arg4;	// IMP=0x000000000025bd57
- (id)_currentFirstResponder;	// IMP=0x000000000025bc94
- (void)_updateHandwritingAssistantItemsFromResponder:(id)arg1;	// IMP=0x000000000025bbbe
- (void)_updateHandwritingAssistantItems;	// IMP=0x000000000025bb72
- (void)_updateKeyboardSceneDelegateInputAssistantSupressionState;	// IMP=0x000000000025baaf
- (id)responderForFloatingKeyboardController:(id)arg1;	// IMP=0x000000000025ba9d
- (_Bool)isHandwritingToolSelected;	// IMP=0x000000000025ba2f
- (_Bool)_hasToolWithIdentifier:(id)arg1;	// IMP=0x000000000025b907
@property(readonly, nonatomic) _Bool hasHandwritingTool;
@property(readonly, nonatomic) UIView *contextualEditingView;
- (struct CGRect)plusButtonFrame;	// IMP=0x000000000025b76e
- (void)dismissPalettePopoverWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000025b489
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000025b365
- (void)endOpacityEditing;	// IMP=0x000000000025b1a6
- (void)startOpacityEditing;	// IMP=0x000000000025ab93
- (void)didEndAppearanceAnimation;	// IMP=0x000000000025a9b9
- (void)willStartAppearanceAnimation:(_Bool)arg1;	// IMP=0x000000000025a80a
- (void)configureForDockedAtEdge:(unsigned long long)arg1;	// IMP=0x000000000025a760
- (void)configureForDockedAtCorner;	// IMP=0x000000000025a705
- (_Bool)_canHandlePencilInteraction;	// IMP=0x000000000025a5f8
- (void)_performPencilPreferredActionShowColorPalette;	// IMP=0x000000000025a39e
- (void)_performPencilPreferredActionSwitchPrevious;	// IMP=0x000000000025a27b
- (void)_performPencilPreferredActionSwitchEraser;	// IMP=0x000000000025a158
- (void)pencilInteractionDidTap:(id)arg1;	// IMP=0x0000000000259f77
- (id)keyboardSelectionMenuForContentView:(id)arg1;	// IMP=0x0000000000259f27
- (void)contentViewDidDismissInputAssistantView:(id)arg1;	// IMP=0x0000000000259f21
- (void)contentViewDidSelectInputAssistantReturnKeyItem:(id)arg1;	// IMP=0x0000000000259f08
- (void)contentViewDidSelectInputAssistantKeyboardItem:(id)arg1;	// IMP=0x0000000000259ef6
- (void)_presentOrDismissFloatingKeyboard;	// IMP=0x0000000000259eb9
- (id)keyboardSelectionMenuForAdditionalOptionsView:(id)arg1;	// IMP=0x0000000000259e69
- (void)additionalOptionsViewDidPressTapToRadarButton:(id)arg1;	// IMP=0x0000000000259e2c
- (void)additionalOptionsViewDidPressReturnKeyButton:(id)arg1;	// IMP=0x0000000000259e13
- (void)additionalOptionsViewDidPressKeyboardButton:(id)arg1;	// IMP=0x0000000000259e01
- (void)additionalOptionsView:(id)arg1 didToggleAutoHideOption:(_Bool)arg2;	// IMP=0x0000000000259ded
- (void)additionalOptionsViewDidSelectPlusButton:(id)arg1;	// IMP=0x0000000000259da1
- (void)toolPreviewDidChangeToolColor:(id)arg1;	// IMP=0x0000000000259d3b
- (void)_centerPaletteContainerSubviewToCurrentlySelectedToolForEdge:(unsigned long long)arg1 needsContainerViewLayout:(_Bool)arg2;	// IMP=0x0000000000259b16
- (void)_willDockPaletteToCorner:(unsigned long long)arg1;	// IMP=0x0000000000259a89
- (void)_willDockPaletteToEdge:(unsigned long long)arg1 prepareForExpansion:(_Bool)arg2 isPaletteChangingOrientation:(_Bool)arg3;	// IMP=0x0000000000259948
- (void)hostView:(id)arg1 didDockPaletteToPosition:(long long)arg2;	// IMP=0x0000000000259907
- (void)hostView:(id)arg1 willDockPaletteToPosition:(long long)arg2 prepareForExpansion:(_Bool)arg3;	// IMP=0x00000000002598d8
- (_Bool)colorPickerShouldDisplayColorSelection:(id)arg1;	// IMP=0x0000000000259894
- (void)colorPickerDidChangeSelectedColor:(id)arg1 isFromExtendedColorPicker:(_Bool)arg2;	// IMP=0x00000000002595b1
- (double)toolPickerView:(id)arg1 widthForToolAtIndex:(long long)arg2 isCompactSize:(_Bool)arg3;	// IMP=0x000000000025952b
- (void)toolPickerViewDidChangeTraitCollectionSizeClass:(id)arg1;	// IMP=0x0000000000259519
- (void)toolPickerDidToggleRulerTool:(id)arg1;	// IMP=0x000000000025947c
- (void)toolPicker:(id)arg1 didSelectTool:(id)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x000000000025945c
- (void)floatingKeyboardController:(id)arg1 didChangeKeyboardType:(long long)arg2;	// IMP=0x00000000002593bf
- (void)floatingKeyboardControllerWillHide:(id)arg1;	// IMP=0x0000000000259380
- (void)floatingKeyboardControllerWillShow:(id)arg1;	// IMP=0x000000000025933e
@property(readonly, nonatomic) PKTextInputWindowFirstResponder *windowFirstResponder;
- (void)windowFirstResponderController:(id)arg1 didChangeFirstResponder:(id)arg2;	// IMP=0x0000000000259087
@property(readonly, nonatomic) UIWindowScene *windowScene;
- (void)undoRedoViewDidTapRedo:(id)arg1;	// IMP=0x0000000000258fce
- (void)undoRedoViewDidTapUndo:(id)arg1;	// IMP=0x0000000000258f65
- (void)_updateToolPreviewForEdge:(unsigned long long)arg1;	// IMP=0x0000000000258a34
- (_Bool)_isPaletteContentViewHidden;	// IMP=0x00000000002589c6
- (void)_updateToolPreview;	// IMP=0x00000000002588cb
- (id)_selectedToolViewInToolPicker;	// IMP=0x0000000000258851
- (id)_selectedColor;	// IMP=0x00000000002585b6
- (void)_updateColorPickerSelectedColor;	// IMP=0x0000000000258529
- (void)setSelectedAnnotationType:(long long)arg1;	// IMP=0x00000000002584c4
- (void)_setSelectedToolColor:(id)arg1 ignoreColorOpacity:(_Bool)arg2;	// IMP=0x0000000000258247
@property(readonly, nonatomic, getter=isEllipsisButtonVisible) _Bool ellipsisButtonVisible;
- (unsigned long long)paletteViewType;	// IMP=0x0000000000257fe2
- (void)_changeWasDone:(id)arg1;	// IMP=0x0000000000257fd0
- (void)_changeWasRedone:(id)arg1;	// IMP=0x0000000000257fbe
- (void)_changeWasUndone:(id)arg1;	// IMP=0x0000000000257fac
- (void)_releaseUndoManager;	// IMP=0x0000000000257ed7
- (void)setUndoManager:(id)arg1;	// IMP=0x0000000000257dbf
- (id)undoManager;	// IMP=0x0000000000257d6c
@property(readonly, nonatomic) long long floatingKeyboardType;
@property(readonly, nonatomic) _Bool enableKeyboardButtons;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(readonly, copy, nonatomic) NSArray *inputAssistantItems;
- (void)updateUndoRedo;	// IMP=0x0000000000257643
@property(readonly, nonatomic, getter=isAnnotationSupportEnabled) _Bool annotationSupportEnabled;
- (id)_clippingViewBackgroundColor;	// IMP=0x000000000025746d
- (void)layoutSubviews;	// IMP=0x0000000000257033
- (void)updatePopoverUI;	// IMP=0x0000000000256efe
- (double)_paletteWidthForHorizontalOrientation;	// IMP=0x0000000000256e25
- (double)_paletteHeightForVerticalOrientation;	// IMP=0x0000000000256d4c
- (struct CGSize)paletteSizeForEdge:(unsigned long long)arg1;	// IMP=0x0000000000256cc1
- (double)compactPaletteHeight;	// IMP=0x0000000000256cb3
- (_Bool)_isPaletteConsideredMinimized;	// IMP=0x0000000000256c1e
- (_Bool)_shouldShowFingerDrawsOption;	// IMP=0x0000000000256be5
- (_Bool)_canShowFingerDrawsOption;	// IMP=0x0000000000256b9d
- (void)_updateUI;	// IMP=0x00000000002562c6
- (_Bool)shouldAdjustShadowRadiusForMinimized;	// IMP=0x00000000002561ed
- (double)shadowRadius;	// IMP=0x00000000002561cc
- (double)shadowOpacity;	// IMP=0x00000000002561ab
- (double)borderWidthForTraitCollection:(id)arg1;	// IMP=0x0000000000256116
- (id)borderColorForTraitCollection:(id)arg1;	// IMP=0x0000000000255ff9
- (void)_installPaletteContentViewInView:(id)arg1;	// IMP=0x0000000000255bea
- (double)dampingRatioForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;	// IMP=0x0000000000255bdc
- (double)responseForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;	// IMP=0x0000000000255bce
- (void)dealloc;	// IMP=0x0000000000255b90
- (void)safeAreaInsetsDidChange;	// IMP=0x0000000000255ae9
- (void)didMoveToWindow;	// IMP=0x0000000000255a4b
- (void)didChangePaletteScaleFactor;	// IMP=0x00000000002559c0
- (id)initWithTools:(id)arg1 wantsEllipsisButtonVisibleInCompactSize:(_Bool)arg2;	// IMP=0x000000000025548d
- (id)initWithTools:(id)arg1;	// IMP=0x00000000002553f5
- (id)init;	// IMP=0x00000000002553dc

// Remaining properties
@property(readonly, nonatomic, getter=isAutoHideEnabled) _Bool autoHideEnabled;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <PKDrawingPaletteViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIViewController *palettePopoverPresentingController;
@property(readonly, nonatomic) double paletteScaleFactor;
@property(readonly) Class superclass;

@end

