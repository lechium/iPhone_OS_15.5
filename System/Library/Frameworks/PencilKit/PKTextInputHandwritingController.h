//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PencilKit/PKTextInputCanvasControllerChangeObserver-Protocol.h>
#import <PencilKit/PKTextInputDebugStateReporting-Protocol.h>
#import <PencilKit/PKTextInputHandwritingShotDelegate-Protocol.h>
#import <PencilKit/PKTextInputResultCommandDelegate-Protocol.h>
#import <PencilKit/PKTextInputWritingSessionDelegate-Protocol.h>

@class NSMutableArray, NSString, NSUUID, PKDrawing, PKTextInputCanvasController, PKTextInputCursorController, PKTextInputDebugLogController, PKTextInputElementsController, PKTextInputFeedbackController, PKTextInputHandwritingShot, PKTextInputRecognitionManager, PKTextInputReserveSpaceController, PKTextInputResultCommand, PKTextInputTargetState, PKTextInputWritingSession;
@protocol PKTextInputHandwritingControllerDelegate;

@interface PKTextInputHandwritingController : NSObject <PKTextInputHandwritingShotDelegate, PKTextInputResultCommandDelegate, PKTextInputWritingSessionDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputDebugStateReporting>
{
    id <PKTextInputHandwritingControllerDelegate> _delegate;	// 8 = 0x8
    PKTextInputCanvasController *_canvasController;	// 16 = 0x10
    PKTextInputElementsController *_elementsController;	// 24 = 0x18
    PKTextInputFeedbackController *_feedbackController;	// 32 = 0x20
    PKTextInputReserveSpaceController *_reserveSpaceController;	// 40 = 0x28
    PKTextInputDebugLogController *_debugLogController;	// 48 = 0x30
    PKTextInputCursorController *_cursorController;	// 56 = 0x38
    double _strokeAlphaOverride;	// 64 = 0x40
    PKTextInputRecognitionManager *__recognitionManager;	// 72 = 0x48
    PKTextInputWritingSession *__writingSession;	// 80 = 0x50
    PKTextInputHandwritingShot *__activeHandwritingShot;	// 88 = 0x58
    PKTextInputHandwritingShot *__possibleHandwritingShot;	// 96 = 0x60
    PKTextInputResultCommand *__activeResultCommand;	// 104 = 0x68
    NSMutableArray *__resultCommandsQueue;	// 112 = 0x70
    double __lastInProgressStrokeUpdateTime;	// 120 = 0x78
    NSUUID *__lastInProgressStrokeUUID;	// 128 = 0x80
    PKDrawing *__lastKnownDrawing;	// 136 = 0x88
    PKTextInputTargetState *__activeInputTargetState;	// 144 = 0x90
    double __floatingBackgroundLastUpdateTime;	// 152 = 0x98
}

+ (_Bool)_isCorrectionResultGesture:(id)arg1;	// IMP=0x000000000027d277
- (void).cxx_destruct;	// IMP=0x000000000027e14f
@property(nonatomic) double _floatingBackgroundLastUpdateTime; // @synthesize _floatingBackgroundLastUpdateTime=__floatingBackgroundLastUpdateTime;
@property(retain, nonatomic, setter=_setActiveInputTargetState:) PKTextInputTargetState *_activeInputTargetState; // @synthesize _activeInputTargetState=__activeInputTargetState;
@property(copy, nonatomic, setter=_setLastKnownDrawing:) PKDrawing *_lastKnownDrawing; // @synthesize _lastKnownDrawing=__lastKnownDrawing;
@property(copy, nonatomic) NSUUID *_lastInProgressStrokeUUID; // @synthesize _lastInProgressStrokeUUID=__lastInProgressStrokeUUID;
@property(nonatomic) double _lastInProgressStrokeUpdateTime; // @synthesize _lastInProgressStrokeUpdateTime=__lastInProgressStrokeUpdateTime;
@property(readonly, nonatomic) NSMutableArray *_resultCommandsQueue; // @synthesize _resultCommandsQueue=__resultCommandsQueue;
@property(retain, nonatomic, setter=_setActiveResultCommand:) PKTextInputResultCommand *_activeResultCommand; // @synthesize _activeResultCommand=__activeResultCommand;
@property(retain, nonatomic, setter=_setPossibleHandwritingShot:) PKTextInputHandwritingShot *_possibleHandwritingShot; // @synthesize _possibleHandwritingShot=__possibleHandwritingShot;
@property(retain, nonatomic, setter=_setActiveHandwritingShot:) PKTextInputHandwritingShot *_activeHandwritingShot; // @synthesize _activeHandwritingShot=__activeHandwritingShot;
@property(retain, nonatomic, setter=_setWritingSession:) PKTextInputWritingSession *_writingSession; // @synthesize _writingSession=__writingSession;
@property(retain, nonatomic) PKTextInputRecognitionManager *_recognitionManager; // @synthesize _recognitionManager=__recognitionManager;
@property(readonly, nonatomic) double strokeAlphaOverride; // @synthesize strokeAlphaOverride=_strokeAlphaOverride;
@property(readonly, nonatomic) PKTextInputCursorController *cursorController; // @synthesize cursorController=_cursorController;
@property(readonly, nonatomic) PKTextInputDebugLogController *debugLogController; // @synthesize debugLogController=_debugLogController;
@property(readonly, nonatomic) PKTextInputReserveSpaceController *reserveSpaceController; // @synthesize reserveSpaceController=_reserveSpaceController;
@property(readonly, nonatomic) PKTextInputFeedbackController *feedbackController; // @synthesize feedbackController=_feedbackController;
@property(readonly, nonatomic) PKTextInputElementsController *elementsController; // @synthesize elementsController=_elementsController;
@property(readonly, nonatomic) PKTextInputCanvasController *canvasController; // @synthesize canvasController=_canvasController;
@property(nonatomic) __weak id <PKTextInputHandwritingControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)reportDebugStateDescription:(CDUnknownBlockType)arg1;	// IMP=0x000000000027d951
- (void)canvasController:(id)arg1 drawingDidChange:(id)arg2;	// IMP=0x000000000027d878
- (void)canvasControllerEndedStroke:(id)arg1;	// IMP=0x000000000027d872
- (void)canvasControllerDidCancelStroke:(id)arg1 strokeAcceptanceState:(long long)arg2;	// IMP=0x000000000027d860
- (void)canvasControllerInProgressStrokeDidChange:(id)arg1;	// IMP=0x000000000027d58c
- (void)canvasControllerDidEndDrawing:(id)arg1;	// IMP=0x000000000027d57a
- (void)canvasControllerDidBeginDrawing:(id)arg1;	// IMP=0x000000000027d53f
- (void)_cancelInProgressStrokeFromHandwritingShots;	// IMP=0x000000000027d298
- (void)_updateStrokeAlphaOverride;	// IMP=0x000000000027d02c
- (void)_updateFloatingBackground;	// IMP=0x000000000027c8d6
- (_Bool)_wantsFloatingBackground;	// IMP=0x000000000027c515
- (_Bool)writingSession:(id)arg1 elementHasPendingOperations:(id)arg2;	// IMP=0x000000000027c202
- (_Bool)handwritingShot:(id)arg1 shouldSuppressGesturesForStrokesBounds:(struct CGRect)arg2 coordinateSpace:(id)arg3;	// IMP=0x000000000027c0b0
- (id)handwritingShotStrokeIdentifiersToExcludeFromRecognition:(id)arg1;	// IMP=0x000000000027c069
- (struct _NSRange)handwritingShot:(id)arg1 inProgressGestureInitialSelectedRangeForElementRecognitionIdentifier:(id)arg2;	// IMP=0x000000000027bebd
- (long long)handwritingShot:(id)arg1 lastCharacterLevelPositionForElementRecognitionIdentifier:(id)arg2;	// IMP=0x000000000027be03
- (_Bool)handwritingShot:(id)arg1 hasCommittedResultsInSessionToElementRecognitionIdentifier:(id)arg2;	// IMP=0x000000000027bc77
- (struct _NSRange)handwritingShot:(id)arg1 activePreviewRangeForElementRecognitionIdentifier:(id)arg2 queryItemStableIdentifier:(id)arg3;	// IMP=0x000000000027ba79
- (void)handwritingShot:(id)arg1 willFocusAndLoadDataForTargetElement:(id)arg2;	// IMP=0x000000000027b9d9
- (id)handwritingShot:(id)arg1 preferredTargetElementForQueryItemStableIdentifier:(id)arg2 simultaneousItemStableIdentifiers:(id)arg3 proposedTargetElement:(id)arg4;	// IMP=0x000000000027b7cc
- (void)handwritingShotDidOverrideStrongCursor:(id)arg1;	// IMP=0x000000000027b78f
- (void)handwritingShotDidChangeState:(id)arg1;	// IMP=0x000000000027b6bc
- (double)_continuousRecognitionInterval;	// IMP=0x000000000027b4be
- (long long)_immediateCommitTypeForQueryItem:(id)arg1 handwritingShot:(id)arg2;	// IMP=0x000000000027b2b9
- (id)_resultCommandToProcessQueryItem:(id)arg1 handwritingShot:(id)arg2;	// IMP=0x000000000027ad62
- (void)_handleActiveHandwritingShotRecognitionFinished;	// IMP=0x000000000027a992
- (void)_processPossibleShotIfReady;	// IMP=0x000000000027a697
- (void)_createPossibleHandwritingShotIfNeeded;	// IMP=0x000000000027a225
- (id)resultCommandSupportedElementDelegate:(id)arg1;	// IMP=0x000000000027a1c6
- (id)resultCommandCursorController:(id)arg1;	// IMP=0x000000000027a1b4
- (id)resultCommandFeedbackController:(id)arg1;	// IMP=0x000000000027a1a2
- (id)resultCommandCanvasController:(id)arg1;	// IMP=0x000000000027a190
- (void)resultCommandStateDidChange:(id)arg1;	// IMP=0x000000000027a075
- (void)_cancelPendingResultCommand;	// IMP=0x000000000027a027
- (id)_pendingResultCommand;	// IMP=0x0000000000279ee9
- (void)_scheduleCommitForResultCommandIfNeeded:(id)arg1;	// IMP=0x0000000000279a70
- (void)_handleResultCommandFinished:(id)arg1;	// IMP=0x0000000000279938
- (void)_evaluateAndProcessResultCommandsQueue;	// IMP=0x00000000002796fe
- (void)reserveSpaceControllerWillFocusElement:(id)arg1;	// IMP=0x000000000027969e
- (void)reserveSpaceControllerIsActiveChanged;	// IMP=0x000000000027968c
- (void)_updateRecognitionManager;	// IMP=0x0000000000279581
- (void)_updateWritingSession;	// IMP=0x0000000000279301
- (void)_notifyDelegateOfResultCommandState;	// IMP=0x0000000000278f74
@property(readonly, nonatomic) long long writingState;
- (id)initWithCanvasController:(id)arg1 elementsController:(id)arg2 feedbackController:(id)arg3 reserveSpaceController:(id)arg4 debugLogController:(id)arg5 cursorController:(id)arg6;	// IMP=0x0000000000278be9
- (void)cleanUpFromCancelledReplay;	// IMP=0x000000000027e23c
@property(readonly, nonatomic) PKTextInputTargetState *debugActiveInputTargetState;
@property(readonly, nonatomic) PKTextInputRecognitionManager *debugRecognitionManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

