//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

#import <PencilKit/PKColorPickerDelegatePrivate-Protocol.h>
#import <PencilKit/UIPopoverPresentationControllerDelegate-Protocol.h>
#import <PencilKit/UIScrollViewDelegate-Protocol.h>
#import <PencilKit/_PKAllowDrawingWhilePresentingPopoverViewDelegate-Protocol.h>

@class NSArray, NSString, PKColorPicker, UIColor, UIScrollView;
@protocol PKInlineColorPickerContentsHiddenDelegate, PKInlineColorPickerDelegate, PKInlineColorPickerSerialViewControllerTransitionDelegate, _PKInlineColorPickerAllowDrawingWithPopoverDelegate;

@interface PKInlineColorPicker : UIView <UIScrollViewDelegate, PKColorPickerDelegatePrivate, UIPopoverPresentationControllerDelegate, _PKAllowDrawingWhilePresentingPopoverViewDelegate>
{
    _Bool _isUsedOnDarkBackground;	// 8 = 0x8
    _Bool _shouldEmboss;	// 9 = 0x9
    _Bool _didSelectColorUsingSpringLoadedSelection;	// 10 = 0xa
    unsigned long long _sizeState;	// 16 = 0x10
    unsigned long long _selectionState;	// 24 = 0x18
    id <PKInlineColorPickerDelegate> _delegate;	// 32 = 0x20
    unsigned long long _colorSet;	// 40 = 0x28
    NSArray *_colors;	// 48 = 0x30
    unsigned long long _selectedColorIndex;	// 56 = 0x38
    double _selectedColorAlpha;	// 64 = 0x40
    NSArray *_buttonItems;	// 72 = 0x48
    UIScrollView *_scrollView;	// 80 = 0x50
    UIView *_leftOverflowView;	// 88 = 0x58
    UIView *_rightOverflowView;	// 96 = 0x60
    PKColorPicker *_presentedColorPicker;	// 104 = 0x68
    UIColor *__pickerColor;	// 112 = 0x70
    UIColor *_selectedColorBeforeSpringLoadedSelection;	// 120 = 0x78
    UIColor *_aggd_initialColorOnPopoverOpen;	// 128 = 0x80
    long long _aggd_colorsChangedCount;	// 136 = 0x88
    id <_PKInlineColorPickerAllowDrawingWithPopoverDelegate> __allowDrawingWithPopoverDelegate;	// 144 = 0x90
    id <PKInlineColorPickerContentsHiddenDelegate> __contentsHiddenDelegate;	// 152 = 0x98
    id <PKInlineColorPickerSerialViewControllerTransitionDelegate> _serialViewControllerTransitionDelegate;	// 160 = 0xa0
}

- (void).cxx_destruct;	// IMP=0x00000000001dfdc9
@property(nonatomic) __weak id <PKInlineColorPickerSerialViewControllerTransitionDelegate> serialViewControllerTransitionDelegate; // @synthesize serialViewControllerTransitionDelegate=_serialViewControllerTransitionDelegate;
@property(nonatomic) __weak id <PKInlineColorPickerContentsHiddenDelegate> _contentsHiddenDelegate; // @synthesize _contentsHiddenDelegate=__contentsHiddenDelegate;
@property(nonatomic) __weak id <_PKInlineColorPickerAllowDrawingWithPopoverDelegate> _allowDrawingWithPopoverDelegate; // @synthesize _allowDrawingWithPopoverDelegate=__allowDrawingWithPopoverDelegate;
@property(nonatomic) long long aggd_colorsChangedCount; // @synthesize aggd_colorsChangedCount=_aggd_colorsChangedCount;
@property(retain, nonatomic) UIColor *aggd_initialColorOnPopoverOpen; // @synthesize aggd_initialColorOnPopoverOpen=_aggd_initialColorOnPopoverOpen;
@property(nonatomic) _Bool didSelectColorUsingSpringLoadedSelection; // @synthesize didSelectColorUsingSpringLoadedSelection=_didSelectColorUsingSpringLoadedSelection;
@property(retain, nonatomic) UIColor *selectedColorBeforeSpringLoadedSelection; // @synthesize selectedColorBeforeSpringLoadedSelection=_selectedColorBeforeSpringLoadedSelection;
@property(retain, nonatomic) UIColor *_pickerColor; // @synthesize _pickerColor=__pickerColor;
@property(retain, nonatomic) PKColorPicker *presentedColorPicker; // @synthesize presentedColorPicker=_presentedColorPicker;
@property(nonatomic) _Bool shouldEmboss; // @synthesize shouldEmboss=_shouldEmboss;
@property(retain, nonatomic) UIView *rightOverflowView; // @synthesize rightOverflowView=_rightOverflowView;
@property(retain, nonatomic) UIView *leftOverflowView; // @synthesize leftOverflowView=_leftOverflowView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) NSArray *buttonItems; // @synthesize buttonItems=_buttonItems;
@property(nonatomic) double selectedColorAlpha; // @synthesize selectedColorAlpha=_selectedColorAlpha;
@property(nonatomic) unsigned long long selectedColorIndex; // @synthesize selectedColorIndex=_selectedColorIndex;
@property(nonatomic) _Bool isUsedOnDarkBackground; // @synthesize isUsedOnDarkBackground=_isUsedOnDarkBackground;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(nonatomic) unsigned long long colorSet; // @synthesize colorSet=_colorSet;
@property(nonatomic) __weak id <PKInlineColorPickerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long selectionState; // @synthesize selectionState=_selectionState;
@property(nonatomic) unsigned long long sizeState; // @synthesize sizeState=_sizeState;
- (id)_axLabelForColorButton:(id)arg1;	// IMP=0x00000000001df702
- (void)_axHandleLongPressOnColorButtonForLargeTextHUD:(id)arg1;	// IMP=0x00000000001df552
- (void)_allowDrawingWhilePresentingPopoverViewDidBeginDrawing:(id)arg1;	// IMP=0x00000000001df53b
- (_Bool)presentationControllerShouldDismiss:(id)arg1;	// IMP=0x00000000001df3b1
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x00000000001df23c
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;	// IMP=0x00000000001df22f
- (void)_colorPickerUserDidTouchUpInside:(id)arg1;	// IMP=0x00000000001df165
- (void)colorPickerDidChangeSelectedColor:(id)arg1;	// IMP=0x00000000001df068
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x00000000001df056
- (long long)defaultColorIndex;	// IMP=0x00000000001defeb
- (id)_representableColorForColor:(id)arg1;	// IMP=0x00000000001dee80
- (id)colorsForColorSet:(unsigned long long)arg1;	// IMP=0x00000000001deafe
- (void)showOverflowViewsIfNeeded;	// IMP=0x00000000001de8a5
- (unsigned long long)colorIndexMatchingColor:(id)arg1;	// IMP=0x00000000001de760
- (void)notifyDelegateDidSelectColorInCompactChooseToolState;	// IMP=0x00000000001de6d2
- (void)notifyDelegateDidSelectColor:(_Bool)arg1;	// IMP=0x00000000001de63b
- (id)createColorPickerButtonShouldEmboss:(_Bool)arg1;	// IMP=0x00000000001de3c1
- (id)createColorButtonItemWithColor:(id)arg1 shouldEmboss:(_Bool)arg2;	// IMP=0x00000000001de1fc
- (void)springLoadingGestureHandler:(id)arg1;	// IMP=0x00000000001dde45
- (void)colorButtonTapHandler:(id)arg1;	// IMP=0x00000000001ddd99
- (void)_selectColorWithButton:(id)arg1;	// IMP=0x00000000001ddc26
- (void)_toggleColorPickerPopoverPresentation:(_Bool)arg1;	// IMP=0x00000000001ddbc5
- (void)_dismissColorPickerPopover:(_Bool)arg1;	// IMP=0x00000000001dd912
- (void)_colorPickerWillDismiss:(id)arg1;	// IMP=0x00000000001dd8fe
- (void)_presentColorPickerPopover:(_Bool)arg1;	// IMP=0x00000000001dd182
- (id)_effectiveViewControllerForPopoverPresentation;	// IMP=0x00000000001dd0b0
- (struct CGRect)_effectiveRectForPopoverPresentation;	// IMP=0x00000000001dcfc1
- (id)_effectiveBarButtonItemForPopoverPresentation;	// IMP=0x00000000001dceef
- (_Bool)_isInkPickerContentsHidden;	// IMP=0x00000000001dce24
- (void)_forceSetColorSet:(unsigned long long)arg1;	// IMP=0x00000000001dc9cd
@property(retain, nonatomic) UIColor *selectedColor;
- (id)colorForIndex:(long long)arg1;	// IMP=0x00000000001dc5b9
- (long long)colorPickerButtonIndex;	// IMP=0x00000000001dc575
- (void)layoutSubviews;	// IMP=0x00000000001db67c
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 sizeState:(unsigned long long)arg2 selectionState:(unsigned long long)arg3;	// IMP=0x00000000001db544
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000001db4e0
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000001db4c7
- (void)_commonInit;	// IMP=0x00000000001db1b7
- (id)initWithEmbossing:(_Bool)arg1;	// IMP=0x00000000001db147
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000001db0e4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

