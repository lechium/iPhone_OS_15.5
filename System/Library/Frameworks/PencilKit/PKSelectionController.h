//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <PencilKit/PKSelectionObserving-Protocol.h>
#import <PencilKit/PKSelectionRenderingDelegate-Protocol.h>
#import <PencilKit/UIDropInteractionDelegate_Private-Protocol.h>

@class NSString, NSUUID, PKSelectionGestureView, PKSelectionView, PKSpaceInsertionController, PKStrokeSelection, PKTiledView, PKTranscriptionController, UIDropInteraction;
@protocol OS_dispatch_queue;

@interface PKSelectionController : NSObject <UIDropInteractionDelegate_Private, PKSelectionRenderingDelegate, PKSelectionObserving>
{
    struct CGPoint _dropPosition;	// 8 = 0x8
    NSUUID *_previousDrawingUUIDForSelection;	// 24 = 0x18
    int _selectionViewCount;	// 32 = 0x20
    long long _currentIntersectionAlgorithm;	// 40 = 0x28
    PKTranscriptionController *_transcriptionController;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_intersectionQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_selectionHullQueue;	// 64 = 0x40
    CDUnknownBlockType _intersectStrokesBetweenLollipopBlock;	// 72 = 0x48
    UIDropInteraction *_dropInteraction;	// 80 = 0x50
    _Bool _isChangingColor;	// 88 = 0x58
    CDUnknownBlockType _deferredChangingColorBlock;	// 96 = 0x60
    _Bool _hasCurrentSelection;	// 104 = 0x68
    _Bool _isClearingSelection;	// 105 = 0x69
    _Bool _insertSpaceEnabled;	// 106 = 0x6a
    _Bool _isCurrentlyAddingSpace;	// 107 = 0x6b
    PKTiledView *_tiledView;	// 112 = 0x70
    PKStrokeSelection *_currentStrokeSelection;	// 120 = 0x78
    PKSpaceInsertionController *_spaceInsertionController;	// 128 = 0x80
    PKSelectionView *_selectionView;	// 136 = 0x88
    PKSelectionGestureView *_selectionGestureView;	// 144 = 0x90
    struct CGAffineTransform _selectionTransform;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x0000000000118446
- (id)_lastStrokesInStrokes:(id)arg1;	// IMP=0x0000000000113d6b
- (id)_firstStrokesInStrokes:(id)arg1;	// IMP=0x0000000000113cdb
- (_Bool)isRTL;	// IMP=0x0000000000113c83
- (struct CGColor *)selectionColor;	// IMP=0x0000000000113beb
- (struct CGRect)attachmentBoundsForDrawing:(id)arg1;	// IMP=0x0000000000113b53
- (double)scaleForDrawing:(id)arg1;	// IMP=0x0000000000113aa0
- (struct CGAffineTransform)transformFromStrokeSpaceToViewInDrawing:(id)arg1;	// IMP=0x0000000000113a03
- (void)didEndModifyDrawing;	// IMP=0x0000000000113877
- (void)didBeginModifyDrawing;	// IMP=0x00000000001136eb
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;	// IMP=0x0000000000113448
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;	// IMP=0x0000000000113426
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;	// IMP=0x0000000000112b76
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;	// IMP=0x00000000001128da
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;	// IMP=0x00000000001126ec
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;	// IMP=0x00000000001126e6
- (_Bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;	// IMP=0x0000000000112490
- (void)didBeginSpaceInsertionWithLassoStroke:(id)arg1 drawing:(id)arg2 addDefaultSpace:(_Bool)arg3 strokesAbove:(id)arg4 strokesBelow:(id)arg5 externalElements:(id)arg6;	// IMP=0x00000000001116dd
- (void)_addItemsToPasteboard:(id)arg1;	// IMP=0x000000000010abed
- (void)didEndScroll;	// IMP=0x000000000010a595
- (void)didSelect:(id)arg1 lassoStroke:(id)arg2 transform:(struct CGAffineTransform)arg3 drawing:(id)arg4 selectionType:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000010619e
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *selectionHullQueue; // @dynamic selectionHullQueue;
- (void)didSelect:(id)arg1 lassoStroke:(id)arg2 transform:(struct CGAffineTransform)arg3 drawing:(id)arg4;	// IMP=0x000000000010614f
- (void)didSelectStrokesNotification:(id)arg1;	// IMP=0x0000000000105f3b
- (long long)currentIntersectionAlgorithm;	// IMP=0x0000000000102a58
- (void)dealloc;	// IMP=0x00000000001026d1

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

