//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class HKHealthWrapCodableMessageHeader, NSMutableData, NSOutputStream, NSUUID;

__attribute__((visibility("hidden")))
@interface HKHealthWrapEncryptor : NSObject
{
    NSOutputStream *_outputStream;	// 8 = 0x8
    struct __SecCertificate *_certificate;	// 16 = 0x10
    unsigned int _algorithm;	// 24 = 0x18
    unsigned int _options;	// 28 = 0x1c
    unsigned int _keySize;	// 32 = 0x20
    struct _CCCryptor *_cryptor;	// 40 = 0x28
    unsigned int _hmacAlgorithm;	// 48 = 0x30
    struct {
        unsigned int ctx[96];
    } _hmacContext;	// 52 = 0x34
    struct CC_SHA256state_st _sha256Context;	// 436 = 0x1b4
    NSMutableData *_buffer;	// 544 = 0x220
    NSUUID *_studyUUID;	// 552 = 0x228
    NSUUID *_uuid;	// 560 = 0x230
    HKHealthWrapCodableMessageHeader *_header;	// 568 = 0x238
    _Bool _compressionEnabled;	// 576 = 0x240
    unsigned long long _encryptedBytesCount;	// 584 = 0x248
}

- (void).cxx_destruct;	// IMP=0x00000000001ac620
- (_Bool)finalizeWithError:(id *)arg1;	// IMP=0x00000000001ac545
- (_Bool)appendData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ac533
- (_Bool)_finalizeCryptorWithError:(id *)arg1;	// IMP=0x00000000001ac422
- (_Bool)_updateCryptorWithData:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ac2a7
- (_Bool)_appendEncryptedBytes:(const char *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000001ac253
- (_Bool)_writeStream:(const char *)arg1 length:(unsigned long long)arg2 hash:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000000001ac18e
- (_Bool)startWithError:(id *)arg1;	// IMP=0x00000000001abeb8
- (_Bool)_startCryptorWithError:(id *)arg1;	// IMP=0x00000000001aba67
- (_Bool)_updateHeaderWithKey:(id)arg1 iv:(id)arg2 hmacKey:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001ab77f
- (id)_encryptData:(id)arg1 withCertificate:(struct __SecCertificate *)arg2 error:(id *)arg3;	// IMP=0x00000000001ab547
- (struct __SecKey *)_copyAndVerifyPublicKeyFromCertificate:(struct __SecCertificate *)arg1 error:(id *)arg2;	// IMP=0x00000000001ab402
- (void)dealloc;	// IMP=0x00000000001ab3a5
- (id)initWithOutputStream:(id)arg1 certificate:(struct __SecCertificate *)arg2 algorithm:(unsigned int)arg3 options:(unsigned int)arg4 keySize:(unsigned int)arg5 uuid:(id)arg6 studyUUID:(id)arg7 compressionEnabled:(_Bool)arg8;	// IMP=0x00000000001ab20e

@end

