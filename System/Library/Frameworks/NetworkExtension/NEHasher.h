//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSCoder.h>

@class NSArray;

@interface NEHasher : NSCoder
{
    struct CC_SHA1state_st *_sha1Context;	// 8 = 0x8
    NSArray *_classPrefixWhitelist;	// 16 = 0x10
}

+ (id)hashObject:(id)arg1 withClassPrefixWhitelist:(id)arg2;	// IMP=0x0000000000076537
+ (id)hashObject:(id)arg1;	// IMP=0x00000000000764bc
- (void).cxx_destruct;	// IMP=0x0000000000077535
@property(retain) NSArray *classPrefixWhitelist; // @synthesize classPrefixWhitelist=_classPrefixWhitelist;
@property struct CC_SHA1state_st *sha1Context; // @synthesize sha1Context=_sha1Context;
- (id)decodePropertyListForKey:(id)arg1;	// IMP=0x00000000000774da
- (id)decodeObjectOfClasses:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000000774c8
- (id)decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;	// IMP=0x00000000000774b6
- (id)decodeObjectForKey:(id)arg1;	// IMP=0x00000000000774a4
- (int)decodeIntForKey:(id)arg1;	// IMP=0x0000000000077474
- (long long)decodeIntegerForKey:(id)arg1;	// IMP=0x0000000000077442
- (long long)decodeInt64ForKey:(id)arg1;	// IMP=0x0000000000077410
- (int)decodeInt32ForKey:(id)arg1;	// IMP=0x00000000000773e0
- (float)decodeFloatForKey:(id)arg1;	// IMP=0x00000000000773ae
- (double)decodeDoubleForKey:(id)arg1;	// IMP=0x000000000007737b
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;	// IMP=0x0000000000077354
- (_Bool)decodeBoolForKey:(id)arg1;	// IMP=0x0000000000077327
- (id)decodeDataObject;	// IMP=0x00000000000772e6
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;	// IMP=0x00000000000772a5
- (void)encodeObject:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000077293
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;	// IMP=0x000000000007726a
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000077242
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;	// IMP=0x0000000000077219
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;	// IMP=0x00000000000771ef
- (void)encodeInt:(int)arg1 forKey:(id)arg2;	// IMP=0x00000000000771c7
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;	// IMP=0x000000000007719d
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000007718b
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000000077150
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;	// IMP=0x000000000007713e
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;	// IMP=0x0000000000077116
- (void)encodeDataObject:(id)arg1;	// IMP=0x000000000007707c
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;	// IMP=0x0000000000076791
- (long long)versionForClassName:(id)arg1;	// IMP=0x0000000000076789
- (_Bool)containsValueForKey:(id)arg1;	// IMP=0x0000000000076781
- (_Bool)allowsKeyedCoding;	// IMP=0x0000000000076779
- (id)finishHashing;	// IMP=0x00000000000766b3
- (void)dealloc;	// IMP=0x0000000000076655
- (id)init;	// IMP=0x00000000000765df

@end

