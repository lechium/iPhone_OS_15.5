//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NEIKEv2AuthenticationProtocol, NEIKEv2ConfigurationMessage, NEIKEv2DHProtocol, NEIKEv2EAP, NEIKEv2IKESAConfiguration, NEIKEv2IKESAProposal, NEIKEv2IKESPI, NEIKEv2Identifier, NEIKEv2SessionConfiguration, NEIKEv2Transport, NSArray, NSData, NSError, NSMutableData, NSString, NWAddressEndpoint;
@protocol NEIKEv2ConfigurationDelegate, NEIKEv2PacketDelegate, NEIKEv2TransportDelegate, OS_dispatch_queue;

@interface NEIKEv2IKESA : NSObject
{
    CDUnion_a1d6768c _dhECKey;	// 16 = 0x10
    _Bool _shouldSendStateUpdate;	// 320 = 0x140
    _Bool _isInitiator;	// 321 = 0x141
    _Bool _fragmentationSupported;	// 322 = 0x142
    _Bool _mobikeSupported;	// 323 = 0x143
    _Bool _useNATTraversal;	// 324 = 0x144
    _Bool _useTCPEncapsulation;	// 325 = 0x145
    _Bool _detectedOutgoingNAT;	// 326 = 0x146
    _Bool _detectedIncomingNAT;	// 327 = 0x147
    _Bool _isRekeying;	// 328 = 0x148
    _Bool _eapInProgress;	// 329 = 0x149
    _Bool _peerAuthenticated;	// 330 = 0x14a
    _Bool _reportShortDPD;	// 331 = 0x14b
    _Bool _usesPacketDelegate;	// 332 = 0x14c
    unsigned short _shortDPDCounter;	// 334 = 0x14e
    NEIKEv2IKESPI *_localSPI;	// 336 = 0x150
    NEIKEv2IKESPI *_remoteSPI;	// 344 = 0x158
    unsigned long long _state;	// 352 = 0x160
    NSError *_error;	// 360 = 0x168
    NWAddressEndpoint *_localAddress;	// 368 = 0x170
    NWAddressEndpoint *_remoteAddress;	// 376 = 0x178
    NEIKEv2IKESAConfiguration *_configuration;	// 384 = 0x180
    NEIKEv2SessionConfiguration *_sessionConfiguration;	// 392 = 0x188
    NEIKEv2IKESAProposal *_chosenProposal;	// 400 = 0x190
    double _lastReceivedDPD;	// 408 = 0x198
    NSData *_localNonce;	// 416 = 0x1a0
    NSData *_remoteNonce;	// 424 = 0x1a8
    NSMutableData *_dhPublicKey;	// 432 = 0x1b0
    NSData *_dhRemotePublicKey;	// 440 = 0x1b8
    struct OpaqueSecDHContext *_dhContext;	// 448 = 0x1c0
    unsigned long long _dhPublicKeySize;	// 456 = 0x1c8
    NEIKEv2DHProtocol *_remotePreferredDHProtocol;	// 464 = 0x1d0
    NSMutableData *_sKeySeed;	// 472 = 0x1d8
    NSMutableData *_skD;	// 480 = 0x1e0
    NSMutableData *_skAi;	// 488 = 0x1e8
    NSMutableData *_skAr;	// 496 = 0x1f0
    NSMutableData *_skEi;	// 504 = 0x1f8
    NSMutableData *_skEr;	// 512 = 0x200
    NSMutableData *_skPi;	// 520 = 0x208
    NSMutableData *_skPr;	// 528 = 0x210
    NSMutableData *_encryptCryptoCtx;	// 536 = 0x218
    NSMutableData *_localCertificateIdentity;	// 544 = 0x220
    NSMutableData *_digitalSignatureLocalPrivateKey;	// 552 = 0x228
    NSMutableData *_digitalSignatureLocalPublicKey;	// 560 = 0x230
    NSMutableData *_digitalSignatureRemotePublicKey;	// 568 = 0x238
    NSData *_cookie;	// 576 = 0x240
    NSData *_responderCookie2;	// 584 = 0x248
    NSData *_initiatorCookie2;	// 592 = 0x250
    NSData *_signHashData;	// 600 = 0x258
    NSString *_outgoingInterfaceName;	// 608 = 0x260
    NSData *_localFirstMessage;	// 616 = 0x268
    NSData *_remoteFirstMessage;	// 624 = 0x270
    NEIKEv2Identifier *_localIdentifierFromPacket;	// 632 = 0x278
    NEIKEv2Identifier *_remoteIdentifierFromPacket;	// 640 = 0x280
    unsigned long long _childSAModeFromPacket;	// 648 = 0x288
    NSArray *_childSAProposalsFromPacket;	// 656 = 0x290
    NEIKEv2AuthenticationProtocol *_authProtocolFromPacket;	// 664 = 0x298
    NSData *_authenticationDataFromPacket;	// 672 = 0x2a0
    NEIKEv2ConfigurationMessage *_configMessageFromPacket;	// 680 = 0x2a8
    NSArray *_initiatorTrafficSelectorsFromPacket;	// 688 = 0x2b0
    NSArray *_responderTrafficSelectorsFromPacket;	// 696 = 0x2b8
    NEIKEv2EAP *_eapClient;	// 704 = 0x2c0
    NEIKEv2Transport *_transport;	// 712 = 0x2c8
    NEIKEv2Transport *_natTransport;	// 720 = 0x2d0
    NEIKEv2Transport *_tcpTransport;	// 728 = 0x2d8
    NEIKEv2ConfigurationMessage *_activeConfiguration;	// 736 = 0x2e0
    NSData *_receivedDestinationHash;	// 744 = 0x2e8
    NEIKEv2Identifier *_internalRemoteIdentifier;	// 752 = 0x2f0
    NSMutableData *_fetchedPassword;	// 760 = 0x2f8
    NSMutableData *_fetchedSharedSecret;	// 768 = 0x300
    NSObject<OS_dispatch_queue> *_queue;	// 776 = 0x308
    id <NEIKEv2TransportDelegate> _transportDelegate;	// 784 = 0x310
    CDUnknownBlockType _socketGetBlock;	// 792 = 0x318
    id <NEIKEv2PacketDelegate> _packetDelegate;	// 800 = 0x320
    id <NEIKEv2ConfigurationDelegate> _configurationDelegate;	// 808 = 0x328
    unsigned long long _ikeSessionUniqueIndex;	// 816 = 0x330
    unsigned long long _ikeSAUniqueIndex;	// 824 = 0x338
}

+ (id)copySharedSecretFromConfig:(id)arg1;	// IMP=0x00000000000cc53b
+ (_Bool)checkValidityOfDigitalSignature:(id)arg1 authenticationProtocol:(id)arg2 sessionConfiguration:(id)arg3 remoteSignedOctets:(id)arg4;	// IMP=0x00000000000aeb5c
+ (_Bool)checkValidityOfDigitalSignature:(id)arg1 sessionConfiguration:(id)arg2 remoteSignedOctets:(id)arg3;	// IMP=0x00000000000aeab4
+ (id)createAuthenticationDataForSharedSecret:(id)arg1 octets:(id)arg2 prfProtocol:(id)arg3;	// IMP=0x00000000000acffb
- (void).cxx_destruct;	// IMP=0x00000000000cda41
@property(nonatomic) unsigned long long ikeSAUniqueIndex; // @synthesize ikeSAUniqueIndex=_ikeSAUniqueIndex;
@property(nonatomic) unsigned long long ikeSessionUniqueIndex; // @synthesize ikeSessionUniqueIndex=_ikeSessionUniqueIndex;
@property __weak id <NEIKEv2ConfigurationDelegate> configurationDelegate; // @synthesize configurationDelegate=_configurationDelegate;
@property __weak id <NEIKEv2PacketDelegate> packetDelegate; // @synthesize packetDelegate=_packetDelegate;
@property _Bool usesPacketDelegate; // @synthesize usesPacketDelegate=_usesPacketDelegate;
@property(copy) CDUnknownBlockType socketGetBlock; // @synthesize socketGetBlock=_socketGetBlock;
@property __weak id <NEIKEv2TransportDelegate> transportDelegate; // @synthesize transportDelegate=_transportDelegate;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSMutableData *fetchedSharedSecret; // @synthesize fetchedSharedSecret=_fetchedSharedSecret;
@property(retain) NSMutableData *fetchedPassword; // @synthesize fetchedPassword=_fetchedPassword;
@property(retain) NEIKEv2Identifier *internalRemoteIdentifier; // @synthesize internalRemoteIdentifier=_internalRemoteIdentifier;
@property(retain) NSData *receivedDestinationHash; // @synthesize receivedDestinationHash=_receivedDestinationHash;
@property(retain) NEIKEv2ConfigurationMessage *activeConfiguration; // @synthesize activeConfiguration=_activeConfiguration;
@property(retain) NEIKEv2Transport *tcpTransport; // @synthesize tcpTransport=_tcpTransport;
@property(retain) NEIKEv2Transport *natTransport; // @synthesize natTransport=_natTransport;
@property(retain) NEIKEv2Transport *transport; // @synthesize transport=_transport;
@property(retain) NEIKEv2EAP *eapClient; // @synthesize eapClient=_eapClient;
@property(retain, nonatomic) NSArray *responderTrafficSelectorsFromPacket; // @synthesize responderTrafficSelectorsFromPacket=_responderTrafficSelectorsFromPacket;
@property(retain, nonatomic) NSArray *initiatorTrafficSelectorsFromPacket; // @synthesize initiatorTrafficSelectorsFromPacket=_initiatorTrafficSelectorsFromPacket;
@property(retain, nonatomic) NEIKEv2ConfigurationMessage *configMessageFromPacket; // @synthesize configMessageFromPacket=_configMessageFromPacket;
@property(retain, nonatomic) NSData *authenticationDataFromPacket; // @synthesize authenticationDataFromPacket=_authenticationDataFromPacket;
@property(retain, nonatomic) NEIKEv2AuthenticationProtocol *authProtocolFromPacket; // @synthesize authProtocolFromPacket=_authProtocolFromPacket;
@property(retain, nonatomic) NSArray *childSAProposalsFromPacket; // @synthesize childSAProposalsFromPacket=_childSAProposalsFromPacket;
@property(nonatomic) unsigned long long childSAModeFromPacket; // @synthesize childSAModeFromPacket=_childSAModeFromPacket;
@property(retain, nonatomic) NEIKEv2Identifier *remoteIdentifierFromPacket; // @synthesize remoteIdentifierFromPacket=_remoteIdentifierFromPacket;
@property(retain, nonatomic) NEIKEv2Identifier *localIdentifierFromPacket; // @synthesize localIdentifierFromPacket=_localIdentifierFromPacket;
@property(retain) NSData *remoteFirstMessage; // @synthesize remoteFirstMessage=_remoteFirstMessage;
@property(retain) NSData *localFirstMessage; // @synthesize localFirstMessage=_localFirstMessage;
@property(retain) NSString *outgoingInterfaceName; // @synthesize outgoingInterfaceName=_outgoingInterfaceName;
@property(retain) NSData *signHashData; // @synthesize signHashData=_signHashData;
@property(retain) NSData *initiatorCookie2; // @synthesize initiatorCookie2=_initiatorCookie2;
@property(retain) NSData *responderCookie2; // @synthesize responderCookie2=_responderCookie2;
@property(retain) NSData *cookie; // @synthesize cookie=_cookie;
@property(retain) NSMutableData *digitalSignatureRemotePublicKey; // @synthesize digitalSignatureRemotePublicKey=_digitalSignatureRemotePublicKey;
@property(retain) NSMutableData *digitalSignatureLocalPublicKey; // @synthesize digitalSignatureLocalPublicKey=_digitalSignatureLocalPublicKey;
@property(retain) NSMutableData *digitalSignatureLocalPrivateKey; // @synthesize digitalSignatureLocalPrivateKey=_digitalSignatureLocalPrivateKey;
@property(retain) NSMutableData *localCertificateIdentity; // @synthesize localCertificateIdentity=_localCertificateIdentity;
@property(retain) NSMutableData *encryptCryptoCtx; // @synthesize encryptCryptoCtx=_encryptCryptoCtx;
@property(retain) NSMutableData *skPr; // @synthesize skPr=_skPr;
@property(retain) NSMutableData *skPi; // @synthesize skPi=_skPi;
@property(retain) NSMutableData *skEr; // @synthesize skEr=_skEr;
@property(retain) NSMutableData *skEi; // @synthesize skEi=_skEi;
@property(retain) NSMutableData *skAr; // @synthesize skAr=_skAr;
@property(retain) NSMutableData *skAi; // @synthesize skAi=_skAi;
@property(retain) NSMutableData *skD; // @synthesize skD=_skD;
@property(retain) NSMutableData *sKeySeed; // @synthesize sKeySeed=_sKeySeed;
@property(retain) NEIKEv2DHProtocol *remotePreferredDHProtocol; // @synthesize remotePreferredDHProtocol=_remotePreferredDHProtocol;
@property unsigned long long dhPublicKeySize; // @synthesize dhPublicKeySize=_dhPublicKeySize;
@property struct OpaqueSecDHContext *dhContext; // @synthesize dhContext=_dhContext;
@property(retain) NSData *dhRemotePublicKey; // @synthesize dhRemotePublicKey=_dhRemotePublicKey;
@property(retain) NSMutableData *dhPublicKey; // @synthesize dhPublicKey=_dhPublicKey;
@property(retain) NSData *remoteNonce; // @synthesize remoteNonce=_remoteNonce;
@property(retain) NSData *localNonce; // @synthesize localNonce=_localNonce;
@property _Bool reportShortDPD; // @synthesize reportShortDPD=_reportShortDPD;
@property unsigned short shortDPDCounter; // @synthesize shortDPDCounter=_shortDPDCounter;
@property double lastReceivedDPD; // @synthesize lastReceivedDPD=_lastReceivedDPD;
@property(retain) NEIKEv2IKESAProposal *chosenProposal; // @synthesize chosenProposal=_chosenProposal;
@property(retain) NEIKEv2SessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(retain) NEIKEv2IKESAConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain) NWAddressEndpoint *remoteAddress; // @synthesize remoteAddress=_remoteAddress;
@property(retain) NWAddressEndpoint *localAddress; // @synthesize localAddress=_localAddress;
@property _Bool peerAuthenticated; // @synthesize peerAuthenticated=_peerAuthenticated;
@property _Bool eapInProgress; // @synthesize eapInProgress=_eapInProgress;
@property _Bool isRekeying; // @synthesize isRekeying=_isRekeying;
@property _Bool detectedIncomingNAT; // @synthesize detectedIncomingNAT=_detectedIncomingNAT;
@property _Bool detectedOutgoingNAT; // @synthesize detectedOutgoingNAT=_detectedOutgoingNAT;
@property _Bool useTCPEncapsulation; // @synthesize useTCPEncapsulation=_useTCPEncapsulation;
@property _Bool useNATTraversal; // @synthesize useNATTraversal=_useNATTraversal;
@property _Bool mobikeSupported; // @synthesize mobikeSupported=_mobikeSupported;
@property _Bool fragmentationSupported; // @synthesize fragmentationSupported=_fragmentationSupported;
@property _Bool isInitiator; // @synthesize isInitiator=_isInitiator;
@property _Bool shouldSendStateUpdate; // @synthesize shouldSendStateUpdate=_shouldSendStateUpdate;
@property(retain) NSError *error; // @synthesize error=_error;
@property unsigned long long state; // @synthesize state=_state;
@property(retain) NEIKEv2IKESPI *remoteSPI; // @synthesize remoteSPI=_remoteSPI;
@property(retain) NEIKEv2IKESPI *localSPI; // @synthesize localSPI=_localSPI;
@property(readonly, nonatomic) NEIKEv2AuthenticationProtocol *authenticationProtocol;
- (void)resetShortDPDParameters;	// IMP=0x00000000000ccf8d
- (_Bool)shouldReportShortDPD;	// IMP=0x00000000000cce16
- (unsigned long long)dpdRetryIntervalMilliseconds;	// IMP=0x00000000000ccd5b
@property(readonly) NSData *decryptionKey;
@property(readonly) NSData *encryptionKey;
@property(readonly) NSData *remoteIntegrityKey;
@property(readonly) NSData *localIntegrityKey;
@property(retain) NSData *responderNonce;
@property(retain) NSData *initiatorNonce;
- (unsigned char (*)[32])dhCurveKeyForDesc:(int)arg1;	// IMP=0x00000000000ccaa0
- (struct ccec_full_ctx *)dhECPKeyForDesc:(int)arg1;	// IMP=0x00000000000cca80
- (id)copyResponderIdentifier;	// IMP=0x00000000000cca3b
- (id)copyInitiatorIdentifier;	// IMP=0x00000000000cc9f6
@property(retain, nonatomic) NEIKEv2Identifier *remoteIdentifier;
@property(readonly, nonatomic) NEIKEv2Identifier *localIdentifier;
@property(readonly) NSMutableData *sharedSecret;
@property(readonly) NSMutableData *password;
@property(retain) NSData *responderFirstMessage;
@property(retain) NSData *initiatorFirstMessage;
- (_Bool)resetRemoteAddress:(id)arg1;	// IMP=0x00000000000cbc3a
- (void)resetSessionConfiguration:(id)arg1;	// IMP=0x00000000000cbc28
- (void)detachTransportWithShouldInvalidate:(_Bool)arg1;	// IMP=0x00000000000cba48
- (id)copyTransport;	// IMP=0x00000000000cb572
- (void)resyncAddress;	// IMP=0x00000000000cb4ad
@property(readonly) _Bool hasTransport;
- (_Bool)supportsSignHash:(unsigned long long)arg1;	// IMP=0x00000000000cb2b7
- (_Bool)switchToTCPEncapsulation;	// IMP=0x00000000000cacf2
- (_Bool)switchToNATTraversalPorts;	// IMP=0x00000000000ca6fb
@property(retain) NEIKEv2IKESPI *responderSPI;
@property(retain) NEIKEv2IKESPI *initiatorSPI;
- (void)assignRemoteSPI:(id)arg1;	// IMP=0x00000000000ca588
- (void)assignRemoteSPI:(id)arg1 disableWildCard:(_Bool)arg2;	// IMP=0x00000000000ca550
- (void)disableWildcard;	// IMP=0x00000000000ca3ac
@property(readonly) NWAddressEndpoint *responderAddress;
@property(readonly) NWAddressEndpoint *initiatorAddress;
- (void)sentStateUpdate;	// IMP=0x00000000000ca300
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x00000000000c9f1c
- (void)reset;	// IMP=0x00000000000c9c75
- (void)dealloc;	// IMP=0x00000000000c9aa2
- (id)copyForRekey;	// IMP=0x00000000000c9447
- (id)copyChildConfig;	// IMP=0x00000000000c91dd
- (id)copySessionConfig;	// IMP=0x00000000000c901b
- (void)updateConfiguration:(id)arg1;	// IMP=0x00000000000c9009
@property(readonly) NEIKEv2DHProtocol *preferredDHProtocol;
- (id)initIKESAWithConfiguration:(id)arg1 sessionConfiguration:(id)arg2 queue:(id)arg3 initialTransport:(id)arg4 transportDelegate:(id)arg5 socketGetBlock:(CDUnknownBlockType)arg6 packetDelegate:(id)arg7 configurationDelegate:(id)arg8 ikeSessionUniqueIndex:(unsigned long long)arg9;	// IMP=0x00000000000c7cb0
- (id)description;	// IMP=0x00000000000c7bd6
- (_Bool)shouldReceiveWildcard;	// IMP=0x00000000000c7b30
- (id)createLocalSPIForLocalAddress:(id)arg1 remoteAddress:(id)arg2;	// IMP=0x00000000000c7816
- (id)createResponderEAPAuthenticationData;	// IMP=0x00000000000b0747
- (id)createInitiatorEAPAuthenticationData;	// IMP=0x00000000000b0527
- (CDUnknownBlockType)copyValidateAuthBlock;	// IMP=0x00000000000affaa
- (_Bool)checkNonCertAuthData:(id)arg1;	// IMP=0x00000000000afdad
- (id)createResponderAuthenticationData;	// IMP=0x00000000000afb3a
- (id)createInitiatorAuthenticationData;	// IMP=0x00000000000af8c7
- (_Bool)checkValidityOfDigitalSignature:(id)arg1;	// IMP=0x00000000000ae6de
- (_Bool)checkValidityOfCertificates:(id)arg1 signature:(id)arg2;	// IMP=0x00000000000adb55
- (id)createRemoteSignedOctets;	// IMP=0x00000000000adb17
- (id)createResponderSignedOctets;	// IMP=0x00000000000ad709
- (id)createInitiatorSignedOctets;	// IMP=0x00000000000ad225
- (id)createAuthenticationDataForSharedSecret:(id)arg1 octets:(id)arg2;	// IMP=0x00000000000acdbe
- (id)copyDigitalSignatureSignedData:(id)arg1;	// IMP=0x00000000000abfc1
- (id)copyCertSignedData:(id)arg1;	// IMP=0x00000000000abbce
- (id)copyLocalCertificateData;	// IMP=0x00000000000abac3
- (struct __SecIdentity *)copyLocalSecIdentity;	// IMP=0x00000000000aba33
- (id)copyRemoteCertificateAuthorityHashData;	// IMP=0x00000000000ab77a
- (id)copyRemoteCertificateAuthorityDataArray;	// IMP=0x00000000000ab52e
- (id)copyRemoteCertificateAuthorityArray;	// IMP=0x00000000000ab03c
- (_Bool)generateAllValuesForRekey:(id)arg1;	// IMP=0x00000000000ab003
- (_Bool)generateLocalValues;	// IMP=0x00000000000aafb6
- (_Bool)calculateSKEYSEEDDerivatives;	// IMP=0x00000000000a9e57
- (_Bool)calculateSKEYSEEDForRekey:(id)arg1;	// IMP=0x00000000000a9814
- (_Bool)fetchLocalCertificateIdentity;	// IMP=0x00000000000a9415
- (_Bool)generateLocalNonce;	// IMP=0x00000000000a9359
- (_Bool)generateLocalDHValues;	// IMP=0x00000000000a9077

@end

