//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NSCopying-Protocol.h>

@class NEIKEv2AuthenticationProtocol, NEIKEv2ConfigurationMessage, NEIKEv2Identifier, NSArray, NSData, NSNumber, NSString;

@interface NEIKEv2SessionConfiguration : NSObject <NSCopying>
{
    NEIKEv2ConfigurationMessage *_configurationRequest;	// 8 = 0x8
    NEIKEv2ConfigurationMessage *_configurationReply;	// 16 = 0x10
    _Bool _initialContactDisabled;	// 24 = 0x18
    _Bool _negotiateMOBIKE;	// 25 = 0x19
    _Bool _natTraversalKeepaliveDisabled;	// 26 = 0x1a
    _Bool _natTraversalKeepaliveEnabled;	// 27 = 0x1b
    _Bool _natTraversalKeepaliveOffloadEnabled;	// 28 = 0x1c
    _Bool _deadPeerDetectionEnabled;	// 29 = 0x1d
    _Bool _idleTimeoutEnabled;	// 30 = 0x1e
    _Bool _blackholeDetectionEnabled;	// 31 = 0x1f
    _Bool _enableCertificateRevocationCheck;	// 32 = 0x20
    _Bool _strictCertificateRevocationCheck;	// 33 = 0x21
    _Bool _disableRemoteCertificateValidation;	// 34 = 0x22
    unsigned int _deadPeerDetectionMaxRetryCount;	// 36 = 0x24
    unsigned int _deadPeerDetectionMaxRetryCountBeforeReporting;	// 40 = 0x28
    unsigned int _deadPeerDetectionReceiveMaxShortDPDBeforeReporting;	// 44 = 0x2c
    NEIKEv2Identifier *_localIdentifier;	// 48 = 0x30
    NEIKEv2Identifier *_remoteIdentifier;	// 56 = 0x38
    NSArray *_additionalMOBIKEAddresses;	// 64 = 0x40
    unsigned long long _natTraversalKeepaliveInterval;	// 72 = 0x48
    unsigned long long _natTraversalKeepaliveOffloadInterval;	// 80 = 0x50
    unsigned long long _deadPeerDetectionInterval;	// 88 = 0x58
    unsigned long long _deadPeerDetectionRetryIntervalMilliseconds;	// 96 = 0x60
    unsigned long long _deadPeerDetectionReceiveIntervalTriggerReporting;	// 104 = 0x68
    unsigned long long _idleTimeoutSeconds;	// 112 = 0x70
    NEIKEv2AuthenticationProtocol *_authenticationProtocol;	// 120 = 0x78
    NEIKEv2AuthenticationProtocol *_remoteAuthentication;	// 128 = 0x80
    NSString *_localPrivateEAPIdentity;	// 136 = 0x88
    NSData *_localEncryptedEAPIdentity;	// 144 = 0x90
    NSString *_username;	// 152 = 0x98
    NSString *_password;	// 160 = 0xa0
    NSData *_passwordReference;	// 168 = 0xa8
    NSData *_sharedSecret;	// 176 = 0xb0
    NSData *_sharedSecretReference;	// 184 = 0xb8
    NSString *_localCertificateName;	// 192 = 0xc0
    NSData *_localCertificateReference;	// 200 = 0xc8
    NSString *_remoteCertificateHostname;	// 208 = 0xd0
    NSString *_remoteCertificateAuthorityName;	// 216 = 0xd8
    NSArray *_remoteCertificateAuthorityReferences;	// 224 = 0xe0
    NSData *_remoteCertificateAuthorityHash;	// 232 = 0xe8
    NSData *_localPrivateKey;	// 240 = 0xf0
    NSData *_localPublicKey;	// 248 = 0xf8
    NSData *_remotePublicKey;	// 256 = 0x100
    NSString *_tlsMinimumVersion;	// 264 = 0x108
    NSString *_tlsMaximumVersion;	// 272 = 0x110
    NSArray *_customIKEAuthPayloads;	// 280 = 0x118
    NSArray *_customIKEAuthVendorPayloads;	// 288 = 0x120
    NSArray *_customIKEAuthPrivateNotifies;	// 296 = 0x128
    NSNumber *_pduSessionID;	// 304 = 0x130
    NSString *_IMEI;	// 312 = 0x138
    NSString *_IMEISV;	// 320 = 0x140
}

- (void).cxx_destruct;	// IMP=0x0000000000094878
@property(retain) NSString *IMEISV; // @synthesize IMEISV=_IMEISV;
@property(retain) NSString *IMEI; // @synthesize IMEI=_IMEI;
@property(retain) NSNumber *pduSessionID; // @synthesize pduSessionID=_pduSessionID;
@property(retain, nonatomic) NSArray *customIKEAuthPrivateNotifies; // @synthesize customIKEAuthPrivateNotifies=_customIKEAuthPrivateNotifies;
@property(retain) NSArray *customIKEAuthVendorPayloads; // @synthesize customIKEAuthVendorPayloads=_customIKEAuthVendorPayloads;
@property(retain) NSArray *customIKEAuthPayloads; // @synthesize customIKEAuthPayloads=_customIKEAuthPayloads;
@property(retain) NSString *tlsMaximumVersion; // @synthesize tlsMaximumVersion=_tlsMaximumVersion;
@property(retain) NSString *tlsMinimumVersion; // @synthesize tlsMinimumVersion=_tlsMinimumVersion;
@property(retain) NSData *remotePublicKey; // @synthesize remotePublicKey=_remotePublicKey;
@property(retain) NSData *localPublicKey; // @synthesize localPublicKey=_localPublicKey;
@property(retain) NSData *localPrivateKey; // @synthesize localPrivateKey=_localPrivateKey;
@property _Bool disableRemoteCertificateValidation; // @synthesize disableRemoteCertificateValidation=_disableRemoteCertificateValidation;
@property _Bool strictCertificateRevocationCheck; // @synthesize strictCertificateRevocationCheck=_strictCertificateRevocationCheck;
@property _Bool enableCertificateRevocationCheck; // @synthesize enableCertificateRevocationCheck=_enableCertificateRevocationCheck;
@property(retain) NSData *remoteCertificateAuthorityHash; // @synthesize remoteCertificateAuthorityHash=_remoteCertificateAuthorityHash;
@property(retain) NSArray *remoteCertificateAuthorityReferences; // @synthesize remoteCertificateAuthorityReferences=_remoteCertificateAuthorityReferences;
@property(retain) NSString *remoteCertificateAuthorityName; // @synthesize remoteCertificateAuthorityName=_remoteCertificateAuthorityName;
@property(retain) NSString *remoteCertificateHostname; // @synthesize remoteCertificateHostname=_remoteCertificateHostname;
@property(retain) NSData *localCertificateReference; // @synthesize localCertificateReference=_localCertificateReference;
@property(retain) NSString *localCertificateName; // @synthesize localCertificateName=_localCertificateName;
@property(retain) NSData *sharedSecretReference; // @synthesize sharedSecretReference=_sharedSecretReference;
@property(retain) NSData *sharedSecret; // @synthesize sharedSecret=_sharedSecret;
@property(retain) NSData *passwordReference; // @synthesize passwordReference=_passwordReference;
@property(retain) NSString *password; // @synthesize password=_password;
@property(retain) NSString *username; // @synthesize username=_username;
@property(retain) NSData *localEncryptedEAPIdentity; // @synthesize localEncryptedEAPIdentity=_localEncryptedEAPIdentity;
@property(retain) NSString *localPrivateEAPIdentity; // @synthesize localPrivateEAPIdentity=_localPrivateEAPIdentity;
@property(retain) NEIKEv2AuthenticationProtocol *remoteAuthentication; // @synthesize remoteAuthentication=_remoteAuthentication;
@property(retain) NEIKEv2AuthenticationProtocol *authenticationProtocol; // @synthesize authenticationProtocol=_authenticationProtocol;
@property _Bool blackholeDetectionEnabled; // @synthesize blackholeDetectionEnabled=_blackholeDetectionEnabled;
@property unsigned long long idleTimeoutSeconds; // @synthesize idleTimeoutSeconds=_idleTimeoutSeconds;
@property _Bool idleTimeoutEnabled; // @synthesize idleTimeoutEnabled=_idleTimeoutEnabled;
@property unsigned int deadPeerDetectionReceiveMaxShortDPDBeforeReporting; // @synthesize deadPeerDetectionReceiveMaxShortDPDBeforeReporting=_deadPeerDetectionReceiveMaxShortDPDBeforeReporting;
@property unsigned long long deadPeerDetectionReceiveIntervalTriggerReporting; // @synthesize deadPeerDetectionReceiveIntervalTriggerReporting=_deadPeerDetectionReceiveIntervalTriggerReporting;
@property unsigned int deadPeerDetectionMaxRetryCountBeforeReporting; // @synthesize deadPeerDetectionMaxRetryCountBeforeReporting=_deadPeerDetectionMaxRetryCountBeforeReporting;
@property unsigned int deadPeerDetectionMaxRetryCount; // @synthesize deadPeerDetectionMaxRetryCount=_deadPeerDetectionMaxRetryCount;
@property unsigned long long deadPeerDetectionRetryIntervalMilliseconds; // @synthesize deadPeerDetectionRetryIntervalMilliseconds=_deadPeerDetectionRetryIntervalMilliseconds;
@property unsigned long long deadPeerDetectionInterval; // @synthesize deadPeerDetectionInterval=_deadPeerDetectionInterval;
@property _Bool deadPeerDetectionEnabled; // @synthesize deadPeerDetectionEnabled=_deadPeerDetectionEnabled;
@property unsigned long long natTraversalKeepaliveOffloadInterval; // @synthesize natTraversalKeepaliveOffloadInterval=_natTraversalKeepaliveOffloadInterval;
@property _Bool natTraversalKeepaliveOffloadEnabled; // @synthesize natTraversalKeepaliveOffloadEnabled=_natTraversalKeepaliveOffloadEnabled;
@property unsigned long long natTraversalKeepaliveInterval; // @synthesize natTraversalKeepaliveInterval=_natTraversalKeepaliveInterval;
@property _Bool natTraversalKeepaliveEnabled; // @synthesize natTraversalKeepaliveEnabled=_natTraversalKeepaliveEnabled;
@property _Bool natTraversalKeepaliveDisabled; // @synthesize natTraversalKeepaliveDisabled=_natTraversalKeepaliveDisabled;
@property(retain) NSArray *additionalMOBIKEAddresses; // @synthesize additionalMOBIKEAddresses=_additionalMOBIKEAddresses;
@property _Bool negotiateMOBIKE; // @synthesize negotiateMOBIKE=_negotiateMOBIKE;
@property _Bool initialContactDisabled; // @synthesize initialContactDisabled=_initialContactDisabled;
@property(retain) NEIKEv2Identifier *remoteIdentifier; // @synthesize remoteIdentifier=_remoteIdentifier;
@property(retain) NEIKEv2Identifier *localIdentifier; // @synthesize localIdentifier=_localIdentifier;
@property(retain) NEIKEv2ConfigurationMessage *configurationReply;
@property(retain) NEIKEv2ConfigurationMessage *configurationRequest;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000936a0
- (id)description;	// IMP=0x0000000000093687
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000093418
- (id)init;	// IMP=0x0000000000093390

@end

