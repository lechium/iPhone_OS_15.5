//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NEPrettyDescription-Protocol.h>

@class NSString, NSUUID, NWAddressEndpoint;

@interface NEPolicyCondition : NSObject <NEPrettyDescription>
{
    _Bool _negative;	// 8 = 0x8
    unsigned char _prefix;	// 9 = 0x9
    unsigned short _ipProtocol;	// 10 = 0xa
    unsigned short _packetFilterTags;	// 12 = 0xc
    unsigned short _schemePort;	// 14 = 0xe
    int _pid;	// 16 = 0x10
    int _pid_version;	// 20 = 0x14
    unsigned int _uid;	// 24 = 0x18
    unsigned int _domainFilter;	// 28 = 0x1c
    unsigned int _trafficClassStart;	// 32 = 0x20
    unsigned int _trafficClassEnd;	// 36 = 0x24
    unsigned int _clientFlags;	// 40 = 0x28
    unsigned int _platform;	// 44 = 0x2c
    unsigned int _sdkVersion;	// 48 = 0x30
    unsigned int _minSDKVersion;	// 52 = 0x34
    long long _conditionType;	// 56 = 0x38
    NSUUID *_applicationUUID;	// 64 = 0x40
    NSString *_accountIdentifier;	// 72 = 0x48
    NSString *_domain;	// 80 = 0x50
    NSString *_interfaceName;	// 88 = 0x58
    NWAddressEndpoint *_startAddress;	// 96 = 0x60
    NWAddressEndpoint *_endAddress;	// 104 = 0x68
    NSString *_customEntitlement;	// 112 = 0x70
    NSString *_agentDomain;	// 120 = 0x78
    NSString *_agentType;	// 128 = 0x80
    NSString *_signingIdentifier;	// 136 = 0x88
}

+ (id)delegateIsPlatformBinary;	// IMP=0x00000000001629da
+ (id)isLoopback;	// IMP=0x0000000000162992
+ (id)flowRemoteAddressEmpty;	// IMP=0x000000000016294a
+ (id)flowLocalAddressEmpty;	// IMP=0x0000000000162902
+ (id)usesModernNetworkAPI;	// IMP=0x00000000001628ba
+ (id)allowsUnsafeSocketAccess;	// IMP=0x000000000016289c
+ (id)isSystemProxyConnection;	// IMP=0x000000000016287e
+ (id)isListener;	// IMP=0x0000000000162860
+ (id)isInbound;	// IMP=0x0000000000162842
+ (id)clientProhibitsExpensive;	// IMP=0x0000000000162824
+ (id)clientProhibitsContrained;	// IMP=0x0000000000162806
+ (id)fallbackTraffic;	// IMP=0x00000000001627e8
+ (id)signingIdentifier:(id)arg1;	// IMP=0x000000000016276f
+ (id)clientFlags:(unsigned int)arg1;	// IMP=0x000000000016270b
+ (id)packetFilterTags:(unsigned short)arg1;	// IMP=0x00000000001626a7
+ (id)requiredAgentDomain:(id)arg1 agentType:(id)arg2;	// IMP=0x00000000001625fc
+ (id)sdkVersion:(unsigned int)arg1 minSDKVersion:(unsigned int)arg2 platform:(unsigned int)arg3;	// IMP=0x000000000016256a
+ (id)platformBinary;	// IMP=0x0000000000162522
+ (id)customEntitlement:(id)arg1;	// IMP=0x00000000001624a9
+ (id)entitlement;	// IMP=0x0000000000162461
+ (id)schemeUsingPort:(unsigned short)arg1;	// IMP=0x00000000001623f7
+ (id)flowRemoteAddressStart:(id)arg1 end:(id)arg2;	// IMP=0x000000000016234c
+ (id)localNetworks;	// IMP=0x0000000000162304
+ (id)remoteAddressStart:(id)arg1 end:(id)arg2;	// IMP=0x0000000000162259
+ (id)flowLocalAddressStart:(id)arg1 end:(id)arg2;	// IMP=0x00000000001621ae
+ (id)localAddressStart:(id)arg1 end:(id)arg2;	// IMP=0x0000000000162103
+ (id)flowRemoteAddress:(id)arg1 prefix:(unsigned char)arg2;	// IMP=0x0000000000162078
+ (id)remoteAddress:(id)arg1 prefix:(unsigned char)arg2;	// IMP=0x0000000000161fed
+ (id)flowLocalAddress:(id)arg1 prefix:(unsigned char)arg2;	// IMP=0x0000000000161f62
+ (id)localAddress:(id)arg1 prefix:(unsigned char)arg2;	// IMP=0x0000000000161ed7
+ (id)flowIPProtocol:(unsigned short)arg1;	// IMP=0x0000000000161e73
+ (id)ipProtocol:(unsigned short)arg1;	// IMP=0x0000000000161e0f
+ (id)trafficClassStart:(unsigned int)arg1 end:(unsigned int)arg2;	// IMP=0x0000000000161d99
+ (id)scopedInterface:(id)arg1;	// IMP=0x0000000000161d20
+ (id)allInterfaces;	// IMP=0x0000000000161cd8
+ (id)domainFilter:(unsigned long long)arg1;	// IMP=0x0000000000161c74
+ (id)domain:(id)arg1;	// IMP=0x0000000000161bfb
+ (id)accountIdentifier:(id)arg1;	// IMP=0x0000000000161b82
+ (id)uid:(unsigned int)arg1;	// IMP=0x0000000000161b1e
+ (id)effectivePID:(int)arg1 version:(int)arg2;	// IMP=0x0000000000161aa8
+ (id)effectivePID:(int)arg1;	// IMP=0x0000000000161a35
+ (id)realApplication:(id)arg1;	// IMP=0x00000000001619bc
+ (id)effectiveApplication:(id)arg1;	// IMP=0x0000000000161943
- (void).cxx_destruct;	// IMP=0x00000000001638c5
@property unsigned short schemePort; // @synthesize schemePort=_schemePort;
@property unsigned short packetFilterTags; // @synthesize packetFilterTags=_packetFilterTags;
@property(copy) NSString *signingIdentifier; // @synthesize signingIdentifier=_signingIdentifier;
@property unsigned int minSDKVersion; // @synthesize minSDKVersion=_minSDKVersion;
@property unsigned int sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property unsigned int platform; // @synthesize platform=_platform;
@property(copy) NSString *agentType; // @synthesize agentType=_agentType;
@property(copy) NSString *agentDomain; // @synthesize agentDomain=_agentDomain;
@property(copy) NSString *customEntitlement; // @synthesize customEntitlement=_customEntitlement;
@property(copy) NWAddressEndpoint *endAddress; // @synthesize endAddress=_endAddress;
@property(copy) NWAddressEndpoint *startAddress; // @synthesize startAddress=_startAddress;
@property unsigned int clientFlags; // @synthesize clientFlags=_clientFlags;
@property unsigned char prefix; // @synthesize prefix=_prefix;
@property unsigned short ipProtocol; // @synthesize ipProtocol=_ipProtocol;
@property unsigned int trafficClassEnd; // @synthesize trafficClassEnd=_trafficClassEnd;
@property unsigned int trafficClassStart; // @synthesize trafficClassStart=_trafficClassStart;
@property(copy) NSString *interfaceName; // @synthesize interfaceName=_interfaceName;
@property unsigned int domainFilter; // @synthesize domainFilter=_domainFilter;
@property(copy) NSString *domain; // @synthesize domain=_domain;
@property(copy) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property unsigned int uid; // @synthesize uid=_uid;
@property int pid_version; // @synthesize pid_version=_pid_version;
@property int pid; // @synthesize pid=_pid;
@property(copy) NSUUID *applicationUUID; // @synthesize applicationUUID=_applicationUUID;
@property(getter=isNegative) _Bool negative; // @synthesize negative=_negative;
@property long long conditionType; // @synthesize conditionType=_conditionType;
- (_Bool)addTLVsToMessage:(id)arg1;	// IMP=0x0000000000163100
- (unsigned char)conditionTypeValue;	// IMP=0x00000000001630dc
- (id)conditionTypeString;	// IMP=0x0000000000162e78
- (_Bool)validate;	// IMP=0x0000000000162d48
- (id)description;	// IMP=0x0000000000162d32
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;	// IMP=0x0000000000162a22
- (id)initInternal;	// IMP=0x0000000000161914
- (id)init;	// IMP=0x00000000001618bc

@end

