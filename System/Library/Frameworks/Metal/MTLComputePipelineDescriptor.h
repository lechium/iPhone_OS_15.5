//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Metal/NSCopying-Protocol.h>

@class MTLLinkedFunctions, MTLPipelineBufferDescriptorArray, MTLStageInputOutputDescriptor, NSArray, NSString;
@protocol MTLFunction;

@interface MTLComputePipelineDescriptor : NSObject <NSCopying>
{
    NSArray *_insertLibraries;	// 8 = 0x8
}

+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000092b0f
+ (id)alloc;	// IMP=0x0000000000092b05
@property(copy, nonatomic) NSArray *insertLibraries; // @synthesize insertLibraries=_insertLibraries;
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000092b80
- (void)reset;	// IMP=0x0000000000092b7a

// Remaining properties
@property(copy, nonatomic) NSArray *binaryArchives; // @dynamic binaryArchives;
@property(readonly) MTLPipelineBufferDescriptorArray *buffers; // @dynamic buffers;
@property(retain, nonatomic) id <MTLFunction> computeFunction; // @dynamic computeFunction;
@property(nonatomic) _Bool forceResourceIndex; // @dynamic forceResourceIndex;
@property(copy, nonatomic) NSString *label; // @dynamic label;
@property(copy, nonatomic) MTLLinkedFunctions *linkedFunctions; // @dynamic linkedFunctions;
@property(nonatomic) unsigned long long maxCallStackDepth; // @dynamic maxCallStackDepth;
@property(nonatomic) unsigned long long maxTotalThreadsPerThreadgroup; // @dynamic maxTotalThreadsPerThreadgroup;
@property(copy, nonatomic) NSArray *preloadedLibraries; // @dynamic preloadedLibraries;
@property(nonatomic) unsigned long long resourceIndex; // @dynamic resourceIndex;
@property(copy, nonatomic) MTLStageInputOutputDescriptor *stageInputDescriptor; // @dynamic stageInputDescriptor;
@property(nonatomic) _Bool supportAddingBinaryFunctions; // @dynamic supportAddingBinaryFunctions;
@property(nonatomic) _Bool supportIndirectCommandBuffers; // @dynamic supportIndirectCommandBuffers;
@property(nonatomic) _Bool threadGroupSizeIsMultipleOfThreadExecutionWidth; // @dynamic threadGroupSizeIsMultipleOfThreadExecutionWidth;

@end

