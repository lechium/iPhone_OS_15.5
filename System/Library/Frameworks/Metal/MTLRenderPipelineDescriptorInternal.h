//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface MTLRenderPipelineDescriptorInternal
{
    struct MTLRenderPipelineDescriptorPrivate _private;	// 48 = 0x30
    struct FlatBufferBuilder _builder;	// 440 = 0x1b8
}

- (id).cxx_construct;	// IMP=0x00000000000a1b8d
- (void).cxx_destruct;	// IMP=0x00000000000a1b7c
- (const void *)getPipelineScript;	// IMP=0x00000000000a1b43
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000000000a1465
- (id)newSerializedVertexDataWithFlags:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000000000a144e
- (id)serializeFragmentData;	// IMP=0x00000000000a1436
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x00000000000a0f97
- (void)validateWithDevice:(id)arg1;	// IMP=0x00000000000a0f61
- (_Bool)validateWithDevice:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a0c2f
- (void)setStencilAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000a0b5b
- (unsigned long long)stencilAttachmentPixelFormat;	// IMP=0x00000000000a0b49
- (void)setDepthAttachmentPixelFormat:(unsigned long long)arg1;	// IMP=0x00000000000a0b37
- (unsigned long long)depthAttachmentPixelFormat;	// IMP=0x00000000000a0b25
- (id)colorAttachments;	// IMP=0x00000000000a0b14
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000a064b
- (unsigned long long)hash;	// IMP=0x00000000000a022b
- (const struct MTLRenderPipelineDescriptorPrivate *)_descriptorPrivate;	// IMP=0x00000000000a021b
- (id)driverCompilerOptions;	// IMP=0x00000000000a0206
- (void)setDriverCompilerOptions:(id)arg1;	// IMP=0x00000000000a01b9
- (id)vertexDescriptor;	// IMP=0x00000000000a0182
- (void)setVertexDescriptor:(id)arg1;	// IMP=0x00000000000a00f4
- (void)attachVertexDescriptor:(id)arg1;	// IMP=0x00000000000a006d
- (id)pipelineLibrary;	// IMP=0x00000000000a0058
- (void)setPipelineLibrary:(id)arg1;	// IMP=0x00000000000a0012
- (id)fragmentFunction;	// IMP=0x000000000009fffd
- (void)setFragmentFunction:(id)arg1;	// IMP=0x000000000009ff30
- (id)vertexFunction;	// IMP=0x000000000009ff1b
- (void)setVertexFunction:(id)arg1;	// IMP=0x000000000009fe4e
- (void)setLabel:(id)arg1;	// IMP=0x000000000009fda9
- (id)label;	// IMP=0x000000000009fd94
- (void)reset;	// IMP=0x000000000009fb4d
- (id)fragmentBuffers;	// IMP=0x000000000009fb38
- (id)vertexBuffers;	// IMP=0x000000000009fb23
- (void)setMaxFragmentCallStackDepth:(unsigned long long)arg1;	// IMP=0x000000000009fb0e
- (unsigned long long)maxFragmentCallStackDepth;	// IMP=0x000000000009faf9
- (void)setMaxVertexCallStackDepth:(unsigned long long)arg1;	// IMP=0x000000000009fae4
- (unsigned long long)maxVertexCallStackDepth;	// IMP=0x000000000009facf
- (void)setSupportAddingFragmentBinaryFunctions:(_Bool)arg1;	// IMP=0x000000000009fabb
- (_Bool)supportAddingFragmentBinaryFunctions;	// IMP=0x000000000009faa7
- (void)setSupportAddingVertexBinaryFunctions:(_Bool)arg1;	// IMP=0x000000000009fa93
- (_Bool)supportAddingVertexBinaryFunctions;	// IMP=0x000000000009fa7f
- (void)setInsertFragmentLibraries:(id)arg1;	// IMP=0x000000000009fa61
- (id)insertFragmentLibraries;	// IMP=0x000000000009fa4c
- (void)setInsertVertexLibraries:(id)arg1;	// IMP=0x000000000009fa2e
- (id)insertVertexLibraries;	// IMP=0x000000000009fa19
- (void)setFragmentPreloadedLibraries:(id)arg1;	// IMP=0x000000000009f9cc
- (id)fragmentPreloadedLibraries;	// IMP=0x000000000009f9b7
- (void)setVertexPreloadedLibraries:(id)arg1;	// IMP=0x000000000009f96a
- (id)vertexPreloadedLibraries;	// IMP=0x000000000009f955
- (void)setFragmentLinkedFunctions:(id)arg1;	// IMP=0x000000000009f8bd
- (id)fragmentLinkedFunctions;	// IMP=0x000000000009f862
- (void)setVertexLinkedFunctions:(id)arg1;	// IMP=0x000000000009f7ca
- (id)vertexLinkedFunctions;	// IMP=0x000000000009f76f
- (id)binaryArchives;	// IMP=0x000000000009f75a
- (void)setBinaryArchives:(id)arg1;	// IMP=0x000000000009f70d
- (void)setInputPrimitiveTopology:(unsigned long long)arg1;	// IMP=0x000000000009f6b2
- (unsigned long long)inputPrimitiveTopology;	// IMP=0x000000000009f698
- (void)setDepthStencilWriteDisabled:(_Bool)arg1;	// IMP=0x000000000009f66e
- (_Bool)isDepthStencilWriteDisabled;	// IMP=0x000000000009f655
- (void)setSampleCoverageInvert:(_Bool)arg1;	// IMP=0x000000000009f628
- (_Bool)sampleCoverageInvert;	// IMP=0x000000000009f612
- (void)setNeedsCustomBorderColorSamplers:(_Bool)arg1;	// IMP=0x000000000009f5fe
- (_Bool)needsCustomBorderColorSamplers;	// IMP=0x000000000009f5ea
- (void)setOpenGLModeEnabled:(_Bool)arg1;	// IMP=0x000000000009f5bd
- (_Bool)openGLModeEnabled;	// IMP=0x000000000009f5a6
- (void)setPluginData:(id)arg1;	// IMP=0x000000000009f560
- (id)pluginData;	// IMP=0x000000000009f54b
- (void)setFragmentDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x000000000009f537
- (unsigned int)fragmentDepthCompareClampMask;	// IMP=0x000000000009f523
- (void)setVertexDepthCompareClampMask:(unsigned int)arg1;	// IMP=0x000000000009f50f
- (unsigned int)vertexDepthCompareClampMask;	// IMP=0x000000000009f4fb
- (void)setTwoSideEnabled:(_Bool)arg1;	// IMP=0x000000000009f4ce
- (_Bool)isTwoSideEnabled;	// IMP=0x000000000009f4b5
- (void)setPointSizeOutputVS:(_Bool)arg1;	// IMP=0x000000000009f488
- (_Bool)isPointSizeOutputVS;	// IMP=0x000000000009f46f
- (void)setPointCoordLowerLeft:(_Bool)arg1;	// IMP=0x000000000009f442
- (_Bool)isPointCoordLowerLeft;	// IMP=0x000000000009f429
- (void)setPointSmoothEnabled:(_Bool)arg1;	// IMP=0x000000000009f3fc
- (_Bool)isPointSmoothEnabled;	// IMP=0x000000000009f3e3
- (unsigned char)clipDistanceEnableMask;	// IMP=0x000000000009f3c9
- (void)setClipDistanceEnableMask:(unsigned char)arg1;	// IMP=0x000000000009f39c
- (void)setAlphaTestFunction:(unsigned long long)arg1;	// IMP=0x000000000009f36e
- (unsigned long long)alphaTestFunction;	// IMP=0x000000000009f354
- (void)setAlphaTestEnabled:(_Bool)arg1;	// IMP=0x000000000009f327
- (_Bool)isAlphaTestEnabled;	// IMP=0x000000000009f30e
- (void)setLogicOperation:(unsigned long long)arg1;	// IMP=0x000000000009f2e0
- (unsigned long long)logicOperation;	// IMP=0x000000000009f2c6
- (void)setLogicOperationEnabled:(_Bool)arg1;	// IMP=0x000000000009f296
- (_Bool)isLogicOperationEnabled;	// IMP=0x000000000009f27f
- (void)setColorSampleCount:(unsigned long long)arg1;	// IMP=0x000000000009f26a
- (unsigned long long)colorSampleCount;	// IMP=0x000000000009f255
- (void)setMaxVertexAmplificationCount:(unsigned long long)arg1;	// IMP=0x000000000009f241
- (unsigned long long)maxVertexAmplificationCount;	// IMP=0x000000000009f22d
- (void)setVertexAmplificationMode:(unsigned long long)arg1;	// IMP=0x000000000009f1cc
- (unsigned long long)vertexAmplificationMode;	// IMP=0x000000000009f1b2
- (void)setRasterizationEnabled:(_Bool)arg1;	// IMP=0x000000000009f18b
- (_Bool)isRasterizationEnabled;	// IMP=0x000000000009f172
- (void)setAlphaToOneEnabled:(_Bool)arg1;	// IMP=0x000000000009f14b
- (_Bool)isAlphaToOneEnabled;	// IMP=0x000000000009f133
- (void)setAlphaToCoverageEnabled:(_Bool)arg1;	// IMP=0x000000000009f10d
- (_Bool)isAlphaToCoverageEnabled;	// IMP=0x000000000009f0f7
- (void)setSampleCoverage:(float)arg1;	// IMP=0x000000000009f0e1
- (float)sampleCoverage;	// IMP=0x000000000009f0cb
- (void)setSampleMask:(unsigned long long)arg1;	// IMP=0x000000000009f0b6
- (unsigned long long)sampleMask;	// IMP=0x000000000009f0a1
- (void)setRasterSampleCount:(unsigned long long)arg1;	// IMP=0x000000000009f08c
- (unsigned long long)rasterSampleCount;	// IMP=0x000000000009f077
- (void)setSampleCount:(unsigned long long)arg1;	// IMP=0x000000000009f065
- (unsigned long long)sampleCount;	// IMP=0x000000000009f053
@property(nonatomic) unsigned long long postVertexDumpBufferIndex;
- (void)setResourceIndex:(unsigned long long)arg1;	// IMP=0x000000000009f014
- (unsigned long long)resourceIndex;	// IMP=0x000000000009efff
- (void)setForceResourceIndex:(_Bool)arg1;	// IMP=0x000000000009efd1
- (_Bool)forceResourceIndex;	// IMP=0x000000000009efbb
- (long long)textureWriteRoundingMode;	// IMP=0x000000000009ef9f
- (void)setTextureWriteRoundingMode:(long long)arg1;	// IMP=0x000000000009ef8a
- (void)setSupportIndirectCommandBuffers:(_Bool)arg1;	// IMP=0x000000000009ef76
- (_Bool)supportIndirectCommandBuffers;	// IMP=0x000000000009ef62
- (void)setTessellationOutputWindingOrder:(unsigned long long)arg1;	// IMP=0x000000000009ef1f
- (unsigned long long)tessellationOutputWindingOrder;	// IMP=0x000000000009ef0a
- (void)setTessellationFactorStepFunction:(unsigned long long)arg1;	// IMP=0x000000000009eec7
- (unsigned long long)tessellationFactorStepFunction;	// IMP=0x000000000009eeb2
- (void)setTessellationControlPointIndexType:(unsigned long long)arg1;	// IMP=0x000000000009ee72
- (unsigned long long)tessellationControlPointIndexType;	// IMP=0x000000000009ee60
- (void)setTessellationFactorFormat:(unsigned long long)arg1;	// IMP=0x000000000009ee20
- (unsigned long long)tessellationFactorFormat;	// IMP=0x000000000009ee0e
- (void)setTessellationFactorScaleEnabled:(_Bool)arg1;	// IMP=0x000000000009edfd
- (_Bool)isTessellationFactorScaleEnabled;	// IMP=0x000000000009edec
- (void)setMaxTessellationFactor:(unsigned long long)arg1;	// IMP=0x000000000009eda6
- (unsigned long long)maxTessellationFactor;	// IMP=0x000000000009ed94
- (void)setTessellationPartitionMode:(unsigned long long)arg1;	// IMP=0x000000000009ed54
- (unsigned long long)tessellationPartitionMode;	// IMP=0x000000000009ed42
@property(nonatomic) _Bool forceSoftwareVertexFetch;
- (id)description;	// IMP=0x000000000009ece8
- (id)formattedDescription:(unsigned long long)arg1;	// IMP=0x000000000009def8
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000009db22
- (void)dealloc;	// IMP=0x000000000009da3a
- (id)init;	// IMP=0x000000000009d8c9

@end

