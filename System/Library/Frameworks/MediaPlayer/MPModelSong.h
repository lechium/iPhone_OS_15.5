//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MPGaplessInfo, MPModelAlbum, MPModelArtist, MPModelComposer, MPModelFileAsset, MPModelGenre, MPModelHomeSharingAsset, MPModelLyrics, MPModelPlaybackPosition, MPModelStoreAsset, NSDate, NSString;

@interface MPModelSong
{
}

+ (id)__traits_KEY;	// IMP=0x000000000004fcd1
+ (id)__downloadedDate_KEY;	// IMP=0x000000000004fcc4
+ (id)__playbackPosition_KEY;	// IMP=0x000000000004fcb7
+ (id)__volumeAdjustment_KEY;	// IMP=0x000000000004fcaa
+ (id)__gaplessInfo_KEY;	// IMP=0x000000000004fc9d
+ (id)__cloudStatus_KEY;	// IMP=0x000000000004fc90
+ (id)__userRating_KEY;	// IMP=0x000000000004fc83
+ (id)__storeAsset_KEY;	// IMP=0x000000000004fc76
+ (id)__homeSharingAsset_KEY;	// IMP=0x000000000004fc69
+ (id)__year_KEY;	// IMP=0x000000000004fc5c
+ (id)__classicalMovementNumber_KEY;	// IMP=0x000000000004fc4f
+ (id)__classicalMovementCount_KEY;	// IMP=0x000000000004fc42
+ (id)__classicalMovement_KEY;	// IMP=0x000000000004fc35
+ (id)__classicalWork_KEY;	// IMP=0x000000000004fc28
+ (id)__hasCloudSyncSource_KEY;	// IMP=0x000000000004fc1b
+ (id)__libraryAddEligible_KEY;	// IMP=0x000000000004fc0e
+ (id)__lastDevicePlaybackDate_KEY;	// IMP=0x000000000004fc01
+ (id)__libraryAddedDate_KEY;	// IMP=0x000000000004fbf4
+ (id)__libraryAdded_KEY;	// IMP=0x000000000004fbe7
+ (id)__keepLocalManagedStatus_KEY;	// IMP=0x000000000004fbda
+ (id)__keepLocalEnableState_KEY;	// IMP=0x000000000004fbcd
+ (id)__localFileAsset_KEY;	// IMP=0x000000000004fbc0
+ (id)__artworkCatalogBlock_KEY;	// IMP=0x000000000004fbb3
+ (id)__volumeNormalization_KEY;	// IMP=0x000000000004fba6
+ (id)__shouldShowComposer_KEY;	// IMP=0x000000000004fb99
+ (id)__lyrics_KEY;	// IMP=0x000000000004fb8c
+ (id)__beatsPerMinute_KEY;	// IMP=0x000000000004fb7f
+ (id)__hasVideo_KEY;	// IMP=0x000000000004fb72
+ (id)__artistUploadedContent_KEY;	// IMP=0x000000000004fb65
+ (id)__explicitSong_KEY;	// IMP=0x000000000004fb58
+ (id)__skipCount_KEY;	// IMP=0x000000000004fb4b
+ (id)__playCount_KEY;	// IMP=0x000000000004fb3e
+ (id)__discNumber_KEY;	// IMP=0x000000000004fb31
+ (id)__trackNumber_KEY;	// IMP=0x000000000004fb24
+ (id)__trackCount_KEY;	// IMP=0x000000000004fb17
+ (id)__duration_KEY;	// IMP=0x000000000004fb0a
+ (id)__copyrightText_KEY;	// IMP=0x000000000004fafd
+ (id)__grouping_KEY;	// IMP=0x000000000004faf0
+ (id)__composer_KEY;	// IMP=0x000000000004fae3
+ (id)__genre_KEY;	// IMP=0x000000000004fad6
+ (id)__artist_KEY;	// IMP=0x000000000004fac9
+ (id)__album_KEY;	// IMP=0x000000000004fabc
+ (id)__title_KEY;	// IMP=0x000000000004faaf
+ (id)kindWithVariants:(unsigned long long)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000004fa96
+ (id)kindWithVariants:(unsigned long long)arg1;	// IMP=0x000000000004fa82
+ (id)requiredLibraryAddStatusObservationProperties;	// IMP=0x00000000001b3fee
+ (_Bool)supportsLibraryAddStatusObservation;	// IMP=0x00000000001b3fe6
+ (_Bool)supportsLibraryRemoval;	// IMP=0x00000000001cca52
+ (id)requiredLibraryRemovalProperties;	// IMP=0x00000000001cc873
+ (_Bool)supportsKeepLocalStatusObservation;	// IMP=0x00000000001cd6dd
+ (id)requiredKeepLocalStatusObservationProperties;	// IMP=0x00000000001cd4fe
+ (long long)genericObjectType;	// IMP=0x000000000020b7ad
+ (id)requiredStoreLibraryPersonalizationProperties;	// IMP=0x00000000002261a8
- (id)artworkCatalog;	// IMP=0x000000000004fa2a
- (id)humanDescription;	// IMP=0x000000000004f8bd
- (id)mediaItemPropertyValues;	// IMP=0x0000000000125be6
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;	// IMP=0x00000000001b3c02
- (long long)libraryRemovalSupportedOptions;	// IMP=0x00000000001cc474
- (id)newKeepLocalStatusObserverConfiguration;	// IMP=0x00000000001ccf9f
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;	// IMP=0x0000000000224d98
- (id)relativeModelObjectForStoreLibraryPersonalization;	// IMP=0x0000000000224d8f
- (id)personalizationScopedPropertiesForProperties:(id)arg1;	// IMP=0x0000000000224d82

// Remaining properties
@property(retain, nonatomic) MPModelAlbum *album; // @dynamic album;
@property(retain, nonatomic) MPModelArtist *artist; // @dynamic artist;
@property(nonatomic, getter=isArtistUploadedContent) _Bool artistUploadedContent; // @dynamic artistUploadedContent;
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @dynamic artworkCatalogBlock;
@property(nonatomic) long long beatsPerMinute; // @dynamic beatsPerMinute;
@property(copy, nonatomic) NSString *classicalMovement; // @dynamic classicalMovement;
@property(nonatomic) long long classicalMovementCount; // @dynamic classicalMovementCount;
@property(nonatomic) long long classicalMovementNumber; // @dynamic classicalMovementNumber;
@property(copy, nonatomic) NSString *classicalWork; // @dynamic classicalWork;
@property(nonatomic) long long cloudStatus; // @dynamic cloudStatus;
@property(retain, nonatomic) MPModelComposer *composer; // @dynamic composer;
@property(copy, nonatomic) NSString *copyrightText; // @dynamic copyrightText;
@property(nonatomic) long long discNumber; // @dynamic discNumber;
@property(readonly, copy, nonatomic) NSDate *downloadedDate; // @dynamic downloadedDate;
@property(nonatomic) double duration; // @dynamic duration;
@property(nonatomic, getter=isExplicitSong) _Bool explicitSong; // @dynamic explicitSong;
@property(retain, nonatomic) MPGaplessInfo *gaplessInfo; // @dynamic gaplessInfo;
@property(retain, nonatomic) MPModelGenre *genre; // @dynamic genre;
@property(copy, nonatomic) NSString *grouping; // @dynamic grouping;
@property(nonatomic) _Bool hasCloudSyncSource; // @dynamic hasCloudSyncSource;
@property(nonatomic) _Bool hasVideo; // @dynamic hasVideo;
@property(retain, nonatomic) MPModelHomeSharingAsset *homeSharingAsset; // @dynamic homeSharingAsset;
@property(nonatomic) long long keepLocalEnableState; // @dynamic keepLocalEnableState;
@property(nonatomic) long long keepLocalManagedStatus; // @dynamic keepLocalManagedStatus;
@property(readonly, copy, nonatomic) NSDate *lastDevicePlaybackDate; // @dynamic lastDevicePlaybackDate;
@property(nonatomic, getter=isLibraryAddEligible) _Bool libraryAddEligible; // @dynamic libraryAddEligible;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @dynamic libraryAdded;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @dynamic libraryAddedDate;
@property(retain, nonatomic) MPModelFileAsset *localFileAsset; // @dynamic localFileAsset;
@property(retain, nonatomic) MPModelLyrics *lyrics; // @dynamic lyrics;
@property(nonatomic) long long playCount; // @dynamic playCount;
@property(retain, nonatomic) MPModelPlaybackPosition *playbackPosition; // @dynamic playbackPosition;
@property(nonatomic) _Bool shouldShowComposer; // @dynamic shouldShowComposer;
@property(nonatomic) long long skipCount; // @dynamic skipCount;
@property(retain, nonatomic) MPModelStoreAsset *storeAsset; // @dynamic storeAsset;
@property(copy, nonatomic) NSString *title; // @dynamic title;
@property(nonatomic) long long trackCount; // @dynamic trackCount;
@property(nonatomic) long long trackNumber; // @dynamic trackNumber;
@property(nonatomic) unsigned long long traits; // @dynamic traits;
@property(nonatomic) float userRating; // @dynamic userRating;
@property(nonatomic) float volumeAdjustment; // @dynamic volumeAdjustment;
@property(nonatomic) float volumeNormalization; // @dynamic volumeNormalization;
@property(nonatomic) long long year; // @dynamic year;

@end

