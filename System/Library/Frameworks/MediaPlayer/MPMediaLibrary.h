//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlayer/NSSecureCoding-Protocol.h>
#import <MediaPlayer/_MPActiveUserChangeMonitorDelegate-Protocol.h>

@class ICUserIdentity, ML3MusicLibrary, MPMediaLibraryPrivacyContext, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSNumber, NSPointerArray, NSString, NSURL, QueryCriteriaResultsCache, _MPActiveUserChangeMonitor;
@protocol MPMediaLibraryDataProviderPrivate, OS_dispatch_queue;

@interface MPMediaLibrary : NSObject <_MPActiveUserChangeMonitorDelegate, NSSecureCoding>
{
    MPMediaLibraryPrivacyContext *_privacyContext;	// 8 = 0x8
    id <MPMediaLibraryDataProviderPrivate> _libraryDataProvider;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_entityCacheQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_fixedQueue;	// 32 = 0x20
    NSArray *_notificationObservers;	// 40 = 0x28
    QueryCriteriaResultsCache *_itemsForCriteriaCache;	// 48 = 0x30
    QueryCriteriaResultsCache *_hasItemsForCriteriaCache;	// 56 = 0x38
    QueryCriteriaResultsCache *_countOfItemsForCriteriaCache;	// 64 = 0x40
    QueryCriteriaResultsCache *_itemResultSetsForCriteriaCache;	// 72 = 0x48
    QueryCriteriaResultsCache *_collectionsForCriteriaCache;	// 80 = 0x50
    QueryCriteriaResultsCache *_hasCollectionsForCriteriaCache;	// 88 = 0x58
    QueryCriteriaResultsCache *_countOfCollectionsForCriteriaCache;	// 96 = 0x60
    QueryCriteriaResultsCache *_collectionsResultSetsForCriteriaCache;	// 104 = 0x68
    NSMutableDictionary *_hasItemsDidLoadForCriteria;	// 112 = 0x70
    NSMutableDictionary *_hasCollectionsDidLoadForCriteria;	// 120 = 0x78
    NSMutableDictionary *_countOfCollectionsDidLoadForCriteria;	// 128 = 0x80
    NSMutableDictionary *_countOfItemsDidLoadForCriteria;	// 136 = 0x88
    NSMutableArray *_additionalLibraryFilterPredicates;	// 144 = 0x90
    NSObject<OS_dispatch_queue> *_additionalLibraryFilterPredicatesAccessQueue;	// 152 = 0x98
    NSPointerArray *_connectionAssertions;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_connectionAssertionsQueue;	// 168 = 0xa8
    _Bool _disconnectAfterReleasingAssertions;	// 176 = 0xb0
    float _connectionProgress;	// 180 = 0xb4
    long long _removalReason;	// 184 = 0xb8
    unsigned int _determinedHasMedia:1;	// 192 = 0xc0
    unsigned int _hasMedia:1;	// 192 = 0xc0
    unsigned int _determinedHasSongs:1;	// 192 = 0xc0
    unsigned int _hasSongs:1;	// 192 = 0xc0
    unsigned int _determinedHasGeniusMixes:1;	// 192 = 0xc0
    unsigned int _hasGeniusMixes:1;	// 192 = 0xc0
    unsigned int _determinedHasPlaylists:1;	// 192 = 0xc0
    unsigned int _hasPlaylists:1;	// 192 = 0xc0
    unsigned int _determinedHasComposers:1;	// 193 = 0xc1
    unsigned int _hasComposers:1;	// 193 = 0xc1
    unsigned int _determinedHasPodcasts:1;	// 193 = 0xc1
    unsigned int _hasPodcasts:1;	// 193 = 0xc1
    unsigned int _determinedHasUbiquitousBookmarkableItems:1;	// 193 = 0xc1
    unsigned int _hasUbiquitousBookmarkableContent:1;	// 193 = 0xc1
    unsigned int _determinedHasAudiobooks:1;	// 193 = 0xc1
    unsigned int _hasAudiobooks:1;	// 193 = 0xc1
    long long _cloudFilteringType;	// 200 = 0xc8
    _Bool _filteringDisabled;	// 208 = 0xd0
    _Bool _hasVideos;	// 209 = 0xd1
    _Bool _determinedHasVideos;	// 210 = 0xd2
    _Bool _hasMusicVideos;	// 211 = 0xd3
    _Bool _determinedHasMusicVideos;	// 212 = 0xd4
    _Bool _hasAudibleAudioBooks;	// 213 = 0xd5
    _Bool _determinedHasAudibleAudioBooks;	// 214 = 0xd6
    _Bool _hasMovies;	// 215 = 0xd7
    _Bool _determinedHasMovies;	// 216 = 0xd8
    _Bool _hasCompilations;	// 217 = 0xd9
    _Bool _determinedHasCompilations;	// 218 = 0xda
    _Bool _hasITunesU;	// 219 = 0xdb
    _Bool _determinedHasITunesU;	// 220 = 0xdc
    _Bool _hasVideoITunesU;	// 221 = 0xdd
    _Bool _determinedHasVideoITunesU;	// 222 = 0xde
    _Bool _hasMovieRentals;	// 223 = 0xdf
    _Bool _determinedHasMovieRentals;	// 224 = 0xe0
    _Bool _hasTVShows;	// 225 = 0xe1
    _Bool _determinedHasTVShows;	// 226 = 0xe2
    _Bool _hasHomeVideos;	// 227 = 0xe3
    _Bool _determinedHasHomeVideos;	// 228 = 0xe4
    _Bool _hasVideoPodcasts;	// 229 = 0xe5
    _Bool _determinedHasVideoPodcasts;	// 230 = 0xe6
    unsigned char _originalCellNetworkFlags;	// 231 = 0xe7
    unsigned char _originalWiFiNetworkFlags;	// 232 = 0xe8
    struct os_unfair_lock_s __MLCoreStorageLock;	// 236 = 0xec
    id __MLCoreStorage;	// 240 = 0xf0
    ICUserIdentity *_userIdentity;	// 248 = 0xf8
    long long _libraryChangeObservers;	// 256 = 0x100
    _MPActiveUserChangeMonitor *_activeUserChangeMonitor;	// 264 = 0x108
    struct os_unfair_lock_s *__MLCoreStorageLockPointer;	// 272 = 0x110
}

+ (void)libraryPathDidChangeForDataProvider:(id)arg1;	// IMP=0x00000000000ebc5f
+ (void)uniqueIdentifierDidChangeForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000ebbf1
+ (void)syncGenerationDidChangeForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000ebba6
+ (void)reloadDisplayValuesForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000ebb38
+ (void)reloadInvisiblePropertiesForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000ebaf9
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000ebaba
+ (void)postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:(id)arg1;	// IMP=0x00000000000eba6f
+ (void)reloadLibraryDataProvider:(id)arg1;	// IMP=0x00000000000eb964
+ (void)removeLibraryDataProvider:(id)arg1 removalReason:(long long)arg2;	// IMP=0x00000000000eb799
+ (void)addLibraryDataProvider:(id)arg1;	// IMP=0x00000000000eb5fa
+ (id)libraryDataProviders;	// IMP=0x00000000000eb5b2
+ (id)_libraryDataProviders;	// IMP=0x00000000000eb575
+ (id)_libraryForDataProvider:(id)arg1;	// IMP=0x00000000000eb3a0
+ (id)mediaLibraryWithUniqueIdentifier:(id)arg1 allowsLoadingFromDisk:(_Bool)arg2;	// IMP=0x00000000000eb361
+ (id)mediaLibraryWithUniqueIdentifier:(id)arg1;	// IMP=0x00000000000eb15e
+ (id)sharedMediaLibraries;	// IMP=0x00000000000eaf89
+ (id)mediaLibraries;	// IMP=0x00000000000eaf41
+ (id)_mediaLibraries;	// IMP=0x00000000000eaede
+ (void)_endDiscoveringMediaLibrariesIfAllowed;	// IMP=0x00000000000eac95
+ (void)setRunLoopForNotifications:(id)arg1;	// IMP=0x00000000000eac8f
+ (void)setLibraryServerDisabled:(_Bool)arg1;	// IMP=0x00000000000eac89
+ (_Bool)isLibraryServerDisabled;	// IMP=0x00000000000eac81
+ (void)logDatabaseAccess;	// IMP=0x00000000000eac11
+ (void)setGlobalPrivacyClientWithAuditToken:(CDStruct_6ad76789)arg1;	// IMP=0x00000000000eab6f
+ (void)requestAuthorization:(CDUnknownBlockType)arg1;	// IMP=0x00000000000eaaab
+ (long long)authorizationStatus;	// IMP=0x00000000000eaa49
+ (long long)_mediaLibraryAuthorizationStatusFromCloudServiceAuthorizationStatus:(long long)arg1;	// IMP=0x00000000000eaa35
+ (id)_sharedCloudServiceStatusMonitor;	// IMP=0x00000000000eaa05
+ (void)endDiscoveringMediaLibraries;	// IMP=0x00000000000ea972
+ (void)beginDiscoveringMediaLibraries;	// IMP=0x00000000000ea8f8
+ (void)_postNotificationName:(id)arg1 library:(id)arg2 userInfo:(id)arg3;	// IMP=0x00000000000ea717
+ (void)_postNotificationName:(id)arg1 library:(id)arg2;	// IMP=0x00000000000ea6fb
+ (id)_mediaLibraryWithUniqueIdentifier:(id)arg1 userDSID:(id)arg2;	// IMP=0x00000000000e9d40
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000e9d38
+ (id)_deviceMediaLibraryWithUserIdentity:(id)arg1 createIfRequired:(_Bool)arg2;	// IMP=0x00000000000e9ac7
+ (id)deviceMediaLibraryWithUserIdentity:(id)arg1;	// IMP=0x00000000000e99fd
+ (id)deviceMediaLibrary;	// IMP=0x00000000000e99cd
+ (void)setDefaultMediaLibrary:(id)arg1;	// IMP=0x00000000000e987a
+ (id)defaultMediaLibrary;	// IMP=0x00000000000e9786
+ (void)initialize;	// IMP=0x00000000000e9762
- (void).cxx_destruct;	// IMP=0x00000000000e58ee
@property(readonly, nonatomic) struct os_unfair_lock_s *_MLCoreStorageLockPointer; // @synthesize _MLCoreStorageLockPointer=__MLCoreStorageLockPointer;
@property(retain, nonatomic) _MPActiveUserChangeMonitor *activeUserChangeMonitor; // @synthesize activeUserChangeMonitor=_activeUserChangeMonitor;
@property(readonly, nonatomic) struct os_unfair_lock_s _MLCoreStorageLock; // @synthesize _MLCoreStorageLock=__MLCoreStorageLock;
@property(retain, nonatomic, setter=_setMLCoreStorage:) id _MLCoreStorage; // @synthesize _MLCoreStorage=__MLCoreStorage;
- (_Bool)recordPlayEventForPlaylistPersistentID:(long long)arg1;	// IMP=0x00000000000e5845
- (_Bool)recordPlayEventForAlbumPersistentID:(long long)arg1;	// IMP=0x00000000000e57f7
- (void)addNonLibraryOwnedPlaylistsWithGlobalIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e55e0
- (void)addNonLibraryOwnedPlaylistWithGlobalID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e539a
- (void)addGlobalPlaylistWithID:(id)arg1 andAddToCloudLibrary:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000e51c3
- (_Bool)importOriginalArtworkFromImageData:(id)arg1 withArtworkToken:(id)arg2 artworkType:(long long)arg3 sourceType:(long long)arg4 mediaType:(unsigned long long)arg5;	// IMP=0x00000000000e5124
- (void)importArtworkTokenForEntityPersistentID:(unsigned long long)arg1 entityType:(long long)arg2 artworkToken:(id)arg3 artworkType:(long long)arg4 sourceType:(long long)arg5;	// IMP=0x00000000000e50a8
- (void)addTracksToMyLibrary:(id)arg1;	// IMP=0x00000000000e5055
- (void)addPlaylistStoreItemsWithMetadata:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e48d1
- (void)getPlaylistWithUUID:(id)arg1 creationMetadata:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000e3d96
- (void)performStoreItemLibraryImport:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e3bca
- (void)addStoreItemIDs:(id)arg1 referralObject:(id)arg2 andAddTracksToCloudLibrary:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00000000000e3922
- (void)addStoreItemIDs:(id)arg1 andAddTracksToCloudLibrary:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000e3908
- (void)addStoreItem:(long long)arg1 andAddTracksToCloudLibrary:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000e3830
- (id)artworkDataSource;	// IMP=0x00000000000e37e0
- (id)libraryDataProvider;	// IMP=0x00000000000e37d2
- (id)_initWithLibraryDataProvider:(id)arg1;	// IMP=0x00000000000e3697
@property(readonly, nonatomic) long long libraryChangeObservers; // @synthesize libraryChangeObservers=_libraryChangeObservers;
@property(readonly, copy, nonatomic) ICUserIdentity *userIdentity; // @synthesize userIdentity=_userIdentity;
@property(readonly, nonatomic) ML3MusicLibrary *ml3Library;
- (void)_tearDownNotifications;	// IMP=0x00000000000e332b
- (void)_setupNotifications;	// IMP=0x00000000000e2e0e
- (void)_disconnect;	// IMP=0x00000000000e2c9f
- (void)_removeConnectionAssertion:(id)arg1;	// IMP=0x00000000000e2b8a
- (id)_collectionsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e2958
- (void)_setLibraryFilterPredicates;	// IMP=0x00000000000e26a2
- (long long)cloudFilteringType;	// IMP=0x00000000000e261a
- (void)setCloudFilteringType:(long long)arg1;	// IMP=0x00000000000e2372
- (void)_clearPendingDisconnection;	// IMP=0x00000000000e2324
- (id)_collectionPersistentIdentifiersForQueryCriteria:(id)arg1;	// IMP=0x00000000000e2117
- (id)_itemPersistentIdentifiersForQueryCriteria:(id)arg1;	// IMP=0x00000000000e1f0a
- (unsigned long long)_countOfCollectionsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e1d38
- (unsigned long long)_countOfItemsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e1b66
- (_Bool)_hasCollectionsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e1993
- (_Bool)_hasItemsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e17c0
- (id)_getCachedValueForQueryCritiera:(id)arg1 valueCriteriaCache:(id)arg2 entitiesForCriteriaCache:(id)arg3 didLoadBlocksByQueryCriteria:(id)arg4 valueLoadedFromEntitiesArrayBlock:(CDUnknownBlockType)arg5 loadValueFromDataProviderBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000000e148d
- (id)_itemsForQueryCriteria:(id)arg1;	// IMP=0x00000000000e11d3
- (_Bool)collectionExistsContainedWithinSyncIDs:(id)arg1 groupingType:(long long)arg2 existentPID:(unsigned long long *)arg3;	// IMP=0x00000000000e11bd
- (_Bool)collectionExistsWithCloudUniversalLibraryID:(id)arg1 groupingType:(long long)arg2 existentPID:(unsigned long long *)arg3;	// IMP=0x00000000000e11a7
- (_Bool)collectionExistsWithSagaID:(long long)arg1 groupingType:(long long)arg2 existentPID:(unsigned long long *)arg3;	// IMP=0x00000000000e1191
- (_Bool)collectionExistsWithStoreID:(long long)arg1 groupingType:(long long)arg2 existentPID:(unsigned long long *)arg3;	// IMP=0x00000000000e117b
- (_Bool)collectionExistsWithName:(id)arg1 groupingType:(long long)arg2 existentPID:(unsigned long long *)arg3;	// IMP=0x00000000000e1165
- (_Bool)collectionExistsContainedWithinPersistentIDs:(const unsigned long long *)arg1 count:(unsigned long long)arg2 groupingType:(long long)arg3 existentPID:(unsigned long long *)arg4;	// IMP=0x00000000000e114f
- (void)_performBlockOnLibraryHandlingTheSameAccount:(CDUnknownBlockType)arg1;	// IMP=0x00000000000e0f85
- (_Bool)_handlesSameAccountAs:(id)arg1;	// IMP=0x00000000000e0e56
- (void)activeUserChangeDidFinish;	// IMP=0x00000000000e0db8
- (unsigned long long)_persistentIDForAssetURL:(id)arg1;	// IMP=0x00000000000e0a28
- (id)pathForAssetURL:(id)arg1;	// IMP=0x00000000000e09a9
- (_Bool)isValidAssetURL:(id)arg1;	// IMP=0x00000000000e0990
- (id)entityWithPersistentID:(long long)arg1 entityType:(long long)arg2;	// IMP=0x00000000000e08b8
- (id)entityWithSpotlightIdentifier:(id)arg1;	// IMP=0x00000000000e0821
- (id)entityWithLibraryURL:(id)arg1;	// IMP=0x00000000000e0549
- (id)entityWithMultiverseIdentifier:(id)arg1;	// IMP=0x00000000000e04b0
- (id)multiverseIdentifierForCollectionWithPersistentID:(long long)arg1 groupingType:(long long)arg2;	// IMP=0x00000000000e049a
- (id)multiverseIdentifierForTrackWithPersistentID:(long long)arg1;	// IMP=0x00000000000e0484
- (_Bool)deleteDatabaseProperty:(id)arg1;	// IMP=0x00000000000e046e
- (_Bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2;	// IMP=0x00000000000e0458
- (id)valueForDatabaseProperty:(id)arg1;	// IMP=0x00000000000e0442
- (id)entityCache;	// IMP=0x00000000000e042c
- (id)syncValidity;	// IMP=0x00000000000e0416
- (float)connectionProgress;	// IMP=0x00000000000e0408
- (_Bool)isCurrentThreadInTransaction;	// IMP=0x00000000000e03cf
- (void)performReadTransactionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000e0372
- (_Bool)performTransactionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000e030e
- (id)connectionAssertionWithIdentifier:(id)arg1;	// IMP=0x00000000000e0239
- (void)connectWithAuthenticationData:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e01ab
- (_Bool)requiresAuthentication;	// IMP=0x00000000000e0172
- (id)preferredSubtitleLanguages;	// IMP=0x00000000000e012c
- (id)preferredAudioLanguages;	// IMP=0x00000000000e00e6
- (_Bool)isGeniusEnabled;	// IMP=0x00000000000e00ad
- (void)geniusItemsForSeedItem:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000e0034
- (void)setValues:(id)arg1 forProperties:(id)arg2 forItemPersistentIDs:(id)arg3;	// IMP=0x00000000000dfed4
- (void)clearLocationPropertiesOfItem:(id)arg1;	// IMP=0x00000000000dfe6e
- (void)populateLocationPropertiesOfItem:(id)arg1 withPath:(id)arg2 assetProtectionType:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000dfd9c
- (void)populateLocationPropertiesOfItem:(id)arg1 withPath:(id)arg2 assetProtectionType:(long long)arg3;	// IMP=0x00000000000dfd07
- (void)downloadAsset:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000dfb7a
- (_Bool)removePlaylist:(id)arg1;	// IMP=0x00000000000dfb0b
- (_Bool)removeItems:(id)arg1;	// IMP=0x00000000000df9fb
- (_Bool)deleteItems:(id)arg1;	// IMP=0x00000000000df8eb
- (id)URLForHomeSharingRequest:(id)arg1;	// IMP=0x00000000000df875
- (unsigned int)homeSharingDatabaseID;	// IMP=0x00000000000df830
- (unsigned long long)syncPlaylistId;	// IMP=0x00000000000df7e5
- (void)setSyncPlaylistId:(unsigned long long)arg1;	// IMP=0x00000000000df78b
- (id)addPlaylistWithName:(id)arg1 activeGeniusPlaylist:(_Bool)arg2;	// IMP=0x00000000000df677
- (id)addPlaylistWithName:(id)arg1;	// IMP=0x00000000000df663
- (id)playlistWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000df649
- (id)photosMemoriesPlaylist;	// IMP=0x00000000000df5eb
- (id)playbackHistoryPlaylist;	// IMP=0x00000000000df58d
- (id)localizedSectionIndexTitles;	// IMP=0x00000000000df577
- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1;	// IMP=0x00000000000df561
- (id)newPlaylistWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000df3fd
- (id)decodeItemWithCoder:(id)arg1;	// IMP=0x00000000000df3b0
- (id)itemWithStoreID:(unsigned long long)arg1;	// IMP=0x00000000000df340
- (id)itemWithPersistentID:(unsigned long long)arg1 verifyExistence:(_Bool)arg2;	// IMP=0x00000000000df2e4
- (id)itemWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000df2cd
- (id)collectionWithPersistentID:(unsigned long long)arg1 groupingType:(long long)arg2 verifyExistence:(_Bool)arg3;	// IMP=0x00000000000df142
- (id)collectionWithPersistentID:(unsigned long long)arg1 groupingType:(long long)arg2;	// IMP=0x00000000000df12a
- (_Bool)collectionExistsWithPersistentID:(unsigned long long)arg1 groupingType:(long long)arg2;	// IMP=0x00000000000df114
- (_Bool)playlistExistsWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000df014
- (_Bool)itemExistsInDatabaseWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000def05
- (_Bool)itemExistsWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000dee05
- (_Bool)hasUserPlaylistsContainingAppleMusicContent;	// IMP=0x00000000000ded74
- (_Bool)hasAddedToLibraryAppleMusicContent;	// IMP=0x00000000000dece3
- (_Bool)hasUserPlaylists;	// IMP=0x00000000000dec52
- (_Bool)hasVideoPodcasts;	// IMP=0x00000000000dec25
- (_Bool)hasHomeVideos;	// IMP=0x00000000000debf8
- (_Bool)hasTVShows;	// IMP=0x00000000000debcb
- (_Bool)hasMovieRentals;	// IMP=0x00000000000deba4
- (_Bool)hasVideoITunesUContent;	// IMP=0x00000000000deb77
- (_Bool)hasAudioITunesUContent;	// IMP=0x00000000000deb4a
- (_Bool)hasITunesUContent;	// IMP=0x00000000000deb1d
- (_Bool)hasCompilations;	// IMP=0x00000000000deaf6
- (_Bool)hasMovies;	// IMP=0x00000000000deac9
- (_Bool)hasAudibleAudioBooks;	// IMP=0x00000000000deaa2
- (_Bool)hasMusicVideos;	// IMP=0x00000000000dea75
- (_Bool)hasVideos;	// IMP=0x00000000000dea48
- (_Bool)_checkHasContent:(_Bool *)arg1 determined:(_Bool *)arg2 mediaType:(unsigned long long)arg3 queryHasEntitiesBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000dea1f
- (_Bool)_checkHasContent:(_Bool *)arg1 determined:(_Bool *)arg2 queryHasEntitiesBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000de9f6
- (_Bool)hasAudiobooks;	// IMP=0x00000000000de938
- (_Bool)hasComposers;	// IMP=0x00000000000de8b8
- (_Bool)hasGenres;	// IMP=0x00000000000de8a6
- (_Bool)hasUbiquitousBookmarkableItems;	// IMP=0x00000000000de843
- (_Bool)hasPodcasts;	// IMP=0x00000000000de783
- (_Bool)hasSongs;	// IMP=0x00000000000de6c3
- (_Bool)hasAlbums;	// IMP=0x00000000000de6b1
- (_Bool)hasArtists;	// IMP=0x00000000000de69f
- (_Bool)hasPlaylists;	// IMP=0x00000000000de61f
- (_Bool)hasGeniusMixes;	// IMP=0x00000000000de5bc
- (_Bool)hasMedia;	// IMP=0x00000000000de517
- (_Bool)hasMediaOfType:(unsigned long long)arg1;	// IMP=0x00000000000de4b5
- (id)databasePath;	// IMP=0x00000000000de49f
- (id)uniqueIdentifier;	// IMP=0x00000000000de489
@property(nonatomic) long long removalReason;
- (id)name;	// IMP=0x00000000000de459
- (void)removeLibraryFilterPredicate:(id)arg1;	// IMP=0x00000000000de342
- (void)addLibraryFilterPredicate:(id)arg1;	// IMP=0x00000000000de22b
- (id)additionalLibraryFilterPredicates;	// IMP=0x00000000000de16f
- (void)setClientIdentity:(id)arg1;	// IMP=0x00000000000de09a
- (void)logDatabaseAccess;	// IMP=0x00000000000de041
- (long long)status;	// IMP=0x00000000000ddff3
- (_Bool)writable;	// IMP=0x00000000000ddfba
- (_Bool)isHomeSharingLibrary;	// IMP=0x00000000000ddf90
- (_Bool)isDeviceLibrary;	// IMP=0x00000000000dde6c
- (long long)playlistGeneration;	// IMP=0x00000000000dde2e
- (unsigned long long)syncGenerationID;	// IMP=0x00000000000dddf2
- (unsigned long long)currentEntityRevision;	// IMP=0x00000000000dddb6
- (void)addItemWithProductID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ddaad
@property(readonly, nonatomic) NSDate *lastModifiedDate;
- (void)disconnect;	// IMP=0x00000000000dda0d
- (void)connectWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000dd820
- (void)endGeneratingLibraryChangeNotifications;	// IMP=0x00000000000dd7ce
- (void)beginGeneratingLibraryChangeNotifications;	// IMP=0x00000000000dd78b
- (void)_displayValuesDidChangeNotification:(id)arg1;	// IMP=0x00000000000dd73f
- (void)_didReceiveMemoryWarning:(id)arg1;	// IMP=0x00000000000dd728
- (void)_canShowCloudTracksDidChangeNotification:(id)arg1;	// IMP=0x00000000000dd716
- (void)_activeUserDidChangeNotification:(id)arg1;	// IMP=0x00000000000dd686
- (void)_reloadLibraryForPathChange;	// IMP=0x00000000000dd63a
- (void)_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:(id)arg1;	// IMP=0x00000000000dd5a8
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)arg1;	// IMP=0x00000000000dd4fd
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)arg1;	// IMP=0x00000000000dd432
- (void)_reloadLibraryForRestrictionsChange;	// IMP=0x00000000000dd3ba
- (void)_scheduleLibraryChangeNotificationPostingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000dd2ed
- (void)_clearCachedContentDataAndResultSets:(_Bool)arg1;	// IMP=0x00000000000dd289
- (void)_clearCachedEntitiesIncludingResultSets:(_Bool)arg1;	// IMP=0x00000000000dd23b
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000dd0e2
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000dcf44
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000dce4b
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000000dccc2
- (id)initWithClientIdentity:(id)arg1 userIdentity:(id)arg2;	// IMP=0x00000000000dc7eb
- (id)_initWithUserIdentity:(id)arg1;	// IMP=0x00000000000dc7d4
- (id)init;	// IMP=0x00000000000dc734
@property(readonly, nonatomic) shared_ptr_0f3dbfb3 _MediaLibrary_coreLibrary;
@property(readonly, nonatomic) NSURL *protectedContentSupportStorageURL;
- (void)enumerateEntityChangesAfterSyncAnchor:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ec887
- (void)enumerateEntityChangesAfterSyncAnchor:(id)arg1 maximumRevisionType:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000ec86f
- (void)enumerateEntityChangesAfterSyncAnchor:(id)arg1 maximumRevisionType:(long long)arg2 inUsersLibrary:(_Bool)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000000000ec767
@property(readonly, nonatomic) NSString *_syncValidity;
- (id)errorResolverForItem:(id)arg1;	// IMP=0x000000000013a2ba
- (void)clearSagaLastPlaylistPlayDataUploadDate;	// IMP=0x00000000001d89ae
- (void)clearSagaLastItemPlayDataUploadDate;	// IMP=0x00000000001d8971
- (void)clearSagaCloudAccountID;	// IMP=0x00000000001d8934
@property(copy, nonatomic) NSDate *sagaLastSubscribedContainersUpdateTime;
@property(copy, nonatomic) NSDate *sagaLastLibraryUpdateTime;
@property(nonatomic) long long sagaOnDiskDatabaseRevision;
@property(copy, nonatomic) NSString *storefrontIdentifier;
@property(nonatomic) long long sagaDatabaseUserVersion;
@property(copy, nonatomic) NSDate *sagaLastPlaylistPlayDataUploadDate;
@property(copy, nonatomic) NSDate *sagaLastItemPlayDataUploadDate;
@property(copy, nonatomic) NSNumber *sagaAccountID;
- (unsigned long long)filterAvailableContentGroups:(unsigned long long)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x00000000001ec7c1

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

