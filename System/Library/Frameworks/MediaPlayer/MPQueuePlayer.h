//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlayer/MPAVRoutingControllerDelegate-Protocol.h>

@class AVPlayer, AVPlayerItem, AVQueuePlayer, MPAVRoute, MPAVRoutingController, NSArray, NSError, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface MPQueuePlayer : NSObject <MPAVRoutingControllerDelegate>
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 8 = 0x8
    unsigned long long _allowsExternalPlaybackRevisionID;	// 16 = 0x10
    MPAVRoutingController *_routingController;	// 24 = 0x18
    AVPlayerItem *_currentItem;	// 32 = 0x20
    CDStruct_1b6d18a9 _currentTime;	// 40 = 0x28
    _Bool _isExternalPlaybackActive;	// 64 = 0x40
    _Bool _pausedForPlaybackQueueTransaction;	// 65 = 0x41
    MPAVRoute *_lastPickedRoute;	// 72 = 0x48
    CDUnknownBlockType _playbackQueueCommitHandler;	// 80 = 0x50
    long long _playbackQueueTransactionCount;	// 88 = 0x58
    AVQueuePlayer *_player;	// 96 = 0x60
    NSMutableArray *_queuedOperations;	// 104 = 0x68
    float _rate;	// 112 = 0x70
    float _rateBeforePlaybackQueueTransaction;	// 116 = 0x74
    _Bool _routeDidChangeDuringPlaybackQueueTransaction;	// 120 = 0x78
    long long _status;	// 128 = 0x80
    long long _defaultItemEQPresetType;	// 136 = 0x88
    _Bool _outputObscuredDueToInsufficientExternalProtection;	// 144 = 0x90
    unsigned long long _usesAudioOnlyModeForExternalPlaybackRevisionID;	// 152 = 0x98
    unsigned long long _usesExternalPlaybackWhileExternalScreenIsActiveRevisionID;	// 160 = 0xa0
    float _rawRate;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x000000000021f2c9
@property(readonly, nonatomic) float rawRate; // @synthesize rawRate=_rawRate;
@property(nonatomic) long long defaultItemEQPresetType; // @synthesize defaultItemEQPresetType=_defaultItemEQPresetType;
@property(copy, nonatomic) CDUnknownBlockType playbackQueueCommitHandler; // @synthesize playbackQueueCommitHandler=_playbackQueueCommitHandler;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;	// IMP=0x000000000021f1ff
- (float)_userVolume;	// IMP=0x000000000021f1e9
- (void)_setWantsVolumeChangesWhenPausedOrInactive:(_Bool)arg1;	// IMP=0x000000000021f122
- (void)_setUserVolume:(float)arg1;	// IMP=0x000000000021f10c
- (void)_setStoppingFadeOutDuration:(float)arg1;	// IMP=0x000000000021f045
- (void)_setPreferredLanguageList:(id)arg1;	// IMP=0x000000000021ef33
- (void)_setExpectedAssetTypes:(id)arg1;	// IMP=0x000000000021ef1d
@property(copy, nonatomic) NSString *externalPlaybackVideoGravity;
- (void)_setEQPreset:(int)arg1;	// IMP=0x000000000021eeb5
- (void)_setClientName:(id)arg1;	// IMP=0x000000000021ed07
- (_Bool)_resumePlayback:(double)arg1;	// IMP=0x000000000021ec3c
- (void)_currentItemDidChangeNotification:(id)arg1;	// IMP=0x000000000021ea90
@property(readonly, nonatomic) _Bool outputObscuredDueToInsufficientExternalProtection;
@property(readonly, nonatomic) id playerAVAudioSession;
@property(readonly, nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(readonly, nonatomic) _Bool usesAudioOnlyModeForExternalPlayback;
@property(readonly, nonatomic) long long status;
- (void)setUsesExternalPlaybackWhileExternalScreenIsActive:(_Bool)arg1 shouldIgnorePlaybackQueueTransactions:(_Bool)arg2;	// IMP=0x000000000021e831
- (void)setUsesAudioOnlyModeForExternalPlayback:(_Bool)arg1 shouldIgnorePlaybackQueueTransactions:(_Bool)arg2;	// IMP=0x000000000021e650
@property(nonatomic) float rate;
- (void)setMediaSelectionCriteria:(id)arg1 forMediaCharacteristic:(id)arg2;	// IMP=0x000000000021e3d0
- (void)setAllowsExternalPlayback:(_Bool)arg1 shouldIgnorePlaybackQueueTransactions:(_Bool)arg2;	// IMP=0x000000000021e1f5
@property(nonatomic) long long actionAtItemEnd;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000021df78
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x000000000021de49
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x000000000021dd67
- (void)setCurrentPlaybackQueueTransactionDisplayTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x000000000021dd0c
- (void)removeTimeObserver:(id)arg1;	// IMP=0x000000000021dcf6
- (void)removeAllItems;	// IMP=0x000000000021dce0
- (void)removeItem:(id)arg1;	// IMP=0x000000000021dcca
- (void)prepareItem:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000021dca4
@property(readonly, nonatomic) AVPlayer *_player;
- (void)play;	// IMP=0x000000000021dbde
- (void)pause;	// IMP=0x000000000021db26
@property(readonly, nonatomic) NSArray *items;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;
- (void)insertItem:(id)arg1 afterItem:(id)arg2;	// IMP=0x000000000021daf1
@property(readonly, nonatomic) long long _externalProtectionStatus;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) long long externalPlaybackType;
- (CDStruct_1b6d18a9)currentTime;	// IMP=0x000000000021d9bd
@property(readonly, nonatomic) AVPlayerItem *currentItem;
- (void)commitPlaybackQueueTransaction;	// IMP=0x000000000021d614
@property(readonly, nonatomic) _Bool isPlaybackQueueTransactionActive;
- (void)beginPlaybackQueueTransactionAndPause:(_Bool)arg1;	// IMP=0x000000000021d419
@property(readonly, nonatomic) _Bool allowsExternalPlayback;
- (void)advanceToNextItem;	// IMP=0x000000000021d3ed
- (id)addPeriodicTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000021d2df
- (id)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000021d2c9
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000000021ccd3
- (void)dealloc;	// IMP=0x000000000021cbb2
- (id)init;	// IMP=0x000000000021c82e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

