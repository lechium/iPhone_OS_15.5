//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MPModelArtist, MPModelGenre, MPModelSong, NSDate, NSDateComponents, NSString;

@interface MPModelAlbum
{
}

+ (id)__versionHash_KEY;	// IMP=0x00000000003079fe
+ (id)__classicalExperienceAvailable_KEY;	// IMP=0x00000000003079f1
+ (id)__traits_KEY;	// IMP=0x00000000003079e4
+ (id)__downloadedDate_KEY;	// IMP=0x00000000003079d7
+ (id)__songPopularityBlock_KEY;	// IMP=0x00000000003079ca
+ (id)__shortEditorNotes_KEY;	// IMP=0x00000000003079bd
+ (id)__editorNotes_KEY;	// IMP=0x00000000003079b0
+ (id)__preorder_KEY;	// IMP=0x00000000003079a3
+ (id)__lastDevicePlaybackDate_KEY;	// IMP=0x0000000000307996
+ (id)__libraryAddEligible_KEY;	// IMP=0x0000000000307989
+ (id)__keepLocalManagedStatus_KEY;	// IMP=0x000000000030797c
+ (id)__keepLocalEnableState_KEY;	// IMP=0x000000000030796f
+ (id)__volumeNormalization_KEY;	// IMP=0x0000000000307962
+ (id)__libraryAdded_KEY;	// IMP=0x0000000000307955
+ (id)__year_KEY;	// IMP=0x0000000000307948
+ (id)__libraryAddedDate_KEY;	// IMP=0x000000000030793b
+ (id)__copyrightText_KEY;	// IMP=0x000000000030792e
+ (id)__artworkCatalogBlock_KEY;	// IMP=0x0000000000307921
+ (id)__releaseDateComponents_KEY;	// IMP=0x0000000000307914
+ (id)__classical_KEY;	// IMP=0x0000000000307907
+ (id)__compilation_KEY;	// IMP=0x00000000003078fa
+ (id)__hasExplicitContent_KEY;	// IMP=0x00000000003078ed
+ (id)__hasCleanContent_KEY;	// IMP=0x00000000003078e0
+ (id)__discCount_KEY;	// IMP=0x00000000003078d3
+ (id)__maximumItemTrackNumber_KEY;	// IMP=0x00000000003078c6
+ (id)__trackCount_KEY;	// IMP=0x00000000003078b9
+ (id)__representativeSong_KEY;	// IMP=0x00000000003078ac
+ (id)__genre_KEY;	// IMP=0x000000000030789f
+ (id)__artist_KEY;	// IMP=0x0000000000307892
+ (id)__title_KEY;	// IMP=0x0000000000307885
+ (id)kindWithVariants:(unsigned long long)arg1 songKind:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000030786c
+ (id)kindWithVariants:(unsigned long long)arg1 songKind:(id)arg2;	// IMP=0x0000000000307857
+ (id)kindWithSongKind:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x000000000030783a
+ (id)kindWithSongKind:(id)arg1;	// IMP=0x000000000030781d
+ (id)requiredLibraryAddStatusObservationProperties;	// IMP=0x00000000001b4337
+ (_Bool)supportsLibraryAddStatusObservation;	// IMP=0x00000000001b432f
+ (_Bool)supportsLibraryRemoval;	// IMP=0x00000000001ccea0
+ (id)requiredLibraryRemovalProperties;	// IMP=0x00000000001ccdf2
+ (_Bool)supportsKeepLocalStatusObservation;	// IMP=0x00000000001cdb2b
+ (id)requiredKeepLocalStatusObservationProperties;	// IMP=0x00000000001cda7d
+ (long long)genericObjectType;	// IMP=0x000000000020b865
+ (id)requiredStoreLibraryPersonalizationProperties;	// IMP=0x0000000000226884
- (id)songPopularityForIdentifiers:(id)arg1;	// IMP=0x00000000003077a1
- (id)artworkCatalog;	// IMP=0x0000000000307749
- (id)humanDescription;	// IMP=0x0000000000307623
- (id)contentItemCollectionInfo;	// IMP=0x00000000000a1bfc
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;	// IMP=0x00000000001b3dc7
- (long long)libraryRemovalSupportedOptions;	// IMP=0x00000000001cc645
- (id)newKeepLocalStatusObserverConfiguration;	// IMP=0x00000000001cd278
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;	// IMP=0x00000000002260c0
- (id)relativeModelObjectForStoreLibraryPersonalization;	// IMP=0x00000000002260b7
- (id)personalizationScopedPropertiesForProperties:(id)arg1;	// IMP=0x00000000002260aa

// Remaining properties
@property(retain, nonatomic) MPModelArtist *artist; // @dynamic artist;
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @dynamic artworkCatalogBlock;
@property(nonatomic, getter=isClassical) _Bool classical; // @dynamic classical;
@property(nonatomic, getter=isClassicalExperienceAvailable) _Bool classicalExperienceAvailable; // @dynamic classicalExperienceAvailable;
@property(nonatomic, getter=isCompilation) _Bool compilation; // @dynamic compilation;
@property(copy, nonatomic) NSString *copyrightText; // @dynamic copyrightText;
@property(nonatomic) long long discCount; // @dynamic discCount;
@property(readonly, copy, nonatomic) NSDate *downloadedDate; // @dynamic downloadedDate;
@property(copy, nonatomic) NSString *editorNotes; // @dynamic editorNotes;
@property(retain, nonatomic) MPModelGenre *genre; // @dynamic genre;
@property(nonatomic) _Bool hasCleanContent; // @dynamic hasCleanContent;
@property(nonatomic) _Bool hasExplicitContent; // @dynamic hasExplicitContent;
@property(nonatomic) long long keepLocalEnableState; // @dynamic keepLocalEnableState;
@property(nonatomic) long long keepLocalManagedStatus; // @dynamic keepLocalManagedStatus;
@property(copy, nonatomic) NSDate *lastDevicePlaybackDate; // @dynamic lastDevicePlaybackDate;
@property(nonatomic, getter=isLibraryAddEligible) _Bool libraryAddEligible; // @dynamic libraryAddEligible;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @dynamic libraryAdded;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @dynamic libraryAddedDate;
@property(nonatomic) long long maximumItemTrackNumber; // @dynamic maximumItemTrackNumber;
@property(nonatomic, getter=isPreorder) _Bool preorder; // @dynamic preorder;
@property(copy, nonatomic) NSDateComponents *releaseDateComponents; // @dynamic releaseDateComponents;
@property(retain, nonatomic) MPModelSong *representativeSong; // @dynamic representativeSong;
@property(copy, nonatomic) NSString *shortEditorNotes; // @dynamic shortEditorNotes;
@property(copy, nonatomic) CDUnknownBlockType songPopularityBlock; // @dynamic songPopularityBlock;
@property(copy, nonatomic) NSString *title; // @dynamic title;
@property(nonatomic) long long trackCount; // @dynamic trackCount;
@property(nonatomic) unsigned long long traits; // @dynamic traits;
@property(copy, nonatomic) NSString *versionHash; // @dynamic versionHash;
@property(nonatomic) float volumeNormalization; // @dynamic volumeNormalization;
@property(nonatomic) long long year; // @dynamic year;

@end

