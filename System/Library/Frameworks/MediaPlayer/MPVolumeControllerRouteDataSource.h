//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <MediaPlayer/MPVolumeControllerDataSource-Protocol.h>

@class MPAVRoute, NSString;
@protocol MPVolumeControllerDataSourceDelegate;

@interface MPVolumeControllerRouteDataSource : NSObject <MPVolumeControllerDataSource>
{
    float _pendingVolume;	// 8 = 0x8
    _Bool _hasPendingVolume;	// 12 = 0xc
    _Bool _hasVolumeInFlight;	// 13 = 0xd
    _Bool _volumeInitialized;	// 14 = 0xe
    _Bool _volumeCapabilitiesInitialized;	// 15 = 0xf
    _Bool _volumeControlAvailable;	// 16 = 0x10
    _Bool _muted;	// 17 = 0x11
    _Bool _volumeWarningEnabled;	// 18 = 0x12
    float _volume;	// 20 = 0x14
    float _EUVolumeLimit;	// 24 = 0x18
    id <MPVolumeControllerDataSourceDelegate> _delegate;	// 32 = 0x20
    long long _volumeWarningState;	// 40 = 0x28
    MPAVRoute *_groupRoute;	// 48 = 0x30
    MPAVRoute *_outputDeviceRoute;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x00000000002f474e
@property(retain, nonatomic) MPAVRoute *outputDeviceRoute; // @synthesize outputDeviceRoute=_outputDeviceRoute;
@property(retain, nonatomic) MPAVRoute *groupRoute; // @synthesize groupRoute=_groupRoute;
@property(readonly, nonatomic) long long volumeWarningState; // @synthesize volumeWarningState=_volumeWarningState;
@property(readonly, nonatomic) _Bool volumeWarningEnabled; // @synthesize volumeWarningEnabled=_volumeWarningEnabled;
@property(readonly, nonatomic) float EUVolumeLimit; // @synthesize EUVolumeLimit=_EUVolumeLimit;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(readonly, nonatomic, getter=isVolumeControlAvailable) _Bool volumeControlAvailable; // @synthesize volumeControlAvailable=_volumeControlAvailable;
@property(nonatomic) __weak id <MPVolumeControllerDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_routeVolumeControlCapabilitiesDidChangeNotification:(id)arg1;	// IMP=0x00000000002f44b8
- (void)_routeVolumeDidChangeNotification:(id)arg1;	// IMP=0x00000000002f42b6
- (void)getVolumeValueWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f4108
- (void)_updateVolumeControlCapabilities:(unsigned int)arg1;	// IMP=0x00000000002f3fe7
- (void)initializeVolume;	// IMP=0x00000000002f3c10
- (void)adjustVolumeValue:(float)arg1;	// IMP=0x00000000002f3bb4
- (void)reload;	// IMP=0x00000000002f3b35
- (void)_sendVolumeButtonEventWithUsagePage:(unsigned int)arg1 usage:(unsigned int)arg2 down:(_Bool)arg3;	// IMP=0x00000000002f3ada
- (void)endIncreasingRelativeVolume;	// IMP=0x00000000002f3abb
- (void)beginIncreasingRelativeVolume;	// IMP=0x00000000002f3a99
- (void)endDecreasingRelativeVolume;	// IMP=0x00000000002f3a7a
- (void)beginDecreasingRelativeVolume;	// IMP=0x00000000002f3a58
- (void)_setPendingVolumeIfNeeded;	// IMP=0x00000000002f35df
@property(readonly, copy, nonatomic) NSString *volumeControlLabel;
@property(readonly, nonatomic) _Bool applicationShouldOverrideHardwareVolumeBehavior;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000002f328a
- (id)initWithGroupRoute:(id)arg1 outputDeviceRoute:(id)arg2;	// IMP=0x00000000002f302f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

