//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MPMediaItemArtwork, NSArray, NSDate, NSString, NSURL;

@interface MPMediaItem
{
}

+ (_Bool)_isValidItemProperty:(id)arg1;	// IMP=0x00000000000d6b04
+ (void)_createFilterableDictionary;	// IMP=0x00000000000d5bcc
+ (id)dynamicProperties;	// IMP=0x00000000000d5b9c
+ (id)fallbackTitlePropertyForGroupingType:(long long)arg1;	// IMP=0x00000000000d5b80
+ (id)titlePropertyForGroupingType:(long long)arg1;	// IMP=0x00000000000d5ac4
+ (id)ULIDPropertyForGroupingType:(long long)arg1;	// IMP=0x00000000000d5a20
+ (id)persistentIDPropertyForGroupingType:(long long)arg1;	// IMP=0x00000000000d5947
+ (_Bool)canFilterByProperty:(id)arg1;	// IMP=0x00000000000d58ae
+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000d58a6
+ (id)itemFromSong:(id)arg1;	// IMP=0x00000000000d583c
+ (id)itemFromModelObject:(id)arg1;	// IMP=0x00000000000d5684
+ (id)screenshotArtworkCatalogCacheProperties;	// IMP=0x0000000000066ad4
+ (id)artworkCatalogCacheProperties;	// IMP=0x0000000000066a8c
+ (id)MPSD_mediaItemPropertiesForDownloadability;	// IMP=0x0000000000305a05
- (id)_libraryLinkURL;	// IMP=0x00000000000d4e1d
- (id)_libraryLinkPlaylistName;	// IMP=0x00000000000d4d73
- (id)_libraryLinkKind;	// IMP=0x00000000000d4ca1
- (id)_libraryLinkArtist;	// IMP=0x00000000000d4bfd
- (id)_directStoreURL;	// IMP=0x00000000000d49ac
@property(readonly, nonatomic, getter=isPreorder) _Bool preorder;
@property(readonly, nonatomic) NSDate *dateDownloaded;
@property(readonly, nonatomic) _Bool isUsableAsRepresentativeItem;
- (void)gaplessHeuristicInfo:(unsigned int *)arg1 durationInSamples:(unsigned long long *)arg2 lastPacketsResync:(unsigned long long *)arg3 encodingDelay:(unsigned int *)arg4 encodingDrain:(unsigned int *)arg5;	// IMP=0x00000000000d47fc
- (unsigned long long)countOfChaptersOfType:(long long)arg1;	// IMP=0x00000000000d46a7
- (id)chapterOfType:(long long)arg1 atTime:(double)arg2;	// IMP=0x00000000000d44cb
- (id)chapterOfType:(long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000000d4326
- (id)chaptersOfType:(long long)arg1;	// IMP=0x00000000000d4131
@property(readonly, nonatomic) NSString *userGrouping;
@property(readonly, nonatomic) NSString *lyrics;
@property(readonly, nonatomic, getter=isExplicitItem) _Bool explicitItem;
@property(readonly, nonatomic) unsigned long long discCount;
@property(readonly, nonatomic) unsigned long long discNumber;
@property(readonly, nonatomic) unsigned long long albumTrackNumber;
@property(readonly, nonatomic) _Bool rememberBookmarkTime;
@property(readonly, nonatomic) NSString *playbackStoreID;
@property(nonatomic) _Bool hasBeenPlayed;
@property(copy, nonatomic) NSDate *lastSkippedDate;
@property(nonatomic) unsigned long long skipCountSinceSync;
- (void)setSkipCount:(unsigned long long)arg1;	// IMP=0x00000000000d3d8d
@property(readonly, nonatomic) unsigned long long skipCount;
@property(copy, nonatomic) NSDate *dateAccessed;
@property(copy, nonatomic) NSDate *lastPlayedDate;
@property(nonatomic) unsigned long long playCountSinceSync;
- (void)setPlayCount:(unsigned long long)arg1;	// IMP=0x00000000000d3bd3
@property(readonly, nonatomic) unsigned long long playCount;
- (id)predicateForProperty:(id)arg1;	// IMP=0x00000000000d3af8
@property(readonly, nonatomic) unsigned long long year;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) NSDate *releaseDate;
- (void)setRating:(unsigned long long)arg1;	// IMP=0x00000000000d3a1e
@property(readonly, nonatomic) unsigned long long rating;
@property(readonly, nonatomic) unsigned long long podcastPersistentID;
@property(readonly, nonatomic) NSString *podcastTitle;
@property(readonly, nonatomic) double effectiveStopTime;
@property(readonly, nonatomic) double stopTime;
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) double playbackDuration;
@property(readonly, nonatomic) unsigned long long mediaType;
@property(readonly, nonatomic, getter=hasProtectedAsset) _Bool protectedAsset;
@property(readonly, nonatomic, getter=isCloudItem) _Bool cloudItem;
@property(readonly, nonatomic, getter=isCompilation) _Bool compilation;
@property(readonly, nonatomic) _Bool isITunesU;
@property(readonly, nonatomic) _Bool isRental;
@property(readonly, nonatomic) unsigned long long genrePersistentID;
@property(readonly, nonatomic) NSString *genre;
@property(readonly, nonatomic) unsigned long long composerPersistentID;
@property(readonly, nonatomic) NSString *composer;
@property(readonly, nonatomic) NSString *comments;
@property(readonly, nonatomic) NSDate *dateAdded;
@property(readonly, nonatomic) double bookmarkTime;
@property(readonly, nonatomic) unsigned long long beatsPerMinute;
@property(readonly, nonatomic) NSURL *assetURL;
@property(readonly, nonatomic) MPMediaItemArtwork *artwork;
@property(readonly, nonatomic) unsigned long long artistPersistentID;
@property(readonly, nonatomic) NSString *artist;
@property(readonly, nonatomic) unsigned long long albumTrackCount;
@property(readonly, nonatomic) NSString *albumTitle;
@property(readonly, nonatomic) unsigned long long albumArtistPersistentID;
@property(readonly, nonatomic) unsigned long long albumPersistentID;
@property(readonly, nonatomic) NSString *effectiveAlbumArtist;
@property(readonly, nonatomic) NSString *albumArtist;
@property(readonly, nonatomic) NSArray *chapters;
- (id)multiverseIdentifier;	// IMP=0x00000000000d31f5
- (void)clearLocationProperties;	// IMP=0x00000000000d319a
- (void)populateLocationPropertiesWithPath:(id)arg1 assetProtectionType:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000d30f8
- (void)populateLocationPropertiesWithPath:(id)arg1 assetProtectionType:(long long)arg2;	// IMP=0x00000000000d3070
- (void)populateLocationPropertiesWithPath:(id)arg1;	// IMP=0x00000000000d305c
- (_Bool)existsInLibrary;	// IMP=0x00000000000d2f4d
- (id)representativeItem;	// IMP=0x00000000000d2f44
- (id)_bestStoreURL;	// IMP=0x00000000000d2efb
- (void)didReceiveMemoryWarning;	// IMP=0x00000000000d2ef5
- (double)nominalHasBeenPlayedThreshold;	// IMP=0x00000000000d2de5
- (void)updateDateAccessedToCurrentDateWithWriteCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000d2ccd
- (_Bool)incrementPlayCountForStopTime:(double)arg1;	// IMP=0x00000000000d2bbe
- (void)incrementPlayCountForPlayingToEnd;	// IMP=0x00000000000d2aa6
- (void)incrementSkipCount;	// IMP=0x00000000000d298e
- (void)noteWasPlayedToTime:(double)arg1 skipped:(_Bool)arg2;	// IMP=0x00000000000d2876
- (void)markNominalAmountHasBeenPlayed;	// IMP=0x00000000000d275e
- (void)incrementPlayCount;	// IMP=0x00000000000d2646
- (_Bool)didSkipWithPlayedToTime:(double)arg1;	// IMP=0x00000000000d2537
- (id)valuesForProperties:(id)arg1;	// IMP=0x00000000000d2428
- (id)valueForProperty:(id)arg1;	// IMP=0x00000000000d22e1
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000d21c9
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000d213d
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000d2091
- (unsigned long long)hash;	// IMP=0x00000000000d2071
- (id)initWithMultiverseIdentifier:(id)arg1 library:(id)arg2;	// IMP=0x00000000000d1700
- (id)initWithPersistentID:(unsigned long long)arg1;	// IMP=0x00000000000d1692
- (id)_artworkCatalogWithArtworkType:(long long)arg1;	// IMP=0x0000000000066791
- (id)screenshotArtworkCatalog;	// IMP=0x000000000006677a
- (id)artworkCatalog;	// IMP=0x0000000000066763
- (_Bool)MPSD_isDownloadInProgress;	// IMP=0x00000000003058fd
- (_Bool)MPSD_isDownloadable;	// IMP=0x0000000000305735

// Remaining properties
@property(readonly, nonatomic) unsigned long long persistentID; // @dynamic persistentID;

@end

