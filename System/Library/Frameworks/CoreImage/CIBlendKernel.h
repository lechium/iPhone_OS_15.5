//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface CIBlendKernel
{
}

+ (id)kernelWithString:(id)arg1 extentType:(int)arg2;	// IMP=0x00000000000de15d
+ (id)cachedKernelWithString:(id)arg1 extentType:(int)arg2;	// IMP=0x00000000000de095
+ (id)kernelWithString:(id)arg1;	// IMP=0x00000000000de016
+ (id)plusLighter;	// IMP=0x0000000000016ea7
+ (id)plusDarker;	// IMP=0x0000000000016e87
+ (id)lighterColor;	// IMP=0x0000000000016e32
+ (id)darkerColor;	// IMP=0x0000000000016ddd
+ (id)hardMix;	// IMP=0x0000000000016d88
+ (id)pinLight;	// IMP=0x0000000000016d33
+ (id)linearLight;	// IMP=0x0000000000016cde
+ (id)vividLight;	// IMP=0x0000000000016c89
+ (id)linearDodge;	// IMP=0x0000000000016c34
+ (id)linearBurn;	// IMP=0x0000000000016bdf
+ (id)divide;	// IMP=0x0000000000016b8a
+ (id)subtract;	// IMP=0x0000000000016b35
+ (id)luminosity;	// IMP=0x0000000000016ae0
+ (id)color;	// IMP=0x0000000000016a8b
+ (id)saturation;	// IMP=0x0000000000016a36
+ (id)hue;	// IMP=0x00000000000169e1
+ (id)exclusion;	// IMP=0x000000000001698c
+ (id)difference;	// IMP=0x0000000000016937
+ (id)softLight;	// IMP=0x00000000000168e2
+ (id)hardLight;	// IMP=0x000000000001688d
+ (id)colorBurn;	// IMP=0x0000000000016838
+ (id)colorDodge;	// IMP=0x00000000000167e3
+ (id)lighten;	// IMP=0x000000000001678e
+ (id)darken;	// IMP=0x0000000000016739
+ (id)overlay;	// IMP=0x00000000000166e4
+ (id)screen;	// IMP=0x000000000001668f
+ (id)multiply;	// IMP=0x000000000001663a
+ (id)exclusiveOr;	// IMP=0x00000000000165e5
+ (id)destinationAtop;	// IMP=0x0000000000016590
+ (id)sourceAtop;	// IMP=0x000000000001653b
+ (id)destinationOut;	// IMP=0x00000000000164e6
+ (id)sourceOut;	// IMP=0x000000000001648c
+ (id)destinationIn;	// IMP=0x0000000000016432
+ (id)sourceIn;	// IMP=0x00000000000163d8
+ (id)destinationOver;	// IMP=0x0000000000016383
+ (id)sourceOver;	// IMP=0x000000000001632e
+ (id)destination;	// IMP=0x00000000000162d9
+ (id)source;	// IMP=0x0000000000016284
+ (id)clear;	// IMP=0x0000000000016264
+ (id)componentMax;	// IMP=0x0000000000016244
+ (id)componentMin;	// IMP=0x000000000001621f
+ (id)componentMultiply;	// IMP=0x00000000000161c5
+ (id)componentAdd;	// IMP=0x0000000000016170
- (id)applyWithForeground:(id)arg1 background:(id)arg2 colorSpace:(struct CGColorSpace *)arg3;	// IMP=0x00000000000de664
- (id)applyWithForeground:(id)arg1 background:(id)arg2;	// IMP=0x00000000000de3c4
- (void)setIsClearIfBackIsClear:(_Bool)arg1;	// IMP=0x00000000000de3ab
- (void)setIsClearIfForeIsClear:(_Bool)arg1;	// IMP=0x00000000000de392
- (void)setIsForeIfBackIsClear:(_Bool)arg1;	// IMP=0x00000000000de379
- (void)setIsBackIfForeIsClear:(_Bool)arg1;	// IMP=0x00000000000de360
- (_Bool)isClearIfBackIsClear;	// IMP=0x00000000000de349
- (_Bool)isClearIfForeIsClear;	// IMP=0x00000000000de332
- (_Bool)isForeIfBackIsClear;	// IMP=0x00000000000de31b
- (_Bool)isBackIfForeIsClear;	// IMP=0x00000000000de304
- (void)setBlendBehaviorBit:(int)arg1 value:(_Bool)arg2;	// IMP=0x00000000000de2e4
- (_Bool)getBlendBehaviorBit:(int)arg1;	// IMP=0x00000000000de2cb
- (id)initWithString:(id)arg1 extentType:(int)arg2;	// IMP=0x00000000000de198
- (id)initWithString:(id)arg1;	// IMP=0x00000000000de04c

@end

