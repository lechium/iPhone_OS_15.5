//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SpriteKit/NSCopying-Protocol.h>
#import <SpriteKit/NSSecureCoding-Protocol.h>

@interface SKAction : NSObject <NSCopying, NSSecureCoding>
{
    struct SKCAction *_caction;	// 8 = 0x8
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000000022d8
+ (id)animateWithWarps:(id)arg1 times:(id)arg2 restore:(_Bool)arg3;	// IMP=0x00000000000022af
+ (id)animateWithWarps:(id)arg1 times:(id)arg2;	// IMP=0x0000000000002283
+ (id)warpTo:(id)arg1 duration:(double)arg2;	// IMP=0x000000000000225a
+ (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;	// IMP=0x0000000000005023
+ (void)clearActionTableCache;	// IMP=0x0000000000005003
+ (void)convertAction:(id)arg1 toDuration:(double)arg2;	// IMP=0x0000000000004b54
+ (void)addActionsToCachedActionTable:(id)arg1;	// IMP=0x0000000000004b1a
+ (id)findNamedActionInBundle:(id)arg1;	// IMP=0x0000000000003e49
+ (id)recursivePathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;	// IMP=0x0000000000003b5c
+ (id)actionNamed:(id)arg1 fromURL:(id)arg2 duration:(double)arg3;	// IMP=0x0000000000003af0
+ (id)actionNamed:(id)arg1 fromURL:(id)arg2;	// IMP=0x0000000000003713
+ (id)actionNamed:(id)arg1 duration:(double)arg2;	// IMP=0x0000000000003682
+ (id)actionNamed:(id)arg1;	// IMP=0x00000000000035f3
+ (id)customActionWithDuration:(double)arg1 actionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000035bc
+ (id)javaScriptActionWithDuration:(double)arg1 script:(id)arg2;	// IMP=0x0000000000003585
+ (id)runAction:(id)arg1 onChildWithName:(id)arg2;	// IMP=0x000000000000354e
+ (id)runBlock:(CDUnknownBlockType)arg1 queue:(id)arg2;	// IMP=0x0000000000003525
+ (id)runBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000000034ec
+ (id)performSelector:(SEL)arg1 onTarget:(id)arg2;	// IMP=0x00000000000034b5
+ (id)removeFromParent;	// IMP=0x000000000000349c
+ (id)waitForDuration:(double)arg1 withRange:(double)arg2;	// IMP=0x0000000000003483
+ (id)waitForDuration:(double)arg1;	// IMP=0x000000000000346a
+ (id)reachToNode:(id)arg1 rootNode:(id)arg2 velocity:(double)arg3;	// IMP=0x00000000000033bb
+ (id)reachToNode:(id)arg1 rootNode:(id)arg2 duration:(double)arg3;	// IMP=0x000000000000330c
+ (id)reachTo:(struct CGPoint)arg1 rootNode:(id)arg2 velocity:(double)arg3;	// IMP=0x00000000000032e3
+ (id)reachTo:(struct CGPoint)arg1 rootNode:(id)arg2 duration:(double)arg3;	// IMP=0x00000000000032ba
+ (id)strengthBy:(float)arg1 duration:(double)arg2;	// IMP=0x000000000000329d
+ (id)strengthTo:(float)arg1 duration:(double)arg2;	// IMP=0x0000000000003280
+ (id)speedTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000003267
+ (id)speedBy:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000324e
+ (id)followPath:(struct CGPath *)arg1 asOffset:(_Bool)arg2 orientToPath:(_Bool)arg3 speed:(double)arg4;	// IMP=0x0000000000003235
+ (id)followPath:(struct CGPath *)arg1 speed:(double)arg2;	// IMP=0x000000000000321c
+ (id)followPath:(struct CGPath *)arg1 asOffset:(_Bool)arg2 orientToPath:(_Bool)arg3 duration:(double)arg4;	// IMP=0x0000000000003203
+ (id)followPath:(struct CGPath *)arg1 duration:(double)arg2;	// IMP=0x00000000000031ea
+ (id)colorizeWithColorBlendFactor:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000031d1
+ (id)colorizeWithColor:(id)arg1 colorBlendFactor:(double)arg2 duration:(double)arg3;	// IMP=0x000000000000319a
+ (id)playSoundFileNamed:(id)arg1 atPosition:(struct CGPoint)arg2 waitForCompletion:(_Bool)arg3;	// IMP=0x0000000000003163
+ (id)playSoundFileNamed:(id)arg1 waitForCompletion:(_Bool)arg2;	// IMP=0x000000000000311c
+ (id)playSoundFileNamed:(id)arg1;	// IMP=0x00000000000030d3
+ (id)animateWithNormalTextures:(id)arg1 timePerFrame:(double)arg2 resize:(_Bool)arg3 restore:(_Bool)arg4;	// IMP=0x000000000000309c
+ (id)animateWithTextures:(id)arg1 timePerFrame:(double)arg2 resize:(_Bool)arg3 restore:(_Bool)arg4;	// IMP=0x0000000000003065
+ (id)animateWithNormalTextures:(id)arg1 timePerFrame:(double)arg2;	// IMP=0x0000000000003029
+ (id)animateWithTextures:(id)arg1 timePerFrame:(double)arg2;	// IMP=0x0000000000002fed
+ (id)setNormalTexture:(id)arg1 resize:(_Bool)arg2;	// IMP=0x0000000000002f07
+ (id)setTexture:(id)arg1 resize:(_Bool)arg2;	// IMP=0x0000000000002e21
+ (id)setNormalTexture:(id)arg1;	// IMP=0x0000000000002d3e
+ (id)setTexture:(id)arg1;	// IMP=0x0000000000002c5b
+ (id)unhide;	// IMP=0x0000000000002c42
+ (id)hide;	// IMP=0x0000000000002c29
+ (id)falloffBy:(float)arg1 duration:(double)arg2;	// IMP=0x0000000000002c0c
+ (id)falloffTo:(float)arg1 duration:(double)arg2;	// IMP=0x0000000000002bef
+ (id)fadeAlphaTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002bd6
+ (id)fadeAlphaBy:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002bbd
+ (id)fadeOutWithDuration:(double)arg1;	// IMP=0x0000000000002ba4
+ (id)fadeInWithDuration:(double)arg1;	// IMP=0x0000000000002b8b
+ (id)repeatActionForever:(id)arg1;	// IMP=0x0000000000002b54
+ (id)repeatAction:(id)arg1 count:(unsigned long long)arg2;	// IMP=0x0000000000002b1d
+ (id)group:(id)arg1;	// IMP=0x0000000000002ae6
+ (id)sequence:(id)arg1;	// IMP=0x0000000000002aaf
+ (id)resizeToHeight:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a96
+ (id)resizeToWidth:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a7d
+ (id)resizeToWidth:(double)arg1 height:(double)arg2 duration:(double)arg3;	// IMP=0x0000000000002a64
+ (id)resizeByWidth:(double)arg1 height:(double)arg2 duration:(double)arg3;	// IMP=0x0000000000002a4b
+ (id)scaleToSize:(struct CGSize)arg1 duration:(double)arg2;	// IMP=0x0000000000002a32
+ (id)scaleYTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a19
+ (id)scaleXTo:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002a00
+ (id)scaleXTo:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000029e7
+ (id)scaleTo:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000029ce
+ (id)scaleXBy:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000029b5
+ (id)scaleBy:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000299c
+ (id)rotateToAngle:(double)arg1 duration:(double)arg2 shortestUnitArc:(_Bool)arg3;	// IMP=0x0000000000002983
+ (id)rotateToAngle:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000296a
+ (id)rotateByAngle:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002951
+ (id)moveToY:(double)arg1 duration:(double)arg2;	// IMP=0x0000000000002938
+ (id)moveToX:(double)arg1 duration:(double)arg2;	// IMP=0x000000000000291f
+ (id)moveTo:(struct CGPoint)arg1 duration:(double)arg2;	// IMP=0x0000000000002906
+ (id)moveBY:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000028ed
+ (id)moveBy:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000028d4
+ (id)moveByX:(double)arg1 y:(double)arg2 duration:(double)arg3;	// IMP=0x00000000000028bb
+ (id)applyAngularImpulse:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000cc494
+ (id)applyImpulse:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2 duration:(double)arg3;	// IMP=0x00000000000cc312
+ (id)applyImpulse:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000cc1a4
+ (id)applyTorque:(double)arg1 duration:(double)arg2;	// IMP=0x00000000000cc187
+ (id)applyForce:(struct CGVector)arg1 atPoint:(struct CGPoint)arg2 duration:(double)arg3;	// IMP=0x00000000000cc163
+ (id)applyForce:(struct CGVector)arg1 duration:(double)arg2;	// IMP=0x00000000000cc142
+ (id)changeMassBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cbf5c
+ (id)changeMassTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cbcac
+ (id)changeChargeBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cbb22
+ (id)changeChargeTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cb8a3
+ (id)changePlaybackRateBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0270
+ (id)changePlaybackRateTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000cffa0
+ (id)stop;	// IMP=0x00000000000cfe6b
+ (id)pause;	// IMP=0x00000000000cfd36
+ (id)play;	// IMP=0x00000000000cfbba
+ (id)changeVolumeBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d079d
+ (id)changeVolumeTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d04cd
+ (id)changeOcclusionBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d1c51
+ (id)changeOcclusionTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d1981
+ (id)changeObstructionBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d1724
+ (id)changeObstructionTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d1454
+ (id)changeReverbBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d11f7
+ (id)changeReverbTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0f27
+ (id)stereoPanBy:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d0cca
+ (id)stereoPanTo:(float)arg1 duration:(double)arg2;	// IMP=0x00000000000d09fa
- (void)dealloc;	// IMP=0x000000000000286c
- (id)reversedAction;	// IMP=0x0000000000002852
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000000027b4
- (id)copy;	// IMP=0x000000000000278d
@property(nonatomic) double speed;
- (_Bool)isEqualToAction:(id)arg1;	// IMP=0x000000000000272c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000002644
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000024b4
- (id)init;	// IMP=0x0000000000002417
- (void)commonInit;	// IMP=0x0000000000002369
@property(nonatomic) long long timingMode;
@property(nonatomic) double duration;
@property(copy, nonatomic) CDUnknownBlockType timingFunction;
- (id)subactions;	// IMP=0x00000000000022e0
- (struct SKCAction *)caction;	// IMP=0x0000000000002250
- (void)updateWithTarget:(id)arg1 forTime:(double)arg2;	// IMP=0x000000000000521a
- (void)willStartWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000051fe
- (void)wasRemovedFromTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000051ee
- (void)wasAddedToTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x0000000000005152
- (double)ratioForTime:(double)arg1;	// IMP=0x000000000000513f
@property(nonatomic) _Bool finished;
- (void)willResumeWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x000000000000510c
- (void)wasPausedWithTarget:(id)arg1 atTime:(double)arg2;	// IMP=0x00000000000050fd
- (void)setCppAction:(void *)arg1;	// IMP=0x00000000000050cc

@end

