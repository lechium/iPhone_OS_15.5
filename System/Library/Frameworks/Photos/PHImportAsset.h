//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Photos/PHImportDuplicateCheckerItem-Protocol.h>

@class AVAssetImageGenerator, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSSet, NSString, NSTimeZone, NSURL, PFMetadata, PHImportAssetFilePresenter, PHImportSource, UTType;
@protocol OS_dispatch_queue;

@interface PHImportAsset : NSObject <PHImportDuplicateCheckerItem>
{
    PHImportSource *_source;	// 8 = 0x8
    PHImportSource *_strongSource;	// 16 = 0x10
    struct os_unfair_lock_s _metadataLock;	// 24 = 0x18
    NSDictionary *_userMetadata;	// 32 = 0x20
    NSDictionary *_userInfo;	// 40 = 0x28
    NSString *_basenameForOriginalAdjustment;	// 48 = 0x30
    unsigned char _duplicateStateConfidence;	// 56 = 0x38
    _Bool _canReference;	// 57 = 0x39
    _Bool _isDuplicate;	// 58 = 0x3a
    _Bool _treatAsUnsupportedRAW;	// 59 = 0x3b
    _Bool _sidecarsLoaded;	// 60 = 0x3c
    unsigned char _fileLocation;	// 61 = 0x3d
    NSString *_uuid;	// 64 = 0x40
    PFMetadata *_metadata;	// 72 = 0x48
    NSMutableArray *_relatedBurstAssets;	// 80 = 0x50
    PHImportAsset *_burstPick;	// 88 = 0x58
    id _avchdAssetId;	// 96 = 0x60
    id _assetId;	// 104 = 0x68
    NSMutableDictionary *_duplicates;	// 112 = 0x70
    NSDate *_lastDuplicateCheck;	// 120 = 0x78
    NSURL *_url;	// 128 = 0x80
    UTType *_contentType;	// 136 = 0x88
    NSString *_fileName;	// 144 = 0x90
    NSString *_createdFileName;	// 152 = 0x98
    unsigned long long _fileSize;	// 160 = 0xa0
    NSString *_fileExtension;	// 168 = 0xa8
    NSSet *_duplicateAssets;	// 176 = 0xb0
    PHImportAsset *_rawAsset;	// 184 = 0xb8
    PHImportAsset *_videoComplement;	// 192 = 0xc0
    PHImportAsset *_largeRender;	// 200 = 0xc8
    PHImportAsset *_largeMovieRender;	// 208 = 0xd0
    PHImportAsset *_spatialOverCapture;	// 216 = 0xd8
    PHImportAsset *_base;	// 224 = 0xe0
    PHImportAsset *_thumbnailRender;	// 232 = 0xe8
    PHImportAsset *_miniRender;	// 240 = 0xf0
    PHImportAsset *_audioAsset;	// 248 = 0xf8
    NSDate *_fileCreationDate;	// 256 = 0x100
    NSDate *_fileModificationDate;	// 264 = 0x108
    AVAssetImageGenerator *_imageGenerator;	// 272 = 0x110
    NSObject<OS_dispatch_queue> *_loadSidecars;	// 280 = 0x118
    NSString *_importIdentifier;	// 288 = 0x120
    PHImportAssetFilePresenter *_filePresenter;	// 296 = 0x128
    unsigned long long _copyMethod;	// 304 = 0x130
    NSData *_fileData;	// 312 = 0x138
    long long _resourceType;	// 320 = 0x140
    unsigned long long _resourceSubType;	// 328 = 0x148
    NSMutableDictionary *_sidecarAssetsByType;	// 336 = 0x150
    NSDictionary *_customAssetProperties;	// 344 = 0x158
    struct CGSize _unorientedPixelSize;	// 352 = 0x160
    struct CGSize _thumbnailSize;	// 368 = 0x170
    struct CGSize _imageSize;	// 384 = 0x180
}

+ (_Bool)isOriginalAdjustmentData:(id)arg1;	// IMP=0x000000000005afff
+ (void)determineIfTIFFIsRAW:(id)arg1 url:(id)arg2;	// IMP=0x000000000005ae83
+ (id)loadDatesForAssets:(id)arg1 atEnd:(CDUnknownBlockType)arg2;	// IMP=0x000000000005acf8
+ (id)loadDatesForAssetSequence:(id)arg1 atEnd:(CDUnknownBlockType)arg2;	// IMP=0x000000000005ab3a
+ (void)logImageDateFileDateDifferencesForAsset:(id)arg1;	// IMP=0x000000000005a925
+ (id)assetFileForURL:(id)arg1 source:(id)arg2 withUuid:(id)arg3;	// IMP=0x000000000005a22f
+ (id)assetFileForURL:(id)arg1 source:(id)arg2;	// IMP=0x000000000005a21a
+ (_Bool)isValidAsSidecar:(id)arg1;	// IMP=0x000000000005a16c
- (void).cxx_destruct;	// IMP=0x0000000000058c69
@property(retain, nonatomic) NSDictionary *customAssetProperties; // @synthesize customAssetProperties=_customAssetProperties;
@property(retain, nonatomic) NSMutableDictionary *sidecarAssetsByType; // @synthesize sidecarAssetsByType=_sidecarAssetsByType;
@property(nonatomic) unsigned long long resourceSubType; // @synthesize resourceSubType=_resourceSubType;
@property(nonatomic) long long resourceType; // @synthesize resourceType=_resourceType;
@property(readonly, nonatomic) __weak PHImportSource *source; // @synthesize source=_source;
@property(nonatomic) unsigned char fileLocation; // @synthesize fileLocation=_fileLocation;
@property(retain, nonatomic) NSData *fileData; // @synthesize fileData=_fileData;
@property(nonatomic) unsigned long long copyMethod; // @synthesize copyMethod=_copyMethod;
@property(retain, nonatomic) PHImportAssetFilePresenter *filePresenter; // @synthesize filePresenter=_filePresenter;
@property(retain, nonatomic) NSString *importIdentifier; // @synthesize importIdentifier=_importIdentifier;
@property(nonatomic) _Bool sidecarsLoaded; // @synthesize sidecarsLoaded=_sidecarsLoaded;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *loadSidecars; // @synthesize loadSidecars=_loadSidecars;
@property(retain, nonatomic) AVAssetImageGenerator *imageGenerator; // @synthesize imageGenerator=_imageGenerator;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) _Bool treatAsUnsupportedRAW; // @synthesize treatAsUnsupportedRAW=_treatAsUnsupportedRAW;
@property(nonatomic) struct CGSize thumbnailSize; // @synthesize thumbnailSize=_thumbnailSize;
@property(readonly, nonatomic) struct CGSize unorientedPixelSize; // @synthesize unorientedPixelSize=_unorientedPixelSize;
@property(retain, nonatomic) NSDate *fileModificationDate; // @synthesize fileModificationDate=_fileModificationDate;
@property(retain, nonatomic) NSDate *fileCreationDate; // @synthesize fileCreationDate=_fileCreationDate;
@property(retain, nonatomic) PHImportAsset *audioAsset; // @synthesize audioAsset=_audioAsset;
@property(retain, nonatomic) PHImportAsset *miniRender; // @synthesize miniRender=_miniRender;
@property(retain, nonatomic) PHImportAsset *thumbnailRender; // @synthesize thumbnailRender=_thumbnailRender;
@property(retain, nonatomic) PHImportAsset *base; // @synthesize base=_base;
@property(retain, nonatomic) PHImportAsset *spatialOverCapture; // @synthesize spatialOverCapture=_spatialOverCapture;
@property(retain, nonatomic) PHImportAsset *largeMovieRender; // @synthesize largeMovieRender=_largeMovieRender;
@property(retain, nonatomic) PHImportAsset *largeRender; // @synthesize largeRender=_largeRender;
@property(retain, nonatomic) PHImportAsset *videoComplement; // @synthesize videoComplement=_videoComplement;
@property(retain, nonatomic) PHImportAsset *rawAsset; // @synthesize rawAsset=_rawAsset;
@property(readonly, nonatomic) NSSet *duplicateAssets; // @synthesize duplicateAssets=_duplicateAssets;
@property(retain, nonatomic) NSString *fileExtension; // @synthesize fileExtension=_fileExtension;
@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(retain, nonatomic) NSString *createdFileName; // @synthesize createdFileName=_createdFileName;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) UTType *contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain) NSDate *lastDuplicateCheck; // @synthesize lastDuplicateCheck=_lastDuplicateCheck;
@property(retain) NSMutableDictionary *duplicates; // @synthesize duplicates=_duplicates;
@property _Bool isDuplicate; // @synthesize isDuplicate=_isDuplicate;
@property(readonly) id assetId; // @synthesize assetId=_assetId;
@property(readonly) id avchdAssetId; // @synthesize avchdAssetId=_avchdAssetId;
@property(retain, nonatomic) PHImportAsset *burstPick; // @synthesize burstPick=_burstPick;
@property(retain, nonatomic) NSMutableArray *relatedBurstAssets; // @synthesize relatedBurstAssets=_relatedBurstAssets;
@property unsigned char duplicateStateConfidence; // @synthesize duplicateStateConfidence=_duplicateStateConfidence;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (_Bool)isEqualToImportAsset:(id)arg1;	// IMP=0x000000000005867d
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000058615
@property(readonly) unsigned long long hash;
- (void)setUserMetadata:(id)arg1;	// IMP=0x0000000000058569
- (id)userMetadata;	// IMP=0x000000000005855b
- (void)setUserInfo:(id)arg1;	// IMP=0x000000000005854a
- (id)userInfo;	// IMP=0x000000000005853c
- (id)duplicateAssetsForLibrary:(id)arg1;	// IMP=0x000000000005846c
- (void)setDuplicates:(id)arg1 forLibrary:(id)arg2;	// IMP=0x0000000000058456
@property(readonly) id sizeKey;
@property(readonly) NSDate *dateKey;
@property(readonly) id nameKey;
@property(readonly, nonatomic) NSString *accessibilityDescription;
@property(readonly, nonatomic) NSString *assetDescription;
@property(readonly, nonatomic) NSSet *keywordTitles;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) NSTimeZone *timeZone;
@property(readonly, nonatomic) NSDate *creationDate;
@property(readonly) id originatingAssetID;
- (void)copyToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000057b07
- (id)copyFromURL:(id)arg1 toURL:(id)arg2;	// IMP=0x00000000000579bd
- (void)_addRelatedRecordsToRecord:(id)arg1 primaryRecord:(id)arg2;	// IMP=0x000000000005725a
- (id)importRecordForPrimaryAsset;	// IMP=0x0000000000056f65
- (id)sidecarInfoDictionaries;	// IMP=0x0000000000056ae0
- (id)sidecarInfoDictionary;	// IMP=0x00000000000568ae
- (id)resourceTypes;	// IMP=0x0000000000055fd6
- (_Bool)hasOriginalResourceType;	// IMP=0x0000000000055fac
- (id)validateMetadataForImportRecord:(id)arg1;	// IMP=0x0000000000055d36
- (_Bool)_loadMetadataIfNecessaryForURL:(id)arg1 detail:(unsigned char)arg2;	// IMP=0x0000000000055c17
- (struct CGImage *)avThumbnailOfSize:(unsigned long long)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000555f8
- (struct CGImage *)imageThumbnailOfSize:(unsigned long long)arg1 canceler:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000054f8f
- (struct CGImage *)removeBlackBarsFromExifThumbnail:(struct CGImage *)arg1 fullSize:(struct CGSize)arg2;	// IMP=0x0000000000054e22
- (struct CGSize)cropEXIFThumbSize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;	// IMP=0x0000000000054cc2
- (void)thumbnailUsingRequest:(id)arg1 atEnd:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054bdb
- (id)thumbnailForSize:(unsigned long long)arg1 priority:(unsigned char)arg2 atEnd:(CDUnknownBlockType)arg3;	// IMP=0x0000000000054b34
- (id)thumbnailForSize:(unsigned long long)arg1 atEnd:(CDUnknownBlockType)arg2;	// IMP=0x0000000000054b1d
- (void)_setMetadata:(id)arg1;	// IMP=0x00000000000549c4
@property(retain, nonatomic) PFMetadata *metadata; // @synthesize metadata=_metadata;
- (void)loadMetadataAsync:(CDUnknownBlockType)arg1;	// IMP=0x000000000005479c
- (void)loadMetadataSync;	// IMP=0x0000000000054750
- (void)addBurstAsset:(id)arg1;	// IMP=0x00000000000546c0
- (_Bool)isAppropriateForUI;	// IMP=0x0000000000051ade
- (_Bool)hasAdjustments;	// IMP=0x0000000000051a72
- (id)xmpSidecar;	// IMP=0x0000000000051a1b
- (id)originalAdjustmentSidecar;	// IMP=0x00000000000519c4
- (id)adjustmentSidecar;	// IMP=0x000000000005196d
- (id)slmSidecar;	// IMP=0x0000000000051916
- (void)removeSidecarAsset:(id)arg1;	// IMP=0x0000000000051821
- (void)addSidecarAsset:(id)arg1;	// IMP=0x0000000000051263
- (unsigned long long)sidecarAssetBytes;	// IMP=0x00000000000510f7
@property(readonly, nonatomic) NSArray *sidecarAssets;
- (void)_loadSidecarFiles;	// IMP=0x0000000000050f15
- (void)loadSidecarFiles;	// IMP=0x0000000000050ec7
- (id)checkForSidecarWithName:(id)arg1;	// IMP=0x0000000000050c05
- (id)checkForSidecarWithExtension:(id)arg1;	// IMP=0x0000000000050b15
- (unsigned long long)relatedBytes;	// IMP=0x0000000000050984
- (id)relatedAssets;	// IMP=0x00000000000506aa
@property(readonly, nonatomic) unsigned long long approximateBytesRequiredToImport;
@property(readonly, nonatomic) unsigned long long assetSizeIncludingRelatedAssets;
@property(readonly, nonatomic) NSNumber *trackFormat;
@property(readonly, nonatomic) NSNumber *bitrate;
@property(readonly, nonatomic) NSNumber *sampleRate;
@property(readonly, nonatomic) NSNumber *fps;
@property(readonly, nonatomic) NSString *codec;
@property(readonly, nonatomic) NSNumber *exposureTime;
@property(readonly, nonatomic) NSNumber *fNumber;
@property(readonly, nonatomic) NSNumber *exposureBias;
@property(readonly, nonatomic) NSNumber *digitalZoomRatio;
@property(readonly, nonatomic) NSNumber *focalLengthIn35mm;
@property(readonly, nonatomic) NSNumber *focalLength;
@property(readonly, nonatomic) NSNumber *iso;
@property(readonly, nonatomic) NSNumber *meteringMode;
@property(readonly, nonatomic) NSNumber *whiteBalance;
@property(readonly, nonatomic) NSNumber *flashFired;
@property(readonly, nonatomic) NSString *lensModel;
@property(readonly, nonatomic) NSString *formattedCameraModel;
@property(readonly, nonatomic) NSString *cameraModel;
@property(readonly, nonatomic) NSString *cameraMake;
@property(readonly, nonatomic) NSNumber *durationTimeInterval;
- (id)spatialOverCaptureIdentifier;	// IMP=0x000000000004f463
- (id)livePhotoPairingIdentifier;	// IMP=0x000000000004f38c
- (int)burstPickType;	// IMP=0x000000000004f355
- (id)groupingUUID;	// IMP=0x000000000004f267
@property(readonly, nonatomic) NSString *burstUUID;
@property(readonly, nonatomic) struct CGSize pixelSize;
- (struct CGSize)cgImageSize;	// IMP=0x000000000004ee01
- (void)_accessMetadata:(CDUnknownBlockType)arg1;	// IMP=0x000000000004edc4
@property(readonly, nonatomic) _Bool isViewable;
@property(readonly, nonatomic) _Bool isTagged;
- (void)takeAsVideoComplement:(id)arg1;	// IMP=0x000000000004e39c
- (_Bool)isVideoComplementOf:(id)arg1;	// IMP=0x000000000004e125
- (_Bool)performAdditionalLivePhotoChecksOnImageAsset:(id)arg1;	// IMP=0x000000000004e11d
- (id)makeImportIdentifier;	// IMP=0x000000000004dfd5
- (id)stripMarkerFromName:(id)arg1 markerLocation:(unsigned long long)arg2;	// IMP=0x000000000004ddd1
- (id)basenameForOriginalAdjustmentData;	// IMP=0x000000000004dd17
- (_Bool)isOriginalAdjustmentData;	// IMP=0x000000000004dcc0
- (_Bool)isBase;	// IMP=0x000000000004dbfb
- (_Bool)isSpatialOverCapture;	// IMP=0x000000000004db66
- (_Bool)isRender;	// IMP=0x000000000004dad1
- (_Bool)isPrimary;	// IMP=0x000000000004daba
- (_Bool)isRepresentation;	// IMP=0x000000000004da95
@property(readonly, nonatomic) _Bool isGrouped;
@property(readonly, nonatomic) _Bool hasAudioAttachment;
@property(readonly, nonatomic) _Bool isLivePhoto;
@property(readonly, nonatomic) _Bool isBurst;
@property(readonly, nonatomic) _Bool isSDOF;
@property(readonly, nonatomic) _Bool isHDR;
@property(readonly, nonatomic) _Bool isJpegPlusRAW;
@property(readonly, nonatomic) _Bool isTimelapse;
@property(readonly, nonatomic) _Bool isAVCHD;
@property(readonly, nonatomic) _Bool isSloMo;
@property(readonly, nonatomic) _Bool isSidecar;
@property(readonly, nonatomic) _Bool isPSD;
@property(readonly, nonatomic) _Bool isPNG;
@property(readonly, nonatomic) _Bool isPDF;
@property(readonly, nonatomic) _Bool isGIF;
@property(readonly, nonatomic) _Bool isHEIF;
@property(readonly, nonatomic) _Bool isTIFF;
@property(readonly, nonatomic) _Bool isRAW;
@property(readonly, nonatomic) _Bool isJPEG2000;
@property(readonly, nonatomic) _Bool isJPEG;
@property(readonly, nonatomic) _Bool isAudio;
@property(readonly, nonatomic) _Bool isMovie;
@property(readonly, nonatomic) _Bool isImage;
- (_Bool)isValidForReference;	// IMP=0x000000000004d519
@property(readonly, nonatomic) _Bool canDelete;
@property(readonly, nonatomic) _Bool canReference; // @synthesize canReference=_canReference;
@property(readonly, nonatomic) NSString *parentFolderPath;
- (_Bool)canPreserveFolderStructure;	// IMP=0x000000000004d496
@property(readonly, nonatomic) id representedObject;
- (id)descriptionWithPrefix:(id)arg1;	// IMP=0x000000000004cf16
@property(readonly, copy) NSString *description;
- (id)initWithSource:(id)arg1 url:(id)arg2 type:(id)arg3 supportedMediaType:(unsigned char)arg4 uuid:(id)arg5;	// IMP=0x000000000004ca10
- (void)configureSidecarTypeForExtension:(id)arg1;	// IMP=0x000000000004c807
- (id)initWithSource:(id)arg1;	// IMP=0x000000000004c706
- (_Bool)configureWithContentType:(id)arg1 supportedMediaType:(unsigned char)arg2;	// IMP=0x000000000004c1c1
- (void)updateIsRAW:(_Bool)arg1 contentType:(id)arg2;	// IMP=0x000000000004c172
- (_Bool)shouldPreserveUUID;	// IMP=0x000000000004c16a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

