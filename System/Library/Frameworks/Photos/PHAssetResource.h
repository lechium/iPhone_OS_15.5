//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <Photos/PHCPLAssetResource-Protocol.h>

@class NSDate, NSManagedObjectID, NSString, NSURL, PHPhotoLibrary, PLPhotoLibraryPathManagerIdentifier;
@protocol PLResourceIdentity;

@interface PHAssetResource : NSObject <PHCPLAssetResource>
{
    NSURL *_privateFileURL;	// 8 = 0x8
    long long _pixelWidth;	// 16 = 0x10
    long long _pixelHeight;	// 24 = 0x18
    unsigned long long _fileSize;	// 32 = 0x20
    _Bool _locallyAvailable;	// 40 = 0x28
    NSDate *_trashedDate;	// 48 = 0x30
    _Bool _trashed;	// 56 = 0x38
    _Bool _inCloud;	// 57 = 0x39
    PHPhotoLibrary *_photoLibrary;	// 64 = 0x40
    CDUnknownBlockType _privateFileLoader;	// 72 = 0x48
    _Bool _current;	// 80 = 0x50
    unsigned short _dataStoreClassID;	// 82 = 0x52
    unsigned int _orientation;	// 84 = 0x54
    long long _type;	// 88 = 0x58
    NSString *_assetLocalIdentifier;	// 96 = 0x60
    NSString *_uniformTypeIdentifier;	// 104 = 0x68
    NSString *_originalFilename;	// 112 = 0x70
    id <PLResourceIdentity> _backingResourceIdentity;	// 120 = 0x78
    NSManagedObjectID *_assetObjectID;	// 128 = 0x80
    unsigned long long _cplResourceType;	// 136 = 0x88
    PLPhotoLibraryPathManagerIdentifier *_libraryID;	// 144 = 0x90
}

+ (id)assetResourcesForLivePhoto:(id)arg1;	// IMP=0x00000000000e9316
+ (id)assetResourcesForAsset:(id)arg1;	// IMP=0x00000000000e9302
+ (id)_assetResourcesFromPLResources:(id)arg1 includeMetadata:(_Bool)arg2 mediaMetadataVirtualResources:(id)arg3 asset:(id)arg4 assetHasAdjustments:(_Bool)arg5 includeDerivatives:(_Bool)arg6 includeAdjustmentOverflowDataBlob:(_Bool)arg7;	// IMP=0x00000000000e9884
+ (id)assetResourceForAsset:(id)arg1 qualityClass:(id)arg2;	// IMP=0x00000000000e96ea
+ (id)assetResourcesForAsset:(id)arg1 includeDerivatives:(_Bool)arg2 includeMetadata:(_Bool)arg3 includeAdjustmentOverflowDataBlob:(_Bool)arg4;	// IMP=0x00000000000e958c
+ (id)assetResourcesForAsset:(id)arg1 includeDerivatives:(_Bool)arg2 includeMetadata:(_Bool)arg3;	// IMP=0x00000000000e9577
+ (id)assetResourcesForAsset:(id)arg1 includeDerivatives:(_Bool)arg2;	// IMP=0x00000000000e9562
- (void).cxx_destruct;	// IMP=0x00000000000e8e86
@property(readonly, nonatomic) PLPhotoLibraryPathManagerIdentifier *libraryID; // @synthesize libraryID=_libraryID;
@property(readonly, nonatomic, getter=isCurrent) _Bool current; // @synthesize current=_current;
@property(retain, nonatomic) NSURL *privateFileURL; // @synthesize privateFileURL=_privateFileURL;
@property(nonatomic, getter=isLocallyAvailable) _Bool locallyAvailable; // @synthesize locallyAvailable=_locallyAvailable;
@property(nonatomic) unsigned long long cplResourceType; // @synthesize cplResourceType=_cplResourceType;
@property(nonatomic) unsigned int orientation; // @synthesize orientation=_orientation;
@property(readonly, nonatomic) unsigned short dataStoreClassID; // @synthesize dataStoreClassID=_dataStoreClassID;
@property(readonly, nonatomic) NSManagedObjectID *assetObjectID; // @synthesize assetObjectID=_assetObjectID;
@property(readonly, nonatomic) id <PLResourceIdentity> backingResourceIdentity; // @synthesize backingResourceIdentity=_backingResourceIdentity;
@property(readonly, copy, nonatomic) NSString *originalFilename; // @synthesize originalFilename=_originalFilename;
@property(readonly, copy, nonatomic) NSString *uniformTypeIdentifier; // @synthesize uniformTypeIdentifier=_uniformTypeIdentifier;
@property(readonly, copy, nonatomic) NSString *assetLocalIdentifier; // @synthesize assetLocalIdentifier=_assetLocalIdentifier;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (id)debugDescription;	// IMP=0x00000000000e8b93
- (id)description;	// IMP=0x00000000000e8a70
- (id)initWithType:(long long)arg1 livePhoto:(id)arg2;	// IMP=0x00000000000e8664
- (id)initWithResource:(id)arg1 asset:(id)arg2 hasAdjustments:(_Bool)arg3;	// IMP=0x00000000000e748b
@property(readonly, nonatomic) PHPhotoLibrary *photoLibrary;
@property(readonly, nonatomic, getter=isInCloud) _Bool inCloud;
@property(readonly, nonatomic) unsigned long long fileSize;
@property(readonly, nonatomic) long long analysisType;
@property(readonly, nonatomic, getter=isTrashed) _Bool trashed;
@property(readonly, nonatomic) NSDate *trashedDate;
@property(readonly, nonatomic) long long pixelHeight;
@property(readonly, nonatomic) long long pixelWidth;
@property(readonly, copy, nonatomic) CDUnknownBlockType privateFileLoader;

@end

