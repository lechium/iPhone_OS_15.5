//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/CKContainerAssignment-Protocol.h>
#import <CloudKit/CKPropertiesDescription-Protocol.h>
#import <CloudKit/NSCopying-Protocol.h>
#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKContainerID, CKEncryptedData, CKEncryptedRecordValueStore, CKRecordID, CKRecordValueStore, CKReference, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSSet, NSString, NSURL;
@protocol CKRecordKeyValueSetting;

@interface CKRecord : NSObject <CKContainerAssignment, CKPropertiesDescription, NSSecureCoding, NSCopying>
{
    _Bool _hasUpdatedExpirationTimeInterval;	// 8 = 0x8
    _Bool _serializeProtectionData;	// 9 = 0x9
    _Bool _hasUpdatedShare;	// 10 = 0xa
    _Bool _hasUpdatedParent;	// 11 = 0xb
    _Bool _expired;	// 12 = 0xc
    _Bool _knownToServer;	// 13 = 0xd
    _Bool _wasCached;	// 14 = 0xe
    _Bool _wantsChainPCS;	// 15 = 0xf
    _Bool _useLightweightPCS;	// 16 = 0x10
    _Bool _wantsPublicSharingKey;	// 17 = 0x11
    _Bool _trackChanges;	// 18 = 0x12
    NSString *_recordType;	// 24 = 0x18
    CKRecordID *_recordID;	// 32 = 0x20
    CKRecordID *_creatorUserRecordID;	// 40 = 0x28
    NSDate *_creationDate;	// 48 = 0x30
    CKRecordID *_lastModifiedUserRecordID;	// 56 = 0x38
    NSDate *_modificationDate;	// 64 = 0x40
    CKReference *_share;	// 72 = 0x48
    CKReference *_parent;	// 80 = 0x50
    CKContainerID *_containerID;	// 88 = 0x58
    NSNumber *_updatedExpirationTimeInterval;	// 96 = 0x60
    NSData *_zoneishKeyID;	// 104 = 0x68
    NSString *_previousProtectionEtag;	// 112 = 0x70
    NSString *_protectionEtag;	// 120 = 0x78
    NSString *_zoneProtectionEtag;	// 128 = 0x80
    NSString *_shareEtag;	// 136 = 0x88
    NSString *_previousProtectionEtagFromUnitTest;	// 144 = 0x90
    NSData *_pcsKeyID;	// 152 = 0x98
    NSArray *_allPCSKeyIDs;	// 160 = 0xa0
    CKReference *_previousShare;	// 168 = 0xa8
    CKReference *_previousParent;	// 176 = 0xb0
    struct _PCSIdentityData *_signingPCSIdentity;	// 184 = 0xb8
    CKEncryptedData *_chainPrivateKey;	// 192 = 0xc0
    CKEncryptedData *_mutableEncryptedPSK;	// 200 = 0xc8
    NSData *_chainProtectionInfo;	// 208 = 0xd0
    NSData *_chainParentPublicKeyID;	// 216 = 0xd8
    NSArray *_tombstonedPublicKeyIDs;	// 224 = 0xe0
    NSURL *_mutableURL;	// 232 = 0xe8
    NSDate *_expirationDate;	// 240 = 0xf0
    long long _permission;	// 248 = 0xf8
    NSDictionary *_pluginFields;	// 256 = 0x100
    NSString *_etag;	// 264 = 0x108
    NSArray *_conflictLoserEtags;	// 272 = 0x110
    NSString *_modifiedByDevice;	// 280 = 0x118
    NSData *_protectionData;	// 288 = 0x120
    NSString *_routingKey;	// 296 = 0x128
    NSString *_baseToken;	// 304 = 0x130
    NSString *_displayedHostname;	// 312 = 0x138
    CKRecordValueStore *_valueStore;	// 320 = 0x140
    CKEncryptedRecordValueStore *_encryptedValueStore;	// 328 = 0x148
}

+ (id)keyForFetchingItems:(unsigned long long)arg1 atEndOfListField:(id)arg2;	// IMP=0x00000000000a079b
+ (id)keyForAppendingToListField:(id)arg1;	// IMP=0x00000000000a0768
+ (id)keyForInsertingIntoListField:(id)arg1 atIndex:(long long)arg2;	// IMP=0x00000000000a0739
+ (id)keyForListField:(id)arg1 withIndexRange:(struct _NSRange)arg2;	// IMP=0x00000000000a0706
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000009dee7
+ (_Bool)accessInstanceVariablesDirectly;	// IMP=0x000000000009c329
+ (id)shareURLWithShortToken:(id)arg1 shareTitle:(id)arg2 shareType:(id)arg3 containerID:(id)arg4 displayedHostname:(id)arg5;	// IMP=0x0000000000099a1e
+ (id)decryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;	// IMP=0x00000000000994d6
+ (id)encryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;	// IMP=0x000000000009923a
+ (id)fullTokenFromBaseToken:(id)arg1 privateToken:(id)arg2;	// IMP=0x0000000000098c87
+ (id)recordWithDuplicatedPackagesOfRecord:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000098506
- (void).cxx_destruct;	// IMP=0x00000000000a0c87
@property(nonatomic) _Bool trackChanges; // @synthesize trackChanges=_trackChanges;
@property(copy, nonatomic) CKEncryptedRecordValueStore *encryptedValueStore; // @synthesize encryptedValueStore=_encryptedValueStore;
@property(copy, nonatomic) CKRecordValueStore *valueStore; // @synthesize valueStore=_valueStore;
@property(copy, nonatomic) NSString *displayedHostname; // @synthesize displayedHostname=_displayedHostname;
@property(nonatomic) _Bool wantsPublicSharingKey; // @synthesize wantsPublicSharingKey=_wantsPublicSharingKey;
@property(copy, nonatomic) NSString *baseToken; // @synthesize baseToken=_baseToken;
@property(copy, nonatomic) NSString *routingKey; // @synthesize routingKey=_routingKey;
@property(nonatomic) _Bool useLightweightPCS; // @synthesize useLightweightPCS=_useLightweightPCS;
@property(nonatomic) _Bool wantsChainPCS; // @synthesize wantsChainPCS=_wantsChainPCS;
@property(copy, nonatomic) NSData *protectionData; // @synthesize protectionData=_protectionData;
@property(copy, nonatomic) NSString *modifiedByDevice; // @synthesize modifiedByDevice=_modifiedByDevice;
@property(copy, nonatomic) NSArray *conflictLoserEtags; // @synthesize conflictLoserEtags=_conflictLoserEtags;
@property(copy, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(copy, nonatomic) NSDictionary *pluginFields; // @synthesize pluginFields=_pluginFields;
@property long long permission; // @synthesize permission=_permission;
@property(nonatomic) _Bool wasCached; // @synthesize wasCached=_wasCached;
@property(nonatomic, getter=isKnownToServer) _Bool knownToServer; // @synthesize knownToServer=_knownToServer;
@property(readonly, nonatomic, getter=isExpired) _Bool expired; // @synthesize expired=_expired;
@property(readonly, copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(copy, nonatomic) NSURL *mutableURL; // @synthesize mutableURL=_mutableURL;
@property(retain, nonatomic) NSArray *tombstonedPublicKeyIDs; // @synthesize tombstonedPublicKeyIDs=_tombstonedPublicKeyIDs;
@property(retain, nonatomic) NSData *chainParentPublicKeyID; // @synthesize chainParentPublicKeyID=_chainParentPublicKeyID;
@property(retain, nonatomic) NSData *chainProtectionInfo; // @synthesize chainProtectionInfo=_chainProtectionInfo;
@property(retain, nonatomic) CKEncryptedData *mutableEncryptedPSK; // @synthesize mutableEncryptedPSK=_mutableEncryptedPSK;
@property(retain, nonatomic) CKEncryptedData *chainPrivateKey; // @synthesize chainPrivateKey=_chainPrivateKey;
@property(nonatomic) struct _PCSIdentityData *signingPCSIdentity; // @synthesize signingPCSIdentity=_signingPCSIdentity;
@property(nonatomic) _Bool hasUpdatedParent; // @synthesize hasUpdatedParent=_hasUpdatedParent;
@property(retain, nonatomic) CKReference *previousParent; // @synthesize previousParent=_previousParent;
@property(nonatomic) _Bool hasUpdatedShare; // @synthesize hasUpdatedShare=_hasUpdatedShare;
@property(retain, nonatomic) CKReference *previousShare; // @synthesize previousShare=_previousShare;
@property(retain, nonatomic) NSArray *allPCSKeyIDs; // @synthesize allPCSKeyIDs=_allPCSKeyIDs;
@property(retain, nonatomic) NSData *pcsKeyID; // @synthesize pcsKeyID=_pcsKeyID;
@property(retain, nonatomic) NSString *previousProtectionEtagFromUnitTest; // @synthesize previousProtectionEtagFromUnitTest=_previousProtectionEtagFromUnitTest;
@property(retain, nonatomic) NSString *shareEtag; // @synthesize shareEtag=_shareEtag;
@property(retain, nonatomic) NSString *zoneProtectionEtag; // @synthesize zoneProtectionEtag=_zoneProtectionEtag;
@property(retain, nonatomic) NSString *protectionEtag; // @synthesize protectionEtag=_protectionEtag;
@property(retain, nonatomic) NSString *previousProtectionEtag; // @synthesize previousProtectionEtag=_previousProtectionEtag;
@property(retain, nonatomic) NSData *zoneishKeyID; // @synthesize zoneishKeyID=_zoneishKeyID;
@property(nonatomic) _Bool serializeProtectionData; // @synthesize serializeProtectionData=_serializeProtectionData;
@property(copy, nonatomic) NSNumber *updatedExpirationTimeInterval; // @synthesize updatedExpirationTimeInterval=_updatedExpirationTimeInterval;
@property(nonatomic) _Bool hasUpdatedExpirationTimeInterval; // @synthesize hasUpdatedExpirationTimeInterval=_hasUpdatedExpirationTimeInterval;
@property(copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(copy, nonatomic) CKReference *parent; // @synthesize parent=_parent;
@property(copy, nonatomic) CKReference *share; // @synthesize share=_share;
@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) CKRecordID *lastModifiedUserRecordID; // @synthesize lastModifiedUserRecordID=_lastModifiedUserRecordID;
@property(copy, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic) CKRecordID *creatorUserRecordID; // @synthesize creatorUserRecordID=_creatorUserRecordID;
@property(copy, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property(readonly, copy, nonatomic) NSString *recordType; // @synthesize recordType=_recordType;
- (void)setExpired:(_Bool)arg1;	// IMP=0x00000000000a0812
- (void)setExpirationDate:(id)arg1;	// IMP=0x00000000000a07df
- (void)setExpirationAfterTimeInterval:(id)arg1;	// IMP=0x00000000000a07ca
- (void)claimPackagesWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000a0393
- (void)removePackages;	// IMP=0x00000000000a02fe
- (void)releasePackages;	// IMP=0x00000000000a0269
- (void)setStreamingAssetRequestOptions:(id)arg1;	// IMP=0x00000000000a0152
@property(readonly, nonatomic) unsigned long long assetDiskSize;
@property(readonly, nonatomic) unsigned long long assetCount;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000009e5ec
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000009e506
- (void)preTiboEncodeWithCoder:(id)arg1;	// IMP=0x000000000009e309
- (void)encodeSystemFieldsWithCoder:(id)arg1;	// IMP=0x000000000009deef
- (void)setParentReferenceFromRecordID:(id)arg1;	// IMP=0x000000000009de28
- (void)setParentReferenceFromRecord:(id)arg1;	// IMP=0x000000000009ddb0
- (void)CKAssignToContainerWithID:(id)arg1;	// IMP=0x000000000009d635
@property(readonly, nonatomic) _Bool hasModifiedEncryptedData;
@property(readonly, nonatomic) _Bool hasEncryptedData;
@property(readonly, nonatomic) _Bool hasPropertiesRequiringDecryption;
@property(readonly, nonatomic) _Bool hasModifiedPropertiesRequiringEncryption;
@property(readonly, nonatomic) _Bool hasPropertiesRequiringEncryption;
@property(readonly, nonatomic) _Bool containsPackageValues;
@property(readonly, nonatomic) _Bool containsAssetValues;
- (id)allTokens;	// IMP=0x000000000009ca8e
- (id)_allStrings;	// IMP=0x000000000009c97a
- (id)allValues;	// IMP=0x000000000009c709
- (id)allKeys;	// IMP=0x000000000009c643
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000009c631
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;	// IMP=0x000000000009c61f
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000009c599
- (void)setObjectNoValidate:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000009c513
- (void)setNilValueForKey:(id)arg1;	// IMP=0x000000000009c4a1
- (id)valueForKey:(id)arg1;	// IMP=0x000000000009c48f
- (id)objectForKey:(id)arg1;	// IMP=0x000000000009c40c
- (id)objectForKeyedSubscript:(id)arg1;	// IMP=0x000000000009c331
@property(readonly, copy, nonatomic) NSString *recordChangeTag;
- (void)resetChangedKeys;	// IMP=0x000000000009c250
- (id)changedKeys;	// IMP=0x000000000009c18a
@property(readonly, copy, nonatomic) id <CKRecordKeyValueSetting> valuesByKey;
@property(readonly, copy, nonatomic) id <CKRecordKeyValueSetting> encryptedValuesByKey;
- (id)encryptedValues;	// IMP=0x000000000009c154
@property(copy, nonatomic) NSSet *changedKeysSet;
@property(readonly, copy, nonatomic) NSDictionary *originalValues;
@property(readonly, copy, nonatomic) NSDictionary *values;
- (_Bool)isMoreRecentThanRecord:(id)arg1;	// IMP=0x000000000009bd15
@property(readonly, nonatomic) _Bool hasChainPCS;
@property(readonly, nonatomic) unsigned long long size;
- (id)redactedDescription;	// IMP=0x000000000009af8f
@property(readonly, copy) NSString *description;
- (void)CKDescribePropertiesUsing:(id)arg1;	// IMP=0x000000000009ac48
@property(readonly, copy) NSString *debugDescription;
- (_Bool)canHostServerURLInfo;	// IMP=0x000000000009a270
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, copy, nonatomic) NSURL *uncachedURL;
@property(readonly, copy, nonatomic) NSString *shortToken;
@property(readonly, nonatomic) NSData *encryptedFullTokenData;
@property(readonly, nonatomic) NSData *shortSharingTokenHashData;
- (id)shortSharingToken;	// IMP=0x0000000000099085
@property(readonly, nonatomic) NSData *shortSharingTokenData;
@property(readonly, nonatomic) NSString *fullToken;
@property(readonly, nonatomic) NSString *privateToken;
@property(readonly, copy, nonatomic) NSData *encryptedPublicSharingKey;
@property(copy, nonatomic) NSData *mutableEncryptedPublicSharingKeyData;
@property(copy, nonatomic) CKEncryptedData *mutableEncryptedPublicSharingKey;
- (void)dealloc;	// IMP=0x0000000000098928
- (void)setRecordType:(id)arg1;	// IMP=0x00000000000987e0
- (id)copyWithOriginalValues;	// IMP=0x0000000000097fc8
- (void)copySystemFieldsToRecord:(id)arg1 includingMergeableValueTimestamps:(_Bool)arg2 zone:(struct _NSZone *)arg3;	// IMP=0x0000000000097526
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000097335
- (id)initWithRecordType:(id)arg1 zoneID:(id)arg2;	// IMP=0x0000000000097283
- (id)initWithRecordType:(id)arg1;	// IMP=0x00000000000971ea
- (id)initWithRecordType:(id)arg1 recordID:(id)arg2;	// IMP=0x0000000000096e73
- (id)_initSkippingValidationWithRecordType:(id)arg1 recordID:(id)arg2;	// IMP=0x0000000000096d4a
- (id)init;	// IMP=0x0000000000096cce
- (id)initWithRecordTransport:(id)arg1;	// IMP=0x0000000000016f75

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

