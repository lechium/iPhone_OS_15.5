//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <CloudKit/CKXPCContainerScopedClient-Protocol.h>

@class CKAccountOverrideInfo, CKContainer, CKContainerID, CKContainerOptions, CKContainerSetupInfo, CKDatabaseImplementation, CKEntitlements, CKOperationFlowControlManager, CKRecordID, CKUploadRequestManager, NSLock, NSMutableArray, NSNumber, NSOperationQueue, NSString, NSXPCConnection;
@protocol CKXPCContainerScopedDaemon, NSObject, OS_dispatch_queue;

@interface CKContainerImplementation : NSObject <CKXPCContainerScopedClient>
{
    CKRecordID *_containerScopedUserID_locked;	// 8 = 0x8
    CKRecordID *_orgAdminUserID_locked;	// 16 = 0x10
    NSString *_sourceApplicationBundleIdentifier;	// 24 = 0x18
    NSString *_sourceApplicationSecondaryIdentifier;	// 32 = 0x20
    _Bool _hasCachedSetupInfo;	// 40 = 0x28
    _Bool _captureResponseHTTPHeaders;	// 41 = 0x29
    _Bool _hasValidContainerScopedDaemonProxyCreator;	// 42 = 0x2a
    _Bool _hasValidDiscretionaryXPCConnection;	// 43 = 0x2b
    int _statusReportToken;	// 44 = 0x2c
    CKUploadRequestManager *_uploadRequestManager;	// 48 = 0x30
    NSString *_personaIdentifier;	// 56 = 0x38
    NSOperationQueue *_convenienceOperationQueue;	// 64 = 0x40
    CKContainer *_unconfiguredWrappingContainer;	// 72 = 0x48
    CKContainerID *_containerID;	// 80 = 0x50
    CKContainerOptions *_options;	// 88 = 0x58
    CKDatabaseImplementation *_privateCloudDatabaseImplementation;	// 96 = 0x60
    CKDatabaseImplementation *_publicCloudDatabaseImplementation;	// 104 = 0x68
    CKDatabaseImplementation *_sharedCloudDatabaseImplementation;	// 112 = 0x70
    CKDatabaseImplementation *_organizationCloudDatabaseImplementation;	// 120 = 0x78
    NSMutableArray *_codeServiceImplementations;	// 128 = 0x80
    NSXPCConnection *_discretionaryXPCConnection;	// 136 = 0x88
    NSOperationQueue *_throttlingOperationQueue;	// 144 = 0x90
    NSOperationQueue *_backgroundThrottlingOperationQueue;	// 152 = 0x98
    NSOperationQueue *_discretionaryThrottlingOperationQueue;	// 160 = 0xa0
    CKOperationFlowControlManager *_flowControlManager;	// 168 = 0xa8
    CKContainerSetupInfo *_cachedSetupInfo;	// 176 = 0xb0
    CKEntitlements *_resolvedEntitlements;	// 184 = 0xb8
    NSNumber *_fakeDeviceToDeviceEncryptionAvailability;	// 192 = 0xc0
    NSObject<OS_dispatch_queue> *_underlyingDispatchQueue;	// 200 = 0xc8
    id <CKXPCContainerScopedDaemon> _containerScopedDaemonProxyCreator;	// 208 = 0xd0
    id <NSObject> _connectionInterruptedObserver;	// 216 = 0xd8
    NSMutableArray *_sandboxExtensionHandles;	// 224 = 0xe0
    unsigned long long _stateHandle;	// 232 = 0xe8
    CKAccountOverrideInfo *_accountOverrideInfo;	// 240 = 0xf0
    NSLock *_daemonConnectionLock;	// 248 = 0xf8
}

+ (void)initialize;	// IMP=0x0000000000017368
- (void).cxx_destruct;	// IMP=0x0000000000024ab9
@property(nonatomic) _Bool captureResponseHTTPHeaders; // @synthesize captureResponseHTTPHeaders=_captureResponseHTTPHeaders;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *underlyingDispatchQueue; // @synthesize underlyingDispatchQueue=_underlyingDispatchQueue;
@property(retain, nonatomic) NSNumber *fakeDeviceToDeviceEncryptionAvailability; // @synthesize fakeDeviceToDeviceEncryptionAvailability=_fakeDeviceToDeviceEncryptionAvailability;
@property(retain, nonatomic) CKEntitlements *resolvedEntitlements; // @synthesize resolvedEntitlements=_resolvedEntitlements;
@property(nonatomic) _Bool hasCachedSetupInfo; // @synthesize hasCachedSetupInfo=_hasCachedSetupInfo;
@property(retain, nonatomic) CKContainerSetupInfo *cachedSetupInfo; // @synthesize cachedSetupInfo=_cachedSetupInfo;
@property(nonatomic) int statusReportToken; // @synthesize statusReportToken=_statusReportToken;
@property(retain, nonatomic) CKOperationFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(retain, nonatomic) NSOperationQueue *discretionaryThrottlingOperationQueue; // @synthesize discretionaryThrottlingOperationQueue=_discretionaryThrottlingOperationQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundThrottlingOperationQueue; // @synthesize backgroundThrottlingOperationQueue=_backgroundThrottlingOperationQueue;
@property(retain, nonatomic) NSOperationQueue *throttlingOperationQueue; // @synthesize throttlingOperationQueue=_throttlingOperationQueue;
@property(retain, nonatomic) NSXPCConnection *discretionaryXPCConnection; // @synthesize discretionaryXPCConnection=_discretionaryXPCConnection;
@property(retain, nonatomic) NSMutableArray *codeServiceImplementations; // @synthesize codeServiceImplementations=_codeServiceImplementations;
@property(retain, nonatomic) CKDatabaseImplementation *organizationCloudDatabaseImplementation; // @synthesize organizationCloudDatabaseImplementation=_organizationCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *sharedCloudDatabaseImplementation; // @synthesize sharedCloudDatabaseImplementation=_sharedCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *publicCloudDatabaseImplementation; // @synthesize publicCloudDatabaseImplementation=_publicCloudDatabaseImplementation;
@property(retain, nonatomic) CKDatabaseImplementation *privateCloudDatabaseImplementation; // @synthesize privateCloudDatabaseImplementation=_privateCloudDatabaseImplementation;
@property(copy, nonatomic) CKContainerOptions *options; // @synthesize options=_options;
@property(copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(nonatomic) __weak CKContainer *unconfiguredWrappingContainer; // @synthesize unconfiguredWrappingContainer=_unconfiguredWrappingContainer;
@property(readonly, nonatomic) NSOperationQueue *convenienceOperationQueue;
@property(copy, nonatomic) NSString *personaIdentifier; // @synthesize personaIdentifier=_personaIdentifier;
- (void)registerForAssetRequests:(CDUnknownBlockType)arg1 packageRequests:(CDUnknownBlockType)arg2 machServiceName:(id)arg3;	// IMP=0x0000000000024544
@property(readonly, nonatomic) CKUploadRequestManager *uploadRequestManager; // @synthesize uploadRequestManager=_uploadRequestManager;
- (void)cancelUploadRequests;	// IMP=0x00000000000243f3
- (void)manuallyTriggerUploadRequests;	// IMP=0x00000000000243aa
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)arg1;	// IMP=0x00000000000242fe
- (void)unregisterFromUploadRequests;	// IMP=0x000000000002428e
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;	// IMP=0x000000000002415b
- (void)registerForPackageUploadRequests:(CDUnknownBlockType)arg1;	// IMP=0x0000000000024147
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1 machServiceName:(id)arg2;	// IMP=0x0000000000024014
- (void)registerForAssetUploadRequests:(CDUnknownBlockType)arg1;	// IMP=0x0000000000024000
- (void)fetchLongLivedOperationWithID:(id)arg1 wrappingContainer:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000023cb2
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000023a5f
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022f88
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000022792
- (void)reloadAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000222ec
- (void)accountInfoWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000021116
- (void)accountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020f6a
- (void)fetchXPCCriteriaWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020e0c
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000020cae
- (void)decryptPersonalInfoOnShare:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000020b15
- (void)acceptShareMetadata:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000020698
- (void)fetchShareMetadataWithURL:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000002029a
- (void)fetchShareParticipantWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000002010f
- (void)fetchShareParticipantWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001ff87
- (void)fetchShareParticipantWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001fdff
- (void)fetchShareParticipantWithLookupInfo:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001fb21
- (void)discoverUserIdentityWithUserRecordID:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001fa5f
- (void)discoverUserIdentityWithPhoneNumber:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001f99d
- (void)discoverUserIdentityWithEmailAddress:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000001f8db
- (void)discoverAllIdentitiesWithWrappingContainer:(id)arg1 convenienceConfiguration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001f34f
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001f2b7
- (void)fetchUserRecordIDWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001f222
@property(retain, nonatomic) CKRecordID *orgAdminUserID;
@property(retain, nonatomic) CKRecordID *containerScopedUserID;
- (id)applicationBundleIdentifierForPush;	// IMP=0x000000000001e863
- (id)primaryIdentifier;	// IMP=0x000000000001e70d
- (void)dumpDaemonStatusReport;	// IMP=0x000000000001e6ec
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001e5b9
- (id)CKStatusReportArray;	// IMP=0x000000000001df62
- (void)fetchFrameworkCachesDirectoryWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001dcbd
- (void)deviceCountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001d87e
- (void)_submitEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001d3a1
- (void)submitEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001d257
- (void)submitEventMetric:(id)arg1;	// IMP=0x000000000001d13a
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001cf6b
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001cd9f
- (void)fetchCurrentDeviceIDWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001cc41
- (void)fetchServerEnvironment:(CDUnknownBlockType)arg1;	// IMP=0x000000000001cade
- (void)representativeDataclassEnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001c8ed
- (void)clearPILSCacheForLookupInfos:(id)arg1;	// IMP=0x000000000001c750
- (void)clearContainerFromMetadataCache;	// IMP=0x000000000001c61a
- (void)wipeAllCachesAndDie;	// IMP=0x000000000001c5d6
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;	// IMP=0x000000000001c4b3
- (id)sourceApplicationSecondaryIdentifier;	// IMP=0x000000000001c470
- (void)setSourceApplicationBundleIdentifier:(id)arg1;	// IMP=0x000000000001c311
- (id)sourceApplicationBundleIdentifier;	// IMP=0x000000000001c2ce
- (id)untrustedEntitlements;	// IMP=0x000000000001c2bc
- (void)fetchCurrentUserBoundaryKeyWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bdde
- (void)dropDetachedContainersWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bc85
- (void)getOutstandingOperationCountWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001bb27
- (void)setFakeResponseOperationResult:(id)arg1 forNextRequestOfClassName:(id)arg2 forItemID:(id)arg3 withLifetime:(int)arg4;	// IMP=0x000000000001b862
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;	// IMP=0x000000000001b618
- (void)serverPreferredPushEnvironmentSynchronous:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001b4be
- (id)serverPreferredPushEnvironmentWithError:(id *)arg1;	// IMP=0x000000000001b273
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b25c
- (void)tossConfigWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001b09a
- (void)resetAllApplicationPermissionsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000001aed8
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000000001ad42
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001abd1
- (void)_scheduleConvenienceOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;	// IMP=0x000000000001a7ec
- (void)addOperation:(id)arg1 wrappingContainer:(id)arg2 convenienceConfiguration:(id)arg3;	// IMP=0x000000000001a6a5
- (void)consumeSandboxExtensions:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000001a210
- (id)_discretionaryDaemonMachServiceConnection;	// IMP=0x000000000001947b
@property(readonly, copy, nonatomic) NSString *containerIdentifier;
- (id)deviceContext;	// IMP=0x0000000000019412
- (id)setupInfo;	// IMP=0x0000000000019328
- (id)description;	// IMP=0x0000000000019316
- (id)CKPropertiesDescription;	// IMP=0x0000000000018c9a
- (void)dealloc;	// IMP=0x000000000001896a
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2 serviceInstanceURL:(id)arg3;	// IMP=0x00000000000188c8
- (id)codeServiceImplementationWithName:(id)arg1 serviceInstanceURL:(id)arg2;	// IMP=0x00000000000188b9
- (id)codeServiceImplementationWithName:(id)arg1 databaseScope:(long long)arg2;	// IMP=0x000000000001882d
- (id)codeServiceImplementationWithName:(id)arg1;	// IMP=0x000000000001881c
- (id)initWithContainerID:(id)arg1 options:(id)arg2 unconfiguredWrappingContainer:(id)arg3;	// IMP=0x00000000000174d8

@end

