//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class UIFont, UITraitCollection;

__attribute__((visibility("hidden")))
@interface AVStyleSheet : NSObject
{
    _Bool _shouldUseCompactFullScreenSize;	// 8 = 0x8
    UIFont *_scrubberTimeLabelFont;	// 16 = 0x10
    UIFont *_scrubberInfoLabelFont;	// 24 = 0x18
    UIFont *_infoLabelFont;	// 32 = 0x20
    double _standardPaddingFullScreen;	// 40 = 0x28
    double _standardPaddingInline;	// 48 = 0x30
    double _standardInteritemPadding;	// 56 = 0x38
    double _additionalInlinePaddingForDodgingSafeArea;	// 64 = 0x40
    double _volumeSliderInlineWidth;	// 72 = 0x48
    double _volumeSliderCompactFullScreenWidth;	// 80 = 0x50
    double _volumeSliderRegularFullScreenWidth;	// 88 = 0x58
    double _volumeSliderPadding;	// 96 = 0x60
    double _minimumProminentPlayButtonDimension;	// 104 = 0x68
    double _maximumProminentPlayButtonDimension;	// 112 = 0x70
    double _maximumTransportControlsWidth;	// 120 = 0x78
    double _maximumMultiRowTransportControlsWidth;	// 128 = 0x80
    double _minimumTransportControlsWidth;	// 136 = 0x88
    double _minimumSingleButtonTransportControlsWidth;	// 144 = 0x90
    double _spacingBetweenScrubInstructionsAndScrubber;	// 152 = 0x98
    double _liveBroadcastLabelTopToBackdropTopDistance;	// 160 = 0xa0
    UITraitCollection *_traitCollection;	// 168 = 0xa8
    struct CGSize _defaultItemInlineSize;	// 176 = 0xb0
    struct CGSize _defaultItemFullScreenSize;	// 192 = 0xc0
    struct CGSize _routePickerButtonInlineSize;	// 208 = 0xd0
    struct CGSize _routePickerButtonFullScreenSize;	// 224 = 0xe0
    struct CGSize _audioRoutePickerFullScreenSize;	// 240 = 0xf0
    struct CGSize _volumeButtonInlineSize;	// 256 = 0x100
    struct CGSize _volumeButtonFullScreenSize;	// 272 = 0x110
    struct CGSize _minimumScrubberSize;	// 288 = 0x120
    struct NSDirectionalEdgeInsets _doubleRowLayoutMargins;	// 304 = 0x130
    struct NSDirectionalEdgeInsets _doubleRowLayoutMarginsWhenShowingScrubInstructions;	// 336 = 0x150
    struct NSDirectionalEdgeInsets _doublerowLayoutMarginsWhenShowingCustomContentInfo;	// 368 = 0x170
}

- (void).cxx_destruct;	// IMP=0x000000000003a062
@property(retain, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
@property(nonatomic) _Bool shouldUseCompactFullScreenSize; // @synthesize shouldUseCompactFullScreenSize=_shouldUseCompactFullScreenSize;
@property(readonly, nonatomic) double liveBroadcastLabelTopToBackdropTopDistance; // @synthesize liveBroadcastLabelTopToBackdropTopDistance=_liveBroadcastLabelTopToBackdropTopDistance;
@property(readonly, nonatomic) double spacingBetweenScrubInstructionsAndScrubber; // @synthesize spacingBetweenScrubInstructionsAndScrubber=_spacingBetweenScrubInstructionsAndScrubber;
@property(readonly, nonatomic) struct NSDirectionalEdgeInsets doublerowLayoutMarginsWhenShowingCustomContentInfo; // @synthesize doublerowLayoutMarginsWhenShowingCustomContentInfo=_doublerowLayoutMarginsWhenShowingCustomContentInfo;
@property(readonly, nonatomic) struct NSDirectionalEdgeInsets doubleRowLayoutMarginsWhenShowingScrubInstructions; // @synthesize doubleRowLayoutMarginsWhenShowingScrubInstructions=_doubleRowLayoutMarginsWhenShowingScrubInstructions;
@property(readonly, nonatomic) struct NSDirectionalEdgeInsets doubleRowLayoutMargins; // @synthesize doubleRowLayoutMargins=_doubleRowLayoutMargins;
@property(readonly, nonatomic) struct CGSize minimumScrubberSize; // @synthesize minimumScrubberSize=_minimumScrubberSize;
@property(readonly, nonatomic) double minimumSingleButtonTransportControlsWidth; // @synthesize minimumSingleButtonTransportControlsWidth=_minimumSingleButtonTransportControlsWidth;
@property(readonly, nonatomic) double minimumTransportControlsWidth; // @synthesize minimumTransportControlsWidth=_minimumTransportControlsWidth;
@property(readonly, nonatomic) double maximumMultiRowTransportControlsWidth; // @synthesize maximumMultiRowTransportControlsWidth=_maximumMultiRowTransportControlsWidth;
@property(readonly, nonatomic) double maximumTransportControlsWidth; // @synthesize maximumTransportControlsWidth=_maximumTransportControlsWidth;
@property(readonly, nonatomic) double maximumProminentPlayButtonDimension; // @synthesize maximumProminentPlayButtonDimension=_maximumProminentPlayButtonDimension;
@property(readonly, nonatomic) double minimumProminentPlayButtonDimension; // @synthesize minimumProminentPlayButtonDimension=_minimumProminentPlayButtonDimension;
@property(readonly, nonatomic) struct CGSize volumeButtonFullScreenSize; // @synthesize volumeButtonFullScreenSize=_volumeButtonFullScreenSize;
@property(readonly, nonatomic) struct CGSize volumeButtonInlineSize; // @synthesize volumeButtonInlineSize=_volumeButtonInlineSize;
@property(readonly, nonatomic) double volumeSliderPadding; // @synthesize volumeSliderPadding=_volumeSliderPadding;
@property(readonly, nonatomic) double volumeSliderRegularFullScreenWidth; // @synthesize volumeSliderRegularFullScreenWidth=_volumeSliderRegularFullScreenWidth;
@property(readonly, nonatomic) double volumeSliderCompactFullScreenWidth; // @synthesize volumeSliderCompactFullScreenWidth=_volumeSliderCompactFullScreenWidth;
@property(readonly, nonatomic) double volumeSliderInlineWidth; // @synthesize volumeSliderInlineWidth=_volumeSliderInlineWidth;
@property(readonly, nonatomic) struct CGSize audioRoutePickerFullScreenSize; // @synthesize audioRoutePickerFullScreenSize=_audioRoutePickerFullScreenSize;
@property(readonly, nonatomic) struct CGSize routePickerButtonFullScreenSize; // @synthesize routePickerButtonFullScreenSize=_routePickerButtonFullScreenSize;
@property(readonly, nonatomic) struct CGSize routePickerButtonInlineSize; // @synthesize routePickerButtonInlineSize=_routePickerButtonInlineSize;
@property(readonly, nonatomic) double additionalInlinePaddingForDodgingSafeArea; // @synthesize additionalInlinePaddingForDodgingSafeArea=_additionalInlinePaddingForDodgingSafeArea;
@property(readonly, nonatomic) double standardInteritemPadding; // @synthesize standardInteritemPadding=_standardInteritemPadding;
@property(readonly, nonatomic) double standardPaddingInline; // @synthesize standardPaddingInline=_standardPaddingInline;
@property(readonly, nonatomic) double standardPaddingFullScreen; // @synthesize standardPaddingFullScreen=_standardPaddingFullScreen;
@property(readonly, nonatomic) struct CGSize defaultItemFullScreenSize; // @synthesize defaultItemFullScreenSize=_defaultItemFullScreenSize;
@property(readonly, nonatomic) struct CGSize defaultItemInlineSize; // @synthesize defaultItemInlineSize=_defaultItemInlineSize;
- (void)_loadFontsIfNeeded;	// IMP=0x0000000000039af2
@property(readonly, getter=shouldUsePadStyle) _Bool shouldUsePadStyle;
@property(readonly, getter=shouldUseMacStyle) _Bool shouldUseMacStyle;
@property(readonly, nonatomic) UIFont *infoLabelFont; // @synthesize infoLabelFont=_infoLabelFont;
@property(readonly, nonatomic) UIFont *scrubberTimeLabelFont; // @synthesize scrubberTimeLabelFont=_scrubberTimeLabelFont;
@property(readonly, nonatomic) UIFont *scrubberInfoLabelFont; // @synthesize scrubberInfoLabelFont=_scrubberInfoLabelFont;
- (struct UIEdgeInsets)playbackControlsViewLayoutMarginsForView:(id)arg1 keyboardHeight:(double)arg2 isFullScreen:(_Bool)arg3;	// IMP=0x0000000000038db1
- (id)initWithTraitCollection:(id)arg1 shouldUseCompactFullScreenSize:(_Bool)arg2;	// IMP=0x0000000000038913

@end

