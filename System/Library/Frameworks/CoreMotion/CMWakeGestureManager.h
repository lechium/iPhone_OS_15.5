//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString;
@protocol CMWakeGestureDelegate, OS_dispatch_queue;

@interface CMWakeGestureManager : NSObject
{
    NSObject<OS_dispatch_queue> *fDispatchQ;	// 8 = 0x8
    _Bool gestureUpdatesStarted;	// 16 = 0x10
    struct Dispatcher *fWakeDispatcher;	// 24 = 0x18
    struct Dispatcher *fPowerStateDispatcher;	// 32 = 0x20
    struct unique_ptr<CMWakeGestureVisitor, std::default_delete<CMWakeGestureVisitor>> fWakeGestureVisitor;	// 40 = 0x28
    long long fCurrentState;	// 48 = 0x30
    int fMeasureLatencyState;	// 56 = 0x38
    double fWakePacketTimestamp;	// 64 = 0x40
    struct IONotificationPort *fIoNotifyPort;	// 72 = 0x48
    unsigned int fIoNotification;	// 80 = 0x50
    unsigned int backlightService;	// 84 = 0x54
    double fLastNotificationTime;	// 88 = 0x58
    int fScreenDimmingNotificationToken;	// 96 = 0x60
    int fLockScreenToken;	// 100 = 0x64
    double fLastDisplayOnTime;	// 104 = 0x68
    NSString *fProcessName;	// 112 = 0x70
    _Bool fIsRunningInPrimaryProcess;	// 120 = 0x78
    _Bool fEnableLatencyAlert;	// 121 = 0x79
    _Bool fEnableAudioAlert;	// 122 = 0x7a
    int fLatencyAlertThreshold;	// 124 = 0x7c
    BOOL fDisplayState;	// 128 = 0x80
    int fSelector;	// 132 = 0x84
    id <CMWakeGestureDelegate> fUpdatedDelegate;	// 136 = 0x88
    id <CMWakeGestureDelegate> fDelegate;	// 144 = 0x90
}

+ (id)stringForViewPose:(unsigned char)arg1;	// IMP=0x00000000000e7848
+ (id)stringForStartPose:(unsigned char)arg1;	// IMP=0x00000000000e77b6
+ (id)stringForMode:(unsigned char)arg1;	// IMP=0x00000000000e7780
+ (id)stringForNotification:(unsigned char)arg1;	// IMP=0x00000000000e76ed
+ (unsigned char)toRaw:(long long)arg1;	// IMP=0x00000000000e6fb8
+ (long long)toState:(unsigned char)arg1;	// IMP=0x00000000000e6f99
+ (_Bool)hasSlowBootArgs;	// IMP=0x00000000000e5d7d
+ (_Bool)isWakeGestureOverrideEnabled;	// IMP=0x00000000000e5cb8
+ (_Bool)isWakeGestureAvailable;	// IMP=0x00000000000e5ba0
+ (id)sharedManager;	// IMP=0x00000000000e5a8c
+ (id)stringForGestureState:(long long)arg1;	// IMP=0x000000000019bec4
- (id).cxx_construct;	// IMP=0x00000000000e8523
- (void).cxx_destruct;	// IMP=0x00000000000e84de
- (void)onBacklightServiceUpdated:(unsigned int)arg1;	// IMP=0x00000000000e83fc
- (void)onPowerStateUpdated:(const struct Sample *)arg1;	// IMP=0x00000000000e8337
- (void)onWakeUpdated:(const struct Sample *)arg1;	// IMP=0x00000000000e7b79
- (void)onNotificationControl:(id)arg1;	// IMP=0x00000000000e78dc
- (void)playAlert;	// IMP=0x00000000000e76e7
- (void)loadPreferences;	// IMP=0x00000000000e7456
- (void)invokeDelegateWithState:(long long)arg1;	// IMP=0x00000000000e727b
- (void)forceDetected;	// IMP=0x00000000000e7275
- (void)simulateGesture:(long long)arg1 after:(double)arg2;	// IMP=0x00000000000e70cd
- (_Bool)simulateGestureWithDelay:(double)arg1 Duration:(double)arg2;	// IMP=0x00000000000e6fdb
- (void)stopWakeGestureUpdates;	// IMP=0x00000000000e6cab
- (void)startWakeGestureUpdates;	// IMP=0x00000000000e693b
- (void)dealloc;	// IMP=0x00000000000e68cd
- (id)initWithQueue:(id)arg1;	// IMP=0x00000000000e5f97
@property(nonatomic) id <CMWakeGestureDelegate> delegate;
- (void)reenableDetectedStateRecognition;	// IMP=0x00000000000e8534

@end

