//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, SCNPhysicsBody, SCNPhysicsWorld;

@interface SCNPhysicsVehicle
{
    SCNPhysicsBody *_chassisBody;	// 8 = 0x8
    NSArray *_wheels;	// 16 = 0x10
    SCNPhysicsWorld *_world;	// 24 = 0x18
    void *_vehicle;	// 32 = 0x20
    double _speedKmHour;	// 40 = 0x28
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000000002c4929
+ (id)vehicleWithChassisBody:(id)arg1 wheels:(id)arg2;	// IMP=0x00000000002c3aa0
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000002c4811
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000002c47ad
- (void)_customDecodingOfSCNPhysicsVehicle:(id)arg1;	// IMP=0x00000000002c479b
- (id)valueForKeyPath:(id)arg1;	// IMP=0x00000000002c46b1
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x00000000002c45bf
- (id)wheelAtIndex:(unsigned long long)arg1;	// IMP=0x00000000002c4567
- (_Bool)hasReferenceToPhysicsBody:(id)arg1;	// IMP=0x00000000002c4544
@property(readonly, nonatomic) double speedInKilometersPerHour;
- (void)_update;	// IMP=0x00000000002c43d0
- (void)_handleCreateIfNeeded:(_Bool)arg1;	// IMP=0x00000000002c4149
- (void)_createWheel:(id)arg1;	// IMP=0x00000000002c3f42
- (void)applyBrakingForce:(double)arg1 forWheelAtIndex:(long long)arg2;	// IMP=0x00000000002c3eb1
- (void)applyEngineForce:(double)arg1 forWheelAtIndex:(long long)arg2;	// IMP=0x00000000002c3e20
- (void)setSteeringAngle:(double)arg1 forWheelAtIndex:(long long)arg2;	// IMP=0x00000000002c3d8f
- (void)_willRemoveFromPhysicsWorld:(id)arg1;	// IMP=0x00000000002c3d3b
- (void)_addToPhysicsWorld:(id)arg1 definition:(CDStruct_0557a1bb)arg2;	// IMP=0x00000000002c3c9d
- (void)_copyDefinition:(CDStruct_0557a1bb *)arg1;	// IMP=0x00000000002c3c97
- (id)physicsWorld;	// IMP=0x00000000002c3c86
- (void *)btVehicle;	// IMP=0x00000000002c3c75
@property(readonly, nonatomic) NSArray *wheels;
@property(readonly, nonatomic) SCNPhysicsBody *chassisBody;
- (void)dealloc;	// IMP=0x00000000002c3ad4
- (id)initWithChassisBody:(id)arg1 wheels:(id)arg2;	// IMP=0x00000000002c3a16
- (void)_initializeWheelsArray;	// IMP=0x00000000002c3978

@end

