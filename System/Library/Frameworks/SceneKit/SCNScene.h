//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <SceneKit/NSSecureCoding-Protocol.h>
#import <SceneKit/SCNTransactionCommandObject-Protocol.h>

@class NSMutableDictionary, NSString, NSURL, SCNAuthoringEnvironment, SCNMaterialProperty, SCNNode, SCNPhysicsWorld, SCNSceneSource;

@interface SCNScene : NSObject <SCNTransactionCommandObject, NSSecureCoding>
{
    struct __C3DScene *_scene;	// 8 = 0x8
    SCNSceneSource *_sceneSource;	// 16 = 0x10
    SCNPhysicsWorld *_physicsWorld;	// 24 = 0x18
    SCNNode *_rootNode;	// 32 = 0x20
    SCNNode *_layerRootNode[4];	// 40 = 0x28
    SCNMaterialProperty *_background;	// 72 = 0x48
    SCNMaterialProperty *_environment;	// 80 = 0x50
    NSMutableDictionary *_userAttributes;	// 88 = 0x58
    double _fogStartDistance;	// 96 = 0x60
    double _fogEndDistance;	// 104 = 0x68
    double _fogDensityExponent;	// 112 = 0x70
    id _fogColor;	// 120 = 0x78
    _Bool _wantsScreenSpaceReflection;	// 128 = 0x80
    long long _screenSpaceReflectionSampleCount;	// 136 = 0x88
    double _screenSpaceReflectionMaxRayDistance;	// 144 = 0x90
    double _screenSpaceReflectionStride;	// 152 = 0x98
    _Bool _paused;	// 160 = 0xa0
    NSURL *_sourceURL;	// 168 = 0xa8
    _Bool _pausedForEditing;	// 176 = 0xb0
    _Bool _allowsDefaultLightingEnvironmentFallback;	// 177 = 0xb1
    SCNAuthoringEnvironment *_authoringEnvironment;	// 184 = 0xb8
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000000192529
+ (SEL)jsConstructor;	// IMP=0x000000000019117e
+ (id)_indexPathForNode:(id)arg1;	// IMP=0x0000000000190de2
+ (id)supportedFileUTIsForExport;	// IMP=0x000000000018e963
+ (id)supportedFileUTIsForImport;	// IMP=0x000000000018e925
+ (_Bool)canImportFileExtension:(id)arg1;	// IMP=0x000000000018e878
+ (_Bool)canImportFileUTI:(id)arg1;	// IMP=0x000000000018e82e
+ (id)sceneWithSceneRef:(struct __C3DScene *)arg1;	// IMP=0x000000000018e1a6
+ (id)sceneWithData:(id)arg1 options:(id)arg2;	// IMP=0x000000000018e15c
+ (id)sceneWithData:(id)arg1 atIndex:(long long)arg2 options:(id)arg3;	// IMP=0x000000000018e0d6
+ (id)sceneWithURL:(id)arg1 atIndex:(long long)arg2 options:(id)arg3;	// IMP=0x000000000018e04d
+ (id)sceneWithURL:(id)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000018dfd8
+ (id)sceneWithURL:(id)arg1 options:(id)arg2;	// IMP=0x000000000018dfc3
+ (id)sceneNamed:(id)arg1 options:(id)arg2;	// IMP=0x000000000018dfac
+ (id)sceneNamed:(id)arg1 inDirectory:(id)arg2 options:(id)arg3;	// IMP=0x000000000018def1
+ (id)sceneNamed:(id)arg1;	// IMP=0x000000000018deda
+ (id)scene;	// IMP=0x000000000018dec8
+ (id)sceneWithMDLAsset:(id)arg1 options:(id)arg2;	// IMP=0x00000000000160b6
+ (id)sceneWithMDLAsset:(id)arg1;	// IMP=0x00000000000160a2
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000192023
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000191dff
- (void)_prettifyForPreview;	// IMP=0x000000000019131a
- (void)_didEncodeSCNScene:(id)arg1;	// IMP=0x0000000000191314
- (void)_didDecodeSCNScene:(id)arg1;	// IMP=0x00000000001912d0
- (void)_customDecodingOfSCNScene:(id)arg1;	// IMP=0x0000000000191222
- (void)_customEncodingOfSCNScene:(id)arg1;	// IMP=0x000000000019118b
- (id)initForJavascript:(id)arg1;	// IMP=0x0000000000190f53
- (id)_subnodeFromIndexPath:(id)arg1;	// IMP=0x0000000000190f37
- (id)_nodeWithIndexPath:(id)arg1;	// IMP=0x0000000000190ced
- (_Bool)isPausedForEditing;	// IMP=0x0000000000190ce1
- (void)setPausedForEditing:(_Bool)arg1;	// IMP=0x0000000000190cc0
- (_Bool)isPausedOrPausedByInheritance;	// IMP=0x0000000000190cb4
@property(nonatomic, getter=isPaused) _Bool paused;
- (id)particleSystems;	// IMP=0x0000000000190954
- (void)removeAllParticleSystems;	// IMP=0x00000000001908a9
- (void)removeParticleSystem:(id)arg1;	// IMP=0x0000000000190792
- (void)addParticleSystem:(id)arg1 withTransform:(struct SCNMatrix4)arg2;	// IMP=0x0000000000190617
- (void)addSceneAnimation:(id)arg1 forKey:(id)arg2 target:(id)arg3;	// IMP=0x00000000001905b8
- (const void *)__CFObject;	// IMP=0x00000000001905ae
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x000000000019059c
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x000000000019045f
- (id)copyAnimationChannelForKeyPath:(id)arg1 property:(id)arg2;	// IMP=0x00000000001903fd
- (id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2;	// IMP=0x000000000019018e
- (void)unlock;	// IMP=0x000000000019016d
- (void)lock;	// IMP=0x000000000019014c
- (void)_dumpToDisk;	// IMP=0x000000000019004b
- (_Bool)writeToURL:(id)arg1 options:(id)arg2 delegate:(id)arg3 progressHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000018fb13
@property(nonatomic) double screenSpaceReflectionStride;
@property(nonatomic) double screenSpaceReflectionMaximumDistance;
- (void)setScreenSpaceReflectionDepthThreshold:(double)arg1;	// IMP=0x000000000018f977
- (double)screenSpaceReflectionDepthThreshold;	// IMP=0x000000000018f96e
@property(nonatomic) long long screenSpaceReflectionSampleCount;
@property(nonatomic) _Bool wantsScreenSpaceReflection;
@property(nonatomic) double fogStartDistance;
@property(nonatomic) double fogDensityExponent;
@property(nonatomic) double fogEndDistance;
@property(retain, nonatomic) id fogColor;
- (void)set_allowsDefaultLightingEnvironmentFallback:(_Bool)arg1;	// IMP=0x000000000018f3ef
- (_Bool)_allowsDefaultLightingEnvironmentFallback;	// IMP=0x000000000018f3e3
@property(readonly, nonatomic) SCNMaterialProperty *lightingEnvironment;
@property(readonly, nonatomic) SCNMaterialProperty *background;
- (id)attributeForKey:(id)arg1;	// IMP=0x000000000018f248
- (void)setAttribute:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000018f03b
- (void)setPlaybackSpeed:(float)arg1;	// IMP=0x000000000018efd7
- (float)playbackSpeed;	// IMP=0x000000000018ef77
- (void)setFrameRate:(double)arg1;	// IMP=0x000000000018ef0d
- (double)frameRate;	// IMP=0x000000000018eeaf
- (void)setEndTime:(double)arg1;	// IMP=0x000000000018ee4b
- (double)endTime;	// IMP=0x000000000018edeb
- (void)setStartTime:(double)arg1;	// IMP=0x000000000018ed87
- (double)startTime;	// IMP=0x000000000018ed27
- (void)_resetSceneTimeRange;	// IMP=0x000000000018e9f8
- (id)_physicsWorldCreateIfNeeded:(_Bool)arg1;	// IMP=0x000000000018e9b8
@property(readonly, nonatomic) SCNPhysicsWorld *physicsWorld;
- (void)_scaleSceneBy:(double)arg1;	// IMP=0x000000000018e77b
- (id)rootNodeForLayer:(int)arg1;	// IMP=0x000000000018e76d
- (void)setRootNode:(id)arg1 forLayer:(int)arg2;	// IMP=0x000000000018e679
- (void)setRootNode:(id)arg1;	// IMP=0x000000000018e667
- (void)_setRootNode:(id)arg1;	// IMP=0x000000000018e5a2
@property(readonly, nonatomic) SCNNode *rootNode;
- (id)root;	// IMP=0x000000000018e47c
- (id)sceneSource;	// IMP=0x000000000018e472
- (void)setSceneSource:(id)arg1;	// IMP=0x000000000018e444
- (struct __C3DScene *)sceneRef;	// IMP=0x000000000018e43a
- (id)_scenes;	// IMP=0x000000000018e41e
- (id)scene;	// IMP=0x000000000018e415
- (void)_setSourceURL:(id)arg1;	// IMP=0x000000000018e3e1
- (void)dealloc;	// IMP=0x000000000018e291
- (void)setUpAxis:(struct SCNVector3)arg1;	// IMP=0x000000000018e269
- (struct SCNVector3)upAxis;	// IMP=0x000000000018e222
- (void)_clearSceneRef;	// IMP=0x000000000018e1ec
- (void)_syncObjCModel;	// IMP=0x000000000018ddfd
- (id)initWithSceneRef:(struct __C3DScene *)arg1;	// IMP=0x000000000018dd17
- (id)init;	// IMP=0x000000000018dbfb
- (_Bool)writeToURLWithUSDKit:(id)arg1;	// IMP=0x000000000024d0be
- (id)exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize)arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void *)arg6;	// IMP=0x00000000002a76c4
- (id)_exportAsMovieOperationWithDestinationURL:(id)arg1 size:(struct CGSize)arg2 attributes:(id)arg3 delegate:(id)arg4 didEndSelector:(SEL)arg5 userInfo:(void *)arg6;	// IMP=0x00000000002a75ed
- (_Bool)writeToURL:(id)arg1 options:(id)arg2;	// IMP=0x00000000002a75e5
- (id)debugQuickLookObjectWithPointOfView:(id)arg1;	// IMP=0x00000000002ac843
- (id)debugQuickLookObject;	// IMP=0x00000000002ac82f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

