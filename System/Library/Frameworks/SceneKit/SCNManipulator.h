//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSMutableIndexSet, NSOrderedSet, SCNAuthoringEnvironment, SCNBillboardConstraint, SCNNode;

@interface SCNManipulator : NSObject
{
    SCNAuthoringEnvironment *_authoringEnvironment;	// 8 = 0x8
    NSOrderedSet *_targets;	// 16 = 0x10
    SCNNode *_node;	// 24 = 0x18
    union C3DMatrix4x4 _xAxisToZAxisTransform;	// 32 = 0x20
    union C3DMatrix4x4 _yAxisToZAxisTransform;	// 96 = 0x60
    union C3DMatrix4x4 _xyPlaneToYZPlaneTransform;	// 160 = 0xa0
    union C3DMatrix4x4 _xyPlaneToXZPlaneTransform;	// 224 = 0xe0
    unsigned short _selectedAxis;	// 288 = 0x120
    union {
        struct {
            MISSING_TYPE *originalPosition__axisDirection__mouseDeltaVector;
        } axisMove;
        struct {
            MISSING_TYPE *originalPosition__planeNormal__pointInPlane__mouseDeltaVector;
        } planeMove;
        struct {
            float rotationSign;
            MISSING_TYPE *originalRotation;
        } axisRotate;
    } _actionData;	// 304 = 0x130
    _Bool _isMouseDown;	// 368 = 0x170
    _Bool _readonly;	// 369 = 0x171
    unsigned short _action;	// 370 = 0x172
    struct CGPoint _originalMouseLocation;	// 376 = 0x178
    struct {
        void *positions;
        void *orientations;
        struct SCNMatrix4 *originalLocalMatrix;
        void *scales;
    } _originalData;	// 392 = 0x188
    unsigned int _originalDataCount;	// 424 = 0x1a8
    union C3DMatrix4x4 _worldInitialMatrix;	// 432 = 0x1b0
    union C3DMatrix4x4 _worldMatrix;	// 496 = 0x1f0
    long long _snapToAlignCount;	// 560 = 0x230
    CDStruct_962da47d *_snapToAlignOnX;	// 568 = 0x238
    CDStruct_962da47d *_snapToAlignOnY;	// 576 = 0x240
    CDStruct_962da47d *_snapToAlignOnZ;	// 584 = 0x248
    NSMutableIndexSet *_snapXIndexes;	// 592 = 0x250
    NSMutableIndexSet *_snapYIndexes;	// 600 = 0x258
    NSMutableIndexSet *_snapZIndexes;	// 608 = 0x260
    long long _xAlignment;	// 616 = 0x268
    long long _yAlignment;	// 624 = 0x270
    long long _zAlignment;	// 632 = 0x278
    SCNNode *_planarTranslationHandleXY;	// 640 = 0x280
    SCNNode *_planarTranslationHandleYZ;	// 648 = 0x288
    SCNNode *_planarTranslationHandleXZ;	// 656 = 0x290
    SCNNode *_planarTranslationHandles;	// 664 = 0x298
    SCNNode *_axis;	// 672 = 0x2a0
    SCNNode *_arcHandleXY;	// 680 = 0x2a8
    SCNNode *_arcHandleYZ;	// 688 = 0x2b0
    SCNNode *_arcHandleXZ;	// 696 = 0x2b8
    SCNNode *_arcHandles;	// 704 = 0x2c0
    SCNNode *_scaleNode;	// 712 = 0x2c8
    SCNNode *_screenSpaceRotation;	// 720 = 0x2d0
    SCNNode *_highlightNode;	// 728 = 0x2d8
    MISSING_TYPE *_planarTranslationLayout;	// 736 = 0x2e0
    _Bool _layoutLocked;	// 752 = 0x2f0
    SCNNode *_zArrow;	// 760 = 0x2f8
    SCNNode *_rotationHandles;	// 768 = 0x300
    SCNNode *_occluder;	// 776 = 0x308
    SCNNode *_translateHandles;	// 784 = 0x310
    SCNBillboardConstraint *_billboard;	// 792 = 0x318
    NSOrderedSet *_cloneSet;	// 800 = 0x320
    _Bool _cloning;	// 808 = 0x328
    unsigned long long _features;	// 816 = 0x330
    _Bool _alternateMode;	// 824 = 0x338
}

@property(nonatomic) long long zAlignment; // @synthesize zAlignment=_zAlignment;
@property(nonatomic) long long yAlignment; // @synthesize yAlignment=_yAlignment;
@property(nonatomic) long long xAlignment; // @synthesize xAlignment=_xAlignment;
@property(nonatomic) _Bool readonly; // @synthesize readonly=_readonly;
- (MISSING_TYPE *)_snapPositionToAlign:(struct SCNVector3)arg1 original:(double)arg2 unit:(_Bool)arg3 axisMove:(_Bool *)arg4 rayStart:(long long *)arg5 rayDir:didSnap:snapIndexes: /* Error: Ran out of types for this method. */;	// IMP=0x0000000000055f5c
- (void)prepareSnapToAlignDataIfNeeded;	// IMP=0x0000000000055db2
- (void)prepareSnapToAlignData;	// IMP=0x00000000000557ef
- (void)_prepareSnapToAlignData:(unsigned short)arg1 minOffset:maxOffset: /* Error: Ran out of types for this method. */;	// IMP=0x00000000000551b1
- (const CDStruct_962da47d *)snapInfoAtIndex:(unsigned long long)arg1 axis:(unsigned long long)arg2;	// IMP=0x0000000000055160
- (id)snapGuideIndexesOnAxis:(unsigned long long)arg1;	// IMP=0x0000000000055138
- (void)_updateCloneStateWithEvent:(CDStruct_8affffdd)arg1;	// IMP=0x0000000000055132
- (id)setupClones;	// IMP=0x0000000000054f42
- (void)validateClones;	// IMP=0x0000000000054d32
- (void)addClonesToScene;	// IMP=0x0000000000054cc6
- (void)removeClonesFromScene;	// IMP=0x0000000000054c69
- (id)scene;	// IMP=0x0000000000054c32
- (_Bool)mouseUp:(CDStruct_8affffdd)arg1;	// IMP=0x0000000000054a2c
- (_Bool)mouseDown:(CDStruct_8affffdd)arg1;	// IMP=0x00000000000544db
- (_Bool)mouseDragged:(CDStruct_8affffdd)arg1;	// IMP=0x0000000000054461
- (void)clearSnapIndexes;	// IMP=0x00000000000543de
- (_Bool)_applyWithEvent:(CDStruct_8affffdd)arg1;	// IMP=0x00000000000530b2
- (void)_deleteOriginalData;	// IMP=0x0000000000053057
- (void)_saveOriginalData;	// IMP=0x0000000000052e40
- (void)updateItemsScale:(float)arg1;	// IMP=0x0000000000052a35
- (void)updateItemsRotation: /* Error: Ran out of types for this method. */;	// IMP=0x00000000000523a1
- (void)updateItemsPosition;	// IMP=0x0000000000051e96
- (_Bool)mouseMoved:(CDStruct_8affffdd)arg1;	// IMP=0x0000000000051dec
- (void)_updateActionWithEvent:(CDStruct_8affffdd)arg1;	// IMP=0x0000000000051c3a
- (id)hitTest:(CDStruct_8affffdd)arg1;	// IMP=0x00000000000518c3
- (void)unhighlightSelectedNode;	// IMP=0x00000000000517d0
- (void)unlockLayout;	// IMP=0x00000000000517c3
- (void)lockLayout;	// IMP=0x00000000000517b6
@property(nonatomic) unsigned long long features;
- (void)setAlternateMode:(_Bool)arg1;	// IMP=0x0000000000051779
- (unsigned long long)_effectiveFeatures;	// IMP=0x0000000000051735
- (void)updateManipulatorComponents;	// IMP=0x0000000000051542
- (void)editingSpaceChanged;	// IMP=0x0000000000051530
- (void)updateManipulatorNode;	// IMP=0x000000000005149c
- (void)updateManipulatorPosition:(struct __C3DEngineContext *)arg1;	// IMP=0x0000000000050733
- (void)setupNode;	// IMP=0x000000000004f899
@property(readonly) SCNNode *manipulatorNode;
- (_Bool)isDragging;	// IMP=0x000000000004f863
- (long long)effectiveEditingSpace;	// IMP=0x000000000004f7da
- (id)copy;	// IMP=0x000000000004f78c
- (void)dealloc;	// IMP=0x000000000004f6d0
- (id)init;	// IMP=0x000000000004f5b4
@property(readonly) struct SCNMatrix4 transform;
- (void)_setAuthoringEnvironment:(id)arg1;	// IMP=0x000000000004f576
@property(readonly) SCNAuthoringEnvironment *authoringEnvironment;
@property(retain, nonatomic) SCNNode *target;
@property(retain, nonatomic) NSOrderedSet *targets;

@end

