//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, SCNMTLComputePipeline, SCNMTLResourceManager;
@protocol MTLBuffer;

__attribute__((visibility("hidden")))
@interface SCNMTLMorph : NSObject
{
    SCNMTLResourceManager *_resourceManager;	// 8 = 0x8
    CDStruct_798fd7c0 _baseBuffer;	// 16 = 0x10
    unsigned int _baseVertexCount;	// 40 = 0x28
    short _baseBufferTypes[3];	// 44 = 0x2c
    unsigned int _baseBufferTypesCount;	// 52 = 0x34
    unsigned int _baseBufferStride;	// 56 = 0x38
    short _targetBufferTypes[3];	// 60 = 0x3c
    unsigned int _targetBufferTypesCount;	// 68 = 0x44
    unsigned int _targetBufferStride;	// 72 = 0x48
    unsigned int _dstSemanticUsageMask;	// 76 = 0x4c
    unsigned int _srcSemanticUsageMask;	// 80 = 0x50
    void *_bufferPool;	// 88 = 0x58
    _Bool _unifyPostMorphNormals;	// 96 = 0x60
    _Bool _shouldMorphNormals;	// 97 = 0x61
    _Bool _nextMorphRequiresReset;	// 98 = 0x62
    unsigned char _dataKindForMorphing;	// 99 = 0x63
    id <MTLBuffer> _splatProvokingVertices;	// 104 = 0x68
    struct {
        id <MTLBuffer> perVertexTrianglesOffsets;
        id <MTLBuffer> perVertexTrianglesIndices;
        _Bool sharedTriangleIs16Bits;
    } _postUnifyInfo;	// 112 = 0x70
    struct Target *_targets;	// 136 = 0x88
    unsigned long long _targetCount;	// 144 = 0x90
    NSArray *_originalTargets;	// 152 = 0x98
    SCNMTLComputePipeline *_copyCPS;	// 160 = 0xa0
    SCNMTLComputePipeline *_blendCPS;	// 168 = 0xa8
    SCNMTLComputePipeline *_blendSparseCPS;	// 176 = 0xb0
    SCNMTLComputePipeline *_splatCPS;	// 184 = 0xb8
}

- (void)morphSparseMorpher:(struct __C3DMorpher *)arg1 renderContext:(id)arg2 positionBuffer:(id)arg3 normalBuffer:(id)arg4;	// IMP=0x0000000000043987
- (void)_createPipelineStates:(id)arg1;	// IMP=0x000000000004351c
- (void)unifyMeshWithRenderContext:(id)arg1 positionBuffer:(id)arg2 normalBuffer:(id)arg3;	// IMP=0x0000000000043272
- (void)morphIncrementallyForMorpher:(struct __C3DMorpher *)arg1 renderContext:(id)arg2 positionBuffer:(id)arg3 normalBuffer:(id)arg4;	// IMP=0x0000000000042aa7
- (_Bool)isCompatibleWithMorph:(struct __C3DMorph *)arg1;	// IMP=0x0000000000042a5f
- (unsigned int)sparseIndexSize;	// IMP=0x0000000000042a54
- (void)dealloc;	// IMP=0x0000000000042997
- (void)setNextMorphRequiresReset;	// IMP=0x000000000004298d
- (CDStruct_798fd7c0)newBufferWithLength:(unsigned long long)arg1;	// IMP=0x000000000004296e
- (id)initWithMorph:(struct __C3DMorph *)arg1 baseGeometry:(struct __C3DGeometry *)arg2 resourceManager:(id)arg3;	// IMP=0x0000000000041429
- (void)_prepareTargetDataForIndex:(long long)arg1 morph:(struct __C3DMorph *)arg2 baseMesh:(struct __C3DMesh *)arg3;	// IMP=0x00000000000411d2
- (void)_writeSources:(const struct __C3DMeshSource **)arg1 dstTypes:(short *)arg2 sourcesCount:(unsigned int)arg3 inBuffer:(void *)arg4 stride:(unsigned int)arg5 length:(unsigned long long)arg6 sparse:(_Bool)arg7 positionScale:(float)arg8;	// IMP=0x0000000000040dba

@end

