//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface ACRateLimiter : NSObject
{
    _Bool _isVacuumInProgress;	// 8 = 0x8
    unsigned long long _maximum;	// 16 = 0x10
    double _timeInterval;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_instanceQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_vacuumQueue;	// 40 = 0x28
    NSMutableDictionary *_keyToSimpleRateLimiter;	// 48 = 0x30
    double _vacuumTimeInterval;	// 56 = 0x38
    NSDate *_nextVacuumDate;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x0000000000045213
@property(retain) NSDate *nextVacuumDate; // @synthesize nextVacuumDate=_nextVacuumDate;
@property _Bool isVacuumInProgress; // @synthesize isVacuumInProgress=_isVacuumInProgress;
@property(readonly) double vacuumTimeInterval; // @synthesize vacuumTimeInterval=_vacuumTimeInterval;
@property(retain) NSMutableDictionary *keyToSimpleRateLimiter; // @synthesize keyToSimpleRateLimiter=_keyToSimpleRateLimiter;
@property(readonly) NSObject<OS_dispatch_queue> *vacuumQueue; // @synthesize vacuumQueue=_vacuumQueue;
@property(readonly) NSObject<OS_dispatch_queue> *instanceQueue; // @synthesize instanceQueue=_instanceQueue;
@property(readonly) double timeInterval; // @synthesize timeInterval=_timeInterval;
@property(readonly) unsigned long long maximum; // @synthesize maximum=_maximum;
- (_Bool)_vacuumQueue_vacuumKey:(id)arg1;	// IMP=0x0000000000044fa7
- (void)_vacuumQueue_vacuum;	// IMP=0x0000000000044bf3
- (void)vacuumIfNeeded;	// IMP=0x0000000000044a0f
- (id)simpleRateLimiterForKey:(id)arg1;	// IMP=0x000000000004477a
- (_Bool)reservePerformActionForKey:(id)arg1;	// IMP=0x000000000004471e
- (id)initWithMaximum:(unsigned long long)arg1 inTimeInterval:(double)arg2;	// IMP=0x00000000000445a5

@end

