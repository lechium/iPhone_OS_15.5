//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

#import <LocalAuthentication/NSSecureCoding-Protocol.h>

@class LAClient, NSData, NSNumber, NSString;
@protocol LAPrearmContextXPC, LAUIDelegate;

@interface LAContext : NSObject <NSSecureCoding>
{
    LAClient *_client;	// 8 = 0x8
    id <LAPrearmContextXPC> _prearmContext;	// 16 = 0x10
    unsigned int _instanceId;	// 24 = 0x18
    NSNumber *_maxBiometryFailures;	// 32 = 0x20
    NSData *_evaluatedPolicyDomainState;	// 40 = 0x28
    NSData *_externalizedContext;	// 48 = 0x30
    long long _biometryType;	// 56 = 0x38
}

+ (unsigned int)newCommandId;	// IMP=0x0000000000010748
+ (unsigned int)newInstanceId;	// IMP=0x0000000000010734
+ (_Bool)supportsSecureCoding;	// IMP=0x000000000000a222
+ (id)_optionsForEvent:(long long)arg1;	// IMP=0x00000000000098c0
+ (void)notifyEvent:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000009514
+ (void)notifyEvent:(long long)arg1;	// IMP=0x00000000000094f9
- (void).cxx_destruct;	// IMP=0x0000000000011141
@property(readonly, nonatomic) unsigned int instanceId; // @synthesize instanceId=_instanceId;
@property(nonatomic) long long biometryType; // @synthesize biometryType=_biometryType;
@property(retain, nonatomic) NSData *externalizedContext; // @synthesize externalizedContext=_externalizedContext;
@property(retain, nonatomic) NSData *evaluatedPolicyDomainState; // @synthesize evaluatedPolicyDomainState=_evaluatedPolicyDomainState;
@property(retain, nonatomic) NSNumber *maxBiometryFailures; // @synthesize maxBiometryFailures=_maxBiometryFailures;
- (void)setOptionEventProcessing:(id)arg1;	// IMP=0x00000000000110cd
- (id)optionEventProcessing;	// IMP=0x00000000000110b6
@property(nonatomic) _Bool interactionNotAllowed;
- (void)setOptionSecurePassphrase:(id)arg1;	// IMP=0x0000000000010ff0
- (id)optionSecurePassphrase;	// IMP=0x0000000000010fd9
- (void)setOptionAuthenticationTitle:(id)arg1;	// IMP=0x0000000000010fbf
- (id)optionAuthenticationTitle;	// IMP=0x0000000000010fa8
@property(copy, nonatomic) NSString *localizedReason;
- (void)setOptionCheckApplePayEnabled:(id)arg1;	// IMP=0x0000000000010eb9
- (id)optionCheckApplePayEnabled;	// IMP=0x0000000000010ea2
- (void)setOptionPINLabel:(id)arg1;	// IMP=0x0000000000010e88
- (id)optionPINLabel;	// IMP=0x0000000000010e71
- (void)setOptionTKAuthOperationError:(id)arg1;	// IMP=0x0000000000010e57
- (id)optionTKAuthOperationError;	// IMP=0x0000000000010e40
- (void)setOptionBodyText:(id)arg1;	// IMP=0x0000000000010e26
- (id)optionBodyText;	// IMP=0x0000000000010e0f
- (void)setOptionPINCharset:(id)arg1;	// IMP=0x0000000000010df5
- (id)optionPINCharset;	// IMP=0x0000000000010dde
- (void)setOptionPINMaxLength:(id)arg1;	// IMP=0x0000000000010dc4
- (id)optionPINMaxLength;	// IMP=0x0000000000010dad
- (void)setOptionPINMinLength:(id)arg1;	// IMP=0x0000000000010d93
- (id)optionPINMinLength;	// IMP=0x0000000000010d7c
- (void)setOptionMatchForUnlock:(id)arg1;	// IMP=0x0000000000010d62
- (id)optionMatchForUnlock;	// IMP=0x0000000000010d4b
- (void)setOptionCallerIconBundlePath:(id)arg1;	// IMP=0x0000000000010d31
- (id)optionCallerIconBundlePath;	// IMP=0x0000000000010d1a
- (void)setOptionPhysicalButtonTitle:(id)arg1;	// IMP=0x0000000000010d00
- (id)optionPhysicalButtonTitle;	// IMP=0x0000000000010ce9
- (void)setOptionFingerMustBeOff:(id)arg1;	// IMP=0x0000000000010ccf
- (id)optionFingerMustBeOff;	// IMP=0x0000000000010cb8
- (void)setOptionNoFailureUI:(id)arg1;	// IMP=0x0000000000010c9e
- (id)optionNoFailureUI;	// IMP=0x0000000000010c87
- (void)setOptionCallerAuditToken:(id)arg1;	// IMP=0x0000000000010c6d
- (id)optionCallerAuditToken;	// IMP=0x0000000000010c56
- (void)setOptionFaceDetectLength:(id)arg1;	// IMP=0x0000000000010c3c
- (id)optionFaceDetectLength;	// IMP=0x0000000000010c25
- (void)setOptionPasscodeScreenBlur:(id)arg1;	// IMP=0x0000000000010c0b
- (id)optionPasscodeScreenBlur;	// IMP=0x0000000000010bf4
- (void)setOptionPasscodeScreenStyle:(id)arg1;	// IMP=0x0000000000010bda
- (id)optionPasscodeScreenStyle;	// IMP=0x0000000000010bc3
- (void)setOptionPasswordAuthenticationReason:(id)arg1;	// IMP=0x0000000000010ba9
- (id)optionPasswordAuthenticationReason;	// IMP=0x0000000000010b92
- (void)setOptionSoftwareUpdateStashMode:(id)arg1;	// IMP=0x0000000000010b78
- (id)optionSoftwareUpdateStashMode;	// IMP=0x0000000000010b61
- (void)setOptionSoftwareUpdateManifest:(id)arg1;	// IMP=0x0000000000010b47
- (id)optionSoftwareUpdateManifest;	// IMP=0x0000000000010b30
- (void)setOptionBiometryLockoutRecovery:(id)arg1;	// IMP=0x0000000000010b16
- (id)optionBiometryLockoutRecovery;	// IMP=0x0000000000010aff
- (void)setOptionTintColor:(id)arg1;	// IMP=0x0000000000010ae5
- (id)optionTintColor;	// IMP=0x0000000000010ace
- (void)setOptionUserCancel:(id)arg1;	// IMP=0x0000000000010ab4
- (id)optionUserCancel;	// IMP=0x0000000000010a9d
- (void)setOptionSharedValidity:(id)arg1;	// IMP=0x0000000000010a83
- (id)optionSharedValidity;	// IMP=0x0000000000010a6c
- (void)setOptionPINFirst:(id)arg1;	// IMP=0x0000000000010a52
- (id)optionPINFirst;	// IMP=0x0000000000010a3b
- (void)setOptionPINLength:(id)arg1;	// IMP=0x0000000000010a21
- (id)optionPINLength;	// IMP=0x0000000000010a0a
- (void)setOptionPINTitle:(id)arg1;	// IMP=0x00000000000109f0
- (id)optionPINTitle;	// IMP=0x00000000000109d9
- (void)setOptionPasscodeTitle:(id)arg1;	// IMP=0x00000000000109bf
- (id)optionPasscodeTitle;	// IMP=0x00000000000109a8
- (void)setOptionFallbackVisible:(id)arg1;	// IMP=0x000000000001098e
- (id)optionFallbackVisible;	// IMP=0x0000000000010977
- (void)setOptionCancelVisible:(id)arg1;	// IMP=0x000000000001095d
- (id)optionCancelVisible;	// IMP=0x0000000000010946
- (void)setOptionReturnBiometryDatabaseHash:(id)arg1;	// IMP=0x000000000001092c
- (id)optionReturnBiometryDatabaseHash;	// IMP=0x0000000000010915
- (void)setOptionTransitionStyle:(id)arg1;	// IMP=0x00000000000108fb
- (id)optionTransitionStyle;	// IMP=0x00000000000108e4
- (void)setOptionPresentationStyle:(id)arg1;	// IMP=0x00000000000108ca
- (id)optionPresentationStyle;	// IMP=0x00000000000108b3
- (void)setOptionMaxBiometryFailures:(id)arg1;	// IMP=0x0000000000010899
- (id)optionMaxBiometryFailures;	// IMP=0x0000000000010882
- (void)setOptionAuthenticationReason:(id)arg1;	// IMP=0x0000000000010868
- (id)optionAuthenticationReason;	// IMP=0x0000000000010851
- (void)setOptionUserFallback:(id)arg1;	// IMP=0x0000000000010837
- (id)optionUserFallback;	// IMP=0x0000000000010820
- (void)setOptionCallerPID:(id)arg1;	// IMP=0x0000000000010806
- (id)optionCallerPID;	// IMP=0x00000000000107ef
- (void)setOptionCallerName:(id)arg1;	// IMP=0x00000000000107d5
- (id)optionCallerName;	// IMP=0x00000000000107be
- (void)setOptionTimeout:(id)arg1;	// IMP=0x00000000000107a4
- (id)optionTimeout;	// IMP=0x000000000001078d
- (void)setOptionNotInteractive:(id)arg1;	// IMP=0x0000000000010773
- (id)optionNotInteractive;	// IMP=0x000000000001075c
- (void)bootstrapServiceType:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000001071e
@property(nonatomic) __weak id <LAUIDelegate> uiDelegate;
- (id)uuid;	// IMP=0x00000000000106dc
@property(nonatomic) double touchIDAuthenticationAllowableReuseDuration;
@property(retain, nonatomic) NSNumber *touchIDAuthenticationRetryLimit;
@property(copy, nonatomic) NSString *localizedCancelTitle;
@property(copy, nonatomic) NSString *localizedFallbackTitle;
- (void)_setServerPropertyForOption:(long long)arg1 value:(id)arg2 log:(long long)arg3;	// IMP=0x00000000000101c4
- (void)_setServerPropertyForOption:(long long)arg1 value:(id)arg2;	// IMP=0x00000000000101ac
- (id)_serverPropertyValueForOption:(long long)arg1 log:(long long)arg2;	// IMP=0x000000000000ff9d
- (id)_serverPropertyValueForOption:(long long)arg1;	// IMP=0x000000000000ff86
- (_Bool)checkContextValidWithError:(id *)arg1;	// IMP=0x000000000000ff10
- (void)setShowingCoachingHint:(_Bool)arg1 event:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000fc25
- (void)authMethodWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000f936
- (void)resetWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000f6bb
- (void)prearmTouchIDWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000f409
- (void)optionsForInternalOperation:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000f0db
- (void)setOptions:(id)arg1 forInternalOperation:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000ed7b
- (_Bool)isCredentialSet:(long long)arg1;	// IMP=0x000000000000ea2c
- (id)credentialOfType:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000000e77c
- (void)credentialOfType:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000e44e
- (void)_setCredential:(id)arg1 type:(long long)arg2 log:(long long)arg3 cid:(unsigned int)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000000000e10b
- (void)setCredential:(id)arg1 type:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000e078
- (_Bool)_setCredential:(id)arg1 type:(long long)arg2 log:(long long)arg3 cid:(unsigned int)arg4 error:(id *)arg5;	// IMP=0x000000000000dbec
- (_Bool)setCredential:(id)arg1 type:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000000db6d
- (_Bool)setCredential:(id)arg1 type:(long long)arg2;	// IMP=0x000000000000daf4
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 error:(id *)arg4;	// IMP=0x000000000000d8c6
- (id)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 options:(id)arg3 error:(id *)arg4;	// IMP=0x000000000000d665
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 localizedReason:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000000000d417
- (void)_evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(id)arg2 options:(id)arg3 log:(long long)arg4 cid:(unsigned int)arg5 synchronous:(_Bool)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x000000000000d027
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 aksOperation:(void *)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000000000cf7c
- (void)evaluateAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000000000ceae
- (void)setCredential:(id)arg1 forProcessedEvent:(long long)arg2 credentialType:(long long)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000000000caea
- (void)pauseProcessedEvent:(long long)arg1 pause:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000c81b
- (void)resetProcessedEvent:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c569
- (void)retryProcessedEvent:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c2b7
- (void)failProcessedEvent:(long long)arg1 failureError:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000bfad
- (_Bool)canEvaluatePolicy:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000000bcbb
- (id)evaluationMechanismsForAccessControl:(struct __SecAccessControl *)arg1 operation:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000000ba6c
- (id)evaluationMechanismsForPolicy:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000000b829
- (id)_evaluationMechanismsFromReturnedError:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000b71a
- (void)evaluatePolicy:(long long)arg1 localizedReason:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000b51d
- (id)_publicErrorFromInternalError:(id)arg1 options:(id)arg2;	// IMP=0x000000000000b2e0
- (id)_evaluatePolicy:(long long)arg1 options:(id)arg2 log:(long long)arg3 cid:(unsigned int)arg4 error:(id *)arg5;	// IMP=0x000000000000b0d9
- (id)evaluatePolicy:(long long)arg1 options:(id)arg2 error:(id *)arg3;	// IMP=0x000000000000b03c
- (id)_hashWithBundleIdentifier:(id)arg1;	// IMP=0x000000000000aeeb
- (void)_evaluatePolicy:(long long)arg1 options:(id)arg2 log:(long long)arg3 cid:(unsigned int)arg4 synchronous:(_Bool)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000000000aa45
- (void)evaluatePolicy:(long long)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000000000a9a4
- (void)invalidate;	// IMP=0x000000000000a749
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000000a22a
- (unsigned long long)hash;	// IMP=0x000000000000a1da
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000a104
- (id)description;	// IMP=0x000000000000a018
- (void)dealloc;	// IMP=0x0000000000009f4f
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000009ca4
- (id)initWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2;	// IMP=0x0000000000009c3c
- (id)initWithUIDelegate:(id)arg1;	// IMP=0x0000000000009c25
- (id)initWithExternalizedContext:(id)arg1 userSession:(unsigned int *)arg2;	// IMP=0x000000000000999e
- (id)initWithExternalizedContext:(id)arg1;	// IMP=0x000000000000998a
- (id)init;	// IMP=0x0000000000009976

@end

