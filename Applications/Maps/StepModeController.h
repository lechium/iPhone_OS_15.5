//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IOSBasedChromeViewController, MKMapCamera, MKMapItem, NSString, NavigationPowerLogger, Route, StatusBarBackgroundViewStyle, StepContainerViewController, UIView;
@protocol MapSelectionManagerDelegate, StatusBarSupplementaryView, StepActionCoordination;

__attribute__((visibility("hidden")))
@interface StepModeController : NSObject
{
    long long _previousHeadingIndicatorStyle;	// 8 = 0x8
    _Bool _previousEnabledStatus;	// 16 = 0x10
    NavigationPowerLogger *_powerLogger;	// 24 = 0x18
    _Bool _initializedWithUserTrackingMode;	// 32 = 0x20
    Route *_route;	// 40 = 0x28
    IOSBasedChromeViewController *_chromeViewController;	// 48 = 0x30
    StepContainerViewController *_containerViewController;	// 56 = 0x38
    long long _desiredTrackingMode;	// 64 = 0x40
    MKMapCamera *_desiredInitialCamera;	// 72 = 0x48
    unsigned long long _initialStepIndex;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x0020000000a2f94d
@property(nonatomic) unsigned long long initialStepIndex; // @synthesize initialStepIndex=_initialStepIndex;
@property(retain, nonatomic) MKMapCamera *desiredInitialCamera; // @synthesize desiredInitialCamera=_desiredInitialCamera;
@property(nonatomic) _Bool initializedWithUserTrackingMode; // @synthesize initializedWithUserTrackingMode=_initializedWithUserTrackingMode;
@property(nonatomic) long long desiredTrackingMode; // @synthesize desiredTrackingMode=_desiredTrackingMode;
@property(retain, nonatomic) StepContainerViewController *containerViewController; // @synthesize containerViewController=_containerViewController;
@property(nonatomic) __weak IOSBasedChromeViewController *chromeViewController; // @synthesize chromeViewController=_chromeViewController;
@property(retain, nonatomic) Route *route; // @synthesize route=_route;
- (_Bool)permitsMuninShowing;	// IMP=0x0010000000a2f8bf
- (_Bool)wantsMuninShowing;	// IMP=0x0010000000a2f8b7
- (_Bool)permitsWeatherShowing;	// IMP=0x0010000000a2f8af
- (_Bool)wantsWeatherShowing;	// IMP=0x0010000000a2f8a7
@property(readonly, nonatomic) UIView<StatusBarSupplementaryView> *statusBarSupplementaryView;
@property(readonly, nonatomic) StatusBarBackgroundViewStyle *statusBarBackgroundViewStyle;
- (long long)preferredStatusBarStyle;	// IMP=0x0010000000a2f7c3
- (_Bool)prefersStatusBarHidden;	// IMP=0x0010000000a2f77f
- (_Bool)wantsStatusBarControl;	// IMP=0x0010000000a2f777
@property(readonly, nonatomic) _Bool shouldResetStateAfterResigning;
- (void)didEndDisplayingInLockScreen;	// IMP=0x0010000000a2f73a
- (void)willBeginDisplayingInSecureLockScreen;	// IMP=0x0010000000a2f6fd
- (_Bool)supportsLockscreen;	// IMP=0x0010000000a2f6b1
- (void)_locationManagerApprovalDidChange:(id)arg1;	// IMP=0x0010000000a2f5a6
- (void)getCurrentSceneTitleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000a2f368
- (void)resignTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000a2f075
- (void)becomeTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000a2eab1
- (id)personalizedItemSources;	// IMP=0x0010000000a2e985
- (id)fullscreenViewController;	// IMP=0x0010000000a2e973
- (_Bool)showsMapView;	// IMP=0x0010000000a2e96b
- (id)mapViewDelegate;	// IMP=0x0010000000a2e95d
- (id)transitionControllerForPopToMode:(id)arg1;	// IMP=0x0010000000a2e944
- (id)transitionControllerForPushFromMode:(id)arg1;	// IMP=0x0010000000a2e92b
- (_Bool)usesDefaultTransitions;	// IMP=0x0010000000a2e923
@property(readonly, nonatomic) id <StepActionCoordination> actionCoordinator;
- (void)updateWithDisplayedStep:(id)arg1;	// IMP=0x0010000000a2e748
- (id)initWithRoute:(id)arg1 initialStepIndex:(unsigned long long)arg2 desiredUserTrackingMode:(id)arg3;	// IMP=0x0010000000a2e5f3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) MKMapItem *mapItemForMuninButton;
@property(readonly, nonatomic) id <MapSelectionManagerDelegate> mapSelectionManagerDelegate;
@property(readonly) Class superclass;

@end

