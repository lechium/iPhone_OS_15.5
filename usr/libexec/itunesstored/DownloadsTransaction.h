//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface DownloadsTransaction
{
}

+ (double)orderKeyIncrement;	// IMP=0x0040000000004560
+ (unsigned int)orderingBucketSize;	// IMP=0x0010000000004555
- (void)_setPolicy:(id)arg1 forDownloadWithID:(long long)arg2;	// IMP=0x0040000000009712
- (_Bool)_resetDownload:(id)arg1 withValues:(const id *)arg2 isUserIntiated:(_Bool)arg3;	// IMP=0x001000000000915a
- (double)_orderKeyAdjacentToOrderKey:(double)arg1 comparisonType:(long long)arg2;	// IMP=0x0010000000008e53
- (id)_newTransactionForDownload:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000008d0a
- (_Bool)_moveDownloadWithID:(long long)arg1 relativeToDownloadWithID:(long long)arg2 comparisonType:(long long)arg3;	// IMP=0x0010000000008b61
- (id)_copyEffectiveBundleIDForDownload:(id)arg1;	// IMP=0x0010000000008a89
- (id)_addEffectiveClientWithBundleID:(id)arg1 database:(id)arg2;	// IMP=0x00100000000087e3
- (void)setValue:(id)arg1 forExternalProperty:(id)arg2 ofDownloadID:(long long)arg3;	// IMP=0x0010000000008754
- (_Bool)updateDownloadEntityWithIdentifier:(long long)arg1 withDownload:(id)arg2;	// IMP=0x0010000000008525
- (_Bool)unblockDownloadsWithClientIdentifiers:(id)arg1;	// IMP=0x0010000000008234
- (_Bool)retryDownloadsWithIdentifiers:(id)arg1;	// IMP=0x001000000000804f
- (_Bool)retryDownloadWithIdentifier:(long long)arg1;	// IMP=0x0010000000007fd5
- (_Bool)restartDownloadsWithIdentifiers:(id)arg1;	// IMP=0x0010000000007d34
- (_Bool)resetDownloadsWithIdentifiers:(id)arg1 isUserInitiated:(_Bool)arg2;	// IMP=0x0010000000007a37
- (_Bool)resetDownloadsWithIdentifiers:(id)arg1;	// IMP=0x0010000000007a20
- (_Bool)resetDownloadsMatchingPredicate:(id)arg1 isUserInitiated:(_Bool)arg2;	// IMP=0x00100000000076d0
- (_Bool)resetDownloadsMatchingPredicate:(id)arg1;	// IMP=0x00100000000076b9
- (void)reconcileSoftwareDownloads:(id)arg1 fromITunesStore:(_Bool)arg2;	// IMP=0x0010000000006fd4
- (_Bool)prioritizeDownloadsWithKind:(id)arg1 clientID:(id)arg2;	// IMP=0x001000000000690d
- (_Bool)prioritizeDownloadWithID:(long long)arg1 aboveDownloadWithID:(long long)arg2 error:(id *)arg3;	// IMP=0x001000000000662a
- (_Bool)pauseDownloadsWithIdentifiers:(id)arg1;	// IMP=0x001000000000628b
- (_Bool)moveDownloadWithID:(long long)arg1 beforeDownloadWithID:(long long)arg2;	// IMP=0x0010000000006273
- (_Bool)moveDownloadWithID:(long long)arg1 afterDownloadWithID:(long long)arg2;	// IMP=0x001000000000625b
- (id)insertDownloads:(id)arg1 beforeDownloadWithID:(long long)arg2;	// IMP=0x00100000000060de
- (id)insertDownloads:(id)arg1 afterDownloadWithID:(long long)arg2;	// IMP=0x0010000000005f66
- (id)importDownloads:(id)arg1 initialOrderKey:(double)arg2 orderKeyIncrement:(double)arg3;	// IMP=0x0010000000004f74
- (_Bool)finishDownloadsWithIdentifiers:(id)arg1 finalPhase:(id)arg2;	// IMP=0x0010000000004dbb
- (_Bool)finishDownloadWithID:(long long)arg1 finalPhase:(id)arg2 updatePipeline:(_Bool)arg3;	// IMP=0x0010000000004af9
- (_Bool)finishDownloadWithID:(long long)arg1 finalPhase:(id)arg2;	// IMP=0x0010000000004ae1
- (_Bool)deletePersistentDownloadManagerWithID:(long long)arg1;	// IMP=0x0010000000004773
- (_Bool)deletePersistentDownloadManagerWithClientID:(id)arg1 persistenceID:(id)arg2;	// IMP=0x0010000000004678
- (id)changeset;	// IMP=0x0010000000004650
- (id)addDownloads:(id)arg1;	// IMP=0x001000000000456e

@end

