//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class NSMutableArray, NSString, PDAccountManager, PDAppletSubcredentialManager, PDAssertionManager, PDCardFileManager, PDDatabaseManager, PDDefaultPassManager, PDDeviceRegistrationServiceCoordinator, PDExpressPassManager, PDExpressTransitUpgradeController, PDISO18013Manager, PDPaymentWebServiceCoordinator, PDPushProvisioningManager, PDRelevantPassProvider, PDRemoteInterfacePresenter, PDSpotlightIndexer, PDUserNotificationManager, PDWebServicesCoordinator, PKEntitlementWhitelist, PKIDSManager, PKSecureElement, PKUsageNotificationServer;
@protocol PDPassLibraryDelegate;

@interface PDPassLibrary : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    struct os_unfair_lock_s _lock;	// 16 = 0x10
    NSMutableArray *_userNotifications;	// 24 = 0x18
    PKSecureElement *_secureElement;	// 32 = 0x20
    PDPaymentWebServiceCoordinator *_paymentWebServicesCoordinator;	// 40 = 0x28
    PDWebServicesCoordinator *_webServicesCoordinator;	// 48 = 0x30
    PDCardFileManager *_cardFileManager;	// 56 = 0x38
    PDDatabaseManager *_databaseManager;	// 64 = 0x40
    PDExpressPassManager *_expressPassManager;	// 72 = 0x48
    PDUserNotificationManager *_userNotificationManager;	// 80 = 0x50
    PDRelevantPassProvider *_relevantPassProvider;	// 88 = 0x58
    PKUsageNotificationServer *_usageNotificationServer;	// 96 = 0x60
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 104 = 0x68
    PKIDSManager *_idsManager;	// 112 = 0x70
    PDSpotlightIndexer *_spotlightIndexer;	// 120 = 0x78
    PDExpressTransitUpgradeController *_expressUpgradeController;	// 128 = 0x80
    PDAccountManager *_accountManager;	// 136 = 0x88
    PDAppletSubcredentialManager *_subcredentialManager;	// 144 = 0x90
    PDPushProvisioningManager *_pushProvisioningManager;	// 152 = 0x98
    PDDefaultPassManager *_defaultPassManager;	// 160 = 0xa0
    PDAssertionManager *_assertionManager;	// 168 = 0xa8
    PDISO18013Manager *_isoManager;	// 176 = 0xb0
    PDDeviceRegistrationServiceCoordinator *_deviceRegistrationServiceCoordinator;	// 184 = 0xb8
    id <PDPassLibraryDelegate> _delegate;	// 192 = 0xc0
}

- (void).cxx_destruct;	// IMP=0x00200000000566d0
@property(nonatomic) __weak id <PDPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PDDeviceRegistrationServiceCoordinator *deviceRegistrationServiceCoordinator; // @synthesize deviceRegistrationServiceCoordinator=_deviceRegistrationServiceCoordinator;
@property(retain, nonatomic) PDISO18013Manager *isoManager; // @synthesize isoManager=_isoManager;
@property(retain, nonatomic) PDAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDExpressTransitUpgradeController *expressUpgradeController; // @synthesize expressUpgradeController=_expressUpgradeController;
@property(retain, nonatomic) PDSpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain, nonatomic) PKIDSManager *idsManager; // @synthesize idsManager=_idsManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PKUsageNotificationServer *usageNotificationServer; // @synthesize usageNotificationServer=_usageNotificationServer;
@property(retain, nonatomic) PDRelevantPassProvider *relevantPassProvider; // @synthesize relevantPassProvider=_relevantPassProvider;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDWebServicesCoordinator *webServicesCoordinator; // @synthesize webServicesCoordinator=_webServicesCoordinator;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServicesCoordinator; // @synthesize paymentWebServicesCoordinator=_paymentWebServicesCoordinator;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
- (void)spotlightStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000056257
- (void)spotlightResetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000056039
- (void)spotlightReindexContentWithIdentifiers:(id)arg1 acknowledgement:(CDUnknownBlockType)arg2;	// IMP=0x0010000000055ec7
- (void)spotlightReindexAllContentWithAcknowledgement:(CDUnknownBlockType)arg1;	// IMP=0x0010000000055d84
- (void)forceImmediateRevocationCheck;	// IMP=0x0010000000055caf
- (void)removeAllScheduledActivities;	// IMP=0x0010000000055a97
- (void)pendingUserNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000005598d
- (void)issueWalletUserNotificationWithTitle:(id)arg1 message:(id)arg2 forPassUniqueIdentifier:(id)arg3 customActionRoute:(id)arg4;	// IMP=0x00100000000557d6
- (void)shuffleGroups:(int)arg1;	// IMP=0x00100000000556ee
- (void)noteAppleAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005519e
- (void)introduceDatabaseIntegrityProblem;	// IMP=0x00100000000550d3
- (void)getDiffForPassUpdateUserNotificationWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000054f85
- (_Bool)_writePass:(id)arg1 withSettings:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0010000000054ee1
- (_Bool)_writePass:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000054ebc
- (unsigned long long)_addPassesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x0010000000054aef
- (void)_addPasses:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005499d
- (void)_getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000548a9
- (_Bool)_entitledForPassTypeID:(id)arg1 teamID:(id)arg2 associatedPassTypeIdentifiers:(id)arg3 associatedApplicationIdentifiers:(id)arg4 forActions:(unsigned long long)arg5;	// IMP=0x00100000000543dc
- (_Bool)_entitledForPassType:(unsigned long long)arg1 uniqueIdentifier:(id)arg2 actions:(unsigned long long)arg3;	// IMP=0x0010000000054269
- (_Bool)_entitledForUniqueID:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x001000000005424a
- (_Bool)_entitledForObject:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x00100000000540da
- (id)_entitlementFilteredPasses:(id)arg1;	// IMP=0x0010000000053fc3
- (void)_sanitizePasses:(id)arg1;	// IMP=0x0010000000053e91
- (id)_sanitizePassIfNeeded:(id)arg1;	// IMP=0x0010000000053e1d
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x0010000000053d88
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x0010000000053cfa
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;	// IMP=0x0010000000053c6c
- (void)contactlessInterfaceDidPresentFromSource:(long long)arg1;	// IMP=0x0010000000053bde
- (void)supportsSearchForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005392d
- (void)invalidateVehicleConnectionSessionIdentifier:(id)arg1;	// IMP=0x0010000000053838
- (void)sendRKEPassThroughMessage:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000053663
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000053545
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005338e
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000530a1
- (void)supportsDisbursements:(CDUnknownBlockType)arg1;	// IMP=0x0010000000052e5e
- (void)usingSynchronousProxy:(_Bool)arg1 fetchAppletSubCredentialForPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000524ea
- (void)usingSynchronousProxy:(_Bool)arg1 generateTransactionKeyWithReaderIdentifier:(id)arg2 readerPublicKey:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000052073
- (void)canAddHomeKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005180c
- (void)canAddCarKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000051662
- (void)canShareShareableSecureElementPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005151e
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000050fd1
- (void)setBackupMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000050b65
- (void)backupMetadataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000507d8
- (void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000505a5
- (void)usingSynchronousProxy:(_Bool)arg1 addISO18013Blobs:(id)arg2 cardType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000503cb
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x00100000000501ab
- (void)usingSynchronousProxy:(_Bool)arg1 generateISOEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000004ffe8
- (void)usingSynchronousProxy:(_Bool)arg1 generateSEEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000004fe27
- (void)usingSynchronousProxy:(_Bool)arg1 signWithFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 challenge:(id)arg5 publicKeyIdentifier:(id)arg6 externalizedAuth:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x001000000004fa98
- (void)usingSynchronousProxy:(_Bool)arg1 checkFidoKeyPresenceForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000004f896
- (void)usingSynchronousProxy:(_Bool)arg1 createFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 challenge:(id)arg4 externalizedAuth:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000004f620
- (void)signData:(id)arg1 forPassUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000004ee3a
- (void)migrateDataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000004ed24
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;	// IMP=0x001000000004ebe1
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;	// IMP=0x001000000004ea93
- (void)recomputeRelevantPassesWithSearchMode:(long long)arg1;	// IMP=0x001000000004e9d7
- (void)personalizePassWithUniqueIdentifier:(id)arg1 contact:(id)arg2 personalizationToken:(id)arg3 requiredPersonalizationFields:(unsigned long long)arg4 personalizationSource:(unsigned long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000004e809
- (void)updateObjectWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e6c7
- (void)resetApplePayWithDiagnosticReason:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e550
- (void)removePassesOfType:(unsigned long long)arg1 withDiagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004e400
- (void)recoverPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e267
- (void)removePassesWithUniqueIDs:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004df0f
- (void)removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000000004dd39
- (void)usingSynchronousProxy:(_Bool)arg1 enableExpressForPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004d8f0
- (void)usingSynchronousProxy:(_Bool)arg1 containsPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000004d715
- (void)usingSynchronousProxy:(_Bool)arg1 replaceUnsignedPassWithDataFileDescriptor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004d37f
- (void)usingSynchronousProxy:(_Bool)arg1 availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004cb21
- (void)usingSynchronousProxy:(_Bool)arg1 provisionHomeKeyPassForSerialNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004b5b2
- (void)usingSynchronousProxy:(_Bool)arg1 addUnsignedPassesWithDataFileDescriptors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004ac20
- (void)_usingSynchronousProxy:(_Bool)arg1 addPassesWithEnumerator:(CDUnknownBlockType)arg2 estimatedNumberOfPasses:(unsigned long long)arg3 osTransaction:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004a597
- (void)usingSynchronousProxy:(_Bool)arg1 addPassesContainer:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004a2ac
- (void)addPassesWithData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000049e3c
- (void)noteObjectSharedWithUniqueID:(id)arg1;	// IMP=0x0010000000049cfe
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)arg1;	// IMP=0x0010000000049bb0
- (void)setSortingState:(long long)arg1 forObjectWithUniqueID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000049a1a
- (void)updateSettings:(unsigned long long)arg1 forObjectWithUniqueID:(id)arg2;	// IMP=0x00100000000498ed
- (void)usingSynchronousProxy:(_Bool)arg1 getImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 suffix:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000049702
- (void)getImageSetForUniqueID:(id)arg1 ofType:(long long)arg2 displayProfile:(id)arg3 suffix:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000495d0
- (void)usingSynchronousProxy:(_Bool)arg1 getCachedImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 displayTraits:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x00100000000493e5
- (void)usingSynchronousProxy:(_Bool)arg1 getContentForUniqueID:(id)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000049274
- (void)getContentForUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004925a
- (void)_queue_replacePass:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000049111
- (void)replacePassWithPassData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000048fe7
- (void)getManifestHashAndSettingsForPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000048cf7
- (void)getRouteRelevantPassesForLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000047fa5
- (void)getPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000047ed9
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(id)arg2 uniqueID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000047d80
- (void)getDataForBundleResources:(id)arg1 objectUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000047c52
- (void)getDataForBundleResourceNamed:(id)arg1 withExtension:(id)arg2 objectUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000047b14
- (void)getArchivedObjectWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000047a05
- (void)isPassbookVisibleWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000479a9
- (void)hasSecureElementPassesOfType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000047931
- (void)isRemovingPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000478b6
- (void)passWithDPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000477a8
- (void)passWithFPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000476cc
- (void)postUpgradedPassNotificationForMarket:(id)arg1 passUniqueID:(id)arg2;	// IMP=0x001000000004741a
- (void)checkForTransitNotification;	// IMP=0x001000000004732b
- (void)_getServiceProviderDataForPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000471c5
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000046e5d
- (void)_transitTopUpMessage:(id)arg1 passes:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000465a7
- (void)_transitDCIMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000045270
- (void)transitMessageForRouteInfo:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000044d03
- (void)supportedTransitPartnersForDigitalIssuance:(CDUnknownBlockType)arg1;	// IMP=0x0010000000044382
- (void)sortedTransitPassesForAppletDataFormat:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000439ff
- (void)expressTransitPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000043795
- (void)peerPaymentPassUniqueIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000436a9
- (void)defaultPaymentPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000434d9
- (void)countPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000043387
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004315b
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000430f8
- (id)_filteredPasses:(id)arg1 forApplicationIdentifier:(id)arg2;	// IMP=0x0010000000042f9d
- (id)_filteredPasses:(id)arg1 forWebDomain:(id)arg2;	// IMP=0x0010000000042e42
- (void)enabledValueAddedServicePassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000042cae
- (void)usingSynchronousProxy:(_Bool)arg1 getManifestHashForPassWithUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000429d7
- (void)getMetadataForFieldWithProperties:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000042812
- (void)getPassesWithUniqueIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004259d
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000423d8
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000042213
- (void)inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000042055
- (void)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000041eae
- (id)_inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000041cd8
- (id)_inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000041a0b
- (void)_paymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 webPayment:(_Bool)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 withHandler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000041437
- (void)_passesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000041205
- (_Bool)_hasPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 paymentApplicationStates:(id)arg3;	// IMP=0x001000000004110b
- (void)_hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 isMultiTokensRequest:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000040e28
- (void)hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 isMultiTokensRequest:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000040df7
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000040aff
- (void)inAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 isMultiTokensRequest:(_Bool)arg4 withHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000004087a
- (void)getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000040784
- (void)notifyPassUsedWithIdentifier:(id)arg1 fromSource:(long long)arg2;	// IMP=0x0010000000040702
- (void)sendUserEditedCatalog:(id)arg1;	// IMP=0x00100000000405d5
- (void)usingSynchronousProxy:(_Bool)arg1 getPaymentPassesPendingActivationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000040385
- (void)usingSynchronousProxy:(_Bool)arg1 getGroupsControllerSnapshotWithOptions:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004000d
- (void)getGroupsControllerSnapshotWithOptions:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000003fff3
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesAndCatalogOfPassTypes:(unsigned long long)arg2 limitResults:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000003fd32
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000003fd15
- (void)isPaymentPassActivationAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000003fcd5
- (void)canPresentPaymentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003f1dd
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)arg1 fromSource:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000003f001
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ef9e
- (void)openDigitalIssuanceUIForIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ef18
- (void)paymentPassWithAssociatedAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ec79
- (void)presentPaymentSetupRequest:(id)arg1 orientation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000003eae4
- (void)paymentSetupFeaturesForConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003e4b0
- (_Bool)_isConfigurationValid:(id)arg1;	// IMP=0x001000000003e358
- (void)openPaymentUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000003e075
- (void)openWalletUIWithRelevantPass:(id)arg1;	// IMP=0x001000000003de9d
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPassWithUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000003ddb1
- (void)canAddFelicaPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000003dd6e
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000003db47
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesOfStyles:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000003d94c
- (void)getPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000003d885
- (void)getPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000003d7c4
- (void)sendCatalogChanged:(id)arg1;	// IMP=0x001000000003d742
- (void)sendPassRecovered:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000003d5a5
- (void)sendPassRemoved:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000003d481
- (void)sendPassUpdated:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000003d2e4
- (void)sendPassAdded:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000003d147
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000003d109
- (id)remoteObjectProxy;	// IMP=0x001000000003d0cb
- (void)clearConnectionReference;	// IMP=0x001000000003cf0c
@property(readonly, nonatomic) _Bool willSanitizePasses;
- (void)dealloc;	// IMP=0x001000000003cda9
- (id)initWithConnection:(id)arg1;	// IMP=0x001000000003cd0c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

