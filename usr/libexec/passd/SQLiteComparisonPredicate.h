//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface SQLiteComparisonPredicate
{
    long long _comparisonType;	// 16 = 0x10
    id _value;	// 24 = 0x18
    _Bool _forceFalse;	// 32 = 0x20
}

+ (id)predicateWithProperty:(id)arg1 value:(id)arg2 comparisonType:(long long)arg3;	// IMP=0x002000000006fd3e
+ (id)predicateWithProperty:(id)arg1 bitwiseNotAndValue:(id)arg2;	// IMP=0x001000000006fd26
+ (id)predicateWithProperty:(id)arg1 bitwiseAndValue:(id)arg2;	// IMP=0x001000000006fd0e
+ (id)predicateWithProperty:(id)arg1 lessThanValue:(id)arg2;	// IMP=0x001000000006fcf6
+ (id)predicateWithProperty:(id)arg1 greaterThanValue:(id)arg2;	// IMP=0x001000000006fcde
+ (id)predicateWithProperty:(id)arg1 lessThanOrEqualToValue:(id)arg2;	// IMP=0x001000000006fcc6
+ (id)predicateWithProperty:(id)arg1 greaterThanOrEqualToValue:(id)arg2;	// IMP=0x001000000006fcae
+ (id)predicateWithProperty:(id)arg1 notEqualToValue:(id)arg2;	// IMP=0x001000000006fc96
+ (id)predicateWithProperty:(id)arg1 equalToValue:(id)arg2;	// IMP=0x001000000006fc7e
- (void).cxx_destruct;	// IMP=0x002000000007043e
@property(readonly, nonatomic) _Bool forceFalse; // @synthesize forceFalse=_forceFalse;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) long long comparisonType; // @synthesize comparisonType=_comparisonType;
- (id)_comparisonTypeFormat;	// IMP=0x0010000000070376
- (id)SQLForEntityClass:(Class)arg1;	// IMP=0x00100000000702a1
- (_Bool)isEqual:(id)arg1;	// IMP=0x001000000007012f
- (unsigned long long)hash;	// IMP=0x00100000000700a2
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;	// IMP=0x001000000006fea2
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x001000000006fe97

@end

