//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable, NSSet, NSString, PDAssertionManager, PDCardFileManager, PDDatabaseManager, PDPaymentWebServiceCoordinator, PDRemoteInterfacePresenter, PDVehicleConnectionSession, PKBluetoothMonitorer, PKDAManager, PKFieldDetector, PKSecureElement;
@protocol OS_dispatch_queue;

@interface PDAppletSubcredentialManager : NSObject
{
    PKDAManager *_daManager;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    PKBluetoothMonitorer *_bluetoothMonitorer;	// 24 = 0x18
    PDVehicleConnectionSession *_activeVehicleConnectionSession;	// 32 = 0x20
    NSHashTable *_observers;	// 40 = 0x28
    struct os_unfair_lock_s _observersLock;	// 48 = 0x30
    PDDatabaseManager *_databaseManager;	// 56 = 0x38
    PDCardFileManager *_cardFileManager;	// 64 = 0x40
    PDAssertionManager *_assertionManager;	// 72 = 0x48
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 80 = 0x50
    PDPaymentWebServiceCoordinator *_webServiceCoordinator;	// 88 = 0x58
    PKSecureElement *_secureElement;	// 96 = 0x60
    PKFieldDetector *_fieldDetector;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x0020000000130f50
@property(retain, nonatomic) PKFieldDetector *fieldDetector; // @synthesize fieldDetector=_fieldDetector;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *webServiceCoordinator; // @synthesize webServiceCoordinator=_webServiceCoordinator;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PDAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
- (void)assertionManager:(id)arg1 didInvalidateAssertion:(id)arg2;	// IMP=0x0010000000130e44
- (_Bool)allowAcquisitionOfAssertionOfType:(unsigned long long)arg1;	// IMP=0x0010000000130e2e
- (_Bool)interestedInAssertionOfType:(unsigned long long)arg1;	// IMP=0x0010000000130e21
- (void)_setRangingSuspensionReason:(unsigned long long)arg1 forCredential:(id)arg2 forPaymentApplication:(id)arg3;	// IMP=0x0010000000130b70
- (void)rangingDidEndWithReasons:(unsigned long long)arg1 forAppletIdentifier:(id)arg2 keyIdentifier:(id)arg3;	// IMP=0x00100000001309bc
- (void)rangingDidResumeForAppletIdentifier:(id)arg1 keyIdentifier:(id)arg2;	// IMP=0x001000000013081a
- (void)bluetoothMonitorerRecievedUpdatedBluetoothState:(long long)arg1;	// IMP=0x00100000001307ef
- (void)fieldDetectorDidEnterField:(id)arg1 withProperties:(id)arg2;	// IMP=0x001000000013078b
- (void)_updateSubcredentialsForBTEnabled:(_Bool)arg1;	// IMP=0x0010000000130342
- (void)updateSubcredentialsForBluetoothPowerChange;	// IMP=0x0010000000130307
- (void)paymentWebServiceCoordinator:(id)arg1 didRegisterCredentialWithIdentifier:(id)arg2 response:(id)arg3 error:(id)arg4;	// IMP=0x001000000012fc6b
- (void)didUpdateCredential:(id)arg1 onPassWithIdentifier:(id)arg2;	// IMP=0x001000000012fafd
- (void)updateCredential:(id)arg1 forPaymentApplication:(id)arg2 rangingSuspensionReasons:(unsigned long long)arg3;	// IMP=0x001000000012fadf
- (void)_removeBackgroundRegistrationRequestForCredentials:(id)arg1 withPaymentWebService:(id)arg2;	// IMP=0x001000000012f67e
- (void)_trackCredential:(id)arg1 withRegistrationData:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000012f41b
- (void)createRegistrationRequestForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012ecf0
- (void)updateFieldDetectionState;	// IMP=0x001000000012eb4b
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x001000000012ea2d
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x001000000012e93f
- (void)unregisterObserver:(id)arg1;	// IMP=0x001000000012e8e5
- (void)registerObserver:(id)arg1;	// IMP=0x001000000012e88b
- (void)sendRKEPassThroughData:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000012e6d9
- (void)invalidateVehicleConnectionSessionForIdentifier:(id)arg1;	// IMP=0x001000000012e62b
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012e454
- (void)signData:(id)arg1 auth:(id)arg2 bundleIdentifier:(id)arg3 nonce:(id)arg4 credential:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000012e43e
- (_Bool)handleSharingInvitationRequest:(id)arg1;	// IMP=0x001000000012d917
- (void)declineRelatedSharingInvitationsIfNecessary:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012cf1a
- (_Bool)didUpdateSharingInvitationWithIdentifier:(id)arg1 reason:(long long)arg2;	// IMP=0x001000000012ce1b
- (_Bool)removeSharingInvitationWithIdentifier:(id)arg1;	// IMP=0x001000000012cd2a
- (_Bool)didReceiveSharingInvitationWithIdentifier:(id)arg1 fromOriginatorIDSHandle:(id)arg2 sharingSessionIdentifier:(id)arg3 metadata:(id)arg4;	// IMP=0x001000000012cb5e
@property(readonly, nonatomic) NSSet *invitations;
- (void)trackSharedCredential:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012c60d
- (_Bool)addSubcredential:(id)arg1 fromSharingInvitationWithIdentifier:(id)arg2;	// IMP=0x001000000012c4e8
- (_Bool)createdSharedSubcredentialWithIdentifier:(id)arg1 fromSharingInvitationReceiptWithIdentifier:(id)arg2;	// IMP=0x001000000012c0b9
- (_Bool)removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2;	// IMP=0x001000000012bcad
- (_Bool)sharingInvitationReceiptWasInvalidated:(id)arg1 withCredentialIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x001000000012ba8b
- (_Bool)addSharingInvitationReceipts:(id)arg1 onCredentialWithIdentifier:(id)arg2;	// IMP=0x001000000012b690
- (void)restoreSubcredentialsInDatabase:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012b0c5
- (void)passWillBeRemoved:(id)arg1;	// IMP=0x001000000012ae0d
- (void)requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1;	// IMP=0x001000000012acf2
- (void)requestRegistrationForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000129f1d
- (void)credentialsOnDeviceWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000129ed2
- (void)canAcceptInvitation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012967e
- (void)requestNativePairingWithSupportedTerminal:(id)arg1;	// IMP=0x00100000001295eb
- (void)nativelyPairToTerminalWithFieldPropertiesIfPossible:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001291ad
- (_Bool)canAttemptNativePairingWithTerminal:(id)arg1;	// IMP=0x00100000001290a3
- (void)initiateNativePairingIfPossibleFromTCIs:(id)arg1;	// IMP=0x0010000000128f36
- (void)supportedTerminalForTCIs:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001289da
- (void)probeTerminalForPairingStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000128931
- (void)revokeSubcredentialForIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000012884b
- (void)revokeSubcredentials:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001286ae
- (void)_ingestSEBlobsForPass:(id)arg1;	// IMP=0x00100000001286a8
- (void)_ingestSharedCredentialsManifest:(id)arg1;	// IMP=0x00100000001279a5
- (void)decryptAsset:(id)arg1 onPass:(id)arg2;	// IMP=0x0010000000127199
- (void)passAddedOrUpdated:(id)arg1;	// IMP=0x0010000000126e30
- (void)handlePaymentApplicationsAddedOrUpdatedOnPass:(id)arg1;	// IMP=0x0010000000126699
- (void)updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001263de
- (id)sharedCredentialManifestForPass:(id)arg1;	// IMP=0x0010000000125fcb
- (_Bool)deviceSupportsCredentials;	// IMP=0x0010000000125e32
- (void)carAccessFeatureWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000125c61
- (void)canAddCarKeyPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000125733
- (void)dealloc;	// IMP=0x00100000001256c0
- (id)initWithDatabaseManager:(id)arg1 cardFileManager:(id)arg2 paymentWebServiceCoordinator:(id)arg3 secureElement:(id)arg4 fieldDetector:(id)arg5 assertionManager:(id)arg6 remoteInterfacePresenter:(id)arg7;	// IMP=0x0010000000125410

// Remaining properties
// Error: Property attributes should begin with the type ('T') attribute, property name: debugDescription
// Property attributes: (null)

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

