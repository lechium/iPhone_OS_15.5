//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface TileDescriptor
{
}

+ (id)_createDescriptorForPID:(long long)arg1 withProperties:(id)arg2 values:(id *)arg3 propertySetters:(id)arg4 indices:(CDStruct_69d7cc99)arg5 inDatabase:(id)arg6;	// IMP=0x0040000000322624
+ (id)_propertySettersWithProperties:(id)arg1 effectiveProperties:(id *)arg2 indices:(CDStruct_69d7cc99 *)arg3;	// IMP=0x001000000032232b
+ (id)_tileDescriptorQueryWithPredicate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000321ffc
+ (id)_predicateForPassUniqueID:(id)arg1;	// IMP=0x0010000000321fd9
+ (id)_predicateForPassPID:(unsigned long long)arg1;	// IMP=0x0010000000321f66
+ (void)deleteEntitiesForPassPID:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000321ce1
+ (id)updatePassTileDescriptorStatesInDatabase:(id)arg1 forPassUniqueID:(id)arg2 withTransform:(CDUnknownBlockType)arg3;	// IMP=0x001000000032139a
+ (id)descriptorsInDatabase:(id)arg1 forPassUniqueID:(id)arg2;	// IMP=0x0010000000320f1c
+ (id)insertDescriptor:(id)arg1 withState:(id)arg2 order:(long long)arg3 forPass:(id)arg4 inDatabase:(id)arg5;	// IMP=0x0010000000320afc
+ (void)addJoinClausesForProperty:(id)arg1 toJoins:(id)arg2;	// IMP=0x001000000032090f
+ (id)databaseTable;	// IMP=0x0010000000320902
- (id)passTileDescriptor;	// IMP=0x0040000000322126
- (id)state;	// IMP=0x0010000000321ed2
- (id)metadata;	// IMP=0x0010000000321e3e
- (_Bool)deleteFromDatabase;	// IMP=0x0010000000321d7f
- (id)initWithDescriptor:(id)arg1 metadata:(id)arg2 state:(id)arg3 order:(long long)arg4 forPass:(id)arg5 inDatabase:(id)arg6;	// IMP=0x0010000000320964

@end

