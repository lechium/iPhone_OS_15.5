//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface DiscoveryItem
{
    unsigned long long _itemOrder;	// 24 = 0x18
}

+ (id)_propertySettersForAccount;	// IMP=0x00400000001869a7
+ (id)_predicateForViewCount:(long long)arg1;	// IMP=0x0010000000186936
+ (id)_predicateForEntitledToForceLargeCard;	// IMP=0x001000000018690f
+ (id)_predicateForShouldBadge;	// IMP=0x00100000001868e8
+ (id)_predicateForCheckingRelevantDate:(id)arg1;	// IMP=0x0010000000186628
+ (id)_predicateForNonTerminalItems;	// IMP=0x00100000001864f1
+ (id)_predicateForActiveOrActionedItems;	// IMP=0x00100000001863db
+ (id)_predicateForItemIdentifier:(id)arg1;	// IMP=0x00100000001863b8
+ (void)deleteAllItemsInDatabase:(id)arg1;	// IMP=0x001000000018631e
+ (void)deleteItemsNotIncludingIdentifiers:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000186279
+ (void)deleteItemWithIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000186237
+ (id)updateItem:(id)arg1 inDatabse:(id)arg2;	// IMP=0x00100000001857fb
+ (id)insertOrUpdateItem:(id)arg1 itemOrder:(unsigned long long)arg2 inDatabase:(id)arg3;	// IMP=0x00100000001851f4
+ (id)itemWithIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000185168
+ (id)nonTerminalItemIdentifiersInDatabase:(id)arg1;	// IMP=0x0010000000184f53
+ (id)activeItemIdentifiersWithRelevantDate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000184c8f
+ (_Bool)activeItemRequiringBadgeExistsForRelevantDate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000184ae8
+ (id)activeItemsRequiringBadgingForRelevantDate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x001000000018472e
+ (id)activeItemsWithRelevantDate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000001843d6
+ (id)itemsWithRelevantDate:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000184120
+ (id)itemsInDatabase:(id)arg1;	// IMP=0x0010000000183e6b
+ (id)databaseTable;	// IMP=0x0010000000183e5e
@property(nonatomic) unsigned long long itemOrder; // @synthesize itemOrder=_itemOrder;
- (void)setItemOrder;	// IMP=0x001000000018707a
- (id)item;	// IMP=0x0010000000185d66
- (void)updateWithItem:(id)arg1;	// IMP=0x00100000001858af
- (id)initWithItem:(id)arg1 itemOrder:(unsigned long long)arg2 inDatabase:(id)arg3;	// IMP=0x00100000001852e7

@end

