//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface PaymentTransaction
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x004000000038f40b
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x001000000038f2ff
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x001000000038f1d5
+ (id)_propertySettersForMerchant;	// IMP=0x001000000038ec7b
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x001000000038cb1d
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x001000000038c61c
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x001000000038ad44
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x001000000038ad2d
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x001000000038ab47
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x001000000038aaad
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x001000000038a9d5
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x001000000038a76c
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x001000000038a432
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x001000000038a40f
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x001000000038a3ec
+ (id)_predicateForNoWorldRegion;	// IMP=0x001000000038a3cc
+ (id)_predicateForWorldRegion;	// IMP=0x001000000038a3ac
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x0010000000389b4b
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x0010000000389809
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x00100000003896c4
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x001000000038957f
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x001000000038950c
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x00100000003893c2
+ (id)_predicateForMapsMatch;	// IMP=0x00100000003892be
+ (id)_predicateForIsProcessedByTransactionProcessor;	// IMP=0x001000000038917a
+ (id)_predicateForHasCityAndCountry;	// IMP=0x0010000000389076
+ (id)_predicateForHasLocation;	// IMP=0x0010000000389056
+ (id)_predicateForHasPOIMatch;	// IMP=0x0010000000389036
+ (id)_predicateForNoMapsMatch;	// IMP=0x0010000000388f32
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x0010000000388ebf
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x0010000000388e4c
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x0010000000388dd9
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x0010000000388d66
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x0010000000388d43
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x0010000000388ad5
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x0010000000388a62
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x00100000003889ef
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x00100000003887ce
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x00100000003887ab
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x0010000000388788
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x0010000000388765
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x0010000000388742
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x001000000038871f
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x00100000003886fc
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x00100000003886d9
+ (id)_predicateForMapsBrandIdentifiers:(id)arg1;	// IMP=0x00100000003886b6
+ (id)_predicateForMapsIdentifiers:(id)arg1;	// IMP=0x0010000000388693
+ (id)_predicateForMerchantIdentifiers:(id)arg1;	// IMP=0x0010000000388670
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x001000000038864d
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x00100000003885da
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x00100000003885b7
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x0010000000388594
+ (id);	// IMP=0x0010000000388571
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x00100000003884fe
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x001000000038847d
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x00100000003882c5
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x0010000000387ff8
+ (id)_predicateForUnansweredQuestions;	// IMP=0x0010000000387e1e
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x0010000000387dab
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x0010000000387d88
+ (id)_predicateForRedemptionType:(long long)arg1;	// IMP=0x0010000000387d15
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x0010000000387bb4
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x0010000000387b91
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x0010000000387b6e
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x0010000000387b4b
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x0010000000387ac3
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x0010000000387a42
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x00100000003879c1
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x0010000000387940
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x00100000003878bf
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x001000000038783e
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x00100000003877bd
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x001000000038757c
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x0010000000387392
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x0010000000387271
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x001000000038710c
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00100000003870e9
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x0010000000387076
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x0010000000387020
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x0010000000386e01
+ (id)_predicateForTransactionArchivePID:(long long)arg1;	// IMP=0x0010000000386d8e
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x0010000000386d1b
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000386c9b
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000386c1b
+ (id)authenticationContextFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0010000000386ae0
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0010000000385c83
+ (id)merchantFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x00100000003856af
+ (unsigned long long)suppressionBehaviorForTransactionSourceIdentifier:(id)arg1 serviceIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000383017
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x00100000003802d2
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x001000000037fe9e
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x001000000037fe12
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 fromPID:(long long)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000037f706
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000037f6e0
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x001000000037f532
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x001000000037f1f2
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x001000000037f094
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x001000000037ef93
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x001000000037ecf2
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x001000000037ec81
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x001000000037eae6
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000037e95f
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x001000000037e8ec
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x001000000037e8c9
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x001000000037e70b
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x001000000037e6e4
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x001000000037e0f0
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x001000000037d9c9
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x001000000037d70b
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x001000000037d654
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x001000000037d558
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x001000000037d36f
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 withRedemptionType:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x001000000037ce89
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x001000000037ccf0
+ (id)_predicateForRequest:(id)arg1;	// IMP=0x001000000037bb12
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x001000000037ba47
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x001000000037b812
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x001000000037b77a
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x001000000037b5c8
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000037b2eb
+ (id)transactionServiceIdentifiersInDatabase:(id)arg1 withTransactionType:(long long)arg2 withPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 startDate:(id)arg7 endDate:(id)arg8;	// IMP=0x001000000037ae0b
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x001000000037aa64
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x001000000037a6bd
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 inDatabase:(id)arg4;	// IMP=0x001000000037a2ec
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 forPeerPaymentSubtype:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x001000000037a011
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0010000000379d61
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x0010000000379a3f
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x00100000003798a6
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000037970b
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000379570
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x0010000000379255
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x0010000000379043
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x0010000000378ea1
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x0010000000378e05
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00100000003789d6
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x001000000037863e
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x0010000000378466
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000037829a
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x00100000003781b3
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x001000000037801b
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x001000000037758c
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x00100000003772eb
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x00100000003770e9
+ (id)mostRecentActiveTransactionInDatabase:(id)arg1;	// IMP=0x0010000000376d9f
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2;	// IMP=0x0010000000376cef
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000003769ea
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000003769c4
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2;	// IMP=0x00100000003769af
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000003766aa
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000376684
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2;	// IMP=0x001000000037666f
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x001000000037636a
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0010000000376344
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2;	// IMP=0x001000000037632f
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x001000000037627d
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x00100000003761f1
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x0010000000376165
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x0010000000376009
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x0010000000375e76
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x0010000000375dea
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x0010000000375d5e
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0010000000375580
+ (id)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x00100000003751a8
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x001000000037511a
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x001000000037502d
+ (void)addJoinClausesForProperty:(id)arg1 toJoins:(id)arg2;	// IMP=0x0010000000374981
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x0010000000374904
+ (id)databaseTable;	// IMP=0x00100000003748f7
- (void)_createPaymentTransactionAuthentication;	// IMP=0x004000000038cab3
- (_Bool)_hasValidMerchantData;	// IMP=0x001000000038ca3b
- (id)_transactionSourceIdentifierObject;	// IMP=0x0010000000386b7d
- (id)transactionAuthenticationContext;	// IMP=0x0010000000386973
- (id)transactionAuthenticationResult;	// IMP=0x00100000003867cf
- (long long)accountType;	// IMP=0x0010000000386784
- (id)passUniqueIdentifier;	// IMP=0x00100000003866b7
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x001000000038666c
- (long long)transactionType;	// IMP=0x0010000000386621
- (id)dbPaymentTransactionArchive;	// IMP=0x00100000003865f7
- (id)transactionSourceIdentifier;	// IMP=0x00100000003865a7
- (id)transactionArchive;	// IMP=0x001000000038651d
- (id)paymentApplication;	// IMP=0x0010000000386486
- (id)accountIdentifier;	// IMP=0x001000000038646d
- (id)allRecordTypesAndNames;	// IMP=0x0010000000386405
- (id)serviceIdentifier;	// IMP=0x00100000003863ec
- (id)identifier;	// IMP=0x00100000003863d3
- (id)foreignExchangeInformation;	// IMP=0x0010000000385f29
- (id)merchant;	// IMP=0x00100000003858e5
- (id)paymentTransaction;	// IMP=0x0010000000384469
- (void)updateWithReleasedData:(id)arg1;	// IMP=0x00100000003843d0
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x001000000038432d
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x001000000038428a
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x00100000003841ee
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x0010000000383e8f
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x0010000000383b30
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x0010000000383ab1
- (void)updateWithPaymentTransactionRewards:(id)arg1;	// IMP=0x0010000000383a32
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x00100000003839b3
- (void)updateWithCommutePlanUnits:(id)arg1;	// IMP=0x0010000000383910
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x001000000038386d
- (void)updateWithMerchant:(id)arg1;	// IMP=0x0010000000383306
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x00100000003832ac
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x0010000000382fbd
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x0010000000380776
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x001000000038052e
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x00100000003801c3
- (_Bool)deleteFromDatabase;	// IMP=0x0010000000375626
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0010000000372a34

@end

