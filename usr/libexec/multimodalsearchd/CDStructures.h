//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DocResult {
    unsigned int _field1;
    double _field2;
    double _field3;
    unsigned int _field4;
};

struct Index {
    CDUnknownFunctionPointerType *_field1;
};

struct Term {
    struct vector<std::string, std::allocator<std::string>> _field1;
    struct vector<double, std::allocator<double>> _field2;
    struct vector<unsigned short, std::allocator<unsigned short>> _field3;
    struct vector<double, std::allocator<double>> _field4;
    double _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct Tokenizer {
    CDUnknownFunctionPointerType *_field1;
};

struct basic_string_view<char, std::char_traits<char>> {
    char *_field1;
    unsigned long long _field2;
};

struct vector<double, std::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<std::string, std::allocator<std::string>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *_field1;
    } _field3;
};

struct vector<unsigned short, std::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct basic_string_view<char, std::char_traits<char>> {
    char *_field1;
    unsigned long long _field2;
} basic_string_view_1993c9b6;

