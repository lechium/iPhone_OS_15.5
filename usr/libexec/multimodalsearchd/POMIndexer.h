//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSString, POMQueryProcessor, POMSpellCorrection, POMStemRewrite, POMSynonyms, POMTopKVocab, POMZoneManager;
@protocol OS_dispatch_queue, POMDocStore;

@interface POMIndexer : NSObject
{
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _indexMutex;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 72 = 0x48
    NSString *_synonymFilePath;	// 80 = 0x50
    struct Index *_textStore;	// 88 = 0x58
    POMQueryProcessor *_queryProcessor;	// 96 = 0x60
    POMZoneManager *_zoneManager;	// 104 = 0x68
    POMStemRewrite *_stemRewrite;	// 112 = 0x70
    POMSpellCorrection *_spellCorrection;	// 120 = 0x78
    POMSynonyms *_synonymModel;	// 128 = 0x80
    POMTopKVocab *_topKVocab;	// 136 = 0x88
    struct Tokenizer *tk;	// 144 = 0x90
    _Bool _shutdown;	// 152 = 0x98
    _Bool _shouldRunValidation;	// 153 = 0x99
    _Bool _validated;	// 154 = 0x9a
    CDUnknownBlockType _logStateCaptureCancellationBlock;	// 160 = 0xa0
    NSString *_path;	// 168 = 0xa8
    id <POMDocStore> _docStore;	// 176 = 0xb0
}

+ (long long)_floatCompare:(float)arg1 with:(float)arg2;	// IMP=0x0040000000033c60
+ (id)signpostLog;	// IMP=0x001000000002b7e0
+ (id)log;	// IMP=0x001000000002b6e0
- (void).cxx_destruct;	// IMP=0x0020000000038820
@property(copy, nonatomic) id <POMDocStore> docStore; // @synthesize docStore=_docStore;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
- (void)shutdown;	// IMP=0x0010000000038630
- (void)close;	// IMP=0x00100000000385d0
- (void)saltVacuumAndCompactWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000038540
- (void)fetchLastClientStateforName:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000038200
- (id)saltMetrics;	// IMP=0x00100000000380e0
- (id)docStats;	// IMP=0x00100000000375c0
- (id)loadTopKVocabFromDocStore:(id *)arg1;	// IMP=0x0010000000037550
@property(readonly) NSArray *topKVocabulary;
- (void)forceRebuildTopKVocabWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000374b0
- (id)searchOnce:(id)arg1 saltQueryTerms:(void *)arg2 error:(id *)arg3;	// IMP=0x0010000000035a30
- (_Bool)_modifyQueryTerms:(const void *)arg1 modifiedQueryTerms:(void *)arg2 searchParams:(id)arg3;	// IMP=0x0010000000035310
- (_Bool)_shouldRunQueryModification:(id)arg1 retrievalThreshold:(long long)arg2;	// IMP=0x00100000000352e0
- (id)iterateAllDocsToFindMatchingSubjects:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000034a60
- (id)search:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000034020
- (_Bool)_notSufficientRetrieval:(id)arg1 threshold:(long long)arg2;	// IMP=0x0010000000033ff0
- (id)_stringFromPMPersons:(id)arg1;	// IMP=0x0010000000033c80
- (void)_fillScores:(id)arg1 withIndexerResult:(struct DocResult *)arg2 queryTime:(double)arg3 searchParams:(id)arg4;	// IMP=0x0010000000033b00
- (float)_lightWeightScoring:(id)arg1 withQueryTime:(double)arg2 searchParams:(id)arg3;	// IMP=0x0010000000033860
- (double)_computeFreshnessPenalty:(double)arg1 withQueryTime:(double)arg2;	// IMP=0x0010000000033810
- (void)_populateQueryTerms:(void *)arg1 withTerms:(id)arg2;	// IMP=0x0010000000032910
- (_Bool)_indexDoc:(id)arg1 docID:(unsigned int)arg2 docParsingTime:(unsigned long long *)arg3;	// IMP=0x00100000000325c0
- (void)_addDocs:(id)arg1 bundleID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000030400
- (void)addDocs:(id)arg1 deleteItemsByIdentifiers:(id)arg2 clientState:(id)arg3 clientStateName:(id)arg4 bundleID:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000002fb10
- (void)addDocs:(id)arg1 bundleID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000002f6c0
- (_Bool)_deleteItemsByDomainIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002f410
- (void)deleteItemsByDomainIdentifiers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000002ef40
- (void)_deleteItemsByIdentifiers:(id)arg1 bundleID:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002e9e0
- (void)deleteItemsByIdentifiers:(id)arg1 bundleID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000002e640
- (id)initWithPath:(id)arg1 protectionClass:(id)arg2 docStore:(id)arg3 synonymFilePath:(id)arg4;	// IMP=0x001000000002e0e0
- (void)_init;	// IMP=0x001000000002ca80
- (void)_resetWithError:(id *)arg1;	// IMP=0x001000000002c8a0
- (_Bool)_resetSALT:(id *)arg1;	// IMP=0x001000000002c390
- (void)resetWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000002c040
- (void)_scheduleWork:(id)arg1 task:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000002ba50
- (id)_errorWithCode:(int)arg1 message:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002b940
- (void)dealloc;	// IMP=0x001000000002b850

@end

