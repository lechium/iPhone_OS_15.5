//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreData/NSManagedObject.h>

@class CKRecord, CKShare, MISSING_TYPE, NSData, NSString, NSUUID, RDStoreControllerManagedObjectContext, REMCDAccount, REMCKCloudState, REMObjectID, REMResolutionTokenMap;

@interface REMCDObject : NSManagedObject
{
    CKRecord *_ckServerRecord;	// 8 = 0x8
    CKShare *_ckServerShare;	// 16 = 0x10
    _Bool _mergeDataRefusedToMergeMarkedForDeletion;	// 24 = 0x18
    _Bool _mergeDataRevertedLocallyMarkedForDeletion;	// 25 = 0x19
    _Bool _shouldPerformCloudSchemaCatchUpSync;	// 26 = 0x1a
    _Bool hack_willSaveHandled;	// 27 = 0x1b
    _Bool hack_didHandleShouldSyncUpDelete;	// 28 = 0x1c
    _Bool spotlightIndexCountUpdated;	// 29 = 0x1d
    REMCDAccount *previousAccount;	// 32 = 0x20
    REMResolutionTokenMap *hack_resolutionTokenMapCopy;	// 40 = 0x28
    REMResolutionTokenMap *cached_CDResolutionMap;	// 48 = 0x30
}

+ (id)cdEntityName;	// IMP=0x00200000000488e7
+ (id)objectIDWithUUID:(id)arg1;	// IMP=0x001000000004885a
+ (id)newObjectID;	// IMP=0x00100000000487f8
+ (id)relationshipsEligibleForEffectiveMinimumSupportedVersionPropagationWithEntity:(id)arg1;	// IMP=0x001000000004828a
+ (id)keyPathsForValuesAffectingEffectiveMinimumSupportedVersion;	// IMP=0x0010000000048124
+ (_Bool)isAbstract;	// IMP=0x00100000000455be
+ (_Bool)shouldAttemptLocalObjectMerge;	// IMP=0x0010000000055785
+ (id)getResolutionTokenMapFromRecord:(id)arg1;	// IMP=0x0010000000055540
+ (id)shareSystemFieldsTransformer;	// IMP=0x00100000000543b0
+ (id)recordSystemFieldsTransformer;	// IMP=0x001000000005435b
+ (void)resetAllDeletedByThisDeviceProperties;	// IMP=0x00100000000541fe
+ (id)deletedByThisDeviceSet;	// IMP=0x0010000000053f0d
+ (id)deletedByThisDeviceOperationQueue;	// IMP=0x0010000000053e8c
+ (id)versionsByRecordIDByOperation;	// IMP=0x0010000000053776
+ (id)versionsByOperationQueue;	// IMP=0x00100000000536f5
+ (id)keyPathsForValuesAffectingServerShareCheckingParent;	// IMP=0x0010000000052d72
+ (id)keyPathsForValuesAffectingIsSharedReadOnly;	// IMP=0x0010000000052cd2
+ (id)keyPathsForValuesAffectingIsSharedViaICloud;	// IMP=0x0010000000052a5f
+ (id)keyPathsForValuesAffectingCanBeSharedViaICloud;	// IMP=0x00100000000529ea
+ (id)keyPathsForValuesAffectingNeedsToBeDeletedFromCloud;	// IMP=0x0010000000051b5e
+ (void)deleteAllTemporaryAssetFilesForAllObjects;	// IMP=0x0010000000051575
+ (void)deleteTemporaryFilesForAsset:(id)arg1;	// IMP=0x00100000000513bc
+ (void)deleteTemporaryAssetFilesForOperation:(id)arg1;	// IMP=0x0010000000050ebe
+ (id)temporaryAssetDirectoryURL;	// IMP=0x0010000000050ce8
+ (id)assetForData:(id)arg1;	// IMP=0x0010000000050abc
+ (id)temporaryAssets;	// IMP=0x0010000000050a57
+ (_Bool)needsToReFetchServerRecordValue:(id)arg1;	// IMP=0x001000000004f5f3
+ (id)keyPathsForValuesAffectingNeedsToBePushedToCloud;	// IMP=0x001000000004f373
+ (_Bool)shouldSyncToCloud;	// IMP=0x001000000004f139
+ (id)allDirtyCloudObjectIDsInContext:(id)arg1;	// IMP=0x001000000004e224
+ (id)allDirtyCloudObjectsPredicate;	// IMP=0x001000000004e202
+ (id)allCloudObjectIDsInContext:(id)arg1;	// IMP=0x001000000004e185
+ (id)allCloudObjectsInContext:(id)arg1;	// IMP=0x001000000004e086
+ (id)allCloudObjectsPredicate;	// IMP=0x001000000004e05d
+ (id)cloudObjectWithCKIdentifier:(id)arg1 context:(id)arg2;	// IMP=0x001000000004dfa5
+ (id)newPlaceholderObjectForCKIdentifier:(id)arg1 account:(id)arg2 context:(id)arg3;	// IMP=0x001000000004df11
+ (id)newPlaceholderObjectForRecordID:(id)arg1 account:(id)arg2 context:(id)arg3;	// IMP=0x001000000004de55
+ (id)newObjectWithCKIdentifier:(id)arg1 context:(id)arg2 account:(id)arg3;	// IMP=0x001000000004d5bc
+ (id)newObjectWithCKRecordName:(id)arg1 context:(id)arg2 account:(id)arg3;	// IMP=0x001000000004d526
+ (id)newCloudObjectForRecord:(id)arg1 account:(id)arg2 context:(id)arg3;	// IMP=0x001000000004d51e
+ (id)newCloudObjectForRecord:(id)arg1 context:(id)arg2;	// IMP=0x001000000004d403
+ (id)existingCloudObjectForRecordID:(id)arg1 context:(id)arg2;	// IMP=0x001000000004d3fb
+ (id)keyPathsForValuesAffectingCkZoneOwnerName;	// IMP=0x001000000004ccb6
+ (id)numberOfPushAttemptsToWaitByCKIdentifier;	// IMP=0x001000000004c0e1
+ (id)failedToSyncCountsByCKIdentifier;	// IMP=0x001000000004bd14
+ (id)failureCountQueue;	// IMP=0x001000000004bc93
+ (id)objectWithCKIdentifier:(id)arg1 context:(id)arg2;	// IMP=0x001000000004b993
+ (id)objectWithRecordID:(id)arg1 context:(id)arg2;	// IMP=0x001000000004b8e3
+ (id)ckIdentifierFromRecordName:(id)arg1;	// IMP=0x001000000004b80f
+ (id)keyPathsForValuesAffectingCloudAccount;	// IMP=0x001000000004b0da
+ (id)recordTypes;	// IMP=0x001000000004ad2d
+ (id)ckRecordKeyForMinimumSupportedVersion;	// IMP=0x001000000004ad20
+ (id)fetchRequest;	// IMP=0x001000000005f4c1
+ (void)mergeSystemPropertiesIntoCDObject:(id)arg1 fromCKRecord:(id)arg2;	// IMP=0x00100000002b90e0
- (void).cxx_destruct;	// IMP=0x0010000000048a0d
@property(nonatomic) _Bool spotlightIndexCountUpdated; // @synthesize spotlightIndexCountUpdated;
@property(retain, nonatomic) REMResolutionTokenMap *cached_CDResolutionMap; // @synthesize cached_CDResolutionMap;
@property(nonatomic) _Bool hack_didHandleShouldSyncUpDelete; // @synthesize hack_didHandleShouldSyncUpDelete;
@property(nonatomic) _Bool hack_willSaveHandled; // @synthesize hack_willSaveHandled;
@property(retain, nonatomic) REMResolutionTokenMap *hack_resolutionTokenMapCopy; // @synthesize hack_resolutionTokenMapCopy;
@property(retain, nonatomic) REMCDAccount *previousAccount; // @synthesize previousAccount;
- (id)remObjectIDWithError:(id *)arg1;	// IMP=0x0010000000048792
@property(readonly, nonatomic) REMObjectID *remObjectID;
- (_Bool)validateEffectiveMinimumSupportedVersionApplyingChange:(_Bool)arg1;	// IMP=0x001000000004851e
- (void)_markDirtyForEffectiveMinimumSupportedVersionValidation;	// IMP=0x001000000004819c
- (long long)parentEffectiveMinimumSupportedVersion;	// IMP=0x00100000000480c5
@property(nonatomic) long long effectiveMinimumSupportedVersion;
- (void)setMinimumSupportedVersion:(long long)arg1;	// IMP=0x0010000000047dbe
@property(readonly, nonatomic) long long minimumSupportedVersion;
- (_Bool)isUnsupported;	// IMP=0x0010000000047d92
- (_Bool)_allowsObjectSupportedVersion;	// IMP=0x0010000000047cfb
- (void)fixValueBeforeUnmarkingForDeletionForKey:(id)arg1;	// IMP=0x0010000000047c42
- (void)fixValueBeforeMarkingForDeletionForKey:(id)arg1;	// IMP=0x0010000000047a73
- (id)allChildObjects;	// IMP=0x0010000000047970
- (void)deleteAllChildrenFromLocalDatabase;	// IMP=0x0010000000047816
- (void)recursiveMarkForDeletion:(_Bool)arg1 usingVisitedMap:(id)arg2;	// IMP=0x00100000000476a9
- (void)traverseObjectTreeUsingVisitedMap:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000046e7d
- (void)updateDeletedFlagAccordingToOrphanState:(id)arg1;	// IMP=0x0010000000046975
- (_Bool)shouldMarkAsDeletedInsteadOfDeletingImmediately;	// IMP=0x001000000004696d
- (_Bool)validateForUpdate:(id *)arg1;	// IMP=0x0010000000046654
- (_Bool)validateForInsert:(id *)arg1;	// IMP=0x0010000000046555
- (void)didSave;	// IMP=0x00100000000464ca
- (void)willSave;	// IMP=0x001000000004606e
@property(retain, nonatomic) REMCDAccount *account; // @dynamic account;
- (id)createResolutionTokenMapIfNecessary;	// IMP=0x0010000000045f1d
- (id)resolutionTokenMapFromJsonData:(id)arg1;	// IMP=0x0010000000045e76
- (id)jsonDataFromResolutionTokenMap:(id)arg1;	// IMP=0x0010000000045e15
@property(retain, nonatomic) NSData *resolutionTokenMapData;
@property(retain, nonatomic) REMResolutionTokenMap *resolutionTokenMap;
- (void)didChangeValueForKey:(id)arg1;	// IMP=0x00100000000457a4
- (void)didTurnIntoFault;	// IMP=0x0010000000045763
- (void)awakeFromFetch;	// IMP=0x0010000000045722
- (void)awakeFromInsert;	// IMP=0x00100000000456e1
@property(readonly, nonatomic) _Bool isPlaceholder;
@property(readonly, nonatomic) _Bool isConcealed;
@property(readonly, nonatomic) RDStoreControllerManagedObjectContext *storeControllerManagedObjectContext;
@property(readonly, nonatomic) _Bool shouldPerformCloudSchemaCatchUpSync;
@property(readonly, nonatomic) _Bool mergeDataRevertedLocallyMarkedForDeletion;
@property(readonly, nonatomic) _Bool mergeDataRefusedToMergeMarkedForDeletion;
- (void)cleanUpAfterLocalObjectMerge;	// IMP=0x001000000005579d
- (_Bool)mergeWithLocalObject:(id)arg1;	// IMP=0x0010000000055795
- (id)existingLocalObjectToMergeWithPredicate:(id)arg1;	// IMP=0x001000000005578d
- (void)generateReolutionTokenMapForTestingWithKeys:(id)arg1;	// IMP=0x001000000005561c
- (id)getResolutionTokenMapFromRecord:(id)arg1;	// IMP=0x0010000000055603
- (id)cloudKitReferenceWithRecordIDAndValidateAction:(id)arg1;	// IMP=0x00100000000554e0
- (id)ic_loggingValues;	// IMP=0x0010000000054ea2
- (id)ic_loggingIdentifier;	// IMP=0x0010000000054e90
- (id)shortLoggingDescription;	// IMP=0x0010000000054e14
- (id)loggingDescription;	// IMP=0x0010000000054e02
- (_Bool)hasAllMandatoryFields;	// IMP=0x0010000000054dba
- (void)resetUniqueIdentifier;	// IMP=0x0010000000054db4
@property(retain, nonatomic) CKShare *ckServerShare;
- (void)updateSharedObjectOwnerName:(id)arg1;	// IMP=0x0010000000054705
@property(retain, nonatomic) CKRecord *ckServerRecord;
@property(nonatomic, getter=isInCloud) _Bool inCloud;
@property(nonatomic) _Bool deletedByThisDevice;
- (long long)isPushingSameOrLaterThanVersion:(long long)arg1;	// IMP=0x0010000000053b98
- (void)setVersion:(long long)arg1 forOperation:(id)arg2;	// IMP=0x00100000000539c4
- (long long)versionForOperation:(id)arg1;	// IMP=0x00100000000537db
- (void)restoreParentReferenceAfterUnmarkingForDeletion;	// IMP=0x00100000000536ef
- (void)didAcceptShare:(id)arg1;	// IMP=0x00100000000534d7
- (void)setServerShareIfNewer:(id)arg1;	// IMP=0x0010000000052f44
- (void)updateObjectWithShare:(id)arg1;	// IMP=0x0010000000052eef
- (id)currentUserShareParticipantID;	// IMP=0x0010000000052e4e
- (id)shareType;	// IMP=0x0010000000052e3c
- (id)shareTitle;	// IMP=0x0010000000052e2a
- (id)serverShareCheckingParent;	// IMP=0x0010000000052d92
- (_Bool)isSharedReadOnly;	// IMP=0x0010000000052cf2
- (_Bool)isSharedRootObject;	// IMP=0x0010000000052c43
- (_Bool)isOwnedByCurrentUser;	// IMP=0x0010000000052bff
- (_Bool)canBeRootShareObject;	// IMP=0x0010000000052bf7
- (_Bool)isSharedViaICloud;	// IMP=0x0010000000052aa7
- (_Bool)canBeSharedViaICloud;	// IMP=0x0010000000052a16
@property(readonly) _Bool needsToDeleteShare;
- (void)updateParentReferenceIfNecessary;	// IMP=0x00100000000524cf
- (id)parentCloudObject;	// IMP=0x00100000000524c7
- (_Bool)supportsDeletionByTTL;	// IMP=0x00100000000524bf
@property(nonatomic) _Bool markedForDeletion; // @dynamic markedForDeletion;
- (void)unmarkForDeletion;	// IMP=0x0010000000051fa0
- (void)markForDeletion;	// IMP=0x0010000000051b82
- (void)fixBrokenReferences;	// IMP=0x0010000000051b58
- (id)objectsToBeDeletedBeforeThisObject;	// IMP=0x0010000000051b4b
- (void)deleteFromLocalDatabase;	// IMP=0x0010000000051a6f
- (_Bool)shouldBeDeletedFromLocalDatabaseUnlessByThisDevice:(_Bool)arg1;	// IMP=0x001000000005189c
- (_Bool)isDeletable;	// IMP=0x0010000000051894
- (void)sortChildrenObjects;	// IMP=0x0010000000050a51
- (void)objectWasFetchedButDoesNotExistInCloud;	// IMP=0x00100000000508da
- (void)objectWasFetchedFromCloudWithRecord:(id)arg1;	// IMP=0x0010000000050395
- (void)objectWasPushedToCloudWithOperation:(id)arg1 serverRecord:(id)arg2;	// IMP=0x0010000000050154
- (void)objectFailedToBePushedToCloudWithOperation:(id)arg1 record:(id)arg2 error:(id)arg3;	// IMP=0x001000000004fa8a
- (void)objectWillBePushedToCloudWithOperation:(id)arg1;	// IMP=0x001000000004fa08
- (void)objectWasDeletedFromCloudByAnotherDevice;	// IMP=0x001000000004f80e
- (void)objectWasDeletedFromCloud;	// IMP=0x001000000004f7fa
- (_Bool)needsToFetchAfterServerRecordChanged:(id)arg1;	// IMP=0x001000000004f42c
- (_Bool)hasSuccessfullyPushedLatestVersionToCloud;	// IMP=0x001000000004f39f
- (void)forcePushToCloud;	// IMP=0x001000000004f30d
@property(readonly) _Bool needsToBePushedToCloud;
- (void)mergeDataFromRecord:(id)arg1;	// IMP=0x001000000004ed19
- (id)newlyCreatedRecord;	// IMP=0x001000000004e69f
- (void)recursivelyFixCrossZoneRelationshipWithVisitedMap:(id)arg1 perObjectHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004e2a1
- (_Bool)isValidObject;	// IMP=0x001000000004d2fb
- (_Bool)isInICloudAccount;	// IMP=0x001000000004d1fd
- (_Bool)_isInICloudAccount;	// IMP=0x001000000004d173
@property(readonly) _Bool needsToBeDeletedFromCloud;
- (id)recordType;	// IMP=0x001000000004d0a2
- (long long)databaseScope;	// IMP=0x001000000004d05e
- (id)recordID;	// IMP=0x001000000004cd89
@property(copy, nonatomic) NSString *ckZoneOwnerName; // @dynamic ckZoneOwnerName;
- (id)recordZoneName;	// IMP=0x001000000004cc3a
- (id)recordName;	// IMP=0x001000000004cb1d
@property(readonly, nonatomic) _Bool shouldBeIgnoredForSync;
- (void)resetFailureCounts;	// IMP=0x001000000004c967
- (void)deleteChangeTokensAndReSync;	// IMP=0x001000000004c7cc
- (void)decrementFailureCounts;	// IMP=0x001000000004c67a
- (void)incrementFailureCounts;	// IMP=0x001000000004c4ae
- (void)setNumberOfPushAttemptsToWaitCount:(long long)arg1;	// IMP=0x001000000004c30f
- (MISSING_TYPE *)numberOfPushAttemptsToWaitCount;	// IMP=0x001000000004c146
- (void)setFailedToSyncCount:(long long)arg1;	// IMP=0x001000000004bf42
- (long long)failedToSyncCount;	// IMP=0x001000000004bd79
- (id)ckIdentifierFromRecordName:(id)arg1;	// IMP=0x001000000004b892
- (void)clearServerRecord;	// IMP=0x001000000004b7fb
- (void)clearChangeCount;	// IMP=0x001000000004b74d
- (void)updateChangeCount;	// IMP=0x001000000004b511
- (void)setShouldSyncUpDelete;	// IMP=0x001000000004b4dd
- (_Bool)shouldSyncUpDelete;	// IMP=0x001000000004b4c4
- (void)_setCKIdentifierIfNecessary;	// IMP=0x001000000004b355
@property(nonatomic) _Bool ckNeedsToBeFetchedFromCloud; // @dynamic ckNeedsToBeFetchedFromCloud;
- (id)cloudAccount;	// IMP=0x001000000004b0fa
- (void)insertCloudStateIfNeededOnAwakeFromFetch;	// IMP=0x001000000004aee9
- (void)insertCloudStateOnAwakeFromInsert;	// IMP=0x001000000004adea
- (void)clearTransformedCKServerValueCachesOnDidTurnIntoFault;	// IMP=0x001000000004ad9d
- (_Bool)shouldCascadeMarkAsDeleteInto:(id)arg1 forRelationship:(id)arg2;	// IMP=0x0010000000056467
- (_Bool)isConnectedToAccountObject:(id)arg1;	// IMP=0x00100000000563a4

// Remaining properties
@property(retain, nonatomic) REMCKCloudState *ckCloudState; // @dynamic ckCloudState;
@property(nonatomic) short ckDirtyFlags; // @dynamic ckDirtyFlags;
@property(copy, nonatomic) NSString *ckIdentifier; // @dynamic ckIdentifier;
@property(nonatomic) _Bool ckNeedsInitialFetchFromCloud; // @dynamic ckNeedsInitialFetchFromCloud;
@property(retain, nonatomic) NSData *ckServerRecordData; // @dynamic ckServerRecordData;
@property(retain, nonatomic) NSData *ckServerShareData; // @dynamic ckServerShareData;
@property(copy, nonatomic) NSString *daPushKey; // @dynamic daPushKey;
@property(copy, nonatomic) NSString *daSyncToken; // @dynamic daSyncToken;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) long long effectiveMinimumSupportedAppVersion; // @dynamic effectiveMinimumSupportedAppVersion;
@property(copy, nonatomic) NSString *externalIdentifier; // @dynamic externalIdentifier;
@property(copy, nonatomic) NSString *externalModificationTag; // @dynamic externalModificationTag;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) NSUUID *identifier; // @dynamic identifier;
@property(nonatomic) long long minimumSupportedAppVersion; // @dynamic minimumSupportedAppVersion;
@property(retain, nonatomic) NSString *primitiveCkZoneOwnerName; // @dynamic primitiveCkZoneOwnerName;
@property(retain, nonatomic) REMResolutionTokenMap *resolutionTokenMap_v2_JSON; // @dynamic resolutionTokenMap_v2_JSON;
@property(retain, nonatomic) NSData *resolutionTokenMap_v3_JSONData; // @dynamic resolutionTokenMap_v3_JSONData;
@property(readonly) Class superclass;

@end

