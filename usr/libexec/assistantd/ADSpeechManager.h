//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADAudioSessionCoordinator, ADSpeechCompressor, ADSpeechLog, ADSpeechPlaybackSimulator, ADVolumeService, AFAudioPowerUpdater, AFClientConfiguration, AFDictationOptions, AFInstanceContext, AFQueue, CSAudioDeviceInfo, CSAudioSessionController, CSSiriAudioPlaybackService, CSSiriSpeechRecorder, CSSiriSpeechRecordingContext, CSSpeechController, CoreEmbeddedSpeechRecognizer, MISSING_TYPE, NSArray, NSDate, NSError, NSMutableSet, NSString;
@protocol ADSpeechManagerDelegate, ADVolumeServiceProviding, ADVolumeTracking, AFAudioSessionAssertionAcquisitionService, CSSiriRecordingInfoProviding, CSSiriSpeechCapturing, OS_dispatch_queue, OS_dispatch_source;

@interface ADSpeechManager : NSObject
{
    CoreEmbeddedSpeechRecognizer *_interactiveLocalSpeechRecognizer;	// 8 = 0x8
    NSString *_localSpeechRecognizerTask;	// 16 = 0x10
    NSObject<OS_dispatch_source> *_profileUpdateDelayTimer;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_profileUpdateCoalescingTimer;	// 32 = 0x20
    MISSING_TYPE *_profileUpdateIsActive;	// 40 = 0x28
    AFQueue *_profileUpdateLanguageQueue;	// 48 = 0x30
    NSMutableSet *_profileUpdateLanguageSet;	// 56 = 0x38
    NSDate *_lastSpeechProfileUpdateForPortrait;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_queue;	// 72 = 0x48
    AFInstanceContext *_instanceContext;	// 80 = 0x50
    int _speechState;	// 88 = 0x58
    _Bool _shouldTalkToDelegate;	// 92 = 0x5c
    long long _capturingMode;	// 96 = 0x60
    AFClientConfiguration *_clientConfiguration;	// 104 = 0x68
    CSSiriSpeechRecordingContext *_capturingContext;	// 112 = 0x70
    NSError *_recordingError;	// 120 = 0x78
    id <ADSpeechManagerDelegate> _delegate;	// 128 = 0x80
    CDUnknownBlockType _recordStartedCompletion;	// 136 = 0x88
    CDUnknownBlockType _recordStoppedCompletion;	// 144 = 0x90
    _Bool _releasesAudioSessionWhenRecordingStopped;	// 152 = 0x98
    long long _prepareAudioSystemTransactionCount;	// 160 = 0xa0
    _Bool _releasesAudioSessionWhenPrepareAudioSystemDone;	// 168 = 0xa8
    ADSpeechLog *_speechLog;	// 176 = 0xb0
    CSSpeechController *_speechController;	// 184 = 0xb8
    CSAudioSessionController *_audioSessionController;	// 192 = 0xc0
    id <CSSiriSpeechCapturing> _currentCapturing;	// 200 = 0xc8
    CSSiriSpeechRecorder *_speechRecorder;	// 208 = 0xd0
    ADSpeechPlaybackSimulator *_playbackSimulator;	// 216 = 0xd8
    ADSpeechCompressor *_speechCompressor;	// 224 = 0xe0
    ADVolumeService *_volumeService;	// 232 = 0xe8
    CSSiriAudioPlaybackService *_audioPlaybackService;	// 240 = 0xf0
    id _context;	// 248 = 0xf8
    _Bool _isDriving;	// 256 = 0x100
    _Bool _isAudioSessionLikelyActive;	// 257 = 0x101
    _Bool _isReleaseAudioSessionRequired;	// 258 = 0x102
    _Bool _hasPreparedAudioSystemForPlayback;	// 259 = 0x103
    CSAudioDeviceInfo *_audioDeviceInfo;	// 264 = 0x108
    NSString *_recordRoute;	// 272 = 0x110
    NSString *_deviceIdentifier;	// 280 = 0x118
    _Bool _hasFetchedSmartSiriVolume;	// 288 = 0x120
    _Bool _hasUpdatedSiriOutputVolume;	// 289 = 0x121
    unsigned long long _dirtySiriOutputVolumeHostTime;	// 296 = 0x128
    _Bool _hasReceivedLastAudioBuffer;	// 304 = 0x130
    NSString *_initialDictationLanguage;	// 312 = 0x138
    NSString *_primaryDictationLanguage;	// 320 = 0x140
    NSArray *_dictationLanguages;	// 328 = 0x148
    AFDictationOptions *_dictationOptions;	// 336 = 0x150
    NSArray *_inlineItemList;	// 344 = 0x158
    AFAudioPowerUpdater *_audioPowerUpdater;	// 352 = 0x160
    ADAudioSessionCoordinator *_audioSessionCoordinator;	// 360 = 0x168
}

+ (void)_detectOnDeviceDictationOrchestrationMismatchForLanguage:(id)arg1 initialLanguage:(id)arg2 eligibleForOnDeviceDictation:(_Bool)arg3 modelType:(id)arg4 onDeviceRequest:(_Bool)arg5 context:(id)arg6;	// IMP=0x00200000002742df
+ (id)sharedManager;	// IMP=0x001000000026d470
+ (id)_speechCodecError;	// IMP=0x001000000026d445
+ (id)_badStateError;	// IMP=0x001000000026d41a
- (void).cxx_destruct;	// IMP=0x002000000027dca4
@property(readonly, nonatomic) CSSiriAudioPlaybackService *audioPlaybackService; // @synthesize audioPlaybackService=_audioPlaybackService;
@property(readonly, nonatomic) CSAudioSessionController *audioSessionController; // @synthesize audioSessionController=_audioSessionController;
@property(readonly, nonatomic) ADAudioSessionCoordinator *audioSessionCoordinator; // @synthesize audioSessionCoordinator=_audioSessionCoordinator;
@property(readonly, nonatomic) AFAudioPowerUpdater *audioPowerUpdater; // @synthesize audioPowerUpdater=_audioPowerUpdater;
@property(copy, nonatomic) NSArray *inlineItemList; // @synthesize inlineItemList=_inlineItemList;
@property(nonatomic) _Bool isDriving; // @synthesize isDriving=_isDriving;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) AFDictationOptions *dictationOptions; // @synthesize dictationOptions=_dictationOptions;
@property(copy, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *primaryDictationLanguage; // @synthesize primaryDictationLanguage=_primaryDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
- (void)asrBridgeReceivedPartialResult:(id)arg1 language:(id)arg2 tokens:(id)arg3;	// IMP=0x001000000027da4b
- (void)asrBridgeReceivedFinalResult:(id)arg1 speechPackage:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000027d901
- (void)asrBridgeReceivedEagerRecognitionCandidate:(id)arg1 rawRecognitionResult:(id)arg2 duration:(double)arg3 sessionUUID:(id)arg4;	// IMP=0x001000000027d7b6
@property(readonly, nonatomic) id <AFAudioSessionAssertionAcquisitionService> audioSessionAssertionAcquisitionService;
- (void)_updateSiriOutputVolume:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000027d551
- (void)_fetchSmartSiriVolume:(_Bool)arg1;	// IMP=0x001000000027d3cb
- (id)_volumeService;	// IMP=0x001000000027d27e
- (_Bool)_supportsVolumeService;	// IMP=0x001000000027d263
- (void)setEARLanguageDetectorSpeechRequestId:(id)arg1;	// IMP=0x001000000027d16b
- (void)_addRecordStoppedCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000027d05c
- (void)setEndpointerDelayedTrigger:(_Bool)arg1;	// IMP=0x001000000027cfbc
- (void)setEndpointerThreshold:(double)arg1;	// IMP=0x001000000027cf19
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x001000000027ce3d
@property(readonly, nonatomic) id <CSSiriRecordingInfoProviding> recordingInfoProvider;
@property(readonly, nonatomic) id <ADVolumeServiceProviding> volumeServiceProvider;
@property(readonly, nonatomic) id <ADVolumeTracking> volumeTracker;
- (void)_dispatchUpdateSpeechProfileForNextLanguage;	// IMP=0x001000000027c986
- (void)_addLanguageUpdateToQueue:(id)arg1;	// IMP=0x001000000027c910
- (void)_updateSpeechProfileForLanguages:(id)arg1;	// IMP=0x001000000027c741
- (void)_requestSpeechProfileUpdateForLanguages:(id)arg1;	// IMP=0x001000000027c454
- (void)updateSpeechProfilesForReasons:(id)arg1;	// IMP=0x001000000027b7cb
- (void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x001000000027b6be
- (void)cancelSpeechProfileUpdate;	// IMP=0x001000000027b639
- (void)getLastStartpointTimestampAndCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x001000000027b55d
- (void)stopFingerprintingForSuccess:(_Bool)arg1;	// IMP=0x001000000027b4b4
- (void)updateSpeechOptions:(id)arg1;	// IMP=0x001000000027b3c7
- (void)playRecordingStartAlert;	// IMP=0x001000000027b33b
- (void)setSpeechRecognizedContext:(id)arg1;	// IMP=0x001000000027b1f9
- (void)enforcePreviousEndpointHint;	// IMP=0x001000000027b16d
- (void)updateEndpointHintForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000027b07d
- (void)updateOptionsAfterRecognitionForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;	// IMP=0x001000000027b001
- (void)updateServerEndpointFeatures:(id)arg1;	// IMP=0x001000000027af25
- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;	// IMP=0x001000000027ae79
- (void)setFingerprintWasRecognized;	// IMP=0x001000000027ae11
- (void)suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:(CDUnknownBlockType)arg1;	// IMP=0x001000000027acc0
- (_Bool)_endSessionIfIdle;	// IMP=0x001000000027abd0
- (void)_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000027a58a
- (void)endSession:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000027a35e
- (void)endSession;	// IMP=0x0010000000279d33
- (void)setSuppressAudioInterruptionEndedNotifications:(_Bool)arg1;	// IMP=0x0010000000279cc1
- (void)_stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x001000000027993b
- (void)stopSpeechCaptureIfFingerprintingOnlyWithOptions:(id)arg1;	// IMP=0x00100000002797bb
- (void)stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0010000000279621
- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;	// IMP=0x00100000002791ab
- (void)startSpeechCaptureWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 isDictation:(_Bool)arg3 sessionUUID:(id)arg4;	// IMP=0x0010000000278d00
- (void)addRecordedDictationAudioSampleData:(id)arg1;	// IMP=0x0010000000278c24
- (void)startRecordedDictationCaptureWithSessionUUID:(id)arg1 narrowband:(_Bool)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x001000000027883b
- (void)_startCaptureForMode:(long long)arg1 options:(id)arg2 context:(id)arg3;	// IMP=0x00100000002777f5
- (id)_startFixedPriorityCaptureForMode:(long long)arg1 options:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00100000002775eb
- (void)startAcousticIDCaptureWithOptions:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00100000002775c5
- (id)startSpeechCaptureForDictationWithOptions:(id)arg1 sessionUUID:(id)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x001000000027743c
- (id)startSpeechCaptureForRequestWithOptions:(id)arg1 sessionUUID:(id)arg2 language:(id)arg3;	// IMP=0x00100000002772cc
- (_Bool)isStopped;	// IMP=0x0010000000277224
- (_Bool)isCapturing;	// IMP=0x0010000000277178
- (void)setClientConfiguration:(id)arg1;	// IMP=0x001000000027707c
- (void)setDelegate:(id)arg1;	// IMP=0x0010000000276fd8
- (void)_prepareAudioSystemWithContext:(id)arg1 audioSessionAssertion:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000027517b
- (void)prepareAudioSystemWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000274e24
- (void)preheatWithOptions:(id)arg1;	// IMP=0x0010000000274af4
- (void)eagerlyInitializeAudioRecording;	// IMP=0x0010000000274a8c
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x0010000000273fe2
- (void)localSpeechRecognizer:(id)arg1 didProduceLoggablePackage:(id)arg2;	// IMP=0x0010000000273dd1
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x0010000000273bc0
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x0010000000273a67
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x00100000002739cb
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x00100000002737ab
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;	// IMP=0x001000000027378e
- (id)_recordingInfo;	// IMP=0x001000000027373e
- (id)getRecordingInfo;	// IMP=0x0010000000273622
- (void)getRecordingInfoUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000273554
- (void)getVolumeServiceUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000273486
- (void)setDirtySiriOutputVolumeHostTime:(unsigned long long)arg1;	// IMP=0x001000000027337c
- (void)audioSessionCoordinator:(id)arg1 releaseAudioSessionWithContext:(id)arg2;	// IMP=0x00100000002730cc
- (void)audioSessionCoordinator:(id)arg1 prepareAudioSessionWithContext:(id)arg2;	// IMP=0x0010000000272ce3
- (void)speechCapturingDidProvideConfidenceScores:(id)arg1 classification:(unsigned long long)arg2 classifiedUser:(id)arg3 unknownUserScore:(long long)arg4 duration:(long long)arg5 version:(long long)arg6 thresholdingType:(id)arg7 assetVersion:(id)arg8;	// IMP=0x0010000000272bfb
- (void)speechCapturing:(id)arg1 languageDetectorDidFail:(id)arg2;	// IMP=0x0010000000272b9c
- (void)speechCapturing:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(_Bool)arg4;	// IMP=0x0010000000272b81
- (void)speechCapturing:(id)arg1 didLoseAudioSessionOwnerOrMediaServices:(id)arg2;	// IMP=0x0010000000272ac1
- (void)speechCapturing:(id)arg1 didInterruptAudioSession:(id)arg2;	// IMP=0x0010000000272a01
- (void)speechCapturing:(id)arg1 didSetAudioSessionActive:(_Bool)arg2;	// IMP=0x001000000027290a
- (void)speechCapturing:(id)arg1 willSetAudioSessionActive:(_Bool)arg2;	// IMP=0x001000000027281a
- (void)speechCapturingDidRequestUpdateSiriOutputVolume:(id)arg1;	// IMP=0x001000000027273d
- (void)speechCapturingDidRequestShutdownUI:(id)arg1;	// IMP=0x00100000002726a1
- (void)speechCapturingDidRequestQuickStop:(id)arg1;	// IMP=0x0010000000272605
- (void)speechCapturing:(id)arg1 performTwoShotPromptWithType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002725ed
- (void)speechCapturing:(id)arg1 didDetectEndpointAtTime:(double)arg2;	// IMP=0x00100000002725db
- (void)speechCapturing:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x00100000002725c9
- (void)speechCapturing:(id)arg1 didFinishWritingAudioFile:(id)arg2 error:(id)arg3;	// IMP=0x00100000002725b1
- (void)speechCapturingDidDelayEndpointForMusic:(id)arg1;	// IMP=0x001000000027259f
- (void)speechCapturingDidDetectMusic:(id)arg1;	// IMP=0x001000000027258d
- (void)speechCapturing:(id)arg1 didReceiveFingerprint:(id)arg2 duration:(double)arg3;	// IMP=0x0010000000272578
- (void)speechCapturingDidRecordPCMAudioData:(id)arg1;	// IMP=0x0010000000272504
- (void)speechCapturingDidRecordSpeechPackets:(id)arg1 atTimestamp:(double)arg2 totalPacketCount:(long long)arg3;	// IMP=0x00100000002723b3
- (void)speechCapturingDidStopRecordingWithError:(id)arg1 endpointMode:(long long)arg2 totalPacketCount:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x0010000000272296
- (void)speechCapturingWillStopRecordingWithSignpostID:(unsigned long long)arg1;	// IMP=0x0010000000272284
- (void)speechCapturingWillStopRecording;	// IMP=0x001000000027226d
- (void)speechCapturingDidReceiveLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x00100000002721c8
- (void)speechCapturingDidUpdateAudioDeviceInfo:(id)arg1;	// IMP=0x00100000002721b6
- (void)speechCapturingDidUpdateRecordingInfo:(id)arg1;	// IMP=0x0010000000272110
- (void)speechCapturingDidStartRecordingSuccessfully:(_Bool)arg1 error:(id)arg2 withInfo:(id)arg3;	// IMP=0x0010000000270b53
- (void)_updateCapturingStateWithOptions:(id)arg1;	// IMP=0x0010000000270a62
- (void)_recordingStoppedWithError:(id)arg1 totalPacketCount:(long long)arg2 endpointMode:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x0010000000270749
- (void)_lastAudioBufferReceivedWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x00100000002705ff
- (void)_cancelRecordingWithError:(id)arg1 suppressAlert:(_Bool)arg2;	// IMP=0x0010000000270482
- (void)_tellDelegateSpeechWillStopRecordingWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000027043a
- (void)_tellDelegateDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x00100000002703b3
- (void)_tellDelegateDidSetAudioSessionActive:(_Bool)arg1;	// IMP=0x001000000027036b
- (void)_tellDelegateWillSetAudioSessionActive:(_Bool)arg1;	// IMP=0x0010000000270323
- (void)_tellDelegateShutdownUIWasRequested;	// IMP=0x00100000002702e6
- (void)_tellDelegateQuickStopWasRequested;	// IMP=0x00100000002702a9
- (void)_tellDelegateToPerformTwoShotPromptWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000270241
- (void)_tellDelegateSpeechEndpointWasDetectedAtTime:(double)arg1;	// IMP=0x00100000002701f2
- (void)_tellDelegateSpeechStartpointWasDetectedAtTime:(double)arg1;	// IMP=0x00100000002701a3
- (void)_tellDelegateAudioFileDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x0010000000270120
- (void)_tellDelegateAboutInputAveragePower:(float)arg1 peak:(float)arg2;	// IMP=0x0010000000270097
- (void)_tellDelegateEndpointWasDelayedForMusic;	// IMP=0x001000000027002e
- (void)_tellDelegateMusicWasDetected;	// IMP=0x001000000026ffc5
- (void)_tellDelegateAboutFingerprint:(id)arg1 duration:(double)arg2;	// IMP=0x001000000026ff33
- (void)_tellDelegateAboutSpeechPackets:(id)arg1 atTimestamp:(double)arg2 count:(long long)arg3;	// IMP=0x001000000026fe90
- (void)_tellDelegateUpdateAudioInfo:(id)arg1;	// IMP=0x001000000026fe04
- (void)_tellDelegateSpeechStartedWithRecordingInfo:(id)arg1;	// IMP=0x001000000026fd78
- (void)_tellDelegateSpeechWillBeginWithTimestamp:(double)arg1 isFromFile:(_Bool)arg2 isAudioPowerUpdateDisabled:(_Bool)arg3;	// IMP=0x001000000026fca2
- (void)_tellDelegateSpeechRecognitionUpdateWillBegin;	// IMP=0x001000000026fc35
- (void)_tellDelegateSpeechShouldPreheatWithRecordingInfo:(id)arg1;	// IMP=0x001000000026fba9
- (void)_tellDelegateSpeechFinished;	// IMP=0x001000000026fb21
- (void)_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x001000000026fa7d
- (void)_tellDelegateSpeechFailedWithError:(id)arg1;	// IMP=0x001000000026f9e1
- (void)_tellDelegateSpeechCanceled;	// IMP=0x001000000026f952
- (void)_cleanUpDelegateInfo;	// IMP=0x001000000026f895
- (void)resetLocalRecognizer;	// IMP=0x001000000026f7cf
- (void)cancelLocalRecognitionIfActive;	// IMP=0x001000000026f67c
- (_Bool)isLocallyRecognizingInSiriMiniMode;	// IMP=0x001000000026f5b6
- (_Bool)isLocallyRecognizingInDictationMode;	// IMP=0x001000000026f4f5
- (_Bool)isLocallyRecognizing;	// IMP=0x001000000026f44c
- (void)disableDESWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000026f370
- (void)getOfflineDictationStatusIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000026f284
- (id)_interactiveLocalSpeechRecognizer;	// IMP=0x001000000026f18c
- (void)_fetchAssetsForLanaugeOrEnablementNotification:(id)arg1;	// IMP=0x001000000026eed0
- (void)dictationSessionDidComplete;	// IMP=0x001000000026ea4a
- (_Bool)_releaseSession;	// IMP=0x001000000026e551
- (void)_updateRecordRoute:(id)arg1 andDeviceIdentifier:(id)arg2;	// IMP=0x001000000026e368
- (void)_updateAudioDeviceInfo:(id)arg1;	// IMP=0x001000000026e1f9
- (void)_updateSpeechState:(int)arg1;	// IMP=0x001000000026dffb
- (id)_currentSpeechCaptureSource;	// IMP=0x001000000026df16
- (id)_speechCompressor;	// IMP=0x001000000026dd77
- (void)getSpeechRecorderVTSatScore:(CDUnknownBlockType)arg1;	// IMP=0x000000000026dc7f
- (id)_speechRecorder;	// IMP=0x001000000026dace
- (void)dealloc;	// IMP=0x001000000026da34
- (id)_initWithInstanceContext:(id)arg1;	// IMP=0x001000000026d516

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

