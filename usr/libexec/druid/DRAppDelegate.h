//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BKSTouchStream, DRKeyboardArbiter, DRPasteAnnouncer, DRSystemConnection, DRTouchTrackingWindow, DRViewController, MISSING_TYPE, NSHashTable, NSMutableArray, NSString, NSXPCListener, UIWindow;
@protocol BSInvalidatable, OS_dispatch_queue, OS_dispatch_source;

@interface DRAppDelegate : NSObject
{
    BKSTouchStream *_touchStream;	// 8 = 0x8
    id <BSInvalidatable> _mousePointerServiceAssertion;	// 16 = 0x10
    NSObject<OS_dispatch_source> *_pointerBeganWatchdogTimer;	// 24 = 0x18
    DRTouchTrackingWindow *_window;	// 32 = 0x20
    DRViewController *_rootViewController;	// 40 = 0x28
    DRKeyboardArbiter *_keyboardArbiter;	// 48 = 0x30
    DRSystemConnection *_systemConnection;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_launchCompletionWatchdogTimer;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_xpcQueue;	// 72 = 0x48
    NSXPCListener *_sourceListener;	// 80 = 0x50
    NSXPCListener *_destinationListener;	// 88 = 0x58
    DRPasteAnnouncer *_pasteAnnouncer;	// 96 = 0x60
    int _lockToken;	// 104 = 0x68
    _Bool _isLocked;	// 108 = 0x6c
    unsigned int _lastSessionID;	// 112 = 0x70
    NSMutableArray *_dragSessions;	// 120 = 0x78
    NSHashTable *_keyboardSessions;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_transformUpdateQueue;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x002000000000abee
- (void)_didBecomeLocked;	// IMP=0x001000000000aa76
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;	// IMP=0x001000000000aa70
- (void)scene:(id)arg1 didUpdateWithDiff:(id)arg2 transitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000000a99d
- (struct CATransform3D)_transformToLocalWindowForCoordinateSpaceTransformToDisplay:(struct CATransform3D)arg1;	// IMP=0x001000000000a592
- (void)_getTransformForContextID:(unsigned int)arg1 layerRenderID:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000a1aa
- (void)_pointerBeganWatchdogFired;	// IMP=0x001000000000a10e
- (void)_cancelPointerBeganWatchdog;	// IMP=0x001000000000a0cf
- (void)_resetPointerBeganWatchdogWithTimeout:(double)arg1;	// IMP=0x001000000000a027
- (id)xpcQueue_pointerDragSessionForEvents;	// IMP=0x0010000000009e90
- (_Bool)xpcQueue_hasTouchBasedDragSessionForEvents;	// IMP=0x0010000000009cf9
- (id)xpcQueue_accessibilityDragSessionForEvents;	// IMP=0x0010000000009b72
- (void)xpcQueue_validateTouchStream;	// IMP=0x0010000000009547
- (void)xpcQueue_removeDragSession:(id)arg1;	// IMP=0x0010000000009404
- (void)xpcQueue_addDragSession:(id)arg1;	// IMP=0x00100000000092f0
- (void)addBeginningTouchesToExistingSessions:(id)arg1;	// IMP=0x00100000000088a5
- (void)setEventFetchThreadPriorityWhenPossible;	// IMP=0x00100000000087c4
- (void)dragSession:(id)arg1 moveToLocation:(struct CGPoint)arg2;	// IMP=0x00100000000086ba
- (void)trackedTouchesCancelled:(id)arg1;	// IMP=0x0010000000007f1c
- (void)trackedTouchesEnded:(id)arg1 pairedWithVelocities:(id)arg2;	// IMP=0x00100000000073ae
- (void)trackedTouchesMoved:(id)arg1;	// IMP=0x0010000000007175
- (void)trackedTouchesBegan:(id)arg1;	// IMP=0x0010000000006fb9
- (id)_filterTouchesForPointer:(id)arg1 performingBlockForPointerTouch:(CDUnknownBlockType)arg2;	// IMP=0x0010000000006dd2
- (void)_forEachTouch:(id)arg1 performBlockForSession:(CDUnknownBlockType)arg2;	// IMP=0x001000000000686a
- (void)viewController:(id)arg1 requestImagesForSessionID:(unsigned int)arg2 client:(id)arg3 itemIndexes:(id)arg4;	// IMP=0x00100000000066d8
- (void)dragSession:(id)arg1 enableKeyboardIfNeeded:(_Bool)arg2;	// IMP=0x00100000000061f7
- (void)dragSessionDidEnd:(id)arg1;	// IMP=0x00100000000060fb
- (void)dragSessionWillEnd:(id)arg1;	// IMP=0x0010000000006061
- (void)dragSessionAnimateOutVisibleItems:(id)arg1;	// IMP=0x0010000000005fc9
- (void)dragSession:(id)arg1 removeVisibleDroppedItemsInSpaceOfContextID:(unsigned int)arg2 layerRenderID:(unsigned long long)arg3 replyingOnQueue:(id)arg4 with:(CDUnknownBlockType)arg5;	// IMP=0x0010000000005bf8
- (MISSING_TYPE *)dragSession:findVisibleDroppedItemsReplyingOnQueue:with: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000005982
- (_Bool)dragSession:(id)arg1 destinationIsSystemConnection:(int)arg2;	// IMP=0x001000000000595d
- (void)resetDestinationClientForDragSession:(id)arg1;	// IMP=0x001000000000576a
- (void)dragSession:(id)arg1 updatedPotentialDrop:(id)arg2 forDestinationClient:(id)arg3;	// IMP=0x0010000000005575
- (void)dragSession:(id)arg1 addedItemCount:(unsigned long long)arg2;	// IMP=0x001000000000533a
- (void)dragSession:(id)arg1 invalidateImageForClient:(id)arg2 itemIndex:(unsigned long long)arg3;	// IMP=0x00100000000051da
- (void)dragSession:(id)arg1 updateDragItems:(id)arg2 forClient:(id)arg3 withFence:(id)arg4;	// IMP=0x00100000000048da
- (oneway void)sawFirstDragEventWithSessionID:(unsigned int)arg1 systemPolicy:(_Bool)arg2 destination:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000000401b
- (oneway void)beginDragWithClientSession:(id)arg1 configuration:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000000310c
- (oneway void)warmUp;	// IMP=0x001000000000303c
- (void)xpcQueue_acceptNewDestinationConnection:(id)arg1;	// IMP=0x0010000000002b04
- (_Bool)xpcQueue_shouldAcceptNewDestinationConnection:(id)arg1;	// IMP=0x0010000000002a36
- (_Bool)xpcQueue_canAcceptDestinationConnection:(id)arg1;	// IMP=0x0010000000002a29
- (void)xpcQueue_acceptNewSourceConnection:(id)arg1;	// IMP=0x0010000000002459
- (_Bool)xpcQueue_shouldAcceptNewSourceConnection:(id)arg1;	// IMP=0x001000000000238b
- (_Bool)xpcQueue_canCreateNewDragSessionWithSourceConnection:(id)arg1;	// IMP=0x001000000000237e
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0010000000002304
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;	// IMP=0x0010000000002018
- (id)init;	// IMP=0x0010000000001bfb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

