//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDRouteManager, TUCallCenter;
@protocol OS_dispatch_queue, OS_dispatch_source, TUCallContainerPrivate;

@interface CSDCallStateMonitor : NSObject
{
    _Bool _audioMutedForHoldMusic;	// 8 = 0x8
    int _requestCLTMThrottleUncapToken;	// 12 = 0xc
    int _lockStateNotificationToken;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_callDurationLimitTimer;	// 32 = 0x20
    CDUnknownBlockType _setUpBreakBeforeMakeTimeout;	// 40 = 0x28
}

+ (double)breakBeforeMakeTimeout;	// IMP=0x002000000004e3d7
- (void).cxx_destruct;	// IMP=0x00200000000515b8
@property(copy, nonatomic) CDUnknownBlockType setUpBreakBeforeMakeTimeout; // @synthesize setUpBreakBeforeMakeTimeout=_setUpBreakBeforeMakeTimeout;
@property(nonatomic) int lockStateNotificationToken; // @synthesize lockStateNotificationToken=_lockStateNotificationToken;
@property(nonatomic) int requestCLTMThrottleUncapToken; // @synthesize requestCLTMThrottleUncapToken=_requestCLTMThrottleUncapToken;
@property(nonatomic, getter=isAudioMutedForHoldMusic) _Bool audioMutedForHoldMusic; // @synthesize audioMutedForHoldMusic=_audioMutedForHoldMusic;
@property(retain) NSObject<OS_dispatch_source> *callDurationLimitTimer; // @synthesize callDurationLimitTimer=_callDurationLimitTimer;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void)setHeySiriEnabled:(_Bool)arg1;	// IMP=0x0010000000051536
- (void)_updateCallMutingForHoldMusic;	// IMP=0x001000000005114c
- (void)_handleCallDurationTimerFired;	// IMP=0x0010000000050d11
- (void)_setUpCallDurationLimitIfNecessary;	// IMP=0x00100000000508f9
- (void)_handleAudioReadyForCall:(id)arg1;	// IMP=0x00100000000506e4
- (void)_setUpBreakBeforeMakeTimeoutIfNecessaryForCall:(id)arg1;	// IMP=0x0010000000050289
- (void)_pushCallToAlternateDestinationIfNecessary:(id)arg1;	// IMP=0x001000000004fe3f
- (void)_disconnectOrPullExistingCallsForCallIfNecessary:(id)arg1;	// IMP=0x001000000004f9ea
- (void)_notifyCLTMOfIncomingCall;	// IMP=0x001000000004f90f
- (void)_handleLockStateChanged;	// IMP=0x001000000004f909
- (void)enableEmergencyModeIfNecessaryForCall:(id)arg1;	// IMP=0x001000000004f7b3
- (void)_handleCallWantsHoldMusicChanged:(id)arg1;	// IMP=0x001000000004f7a1
- (void)_handleCallMayRequireBreakBeforeMakeChanged:(id)arg1;	// IMP=0x001000000004f78f
- (void)disconnectActiveCallsBasedOnCallStatusForCall:(id)arg1;	// IMP=0x001000000004f3f6
- (void)disconnectAllCallsBesides:(id)arg1;	// IMP=0x001000000004f0d1
- (void)_handleCallConnected:(id)arg1;	// IMP=0x001000000004efc2
- (void)handleCallUpgradedToVideoNotification:(id)arg1;	// IMP=0x001000000004ee1a
- (void)handleCallOneToOneModeChangedNotification:(id)arg1;	// IMP=0x001000000004ebea
- (void)callIsOnHoldChangedNotification:(id)arg1;	// IMP=0x001000000004eaac
- (void)_handleCallStartedConnecting:(id)arg1;	// IMP=0x001000000004e9cc
- (void)_handleCallStatusChanged:(id)arg1;	// IMP=0x001000000004e472
- (void)_handleCallHasStartedOutgoingChanged:(id)arg1;	// IMP=0x001000000004e460
- (_Bool)wantsBreakBeforeMakeForCall:(id)arg1;	// IMP=0x001000000004e147
@property(readonly, nonatomic) CSDRouteManager *routeManager;
@property(readonly, nonatomic) id <TUCallContainerPrivate> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x001000000004e0b4
- (void)handleCallMayRequireBreakBeforeMakeChangedNotification:(id)arg1;	// IMP=0x001000000004e065
- (void)handleCallConnectedNotification:(id)arg1;	// IMP=0x001000000004e016
- (void)handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x001000000004dfc7
- (void)handleCallStatusChangedNotification:(id)arg1;	// IMP=0x001000000004df78
- (void)handleCallHasStartedOutgoingChangedNotification:(id)arg1;	// IMP=0x001000000004df29
- (void)dealloc;	// IMP=0x001000000004de48
- (id)initWithCallCenter:(id)arg1;	// IMP=0x001000000004d9af

@end

