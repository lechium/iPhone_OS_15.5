//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDCarPlayManager, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRelayMessagingController, CSDRouteController, CSDVoIPApplicationController, NSNumber, NSString, TUCallCenter, TUCarPlayHardwareControlsBroadcaster;
@protocol CSDProcessObserverProtocol, OS_dispatch_queue, TUCallContainerPrivate, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryManager *_callHistoryManager;	// 8 = 0x8
    CSDCallProviderManager *_callProviderManager;	// 16 = 0x10
    CSDCallController *_callController;	// 24 = 0x18
    CSDVoIPApplicationController *_voipApplicationController;	// 32 = 0x20
    CSDRelayMessagingController *_relayMessagingController;	// 40 = 0x28
    CSDRecentsController *_recentsController;	// 48 = 0x30
    CSDAudioController *_audioController;	// 56 = 0x38
    CSDAudioArbitrationController *_audioArbitrationController;	// 64 = 0x40
    CSDRouteController *_localRouteController;	// 72 = 0x48
    CSDRouteController *_pairedHostDeviceRouteController;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_queue;	// 88 = 0x58
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 96 = 0x60
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 104 = 0x68
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 112 = 0x70
    id <TUFeatureFlags> _featureFlags;	// 120 = 0x78
    CSDRelayCallDataSource *_relayCallDataSource;	// 128 = 0x80
    CSDRelayCallDelegate *_relayCallDelegate;	// 136 = 0x88
    CSDClientManager *_clientManager;	// 144 = 0x90
    TUCarPlayHardwareControlsBroadcaster *_carPlayHardwareControlsBroadcaster;	// 152 = 0x98
    id <CSDProcessObserverProtocol> _processObserver;	// 160 = 0xa0
    CSDCarPlayManager *_carPlayManager;	// 168 = 0xa8
    CDUnknownBlockType _clientInvalidationHandler;	// 176 = 0xb0
    CSDProviderCallDataSource *_providerCallDataSource;	// 184 = 0xb8
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 192 = 0xc0
}

- (void).cxx_destruct;	// IMP=0x002000000013fdbf
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) CSDCarPlayManager *carPlayManager; // @synthesize carPlayManager=_carPlayManager;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUCarPlayHardwareControlsBroadcaster *carPlayHardwareControlsBroadcaster; // @synthesize carPlayHardwareControlsBroadcaster=_carPlayHardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) CSDRelayMessagingController *relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
- (_Bool)isInCallUIActive;	// IMP=0x001000000013fac0
- (void)updateAudioArbitration;	// IMP=0x001000000013faba
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x001000000013f9f4
- (void)didChangeRelayCallingCapabilities;	// IMP=0x001000000013f97e
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x001000000013f90c
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013f7d2
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x001000000013f6df
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x001000000013f49b
- (id)currentCallsForClient:(id)arg1;	// IMP=0x001000000013f3d7
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x001000000013f342
- (id)currentProxyCalls;	// IMP=0x001000000013f128
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x001000000013f0b6
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000013ef79
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000013ee3c
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000013eccc
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x001000000013ebc9
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000013e9de
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000013e7c8
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000013e6d3
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000013e4e8
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000013e3ee
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000013e1c3
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x001000000013e005
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x001000000013de47
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000013dcef
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000013db6c
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000013d99c
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000013d7cc
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000013d64a
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x001000000013d553
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x001000000013d027
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x001000000013cde9
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x001000000013cba8
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x001000000013c948
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x001000000013c706
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x001000000013c4ef
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x001000000013c2f8
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000013c0c2
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x001000000013bfb0
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x001000000013be92
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013bc58
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x001000000013badf
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013b90f
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x001000000013b7fa
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000013b681
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013b3c0
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013b0ff
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013ade6
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013ab25
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013a84c
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000013a6d3
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000013a3b0
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000013a237
- (oneway void)pullRelayingCallsFromClient;	// IMP=0x001000000013a118
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x0010000000139f53
- (oneway void)disconnectAllCalls;	// IMP=0x0010000000139e3e
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x0010000000139d29
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000139a42
- (oneway void)swapCalls;	// IMP=0x001000000013992d
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013966a
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013927b
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000138fb8
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001389be
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001386fb
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000138438
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x001000000013802a
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000137f41
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000137d69
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001379e1
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x0010000000137687
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x00100000001375d3
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x001000000013736a
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000137117
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x00100000001370a5
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000136fa1
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x0010000000136d2a
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x0010000000136b52
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000136aca
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x0010000000136a58
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x0010000000136789
- (void)performDisconnectAllCalls;	// IMP=0x00100000001364a0
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x001000000013590c
- (void)performDisconnectCall:(id)arg1;	// IMP=0x0010000000135553
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001354cf
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013544b
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000134bbf
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013438c
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000133cb0
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x0010000000133adc
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000013387d
- (void)performSwapCalls;	// IMP=0x0010000000133252
- (void)performUngroupCall:(id)arg1;	// IMP=0x0010000000132ea0
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x0010000000132ab8
- (void)performUnholdCall:(id)arg1;	// IMP=0x00100000001328ca
- (void)performHoldCall:(id)arg1;	// IMP=0x00100000001326dc
- (id)performJoinConversation:(id)arg1;	// IMP=0x00100000001325bb
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000013245c
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x00100000001321f1
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x0010000000132141
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x0010000000131a0b
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001318cc
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x001000000013184b
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x0010000000131785
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000131711
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000131623
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000013150c
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000013133b
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x001000000013129e
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000130e56
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x0010000000130bda
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x001000000013071b
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x0010000000130573
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x001000000013041f
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x00100000001302dd
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x0010000000130194
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x0010000000130003
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x001000000012fe9f
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x001000000012fd91
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x001000000012fc4f
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x001000000012fae5
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x001000000012f98f
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x001000000012f84d
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x001000000012f729
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x001000000012f5e1
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x001000000012f478
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x001000000012f0c0
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x001000000012efa0
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x001000000012ee1c
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x001000000012eca7
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x001000000012eb65
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x001000000012ea23
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x001000000012e7a3
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x001000000012e78e
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x001000000012e777
- (void)resetClientCallProvisionalStates;	// IMP=0x001000000012e67a
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x001000000012e3cf
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x001000000012e0b8
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000012e03e
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000012de52
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x001000000012d85f
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x001000000012d614
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x001000000012d43f
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x001000000012cf7a
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x001000000012cf74
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x001000000012cb6b
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x001000000012c997
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x001000000012c844
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x001000000012bfec
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x001000000012bd68
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x001000000012bcc1
- (void)_requestCallStateFromHost;	// IMP=0x001000000012bcbb
- (void)_handleRelayCallingChanged;	// IMP=0x001000000012b724
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
- (id)callFilterManager;	// IMP=0x001000000012b69f
@property(readonly, nonatomic) id <TUCallContainerPrivate> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)dealloc;	// IMP=0x001000000012b4eb
- (void);	// IMP=0x001000000012b4ae
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2;	// IMP=0x001000000012932c
- (id)initWithQueue:(id)arg1;	// IMP=0x00100000001292c8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

