//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKRecord, GKCloudPlayer, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSString, NSURL;

@interface GKCloudGameSession : NSObject
{
    CKRecord *_record;	// 8 = 0x8
    NSDictionary *_playersByIdentifier;	// 16 = 0x10
    GKCloudPlayer *_owner;	// 24 = 0x18
    NSURL *_url;	// 32 = 0x20
}

+ (void)badgeCountForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0020000000151099
+ (void)updateBadgeCountsForContainerName:(id)arg1 useCacheDirectly:(_Bool)arg2;	// IMP=0x0010000000150c8a
+ (void)updateBadgeCountsForContainerName:(id)arg1;	// IMP=0x0010000000150c76
+ (void)deleteInviteRecordWithRecordID:(id)arg1 fromDatabase:(id)arg2;	// IMP=0x00100000001508d7
+ (void)searchAndSaveIdentityForRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014f1ce
+ (id)lastSevenDigits:(id)arg1;	// IMP=0x001000000014f166
+ (id)formattedContact:(id)arg1;	// IMP=0x001000000014eff0
+ (void)saveInviteRecord:(id)arg1 database:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014e666
+ (void)getAssociatedAccountsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014e41e
+ (id)msgServiceQueue;	// IMP=0x001000000014e3c7
+ (void)generateAndStoreInviteBulletinForRecord:(id)arg1 database:(id)arg2;	// IMP=0x001000000014d693
+ (id)packFakeTurnBasedBulletinWithZoneData:(id)arg1;	// IMP=0x001000000014d191
+ (id)packFakeRealTimeBulletinWithZoneData:(id)arg1;	// IMP=0x001000000014c604
+ (void)reportPlayerStateChangesToClients:(id)arg1 forUpdatedSession:(id)arg2 oldSession:(id)arg3;	// IMP=0x001000000014b188
+ (void)openStoreForBundleID:(id)arg1;	// IMP=0x0010000000149a79
+ (void)launchOrOpenAppStoreForBundleID:(id)arg1;	// IMP=0x0010000000149a2b
+ (void)acceptShareMetadata:(id)arg1 retryCount:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000149089
+ (void)showAcceptAlertWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000148f04
+ (void)handleLegacyShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000148414
+ (void)handleSessionShareMetadata:(id)arg1 needsAccept:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000147b6e
+ (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014737a
+ (void)acceptShareURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000147000
+ (void)saveInformationForPrimaryUserForSessionWithShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001466ec
+ (void)fetchShareMetadataForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000146289
+ (void)fetchShareRecordsWithRecordIDs:(id)arg1 inDatabase:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000146160
+ (id)cloudKitOperationConfigurationForSocialGamingSessionsContainer;	// IMP=0x0010000000144fb5
+ (id)cloudKitOperationConfigurationForContainer:(id)arg1;	// IMP=0x0010000000144f2b
+ (void)subscribeToAllDBwithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000144a29
+ (void)getZoneNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014444b
+ (void)createZoneWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014425b
+ (void)bundleIDsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000143060
+ (void)removeSessionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000142821
+ (void)createSessionWithContainerName:(id)arg1 title:(id)arg2 maxConnectedPlayers:(long long)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000141bd6
+ (_Bool)isCloudDriveEnabledForBundleID:(id)arg1;	// IMP=0x00100000001418b0
+ (id)databaseForZoneID:(id)arg1;	// IMP=0x0010000000141864
+ (id)databaseForSession:(id)arg1;	// IMP=0x0010000000141815
+ (id)sharedDatabase;	// IMP=0x00100000001417b7
+ (id)privateDatabase;	// IMP=0x0010000000141759
+ (_Bool)isOwnZoneID:(id)arg1;	// IMP=0x001000000014163a
+ (_Bool)isOwnRecordID:(id)arg1;	// IMP=0x00100000001415e4
+ (id)recordIDForSessionIdentifier:(id)arg1;	// IMP=0x0010000000141395
+ (id)sessionIdentifierForRecordID:(id)arg1;	// IMP=0x00100000001411b3
+ (id)allowedCharacterSet;	// IMP=0x00100000001410f2
+ (void)getFriendPlayersWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000140a3e
+ (void)updateFriendRecordIfNeeded;	// IMP=0x0010000000140201
+ (void)updateFriendsWithRecord:(id)arg1;	// IMP=0x001000000013fb0e
+ (void)updateCacheForFriendZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000013f5a6
+ (void)updatePlayersForSessions:(id)arg1 sharesByRecordID:(id)arg2 inDatabase:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000013e073
+ (void)primaryPlayerWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000013dfb2
+ (id)playerIdentifierForUserRecordName:(id)arg1;	// IMP=0x001000000013dee5
+ (id)localPlayerAlias;	// IMP=0x001000000013dca7
+ (void)determinePlayerChangesIn:(id)arg1 newSession:(id)arg2 notifyClients:(id)arg3;	// IMP=0x001000000013d4a0
+ (void)reportChangesForSessions:(id)arg1 shareChangedSessions:(id)arg2 removedSessions:(id)arg3 zoneID:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000013c518
+ (id)allChangedSessionsFromRecordChangedSessions:(id)arg1 shareChangedSessions:(id)arg2;	// IMP=0x001000000013c06c
+ (void)updateCacheForDatabase:(id)arg1 zoneIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000013a5ff
+ (void)updateCacheForDatabaseScope:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000138f63
+ (void)updateCacheForZoneID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000138b8b
+ (void)updateSessionCacheDatabasesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001387c7
+ (void)updateSessionCacheWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000138352
+ (void)updateUserWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001382e0
+ (void)fetchUserRecordIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000138263
+ (id)friendEmailsByID;	// IMP=0x0010000000138213
+ (void)sessionForShareMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000138177
+ (void)sessionsForContainerName:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000137dbf
+ (void)sessionForIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000137999
+ (id)cacheQueue;	// IMP=0x0010000000137942
+ (id)sessionCache;	// IMP=0x00100000001378ed
+ (id)AES128Operation:(unsigned int)arg1 key:(id)arg2 data:(id)arg3;	// IMP=0x001000000013779a
+ (id)AES128DecryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x0010000000137780
+ (id)AES128EncryptedVersionOfData:(id)arg1 withKey:(id)arg2;	// IMP=0x0010000000137769
+ (id)playerIdentifierForObfuscatedIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x0010000000137668
+ (id)obfuscatedIdentifierForPlayerIdentifier:(id)arg1 containerName:(id)arg2;	// IMP=0x001000000013757d
+ (id)mutablePlistFromPlayerStatesData:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000136778
+ (_Bool)supportsSecureCoding;	// IMP=0x0010000000135c0f
- (void).cxx_destruct;	// IMP=0x00200000001522a8
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSDictionary *playersByIdentifier; // @synthesize playersByIdentifier=_playersByIdentifier;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void)setBadged:(_Bool)arg1 forPlayerIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001518d3
- (void)saveConnectionState:(long long)arg1 forPlayerWithID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014bd0e
- (void)tempEmailFixForPlayerID:(id)arg1;	// IMP=0x001000000014bb87
@property(readonly, nonatomic) NSArray *connectedPlayerIDs;
- (void)removePlayers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014a517
- (void)deleteShareWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014a16a
- (void)fetchShareRecordWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000145f71
- (void)saveShare:(id)arg1 isNewShare:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000145ae0
- (void)setupShareWithRecordID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000145879
- (void)getShareURLWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000145092
- (void)saveWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000143f57
- (void)saveData:(id)arg1 changeTag:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001436ac
@property(readonly, nonatomic) NSString *containerName;
- (id)playersForGKGameSession;	// IMP=0x001000000013ef72
- (id)players;	// IMP=0x001000000013ef22
- (void)setPlayers:(id)arg1;	// IMP=0x001000000013ed19
- (void)updatePlayersWithIdentities:(id)arg1;	// IMP=0x001000000013ea10
- (id)createGKGameSession;	// IMP=0x0010000000136e9e
@property(retain, nonatomic) NSMutableDictionary *nicknamesByIdentifier; // @dynamic nicknamesByIdentifier;
@property(retain, nonatomic) NSMutableDictionary *emailsByCKID;
@property(readonly, nonatomic) NSDictionary *playersByEmail;
- (id)playerStates;	// IMP=0x00100000001367c8
- (void)setPlayerStates:(id)arg1;	// IMP=0x00100000001366ff
@property(readonly, nonatomic) NSString *serverChangeTag;
@property(readonly, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property(readonly, nonatomic) NSDate *lastModifiedDate;
- (void);	// IMP=0x00100000001363f5
@property(retain, nonatomic) NSData *data;
@property(nonatomic) long long maxConnectedPlayers;
@property(retain, nonatomic) NSString *title;
@property(readonly, nonatomic) NSString *identifier;
- (_Bool)isOwnedByUser;	// IMP=0x00100000001360e0
- (id)description;	// IMP=0x0010000000135fb0
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0010000000135ecd
- (id)initWithCoder:(id)arg1;	// IMP=0x0010000000135c17
- (id)initWithRecord:(id)arg1;	// IMP=0x0010000000135ba7
- (id)initWithContainerName:(id)arg1;	// IMP=0x0010000000135af3

@end

