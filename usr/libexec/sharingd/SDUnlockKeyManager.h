//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSDate, NSObject, NSString, NSTimer, SDUnlockKeyMetricDates, SDUnlockSessionRecord;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SDUnlockKeyManager
{
    _Bool _useEscrowRecord;	// 8 = 0x8
    _Bool _remoteDeviceLocked;	// 9 = 0x9
    _Bool _ltkWaitingForUnlock;	// 10 = 0xa
    _Bool _outstandingStartLTK;	// 11 = 0xb
    _Bool _unlockingForKeybagUnlock;	// 12 = 0xc
    _Bool _needsOffWristBeforePairedUnlock;	// 13 = 0xd
    _Bool _wasInLockScreen;	// 14 = 0xe
    _Bool _autoUnlockEnabledUpdatedAfterFirstUnlock;	// 15 = 0xf
    _Bool _waitingForAutoUnlockStateUpdateToStartPairedUnlock;	// 16 = 0x10
    long long _unlockingState;	// 24 = 0x18
    NSTimer *_stashTimer;	// 32 = 0x20
    NSDate *_deviceSwitchUnlockRetryDate;	// 40 = 0x28
    MISSING_TYPE *_delayedStartTimer;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_stateTimer;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_longTermKeyTimer;	// 64 = 0x40
    SDUnlockSessionRecord *_sessionRecord;	// 72 = 0x48
    SDUnlockKeyMetricDates *_metricDates;	// 80 = 0x50
    CDUnknownBlockType _stashHandler;	// 88 = 0x58
    CDUnknownBlockType _stateHandler;	// 96 = 0x60
}

+ (id)sharedKeyManager;	// IMP=0x00200000001dd530
- (void).cxx_destruct;	// IMP=0x00200000001e65f3
@property(copy) CDUnknownBlockType stateHandler; // @synthesize stateHandler=_stateHandler;
@property(copy) CDUnknownBlockType stashHandler; // @synthesize stashHandler=_stashHandler;
@property(retain) SDUnlockKeyMetricDates *metricDates; // @synthesize metricDates=_metricDates;
@property(retain) SDUnlockSessionRecord *sessionRecord; // @synthesize sessionRecord=_sessionRecord;
@property(retain) NSObject<OS_dispatch_source> *longTermKeyTimer; // @synthesize longTermKeyTimer=_longTermKeyTimer;
@property(retain) NSObject<OS_dispatch_source> *stateTimer; // @synthesize stateTimer=_stateTimer;
@property(retain) NSObject<OS_dispatch_source> *delayedStartTimer; // @synthesize delayedStartTimer=_delayedStartTimer;
@property(retain) NSDate *deviceSwitchUnlockRetryDate; // @synthesize deviceSwitchUnlockRetryDate=_deviceSwitchUnlockRetryDate;
@property _Bool waitingForAutoUnlockStateUpdateToStartPairedUnlock; // @synthesize waitingForAutoUnlockStateUpdateToStartPairedUnlock=_waitingForAutoUnlockStateUpdateToStartPairedUnlock;
@property _Bool autoUnlockEnabledUpdatedAfterFirstUnlock; // @synthesize autoUnlockEnabledUpdatedAfterFirstUnlock=_autoUnlockEnabledUpdatedAfterFirstUnlock;
@property _Bool wasInLockScreen; // @synthesize wasInLockScreen=_wasInLockScreen;
@property _Bool needsOffWristBeforePairedUnlock; // @synthesize needsOffWristBeforePairedUnlock=_needsOffWristBeforePairedUnlock;
@property _Bool unlockingForKeybagUnlock; // @synthesize unlockingForKeybagUnlock=_unlockingForKeybagUnlock;
@property _Bool outstandingStartLTK; // @synthesize outstandingStartLTK=_outstandingStartLTK;
@property _Bool ltkWaitingForUnlock; // @synthesize ltkWaitingForUnlock=_ltkWaitingForUnlock;
@property _Bool remoteDeviceLocked; // @synthesize remoteDeviceLocked=_remoteDeviceLocked;
@property(retain) NSTimer *stashTimer; // @synthesize stashTimer=_stashTimer;
@property _Bool useEscrowRecord; // @synthesize useEscrowRecord=_useEscrowRecord;
- (void)consolidateLatencies:(id)arg1;	// IMP=0x00100000001e5d19
- (void)initializeMetrics;	// IMP=0x00100000001e59f1
- (_Bool)initiateStashBagCreationWithManifest:(id)arg1;	// IMP=0x00100000001e5806
- (void)initiateRemoteUnlock;	// IMP=0x00100000001e4e25
- (_Bool)startUnlockIfNeeded;	// IMP=0x00100000001e4d73
- (_Bool)shouldUseTwoPartPill;	// IMP=0x00100000001e4d33
- (_Bool)shouldStartUnlock;	// IMP=0x00100000001e4c07
- (_Bool)pairedWatchSupportsRelock;	// IMP=0x00100000001e4ad6
- (void)sendRelockRequestWithReset:(_Bool)arg1;	// IMP=0x00100000001e489b
- (void)sendStateRequest;	// IMP=0x00100000001e4615
- (void)sendStashToken:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x00100000001e43b7
- (void)sendStashKeyRequest:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x00100000001e4159
- (void)sendSessionAuthenticationToken:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x00100000001e3e96
- (void)sendSessionKeyExchangeRequest:(id)arg1 usedEscrow:(_Bool)arg2 sessionID:(unsigned int)arg3;	// IMP=0x00100000001e3c79
- (void)sendSetupCreateEscrowRecordWithSessionID:(unsigned int)arg1 stepData:(id)arg2 errorCode:(long long)arg3;	// IMP=0x00100000001e3ae3
- (void)sendSetupSessionCreatedWithLocalKey:(id)arg1 stepData:(id)arg2 sessionID:(unsigned int)arg3 errorCode:(long long)arg4;	// IMP=0x00100000001e390e
- (void)sendClassALongTermKeyResponse:(id)arg1 sessionID:(unsigned int)arg2 errorCode:(unsigned int)arg3;	// IMP=0x00100000001e3773
- (void)sendLongTermKeyResponse:(id)arg1 requestID:(id)arg2;	// IMP=0x00100000001e357f
- (void)sendStartLTKTransfer;	// IMP=0x00100000001e3380
- (void)handleUnlockStateResponse:(id)arg1;	// IMP=0x00100000001e30e1
- (void)handleStashConfirmation:(id)arg1;	// IMP=0x00100000001e2f6b
- (void)handleStashKeyExchangeResponse:(id)arg1;	// IMP=0x00100000001e2c29
- (void)handleResetState:(id)arg1;	// IMP=0x00100000001e2afa
- (void)handleUnlockConfirmation:(id)arg1;	// IMP=0x00100000001e26b1
- (void)handleSessionKeyExchangeResponse:(id)arg1;	// IMP=0x00100000001e20d3
- (void)handleCreateEscrowSecret:(id)arg1;	// IMP=0x00100000001e1d17
- (void)handleEscrowSessionRequest:(unsigned int)arg1 withUpdatedLongTermKey:(_Bool)arg2;	// IMP=0x00100000001e1a36
- (void)handleSetupRequest:(id)arg1;	// IMP=0x00100000001e17c1
- (_Bool)updateLongTermKey:(id)arg1;	// IMP=0x00100000001e1688
- (void)handleClassALongTermKeyRequest:(id)arg1;	// IMP=0x00100000001e1422
- (void)handleLongTermKeyRequest:(id)arg1;	// IMP=0x00100000001e1361
- (void)handleRemoteLockStateChanged:(id)arg1;	// IMP=0x00100000001e0ff1
- (void)idsControllerNearbyStateChanged:(id)arg1;	// IMP=0x00100000001e0f80
- (void)idsController:(id)arg1 didReceiveProtoData:(id)arg2 forType:(unsigned short)arg3;	// IMP=0x00100000001e0d73
- (id)stringForState:(long long)arg1;	// IMP=0x00100000001e0d3a
@property long long unlockingState; // @synthesize unlockingState=_unlockingState;
- (void)resetState;	// IMP=0x00100000001e09bb
- (void)resetAndClearState;	// IMP=0x00100000001e0981
- (void)resetSetupState;	// IMP=0x00100000001e0947
- (void)notifyStashStateWithError:(id)arg1;	// IMP=0x00100000001e0850
- (void)establishStashBagWithManifest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001e05b0
- (void)establishStashBagWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000001e033e
- (void)invalidateStashTimer;	// IMP=0x00100000001e02fc
- (void)stashTimerFired:(id)arg1;	// IMP=0x00100000001e0200
- (void)restartStashTimer;	// IMP=0x00100000001e0193
- (void)invalidateStateTimer;	// IMP=0x00100000001e0106
- (void)restartStateTimer;	// IMP=0x00100000001dfebb
- (void)notifyUnlockStateWithState:(id)arg1 error:(id)arg2;	// IMP=0x00100000001dfe72
- (void)unlockStateForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001dfd2c
- (void)syncUnlockEnabled:(_Bool)arg1;	// IMP=0x00100000001dfc51
- (_Bool)unlockEnabled;	// IMP=0x00100000001dfbd5
- (void)disableUnlockPairingForSecurityManager:(id)arg1;	// IMP=0x00100000001dfb16
- (void)disableUnlockPairing;	// IMP=0x00100000001dfb02
- (void)checkDevicePairingState;	// IMP=0x00100000001dfafc
- (void)handleActiveDeviceUpdated;	// IMP=0x00100000001df95a
- (void)releaseKeyBagAssertion;	// IMP=0x00100000001df8fe
- (void)takeMobileKeybagAssertion;	// IMP=0x00100000001df8a2
- (void)invalidateLongTermKeyTimer;	// IMP=0x00100000001df815
- (void)restartLongTermKeyTimer:(unsigned long long)arg1;	// IMP=0x00100000001df67f
- (void)invalidateDelayedStartTimer;	// IMP=0x00100000001df5f2
- (void)restartDelayedStartTimer:(unsigned long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001df426
- (void)newDeviceBecameActive:(id)arg1;	// IMP=0x00100000001df360
- (void)devicesDidFailToPair:(id)arg1;	// IMP=0x00100000001df2bb
- (void)devicesDidUnpair:(id)arg1;	// IMP=0x00100000001df216
- (void)bannerLockButtonWasTapped;	// IMP=0x00100000001defa2
- (void)bannerDidDismiss;	// IMP=0x00100000001ded20
- (void)handlePairedWatchWristStateChanged;	// IMP=0x00100000001deb50
- (void)beginUnlockIfNotOnLockScreen;	// IMP=0x00100000001de8b6
- (void)handleSystemUIChanged;	// IMP=0x00100000001de6cc
- (void)handleUILockStateChange;	// IMP=0x00100000001de444
- (void)keyBagLockStateChange:(id)arg1;	// IMP=0x00100000001de043
- (void)startLTKExchange;	// IMP=0x00100000001de008
- (void)handleAutoUnlockEnabledStateUpdated;	// IMP=0x00100000001ddd94
- (void)handleConfigState;	// IMP=0x00100000001ddcc8
- (void)deviceDidEnterConfigurationState:(id)arg1;	// IMP=0x00100000001ddbf1
- (id)generateDebugInfo;	// IMP=0x00100000001dd986
- (void)debugInfoRequested:(id)arg1;	// IMP=0x00100000001dd91c
- (void)addObservers;	// IMP=0x00100000001dd6bc
- (id)init;	// IMP=0x00100000001dd585

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

