//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDGroupStatusNotificationController, IDSDSessionInvitationManager, IDSDSessionMessenger, IDSDSessionSharedState, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, NSArray, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSString;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    unsigned long long _connectionClaimed;	// 80 = 0x50
    IDSConnectionContext *_connectionContext;	// 88 = 0x58
    unsigned int _currentGenerationCounter;	// 96 = 0x60
    _Bool _disallowCellularInterface;	// 100 = 0x64
    _Bool _disallowWifiInterface;	// 101 = 0x65
    NSDate *_endDate;	// 104 = 0x68
    NSMutableDictionary *_extraConnections;	// 112 = 0x70
    unsigned long long _extraConnectionCount;	// 120 = 0x78
    unsigned int _groupSessionState;	// 128 = 0x80
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 136 = 0x88
    int _idsDataChannelClientPID;	// 144 = 0x90
    unsigned long long _initialLinkType;	// 152 = 0x98
    NSString *_instanceID;	// 160 = 0xa0
    double _inviteRecvTime;	// 168 = 0xa8
    _Bool _joinGroupSessionPending;	// 176 = 0xb0
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 184 = 0xb8
    unsigned char _keyMaterial[60];	// 192 = 0xc0
    long long _linkProtocol;	// 256 = 0x100
    double _membershipChangeEventTime;	// 264 = 0x108
    double _newKeyEventTime;	// 272 = 0x110
    double _summaryReportBaseTime;	// 280 = 0x118
    double _joinSendStartTime;	// 288 = 0x120
    double _joinSendEndTime;	// 296 = 0x128
    double _joinRecvTime;	// 304 = 0x130
    double _joinStartTime;	// 312 = 0x138
    double _clientChannelConnectTime;	// 320 = 0x140
    double _firstMKMReceivedTime;	// 328 = 0x148
    double _firstMKMSentTime;	// 336 = 0x150
    double _firstPacketReceivedTime;	// 344 = 0x158
    struct *_packetBufferArray[8];	// 352 = 0x160
    unsigned long long _preferredAddressFamily;	// 416 = 0x1a0
    _Bool _preferCellularForCallSetup;	// 424 = 0x1a8
    NSNumber *_qrError;	// 432 = 0x1b0
    NSMutableArray *_qrEventsForRTCReports;	// 440 = 0x1b8
    NSNumber *_qrReason;	// 448 = 0x1c0
    unsigned int _reason;	// 456 = 0x1c8
    unsigned short _relayPort;	// 460 = 0x1cc
    _Bool _sessionStartedCalled;	// 462 = 0x1ce
    NSMutableData *_sessionInfoMetaData;	// 464 = 0x1d0
    _Bool _shouldAssertRealTimeMode;	// 472 = 0x1d8
    _Bool _sharedSessionHasJoined;	// 473 = 0x1d9
    _Bool _shouldConnectToQRServer;	// 474 = 0x1da
    NSData *_skeData;	// 480 = 0x1e0
    int _socketDescriptor;	// 488 = 0x1e8
    NSDate *_startDate;	// 496 = 0x1f0
    _Bool _supressClientNotifications;	// 504 = 0x1f8
    _Bool _verboseFunctionalLogging;	// 505 = 0x1f9
    _Bool _verbosePerformanceLogging;	// 506 = 0x1fa
    _Bool _multiplexerEnabled;	// 507 = 0x1fb
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 512 = 0x200
    double _channelDataCachedTime;	// 520 = 0x208
    _Bool _startedAsUPlusOneSession;	// 528 = 0x210
    _Bool _switchedToUPlusMany;	// 529 = 0x211
    _Bool _supportUnauthenticatedUser;	// 530 = 0x212
    unsigned int _currentSessionStateCounter;	// 532 = 0x214
    _Bool _isLightweightParticipant;	// 536 = 0x218
    _Bool _hasReportedReceivedMKM;	// 537 = 0x219
    NSString *_clientID;	// 544 = 0x220
    IDSDSessionInvitationManager *_invitationManager;	// 552 = 0x228
    IDSDSessionMessenger *_messenger;	// 560 = 0x230
    IDSDSessionSharedState *_sharedState;	// 568 = 0x238
    IDSDGroupStatusNotificationController *_groupStatusNotificationController;	// 576 = 0x240
}

- (void).cxx_destruct;	// IMP=0x0010000000111440
@property(retain, nonatomic) IDSDGroupStatusNotificationController *groupStatusNotificationController; // @synthesize groupStatusNotificationController=_groupStatusNotificationController;
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(nonatomic) _Bool sharedSessionHasJoined; // @synthesize sharedSessionHasJoined=_sharedSessionHasJoined;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) NSArray *requiredLackOfCapabilities;
@property(readonly, nonatomic) NSArray *requiredCapabilities;
- (unsigned long long)connectionCountHint;	// IMP=0x0010000000110fd0
- (_Bool)_useBTDatagramPipe;	// IMP=0x0010000000110f70
- (void)_setClientType:(long long)arg1;	// IMP=0x0010000000110f10
- (_Bool)isScreenSharingSession;	// IMP=0x0010000000110eb0
- (unsigned int)state;	// IMP=0x0010000000110e50
- (id)fromID;	// IMP=0x0010000000110de0
- (id)groupID;	// IMP=0x0010000000110d70
- (id)accountID;	// IMP=0x0010000000110d00
- (id)participantID;	// IMP=0x0010000000110c90
- (long long)clientType;	// IMP=0x0010000000110c30
- (_Bool)enableQuickRelay;	// IMP=0x0010000000110bd0
- (_Bool)isInitiator;	// IMP=0x0010000000110b70
- (id)uniqueID;	// IMP=0x0010000000110b00
- (id)destinationsLightweightStatus;	// IMP=0x0010000000110a90
- (id)destinations;	// IMP=0x0010000000110a20
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x0010000000110920
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x00100000001108c0
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x0010000000110830
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x00100000001107a0
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x0010000000110710
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x00100000001106a0
- (void)setRemoteBlob:(id)arg1;	// IMP=0x0010000000110610
- (void)receivedEndMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000110560
- (void)receivedSessionMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001104b0
- (void)receivedCancelMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000110400
- (void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0010000000110350
- (void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001102a0
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x00100000001101f0
- (void)declineInvitationWithData:(id)arg1 forceFromID:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x0010000000110120
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x00100000001100a0
- (void)declineInvitation;	// IMP=0x0010000000110050
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x001000000010ffd0
- (void)acceptInvitation;	// IMP=0x001000000010ff80
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x001000000010ff20
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x001000000010fea0
- (void)cancelInvitation;	// IMP=0x001000000010fe50
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x001000000010fdc0
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x001000000010fd30
- (void)sendCancelInvitationMessage;	// IMP=0x001000000010fcd0
- (void)invitationDeclined;	// IMP=0x001000000010fc70
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x001000000010fb60
- (void)didSessionReinitiated;	// IMP=0x001000000010fb50
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010ec10
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010df90
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010cd20
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010b880
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010b4e0
- (void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x001000000010af30
- (void)reinitiate;	// IMP=0x0010000000108fa0
- (void)registerMultiplexerTransport;	// IMP=0x00100000001088c0
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2 isLightweightParticipant:(_Bool)arg3;	// IMP=0x0010000000108110
- (id)_createGroupSessionActiveParticipantsFromParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x0010000000107900
- (void)_updateActiveLightweightParticipants:(id)arg1;	// IMP=0x00100000001073d0
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x0010000000106c90
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x0010000000106940
- (void)onURI2ParticipantIDMappingChange:(id)arg1 allocateResponse:(id)arg2;	// IMP=0x0010000000106320
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x0010000000105460
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x0010000000104f60
- (void)getParticipantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x0010000000104860
- (void)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x0010000000104160
- (void)requestEncryptionKeyForParticipantIDs:(id)arg1;	// IMP=0x0010000000103f00
- (void)hasOutdatedSKI:(id)arg1;	// IMP=0x0010000000103d40
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x00100000001033a0
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1;	// IMP=0x0010000000103210
- (void)InvalidateStableKeyMaterialInFrameworkCache:(id)arg1;	// IMP=0x0010000000102f80
- (void)recvStableKeyMaterialForFrameworkCache:(id)arg1;	// IMP=0x0010000000102990
- (void)invalidateKeyMaterialByKeyIndexes:(id)arg1;	// IMP=0x00100000001028f0
- (void)didSendKeyMaterial:(id)arg1 duration:(double)arg2;	// IMP=0x0010000000102870
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x0010000000102250
- (void)sendKeyMaterialMessageDataOverQR:(id)arg1 toDestination:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000101c00
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x00100000001009b0
- (void)leaveGroupSession:(id)arg1;	// IMP=0x00100000000ffa60
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x00100000000ff8e0
- (void)joinWithOptions:(id)arg1;	// IMP=0x00100000000fd220
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00100000000fcce0
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x00100000000fbe40
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x00100000000fb9c0
- (void)removeParticipantIDs:(id)arg1;	// IMP=0x00100000000faf10
- (void)manageDesignatedMembers:(id)arg1 withType:(unsigned short)arg2;	// IMP=0x00100000000fa3d0
- (void)updateMembers:(id)arg1 withContext:(id)arg2 messagingCapabilities:(id)arg3 triggeredLocally:(_Bool)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x00100000000f6aa0
- (_Bool)destinationsContainFromID:(id)arg1;	// IMP=0x00100000000f6380
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00100000000f62c0
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 status:(unsigned int)arg5;	// IMP=0x00100000000f6200
- (void)_sendSessionInfoResponseErrorToClient:(unsigned int)arg1;	// IMP=0x00100000000f60c0
- (void)terminateCallDueToIdleClientForLink:(id)arg1;	// IMP=0x00100000000f6080
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x00100000000f6000
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00100000000f5fb0
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00100000000f5f40
- (void)didReceiveBlockedIndicationForLink:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x00100000000f5ef0
- (void)link:(id)arg1 didReceivePluginDisconnect:(id)arg2;	// IMP=0x00100000000f5d80
- (void)link:(id)arg1 didReceiveRequestToPurgeRegistration:(id)arg2;	// IMP=0x00100000000f5ab0
- (void)link:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000f5a30
- (void)link:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000f59b0
- (void)link:(id)arg1 didReceiveSessionStateCounter:(unsigned int)arg2;	// IMP=0x00100000000f5960
- (void)link:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x00100000000f58e0
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00100000000f5870
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00100000000f5810
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x00100000000f5790
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x00100000000f5720
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00100000000f56d0
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00100000000f5680
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x00100000000f5630
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000f55e0
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000f5590
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00100000000f4010
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_727fadec *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000000f3f70
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x00100000000f3f00
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000000f3ac0
- (void)link:(id)arg1 didReceiveKeyMaterialMessageData:(id)arg2 fromParticipantIDs:(id)arg3 toParticipantID:(id)arg4;	// IMP=0x00100000000f3a00
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x00100000000f3990
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000000f3710
- (void)_sendQREventToAVC:(id)arg1;	// IMP=0x00100000000f3260
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x00100000000f2d70
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x00100000000f25a0
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x00100000000f1900
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x00100000000f08b0
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x00100000000f02d0
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x00100000000efef0
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x00100000000ef880
- (void)setRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x00100000000edd30
- (void)setPreferences:(id)arg1;	// IMP=0x00100000000ed810
- (void)setMuted:(_Bool)arg1;	// IMP=0x00100000000ed320
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00100000000ece30
- (id)connectDuration;	// IMP=0x00100000000ecc70
- (id)sessionDuration;	// IMP=0x00100000000ecb60
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x00100000000eca70
- (void)_notifyClientsSessionStopped;	// IMP=0x00100000000ec030
- (void)_cleanupSocketPairConnection;	// IMP=0x00100000000ebff0
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00100000000ebf70
- (id)_acceptedDeviceToken;	// IMP=0x00100000000eb9f0
- (id)_acceptedDeviceUniqueID;	// IMP=0x00100000000eb2f0
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x00100000000e9ef0
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x00100000000e92d0
- (void)_resetPreferences:(id)arg1;	// IMP=0x00100000000e8e40
- (void)_endSession;	// IMP=0x00100000000e6ee0
- (void)endSessionWithData:(id)arg1;	// IMP=0x00100000000e6be0
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x00100000000e6430
- (void)endSession;	// IMP=0x00100000000e63a0
- (void)reconnectSession;	// IMP=0x00100000000e60f0
- (void)_cleanupQuickRelaySession;	// IMP=0x00100000000e5d20
- (void)cleanupSession;	// IMP=0x00100000000e4660
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00100000000e4110
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e3f60
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e3f00
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00100000000e3e10
- (_Bool)shouldReportUPlusOneKey;	// IMP=0x00100000000e3dd0
- (id)getAppID;	// IMP=0x00100000000e3d60
- (id)getFromService;	// IMP=0x00100000000e3c40
- (id)getCallerCert;	// IMP=0x00000000000e3b00
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000000e3860
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00100000000e2fd0
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00100000000e2940
- (void)checkAndCallSessionStart;	// IMP=0x00100000000e2800
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00100000000e1fb0
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00100000000e1f10
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00100000000e1c20
- (void)startQRSession;	// IMP=0x00100000000e1bf0
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00100000000dfa80
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00100000000df980
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00100000000df170
- (void)_noteJoinNotificationWillSend;	// IMP=0x00100000000de070
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00100000000d7540
- (void)_sendLinkSelectionPreference:(id)arg1 linkScore:(id)arg2 ipPreference:(id)arg3;	// IMP=0x00100000000d7440
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00100000000d7420
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00100000000d6f20
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00100000000d64a0
- (void)unregisterPluginWithOptions:(id)arg1;	// IMP=0x00100000000d5de0
- (void)registerPluginWithOptions:(id)arg1;	// IMP=0x00100000000d5720
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00100000000d2e20
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00100000000d11f0
- (id)_extractFieldBytesFromMetadata:(const void *)arg1 ofSize:(unsigned int)arg2 packetBuffer:(CDStruct_727fadec *)arg3;	// IMP=0x00100000000c1810
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x00100000000beb90
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x00100000000bdcc0
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00100000000bd340
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_727fadec *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x00100000000bb130
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00100000000bae70
- (void)registerClientChannel;	// IMP=0x00100000000b9d20
- (void)_lightweightParticipantSync:(unsigned char)arg1;	// IMP=0x00100000000b9b40
- (void)reportMKMReceived:(double)arg1;	// IMP=0x00100000000b9320
- (void)_cleanupSessionConnection;	// IMP=0x00100000000b8d10
- (void)_reportRTC;	// IMP=0x00100000000b8380
- (id)buildRTCSummaryReport;	// IMP=0x00100000000b7f90
- (id)rtcNormalizeTime:(double)arg1;	// IMP=0x00100000000b7ef0
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x00100000000b7140
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x00100000000b2860
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x00100000000b2750
- (long long)_loggingFlags;	// IMP=0x00100000000b26d0
- (void)_selectDefaultMic;	// IMP=0x00100000000b26c0
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x001000000041b3d0
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x001000000041a850
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x001000000041a740
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x001000000041a630
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x001000000041a520
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x001000000041a410
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x001000000041a300
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x001000000041a1f0
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x001000000041a0e0
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x0010000000419fd0
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x0010000000419ec0
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x0010000000419d60
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x0010000000419c50
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x0010000000419b00
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x00100000004197c0
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x0010000000419590
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x00100000004194a0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

