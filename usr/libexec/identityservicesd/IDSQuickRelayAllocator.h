//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSPushHandler, MISSING_TYPE, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_source;

@interface IDSQuickRelayAllocator : NSObject
{
    IDSPushHandler *_pushHandler;	// 8 = 0x8
    NSMutableDictionary *_requestIDToSession;	// 16 = 0x10
    NSMutableDictionary *_sessionToAllocations;	// 24 = 0x18
    NSMutableArray *_sessionInfoRequiredKeys;	// 32 = 0x20
    NSMutableSet *_pendingRecipientsAcceptedSessions;	// 40 = 0x28
    NSMutableDictionary *_initiatorsAcceptedSessionsWithToken;	// 48 = 0x30
    NSMutableDictionary *_requestIDToAllocateTime;	// 56 = 0x38
    NSMutableDictionary *_allocateResponses;	// 64 = 0x40
    NSMutableDictionary *_requestIDToPreferredLocalInterface;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_responseCleanupTimer;	// 80 = 0x50
    struct os_unfair_lock_s _lock;	// 88 = 0x58
    NSMutableDictionary *_pushTokenToURIForGroup;	// 96 = 0x60
    NSMutableDictionary *_idsSessionIDToqrSessionID;	// 104 = 0x68
    NSDate *_timeBase;	// 112 = 0x70
}

+ (id)sharedInstance;	// IMP=0x0020000000427c20
- (void).cxx_destruct;	// IMP=0x002000000045d510
- (void)setRequestIDToSession:(id)arg1 idsSessionID:(id)arg2;	// IMP=0x001000000045d3f0
- (unsigned long long)getCountOfSessionToAllocations;	// IMP=0x001000000045d3c0
- (unsigned long long)getCountOfPendingRecipientsAcceptedSessions;	// IMP=0x001000000045d390
- (id)_getQuickRelayIPPreference:(unsigned long long)arg1;	// IMP=0x001000000045d300
- (void)_startCleanupTimer;	// IMP=0x001000000045cfb0
- (void)_cleanupResponses;	// IMP=0x001000000045c320
- (void)stopKeepAliveTimer:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x001000000045bd00
- (void)startKeepAliveTimer:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x001000000045b6a0
- (MISSING_TYPE *)_getResponse:relaySessionID: /* Error: Ran out of types for this method. */;	// IMP=0x001000000045acf0
- (id)_uuidFromNSStringToNSData:(id)arg1;	// IMP=0x001000000045ab40
- (id)_getGroupID:(id)arg1;	// IMP=0x001000000045a6f0
- (void)handler:(id)arg1 receivedOfflineMessagePendingForTopic:(id)arg2 messageContext:(id)arg3;	// IMP=0x001000000045a420
- (void)handler:(id)arg1 didReceiveMessage:(id)arg2 forTopic:(id)arg3 fromID:(id)arg4 messageContext:(id)arg5;	// IMP=0x0010000000459f60
- (void)enablePushHandler:(_Bool)arg1;	// IMP=0x00100000004598f0
- (id)_parseQuickRelayDefaults:(id)arg1 gropuID:(id)arg2;	// IMP=0x0010000000457b80
- (id)getSessionInfoFromDefaults:(id)arg1 groupID:(id)arg2;	// IMP=0x0010000000457ad0
- (id)_findAllocationForSessionID:(id)arg1 requestIDStr:(id)arg2;	// IMP=0x0010000000457660
- (id)_findAllocationListForSessionID:(id)arg1;	// IMP=0x00100000004575c0
- (id)_filterSelfAllocationsForSessionID:(id)arg1;	// IMP=0x0010000000457390
- (void)_removeAllAllocationsForSessionID:(id)arg1;	// IMP=0x00100000004569c0
- (void)_discardAllocation:(id)arg1;	// IMP=0x0010000000456260
- (void)_addAllocationForSession:(id)arg1 allocation:(id)arg2;	// IMP=0x0010000000455c80
- (void)invalidateAllocation:(id)arg1;	// IMP=0x0010000000455aa0
- (void)_invalidateSession:(id)arg1 isExpiryPurging:(_Bool)arg2;	// IMP=0x00100000004556e0
- (void)invalidateSession:(id)arg1 isExpiryPurging:(_Bool)arg2;	// IMP=0x0010000000455590
- (void)cleanUpCachedMappings:(id)arg1;	// IMP=0x0010000000455350
- (void)reportAWDAllocatorEvent:(unsigned int)arg1 relayProviderType:(long long)arg2 transport:(long long)arg3 localRAT:(unsigned int)arg4 duration:(unsigned long long)arg5 idsSessionID:(id)arg6 reportingDataBlob:(id)arg7 isInitiator:(_Bool)arg8;	// IMP=0x00100000004543e0
- (long long)getServerProviderForIDSSessionID:(id)arg1;	// IMP=0x0010000000454130
- (void)setInitiatorsAcceptedToken:(id)arg1 pushToken:(id)arg2;	// IMP=0x0010000000453cd0
- (void)requestAllocationForRecipient:(id)arg1;	// IMP=0x0010000000452890
- (id)getPushTokenForRelaySessionID:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x00100000004521a0
- (id)getRelaySessionIDForIDSSessionID:(id)arg1 pushToken:(id)arg2;	// IMP=0x0010000000451970
- (id)_uriToParticipantID:(id)arg1;	// IMP=0x0010000000450f00
- (void)_storeMappingFromPushTokenToURIs:(id)arg1 fromID:(id)arg2 service:(id)arg3 cert:(id)arg4 forGroup:(id)arg5;	// IMP=0x0010000000450840
- (void)_startQRConnectionForSession:(id)arg1 isInitiatorsAcceptedSession:(_Bool)arg2 withLocalInterfacePreference:(int)arg3;	// IMP=0x001000000044efc0
- (id)_getStatusMessageFromStatusCode:(unsigned long long)arg1;	// IMP=0x001000000044ee50
- (void)_sendAWDMetricsForAllocation:(id)arg1 status:(long long)arg2 hasRecipientAccepted:(_Bool)arg3;	// IMP=0x001000000044e2e0
- (void)_processAllocationStatusResult:(id)arg1;	// IMP=0x001000000044cf20
- (unsigned int)_getErrorCodeFromAllocationStatus:(int)arg1;	// IMP=0x001000000044ce00
- (_Bool)_hasSessionInfoRequiredKeys:(id)arg1;	// IMP=0x001000000044c8f0
- (void)_setSessionInfoRequiredKeys;	// IMP=0x001000000044c720
- (id)_createSessionInfoFromResponsePayload:(id)arg1;	// IMP=0x0010000000448b10
- (id)_getCombinedSoftwareID:(id)arg1;	// IMP=0x0010000000448780
- (void)_processSelfAllocations:(id)arg1 allocation:(id)arg2;	// IMP=0x0010000000447b30
- (_Bool)_isDuplicateResponse:(id)arg1 newResponse:(id)arg2;	// IMP=0x00100000004474f0
- (void)_handleIncomingAllocateResponse:(id)arg1 isFromCache:(_Bool)arg2 requestOptions:(id)arg3;	// IMP=0x0010000000440920
- (id)getAdditionalAllocationForAddress:(id)arg1 selfAddress:(unsigned int)arg2 relaySessionID:(id)arg3 allocateType:(long long)arg4 qrReason:(unsigned short)arg5 previousTime:(unsigned long long)arg6 previousError:(unsigned short)arg7 previousRelayIP:(unsigned int)arg8 previousAccessToken:(id)arg9 requestSelfAllocation:(_Bool)arg10 isSessionIDRemoteDeviceID:(_Bool)arg11 withPreferredRemoteInterface:(int)arg12 withPreferredLocalInterface:(int)arg13;	// IMP=0x001000000043e5b0
- (_Bool)isURIAvailabeInAllocateResponse:(id)arg1 uri:(id)arg2;	// IMP=0x001000000043ddb0
- (id)getURIFromParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x001000000043d0b0
- (id)getPushTokensFromParticipantIDs:(id)arg1 participantIDs:(id)arg2;	// IMP=0x001000000043c3f0
- (id)_getPushTokenFromParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x001000000043bdc0
- (_Bool)_startQRConnectionWithDefaults:(id)arg1;	// IMP=0x001000000043b770
- (id)setupNewAllocation:(id)arg1 sessionID:(id)arg2 fromIdentity:(id)arg3 fromURI:(id)arg4 fromService:(id)arg5 options:(id)arg6 connectReadyHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000043b560
- (id)_setupNewAllocation:(id)arg1 sessionID:(id)arg2 isSessionIDRemoteDeviceID:(_Bool)arg3 fromIdentity:(id)arg4 fromURI:(id)arg5 fromService:(id)arg6 options:(id)arg7 connectReadyHandler:(CDUnknownBlockType)arg8 withPreferredLocalInterface:(int)arg9 forAdditionalAllocation:(_Bool)arg10;	// IMP=0x00100000004375e0
- (void)_sendIDQueryRequest:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x0010000000437280
- (id)_getSelfAllocationFromCache:(id)arg1;	// IMP=0x0010000000436be0
- (void)_dispatchIncomingAllocateResponse:(id)arg1 isFromCache:(_Bool)arg2 requestOptions:(id)arg3;	// IMP=0x0010000000436a30
- (_Bool)invalidateLatestResponse:(id)arg1 qrReason:(unsigned short)arg2 previousError:(unsigned short)arg3;	// IMP=0x0010000000436320
- (_Bool)_addConnectStatus:(id)arg1 relaySessionID:(id)arg2 previousTime:(unsigned long long)arg3 qrReason:(unsigned short)arg4 previousError:(unsigned short)arg5 previousRelayIP:(unsigned int)arg6 previousAccessToken:(id)arg7;	// IMP=0x0010000000435490
- (_Bool)_addResponseToCache:(id)arg1 sessionInfo:(id)arg2 modifiedMessage:(id *)arg3;	// IMP=0x0010000000433110
- (void)_notifyURIToParticipantIDMappingChange:(id)arg1;	// IMP=0x0010000000432ad0
- (void)_notifyParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x00100000004324e0
- (id)_mergeParticipantID2PushTokenMapping:(id)arg1 sourceResponse:(id)arg2 mappingChange:(_Bool *)arg3;	// IMP=0x00100000004315c0
- (_Bool)hasParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x0010000000431260
- (id)_getResponseForQRSessionID:(id)arg1 sessionID:(id)arg2 index:(long long *)arg3;	// IMP=0x0010000000430e80
- (_Bool)_shouldUseCurrentResponse:(id)arg1 cachedMessage:(id)arg2;	// IMP=0x001000000042fae0
- (id)getAllocateResponse:(id)arg1 groupID:(id)arg2;	// IMP=0x001000000042f6a0
- (void)_setResponseForQRGroupID:(id)arg1 groupID:(id)arg2;	// IMP=0x001000000042f4a0
- (id)_getResponseFromQRGroupID:(id)arg1;	// IMP=0x001000000042f1e0
- (id)setupNewAllocationToDevice:(id)arg1 options:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000042df90
- (id)_setupAllocation:(id)arg1 fromURI:(id)arg2 sessionID:(id)arg3 isSessionIDRemoteDeviceID:(_Bool)arg4 options:(id)arg5 prevConnectStatus:(CDStruct_b3ab6eb3 *)arg6 requestUUID:(id)arg7 connectReadyHandler:(CDUnknownBlockType)arg8 withPreferredLocalInterface:(int)arg9;	// IMP=0x0010000000429ba0
- (void)_sendAllocateRequest:(id)arg1;	// IMP=0x0010000000429510
- (_Bool)_sendKeepAliveRequest:(id)arg1;	// IMP=0x00100000004281d0
- (id)_queryPolicy;	// IMP=0x0010000000428150
- (id)_peerIDManager;	// IMP=0x0010000000428120
- (id)_getIDSAWDLoggingInstance;	// IMP=0x00100000004280f0
- (void)dealloc;	// IMP=0x0010000000427e40
- (id)init;	// IMP=0x0010000000427ce0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

