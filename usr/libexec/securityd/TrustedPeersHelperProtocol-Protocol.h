//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSData, NSDictionary, NSNumber, NSSet, NSString, NSUUID, OTAccountSettingsX, TPPBSecureElementIdentity, TPPolicyVersion, TrustedPeersHelperCustodianRecoveryKey, TrustedPeersHelperIntendedTPPBSecureElementIdentity;

@protocol TrustedPeersHelperProtocol
- (void)fetchAccountSettingsWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)removeEscrowCacheWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)resetAccountCDPContentsWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)getSupportAppInfoWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSData *, NSError *))arg3;
- (void)requestHealthCheckWithContainer:(NSString *)arg1 context:(NSString *)arg2 requiresEscrowCheck:(_Bool)arg3 knownFederations:(NSArray *)arg4 reply:(void (^)(_Bool, _Bool, _Bool, _Bool, OTEscrowMoveRequestContext *, NSError *))arg5;
- (void)pushHealthInquiryWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)reportHealthWithContainer:(NSString *)arg1 context:(NSString *)arg2 stateMachineState:(NSString *)arg3 trustState:(NSString *)arg4 reply:(void (^)(NSError *))arg5;
- (void)removeCustodianRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 uuid:(NSUUID *)arg3 reply:(void (^)(NSError *))arg4;
- (void)createCustodianRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 recoveryKey:(NSString *)arg3 salt:(NSString *)arg4 ckksKeys:(NSArray *)arg5 uuid:(NSUUID *)arg6 kind:(int)arg7 reply:(void (^)(NSArray *, TrustedPeersHelperCustodianRecoveryKey *, NSError *))arg8;
- (void)setRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 recoveryKey:(NSString *)arg3 salt:(NSString *)arg4 ckksKeys:(NSArray *)arg5 reply:(void (^)(NSArray *, NSError *))arg6;
- (void)fetchTrustStateWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(TrustedPeersHelperPeerState *, NSArray *, NSError *))arg3;
- (void)validatePeersWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)fetchCurrentPolicyWithContainer:(NSString *)arg1 context:(NSString *)arg2 modelIDOverride:(NSString *)arg3 isInheritedAccount:(_Bool)arg4 reply:(void (^)(TPSyncingPolicy *, int, NSError *))arg5;
- (void)fetchRecoverableTLKSharesWithContainer:(NSString *)arg1 context:(NSString *)arg2 peerID:(NSString *)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)fetchPolicyDocumentsWithContainer:(NSString *)arg1 context:(NSString *)arg2 versions:(NSSet *)arg3 reply:(void (^)(NSDictionary *, NSError *))arg4;
- (void)fetchEscrowContentsWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSData *, NSString *, NSData *, NSError *))arg3;
- (void)fetchViableEscrowRecordsWithContainer:(NSString *)arg1 context:(NSString *)arg2 forceFetch:(_Bool)arg3 reply:(void (^)(NSArray *, NSError *))arg4;
- (void)fetchViableBottlesWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSArray *, NSArray *, NSError *))arg3;
- (void)updateTLKsWithContainer:(NSString *)arg1 context:(NSString *)arg2 ckksKeys:(NSArray *)arg3 tlkShares:(NSArray *)arg4 reply:(void (^)(NSArray *, NSError *))arg5;
- (void)setPreapprovedKeysWithContainer:(NSString *)arg1 context:(NSString *)arg2 preapprovedKeys:(NSArray *)arg3 reply:(void (^)(TrustedPeersHelperPeerState *, NSError *))arg4;
- (void)updateWithContainer:(NSString *)arg1 context:(NSString *)arg2 forceRefetch:(_Bool)arg3 deviceName:(NSString *)arg4 serialNumber:(NSString *)arg5 osVersion:(NSString *)arg6 policyVersion:(NSNumber *)arg7 policySecrets:(NSDictionary *)arg8 syncUserControllableViews:(NSNumber *)arg9 secureElementIdentity:(TrustedPeersHelperIntendedTPPBSecureElementIdentity *)arg10 reply:(void (^)(TrustedPeersHelperPeerState *, TPSyncingPolicy *, NSError *))arg11;
- (void)attemptPreapprovedJoinWithContainer:(NSString *)arg1 context:(NSString *)arg2 ckksKeys:(NSArray *)arg3 tlkShares:(NSArray *)arg4 preapprovedKeys:(NSArray *)arg5 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg6;
- (void)preflightPreapprovedJoinWithContainer:(NSString *)arg1 context:(NSString *)arg2 preapprovedKeys:(NSArray *)arg3 reply:(void (^)(_Bool, NSError *))arg4;
- (void)joinWithContainer:(NSString *)arg1 context:(NSString *)arg2 voucherData:(NSData *)arg3 voucherSig:(NSData *)arg4 ckksKeys:(NSArray *)arg5 tlkShares:(NSArray *)arg6 preapprovedKeys:(NSArray *)arg7 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg8;
- (void)vouchWithCustodianRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg3 tlkShares:(NSArray *)arg4 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg5;
- (void)recoverTLKSharesForInheritorWithContainer:(NSString *)arg1 context:(NSString *)arg2 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg3 tlkShares:(NSArray *)arg4 reply:(void (^)(NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg5;
- (void)vouchWithRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 recoveryKey:(NSString *)arg3 salt:(NSString *)arg4 tlkShares:(NSArray *)arg5 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg6;
- (void)preflightVouchWithCustodianRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg3 reply:(void (^)(NSString *, TPSyncingPolicy *, NSError *))arg4;
- (void)preflightVouchWithRecoveryKeyWithContainer:(NSString *)arg1 context:(NSString *)arg2 recoveryKey:(NSString *)arg3 salt:(NSString *)arg4 reply:(void (^)(NSString *, TPSyncingPolicy *, NSError *))arg5;
- (void)vouchWithBottleWithContainer:(NSString *)arg1 context:(NSString *)arg2 bottleID:(NSString *)arg3 entropy:(NSData *)arg4 bottleSalt:(NSString *)arg5 tlkShares:(NSArray *)arg6 reply:(void (^)(NSData *, NSData *, NSArray *, TrustedPeersHelperTLKRecoveryResult *, NSError *))arg7;
- (void)preflightVouchWithBottleWithContainer:(NSString *)arg1 context:(NSString *)arg2 bottleID:(NSString *)arg3 reply:(void (^)(NSString *, TPSyncingPolicy *, _Bool, NSError *))arg4;
- (void)vouchWithContainer:(NSString *)arg1 context:(NSString *)arg2 peerID:(NSString *)arg3 permanentInfo:(NSData *)arg4 permanentInfoSig:(NSData *)arg5 stableInfo:(NSData *)arg6 stableInfoSig:(NSData *)arg7 ckksKeys:(NSArray *)arg8 reply:(void (^)(NSData *, NSData *, NSError *))arg9;
- (void)establishWithContainer:(NSString *)arg1 context:(NSString *)arg2 ckksKeys:(NSArray *)arg3 tlkShares:(NSArray *)arg4 preapprovedKeys:(NSArray *)arg5 reply:(void (^)(NSString *, NSArray *, TPSyncingPolicy *, NSError *))arg6;
- (void)prepareInheritancePeerWithContainer:(NSString *)arg1 context:(NSString *)arg2 epoch:(unsigned long long)arg3 machineID:(NSString *)arg4 bottleSalt:(NSString *)arg5 bottleID:(NSString *)arg6 modelID:(NSString *)arg7 deviceName:(NSString *)arg8 serialNumber:(NSString *)arg9 osVersion:(NSString *)arg10 policyVersion:(TPPolicyVersion *)arg11 policySecrets:(NSDictionary *)arg12 syncUserControllableViews:(int)arg13 secureElementIdentity:(TPPBSecureElementIdentity *)arg14 signingPrivKeyPersistentRef:(NSData *)arg15 encPrivKeyPersistentRef:(NSData *)arg16 crk:(TrustedPeersHelperCustodianRecoveryKey *)arg17 reply:(void (^)(NSString *, NSData *, NSData *, NSData *, NSData *, TPSyncingPolicy *, NSString *, NSArray *, NSError *))arg18;
- (void)prepareWithContainer:(NSString *)arg1 context:(NSString *)arg2 epoch:(unsigned long long)arg3 machineID:(NSString *)arg4 bottleSalt:(NSString *)arg5 bottleID:(NSString *)arg6 modelID:(NSString *)arg7 deviceName:(NSString *)arg8 serialNumber:(NSString *)arg9 osVersion:(NSString *)arg10 policyVersion:(TPPolicyVersion *)arg11 policySecrets:(NSDictionary *)arg12 syncUserControllableViews:(int)arg13 secureElementIdentity:(TPPBSecureElementIdentity *)arg14 setting:(OTAccountSettingsX *)arg15 signingPrivKeyPersistentRef:(NSData *)arg16 encPrivKeyPersistentRef:(NSData *)arg17 reply:(void (^)(NSString *, NSData *, NSData *, NSData *, NSData *, TPSyncingPolicy *, NSError *))arg18;
- (void)fetchEgoEpochWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(unsigned long long, NSError *))arg3;
- (void)fetchAllowedMachineIDsWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSSet *, NSError *))arg3;
- (void)removeAllowedMachineIDsWithContainer:(NSString *)arg1 context:(NSString *)arg2 machineIDs:(NSArray *)arg3 reply:(void (^)(NSError *))arg4;
- (void)addAllowedMachineIDsWithContainer:(NSString *)arg1 context:(NSString *)arg2 machineIDs:(NSArray *)arg3 reply:(void (^)(NSError *))arg4;
- (void)setAllowedMachineIDsWithContainer:(NSString *)arg1 context:(NSString *)arg2 allowedMachineIDs:(NSSet *)arg3 honorIDMSListChanges:(_Bool)arg4 reply:(void (^)(_Bool, NSError *))arg5;
- (void)localResetWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)resetWithContainer:(NSString *)arg1 context:(NSString *)arg2 resetReason:(long long)arg3 reply:(void (^)(NSError *))arg4;
- (void)trustStatusWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(TrustedPeersHelperEgoPeerStatus *, NSError *))arg3;
- (void)distrustPeerIDsWithContainer:(NSString *)arg1 context:(NSString *)arg2 peerIDs:(NSSet *)arg3 reply:(void (^)(NSError *))arg4;
- (void)departByDistrustingSelfWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)dumpWithContainer:(NSString *)arg1 context:(NSString *)arg2 reply:(void (^)(NSDictionary *, NSError *))arg3;
- (void)pingWithReply:(void (^)(void))arg1;
@end

