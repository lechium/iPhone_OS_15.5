//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKKSKeychainBackedKey, MISSING_TYPE, NSData, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

__attribute__((visibility("hidden")))
@interface CKKSKey
{
    _Bool _currentkey;	// 8 = 0x8
    NSString *_uuid;	// 16 = 0x10
    NSString *_parentKeyUUID;	// 24 = 0x18
    NSString<SecCKKSKeyClass> *_keyclass;	// 32 = 0x20
    NSString<SecCKKSProcessedState> *_state;	// 40 = 0x28
    CKKSKeychainBackedKey *_keycore;	// 48 = 0x30
    NSData *_wrappedKeyDataBackingStore;	// 56 = 0x38
}

+ (_Bool)intransactionRecordDeleted:(id)arg1 error:(id *)arg2;	// IMP=0x00400000000fdb22
+ (_Bool)intransactionRecordChanged:(id)arg1 resync:(_Bool)arg2 flagHandler:(id)arg3 error:(id *)arg4;	// IMP=0x00100000000fd0bd
+ (id)loadFromProtobuf:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fcdcf
+ (id)countsByClass:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fcc08
+ (id)counts:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fc9d1
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00100000000fc717
+ (id)sqlColumns;	// IMP=0x00100000000fc70a
+ (id)sqlTable;	// IMP=0x00100000000fc6fd
+ (id)localKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fc603
+ (id)remoteKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fc509
+ (id)allKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fc42f
+ (id)currentKeysForClass:(id)arg1 state:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00100000000fc2c5
+ (id)currentKeyForClass:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fc1fb
+ (id)selfWrappedKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fc0a4
+ (id)tryFromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fbf97
+ (id)tryFromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fbe76
+ (id)fromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fbd69
+ (id)fromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fbc48
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x00100000000fb919
+ (id)randomKeyWrappedBySelf:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fb8a8
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fb7d2
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000fb746
+ (id)loadKeyWithUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000fb6c1
- (void).cxx_destruct;	// IMP=0x00200000000fb64c
@property(retain) NSData *wrappedKeyDataBackingStore; // @synthesize wrappedKeyDataBackingStore=_wrappedKeyDataBackingStore;
@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) NSString<SecCKKSKeyClass> *keyclass; // @synthesize keyclass=_keyclass;
@property(retain) NSString *parentKeyUUID; // @synthesize parentKeyUUID=_parentKeyUUID;
@property(retain) NSString *uuid; // @synthesize uuid=_uuid;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x00100000000fb332
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000000fb29f
- (id)sqlValues;	// IMP=0x00100000000faea4
- (id)whereClauseToFindSelf;	// IMP=0x00100000000fad72
- (id)description;	// IMP=0x00100000000fac30
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x00100000000fa791
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x00100000000fa494
- (void)setFromCKRecord:(id)arg1;	// IMP=0x00100000000fa151
- (id)CKRecordName;	// IMP=0x00100000000fa13f
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x00100000000f9ecd
- (MISSING_TYPE *)deleteKeyMaterialFromKeychain: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000f9e4b
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00100000000f9dc9
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00100000000f9d34
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x00100000000f9cad
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f9bda
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000f9b07
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f9a51
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f999b
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f98f1
- (_Bool)tlkMaterialPresentOrRecoverableViaTLKShare:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f934f
- (_Bool)validTLK:(id *)arg1;	// IMP=0x00100000000f91a7
- (_Bool)unwrapViaTLKSharesTrustedBy:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f8bff
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x00100000000f8804
- (id)ensureKeyLoaded:(id *)arg1;	// IMP=0x00100000000f855d
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00100000000f8226
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000f8071
- (_Bool)wrapsSelf;	// IMP=0x00100000000f7ffd
@property(readonly) NSString *zoneName;
@property(readonly) NSData *wrappedKeyData;
- (id)getKeychainBackedKey:(id *)arg1;	// IMP=0x00100000000f7af1
- (_Bool)isEqual:(id)arg1;	// IMP=0x00100000000f7840
- (void)dealloc;	// IMP=0x00100000000f7811
- (id)initWithKeyCore:(id)arg1 state:(id)arg2 currentkey:(_Bool)arg3;	// IMP=0x00100000000f7659
- (id)initWithWrappedKeyData:(id)arg1 uuid:(id)arg2 parentKeyUUID:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00100000000f751d
- (id)initSelfWrappedWithAESKey:(id)arg1 uuid:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7;	// IMP=0x00100000000f731b
- (id)init;	// IMP=0x00100000000f72ec

@end

