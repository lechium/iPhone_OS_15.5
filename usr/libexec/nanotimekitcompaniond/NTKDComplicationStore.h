//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable, NSMutableDictionary, NSNumber, NSString, NSUUID, _NTKDComplicationCollectionManifest;
@protocol NTKDComplicationStoreSyncObserver, OS_dispatch_queue;

@interface NTKDComplicationStore : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSString *_storeDirectory;	// 16 = 0x10
    NSNumber *_seqId;	// 24 = 0x18
    NSNumber *_resetSeqId;	// 32 = 0x20
    NSHashTable *_observers;	// 40 = 0x28
    id <NTKDComplicationStoreSyncObserver> _syncObserver;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_observerCallbackQueue;	// 56 = 0x38
    _NTKDComplicationCollectionManifest *_manifest;	// 64 = 0x40
    NSMutableDictionary *_clientToSampleData;	// 72 = 0x48
    struct os_unfair_lock_s _clientToSampleDataLock;	// 80 = 0x50
    NSMutableDictionary *_clientIDtoComplicationDescriptors;	// 88 = 0x58
    struct os_unfair_lock_s _clientIDtoComplicationDescriptorsLock;	// 96 = 0x60
    NSMutableDictionary *_removals;	// 104 = 0x68
    NSString *_collectionIdentifier;	// 112 = 0x70
    NSUUID *_deviceUUID;	// 120 = 0x78
}

+ (void)cleanupOrphanedStoresWithCurrentDeviceUUIDs:(id)arg1;	// IMP=0x0040000000025f93
- (void).cxx_destruct;	// IMP=0x002000000002dc12
@property(readonly, nonatomic) NSUUID *deviceUUID; // @synthesize deviceUUID=_deviceUUID;
@property(readonly, nonatomic) NSString *collectionIdentifier; // @synthesize collectionIdentifier=_collectionIdentifier;
- (void)_queue_notifyDidRemoveComplicationForKey:(id)arg1 skipSyncObserver:(_Bool)arg2;	// IMP=0x001000000002d27b
- (void)_queue_notifyDidUpdateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x001000000002cf0a
- (void)_queue_notifyDidUpdateSampleTemplate:(id)arg1 forKey:(id)arg2 family:(long long)arg3 skipSyncObserver:(_Bool)arg4;	// IMP=0x001000000002ca64
- (void)_queue_loadFullCollectionForObserver:(id)arg1;	// IMP=0x001000000002c8f3
- (void)_queue_playbackChangesForObserver:(id)arg1 fromSeqId:(id)arg2;	// IMP=0x001000000002b97a
- (void)_queue_clearRemovalsThroughSeqId:(id)arg1;	// IMP=0x001000000002b81e
- (id)_queue_complicationDescriptorsForClientIdentifier:(id)arg1;	// IMP=0x001000000002b761
- (id)_queue_sampleTemplateForKey:(id)arg1 family:(long long)arg2;	// IMP=0x001000000002b5d2
- (void)_queue_incrementSeqId;	// IMP=0x001000000002b53e
- (void)_onObserverQueue_async:(CDUnknownBlockType)arg1;	// IMP=0x001000000002b490
- (void)_onQueue_async:(CDUnknownBlockType)arg1;	// IMP=0x001000000002b3e2
- (void)synchronize;	// IMP=0x001000000002b3c7
- (id)_descriptorForKey:(id)arg1;	// IMP=0x001000000002b014
- (void)_removeComplicationForKey:(id)arg1 skipSyncObserver:(_Bool)arg2;	// IMP=0x001000000002aac1
- (void)_updateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x001000000002a146
- (void)_updateLocalizableSampleDataTemplate:(id)arg1 forKey:(id)arg2 family:(long long)arg3 skipSyncObserver:(_Bool)arg4;	// IMP=0x001000000002a02b
- (void)_updateLocalizableSampleData:(id)arg1 forKey:(id)arg2 family:(long long)arg3 skipSyncObserver:(_Bool)arg4;	// IMP=0x0010000000029d70
- (void)_updateLocalizableSampleData:(id)arg1 forKey:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x0010000000029429
- (void)withoutNotifyingSyncObserverRemoveComplicationSampleTemplatesForClientIdentifier:(id)arg1 descriptor:(id)arg2;	// IMP=0x0010000000029395
- (void)withoutNotifyingUpdateLocalizableSampleDataTemplate:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3 family:(long long)arg4;	// IMP=0x00100000000292d7
- (void)withoutNotifyingUpdateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2;	// IMP=0x00100000000292bf
- (void)withoutNotifyingSyncObserverSetComplicationSampleData:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3;	// IMP=0x00100000000291fc
- (void)removeComplicationSampleTemplatesForClientIdentifier:(id)arg1 descriptor:(id)arg2;	// IMP=0x001000000002916b
- (void)updateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2;	// IMP=0x0010000000029156
- (void)updateLocalizableSampleDataTemplate:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3 family:(long long)arg4;	// IMP=0x001000000002909b
- (id)complicationDescriptorsForClientIdentifier:(id)arg1;	// IMP=0x0010000000028f37
- (id)sampleTemplateForClientIdentifier:(id)arg1 descriptor:(id)arg2 family:(long long)arg3;	// IMP=0x0010000000028d7b
- (id)clients;	// IMP=0x0010000000028c33
- (void)setVersion:(float)arg1;	// IMP=0x0010000000028b0b
- (float)version;	// IMP=0x00100000000289b9
- (void)clearSyncObserver;	// IMP=0x0010000000028953
- (void)_setupObserver:(id)arg1 withSeqId:(id)arg2 reloadSeqId:(id)arg3;	// IMP=0x0010000000028886
- (void)setSyncObserver:(id)arg1 withSeqId:(id)arg2;	// IMP=0x0010000000028779
- (void)removeObserver:(id)arg1;	// IMP=0x00100000000286ce
- (void)addObserver:(id)arg1 withSeqId:(id)arg2;	// IMP=0x00100000000284c5
- (id)complicationSampleDataForClientID:(id)arg1 descriptor:(id)arg2 decoded:(_Bool)arg3;	// IMP=0x00100000000283b7
- (void)_enumerateAllKeysForClientID:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000280a0
- (void)_faultInComplicationDescriptorsForClientID:(id)arg1;	// IMP=0x0010000000027e81
- (void)_faultInSampleDataForKey:(id)arg1;	// IMP=0x0010000000027b6c
- (void)_faultInAllClientData;	// IMP=0x0010000000027986
- (void)_validateManifestEntries;	// IMP=0x0010000000026e89
- (id)initWithCollectionIdentifier:(id)arg1 deviceUUID:(id)arg2;	// IMP=0x001000000002653f

@end

