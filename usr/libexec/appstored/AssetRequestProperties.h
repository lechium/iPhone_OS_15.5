//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSNumber, NSString, NSUUID;
@protocol AssetDataConsumer;

@interface AssetRequestProperties : NSObject
{
    _Bool _allowsAuthentication;	// 8 = 0x8
    _Bool _allowsCellularAccess;	// 9 = 0x9
    _Bool _allowsConstrainedNetworkAccess;	// 10 = 0xa
    _Bool _allowsExpensiveNetworkAccess;	// 11 = 0xb
    _Bool _allowsWatchCellularAccess;	// 12 = 0xc
    _Bool _enforceATS;	// 13 = 0xd
    _Bool _locateAssetCache;	// 14 = 0xe
    _Bool _requiresPowerPluggedIn;	// 15 = 0xf
    unsigned int _qosClass;	// 16 = 0x10
    NSString *_bundleID;	// 24 = 0x18
    NSNumber *_bytesPerSecondLimit;	// 32 = 0x20
    NSUUID *_clientIdentifier;	// 40 = 0x28
    long long _connectionPool;	// 48 = 0x30
    id <AssetDataConsumer> _dataConsumer;	// 56 = 0x38
    long long _discretionaryType;	// 64 = 0x40
    NSString *_duetBudgetingIdentifier;	// 72 = 0x48
    unsigned long long _expectedContentLength;	// 80 = 0x50
    unsigned long long _expectedDiskUsage;	// 88 = 0x58
    NSUUID *_externalID;	// 96 = 0x60
    NSNumber *_loadingPriority;	// 104 = 0x68
    NSString *_logKey;	// 112 = 0x70
    NSNumber *_maximumWatchCellularTransferSize;	// 120 = 0x78
    NSString *_networkBudgetingIdentifier;	// 128 = 0x80
    NSArray *_protocolClasses;	// 136 = 0x88
    unsigned long long _rangeOffset;	// 144 = 0x90
    long long _requestReason;	// 152 = 0x98
    NSUUID *_requestUUID;	// 160 = 0xa0
    NSNumber *_taskPriority;	// 168 = 0xa8
    NSString *_variantID;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0020000000168b21
@property(retain) NSString *variantID; // @synthesize variantID=_variantID;
@property(retain) NSNumber *taskPriority; // @synthesize taskPriority=_taskPriority;
@property(retain) NSUUID *requestUUID; // @synthesize requestUUID=_requestUUID;
@property long long requestReason; // @synthesize requestReason=_requestReason;
@property _Bool requiresPowerPluggedIn; // @synthesize requiresPowerPluggedIn=_requiresPowerPluggedIn;
@property unsigned long long rangeOffset; // @synthesize rangeOffset=_rangeOffset;
@property unsigned int qosClass; // @synthesize qosClass=_qosClass;
- (void)setProtocolClasses:(id)arg1;	// IMP=0x0010000000168a4f
- (id)protocolClasses;	// IMP=0x0010000000168a3b
@property(retain) NSString *networkBudgetingIdentifier; // @synthesize networkBudgetingIdentifier=_networkBudgetingIdentifier;
@property(retain) NSNumber *maximumWatchCellularTransferSize; // @synthesize maximumWatchCellularTransferSize=_maximumWatchCellularTransferSize;
@property(retain) NSString *logKey; // @synthesize logKey=_logKey;
@property _Bool locateAssetCache; // @synthesize locateAssetCache=_locateAssetCache;
@property(retain) NSNumber *loadingPriority; // @synthesize loadingPriority=_loadingPriority;
@property(retain) NSUUID *externalID; // @synthesize externalID=_externalID;
@property unsigned long long expectedDiskUsage; // @synthesize expectedDiskUsage=_expectedDiskUsage;
@property unsigned long long expectedContentLength; // @synthesize expectedContentLength=_expectedContentLength;
@property _Bool enforceATS; // @synthesize enforceATS=_enforceATS;
@property(retain) NSString *duetBudgetingIdentifier; // @synthesize duetBudgetingIdentifier=_duetBudgetingIdentifier;
@property long long discretionaryType; // @synthesize discretionaryType=_discretionaryType;
@property(retain) id <AssetDataConsumer> dataConsumer; // @synthesize dataConsumer=_dataConsumer;
@property long long connectionPool; // @synthesize connectionPool=_connectionPool;
@property(retain) NSUUID *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
@property(retain) NSNumber *bytesPerSecondLimit; // @synthesize bytesPerSecondLimit=_bytesPerSecondLimit;
@property(retain) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property _Bool allowsWatchCellularAccess; // @synthesize allowsWatchCellularAccess=_allowsWatchCellularAccess;
@property _Bool allowsExpensiveNetworkAccess; // @synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess;
@property _Bool allowsConstrainedNetworkAccess; // @synthesize allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccess;
@property _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property _Bool allowsAuthentication; // @synthesize allowsAuthentication=_allowsAuthentication;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000001685a0
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x001000000016858e
- (id)init;	// IMP=0x001000000016851b

@end

