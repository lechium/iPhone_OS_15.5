//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CARSessionRequestClient, CARSessionStatus, CRBluetoothManager, CRCarKitMonitoringServiceAgent, CRCarPlayPreferences, CRInstrumentClusterURLManager, CRVehicle, CRVehicleAccessory, CRVehicleAccessoryManager, CRVehicleStore, CRWiFiCarManager, CRWirelessSessionAssertionManager, NSMutableArray, NSMutableDictionary, NSNumber, NSString;

@interface CRCarKitServiceAgent : NSObject
{
    _Bool _carPlaySimulatorActive;	// 8 = 0x8
    CRCarKitMonitoringServiceAgent *_monitoringService;	// 16 = 0x10
    CRVehicleAccessoryManager *_accessoryManager;	// 24 = 0x18
    CRWirelessSessionAssertionManager *_assertionManager;	// 32 = 0x20
    CRBluetoothManager *_bluetoothManager;	// 40 = 0x28
    CRInstrumentClusterURLManager *_clusterURLManager;	// 48 = 0x30
    CRCarPlayPreferences *_preferencesManager;	// 56 = 0x38
    CARSessionStatus *_sessionStatus;	// 64 = 0x40
    CARSessionRequestClient *_sessionRequestClient;	// 72 = 0x48
    CRVehicleStore *_vehicleStore;	// 80 = 0x50
    CRWiFiCarManager *_wifiManager;	// 88 = 0x58
    NSMutableArray *_outstandingApprovalAlerts;	// 96 = 0x60
    NSMutableArray *_outstandingPairingAlerts;	// 104 = 0x68
    NSMutableArray *_outstandingEnableWiFiAlerts;	// 112 = 0x70
    NSMutableArray *_outstandingEnhancedIntegrationAlerts;	// 120 = 0x78
    NSNumber *_cachedCarPlayAllowedChangeValue;	// 128 = 0x80
    NSMutableDictionary *_serviceCountDuringAlertForBluetoothAddress;	// 136 = 0x88
    NSString *_lastStartSessionDeviceID;	// 144 = 0x90
    CRVehicleAccessory *_BTPowerAccessory;	// 152 = 0x98
    CRVehicle *_BTPowerVehicle;	// 160 = 0xa0
}

+ (unsigned long long)_declineTypeForOOBPairingVehicleAccessory:(id)arg1;	// IMP=0x002000000001ca9e
+ (unsigned long long)_pairingDeclineCountForIdentifier:(id)arg1;	// IMP=0x001000000001c97e
+ (id)_pairingIdentifierForVehicleAccessory:(id)arg1;	// IMP=0x001000000001c935
- (void).cxx_destruct;	// IMP=0x002000000001f960
@property(retain, nonatomic) CRVehicle *BTPowerVehicle; // @synthesize BTPowerVehicle=_BTPowerVehicle;
@property(retain, nonatomic) CRVehicleAccessory *BTPowerAccessory; // @synthesize BTPowerAccessory=_BTPowerAccessory;
@property(retain, nonatomic) NSString *lastStartSessionDeviceID; // @synthesize lastStartSessionDeviceID=_lastStartSessionDeviceID;
@property(retain, nonatomic) NSMutableDictionary *serviceCountDuringAlertForBluetoothAddress; // @synthesize serviceCountDuringAlertForBluetoothAddress=_serviceCountDuringAlertForBluetoothAddress;
@property(nonatomic) NSNumber *cachedCarPlayAllowedChangeValue; // @synthesize cachedCarPlayAllowedChangeValue=_cachedCarPlayAllowedChangeValue;
@property(retain, nonatomic) NSMutableArray *outstandingEnhancedIntegrationAlerts; // @synthesize outstandingEnhancedIntegrationAlerts=_outstandingEnhancedIntegrationAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingEnableWiFiAlerts; // @synthesize outstandingEnableWiFiAlerts=_outstandingEnableWiFiAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingPairingAlerts; // @synthesize outstandingPairingAlerts=_outstandingPairingAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingApprovalAlerts; // @synthesize outstandingApprovalAlerts=_outstandingApprovalAlerts;
@property(retain, nonatomic) CRWiFiCarManager *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(retain, nonatomic) CRVehicleStore *vehicleStore; // @synthesize vehicleStore=_vehicleStore;
@property(retain, nonatomic) CARSessionRequestClient *sessionRequestClient; // @synthesize sessionRequestClient=_sessionRequestClient;
@property(retain, nonatomic) CARSessionStatus *sessionStatus; // @synthesize sessionStatus=_sessionStatus;
@property(retain, nonatomic) CRCarPlayPreferences *preferencesManager; // @synthesize preferencesManager=_preferencesManager;
@property(retain, nonatomic) CRInstrumentClusterURLManager *clusterURLManager; // @synthesize clusterURLManager=_clusterURLManager;
@property(retain, nonatomic) CRBluetoothManager *bluetoothManager; // @synthesize bluetoothManager=_bluetoothManager;
@property(retain, nonatomic) CRWirelessSessionAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(retain, nonatomic) CRVehicleAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(nonatomic) __weak CRCarKitMonitoringServiceAgent *monitoringService; // @synthesize monitoringService=_monitoringService;
@property(nonatomic) _Bool carPlaySimulatorActive; // @synthesize carPlaySimulatorActive=_carPlaySimulatorActive;
- (void)sessionDidDisconnect:(id)arg1;	// IMP=0x001000000001f44d
- (void)bluetoothManager:(id)arg1 didChangePowerState:(_Bool)arg2;	// IMP=0x001000000001f366
- (void)_dismissEnhancedIntegrationAlerts;	// IMP=0x001000000001f239
- (void)_dismissEnhancedIntegrationAlertForVehicleAccessory:(id)arg1;	// IMP=0x001000000001f062
- (void)_presentEnhancedIntegrationAlertForVehicleAccessory:(id)arg1;	// IMP=0x001000000001ec31
- (void)_vehicleEnhancedIntegrationUpdated:(id)arg1 status:(unsigned long long)arg2;	// IMP=0x001000000001ea71
- (void)vehicleIdentifierForCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001e73e
- (void)_dismissReconnectionEnableWiFiAlertExceptForVehicle:(id)arg1;	// IMP=0x001000000001e4e4
- (void)_dismissReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x001000000001e28a
- (id)_presentedReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x001000000001e0b7
- (void)_presentReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x001000000001dc28
- (void)_dismissPairingAlerts;	// IMP=0x001000000001dafb
- (void)_dismissPairingAlertForVehicleAccessory:(id)arg1;	// IMP=0x001000000001d924
- (void)_beginWiredPairingWithVehicleAccessory:(id)arg1 vehicle:(id)arg2;	// IMP=0x001000000001d3ab
- (void)_presentWiredBluetoothPairingAlertForVehicleAccessory:(id)arg1 vehicle:(id)arg2;	// IMP=0x001000000001cbd7
- (void)_dismissApprovalAlerts;	// IMP=0x001000000001c808
- (void)_dismissApprovalAlertForVehicleAccessory:(id)arg1;	// IMP=0x001000000001c631
- (void)_presentApprovalAlertForVehicleAccessory:(id)arg1;	// IMP=0x001000000001bc36
- (_Bool)_requestWiFiCredentialsIfNecessaryForApprovedVehicleAccessory:(id)arg1;	// IMP=0x001000000001bbbe
- (_Bool)_sendDeviceIdentifierForVehicleAccesory:(id)arg1 pairingStatus:(unsigned long long)arg2;	// IMP=0x001000000001baf7
- (void)_sendCarPlayAvailabilityForVehicleAccessory:(id)arg1 vehicle:(id)arg2;	// IMP=0x001000000001b8f3
- (_Bool)attemptConnectionWithVehicles:(id)arg1;	// IMP=0x001000000001b2b9
- (_Bool)removeVehicle:(id)arg1;	// IMP=0x001000000001ac5e
- (id)saveVehicle:(id)arg1;	// IMP=0x001000000001a545
- (id)pairedVehiclesConnectedOnBluetooth;	// IMP=0x001000000001a292
- (void)updateVehicle:(id)arg1 usingAccessory:(id)arg2;	// IMP=0x0010000000019eb6
- (void)enumerateVehiclesForAccessories:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000019c99
- (id)vehicleMatchingAccessory:(id)arg1 inVehicles:(id)arg2;	// IMP=0x0010000000019a64
- (void)updateIncompletePairingsMatchingAccessories:(id)arg1;	// IMP=0x0010000000019492
- (void)handleCarPlayAttachedAccessories:(id)arg1;	// IMP=0x0010000000018f13
- (void)handleCarPlayAttached;	// IMP=0x0010000000018e9b
- (_Bool)_shouldPromptEnhancedIntegrationForVehicle:(id)arg1 accessory:(id)arg2;	// IMP=0x0010000000018d94
- (void)_saveWiFiCredentials:(id)arg1 forAccessoryConnectionIdentifier:(unsigned long long)arg2 result:(CDUnknownBlockType)arg3;	// IMP=0x00100000000184bb
- (_Bool)_isVehicleActionable:(id)arg1;	// IMP=0x001000000001849e
- (_Bool)_isRestricted:(id *)arg1;	// IMP=0x0010000000018409
- (_Bool)postOutOfCarNotificationForVehicle:(id)arg1;	// IMP=0x00100000000182ce
- (_Bool)postInCarNotificationForVehicle:(id)arg1;	// IMP=0x00100000000180f1
- (void)handleVehicleStoreAvailabiltyDidChange:(id)arg1;	// IMP=0x0010000000018031
- (void)_handleCarPlayAllowedDidChange;	// IMP=0x0010000000017c5f
- (void)handleCarPlayAllowedDidChange;	// IMP=0x0010000000017bea
- (void)accessoryManager:(id)arg1 didDisconnectVehicleAccessory:(id)arg2;	// IMP=0x0010000000017b85
- (void)accessoryManager:(id)arg1 didUpdateVehicleAccessory:(id)arg2;	// IMP=0x0010000000017ab9
- (void)accessoryManager:(id)arg1 didConnectVehicleAccessory:(id)arg2;	// IMP=0x0010000000017a63
- (void)fetchScaledDisplaysWithReply:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000179b1
- (id)accessoryRadarDescription:(id)arg1;	// IMP=0x0010000000017843
- (void)fetchSessionInstrumentClusterURLsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000177b6
- (void)fetchInstrumentClusterURLsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000017729
- (void)handleCarPlayDiagnosticsWithDeviceScreenshotURL:(id)arg1 carScreenshotURL:(id)arg2 attachmentURLs:(id)arg3 activeBundleIdentifier:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0010000000016df1
- (void)isCarPlayAllowedWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000016d73
- (void)handleCarPlayRestrictionChangedWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000016cd0
- (void)isEnhancedIntegrationEnabledWithCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016902
- (void)isPairedWithCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016535
- (void)allowsConnectionsForCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016156
- (void)allowsConnectionsForWiFiUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000015d52
- (void)saveWiFiCredentials:(id)arg1 forAccessoryConnectionIdentifier:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000159de
- (void)wantsCarPlayControlAdvertisingForWiFiUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000153cb
- (void)wantsCarPlayControlAdvertisingForUSBWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000015023
- (void)handleCarPlayConnectionRequestForConnectionID:(unsigned int)arg1 startSessionProperties:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001488e
- (void)isBluetoothInCarWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000144e5
- (void)handleDidDisconnectBluetoothAddress:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000014314
- (void)handleDidConnectBluetoothAddress:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000013ad9
- (void)hasVehiclesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000139f5
- (void)fetchAllVehiclesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001376e
- (void)removeVehicle:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000013628
- (void)saveVehicle:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000013419
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0010000000012ed2
- (void)dealloc;	// IMP=0x0010000000012e5d
- (id)initWithVehicleStore:(id)arg1 sessionStatus:(id)arg2 connectionTimeServiceAgent:(id)arg3;	// IMP=0x0010000000012a4c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

