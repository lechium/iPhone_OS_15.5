//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ACXDevice, NPSDomainAccessor, NSDictionary, NSMutableDictionary, NSMutableSet;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface ACXGizmoState : NSObject
{
    _Bool _needsReunionSync;	// 8 = 0x8
    _Bool _hasCompletedInitialPairedSync;	// 9 = 0x9
    ACXDevice *_device;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_stateQueue;	// 24 = 0x18
    NPSDomainAccessor *_npsDomain;	// 32 = 0x20
    NSMutableDictionary *_appStates;	// 40 = 0x28
    NSMutableSet *_pendingAppUpdateStates;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_cleanUpPendingUpdateStateTimer;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x0020000000054adf
@property(retain, nonatomic) NSObject<OS_dispatch_source> *cleanUpPendingUpdateStateTimer; // @synthesize cleanUpPendingUpdateStateTimer=_cleanUpPendingUpdateStateTimer;
@property(readonly, nonatomic) NSMutableSet *pendingAppUpdateStates; // @synthesize pendingAppUpdateStates=_pendingAppUpdateStates;
@property(retain, nonatomic) NSMutableDictionary *appStates; // @synthesize appStates=_appStates;
@property(readonly, nonatomic) NPSDomainAccessor *npsDomain; // @synthesize npsDomain=_npsDomain;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *stateQueue; // @synthesize stateQueue=_stateQueue;
@property(readonly, nonatomic) ACXDevice *device; // @synthesize device=_device;
@property(readonly, nonatomic) _Bool hasCompletedInitialPairedSync; // @synthesize hasCompletedInitialPairedSync=_hasCompletedInitialPairedSync;
- (void)initialPairedSyncComplete;	// IMP=0x001000000005499b
- (void)_removeSockPuppetSettings;	// IMP=0x00100000000548a7
- (_Bool)_init_migrateSockPuppetSettings;	// IMP=0x0010000000054136
- (void)recordApplicationInstallationMetrics:(id)arg1 automaticInstall:(_Bool)arg2 isUpdate:(_Bool)arg3;	// IMP=0x0010000000054130
- (void)noteTrustAddedApps:(id)arg1 trustRemovedApps:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000053448
- (void)processNewStatusUpdates:(id)arg1 updatedStatusUpdates:(id)arg2 removedStatusUpdates:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000052f49
- (_Bool)_onQueue_pendingInstallStateShouldBeIgnoredForApp:(id)arg1 existingState:(id)arg2 newState:(id)arg3;	// IMP=0x0010000000052dad
- (void)noteNewApps:(id)arg1 updatedApps:(id)arg2 removedApps:(id)arg3 transitioningAppBundleIDs:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000005137c
- (id)bundleIDsOfAllInstalledApps;	// IMP=0x00100000000511b6
- (void)dumpCurrentStateToLog;	// IMP=0x0010000000050fc5
- (long long)exportedAppStateForDeviceState:(unsigned long long)arg1;	// IMP=0x0010000000050f6a
- (void)setWatchKitAppExecutableHash:(id)arg1 forApp:(id)arg2;	// IMP=0x0010000000050e12
- (id)watchKitAppExecutableHashForBundleID:(id)arg1;	// IMP=0x0010000000050c48
- (id)preferencesForApplicationWithIdentifier:(id)arg1;	// IMP=0x001000000005088b
- (void)cancelUpdatePendingForCompanionApp:(id)arg1;	// IMP=0x00100000000507bd
- (void)_onQueue_cancelUpdatePendingForCompanionApp:(id)arg1;	// IMP=0x001000000005064e
- (void)setUpdatePendingForCompanionApp:(id)arg1;	// IMP=0x0010000000050580
- (void)_onQueue_setUpdatePendingForCompanionApp:(id)arg1;	// IMP=0x0010000000050453
- (_Bool)updatePendingForCompanionApp:(id)arg1;	// IMP=0x001000000005031b
- (_Bool)_onQueue_updatePendingForCompanionApp:(id)arg1;	// IMP=0x0010000000050253
- (void)_onQueue_setUpPendingUpdateStateTimer;	// IMP=0x0010000000050061
- (void)_onQueue_cancelPendingUpdateStateTimer;	// IMP=0x001000000004ff9f
- (_Bool)_onQueue_cleanUpExpiredPendingUpdateStates;	// IMP=0x001000000004fd33
@property(readonly, copy, nonatomic) NSDictionary *pendingApps;
- (void)purgeInstallStatusForApps:(id)arg1;	// IMP=0x001000000004fa05
- (void)markInstalledAsPending;	// IMP=0x001000000004f79c
- (void)clearPendingInstallations;	// IMP=0x001000000004f530
- (_Bool)iterateInstallStatusAndClearNeedsReunionSyncWithIterator:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000004f11d
- (_Bool)setInstallStatusForApps:(id)arg1 sendNotification:(_Bool)arg2 withUpdatePredicate:(CDUnknownBlockType)arg3;	// IMP=0x001000000004ef0d
- (_Bool)_onQueue_setInstallStatusForApps:(id)arg1 sendNotification:(_Bool)arg2 withUpdatePredicate:(CDUnknownBlockType)arg3;	// IMP=0x001000000004e786
- (_Bool)setInstallStatusForApps:(id)arg1;	// IMP=0x001000000004e76c
- (void)setInstallStatus:(unsigned long long)arg1 forApp:(id)arg2 companionBundleID:(id)arg3;	// IMP=0x001000000004e3e4
- (void)regenerateAllUniqueInstallIDs;	// IMP=0x001000000004e316
- (id)appStateForApp:(id)arg1;	// IMP=0x001000000004e154
- (id)uniqueInstallIDForApp:(id)arg1;	// IMP=0x001000000004df5d
- (unsigned long long)installStatusForApp:(id)arg1;	// IMP=0x001000000004ddce
@property(nonatomic) _Bool needsReunionSync;
@property(readonly, nonatomic) _Bool initiallyInstallAllApps;
@property(readonly, nonatomic) _Bool alwaysInstallApps;
- (void)_onQueue_saveState;	// IMP=0x001000000004d559
- (void)_init_loadState;	// IMP=0x001000000004c87d
@property(readonly, nonatomic) _Bool gizmoIsActivePairedDevice;
- (id)initWithDevice:(id)arg1;	// IMP=0x001000000004c6e8

@end

